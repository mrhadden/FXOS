  Sat Jul 10 2021  1:15                                                Page 1


                     ***************************************
                     **      WDC 65C816 Macro Assembler   **
                     **                                   **
                     **     Version 3.49.1- Feb  6 2006    **
                     ***************************************

     1                        ;:ts=8
     2             00000001   R0	equ	1
     3             00000005   R1	equ	5
     4             00000009   R2	equ	9
     5             0000000D   R3	equ	13
     6                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxkernel.c",0
     7                        ;
     8                        ;#include "fxkernel.h"
     9                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxkernel.h",0
    10                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos.h",0
    11                        	.file	"G:\devtools\WDCTools\wdc\Tools\include\
                    stdlib.h",0
    12                        	.file	"G:\devtools\WDCTools\wdc\Tools\include\
                    stddef.h",0
    13                        	.line	88
    14                        	.file	"G:\devtools\WDCTools\wdc\Tools\include\
                    stdlib.h",43
    15                        	.stag	fake1_,32,1
    16                        	.member	quot,0,5,8,16
    17                        	.member	rem,16,5,8,16
    18                        	.eos
    19                        	.stag	fake2_,64,2
    20                        	.member	quot,0,7,8,32
    21                        	.member	rem,32,7,8,32
    22                        	.eos
    23                        	.stag	int_sqrt,32,3
    24                        	.member	sqrt,0,16,8,16
    25                        	.member	frac,16,16,8,16
    26                        	.eos
    27                        	.line	205
    28                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos.h",4
    29                        	.file	"G:\devtools\WDCTools\wdc\Tools\include\
                    string.h",0
    30                        	.line	134
    31                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos.h",5
    32                        	.file	"G:\devtools\WDCTools\wdc\Tools\include\
                    ctype.h",0
    33                        	.line	103
    34                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos.h",6
    35                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxtypes.h",0
    36                        	.stag	_fx_bytebits,8,4
    37                        	.member	b7,0,14,17,1
    38                        	.member	b6,1,14,17,1
    39                        	.member	b5,2,14,17,1
    40                        	.member	b4,3,14,17,1
  Sat Jul 10 2021  1:15                                                Page 2


    41                        	.member	b3,4,14,17,1
    42                        	.member	b2,5,14,17,1
    43                        	.member	b1,6,14,17,1
    44                        	.member	b0,7,14,17,1
    45                        	.eos
    46                        	.stag	_fx_node,384,5
    47                        	.member	type,0,14,8,8
    48                        	.member	Reserved0,8,14,8,8
    49                        	.member	data,16,129,8,32
    50                        	.member	last,48,138,8,32,5
    51                        	.member	next,80,138,8,32,5
    52                        	.member	name,112,110,8,0,32
    53                        	.member	Reserved1,368,16,8,16
    54                        	.eos
    55                        	.stag	_fx_nodelist,96,6
    56                        	.member	listhead,0,138,8,32,5
    57                        	.member	listData,32,129,8,32
    58                        	.member	deallocator,64,641,8,32
    59                        	.eos
    60                        	.stag	_fx_queue,80,7
    61                        	.member	count,0,5,8,16
    62                        	.member	front,16,138,8,32,5
    63                        	.member	rear,48,138,8,32,5
    64                        	.eos
    65                        	.stag	fake8_,32,8
    66                        	.member	subsystem,0,14,8,8
    67                        	.member	level,8,14,8,8
    68                        	.member	error,16,16,8,16
    69                        	.eos
    70                        	.stag	_fx_process_signal,16,9
    71                        	.member	cbSize,0,16,8,16
    72                        	.eos
    73                        	.stag	_fx_semaphore,16,10
    74                        	.member	reserved,0,5,8,16
    75                        	.eos
    76                        	.stag	_fx_fileBlock,552,11
    77                        	.member	openCount,0,16,8,16
    78                        	.member	lockCount,16,16,8,16
    79                        	.member	dirty,32,14,8,8
    80                        	.member	fileBuffer,40,110,8,0,64
    81                        	.eos
    82                        	.stag	_fx_irq_data,48,12
    83                        	.member	line,0,5,8,16
    84                        	.member	keycode,16,142,8,32
    85                        	.eos
    86                        	.stag	_task,48,13
    87                        	.member	SPL,0,14,8,8
    88                        	.member	SPH,8,14,8,8
    89                        	.member	pstack,16,142,8,32
    90                        	.eos
    91                        	.stag	_task_stack,32,14
    92                        	.member	SS,0,142,8,32
    93                        	.eos
    94                        	.stag	int_regs,104,15
    95                        	.member	PB,0,14,8,8
    96                        	.member	PH,8,14,8,8
    97                        	.member	PL,16,14,8,8
    98                        	.member	PP,24,14,8,8
  Sat Jul 10 2021  1:15                                                Page 3


    99                        	.member	DB,32,14,8,8
   100                        	.member	DH,40,14,8,8
   101                        	.member	DL,48,14,8,8
   102                        	.member	AH,56,14,8,8
   103                        	.member	AL,64,14,8,8
   104                        	.member	XH,72,14,8,8
   105                        	.member	XL,80,14,8,8
   106                        	.member	YH,88,14,8,8
   107                        	.member	YL,96,14,8,8
   108                        	.eos
   109                        	.stag	_fx_eventMessage,304,16
   110                        	.member	src,0,18,8,32
   111                        	.member	dest,32,18,8,32
   112                        	.member	type,64,16,8,16
   113                        	.member	hwnd,80,129,8,32
   114                        	.member	pheap,112,129,8,32
   115                        	.member	msgTime,144,18,8,32
   116                        	.member	data,176,110,8,0,16
   117                        	.eos
   118                        	.stag	_fx_cmdMessage,304,17
   119                        	.member	src,0,18,8,32
   120                        	.member	dest,32,18,8,32
   121                        	.member	type,64,16,8,16
   122                        	.member	hwnd,80,129,8,32
   123                        	.member	pheap,112,129,8,32
   124                        	.member	msgTime,144,18,8,32
   125                        	.member	cmdCId,176,16,8,16
   126                        	.member	cmdMId,192,16,8,16
   127                        	.member	parameter1,208,18,8,32
   128                        	.member	parameter2,240,18,8,32
   129                        	.member	parameter3,272,18,8,32
   130                        	.eos
   131                        	.stag	_fx_console_ctl,448,18
   132                        	.member	maxCols,0,5,8,16
   133                        	.member	maxRows,16,5,8,16
   134                        	.member	curX,32,5,8,16
   135                        	.member	curY,48,5,8,16
   136                        	.member	fgColor,64,5,8,16
   137                        	.member	bgColor,80,5,8,16
   138                        	.member	mode,96,14,8,8
   139                        	.member	kbBuffer,104,101,8,0,16
   140                        	.member	screenBuffer,360,142,8,32
   141                        	.member	desktopMode,392,14,8,8
   142                        	.member	lastMouseButton,400,5,8,16
   143                        	.member	lastMouseX,416,5,8,16
   144                        	.member	lastMouseY,432,5,8,16
   145                        	.eos
   146                        	.stag	_fx_desktop_ctl,392,19
   147                        	.member	desktopMode,0,14,8,8
   148                        	.member	cursorCtl,8,5,8,16
   149                        	.member	cursorState,24,5,8,16
   150                        	.member	backgroundColor,40,5,8,16
   151                        	.member	foregroundColor,56,5,8,16
   152                        	.member	menuMode,72,5,8,16
   153                        	.member	lastMouseButton,88,5,8,16
   154                        	.member	lastMouseX,104,5,8,16
   155                        	.member	lastMouseY,120,5,8,16
   156                        	.member	currentDiskName,136,142,8,32
  Sat Jul 10 2021  1:15                                                Page 4


   157                        	.member	diskNodes,168,129,8,32
   158                        	.member	titleNodes,200,129,8,32
   159                        	.member	menuNodes,232,129,8,32
   160                        	.member	iconNodes,264,129,8,32
   161                        	.member	windowNodes,296,129,8,32
   162                        	.member	fontNodes,328,129,8,32
   163                        	.member	wndProc,360,138,8,32,6
   164                        	.eos
   165                        	.stag	_fx_process,800,20
   166                        	.member	cbSize,0,5,8,16
   167                        	.member	procId,16,18,8,32
   168                        	.member	parentId,48,18,8,32
   169                        	.member	ctx,80,129,8,32
   170                        	.member	userId,112,16,8,16
   171                        	.member	status,128,16,8,16
   172                        	.member	foregroundActive,144,14,8,8
   173                        	.member	tls,152,1121,8,32,8
   174                        	.member	commandLine,408,142,8,32
   175                        	.member	semaphores,440,138,8,32,6
   176                        	.member	fileHandles,472,138,8,32,6
   177                        	.member	pathList,504,138,8,32,6
   178                        	.member	resources,536,138,8,32,6
   179                        	.member	timerAware,568,14,8,8
   180                        	.member	timerTicks,576,112,8,0,2
   181                        	.member	timerTickCount,608,112,8,0,2
   182                        	.member	kernelError,640,10,8,32,8
   183                        	.member	consoleCtl,672,138,8,32,18
   184                        	.member	desktopCtl,704,138,8,32,19
   185                        	.member	execProc,736,641,8,32
   186                        	.member	startupArgs,768,129,8,32
   187                        	.eos
   188                        	.stag	_fxProcessMessage,112,21
   189                        	.member	src,0,18,8,32
   190                        	.member	dest,32,18,8,32
   191                        	.member	type,64,16,8,16
   192                        	.member	processInfo,80,138,8,32,20
   193                        	.eos
   194                        	.stag	_k_key_state,112,22
   195                        	.member	scanCode,0,14,8,8
   196                        	.member	isShifted,8,14,8,8
   197                        	.member	isAlt,16,14,8,8
   198                        	.member	isExtended,24,14,8,8
   199                        	.member	isCapsLock,32,14,8,8
   200                        	.member	isNumLock,40,14,8,8
   201                        	.member	isScrollLock,48,14,8,8
   202                        	.member	keyChar,56,16,8,16
   203                        	.member	scanTime,72,18,8,32
   204                        	.member	ledStatus,104,14,8,8
   205                        	.eos
   206                        	.stag	_fx_property,384,23
   207                        	.member	name,0,110,8,0,16
   208                        	.member	value,128,110,8,0,32
   209                        	.eos
   210                        	.utag	_24bitPointer,32,24
   211                        	.member	address,0,142,11,32
   212                        	.member	bytes,0,110,11,0,4
   213                        	.eos
   214                        	.stag	_PointStruct,32,25
  Sat Jul 10 2021  1:15                                                Page 5


   215                        	.member	x,0,5,8,16
   216                        	.member	y,16,5,8,16
   217                        	.eos
   218                        	.stag	_RectStruct,112,26
   219                        	.member	x,0,5,8,16
   220                        	.member	y,16,5,8,16
   221                        	.member	z,32,18,8,32
   222                        	.member	width,64,5,8,16
   223                        	.member	height,80,5,8,16
   224                        	.member	attr,96,5,8,16
   225                        	.eos
   226                        	.stag	fake27_,96,27
   227                        	.member	name,0,142,8,32
   228                        	.member	topLeft,32,10,8,32,25
   229                        	.member	bottomRight,64,10,8,32,25
   230                        	.eos
   231                        	.stag	fake28_,112,28
   232                        	.member	x,0,5,8,16
   233                        	.member	y,16,5,8,16
   234                        	.member	z,32,5,8,16
   235                        	.member	width,48,5,8,16
   236                        	.member	height,64,5,8,16
   237                        	.member	data,80,18,8,32
   238                        	.eos
   239                        	.stag	_k_WindowClass,272,29
   240                        	.member	cbSize,0,16,8,16
   241                        	.member	style,16,16,8,16
   242                        	.member	styleEx,32,16,8,16
   243                        	.member	pWndProc,48,654,8,32
   244                        	.member	hInstance,80,129,8,32
   245                        	.member	hIcon,112,129,8,32
   246                        	.member	hCursor,144,129,8,32
   247                        	.member	hbrBackground,176,129,8,32
   248                        	.member	lpszMenuName,208,142,8,32
   249                        	.member	lpszClassName,240,142,8,32
   250                        	.eos
   251                        	.stag	_ClickableRect,152,30
   252                        	.member	area,0,10,8,112,26
   253                        	.member	z,112,18,8,32
   254                        	.member	enabled,144,14,8,8
   255                        	.eos
   256                        	.stag	_NCClickableRect,136,31
   257                        	.member	area,0,10,8,112,26
   258                        	.member	msgType,112,16,8,16
   259                        	.member	enabled,128,14,8,8
   260                        	.eos
   261                        	.stag	_DragData,216,32
   262                        	.member	area,0,10,8,112,26
   263                        	.member	xoffset,112,5,8,16
   264                        	.member	yoffset,128,5,8,16
   265                        	.member	msgType,144,16,8,16
   266                        	.member	ncAction,160,16,8,16
   267                        	.member	isDrag,176,14,8,8
   268                        	.member	isResize,184,14,8,8
   269                        	.member	canDrag,192,14,8,8
   270                        	.member	canDrop,200,14,8,8
   271                        	.member	didDrag,208,14,8,8
   272                        	.eos
  Sat Jul 10 2021  1:15                                                Page 6


   273                        	.stag	_k_WindowStruct,3904,33
   274                        	.member	cbSize,0,16,8,16
   275                        	.member	style,16,18,8,32
   276                        	.member	styleEx,48,18,8,32
   277                        	.member	win_id,80,5,8,16
   278                        	.member	win_x,96,5,8,16
   279                        	.member	win_y,112,5,8,16
   280                        	.member	win_width,128,5,8,16
   281                        	.member	win_height,144,5,8,16
   282                        	.member	win_xoffset,160,5,8,16
   283                        	.member	win_yoffset,176,5,8,16
   284                        	.member	win_cxoffset,192,5,8,16
   285                        	.member	win_cyoffset,208,5,8,16
   286                        	.member	wndRect,224,10,8,112,26
   287                        	.member	clientRect,336,10,8,112,26
   288                        	.member	nonclientGadgets,448,106,8,0,31,16
   289                        	.member	clickable,2624,129,8,32
   290                        	.member	win_title,2656,110,8,0,32
   291                        	.member	Reserved0,2912,16,8,16
   292                        	.member	win_class,2928,110,8,0,16
   293                        	.member	win_class_name,3056,110,8,0,32
   294                        	.member	nBitmapLayer,3312,16,8,16
   295                        	.member	bgRegion,3328,129,8,32
   296                        	.member	procid,3360,18,8,32
   297                        	.member	pWndClass,3392,138,8,32,29
   298                        	.member	pParentWindow,3424,129,8,32
   299                        	.member	hMenu,3456,129,8,32
   300                        	.member	hPointer,3488,129,8,32
   301                        	.member	hBackground,3520,129,8,32
   302                        	.member	pChildWindows,3552,138,8,32,6
   303                        	.member	pChildHitList,3584,138,8,32,6
   304                        	.member	isVisible,3616,14,8,8
   305                        	.member	windowData,3624,129,8,32
   306                        	.member	clientData,3656,1121,8,32,6
   307                        	.member	isClosed,3848,14,8,8
   308                        	.member	isClosing,3856,14,8,8
   309                        	.member	isDesktop,3864,14,8,8
   310                        	.member	clickableNode,3872,138,8,32,5
   311                        	.eos
   312                        	.stag	_k_WindowStructEx,3880,34
   313                        	.member	cbSize,0,16,8,16
   314                        	.member	style,16,18,8,32
   315                        	.member	styleEx,48,18,8,32
   316                        	.member	win_id,80,5,8,16
   317                        	.member	win_x,96,5,8,16
   318                        	.member	win_y,112,5,8,16
   319                        	.member	win_width,128,5,8,16
   320                        	.member	win_height,144,5,8,16
   321                        	.member	win_xoffset,160,5,8,16
   322                        	.member	win_yoffset,176,5,8,16
   323                        	.member	win_cxoffset,192,5,8,16
   324                        	.member	win_cyoffset,208,5,8,16
   325                        	.member	wndRect,224,10,8,112,26
   326                        	.member	clientRect,336,10,8,112,26
   327                        	.member	nonclientGadgets,448,106,8,0,31,16
   328                        	.member	clickable,2624,129,8,32
   329                        	.member	win_title,2656,110,8,0,32
   330                        	.member	Reserved0,2912,16,8,16
  Sat Jul 10 2021  1:15                                                Page 7


   331                        	.member	win_class,2928,110,8,0,16
   332                        	.member	nBitmapLayer,3056,16,8,16
   333                        	.member	procid,3072,18,8,32
   334                        	.member	pWndClass,3104,138,8,32,29
   335                        	.member	pParentWindow,3136,129,8,32
   336                        	.member	hMenu,3168,129,8,32
   337                        	.member	hPointer,3200,129,8,32
   338                        	.member	hBackground,3232,129,8,32
   339                        	.member	pChildWindows,3264,138,8,32,6
   340                        	.member	pChildHitList,3296,138,8,32,6
   341                        	.member	isVisible,3328,14,8,8
   342                        	.member	windowData,3336,129,8,32
   343                        	.member	clientData,3368,1121,8,32,4
   344                        	.member	isClosed,3496,14,8,8
   345                        	.member	hWnd,3504,129,8,32
   346                        	.member	localRect,3536,10,8,112,26
   347                        	.member	globalRect,3648,10,8,112,26
   348                        	.member	clientOffsetRect,3760,10,8,112,26
   349                        	.member	isDesktop,3872,14,8,8
   350                        	.eos
   351                        	.stag	_FontMetric,32,35
   352                        	.member	width,0,5,8,16
   353                        	.member	height,16,5,8,16
   354                        	.eos
   355                        	.stag	_MenuStruct,280,36
   356                        	.member	cx,0,5,8,16
   357                        	.member	cy,16,5,8,16
   358                        	.member	width,32,5,8,16
   359                        	.member	height,48,5,8,16
   360                        	.member	fcolor,64,14,8,8
   361                        	.member	bcolor,72,14,8,8
   362                        	.member	chromeLeft,80,14,8,8
   363                        	.member	chromeRight1,88,14,8,8
   364                        	.member	chromeRight2,96,14,8,8
   365                        	.member	hFont,104,129,8,32
   366                        	.member	itemId,136,16,8,16
   367                        	.member	pCaption,152,142,8,32
   368                        	.member	subMenus,184,138,8,32,6
   369                        	.member	pBackground,216,129,8,32
   370                        	.member	hWndOwner,248,129,8,32
   371                        	.eos
   372                        	.stag	fake37_,160,37
   373                        	.member	menuId,0,16,8,16
   374                        	.member	caption,16,142,8,32
   375                        	.member	rect,48,10,8,112,26
   376                        	.eos
   377                        	.stag	fake38_,5152,38
   378                        	.member	pParent,0,138,8,32,33
   379                        	.member	rect,32,10,8,112,26
   380                        	.member	captions,144,1134,8,32,24
   381                        	.member	chrome,912,110,8,0,24
   382                        	.member	ids,1104,112,8,0,24
   383                        	.member	clickable,1488,106,8,0,30,24
   384                        	.member	selected,5136,16,8,16
   385                        	.eos
   386                        	.stag	_fx_button_t,96,39
   387                        	.member	pCaption,0,142,8,32
   388                        	.member	cCaption,32,16,8,16
  Sat Jul 10 2021  1:15                                                Page 8


   389                        	.member	data,48,129,8,32
   390                        	.member	captionPixelWidth,80,16,8,16
   391                        	.eos
   392                        	.stag	_fx_scrollbar_t,240,40
   393                        	.member	min,0,16,8,16
   394                        	.member	max,16,16,8,16
   395                        	.member	increment,32,16,8,16
   396                        	.member	stopsize,48,16,8,16
   397                        	.member	location,64,5,8,16
   398                        	.member	state,80,5,8,16
   399                        	.member	rectThumb,96,10,8,112,26
   400                        	.member	data,208,129,8,32
   401                        	.eos
   402                        	.stag	_fx_listbox_t,240,41
   403                        	.member	pos,0,5,8,16
   404                        	.member	selected,16,16,8,16
   405                        	.member	offsetX,32,5,8,16
   406                        	.member	offsetY,48,5,8,16
   407                        	.member	inc,64,5,8,16
   408                        	.member	direction,80,5,8,16
   409                        	.member	top,96,5,8,16
   410                        	.member	bottom,112,5,8,16
   411                        	.member	indexTop,128,5,8,16
   412                        	.member	indexBottom,144,5,8,16
   413                        	.member	maxItems,160,16,8,16
   414                        	.member	fontSet,176,142,8,32
   415                        	.member	data,208,129,8,32
   416                        	.eos
   417                        	.stag	_fx_textbox_t,144,42
   418                        	.member	pos,0,5,8,16
   419                        	.member	selected,16,16,8,16
   420                        	.member	offsetX,32,5,8,16
   421                        	.member	offsetY,48,5,8,16
   422                        	.member	isShifted,64,14,8,8
   423                        	.member	cursorState,72,14,8,8
   424                        	.member	fontSet,80,142,8,32
   425                        	.member	data,112,129,8,32
   426                        	.eos
   427                        	.stag	_fx_msgbox_t,144,43
   428                        	.member	pos,0,5,8,16
   429                        	.member	selected,16,16,8,16
   430                        	.member	offsetX,32,5,8,16
   431                        	.member	offsetY,48,5,8,16
   432                        	.member	isShifted,64,14,8,8
   433                        	.member	cursorState,72,14,8,8
   434                        	.member	fontSet,80,142,8,32
   435                        	.member	data,112,129,8,32
   436                        	.eos
   437                        	.stag	_fx_menuAnchor_t,272,44
   438                        	.member	pCaption,0,142,8,32
   439                        	.member	renderLayoutX,32,16,8,16
   440                        	.member	renderLayoutY,48,16,8,16
   441                        	.member	captionPixelWidth,64,16,8,16
   442                        	.member	data,80,129,8,32
   443                        	.member	droppedWindow,112,138,8,32,33
   444                        	.member	bytes,144,110,8,0,16
   445                        	.eos
   446                        	.stag	_SubMenuStruct,64,45
  Sat Jul 10 2021  1:15                                                Page 9


   447                        	.member	caption,0,142,8,32
   448                        	.member	action,32,641,8,32
   449                        	.eos
   450                        	.stag	_SubMenuListStruct,40,46
   451                        	.member	cMenus,0,14,8,8
   452                        	.member	psubmenus,8,9354,8,32,45
   453                        	.eos
   454                        	.stag	_fx_ComBuffer,2080,47
   455                        	.member	cbSize,0,16,8,16
   456                        	.member	cbBuffer,16,16,8,16
   457                        	.member	buffer,32,110,8,0,256
   458                        	.eos
   459                        	.stag	_fx_resource_header,72,48
   460                        	.member	magic,0,110,8,0,4
   461                        	.member	major,32,14,8,8
   462                        	.member	minor,40,14,8,8
   463                        	.member	type,48,14,8,8
   464                        	.member	reserved,56,14,8,8
   465                        	.member	resheaderSize,64,14,8,8
   466                        	.eos
   467                        	.stag	_fx_resource_header_font,144,49
   468                        	.member	title,0,110,8,0,16
   469                        	.member	height,128,14,8,8
   470                        	.member	width,136,14,8,8
   471                        	.eos
   472                        	.line	1010
   473                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos.h",8
   474                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxstringtable.h",0
   475                        	.line	89
   476                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos.h",9
   477                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxc256u.h",0
   478                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxtypes.h",0
   479                        	.line	1010
   480                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxc256u.h",5
   481                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fmx_vicky.h",0
   482                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxtypes.h",0
   483                        	.line	1010
   484                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fmx_vicky.h",11
   485                        	.line	72
   486                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxc256u.h",6
   487                        	.line	1960
   488                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos.h",16
   489                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxkernel.h",0
   490                        	.line	400
   491                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos.h",22
  Sat Jul 10 2021  1:15                                                Page 10


   492                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxconsole.h",0
   493                        	.file	"G:\devtools\WDCTools\wdc\Tools\include\
                    string.h",0
   494                        	.line	134
   495                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxconsole.h",5
   496                        	.file	"G:\devtools\WDCTools\wdc\Tools\include\
                    stdlib.h",0
   497                        	.line	205
   498                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxconsole.h",6
   499                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxtypes.h",0
   500                        	.line	1010
   501                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxconsole.h",7
   502                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxc256u.h",0
   503                        	.line	1960
   504                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxconsole.h",12
   505                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxstring.h",0
   506                        	.file	"G:\devtools\WDCTools\wdc\Tools\include\
                    stdlib.h",0
   507                        	.line	205
   508                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxstring.h",5
   509                        	.file	"G:\devtools\WDCTools\wdc\Tools\include\
                    string.h",0
   510                        	.line	134
   511                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxstring.h",6
   512                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxtypes.h",0
   513                        	.line	1010
   514                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxstring.h",7
   515                        	.stag	_fx_string,64,50
   516                        	.member	size,0,16,8,16
   517                        	.member	pos,16,5,8,16
   518                        	.member	buffer,32,142,8,32
   519                        	.eos
   520                        	.line	139
   521                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxconsole.h",17
   522                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxeventmanager.h",0
   523                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos.h",0
   524                        	.line	30
   525                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxeventmanager.h",5
   526                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxexec.h",0
   527                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxtypes.h",0
  Sat Jul 10 2021  1:15                                                Page 11


   528                        	.line	1010
   529                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxexec.h",5
   530                        	.stag	_fxos_executive_vtable,128,51
   531                        	.member	Init,0,8833,8,32
   532                        	.member	Configure,32,656,8,32
   533                        	.member	Query,64,656,8,32
   534                        	.member	Uninit,96,641,8,32
   535                        	.eos
   536                        	.line	86
   537                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxeventmanager.h",6
   538                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxnode.h",0
   539                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxtypes.h",0
   540                        	.line	1010
   541                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxnode.h",11
   542                        	.line	114
   543                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxeventmanager.h",7
   544                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxconsole.h",0
   545                        	.line	208
   546                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxeventmanager.h",8
   547                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxwindowmanager.h",0
   548                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos.h",0
   549                        	.line	30
   550                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxwindowmanager.h",5
   551                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxmemorymanager.h",0
   552                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos.h",0
   553                        	.line	30
   554                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxmemorymanager.h",5
   555                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\umm_malloc_cfg.h",0
   556                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos_build_parameters.h",0
   557                        	.line	35
   558                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\umm_malloc_cfg.h",8
   559                        	.stag	UMM_HEAP_INFO_t,256,52
   560                        	.member	totalEntries,0,18,8,32
   561                        	.member	usedEntries,32,18,8,32
   562                        	.member	freeEntries,64,18,8,32
   563                        	.member	totalBlocks,96,18,8,32
   564                        	.member	usedBlocks,128,18,8,32
   565                        	.member	freeBlocks,160,18,8,32
   566                        	.member	maxFreeContiguousBlocks,192,18,8,32
   567                        	.member	blockSize,224,18,8,32
   568                        	.eos
  Sat Jul 10 2021  1:15                                                Page 12


   569                        	.line	199
   570                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxmemorymanager.h",6
   571                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\umm_malloc.h",0
   572                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxtypes.h",0
   573                        	.line	1010
   574                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\umm_malloc.h",11
   575                        	.line	24
   576                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxmemorymanager.h",7
   577                        	.stag	_fx_memory_map,2072,53
   578                        	.member	availableMemory,0,18,8,32
   579                        	.member	valid_segments,32,110,8,0,255
   580                        	.eos
   581                        	.stag	_fx_ipc_port,144,54
   582                        	.member	id,0,18,8,32
   583                        	.member	type,32,14,8,8
   584                        	.member	name,40,138,8,32,50
   585                        	.member	time,72,18,8,32
   586                        	.member	queue,104,138,8,32,7
   587                        	.member	reserved_1,136,14,8,8
   588                        	.eos
   589                        	.line	105
   590                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxwindowmanager.h",6
   591                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxeventmanager.h",0
   592                        	.line	564
   593                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxwindowmanager.h",7
   594                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxgui.h",0
   595                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxfont.h",0
   596                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxtypes.h",0
   597                        	.line	1010
   598                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxfont.h",6
   599                        	.line	74
   600                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxgui.h",5
   601                        	.stag	_click_detected,64,55
   602                        	.member	window,0,138,8,32,33
   603                        	.member	handler,32,641,8,32
   604                        	.eos
   605                        	.stag	_current_palette_map,400,56
   606                        	.member	CUR_DESKTOP,0,5,8,16
   607                        	.member	CUR_BACKGROUND,16,5,8,16
   608                        	.member	CUR_FONT,32,5,8,16
   609                        	.member	CUR_SELECTED_FONT,48,5,8,16
   610                        	.member	CUR_HIGHLIGHT_COLOR,64,5,8,16
   611                        	.member	CUR_WINDOWFRAME,80,5,8,16
   612                        	.member	CUR_WINDOWBORDER,96,5,8,16
   613                        	.member	CUR_WINDOWSHADOW,112,5,8,16
  Sat Jul 10 2021  1:15                                                Page 13


   614                        	.member	CUR_MENU,128,5,8,16
   615                        	.member	CUR_GADGET,144,5,8,16
   616                        	.member	CUR_COLOR,160,101,8,0,15
   617                        	.eos
   618                        	.line	359
   619                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxwindowmanager.h",8
   620                        	.stag	_fxos_winman_vtable,160,57
   621                        	.member	Events,0,641,8,32
   622                        	.member	ConfigureWindowManager,32,656,8,32
   623                        	.member	ProcessWindowEvent,64,8833,8,32
   624                        	.member	QueryWindowManager,96,656,8,32
   625                        	.member	DoWndProcs,128,641,8,32
   626                        	.eos
   627                        	.stag	fake58_,64,58
   628                        	.member	type,0,16,8,16
   629                        	.member	size,16,16,8,16
   630                        	.member	desktopAction,32,129,8,32
   631                        	.eos
   632                        	.stag	fake59_,96,59
   633                        	.member	type,0,16,8,16
   634                        	.member	caption,16,138,8,32,50
   635                        	.member	buttonType,48,16,8,16
   636                        	.member	x,64,5,8,16
   637                        	.member	y,80,5,8,16
   638                        	.eos
   639                        	.stag	_childMessage_t,64,60
   640                        	.member	msgType,0,16,8,16
   641                        	.member	msgData,16,129,8,32
   642                        	.member	dataSize,48,16,8,16
   643                        	.eos
   644                        	.line	581
   645                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxeventmanager.h",9
   646                        	.stag	_fx_main_loopvars,16,61
   647                        	.member	dummy,0,5,8,16
   648                        	.eos
   649                        	.stag	_fxMouseMessageData,64,62
   650                        	.member	button1,0,14,8,8
   651                        	.member	button2,8,14,8,8
   652                        	.member	button3,16,14,8,8
   653                        	.member	button4,24,14,8,8
   654                        	.member	x,32,16,8,16
   655                        	.member	y,48,16,8,16
   656                        	.eos
   657                        	.utag	marshalled_data,32,63
   658                        	.member	byteValue,0,14,11,8
   659                        	.member	verbValue,0,110,11,0,2
   660                        	.member	intValue,0,16,11,16
   661                        	.member	longValue,0,18,11,32
   662                        	.member	pointerValue,0,129,11,32
   663                        	.eos
   664                        	.stag	_fx_eventProcess,64,64
   665                        	.member	process,0,138,8,32,20
   666                        	.member	eventProc,32,641,8,32
   667                        	.eos
   668                        	.stag	_mouse_msg_state,184,65
   669                        	.member	lastEvent,0,18,8,32
  Sat Jul 10 2021  1:15                                                Page 14


   670                        	.member	buttonLeftDown,32,14,8,8
   671                        	.member	lastLeftDown,40,18,8,32
   672                        	.member	buttonRightDown,72,14,8,8
   673                        	.member	lastRightDown,80,18,8,32
   674                        	.member	buttonMiddleDown,112,14,8,8
   675                        	.member	lastMiddleDown,120,18,8,32
   676                        	.member	lastX,152,16,8,16
   677                        	.member	lastY,168,16,8,16
   678                        	.eos
   679                        	.stag	_fxos_eventmanager_vtable,192,66
   680                        	.member	EventQueue,0,138,8,32,7
   681                        	.member	Init,32,8833,8,32
   682                        	.member	Run,64,656,8,32
   683                        	.member	Configure,96,656,8,32
   684                        	.member	Query,128,656,8,32
   685                        	.member	Uninit,160,641,8,32
   686                        	.eos
   687                        	.stag	_k_clipboard_data,168,67
   688                        	.member	type,0,14,8,8
   689                        	.member	readable,8,110,8,0,16
   690                        	.member	data,136,129,8,32
   691                        	.eos
   692                        	.line	564
   693                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxconsole.h",18
   694                        	.stag	_fx_spinner_ctx,48,68
   695                        	.member	index,0,5,8,16
   696                        	.member	spinner,16,142,8,32
   697                        	.eos
   698                        	.stag	_fx_console_ctx,1144,69
   699                        	.member	lineBufferIndex,0,5,8,16
   700                        	.member	lineBuffer,16,110,8,0,128
   701                        	.member	isShifted,1040,14,8,8
   702                        	.member	userData,1048,129,8,32
   703                        	.member	screenBuffer,1080,129,8,32
   704                        	.member	Reserved1,1112,129,8,32
   705                        	.eos
   706                        	.stag	_token,64,70
   707                        	.member	type,0,5,8,16
   708                        	.member	depth,16,16,8,16
   709                        	.member	text,32,142,8,32
   710                        	.eos
   711                        	.stag	_command_args,64,71
   712                        	.member	proc,0,656,8,32
   713                        	.member	tokens,32,138,8,32,5
   714                        	.eos
   715                        	.line	208
   716                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos.h",23
   717                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxstring.h",0
   718                        	.line	139
   719                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos.h",24
   720                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxnode.h",0
   721                        	.line	114
   722                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
  Sat Jul 10 2021  1:15                                                Page 15


                    space\FXOSv1\src\fxos.h",25
   723                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\ff.h",0
   724                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\ffconf.h",0
   725                        	.line	298
   726                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\ff.h",29
   727                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxtypes.h",0
   728                        	.line	1010
   729                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\ff.h",30
   730                        	.stag	fake72_,4504,72
   731                        	.member	fs_type,0,14,8,8
   732                        	.member	pdrv,8,14,8,8
   733                        	.member	n_fats,16,14,8,8
   734                        	.member	wflag,24,14,8,8
   735                        	.member	fsi_flag,32,14,8,8
   736                        	.member	id,40,5,8,16
   737                        	.member	n_rootdir,56,5,8,16
   738                        	.member	csize,72,5,8,16
   739                        	.member	lfnbuf,88,144,8,32
   740                        	.member	last_clst,120,18,8,32
   741                        	.member	free_clst,152,18,8,32
   742                        	.member	n_fatent,184,18,8,32
   743                        	.member	fsize,216,18,8,32
   744                        	.member	volbase,248,18,8,32
   745                        	.member	fatbase,280,18,8,32
   746                        	.member	dirbase,312,18,8,32
   747                        	.member	database,344,18,8,32
   748                        	.member	winsect,376,18,8,32
   749                        	.member	win,408,110,8,0,512
   750                        	.eos
   751                        	.stag	fake73_,128,73
   752                        	.member	fs,0,138,8,32,72
   753                        	.member	id,32,5,8,16
   754                        	.member	attr,48,14,8,8
   755                        	.member	stat,56,14,8,8
   756                        	.member	sclust,64,18,8,32
   757                        	.member	objsize,96,18,8,32
   758                        	.eos
   759                        	.stag	fake74_,4400,74
   760                        	.member	obj,0,10,8,128,73
   761                        	.member	flag,128,14,8,8
   762                        	.member	err,136,14,8,8
   763                        	.member	fptr,144,18,8,32
   764                        	.member	clust,176,18,8,32
   765                        	.member	sect,208,18,8,32
   766                        	.member	dir_sect,240,18,8,32
   767                        	.member	dir_ptr,272,142,8,32
   768                        	.member	buf,304,110,8,0,512
   769                        	.eos
   770                        	.stag	fake75_,416,75
   771                        	.member	obj,0,10,8,128,73
   772                        	.member	dptr,128,18,8,32
   773                        	.member	clust,160,18,8,32
   774                        	.member	sect,192,18,8,32
  Sat Jul 10 2021  1:15                                                Page 16


   775                        	.member	dir,224,142,8,32
   776                        	.member	fn,256,110,8,0,12
   777                        	.member	blk_ofs,352,18,8,32
   778                        	.member	pat,384,142,8,32
   779                        	.eos
   780                        	.stag	fake76_,2224,76
   781                        	.member	fsize,0,18,8,32
   782                        	.member	fdate,32,5,8,16
   783                        	.member	ftime,48,5,8,16
   784                        	.member	fattrib,64,14,8,8
   785                        	.member	altname,72,110,8,0,13
   786                        	.member	fname,176,110,8,0,256
   787                        	.eos
   788                        	.stag	fake77_,80,77
   789                        	.member	fmt,0,14,8,8
   790                        	.member	n_fat,8,14,8,8
   791                        	.member	align,16,16,8,16
   792                        	.member	n_root,32,16,8,16
   793                        	.member	au_size,48,18,8,32
   794                        	.eos
   795                        	.line	429
   796                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos.h",26
   797                        	.line	30
   798                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxkernel.h",5
   799                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxnode.h",0
   800                        	.line	114
   801                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxkernel.h",6
   802                        	.stag	_fx_api_call_table,8192,78
   803                        	.member	call_table,0,1121,8,32,256
   804                        	.eos
   805                        	.stag	_fx_zero_page,824,79
   806                        	.member	fxos_mouse_byte_0,0,14,8,8
   807                        	.member	fxos_mouse_byte_1,8,14,8,8
   808                        	.member	fxos_mouse_byte_2,16,14,8,8
   809                        	.member	fxos_mouse_byte_t,24,14,8,8
   810                        	.member	fxos_mouse_byte_x_l,32,14,8,8
   811                        	.member	fxos_mouse_byte_x_h,40,14,8,8
   812                        	.member	fxos_mouse_byte_y_l,48,14,8,8
   813                        	.member	fxos_mouse_byte_y_h,56,14,8,8
   814                        	.member	fxos_key_byte_0,64,14,8,8
   815                        	.member	fxos_key_byte_1,72,14,8,8
   816                        	.member	fxos_key_byte_2,80,14,8,8
   817                        	.member	fxos_mouse_ctl,88,14,8,8
   818                        	.member	fxos_mouse_index,96,14,8,8
   819                        	.member	fxos_mouse_status,104,14,8,8
   820                        	.member	fxos_mouse_dbg_1,112,18,8,32
   821                        	.member	fxos_mouse_dbg_2,144,18,8,32
   822                        	.member	fxos_mouse_dbg_3,176,18,8,32
   823                        	.member	fxos_vicky_byte_0,208,14,8,8
   824                        	.member	fxos_vicky_byte_1,216,14,8,8
   825                        	.member	fxos_vicky_byte_2,224,14,8,8
   826                        	.member	VersionMajor,232,16,8,16
   827                        	.member	VersionMinor,248,16,8,16
   828                        	.member	VersionRelease,264,16,8,16
  Sat Jul 10 2021  1:15                                                Page 17


   829                        	.member	topMemory,280,18,8,32
   830                        	.member	bottomMemory,312,18,8,32
   831                        	.member	availableMemory,344,18,8,32
   832                        	.member	availableMemoryK,376,18,8,32
   833                        	.member	availableHeapMemory,408,18,8,32
   834                        	.member	availableHeapMemoryK,440,18,8,32
   835                        	.member	fxos_console_row,472,16,8,16
   836                        	.member	fxos_console_col,488,16,8,16
   837                        	.member	executive,504,129,8,32
   838                        	.member	eventmanager,536,129,8,32
   839                        	.member	devicemanager,568,129,8,32
   840                        	.member	windowmanager,600,129,8,32
   841                        	.member	fxos_kernel_api,632,138,8,32,78
   842                        	.member	fxos_dos_api,664,138,8,32,78
   843                        	.member	fxos_gfx_api,696,138,8,32,78
   844                        	.member	fxos_gui_api,728,138,8,32,78
   845                        	.member	fxos_con_api,760,138,8,32,78
   846                        	.member	fxos_reserved_2_api,792,138,8,32,78
   847                        	.eos
   848                        	.stag	_fx_environment,96,80
   849                        	.member	variables,0,142,8,32
   850                        	.member	reserved1,32,5,8,16
   851                        	.member	reserved2,48,5,8,16
   852                        	.member	reserved3,64,5,8,16
   853                        	.member	reserved4,80,5,8,16
   854                        	.eos
   855                        	.stag	_debug_byte_bits,8,81
   856                        	.member	bit7,0,14,17,1
   857                        	.member	bit6,1,14,17,1
   858                        	.member	bit5,2,14,17,1
   859                        	.member	bit4,3,14,17,1
   860                        	.member	bit3,4,14,17,1
   861                        	.member	bit2,5,14,17,1
   862                        	.member	bit1,6,14,17,1
   863                        	.member	bit0,7,14,17,1
   864                        	.eos
   865                        	.stag	_k_segmentheader,160,82
   866                        	.member	version_major,0,14,8,8
   867                        	.member	version_minor,8,14,8,8
   868                        	.member	length,16,5,8,16
   869                        	.member	segment_start_addr,32,7,8,32
   870                        	.member	segment_end_addr,64,7,8,32
   871                        	.member	segment_size,96,7,8,32
   872                        	.member	main_entry_addr,128,7,8,32
   873                        	.eos
   874                        	.stag	_fx_device_driver,776,83
   875                        	.member	name,0,110,8,0,32
   876                        	.member	version,256,110,8,0,16
   877                        	.member	hmajor,384,110,8,0,8
   878                        	.member	hminor,448,110,8,0,8
   879                        	.member	type,512,14,8,8
   880                        	.member	designation,520,110,8,0,6
   881                        	.member	reserved_1,568,16,8,16
   882                        	.member	f_driver_irq,584,129,8,32
   883                        	.member	driver_context,616,129,8,32
   884                        	.member	f_driver_load,648,129,8,32
   885                        	.member	f_driver_read,680,129,8,32
   886                        	.member	f_driver_write,712,129,8,32
  Sat Jul 10 2021  1:15                                                Page 18


   887                        	.member	f_driver_unload,744,129,8,32
   888                        	.eos
   889                        	.stag	_fx_block_device_driver,808,84
   890                        	.member	name,0,110,8,0,32
   891                        	.member	version,256,110,8,0,16
   892                        	.member	hmajor,384,110,8,0,8
   893                        	.member	hminor,448,110,8,0,8
   894                        	.member	type,512,14,8,8
   895                        	.member	designation,520,110,8,0,6
   896                        	.member	reserved_1,568,16,8,16
   897                        	.member	f_driver_irq,584,129,8,32
   898                        	.member	driver_context,616,129,8,32
   899                        	.member	f_driver_load,648,129,8,32
   900                        	.member	f_driver_read,680,129,8,32
   901                        	.member	f_driver_write,712,129,8,32
   902                        	.member	f_driver_unload,744,129,8,32
   903                        	.member	f_driver_command,776,129,8,32
   904                        	.eos
   905                        	.line	400
   906                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxkernel.c",2
   907                        ;#include <stdarg.h>
   908                        	.file	"G:\devtools\WDCTools\wdc\Tools\include\
                    stdarg.h",0
   909                        	.line	51
   910                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxkernel.c",3
   911                        ;
   912                        ;//void *heap_start=(void FAR *)0x030000,*heap_end
                    =(void FAR *)(0x04FFFF);
   913                        ;
   914                        ;static ULONG FXOSVERSION = 0x010000;
   915                        	data
   916                        ~~FXOSVERSION:
   917 00:0000: 00 00 01 00  	dl	$10000
   918 00:0004:              	ends
   919                        ;static LPSTR FXOSVERSIONSTRING = "FX/OS Version 1
                    .0.0 Beta";
   920                        	data
   921                        ~~FXOSVERSIONSTRING:
   922 00:0004: xx xx xx xx  	dl	L1+0
   923 00:0008:              	ends
   924                        	data
   925                        L1:
   926 00:0008: 46 58 2F 4F  	db	$46,$58,$2F,$4F,$53,$20,$56,$65,$72,$73,
                    $69,$6F,$6E,$20,$31
       00:000C: 53 20 56 65 
       00:0010: 72 73 69 6F 
       00:0014: 6E 20 31 
   927 00:0017: 2E 30 2E 30  	db	$2E,$30,$2E,$30,$20,$42,$65,$74,$61,$00
       00:001B: 20 42 65 74 
       00:001F: 61 00 
   928 00:0021:              	ends
   929                        ;
   930                        ;static BOOL _k_isOSDebug = FALSE;
   931                        	data
   932                        ~~_k_isOSDebug:
   933 00:0021: 00           	db	$0
  Sat Jul 10 2021  1:15                                                Page 19


   934 00:0022:              	ends
   935                        ;
   936                        ;static char k16buffer[16];
   937                        ;
   938                        ;static KERNELTRAPCALL *KERNEL_FUNCTION_TABLE;
   939                        ;
   940                        ;static FXKERNEL_API_CALLTABLE fx_kernel_api_table
                    ;
   941                        ;static FXKERNEL_API_CALLTABLE fx_dos_api_table;
   942                        ;static FXKERNEL_API_CALLTABLE fx_gfx_api_table;
   943                        ;static FXKERNEL_API_CALLTABLE fx_gui_api_table;
   944                        ;static FXKERNEL_API_CALLTABLE fx_con_api_table;
   945                        ;
   946                        ;void k_delay_nop(void)
   947                        ;{
   948                        	.line	22
   949                        	.line	23
   950                        	code
   951                        	xdef	~~k_delay_nop
   952                        	func
   953                        	.function	23
   954                        ~~k_delay_nop:
   955                        	longa	on
   956                        	longi	on
   957 00:0000: 3B           	tsc
   958 00:0001: 38           	sec
   959 00:0002: E9 00 00     	sbc	#L3
   960 00:0005: 1B           	tcs
   961 00:0006: 0B           	phd
   962 00:0007: 5B           	tcd
   963                        	.block	23
   964                        ;	asm NOP;
   965                        	.line	24
   966                        	asmstart
   967 00:0008: EA           	NOP
   968                        	asmend
   969                        ;	asm NOP;
   970                        	.line	25
   971                        	asmstart
   972 00:0009: EA           	NOP
   973                        	asmend
   974                        ;	asm NOP;
   975                        	.line	26
   976                        	asmstart
   977 00:000A: EA           	NOP
   978                        	asmend
   979                        ;	asm NOP;
   980                        	.line	27
   981                        	asmstart
   982 00:000B: EA           	NOP
   983                        	asmend
   984                        ;	asm NOP;
   985                        	.line	28
   986                        	asmstart
   987 00:000C: EA           	NOP
   988                        	asmend
   989                        ;	asm NOP;
   990                        	.line	29
  Sat Jul 10 2021  1:15                                                Page 20


   991                        	asmstart
   992 00:000D: EA           	NOP
   993                        	asmend
   994                        ;	asm NOP;
   995                        	.line	30
   996                        	asmstart
   997 00:000E: EA           	NOP
   998                        	asmend
   999                        ;	asm NOP;
  1000                        	.line	31
  1001                        	asmstart
  1002 00:000F: EA           	NOP
  1003                        	asmend
  1004                        ;	asm NOP;
  1005                        	.line	32
  1006                        	asmstart
  1007 00:0010: EA           	NOP
  1008                        	asmend
  1009                        ;	asm NOP;
  1010                        	.line	33
  1011                        	asmstart
  1012 00:0011: EA           	NOP
  1013                        	asmend
  1014                        ;}
  1015                        	.line	34
  1016                        L6:
  1017 00:0012: 2B           	pld
  1018 00:0013: 3B           	tsc
  1019 00:0014: 18           	clc
  1020 00:0015: 69 00 00     	adc	#L3
  1021 00:0018: 1B           	tcs
  1022 00:0019: 6B           	rtl
  1023                        	.endblock	34
  1024             00000000   L3	equ	0
  1025             00000001   L4	equ	1
  1026                        	ends
  1027                        	efunc
  1028                        	.endfunc	34,1,0
  1029                        	.line	34
  1030                        ;
  1031                        ;void k_delay_1(void)
  1032                        ;{
  1033                        	.line	36
  1034                        	.line	37
  1035                        	code
  1036                        	xdef	~~k_delay_1
  1037                        	func
  1038                        	.function	37
  1039                        ~~k_delay_1:
  1040                        	longa	on
  1041                        	longi	on
  1042 00:001A: 3B           	tsc
  1043 00:001B: 38           	sec
  1044 00:001C: E9 02 00     	sbc	#L7
  1045 00:001F: 1B           	tcs
  1046 00:0020: 0B           	phd
  1047 00:0021: 5B           	tcd
  1048                        	.block	37
  Sat Jul 10 2021  1:15                                                Page 21


  1049                        ;	int c = 0;
  1050                        ;
  1051                        ;	for(c=0;c<10;c++)
  1052             00000000   c_1	set	0
  1053                        	.sym	c,0,5,1,16
  1054 00:0022: 64 01        	stz	<L8+c_1
  1055                        	.line	40
  1056 00:0024: 64 01        	stz	<L8+c_1
  1057                        L10003:
  1058                        ;	{
  1059                        	.line	41
  1060                        ;		k_delay_nop();
  1061                        	.line	42
  1062 00:0026: 22 xx xx xx  	jsl	~~k_delay_nop
  1063                        ;	}
  1064                        	.line	43
  1065                        L10001:
  1066 00:002A: E6 01        	inc	<L8+c_1
  1067 00:002C: 38           	sec
  1068 00:002D: A5 01        	lda	<L8+c_1
  1069 00:002F: E9 0A 00     	sbc	#<$a
  1070 00:0032: 70 03        	bvs	L10
  1071 00:0034: 49 00 80     	eor	#$8000
  1072                        L10:
  1073 00:0037: 30 03        	bmi	L11
  1074 00:0039: 82 EA FF     	brl	L10003
  1075                        L11:
  1076                        L10002:
  1077                        ;}
  1078                        	.line	44
  1079                        L12:
  1080 00:003C: 2B           	pld
  1081 00:003D: 3B           	tsc
  1082 00:003E: 18           	clc
  1083 00:003F: 69 02 00     	adc	#L7
  1084 00:0042: 1B           	tcs
  1085 00:0043: 6B           	rtl
  1086                        	.endblock	44
  1087             00000002   L7	equ	2
  1088             00000001   L8	equ	1
  1089                        	ends
  1090                        	efunc
  1091                        	.endfunc	44,1,2
  1092                        	.line	44
  1093                        ;
  1094                        ;void k_delay_1ms(void)
  1095                        ;{
  1096                        	.line	46
  1097                        	.line	47
  1098                        	code
  1099                        	xdef	~~k_delay_1ms
  1100                        	func
  1101                        	.function	47
  1102                        ~~k_delay_1ms:
  1103                        	longa	on
  1104                        	longi	on
  1105 00:0044: 3B           	tsc
  1106 00:0045: 38           	sec
  Sat Jul 10 2021  1:15                                                Page 22


  1107 00:0046: E9 00 00     	sbc	#L13
  1108 00:0049: 1B           	tcs
  1109 00:004A: 0B           	phd
  1110 00:004B: 5B           	tcd
  1111                        	.block	47
  1112                        ;	k_delay_1();
  1113                        	.line	48
  1114 00:004C: 22 xx xx xx  	jsl	~~k_delay_1
  1115                        ;}
  1116                        	.line	49
  1117                        L16:
  1118 00:0050: 2B           	pld
  1119 00:0051: 3B           	tsc
  1120 00:0052: 18           	clc
  1121 00:0053: 69 00 00     	adc	#L13
  1122 00:0056: 1B           	tcs
  1123 00:0057: 6B           	rtl
  1124                        	.endblock	49
  1125             00000000   L13	equ	0
  1126             00000001   L14	equ	1
  1127                        	ends
  1128                        	efunc
  1129                        	.endfunc	49,1,0
  1130                        	.line	49
  1131                        ;
  1132                        ;void sleep(int msec)
  1133                        ;{
  1134                        	.line	51
  1135                        	.line	52
  1136                        	code
  1137                        	xdef	~~sleep
  1138                        	func
  1139                        	.function	52
  1140                        ~~sleep:
  1141                        	longa	on
  1142                        	longi	on
  1143 00:0058: 3B           	tsc
  1144 00:0059: 38           	sec
  1145 00:005A: E9 02 00     	sbc	#L17
  1146 00:005D: 1B           	tcs
  1147 00:005E: 0B           	phd
  1148 00:005F: 5B           	tcd
  1149             00000004   msec_0	set	4
  1150                        	.block	52
  1151                        ;	int c = 0;
  1152                        ;	for(c=0;c<msec;c++)
  1153             00000000   c_1	set	0
  1154                        	.sym	c,0,5,1,16
  1155                        	.sym	msec,4,5,6,16
  1156 00:0060: 64 01        	stz	<L18+c_1
  1157                        	.line	54
  1158 00:0062: 64 01        	stz	<L18+c_1
  1159 00:0064: 82 06 00     	brl	L10007
  1160                        L10006:
  1161                        ;	{
  1162                        	.line	55
  1163                        ;		k_delay_1ms();
  1164                        	.line	56
  Sat Jul 10 2021  1:15                                                Page 23


  1165 00:0067: 22 xx xx xx  	jsl	~~k_delay_1ms
  1166                        ;	}
  1167                        	.line	57
  1168                        L10004:
  1169 00:006B: E6 01        	inc	<L18+c_1
  1170                        L10007:
  1171 00:006D: 38           	sec
  1172 00:006E: A5 01        	lda	<L18+c_1
  1173 00:0070: E5 06        	sbc	<L17+msec_0
  1174 00:0072: 70 03        	bvs	L20
  1175 00:0074: 49 00 80     	eor	#$8000
  1176                        L20:
  1177 00:0077: 30 03        	bmi	L21
  1178 00:0079: 82 EB FF     	brl	L10006
  1179                        L21:
  1180                        L10005:
  1181                        ;}
  1182                        	.line	58
  1183                        L22:
  1184 00:007C: A5 04        	lda	<L17+2
  1185 00:007E: 85 06        	sta	<L17+2+2
  1186 00:0080: A5 03        	lda	<L17+1
  1187 00:0082: 85 05        	sta	<L17+1+2
  1188 00:0084: 2B           	pld
  1189 00:0085: 3B           	tsc
  1190 00:0086: 18           	clc
  1191 00:0087: 69 04 00     	adc	#L17+2
  1192 00:008A: 1B           	tcs
  1193 00:008B: 6B           	rtl
  1194                        	.endblock	58
  1195             00000002   L17	equ	2
  1196             00000001   L18	equ	1
  1197                        	ends
  1198                        	efunc
  1199                        	.endfunc	58,1,2
  1200                        	.line	58
  1201                        ;
  1202                        ;/*
  1203                        ; *
  1204                        ; *
  1205                        ; *
  1206                        ; *
  1207                        ; */
  1208                        ;LPSTR k_getFXOSVersionName(void)
  1209                        ;{
  1210                        	.line	66
  1211                        	.line	67
  1212                        	code
  1213                        	xdef	~~k_getFXOSVersionName
  1214                        	func
  1215                        	.function	67
  1216                        ~~k_getFXOSVersionName:
  1217                        	longa	on
  1218                        	longi	on
  1219 00:008C: 3B           	tsc
  1220 00:008D: 38           	sec
  1221 00:008E: E9 00 00     	sbc	#L23
  1222 00:0091: 1B           	tcs
  Sat Jul 10 2021  1:15                                                Page 24


  1223 00:0092: 0B           	phd
  1224 00:0093: 5B           	tcd
  1225                        	.block	67
  1226                        ;	return FXOSVERSIONSTRING;
  1227                        	.line	68
  1228 00:0094: AE xx xx     	ldx	|~~FXOSVERSIONSTRING+2
  1229 00:0097: AD xx xx     	lda	|~~FXOSVERSIONSTRING
  1230                        L26:
  1231 00:009A: A8           	tay
  1232 00:009B: 2B           	pld
  1233 00:009C: 3B           	tsc
  1234 00:009D: 18           	clc
  1235 00:009E: 69 00 00     	adc	#L23
  1236 00:00A1: 1B           	tcs
  1237 00:00A2: 98           	tya
  1238 00:00A3: 6B           	rtl
  1239                        ;}
  1240                        	.line	69
  1241                        	.endblock	69
  1242             00000000   L23	equ	0
  1243             00000001   L24	equ	1
  1244                        	ends
  1245                        	efunc
  1246                        	.endfunc	69,1,0
  1247                        	.line	69
  1248                        ;
  1249                        ;PFXZEROPAGE k_getZeroPage(void)
  1250                        ;{
  1251                        	.line	71
  1252                        	.line	72
  1253                        	code
  1254                        	xdef	~~k_getZeroPage
  1255                        	func
  1256                        	.function	72
  1257                        ~~k_getZeroPage:
  1258                        	longa	on
  1259                        	longi	on
  1260 00:00A4: 3B           	tsc
  1261 00:00A5: 38           	sec
  1262 00:00A6: E9 00 00     	sbc	#L27
  1263 00:00A9: 1B           	tcs
  1264 00:00AA: 0B           	phd
  1265 00:00AB: 5B           	tcd
  1266                        	.block	72
  1267                        ;	return (PFXZEROPAGE)ZEROPAGE;
  1268                        	.line	73
  1269 00:00AC: A9 00 00     	lda	#$0
  1270 00:00AF: AA           	tax
  1271 00:00B0: A9 00 15     	lda	#$1500
  1272                        L30:
  1273 00:00B3: A8           	tay
  1274 00:00B4: 2B           	pld
  1275 00:00B5: 3B           	tsc
  1276 00:00B6: 18           	clc
  1277 00:00B7: 69 00 00     	adc	#L27
  1278 00:00BA: 1B           	tcs
  1279 00:00BB: 98           	tya
  1280 00:00BC: 6B           	rtl
  Sat Jul 10 2021  1:15                                                Page 25


  1281                        ;}
  1282                        	.line	74
  1283                        	.endblock	74
  1284             00000000   L27	equ	0
  1285             00000001   L28	equ	1
  1286                        	ends
  1287                        	efunc
  1288                        	.endfunc	74,1,0
  1289                        	.line	74
  1290                        ;
  1291                        ;KERNELTRAPCALL FAR *k_getKernelTrapTable(VOID)
  1292                        ;{
  1293                        	.line	76
  1294                        	.line	77
  1295                        	code
  1296                        	xdef	~~k_getKernelTrapTable
  1297                        	func
  1298                        	.function	77
  1299                        ~~k_getKernelTrapTable:
  1300                        	longa	on
  1301                        	longi	on
  1302 00:00BD: 3B           	tsc
  1303 00:00BE: 38           	sec
  1304 00:00BF: E9 00 00     	sbc	#L31
  1305 00:00C2: 1B           	tcs
  1306 00:00C3: 0B           	phd
  1307 00:00C4: 5B           	tcd
  1308                        	.block	77
  1309                        ;	return KERNEL_FUNCTION_TABLE;
  1310                        	.line	78
  1311 00:00C5: AE xx xx     	ldx	|~~KERNEL_FUNCTION_TABLE+2
  1312 00:00C8: AD xx xx     	lda	|~~KERNEL_FUNCTION_TABLE
  1313                        L34:
  1314 00:00CB: A8           	tay
  1315 00:00CC: 2B           	pld
  1316 00:00CD: 3B           	tsc
  1317 00:00CE: 18           	clc
  1318 00:00CF: 69 00 00     	adc	#L31
  1319 00:00D2: 1B           	tcs
  1320 00:00D3: 98           	tya
  1321 00:00D4: 6B           	rtl
  1322                        ;}
  1323                        	.line	79
  1324                        	.endblock	79
  1325             00000000   L31	equ	0
  1326             00000001   L32	equ	1
  1327                        	ends
  1328                        	efunc
  1329                        	.endfunc	79,1,0
  1330                        	.line	79
  1331                        ;
  1332                        ;PFXZEROPAGE k_initializeZeroPage(VOID)
  1333                        ;{
  1334                        	.line	81
  1335                        	.line	82
  1336                        	code
  1337                        	xdef	~~k_initializeZeroPage
  1338                        	func
  Sat Jul 10 2021  1:15                                                Page 26


  1339                        	.function	82
  1340                        ~~k_initializeZeroPage:
  1341                        	longa	on
  1342                        	longi	on
  1343 00:00D5: 3B           	tsc
  1344 00:00D6: 38           	sec
  1345 00:00D7: E9 08 00     	sbc	#L35
  1346 00:00DA: 1B           	tcs
  1347 00:00DB: 0B           	phd
  1348 00:00DC: 5B           	tcd
  1349                        	.block	82
  1350                        ;	PFXZEROPAGE zp =  k_getZeroPage();
  1351                        ;
  1352                        ;	memset(zp,0,sizeof(FXZEROPAGE));
  1353             00000000   zp_1	set	0
  1354                        	.sym	zp,0,138,1,32,79
  1355 00:00DD: 22 xx xx xx  	jsl	~~k_getZeroPage
  1356 00:00E1: 85 05        	sta	<L36+zp_1
  1357 00:00E3: 86 07        	stx	<L36+zp_1+2
  1358                        	.line	85
  1359 00:00E5: F4 67 00     	pea	#<$67
  1360 00:00E8: F4 00 00     	pea	#<$0
  1361 00:00EB: D4 07        	pei	<L36+zp_1+2
  1362 00:00ED: D4 05        	pei	<L36+zp_1
  1363 00:00EF: 22 xx xx xx  	jsl	~~memset
  1364                        ;
  1365                        ;	//k_get_c256_release(zp->boardRelease);
  1366                        ;
  1367                        ;	zp->VersionMajor    = 0;
  1368                        	.line	89
  1369 00:00F3: A9 00 00     	lda	#$0
  1370 00:00F6: A0 1D 00     	ldy	#$1d
  1371 00:00F9: 97 05        	sta	[<L36+zp_1],Y
  1372                        ;	zp->VersionMinor    = 5;
  1373                        	.line	90
  1374 00:00FB: A9 05 00     	lda	#$5
  1375 00:00FE: A0 1F 00     	ldy	#$1f
  1376 00:0101: 97 05        	sta	[<L36+zp_1],Y
  1377                        ;	zp->VersionRelease = -1;
  1378                        	.line	91
  1379 00:0103: A9 FF FF     	lda	#$ffff
  1380 00:0106: A0 21 00     	ldy	#$21
  1381 00:0109: 97 05        	sta	[<L36+zp_1],Y
  1382                        ;
  1383                        ;	zp->topMemory 	 = MEM_USER_CEILING;
  1384                        	.line	93
  1385 00:010B: A9 00 00     	lda	#$0
  1386 00:010E: A0 23 00     	ldy	#$23
  1387 00:0111: 97 05        	sta	[<L36+zp_1],Y
  1388 00:0113: A9 AF 00     	lda	#$af
  1389 00:0116: A0 25 00     	ldy	#$25
  1390 00:0119: 97 05        	sta	[<L36+zp_1],Y
  1391                        ;	zp->bottomMemory = MEM_USER_FLOOR;
  1392                        	.line	94
  1393 00:011B: A9 00 00     	lda	#$0
  1394 00:011E: A0 27 00     	ldy	#$27
  1395 00:0121: 97 05        	sta	[<L36+zp_1],Y
  1396 00:0123: A9 19 00     	lda	#$19
  Sat Jul 10 2021  1:15                                                Page 27


  1397 00:0126: A0 29 00     	ldy	#$29
  1398 00:0129: 97 05        	sta	[<L36+zp_1],Y
  1399                        ;
  1400                        ;
  1401                        ;	zp->fxos_kernel_api = &fx_kernel_api_table;
  1402                        	.line	97
  1403 00:012B: A9 xx xx     	lda	#<~~fx_kernel_api_table
  1404 00:012E: 85 01        	sta	<R0
  1405                        	xref	_BEG_DATA
  1406 00:0130: A9 xx xx     	lda	#_BEG_DATA>>16
  1407 00:0133: 85 03        	sta	<R0+2
  1408 00:0135: A5 01        	lda	<R0
  1409 00:0137: A0 4F 00     	ldy	#$4f
  1410 00:013A: 97 05        	sta	[<L36+zp_1],Y
  1411 00:013C: A5 03        	lda	<R0+2
  1412 00:013E: A0 51 00     	ldy	#$51
  1413 00:0141: 97 05        	sta	[<L36+zp_1],Y
  1414                        ;	zp->fxos_dos_api    = &fx_dos_api_table;
  1415                        	.line	98
  1416 00:0143: A9 xx xx     	lda	#<~~fx_dos_api_table
  1417 00:0146: 85 01        	sta	<R0
  1418                        	xref	_BEG_DATA
  1419 00:0148: A9 xx xx     	lda	#_BEG_DATA>>16
  1420 00:014B: 85 03        	sta	<R0+2
  1421 00:014D: A5 01        	lda	<R0
  1422 00:014F: A0 53 00     	ldy	#$53
  1423 00:0152: 97 05        	sta	[<L36+zp_1],Y
  1424 00:0154: A5 03        	lda	<R0+2
  1425 00:0156: A0 55 00     	ldy	#$55
  1426 00:0159: 97 05        	sta	[<L36+zp_1],Y
  1427                        ;	zp->fxos_gfx_api    = &fx_gfx_api_table;
  1428                        	.line	99
  1429 00:015B: A9 xx xx     	lda	#<~~fx_gfx_api_table
  1430 00:015E: 85 01        	sta	<R0
  1431                        	xref	_BEG_DATA
  1432 00:0160: A9 xx xx     	lda	#_BEG_DATA>>16
  1433 00:0163: 85 03        	sta	<R0+2
  1434 00:0165: A5 01        	lda	<R0
  1435 00:0167: A0 57 00     	ldy	#$57
  1436 00:016A: 97 05        	sta	[<L36+zp_1],Y
  1437 00:016C: A5 03        	lda	<R0+2
  1438 00:016E: A0 59 00     	ldy	#$59
  1439 00:0171: 97 05        	sta	[<L36+zp_1],Y
  1440                        ;	zp->fxos_gui_api    = &fx_gui_api_table;
  1441                        	.line	100
  1442 00:0173: A9 xx xx     	lda	#<~~fx_gui_api_table
  1443 00:0176: 85 01        	sta	<R0
  1444                        	xref	_BEG_DATA
  1445 00:0178: A9 xx xx     	lda	#_BEG_DATA>>16
  1446 00:017B: 85 03        	sta	<R0+2
  1447 00:017D: A5 01        	lda	<R0
  1448 00:017F: A0 5B 00     	ldy	#$5b
  1449 00:0182: 97 05        	sta	[<L36+zp_1],Y
  1450 00:0184: A5 03        	lda	<R0+2
  1451 00:0186: A0 5D 00     	ldy	#$5d
  1452 00:0189: 97 05        	sta	[<L36+zp_1],Y
  1453                        ;	zp->fxos_con_api    = &fx_con_api_table;
  1454                        	.line	101
  Sat Jul 10 2021  1:15                                                Page 28


  1455 00:018B: A9 xx xx     	lda	#<~~fx_con_api_table
  1456 00:018E: 85 01        	sta	<R0
  1457                        	xref	_BEG_DATA
  1458 00:0190: A9 xx xx     	lda	#_BEG_DATA>>16
  1459 00:0193: 85 03        	sta	<R0+2
  1460 00:0195: A5 01        	lda	<R0
  1461 00:0197: A0 5F 00     	ldy	#$5f
  1462 00:019A: 97 05        	sta	[<L36+zp_1],Y
  1463 00:019C: A5 03        	lda	<R0+2
  1464 00:019E: A0 61 00     	ldy	#$61
  1465 00:01A1: 97 05        	sta	[<L36+zp_1],Y
  1466                        ;
  1467                        ;	_k_initialize_call_table(zp,API_CALLTABLE_KERNEL
                    _IDX);
  1468                        	.line	103
  1469 00:01A3: F4 00 00     	pea	#<$0
  1470 00:01A6: D4 07        	pei	<L36+zp_1+2
  1471 00:01A8: D4 05        	pei	<L36+zp_1
  1472 00:01AA: 22 xx xx xx  	jsl	~~_k_initialize_call_table
  1473                        ;	_k_initialize_call_table(zp,API_CALLTABLE_DOS_ID
                    X);
  1474                        	.line	104
  1475 00:01AE: F4 01 00     	pea	#<$1
  1476 00:01B1: D4 07        	pei	<L36+zp_1+2
  1477 00:01B3: D4 05        	pei	<L36+zp_1
  1478 00:01B5: 22 xx xx xx  	jsl	~~_k_initialize_call_table
  1479                        ;	_k_initialize_call_table(zp,API_CALLTABLE_GFX_ID
                    X);
  1480                        	.line	105
  1481 00:01B9: F4 02 00     	pea	#<$2
  1482 00:01BC: D4 07        	pei	<L36+zp_1+2
  1483 00:01BE: D4 05        	pei	<L36+zp_1
  1484 00:01C0: 22 xx xx xx  	jsl	~~_k_initialize_call_table
  1485                        ;	_k_initialize_call_table(zp,API_CALLTABLE_GUI_ID
                    X);
  1486                        	.line	106
  1487 00:01C4: F4 03 00     	pea	#<$3
  1488 00:01C7: D4 07        	pei	<L36+zp_1+2
  1489 00:01C9: D4 05        	pei	<L36+zp_1
  1490 00:01CB: 22 xx xx xx  	jsl	~~_k_initialize_call_table
  1491                        ;	_k_initialize_call_table(zp,API_CALLTABLE_CON_ID
                    X);
  1492                        	.line	107
  1493 00:01CF: F4 04 00     	pea	#<$4
  1494 00:01D2: D4 07        	pei	<L36+zp_1+2
  1495 00:01D4: D4 05        	pei	<L36+zp_1
  1496 00:01D6: 22 xx xx xx  	jsl	~~_k_initialize_call_table
  1497                        ;
  1498                        ;	/*
  1499                        ;	EXPORT_KERNEL(EXPORT_DEBUGOUT,			
                    k_debug_string);
  1500                        ;	EXPORT_KERNEL(EXPORT_DEBUGINTEGER,		
                    k_debug_integer);
  1501                        ;	EXPORT_KERNEL(EXPORT_DEBUGLONG,		    k_de
                    bug_long);
  1502                        ;
  1503                        ;	EXPORT_KERNEL( EXPORT_DEBUGSTRINGN		
                    ,k_debug_nstring);
  Sat Jul 10 2021  1:15                                                Page 29


  1504                        ;	EXPORT_KERNEL( EXPORT_DEBUGCHAR			
                    ,k_debug_char);
  1505                        ;	EXPORT_KERNEL( EXPORT_DEBUGPOINTER		
                    ,k_debug_pointer);
  1506                        ;    EXPORT_KERNEL( EXPORT_DEBUGINTEGERARRAY	
                    ,k_debug_integer_array);
  1507                        ;    EXPORT_KERNEL( EXPORT_DEBUGHEX		
                    	,k_debug_hex);
  1508                        ;	EXPORT_KERNEL( EXPORT_DEBUGHEXCHAR		
                    ,k_debug_hexchar);
  1509                        ;	EXPORT_KERNEL( EXPORT_DEBUGBITS			
                    ,k_debug_bits);
  1510                        ;	EXPORT_KERNEL( EXPORT_DEBUGMODE			
                    ,k_debug_on);
  1511                        ;	EXPORT_KERNEL( EXPORT_DEBUGBYTEARRAY	,k_debug
                    _byte_array);
  1512                        ;	EXPORT_KERNEL( EXPORT_DEBUGMESSAGE		
                    ,k_debug_message);
  1513                        ;	EXPORT_KERNEL( EXPORT_DEBUGSTRING		
                    ,k_debug_strings);
  1514                        ;	EXPORT_KERNEL( EXPORT_DEBUGMESSAGEN		
                    ,k_debug_nmessage);
  1515                        ;
  1516                        ;
  1517                        ;	EXPORT_KERNEL(EXPORT_EXE_GETCURPROC,k_exec_get_c
                    urrent_process);
  1518                        ;	EXPORT_KERNEL(EXPORT_EXE_TERMPROC,	k_exec_s
                    ignal_terminate);
  1519                        ;
  1520                        ;	EXPORT_KERNEL(EXPORT_MEM_ALLOC,	 	k_mem_al
                    locate_heap);
  1521                        ;	EXPORT_KERNEL(EXPORT_MEM_DEALLOC,	k_mem_de
                    allocate_heap);
  1522                        ;
  1523                        ;	EXPORT_KERNEL(EXPORT_RTC_HOUR,		k_get_rt
                    c_hour);
  1524                        ;	EXPORT_KERNEL(EXPORT_RTC_MIN,		k_get_rt
                    c_minute);
  1525                        ;	EXPORT_KERNEL(EXPORT_RTC_SEC,		k_get_rt
                    c_second);
  1526                        ;	EXPORT_KERNEL(EXPORT_RTC_MONTH,		k_get_rt
                    c_month);
  1527                        ;	EXPORT_KERNEL(EXPORT_RTC_DAY,		k_get_rt
                    c_day);
  1528                        ;	EXPORT_KERNEL(EXPORT_RTC_YEAR,		k_get_rt
                    c_year);
  1529                        ;	EXPORT_KERNEL(EXPORT_RTC_CENTURY,	k_get_rt
                    c_century);
  1530                        ;	//
  1531                        ;	//
  1532                        ;	//
  1533                        ;	EXPORT_GUI(EXPORT_GUI_CREATEWINCLASSEX,	k_user_C
                    reateWindowClassEx);
  1534                        ;	EXPORT_GUI(EXPORT_GUI_CREATEWIN,		
                    k_user_CreateWindow);
  1535                        ;	EXPORT_GUI(EXPORT_GUI_CREATEWINEX,		
                    k_user_CreateWindowEx);
  1536                        ;	EXPORT_GUI(EXPORT_GUI_GETDESKTOP,		
  Sat Jul 10 2021  1:15                                                Page 30


                    k_user_getDesktopWindow);
  1537                        ;	EXPORT_GUI(EXPORT_GUI_DEFWNDPROC,		
                    DefWindowProc);
  1538                        ;	*/
  1539                        ;
  1540                        ;	return zp;
  1541                        	.line	151
  1542 00:01DA: A6 07        	ldx	<L36+zp_1+2
  1543 00:01DC: A5 05        	lda	<L36+zp_1
  1544                        L38:
  1545 00:01DE: A8           	tay
  1546 00:01DF: 2B           	pld
  1547 00:01E0: 3B           	tsc
  1548 00:01E1: 18           	clc
  1549 00:01E2: 69 08 00     	adc	#L35
  1550 00:01E5: 1B           	tcs
  1551 00:01E6: 98           	tya
  1552 00:01E7: 6B           	rtl
  1553                        ;}
  1554                        	.line	152
  1555                        	.endblock	152
  1556             00000008   L35	equ	8
  1557             00000005   L36	equ	5
  1558                        	ends
  1559                        	efunc
  1560                        	.endfunc	152,5,8
  1561                        	.line	152
  1562                        ;
  1563                        ;/*
  1564                        ; *
  1565                        ; *
  1566                        ; *
  1567                        ; *
  1568                        ; */
  1569                        ;int k_report_configuration(int offset,int line)
  1570                        ;{
  1571                        	.line	160
  1572                        	.line	161
  1573                        	code
  1574                        	xdef	~~k_report_configuration
  1575                        	func
  1576                        	.function	161
  1577                        ~~k_report_configuration:
  1578                        	longa	on
  1579                        	longi	on
  1580 00:01E8: 3B           	tsc
  1581 00:01E9: 38           	sec
  1582 00:01EA: E9 16 00     	sbc	#L39
  1583 00:01ED: 1B           	tcs
  1584 00:01EE: 0B           	phd
  1585 00:01EF: 5B           	tcd
  1586             00000004   offset_0	set	4
  1587             00000006   line_0	set	6
  1588                        	.block	161
  1589                        ;	char krcBuffer[16];
  1590                        ;	int pos = offset;
  1591                        ;
  1592                        ;
  Sat Jul 10 2021  1:15                                                Page 31


  1593                        ;	k_put_string(pos,line,CONST_COMPUTER_NAME,15,0);
  1594             00000000   krcBuffer_1	set	0
  1595             00000010   pos_1	set	16
  1596                        	.sym	krcBuffer,0,110,1,0,16
  1597                        	.sym	pos,16,5,1,16
  1598                        	.sym	offset,4,5,6,16
  1599                        	.sym	line,6,5,6,16
  1600 00:01F0: A5 1A        	lda	<L39+offset_0
  1601 00:01F2: 85 15        	sta	<L40+pos_1
  1602                        	.line	166
  1603 00:01F4: F4 00 00     	pea	#<$0
  1604 00:01F7: F4 0F 00     	pea	#<$f
  1605 00:01FA: F4 xx xx     	pea	#^L2
  1606 00:01FD: F4 xx xx     	pea	#<L2
  1607 00:0200: D4 1C        	pei	<L39+line_0
  1608 00:0202: D4 15        	pei	<L40+pos_1
  1609 00:0204: 22 xx xx xx  	jsl	~~k_put_string
  1610                        ;	k_put_color (pos,line,CONST_COMPUTER_NAME_COLOR)
                    ;
  1611                        	.line	167
  1612 00:0208: F4 xx xx     	pea	#^L2+44
  1613 00:020B: F4 xx xx     	pea	#<L2+44
  1614 00:020E: D4 1C        	pei	<L39+line_0
  1615 00:0210: D4 15        	pei	<L40+pos_1
  1616 00:0212: 22 xx xx xx  	jsl	~~k_put_color
  1617                        ;	line++;
  1618                        	.line	168
  1619 00:0216: E6 1C        	inc	<L39+line_0
  1620                        ;
  1621                        ;	k_put_string(pos,line,CONST_COMPUTER_ACK_1,15,0)
                    ;
  1622                        	.line	170
  1623 00:0218: F4 00 00     	pea	#<$0
  1624 00:021B: F4 0F 00     	pea	#<$f
  1625 00:021E: F4 xx xx     	pea	#^L2+57
  1626 00:0221: F4 xx xx     	pea	#<L2+57
  1627 00:0224: D4 1C        	pei	<L39+line_0
  1628 00:0226: D4 15        	pei	<L40+pos_1
  1629 00:0228: 22 xx xx xx  	jsl	~~k_put_string
  1630                        ;	k_put_color (pos,line,CONST_COMPUTER_ACK_1_COLOR
                    );
  1631                        	.line	171
  1632 00:022C: F4 xx xx     	pea	#^L2+118
  1633 00:022F: F4 xx xx     	pea	#<L2+118
  1634 00:0232: D4 1C        	pei	<L39+line_0
  1635 00:0234: D4 15        	pei	<L40+pos_1
  1636 00:0236: 22 xx xx xx  	jsl	~~k_put_color
  1637                        ;	line++;
  1638                        	.line	172
  1639 00:023A: E6 1C        	inc	<L39+line_0
  1640                        ;
  1641                        ;	pos = k_put_string(pos,line,CONST_COMPUTER_ACK_2
                    ,15,0);
  1642                        	.line	174
  1643 00:023C: F4 00 00     	pea	#<$0
  1644 00:023F: F4 0F 00     	pea	#<$f
  1645 00:0242: F4 xx xx     	pea	#^L2+131
  1646 00:0245: F4 xx xx     	pea	#<L2+131
  Sat Jul 10 2021  1:15                                                Page 32


  1647 00:0248: D4 1C        	pei	<L39+line_0
  1648 00:024A: D4 15        	pei	<L40+pos_1
  1649 00:024C: 22 xx xx xx  	jsl	~~k_put_string
  1650 00:0250: 85 15        	sta	<L40+pos_1
  1651                        ;	k_put_string(pos,line,k_getFXOSVersionName(),15,
                    0);
  1652                        	.line	175
  1653 00:0252: F4 00 00     	pea	#<$0
  1654 00:0255: F4 0F 00     	pea	#<$f
  1655 00:0258: 22 xx xx xx  	jsl	~~k_getFXOSVersionName
  1656 00:025C: 85 01        	sta	<R0
  1657 00:025E: 86 03        	stx	<R0+2
  1658 00:0260: DA           	phx
  1659 00:0261: 48           	pha
  1660 00:0262: D4 1C        	pei	<L39+line_0
  1661 00:0264: D4 15        	pei	<L40+pos_1
  1662 00:0266: 22 xx xx xx  	jsl	~~k_put_string
  1663                        ;
  1664                        ;	pos = offset;
  1665                        	.line	177
  1666 00:026A: A5 1A        	lda	<L39+offset_0
  1667 00:026C: 85 15        	sta	<L40+pos_1
  1668                        ;	k_put_color (pos,line,CONST_COMPUTER_ACK_2_COLOR
                    );
  1669                        	.line	178
  1670 00:026E: F4 xx xx     	pea	#^L2+145
  1671 00:0271: F4 xx xx     	pea	#<L2+145
  1672 00:0274: D4 1C        	pei	<L39+line_0
  1673 00:0276: D4 15        	pei	<L40+pos_1
  1674 00:0278: 22 xx xx xx  	jsl	~~k_put_color
  1675                        ;
  1676                        ;
  1677                        ;	line++;
  1678                        	.line	181
  1679 00:027C: E6 1C        	inc	<L39+line_0
  1680                        ;	line++;
  1681                        	.line	182
  1682 00:027E: E6 1C        	inc	<L39+line_0
  1683                        ;
  1684                        ;	pos = offset;
  1685                        	.line	184
  1686 00:0280: A5 1A        	lda	<L39+offset_0
  1687 00:0282: 85 15        	sta	<L40+pos_1
  1688                        ;	pos = k_put_string(pos,line,CONST_BOARD_REVISION
                    ,15,0);
  1689                        	.line	185
  1690 00:0284: F4 00 00     	pea	#<$0
  1691 00:0287: F4 0F 00     	pea	#<$f
  1692 00:028A: F4 xx xx     	pea	#^L2+158
  1693 00:028D: F4 xx xx     	pea	#<L2+158
  1694 00:0290: D4 1C        	pei	<L39+line_0
  1695 00:0292: D4 15        	pei	<L40+pos_1
  1696 00:0294: 22 xx xx xx  	jsl	~~k_put_string
  1697 00:0298: 85 15        	sta	<L40+pos_1
  1698                        ;	k_get_c256_major_version(krcBuffer);
  1699                        	.line	186
  1700 00:029A: F4 00 00     	pea	#0
  1701 00:029D: 18           	clc
  Sat Jul 10 2021  1:15                                                Page 33


  1702 00:029E: 7B           	tdc
  1703 00:029F: 69 05 00     	adc	#<L40+krcBuffer_1
  1704 00:02A2: 48           	pha
  1705 00:02A3: 22 xx xx xx  	jsl	~~k_get_c256_major_version
  1706                        ;	pos = k_put_string(pos,line,krcBuffer,15,0);
  1707                        	.line	187
  1708 00:02A7: F4 00 00     	pea	#<$0
  1709 00:02AA: F4 0F 00     	pea	#<$f
  1710 00:02AD: F4 00 00     	pea	#0
  1711 00:02B0: 18           	clc
  1712 00:02B1: 7B           	tdc
  1713 00:02B2: 69 05 00     	adc	#<L40+krcBuffer_1
  1714 00:02B5: 48           	pha
  1715 00:02B6: D4 1C        	pei	<L39+line_0
  1716 00:02B8: D4 15        	pei	<L40+pos_1
  1717 00:02BA: 22 xx xx xx  	jsl	~~k_put_string
  1718 00:02BE: 85 15        	sta	<L40+pos_1
  1719                        ;	k_get_c256_minor_version(krcBuffer);
  1720                        	.line	188
  1721 00:02C0: F4 00 00     	pea	#0
  1722 00:02C3: 18           	clc
  1723 00:02C4: 7B           	tdc
  1724 00:02C5: 69 05 00     	adc	#<L40+krcBuffer_1
  1725 00:02C8: 48           	pha
  1726 00:02C9: 22 xx xx xx  	jsl	~~k_get_c256_minor_version
  1727                        ;	pos = k_put_string(pos,line,krcBuffer,15,0);
  1728                        	.line	189
  1729 00:02CD: F4 00 00     	pea	#<$0
  1730 00:02D0: F4 0F 00     	pea	#<$f
  1731 00:02D3: F4 00 00     	pea	#0
  1732 00:02D6: 18           	clc
  1733 00:02D7: 7B           	tdc
  1734 00:02D8: 69 05 00     	adc	#<L40+krcBuffer_1
  1735 00:02DB: 48           	pha
  1736 00:02DC: D4 1C        	pei	<L39+line_0
  1737 00:02DE: D4 15        	pei	<L40+pos_1
  1738 00:02E0: 22 xx xx xx  	jsl	~~k_put_string
  1739 00:02E4: 85 15        	sta	<L40+pos_1
  1740                        ;
  1741                        ;	pos  = offset;
  1742                        	.line	191
  1743 00:02E6: A5 1A        	lda	<L39+offset_0
  1744 00:02E8: 85 15        	sta	<L40+pos_1
  1745                        ;	line++;
  1746                        	.line	192
  1747 00:02EA: E6 1C        	inc	<L39+line_0
  1748                        ;
  1749                        ;	pos = k_put_string(pos,line,"FPGA Date :",15,0);
  1750                        	.line	194
  1751 00:02EC: F4 00 00     	pea	#<$0
  1752 00:02EF: F4 0F 00     	pea	#<$f
  1753 00:02F2: F4 xx xx     	pea	#^L2+179
  1754 00:02F5: F4 xx xx     	pea	#<L2+179
  1755 00:02F8: D4 1C        	pei	<L39+line_0
  1756 00:02FA: D4 15        	pei	<L40+pos_1
  1757 00:02FC: 22 xx xx xx  	jsl	~~k_put_string
  1758 00:0300: 85 15        	sta	<L40+pos_1
  1759                        ;	k_get_fpga_date_month(krcBuffer);
  Sat Jul 10 2021  1:15                                                Page 34


  1760                        	.line	195
  1761 00:0302: F4 00 00     	pea	#0
  1762 00:0305: 18           	clc
  1763 00:0306: 7B           	tdc
  1764 00:0307: 69 05 00     	adc	#<L40+krcBuffer_1
  1765 00:030A: 48           	pha
  1766 00:030B: 22 xx xx xx  	jsl	~~k_get_fpga_date_month
  1767                        ;	pos = k_put_string(pos,line,k_strip_padding(krcB
                    uffer),15,0);
  1768                        	.line	196
  1769 00:030F: F4 00 00     	pea	#<$0
  1770 00:0312: F4 0F 00     	pea	#<$f
  1771 00:0315: F4 00 00     	pea	#0
  1772 00:0318: 18           	clc
  1773 00:0319: 7B           	tdc
  1774 00:031A: 69 05 00     	adc	#<L40+krcBuffer_1
  1775 00:031D: 48           	pha
  1776 00:031E: 22 xx xx xx  	jsl	~~k_strip_padding
  1777 00:0322: 85 01        	sta	<R0
  1778 00:0324: 86 03        	stx	<R0+2
  1779 00:0326: DA           	phx
  1780 00:0327: 48           	pha
  1781 00:0328: D4 1C        	pei	<L39+line_0
  1782 00:032A: D4 15        	pei	<L40+pos_1
  1783 00:032C: 22 xx xx xx  	jsl	~~k_put_string
  1784 00:0330: 85 15        	sta	<L40+pos_1
  1785                        ;	pos = k_put_string(pos,line,"/",15,0);
  1786                        	.line	197
  1787 00:0332: F4 00 00     	pea	#<$0
  1788 00:0335: F4 0F 00     	pea	#<$f
  1789 00:0338: F4 xx xx     	pea	#^L2+191
  1790 00:033B: F4 xx xx     	pea	#<L2+191
  1791 00:033E: D4 1C        	pei	<L39+line_0
  1792 00:0340: D4 15        	pei	<L40+pos_1
  1793 00:0342: 22 xx xx xx  	jsl	~~k_put_string
  1794 00:0346: 85 15        	sta	<L40+pos_1
  1795                        ;	k_get_fpga_date_day(krcBuffer);
  1796                        	.line	198
  1797 00:0348: F4 00 00     	pea	#0
  1798 00:034B: 18           	clc
  1799 00:034C: 7B           	tdc
  1800 00:034D: 69 05 00     	adc	#<L40+krcBuffer_1
  1801 00:0350: 48           	pha
  1802 00:0351: 22 xx xx xx  	jsl	~~k_get_fpga_date_day
  1803                        ;	pos = k_put_string(pos,line,k_strip_padding(krcB
                    uffer),15,0);
  1804                        	.line	199
  1805 00:0355: F4 00 00     	pea	#<$0
  1806 00:0358: F4 0F 00     	pea	#<$f
  1807 00:035B: F4 00 00     	pea	#0
  1808 00:035E: 18           	clc
  1809 00:035F: 7B           	tdc
  1810 00:0360: 69 05 00     	adc	#<L40+krcBuffer_1
  1811 00:0363: 48           	pha
  1812 00:0364: 22 xx xx xx  	jsl	~~k_strip_padding
  1813 00:0368: 85 01        	sta	<R0
  1814 00:036A: 86 03        	stx	<R0+2
  1815 00:036C: DA           	phx
  Sat Jul 10 2021  1:15                                                Page 35


  1816 00:036D: 48           	pha
  1817 00:036E: D4 1C        	pei	<L39+line_0
  1818 00:0370: D4 15        	pei	<L40+pos_1
  1819 00:0372: 22 xx xx xx  	jsl	~~k_put_string
  1820 00:0376: 85 15        	sta	<L40+pos_1
  1821                        ;	pos = k_put_string(pos,line,"/",15,0);
  1822                        	.line	200
  1823 00:0378: F4 00 00     	pea	#<$0
  1824 00:037B: F4 0F 00     	pea	#<$f
  1825 00:037E: F4 xx xx     	pea	#^L2+193
  1826 00:0381: F4 xx xx     	pea	#<L2+193
  1827 00:0384: D4 1C        	pei	<L39+line_0
  1828 00:0386: D4 15        	pei	<L40+pos_1
  1829 00:0388: 22 xx xx xx  	jsl	~~k_put_string
  1830 00:038C: 85 15        	sta	<L40+pos_1
  1831                        ;	k_get_fpga_date_year(krcBuffer);
  1832                        	.line	201
  1833 00:038E: F4 00 00     	pea	#0
  1834 00:0391: 18           	clc
  1835 00:0392: 7B           	tdc
  1836 00:0393: 69 05 00     	adc	#<L40+krcBuffer_1
  1837 00:0396: 48           	pha
  1838 00:0397: 22 xx xx xx  	jsl	~~k_get_fpga_date_year
  1839                        ;	pos = k_put_string(pos,line,k_strip_padding(krcB
                    uffer),15,0);
  1840                        	.line	202
  1841 00:039B: F4 00 00     	pea	#<$0
  1842 00:039E: F4 0F 00     	pea	#<$f
  1843 00:03A1: F4 00 00     	pea	#0
  1844 00:03A4: 18           	clc
  1845 00:03A5: 7B           	tdc
  1846 00:03A6: 69 05 00     	adc	#<L40+krcBuffer_1
  1847 00:03A9: 48           	pha
  1848 00:03AA: 22 xx xx xx  	jsl	~~k_strip_padding
  1849 00:03AE: 85 01        	sta	<R0
  1850 00:03B0: 86 03        	stx	<R0+2
  1851 00:03B2: DA           	phx
  1852 00:03B3: 48           	pha
  1853 00:03B4: D4 1C        	pei	<L39+line_0
  1854 00:03B6: D4 15        	pei	<L40+pos_1
  1855 00:03B8: 22 xx xx xx  	jsl	~~k_put_string
  1856 00:03BC: 85 15        	sta	<L40+pos_1
  1857                        ;
  1858                        ;
  1859                        ;	return line;
  1860                        	.line	205
  1861 00:03BE: A5 1C        	lda	<L39+line_0
  1862                        L42:
  1863 00:03C0: A8           	tay
  1864 00:03C1: A5 18        	lda	<L39+2
  1865 00:03C3: 85 1C        	sta	<L39+2+4
  1866 00:03C5: A5 17        	lda	<L39+1
  1867 00:03C7: 85 1B        	sta	<L39+1+4
  1868 00:03C9: 2B           	pld
  1869 00:03CA: 3B           	tsc
  1870 00:03CB: 18           	clc
  1871 00:03CC: 69 1A 00     	adc	#L39+4
  1872 00:03CF: 1B           	tcs
  Sat Jul 10 2021  1:15                                                Page 36


  1873 00:03D0: 98           	tya
  1874 00:03D1: 6B           	rtl
  1875                        ;}
  1876                        	.line	206
  1877                        	.endblock	206
  1878             00000016   L39	equ	22
  1879             00000005   L40	equ	5
  1880                        	ends
  1881                        	efunc
  1882                        	.endfunc	206,5,22
  1883                        	.line	206
  1884                        	data
  1885                        L2:
  1886 00:0022: 20 20 0B 0C  	db	$20,$20,$0B,$0C,$0B,$0C,$0B,$0C,$0B,$0C,
                    $0B,$0C,$20,$43,$32
       00:0026: 0B 0C 0B 0C 
       00:002A: 0B 0C 0B 0C 
       00:002E: 20 43 32 
  1887 00:0031: 35 36 20 46  	db	$35,$36,$20,$46,$6F,$65,$6E,$69,$78,$20,
                    $44,$65,$76,$65,$6C
       00:0035: 6F 65 6E 69 
       00:0039: 78 20 44 65 
       00:003D: 76 65 6C 
  1888 00:0040: 6F 70 6D 65  	db	$6F,$70,$6D,$65,$6E,$74,$20,$53,$79,$73,
                    $74,$65,$6D,$00,$1D
       00:0044: 6E 74 20 53 
       00:0048: 79 73 74 65 
       00:004C: 6D 00 1D 
  1889 00:004F: 1D 1D 1D 8D  	db	$1D,$1D,$1D,$FFFFFF8D,$FFFFFF8D,$4D,$4D,
                    $2D,$2D,$5D,$5D,$00,$20,$0B,$0C
       00:0053: 8D 4D 4D 2D 
       00:0057: 2D 5D 5D 00 
       00:005B: 20 0B 0C 
  1890 00:005E: 0B 0C 0B 0C  	db	$0B,$0C,$0B,$0C,$0B,$0C,$0B,$0C,$20,$20,
                    $41,$20,$68,$61,$72
       00:0062: 0B 0C 0B 0C 
       00:0066: 20 20 41 20 
       00:006A: 68 61 72 
  1891 00:006D: 64 77 61 72  	db	$64,$77,$61,$72,$65,$20,$70,$6C,$61,$74,
                    $66,$6F,$72,$6D,$20
       00:0071: 65 20 70 6C 
       00:0075: 61 74 66 6F 
       00:0079: 72 6D 20 
  1892 00:007C: 63 72 61 66  	db	$63,$72,$61,$66,$74,$65,$64,$20,$62,$79,
                    $3A,$20,$53,$74,$65
       00:0080: 74 65 64 20 
       00:0084: 62 79 3A 20 
       00:0088: 53 74 65 
  1893 00:008B: 66 61 6E 79  	db	$66,$61,$6E,$79,$20,$41,$6C,$6C,$61,$69,
                    $72,$65,$00,$1D,$1D
       00:008F: 20 41 6C 6C 
       00:0093: 61 69 72 65 
       00:0097: 00 1D 1D 
  1894 00:009A: 1D 8D 8D 4D  	db	$1D,$FFFFFF8D,$FFFFFF8D,$4D,$4D,$2D,$2D,
                    $5D,$5D,$5D,$00,$0B,$0C,$0B,$0C
       00:009E: 4D 2D 2D 5D 
       00:00A2: 5D 5D 00 0B 
       00:00A6: 0C 0B 0C 
  Sat Jul 10 2021  1:15                                                Page 37


  1895 00:00A9: 0B 0C 0B 0C  	db	$0B,$0C,$0B,$0C,$0B,$0C,$20,$20,$20,$00,
                    $1D,$1D,$FFFFFF8D,$FFFFFF8D,$4D
       00:00AD: 0B 0C 20 20 
       00:00B1: 20 00 1D 1D 
       00:00B5: 8D 8D 4D 
  1896 00:00B8: 4D 2D 2D 5D  	db	$4D,$2D,$2D,$5D,$5D,$5D,$5D,$00,$43,$32,
                    $35,$36,$20,$42,$6F
       00:00BC: 5D 5D 5D 00 
       00:00C0: 43 32 35 36 
       00:00C4: 20 42 6F 
  1897 00:00C7: 61 72 64 20  	db	$61,$72,$64,$20,$52,$65,$76,$69,$73,$69,
                    $6F,$6E,$3A,$00,$46
       00:00CB: 52 65 76 69 
       00:00CF: 73 69 6F 6E 
       00:00D3: 3A 00 46 
  1898 00:00D6: 50 47 41 20  	db	$50,$47,$41,$20,$44,$61,$74,$65,$20,$3A,
                    $00,$2F,$00,$2F,$00
       00:00DA: 44 61 74 65 
       00:00DE: 20 3A 00 2F 
       00:00E2: 00 2F 00 
  1899 00:00E5:              	ends
  1900                        ;/*
  1901                        ; *
  1902                        ; *
  1903                        ; *
  1904                        ; *
  1905                        ; */
  1906                        ;void k_delay(int millisecs)
  1907                        ;{
  1908                        	.line	213
  1909                        	.line	214
  1910                        	code
  1911                        	xdef	~~k_delay
  1912                        	func
  1913                        	.function	214
  1914                        ~~k_delay:
  1915                        	longa	on
  1916                        	longi	on
  1917 00:03D2: 3B           	tsc
  1918 00:03D3: 38           	sec
  1919 00:03D4: E9 04 00     	sbc	#L44
  1920 00:03D7: 1B           	tcs
  1921 00:03D8: 0B           	phd
  1922 00:03D9: 5B           	tcd
  1923             00000004   millisecs_0	set	4
  1924                        	.block	214
  1925                        ;	int y = 0;
  1926                        ;	int i = 0;
  1927                        ;
  1928                        ;	for(y=0;y<millisecs;y++)
  1929             00000000   y_1	set	0
  1930             00000002   i_1	set	2
  1931                        	.sym	y,0,5,1,16
  1932                        	.sym	i,2,5,1,16
  1933                        	.sym	millisecs,4,5,6,16
  1934 00:03DA: 64 01        	stz	<L45+y_1
  1935 00:03DC: 64 03        	stz	<L45+i_1
  1936                        	.line	218
  Sat Jul 10 2021  1:15                                                Page 38


  1937 00:03DE: 64 01        	stz	<L45+y_1
  1938 00:03E0: 82 17 00     	brl	L10011
  1939                        L10010:
  1940                        ;	{
  1941                        	.line	219
  1942                        ;		for(i=0;i<0xFF;i++)
  1943                        	.line	220
  1944 00:03E3: 64 03        	stz	<L45+i_1
  1945                        L10014:
  1946                        ;		{
  1947                        	.line	221
  1948                        ;			asm NOP;
  1949                        	.line	222
  1950                        	asmstart
  1951 00:03E5: EA           	NOP
  1952                        	asmend
  1953                        ;		}
  1954                        	.line	223
  1955                        L10012:
  1956 00:03E6: E6 03        	inc	<L45+i_1
  1957 00:03E8: 38           	sec
  1958 00:03E9: A5 03        	lda	<L45+i_1
  1959 00:03EB: E9 FF 00     	sbc	#<$ff
  1960 00:03EE: 70 03        	bvs	L47
  1961 00:03F0: 49 00 80     	eor	#$8000
  1962                        L47:
  1963 00:03F3: 30 03        	bmi	L48
  1964 00:03F5: 82 ED FF     	brl	L10014
  1965                        L48:
  1966                        L10013:
  1967                        ;	}
  1968                        	.line	224
  1969                        L10008:
  1970 00:03F8: E6 01        	inc	<L45+y_1
  1971                        L10011:
  1972 00:03FA: 38           	sec
  1973 00:03FB: A5 01        	lda	<L45+y_1
  1974 00:03FD: E5 08        	sbc	<L44+millisecs_0
  1975 00:03FF: 70 03        	bvs	L49
  1976 00:0401: 49 00 80     	eor	#$8000
  1977                        L49:
  1978 00:0404: 30 03        	bmi	L50
  1979 00:0406: 82 DA FF     	brl	L10010
  1980                        L50:
  1981                        L10009:
  1982                        ;}
  1983                        	.line	225
  1984                        L51:
  1985 00:0409: A5 06        	lda	<L44+2
  1986 00:040B: 85 08        	sta	<L44+2+2
  1987 00:040D: A5 05        	lda	<L44+1
  1988 00:040F: 85 07        	sta	<L44+1+2
  1989 00:0411: 2B           	pld
  1990 00:0412: 3B           	tsc
  1991 00:0413: 18           	clc
  1992 00:0414: 69 06 00     	adc	#L44+2
  1993 00:0417: 1B           	tcs
  1994 00:0418: 6B           	rtl
  Sat Jul 10 2021  1:15                                                Page 39


  1995                        	.endblock	225
  1996             00000004   L44	equ	4
  1997             00000001   L45	equ	1
  1998                        	ends
  1999                        	efunc
  2000                        	.endfunc	225,1,4
  2001                        	.line	225
  2002                        ;/*
  2003                        ; *
  2004                        ; *
  2005                        ; *
  2006                        ; *
  2007                        ; */
  2008                        ;void k_debug_string(char FAR* debugString)
  2009                        ;{
  2010                        	.line	232
  2011                        	.line	233
  2012                        	code
  2013                        	xdef	~~k_debug_string
  2014                        	func
  2015                        	.function	233
  2016                        ~~k_debug_string:
  2017                        	longa	on
  2018                        	longi	on
  2019 00:0419: 3B           	tsc
  2020 00:041A: 38           	sec
  2021 00:041B: E9 00 00     	sbc	#L52
  2022 00:041E: 1B           	tcs
  2023 00:041F: 0B           	phd
  2024 00:0420: 5B           	tcd
  2025             00000004   debugString_0	set	4
  2026                        	.block	233
  2027                        ;#ifdef USE_FX256_FMX
  2028                        ;	k_debug_string_com1(debugString);
  2029                        ;#elif USE_FX256_U
  2030                        ;	k_debug_string_com1(debugString);
  2031                        	.sym	debugString,4,142,6,32
  2032                        	.line	237
  2033 00:0421: D4 06        	pei	<L52+debugString_0+2
  2034 00:0423: D4 04        	pei	<L52+debugString_0
  2035 00:0425: 22 xx xx xx  	jsl	~~k_debug_string_com1
  2036                        ;#else
  2037                        ;	//k_debug_string_com2(debugString);
  2038                        ;	k_debug_string_com1(debugString);
  2039                        ;#endif
  2040                        ;}
  2041                        	.line	242
  2042                        L55:
  2043 00:0429: A5 02        	lda	<L52+2
  2044 00:042B: 85 06        	sta	<L52+2+4
  2045 00:042D: A5 01        	lda	<L52+1
  2046 00:042F: 85 05        	sta	<L52+1+4
  2047 00:0431: 2B           	pld
  2048 00:0432: 3B           	tsc
  2049 00:0433: 18           	clc
  2050 00:0434: 69 04 00     	adc	#L52+4
  2051 00:0437: 1B           	tcs
  2052 00:0438: 6B           	rtl
  Sat Jul 10 2021  1:15                                                Page 40


  2053                        	.endblock	242
  2054             00000000   L52	equ	0
  2055             00000001   L53	equ	1
  2056                        	ends
  2057                        	efunc
  2058                        	.endfunc	242,1,0
  2059                        	.line	242
  2060                        ;
  2061                        ;VOID k_DebugOutString(VOID)
  2062                        ;{
  2063                        	.line	244
  2064                        	.line	245
  2065                        	code
  2066                        	xdef	~~k_DebugOutString
  2067                        	func
  2068                        	.function	245
  2069                        ~~k_DebugOutString:
  2070                        	longa	on
  2071                        	longi	on
  2072 00:0439: 3B           	tsc
  2073 00:043A: 38           	sec
  2074 00:043B: E9 00 00     	sbc	#L56
  2075 00:043E: 1B           	tcs
  2076 00:043F: 0B           	phd
  2077 00:0440: 5B           	tcd
  2078                        	.block	245
  2079                        ;	//PFXZEROPAGE zp = k_getZeroPage();
  2080                        ;
  2081                        ;	//k_debug_pointer("k_DebugOutString1:",zp->kerne
                    lFunctionCallParameter);
  2082                        ;
  2083                        ;
  2084                        ;	//k_debug_string(zp->kernelFunctionCallParameter
                    );
  2085                        ;	k_debug_string("k_DebugOutString!!!!\r\n");
  2086                        	.line	252
  2087 00:0441: F4 xx xx     	pea	#^L43
  2088 00:0444: F4 xx xx     	pea	#<L43
  2089 00:0447: 22 xx xx xx  	jsl	~~k_debug_string
  2090                        ;
  2091                        ;}
  2092                        	.line	254
  2093                        L59:
  2094 00:044B: 2B           	pld
  2095 00:044C: 3B           	tsc
  2096 00:044D: 18           	clc
  2097 00:044E: 69 00 00     	adc	#L56
  2098 00:0451: 1B           	tcs
  2099 00:0452: 6B           	rtl
  2100                        	.endblock	254
  2101             00000000   L56	equ	0
  2102             00000001   L57	equ	1
  2103                        	ends
  2104                        	efunc
  2105                        	.endfunc	254,1,0
  2106                        	.line	254
  2107                        	data
  2108                        L43:
  Sat Jul 10 2021  1:15                                                Page 41


  2109 00:00E5: 6B 5F 44 65  	db	$6B,$5F,$44,$65,$62,$75,$67,$4F,$75,$74,
                    $53,$74,$72,$69,$6E
       00:00E9: 62 75 67 4F 
       00:00ED: 75 74 53 74 
       00:00F1: 72 69 6E 
  2110 00:00F4: 67 21 21 21  	db	$67,$21,$21,$21,$21,$0D,$0A,$00
       00:00F8: 21 0D 0A 00 
  2111 00:00FC:              	ends
  2112                        ;
  2113                        ;void k_debug_nstring(char FAR* debugString,int ns
                    ize)
  2114                        ;{
  2115                        	.line	256
  2116                        	.line	257
  2117                        	code
  2118                        	xdef	~~k_debug_nstring
  2119                        	func
  2120                        	.function	257
  2121                        ~~k_debug_nstring:
  2122                        	longa	on
  2123                        	longi	on
  2124 00:0453: 3B           	tsc
  2125 00:0454: 38           	sec
  2126 00:0455: E9 00 00     	sbc	#L61
  2127 00:0458: 1B           	tcs
  2128 00:0459: 0B           	phd
  2129 00:045A: 5B           	tcd
  2130             00000004   debugString_0	set	4
  2131             00000008   nsize_0	set	8
  2132                        	.block	257
  2133                        ;	//k_debug_nstring_com2(debugString,nsize);
  2134                        ;	//k_debug_nstring_com1(debugString,nsize);
  2135                        ;#ifdef USE_FX256_FMX
  2136                        ;	k_debug_nstring_com1(debugString,nsize);
  2137                        ;#elif USE_FX256_U
  2138                        ;	k_debug_nstring_com2(debugString,nsize);
  2139                        	.sym	debugString,4,142,6,32
  2140                        	.sym	nsize,8,5,6,16
  2141                        	.line	263
  2142 00:045B: D4 08        	pei	<L61+nsize_0
  2143 00:045D: D4 06        	pei	<L61+debugString_0+2
  2144 00:045F: D4 04        	pei	<L61+debugString_0
  2145 00:0461: 22 xx xx xx  	jsl	~~k_debug_nstring_com2
  2146                        ;#else
  2147                        ;	//k_debug_nstring_com2(debugString,nsize);
  2148                        ;	k_debug_nstring_com1(debugString,nsize);
  2149                        ;#endif
  2150                        ;}
  2151                        	.line	268
  2152                        L64:
  2153 00:0465: A5 02        	lda	<L61+2
  2154 00:0467: 85 08        	sta	<L61+2+6
  2155 00:0469: A5 01        	lda	<L61+1
  2156 00:046B: 85 07        	sta	<L61+1+6
  2157 00:046D: 2B           	pld
  2158 00:046E: 3B           	tsc
  2159 00:046F: 18           	clc
  2160 00:0470: 69 06 00     	adc	#L61+6
  Sat Jul 10 2021  1:15                                                Page 42


  2161 00:0473: 1B           	tcs
  2162 00:0474: 6B           	rtl
  2163                        	.endblock	268
  2164             00000000   L61	equ	0
  2165             00000001   L62	equ	1
  2166                        	ends
  2167                        	efunc
  2168                        	.endfunc	268,1,0
  2169                        	.line	268
  2170                        ;
  2171                        ;/*
  2172                        ; *
  2173                        ; *
  2174                        ; *
  2175                        ; *
  2176                        ; */
  2177                        ;void k_debug_string_com1(char FAR* debugString)
  2178                        ;{
  2179                        	.line	276
  2180                        	.line	277
  2181                        	code
  2182                        	xdef	~~k_debug_string_com1
  2183                        	func
  2184                        	.function	277
  2185                        ~~k_debug_string_com1:
  2186                        	longa	on
  2187                        	longi	on
  2188 00:0475: 3B           	tsc
  2189 00:0476: 38           	sec
  2190 00:0477: E9 04 00     	sbc	#L65
  2191 00:047A: 1B           	tcs
  2192 00:047B: 0B           	phd
  2193 00:047C: 5B           	tcd
  2194             00000004   debugString_0	set	4
  2195                        	.block	277
  2196                        ;	char FAR* ptr = debugString;
  2197                        ;
  2198                        ;	if(!k_user_IsOSDebug())
  2199             00000000   ptr_1	set	0
  2200                        	.sym	ptr,0,142,1,32
  2201                        	.sym	debugString,4,142,6,32
  2202 00:047D: A5 08        	lda	<L65+debugString_0
  2203 00:047F: 85 01        	sta	<L66+ptr_1
  2204 00:0481: A5 0A        	lda	<L65+debugString_0+2
  2205 00:0483: 85 03        	sta	<L66+ptr_1+2
  2206                        	.line	280
  2207                        ;		return;
  2208 00:0485: 22 xx xx xx  	jsl	~~k_user_IsOSDebug
  2209 00:0489: 29 FF 00     	and	#$ff
  2210 00:048C: F0 03        	beq	L68
  2211 00:048E: 82 10 00     	brl	L10015
  2212                        L68:
  2213                        	.line	281
  2214                        L69:
  2215 00:0491: A5 06        	lda	<L65+2
  2216 00:0493: 85 0A        	sta	<L65+2+4
  2217 00:0495: A5 05        	lda	<L65+1
  2218 00:0497: 85 09        	sta	<L65+1+4
  Sat Jul 10 2021  1:15                                                Page 43


  2219 00:0499: 2B           	pld
  2220 00:049A: 3B           	tsc
  2221 00:049B: 18           	clc
  2222 00:049C: 69 08 00     	adc	#L65+4
  2223 00:049F: 1B           	tcs
  2224 00:04A0: 6B           	rtl
  2225                        ;
  2226                        ;	while(*ptr)
  2227                        L10015:
  2228                        	.line	283
  2229                        L10016:
  2230 00:04A1: A7 01        	lda	[<L66+ptr_1]
  2231 00:04A3: 29 FF 00     	and	#$ff
  2232 00:04A6: D0 03        	bne	L70
  2233 00:04A8: 82 25 00     	brl	L10017
  2234                        L70:
  2235                        ;	{
  2236                        	.line	284
  2237                        ;		while(!(UART1_BASE[5] & 0x20))
  2238                        	.line	285
  2239                        L10018:
  2240 00:04AB: E2 20        	sep	#$20
  2241                        	longa	off
  2242 00:04AD: AF FD 18 AF  	lda	>11475197
  2243 00:04B1: 29 20        	and	#<$20
  2244 00:04B3: C2 20        	rep	#$20
  2245                        	longa	on
  2246 00:04B5: F0 03        	beq	L71
  2247 00:04B7: 82 03 00     	brl	L10019
  2248                        L71:
  2249                        ;		{
  2250                        	.line	286
  2251                        ;		}
  2252                        	.line	287
  2253 00:04BA: 82 EE FF     	brl	L10018
  2254                        L10019:
  2255                        ;		UART1_BASE[0] = *ptr;
  2256                        	.line	288
  2257 00:04BD: E2 20        	sep	#$20
  2258                        	longa	off
  2259 00:04BF: A7 01        	lda	[<L66+ptr_1]
  2260 00:04C1: 8F F8 18 AF  	sta	>11475192
  2261 00:04C5: C2 20        	rep	#$20
  2262                        	longa	on
  2263                        ;		ptr++;
  2264                        	.line	289
  2265 00:04C7: E6 01        	inc	<L66+ptr_1
  2266 00:04C9: D0 02        	bne	L72
  2267 00:04CB: E6 03        	inc	<L66+ptr_1+2
  2268                        L72:
  2269                        ;	}
  2270                        	.line	290
  2271 00:04CD: 82 D1 FF     	brl	L10016
  2272                        L10017:
  2273                        ;	return;
  2274                        	.line	291
  2275 00:04D0: 82 BE FF     	brl	L69
  2276                        ;}
  Sat Jul 10 2021  1:15                                                Page 44


  2277                        	.line	292
  2278                        	.endblock	292
  2279             00000004   L65	equ	4
  2280             00000001   L66	equ	1
  2281                        	ends
  2282                        	efunc
  2283                        	.endfunc	292,1,4
  2284                        	.line	292
  2285                        ;/*
  2286                        ; *
  2287                        ; *
  2288                        ; *
  2289                        ; *
  2290                        ; */
  2291                        ;
  2292                        ;void k_debug_string_com2(char FAR* debugString)
  2293                        ;{
  2294                        	.line	300
  2295                        	.line	301
  2296                        	code
  2297                        	xdef	~~k_debug_string_com2
  2298                        	func
  2299                        	.function	301
  2300                        ~~k_debug_string_com2:
  2301                        	longa	on
  2302                        	longi	on
  2303 00:04D3: 3B           	tsc
  2304 00:04D4: 38           	sec
  2305 00:04D5: E9 04 00     	sbc	#L73
  2306 00:04D8: 1B           	tcs
  2307 00:04D9: 0B           	phd
  2308 00:04DA: 5B           	tcd
  2309             00000004   debugString_0	set	4
  2310                        	.block	301
  2311                        ;	char FAR* ptr = debugString;
  2312                        ;
  2313                        ;	if(!k_user_IsOSDebug())
  2314             00000000   ptr_1	set	0
  2315                        	.sym	ptr,0,142,1,32
  2316                        	.sym	debugString,4,142,6,32
  2317 00:04DB: A5 08        	lda	<L73+debugString_0
  2318 00:04DD: 85 01        	sta	<L74+ptr_1
  2319 00:04DF: A5 0A        	lda	<L73+debugString_0+2
  2320 00:04E1: 85 03        	sta	<L74+ptr_1+2
  2321                        	.line	304
  2322                        ;		return;
  2323 00:04E3: 22 xx xx xx  	jsl	~~k_user_IsOSDebug
  2324 00:04E7: 29 FF 00     	and	#$ff
  2325 00:04EA: F0 03        	beq	L76
  2326 00:04EC: 82 10 00     	brl	L10020
  2327                        L76:
  2328                        	.line	305
  2329                        L77:
  2330 00:04EF: A5 06        	lda	<L73+2
  2331 00:04F1: 85 0A        	sta	<L73+2+4
  2332 00:04F3: A5 05        	lda	<L73+1
  2333 00:04F5: 85 09        	sta	<L73+1+4
  2334 00:04F7: 2B           	pld
  Sat Jul 10 2021  1:15                                                Page 45


  2335 00:04F8: 3B           	tsc
  2336 00:04F9: 18           	clc
  2337 00:04FA: 69 08 00     	adc	#L73+4
  2338 00:04FD: 1B           	tcs
  2339 00:04FE: 6B           	rtl
  2340                        ;
  2341                        ;	while(*ptr)
  2342                        L10020:
  2343                        	.line	307
  2344                        L10021:
  2345 00:04FF: A7 01        	lda	[<L74+ptr_1]
  2346 00:0501: 29 FF 00     	and	#$ff
  2347 00:0504: D0 03        	bne	L78
  2348 00:0506: 82 25 00     	brl	L10022
  2349                        L78:
  2350                        ;	{
  2351                        	.line	308
  2352                        ;		while(!(UART2_BASE[5] & 0x20))
  2353                        	.line	309
  2354                        L10023:
  2355 00:0509: E2 20        	sep	#$20
  2356                        	longa	off
  2357 00:050B: AF FD 18 AF  	lda	>11475197
  2358 00:050F: 29 20        	and	#<$20
  2359 00:0511: C2 20        	rep	#$20
  2360                        	longa	on
  2361 00:0513: F0 03        	beq	L79
  2362 00:0515: 82 03 00     	brl	L10024
  2363                        L79:
  2364                        ;		{
  2365                        	.line	310
  2366                        ;		}
  2367                        	.line	311
  2368 00:0518: 82 EE FF     	brl	L10023
  2369                        L10024:
  2370                        ;		UART2_BASE[0] = *ptr;
  2371                        	.line	312
  2372 00:051B: E2 20        	sep	#$20
  2373                        	longa	off
  2374 00:051D: A7 01        	lda	[<L74+ptr_1]
  2375 00:051F: 8F F8 18 AF  	sta	>11475192
  2376 00:0523: C2 20        	rep	#$20
  2377                        	longa	on
  2378                        ;		ptr++;
  2379                        	.line	313
  2380 00:0525: E6 01        	inc	<L74+ptr_1
  2381 00:0527: D0 02        	bne	L80
  2382 00:0529: E6 03        	inc	<L74+ptr_1+2
  2383                        L80:
  2384                        ;	}
  2385                        	.line	314
  2386 00:052B: 82 D1 FF     	brl	L10021
  2387                        L10022:
  2388                        ;	return;
  2389                        	.line	315
  2390 00:052E: 82 BE FF     	brl	L77
  2391                        ;}
  2392                        	.line	316
  Sat Jul 10 2021  1:15                                                Page 46


  2393                        	.endblock	316
  2394             00000004   L73	equ	4
  2395             00000001   L74	equ	1
  2396                        	ends
  2397                        	efunc
  2398                        	.endfunc	316,1,4
  2399                        	.line	316
  2400                        ;
  2401                        ;void k_debug_nstring_com1(char FAR* debugString,i
                    nt nsize)
  2402                        ;{
  2403                        	.line	318
  2404                        	.line	319
  2405                        	code
  2406                        	xdef	~~k_debug_nstring_com1
  2407                        	func
  2408                        	.function	319
  2409                        ~~k_debug_nstring_com1:
  2410                        	longa	on
  2411                        	longi	on
  2412 00:0531: 3B           	tsc
  2413 00:0532: 38           	sec
  2414 00:0533: E9 06 00     	sbc	#L81
  2415 00:0536: 1B           	tcs
  2416 00:0537: 0B           	phd
  2417 00:0538: 5B           	tcd
  2418             00000004   debugString_0	set	4
  2419             00000008   nsize_0	set	8
  2420                        	.block	319
  2421                        ;	int i = 0;
  2422                        ;	char FAR* ptr = debugString;
  2423                        ;
  2424                        ;	if(!k_user_IsOSDebug())
  2425             00000000   i_1	set	0
  2426             00000002   ptr_1	set	2
  2427                        	.sym	i,0,5,1,16
  2428                        	.sym	ptr,2,142,1,32
  2429                        	.sym	debugString,4,142,6,32
  2430                        	.sym	nsize,8,5,6,16
  2431 00:0539: 64 01        	stz	<L82+i_1
  2432 00:053B: A5 0A        	lda	<L81+debugString_0
  2433 00:053D: 85 03        	sta	<L82+ptr_1
  2434 00:053F: A5 0C        	lda	<L81+debugString_0+2
  2435 00:0541: 85 05        	sta	<L82+ptr_1+2
  2436                        	.line	323
  2437                        ;		return;
  2438 00:0543: 22 xx xx xx  	jsl	~~k_user_IsOSDebug
  2439 00:0547: 29 FF 00     	and	#$ff
  2440 00:054A: F0 03        	beq	L84
  2441 00:054C: 82 10 00     	brl	L10025
  2442                        L84:
  2443                        	.line	324
  2444                        L85:
  2445 00:054F: A5 08        	lda	<L81+2
  2446 00:0551: 85 0E        	sta	<L81+2+6
  2447 00:0553: A5 07        	lda	<L81+1
  2448 00:0555: 85 0D        	sta	<L81+1+6
  2449 00:0557: 2B           	pld
  Sat Jul 10 2021  1:15                                                Page 47


  2450 00:0558: 3B           	tsc
  2451 00:0559: 18           	clc
  2452 00:055A: 69 0C 00     	adc	#L81+6
  2453 00:055D: 1B           	tcs
  2454 00:055E: 6B           	rtl
  2455                        ;
  2456                        ;	for(i=0;i<nsize;i++)
  2457                        L10025:
  2458                        	.line	326
  2459 00:055F: 64 01        	stz	<L82+i_1
  2460 00:0561: 82 20 00     	brl	L10029
  2461                        L10028:
  2462                        ;	{
  2463                        	.line	327
  2464                        ;		while(!(UART1_BASE[5] & 0x20))
  2465                        	.line	328
  2466                        L10030:
  2467 00:0564: E2 20        	sep	#$20
  2468                        	longa	off
  2469 00:0566: AF FD 18 AF  	lda	>11475197
  2470 00:056A: 29 20        	and	#<$20
  2471 00:056C: C2 20        	rep	#$20
  2472                        	longa	on
  2473 00:056E: F0 03        	beq	L86
  2474 00:0570: 82 03 00     	brl	L10031
  2475                        L86:
  2476                        ;		{
  2477                        	.line	329
  2478                        ;		}
  2479                        	.line	330
  2480 00:0573: 82 EE FF     	brl	L10030
  2481                        L10031:
  2482                        ;		//UART1_BASE[0] = *ptr;
  2483                        ;		//ptr++;
  2484                        ;		UART1_BASE[0] = debugString[i];
  2485                        	.line	333
  2486 00:0576: E2 20        	sep	#$20
  2487                        	longa	off
  2488 00:0578: A4 01        	ldy	<L82+i_1
  2489 00:057A: B7 0A        	lda	[<L81+debugString_0],Y
  2490 00:057C: 8F F8 18 AF  	sta	>11475192
  2491 00:0580: C2 20        	rep	#$20
  2492                        	longa	on
  2493                        ;	}
  2494                        	.line	334
  2495                        L10026:
  2496 00:0582: E6 01        	inc	<L82+i_1
  2497                        L10029:
  2498 00:0584: 38           	sec
  2499 00:0585: A5 01        	lda	<L82+i_1
  2500 00:0587: E5 0E        	sbc	<L81+nsize_0
  2501 00:0589: 70 03        	bvs	L87
  2502 00:058B: 49 00 80     	eor	#$8000
  2503                        L87:
  2504 00:058E: 30 03        	bmi	L88
  2505 00:0590: 82 D1 FF     	brl	L10028
  2506                        L88:
  2507                        L10027:
  Sat Jul 10 2021  1:15                                                Page 48


  2508                        ;	return;
  2509                        	.line	335
  2510 00:0593: 82 B9 FF     	brl	L85
  2511                        ;}
  2512                        	.line	336
  2513                        	.endblock	336
  2514             00000006   L81	equ	6
  2515             00000001   L82	equ	1
  2516                        	ends
  2517                        	efunc
  2518                        	.endfunc	336,1,6
  2519                        	.line	336
  2520                        ;
  2521                        ;void k_debug_nstring_com2(char FAR* debugString,i
                    nt nsize)
  2522                        ;{
  2523                        	.line	338
  2524                        	.line	339
  2525                        	code
  2526                        	xdef	~~k_debug_nstring_com2
  2527                        	func
  2528                        	.function	339
  2529                        ~~k_debug_nstring_com2:
  2530                        	longa	on
  2531                        	longi	on
  2532 00:0596: 3B           	tsc
  2533 00:0597: 38           	sec
  2534 00:0598: E9 06 00     	sbc	#L89
  2535 00:059B: 1B           	tcs
  2536 00:059C: 0B           	phd
  2537 00:059D: 5B           	tcd
  2538             00000004   debugString_0	set	4
  2539             00000008   nsize_0	set	8
  2540                        	.block	339
  2541                        ;	int i = 0;
  2542                        ;	char FAR* ptr = debugString;
  2543                        ;
  2544                        ;	if(!k_user_IsOSDebug())
  2545             00000000   i_1	set	0
  2546             00000002   ptr_1	set	2
  2547                        	.sym	i,0,5,1,16
  2548                        	.sym	ptr,2,142,1,32
  2549                        	.sym	debugString,4,142,6,32
  2550                        	.sym	nsize,8,5,6,16
  2551 00:059E: 64 01        	stz	<L90+i_1
  2552 00:05A0: A5 0A        	lda	<L89+debugString_0
  2553 00:05A2: 85 03        	sta	<L90+ptr_1
  2554 00:05A4: A5 0C        	lda	<L89+debugString_0+2
  2555 00:05A6: 85 05        	sta	<L90+ptr_1+2
  2556                        	.line	343
  2557                        ;		return;
  2558 00:05A8: 22 xx xx xx  	jsl	~~k_user_IsOSDebug
  2559 00:05AC: 29 FF 00     	and	#$ff
  2560 00:05AF: F0 03        	beq	L92
  2561 00:05B1: 82 10 00     	brl	L10032
  2562                        L92:
  2563                        	.line	344
  2564                        L93:
  Sat Jul 10 2021  1:15                                                Page 49


  2565 00:05B4: A5 08        	lda	<L89+2
  2566 00:05B6: 85 0E        	sta	<L89+2+6
  2567 00:05B8: A5 07        	lda	<L89+1
  2568 00:05BA: 85 0D        	sta	<L89+1+6
  2569 00:05BC: 2B           	pld
  2570 00:05BD: 3B           	tsc
  2571 00:05BE: 18           	clc
  2572 00:05BF: 69 0C 00     	adc	#L89+6
  2573 00:05C2: 1B           	tcs
  2574 00:05C3: 6B           	rtl
  2575                        ;
  2576                        ;	for(i=0;i<nsize;i++)
  2577                        L10032:
  2578                        	.line	346
  2579 00:05C4: 64 01        	stz	<L90+i_1
  2580 00:05C6: 82 20 00     	brl	L10036
  2581                        L10035:
  2582                        ;	{
  2583                        	.line	347
  2584                        ;		while(!(UART2_BASE[5] & 0x20))
  2585                        	.line	348
  2586                        L10037:
  2587 00:05C9: E2 20        	sep	#$20
  2588                        	longa	off
  2589 00:05CB: AF FD 18 AF  	lda	>11475197
  2590 00:05CF: 29 20        	and	#<$20
  2591 00:05D1: C2 20        	rep	#$20
  2592                        	longa	on
  2593 00:05D3: F0 03        	beq	L94
  2594 00:05D5: 82 03 00     	brl	L10038
  2595                        L94:
  2596                        ;		{
  2597                        	.line	349
  2598                        ;		}
  2599                        	.line	350
  2600 00:05D8: 82 EE FF     	brl	L10037
  2601                        L10038:
  2602                        ;		//UART2_BASE[0] = *ptr;
  2603                        ;		//ptr++;
  2604                        ;		UART2_BASE[0] = debugString[i];
  2605                        	.line	353
  2606 00:05DB: E2 20        	sep	#$20
  2607                        	longa	off
  2608 00:05DD: A4 01        	ldy	<L90+i_1
  2609 00:05DF: B7 0A        	lda	[<L89+debugString_0],Y
  2610 00:05E1: 8F F8 18 AF  	sta	>11475192
  2611 00:05E5: C2 20        	rep	#$20
  2612                        	longa	on
  2613                        ;	}
  2614                        	.line	354
  2615                        L10033:
  2616 00:05E7: E6 01        	inc	<L90+i_1
  2617                        L10036:
  2618 00:05E9: 38           	sec
  2619 00:05EA: A5 01        	lda	<L90+i_1
  2620 00:05EC: E5 0E        	sbc	<L89+nsize_0
  2621 00:05EE: 70 03        	bvs	L95
  2622 00:05F0: 49 00 80     	eor	#$8000
  Sat Jul 10 2021  1:15                                                Page 50


  2623                        L95:
  2624 00:05F3: 30 03        	bmi	L96
  2625 00:05F5: 82 D1 FF     	brl	L10035
  2626                        L96:
  2627                        L10034:
  2628                        ;	return;
  2629                        	.line	355
  2630 00:05F8: 82 B9 FF     	brl	L93
  2631                        ;}
  2632                        	.line	356
  2633                        	.endblock	356
  2634             00000006   L89	equ	6
  2635             00000001   L90	equ	1
  2636                        	ends
  2637                        	efunc
  2638                        	.endfunc	356,1,6
  2639                        	.line	356
  2640                        ;/*
  2641                        ; *
  2642                        ; *
  2643                        ; *
  2644                        ; *
  2645                        ; */
  2646                        ;
  2647                        ;void k_debug_pointer(char FAR* debugString, void 
                    FAR* p)
  2648                        ;{
  2649                        	.line	364
  2650                        	.line	365
  2651                        	code
  2652                        	xdef	~~k_debug_pointer
  2653                        	func
  2654                        	.function	365
  2655                        ~~k_debug_pointer:
  2656                        	longa	on
  2657                        	longi	on
  2658 00:05FB: 3B           	tsc
  2659 00:05FC: 38           	sec
  2660 00:05FD: E9 0C 00     	sbc	#L97
  2661 00:0600: 1B           	tcs
  2662 00:0601: 0B           	phd
  2663 00:0602: 5B           	tcd
  2664             00000004   debugString_0	set	4
  2665             00000008   p_0	set	8
  2666                        	.block	365
  2667                        ;	k_debug_string(debugString);
  2668                        	.sym	debugString,4,142,6,32
  2669                        	.sym	p,8,129,6,32
  2670                        	.line	366
  2671 00:0603: D4 12        	pei	<L97+debugString_0+2
  2672 00:0605: D4 10        	pei	<L97+debugString_0
  2673 00:0607: 22 xx xx xx  	jsl	~~k_debug_string
  2674                        ;
  2675                        ;	k_debug_string(k_bytetohex(H24BYTE(p),k16buffer)
                    );
  2676                        	.line	368
  2677 00:060B: A9 xx xx     	lda	#<~~k16buffer
  2678 00:060E: 85 01        	sta	<R0
  Sat Jul 10 2021  1:15                                                Page 51


  2679                        	xref	_BEG_DATA
  2680 00:0610: A9 xx xx     	lda	#_BEG_DATA>>16
  2681 00:0613: 85 03        	sta	<R0+2
  2682 00:0615: D4 03        	pei	<R0+2
  2683 00:0617: D4 01        	pei	<R0
  2684 00:0619: D4 16        	pei	<L97+p_0+2
  2685 00:061B: D4 14        	pei	<L97+p_0
  2686 00:061D: A9 10 00     	lda	#$10
  2687                        	xref	~~~llsr
  2688 00:0620: 22 xx xx xx  	jsl	~~~llsr
  2689 00:0624: 85 05        	sta	<R1
  2690 00:0626: 86 07        	stx	<R1+2
  2691 00:0628: A5 05        	lda	<R1
  2692 00:062A: 29 FF 00     	and	#<$ff
  2693 00:062D: 85 09        	sta	<R2
  2694 00:062F: 64 0B        	stz	<R2+2
  2695 00:0631: D4 09        	pei	<R2
  2696 00:0633: 22 xx xx xx  	jsl	~~k_bytetohex
  2697 00:0637: 85 05        	sta	<R1
  2698 00:0639: 86 07        	stx	<R1+2
  2699 00:063B: DA           	phx
  2700 00:063C: 48           	pha
  2701 00:063D: 22 xx xx xx  	jsl	~~k_debug_string
  2702                        ;	k_debug_string(k_bytetohex(M24BYTE(p),k16buffer)
                    );
  2703                        	.line	369
  2704 00:0641: A9 xx xx     	lda	#<~~k16buffer
  2705 00:0644: 85 01        	sta	<R0
  2706                        	xref	_BEG_DATA
  2707 00:0646: A9 xx xx     	lda	#_BEG_DATA>>16
  2708 00:0649: 85 03        	sta	<R0+2
  2709 00:064B: D4 03        	pei	<R0+2
  2710 00:064D: D4 01        	pei	<R0
  2711 00:064F: D4 16        	pei	<L97+p_0+2
  2712 00:0651: D4 14        	pei	<L97+p_0
  2713 00:0653: A9 08 00     	lda	#$8
  2714                        	xref	~~~llsr
  2715 00:0656: 22 xx xx xx  	jsl	~~~llsr
  2716 00:065A: 85 05        	sta	<R1
  2717 00:065C: 86 07        	stx	<R1+2
  2718 00:065E: A5 05        	lda	<R1
  2719 00:0660: 29 FF 00     	and	#<$ff
  2720 00:0663: 85 09        	sta	<R2
  2721 00:0665: 64 0B        	stz	<R2+2
  2722 00:0667: D4 09        	pei	<R2
  2723 00:0669: 22 xx xx xx  	jsl	~~k_bytetohex
  2724 00:066D: 85 05        	sta	<R1
  2725 00:066F: 86 07        	stx	<R1+2
  2726 00:0671: DA           	phx
  2727 00:0672: 48           	pha
  2728 00:0673: 22 xx xx xx  	jsl	~~k_debug_string
  2729                        ;	k_debug_string(k_bytetohex(L24BYTE(p),k16buffer)
                    );
  2730                        	.line	370
  2731 00:0677: A9 xx xx     	lda	#<~~k16buffer
  2732 00:067A: 85 01        	sta	<R0
  2733                        	xref	_BEG_DATA
  2734 00:067C: A9 xx xx     	lda	#_BEG_DATA>>16
  Sat Jul 10 2021  1:15                                                Page 52


  2735 00:067F: 85 03        	sta	<R0+2
  2736 00:0681: D4 03        	pei	<R0+2
  2737 00:0683: D4 01        	pei	<R0
  2738 00:0685: D4 14        	pei	<L97+p_0
  2739 00:0687: 22 xx xx xx  	jsl	~~k_bytetohex
  2740 00:068B: 85 05        	sta	<R1
  2741 00:068D: 86 07        	stx	<R1+2
  2742 00:068F: DA           	phx
  2743 00:0690: 48           	pha
  2744 00:0691: 22 xx xx xx  	jsl	~~k_debug_string
  2745                        ;
  2746                        ;	k_debug_string("\r\n");
  2747                        	.line	372
  2748 00:0695: F4 xx xx     	pea	#^L60
  2749 00:0698: F4 xx xx     	pea	#<L60
  2750 00:069B: 22 xx xx xx  	jsl	~~k_debug_string
  2751                        ;
  2752                        ;	return;
  2753                        	.line	374
  2754                        L100:
  2755 00:069F: A5 0E        	lda	<L97+2
  2756 00:06A1: 85 16        	sta	<L97+2+8
  2757 00:06A3: A5 0D        	lda	<L97+1
  2758 00:06A5: 85 15        	sta	<L97+1+8
  2759 00:06A7: 2B           	pld
  2760 00:06A8: 3B           	tsc
  2761 00:06A9: 18           	clc
  2762 00:06AA: 69 14 00     	adc	#L97+8
  2763 00:06AD: 1B           	tcs
  2764 00:06AE: 6B           	rtl
  2765                        ;}
  2766                        	.line	375
  2767                        	.endblock	375
  2768             0000000C   L97	equ	12
  2769             0000000D   L98	equ	13
  2770                        	ends
  2771                        	efunc
  2772                        	.endfunc	375,13,12
  2773                        	.line	375
  2774                        	data
  2775                        L60:
  2776 00:00FC: 0D 0A 00     	db	$0D,$0A,$00
  2777 00:00FF:              	ends
  2778                        ;/*
  2779                        ; *
  2780                        ; *
  2781                        ; *
  2782                        ; *
  2783                        ; */
  2784                        ;void k_debug_char(char FAR* debugString, UCHAR n)
  2785                        ;{
  2786                        	.line	382
  2787                        	.line	383
  2788                        	code
  2789                        	xdef	~~k_debug_char
  2790                        	func
  2791                        	.function	383
  2792                        ~~k_debug_char:
  Sat Jul 10 2021  1:15                                                Page 53


  2793                        	longa	on
  2794                        	longi	on
  2795 00:06AF: 3B           	tsc
  2796 00:06B0: 38           	sec
  2797 00:06B1: E9 02 00     	sbc	#L102
  2798 00:06B4: 1B           	tcs
  2799 00:06B5: 0B           	phd
  2800 00:06B6: 5B           	tcd
  2801             00000004   debugString_0	set	4
  2802             00000008   n_0	set	8
  2803                        	.block	383
  2804                        ;	char b[2];
  2805                        ;
  2806                        ;	b[0] = n;
  2807             00000000   b_1	set	0
  2808                        	.sym	b,0,110,1,0,2
  2809                        	.sym	debugString,4,142,6,32
  2810                        	.sym	n,8,14,6,8
  2811                        	.line	386
  2812 00:06B7: E2 20        	sep	#$20
  2813                        	longa	off
  2814 00:06B9: A5 0A        	lda	<L102+n_0
  2815 00:06BB: 85 01        	sta	<L103+b_1
  2816 00:06BD: C2 20        	rep	#$20
  2817                        	longa	on
  2818                        ;	b[1] = 0;
  2819                        	.line	387
  2820 00:06BF: E2 20        	sep	#$20
  2821                        	longa	off
  2822 00:06C1: 64 02        	stz	<L103+b_1+1
  2823 00:06C3: C2 20        	rep	#$20
  2824                        	longa	on
  2825                        ;
  2826                        ;	k_debug_string(debugString);
  2827                        	.line	389
  2828 00:06C5: D4 08        	pei	<L102+debugString_0+2
  2829 00:06C7: D4 06        	pei	<L102+debugString_0
  2830 00:06C9: 22 xx xx xx  	jsl	~~k_debug_string
  2831                        ;
  2832                        ;	k_debug_string(b);
  2833                        	.line	391
  2834 00:06CD: F4 00 00     	pea	#0
  2835 00:06D0: 18           	clc
  2836 00:06D1: 7B           	tdc
  2837 00:06D2: 69 01 00     	adc	#<L103+b_1
  2838 00:06D5: 48           	pha
  2839 00:06D6: 22 xx xx xx  	jsl	~~k_debug_string
  2840                        ;
  2841                        ;	k_debug_string("\r\n");
  2842                        	.line	393
  2843 00:06DA: F4 xx xx     	pea	#^L101
  2844 00:06DD: F4 xx xx     	pea	#<L101
  2845 00:06E0: 22 xx xx xx  	jsl	~~k_debug_string
  2846                        ;
  2847                        ;	return;
  2848                        	.line	395
  2849                        L105:
  2850 00:06E4: A5 04        	lda	<L102+2
  Sat Jul 10 2021  1:15                                                Page 54


  2851 00:06E6: 85 0A        	sta	<L102+2+6
  2852 00:06E8: A5 03        	lda	<L102+1
  2853 00:06EA: 85 09        	sta	<L102+1+6
  2854 00:06EC: 2B           	pld
  2855 00:06ED: 3B           	tsc
  2856 00:06EE: 18           	clc
  2857 00:06EF: 69 08 00     	adc	#L102+6
  2858 00:06F2: 1B           	tcs
  2859 00:06F3: 6B           	rtl
  2860                        ;}
  2861                        	.line	396
  2862                        	.endblock	396
  2863             00000002   L102	equ	2
  2864             00000001   L103	equ	1
  2865                        	ends
  2866                        	efunc
  2867                        	.endfunc	396,1,2
  2868                        	.line	396
  2869                        	data
  2870                        L101:
  2871 00:00FF: 0D 0A 00     	db	$0D,$0A,$00
  2872 00:0102:              	ends
  2873                        ;/*
  2874                        ; *
  2875                        ; *
  2876                        ; *
  2877                        ; *
  2878                        ; */
  2879                        ;void k_debug_integer(char FAR* debugString, UINT 
                    n)
  2880                        ;{
  2881                        	.line	403
  2882                        	.line	404
  2883                        	code
  2884                        	xdef	~~k_debug_integer
  2885                        	func
  2886                        	.function	404
  2887                        ~~k_debug_integer:
  2888                        	longa	on
  2889                        	longi	on
  2890 00:06F4: 3B           	tsc
  2891 00:06F5: 38           	sec
  2892 00:06F6: E9 08 00     	sbc	#L107
  2893 00:06F9: 1B           	tcs
  2894 00:06FA: 0B           	phd
  2895 00:06FB: 5B           	tcd
  2896             00000004   debugString_0	set	4
  2897             00000008   n_0	set	8
  2898                        	.block	404
  2899                        ;	k_debug_string(debugString);
  2900                        	.sym	debugString,4,142,6,32
  2901                        	.sym	n,8,16,6,16
  2902                        	.line	405
  2903 00:06FC: D4 0E        	pei	<L107+debugString_0+2
  2904 00:06FE: D4 0C        	pei	<L107+debugString_0
  2905 00:0700: 22 xx xx xx  	jsl	~~k_debug_string
  2906                        ;
  2907                        ;	k_debug_string(k_inttodec(n,k16buffer));
  Sat Jul 10 2021  1:15                                                Page 55


  2908                        	.line	407
  2909 00:0704: A9 xx xx     	lda	#<~~k16buffer
  2910 00:0707: 85 01        	sta	<R0
  2911                        	xref	_BEG_DATA
  2912 00:0709: A9 xx xx     	lda	#_BEG_DATA>>16
  2913 00:070C: 85 03        	sta	<R0+2
  2914 00:070E: D4 03        	pei	<R0+2
  2915 00:0710: D4 01        	pei	<R0
  2916 00:0712: D4 10        	pei	<L107+n_0
  2917 00:0714: 22 xx xx xx  	jsl	~~k_inttodec
  2918 00:0718: 85 05        	sta	<R1
  2919 00:071A: 86 07        	stx	<R1+2
  2920 00:071C: DA           	phx
  2921 00:071D: 48           	pha
  2922 00:071E: 22 xx xx xx  	jsl	~~k_debug_string
  2923                        ;
  2924                        ;	k_debug_string("\r\n");
  2925                        	.line	409
  2926 00:0722: F4 xx xx     	pea	#^L106
  2927 00:0725: F4 xx xx     	pea	#<L106
  2928 00:0728: 22 xx xx xx  	jsl	~~k_debug_string
  2929                        ;
  2930                        ;	return;
  2931                        	.line	411
  2932                        L110:
  2933 00:072C: A5 0A        	lda	<L107+2
  2934 00:072E: 85 10        	sta	<L107+2+6
  2935 00:0730: A5 09        	lda	<L107+1
  2936 00:0732: 85 0F        	sta	<L107+1+6
  2937 00:0734: 2B           	pld
  2938 00:0735: 3B           	tsc
  2939 00:0736: 18           	clc
  2940 00:0737: 69 0E 00     	adc	#L107+6
  2941 00:073A: 1B           	tcs
  2942 00:073B: 6B           	rtl
  2943                        ;}
  2944                        	.line	412
  2945                        	.endblock	412
  2946             00000008   L107	equ	8
  2947             00000009   L108	equ	9
  2948                        	ends
  2949                        	efunc
  2950                        	.endfunc	412,9,8
  2951                        	.line	412
  2952                        	data
  2953                        L106:
  2954 00:0102: 0D 0A 00     	db	$0D,$0A,$00
  2955 00:0105:              	ends
  2956                        ;
  2957                        ;void k_debug_hex_integer(char FAR* debugString, U
                    INT n)
  2958                        ;{
  2959                        	.line	414
  2960                        	.line	415
  2961                        	code
  2962                        	xdef	~~k_debug_hex_integer
  2963                        	func
  2964                        	.function	415
  Sat Jul 10 2021  1:15                                                Page 56


  2965                        ~~k_debug_hex_integer:
  2966                        	longa	on
  2967                        	longi	on
  2968 00:073C: 3B           	tsc
  2969 00:073D: 38           	sec
  2970 00:073E: E9 08 00     	sbc	#L112
  2971 00:0741: 1B           	tcs
  2972 00:0742: 0B           	phd
  2973 00:0743: 5B           	tcd
  2974             00000004   debugString_0	set	4
  2975             00000008   n_0	set	8
  2976                        	.block	415
  2977                        ;	k_debug_string(debugString);
  2978                        	.sym	debugString,4,142,6,32
  2979                        	.sym	n,8,16,6,16
  2980                        	.line	416
  2981 00:0744: D4 0E        	pei	<L112+debugString_0+2
  2982 00:0746: D4 0C        	pei	<L112+debugString_0
  2983 00:0748: 22 xx xx xx  	jsl	~~k_debug_string
  2984                        ;
  2985                        ;	k_debug_string("0x");
  2986                        	.line	418
  2987 00:074C: F4 xx xx     	pea	#^L111
  2988 00:074F: F4 xx xx     	pea	#<L111
  2989 00:0752: 22 xx xx xx  	jsl	~~k_debug_string
  2990                        ;	k_debug_string(k_bytetohex(  ((LPSTR)&n)[1]  ,k1
                    6buffer));
  2991                        	.line	419
  2992 00:0756: A9 xx xx     	lda	#<~~k16buffer
  2993 00:0759: 85 01        	sta	<R0
  2994                        	xref	_BEG_DATA
  2995 00:075B: A9 xx xx     	lda	#_BEG_DATA>>16
  2996 00:075E: 85 03        	sta	<R0+2
  2997 00:0760: D4 03        	pei	<R0+2
  2998 00:0762: D4 01        	pei	<R0
  2999 00:0764: D4 11        	pei	<L112+n_0+1
  3000 00:0766: 22 xx xx xx  	jsl	~~k_bytetohex
  3001 00:076A: 85 05        	sta	<R1
  3002 00:076C: 86 07        	stx	<R1+2
  3003 00:076E: DA           	phx
  3004 00:076F: 48           	pha
  3005 00:0770: 22 xx xx xx  	jsl	~~k_debug_string
  3006                        ;	k_debug_string(k_bytetohex(  ((LPSTR)&n)[0]  ,k1
                    6buffer));
  3007                        	.line	420
  3008 00:0774: A9 xx xx     	lda	#<~~k16buffer
  3009 00:0777: 85 01        	sta	<R0
  3010                        	xref	_BEG_DATA
  3011 00:0779: A9 xx xx     	lda	#_BEG_DATA>>16
  3012 00:077C: 85 03        	sta	<R0+2
  3013 00:077E: D4 03        	pei	<R0+2
  3014 00:0780: D4 01        	pei	<R0
  3015 00:0782: D4 10        	pei	<L112+n_0
  3016 00:0784: 22 xx xx xx  	jsl	~~k_bytetohex
  3017 00:0788: 85 05        	sta	<R1
  3018 00:078A: 86 07        	stx	<R1+2
  3019 00:078C: DA           	phx
  3020 00:078D: 48           	pha
  Sat Jul 10 2021  1:15                                                Page 57


  3021 00:078E: 22 xx xx xx  	jsl	~~k_debug_string
  3022                        ;
  3023                        ;	k_debug_string("\r\n");
  3024                        	.line	422
  3025 00:0792: F4 xx xx     	pea	#^L111+3
  3026 00:0795: F4 xx xx     	pea	#<L111+3
  3027 00:0798: 22 xx xx xx  	jsl	~~k_debug_string
  3028                        ;
  3029                        ;	return;
  3030                        	.line	424
  3031                        L115:
  3032 00:079C: A5 0A        	lda	<L112+2
  3033 00:079E: 85 10        	sta	<L112+2+6
  3034 00:07A0: A5 09        	lda	<L112+1
  3035 00:07A2: 85 0F        	sta	<L112+1+6
  3036 00:07A4: 2B           	pld
  3037 00:07A5: 3B           	tsc
  3038 00:07A6: 18           	clc
  3039 00:07A7: 69 0E 00     	adc	#L112+6
  3040 00:07AA: 1B           	tcs
  3041 00:07AB: 6B           	rtl
  3042                        ;}
  3043                        	.line	425
  3044                        	.endblock	425
  3045             00000008   L112	equ	8
  3046             00000009   L113	equ	9
  3047                        	ends
  3048                        	efunc
  3049                        	.endfunc	425,9,8
  3050                        	.line	425
  3051                        	data
  3052                        L111:
  3053 00:0105: 30 78 00 0D  	db	$30,$78,$00,$0D,$0A,$00
       00:0109: 0A 00 
  3054 00:010B:              	ends
  3055                        ;
  3056                        ;void k_debug_integers(char FAR* format, int nHowM
                    any, ...)
  3057                        ;{
  3058                        	.line	427
  3059                        	.line	428
  3060                        	code
  3061                        	xdef	~~k_debug_integers
  3062                        	func
  3063                        	.function	428
  3064                        ~~k_debug_integers:
  3065                        	longa	on
  3066                        	longi	on
  3067 00:07AC: 3B           	tsc
  3068 00:07AD: 38           	sec
  3069 00:07AE: E9 0C 00     	sbc	#L117
  3070 00:07B1: 1B           	tcs
  3071 00:07B2: 0B           	phd
  3072 00:07B3: 5B           	tcd
  3073             00000006   format_0	set	6
  3074             0000000A   nHowMany_0	set	10
  3075                        	.block	428
  3076                        ;	int i = 0;
  Sat Jul 10 2021  1:15                                                Page 58


  3077                        ;	int nSum = 0;
  3078                        ;
  3079                        ;	va_list intArgumentPointer;
  3080                        ;	va_start(intArgumentPointer, nHowMany);
  3081             00000000   i_1	set	0
  3082             00000002   nSum_1	set	2
  3083             00000004   intArgumentPointer_1	set	4
  3084                        	.sym	i,0,5,1,16
  3085                        	.sym	nSum,2,5,1,16
  3086                        	.sym	intArgumentPointer,4,142,1,32
  3087                        	.sym	format,6,142,6,32
  3088                        	.sym	nHowMany,10,5,6,16
  3089 00:07B4: 64 05        	stz	<L118+i_1
  3090 00:07B6: 64 07        	stz	<L118+nSum_1
  3091                        	.line	433
  3092 00:07B8: 18           	clc
  3093 00:07B9: 7B           	tdc
  3094 00:07BA: 69 18 00     	adc	#<L117+nHowMany_0+2
  3095 00:07BD: 85 09        	sta	<L118+intArgumentPointer_1
  3096 00:07BF: A9 00 00     	lda	#$0
  3097 00:07C2: 85 0B        	sta	<L118+intArgumentPointer_1+2
  3098                        ;
  3099                        ;
  3100                        ;	for (i = 0; i < nHowMany; i++)
  3101                        	.line	436
  3102 00:07C4: 64 05        	stz	<L118+i_1
  3103 00:07C6: 82 24 00     	brl	L10042
  3104                        L10041:
  3105                        ;		nSum += va_arg(intArgumentPointer, int);
  3106                        	.line	437
  3107 00:07C9: 18           	clc
  3108 00:07CA: A9 02 00     	lda	#$2
  3109 00:07CD: 65 09        	adc	<L118+intArgumentPointer_1
  3110 00:07CF: 85 09        	sta	<L118+intArgumentPointer_1
  3111 00:07D1: 90 02        	bcc	L120
  3112 00:07D3: E6 0B        	inc	<L118+intArgumentPointer_1+2
  3113                        L120:
  3114 00:07D5: 18           	clc
  3115 00:07D6: A9 FE FF     	lda	#$fffe
  3116 00:07D9: 65 09        	adc	<L118+intArgumentPointer_1
  3117 00:07DB: 85 01        	sta	<R0
  3118 00:07DD: A9 FF FF     	lda	#$ffff
  3119 00:07E0: 65 0B        	adc	<L118+intArgumentPointer_1+2
  3120 00:07E2: 85 03        	sta	<R0+2
  3121 00:07E4: 18           	clc
  3122 00:07E5: A7 01        	lda	[<R0]
  3123 00:07E7: 65 07        	adc	<L118+nSum_1
  3124 00:07E9: 85 07        	sta	<L118+nSum_1
  3125                        L10039:
  3126 00:07EB: E6 05        	inc	<L118+i_1
  3127                        L10042:
  3128 00:07ED: 38           	sec
  3129 00:07EE: A5 05        	lda	<L118+i_1
  3130 00:07F0: E5 16        	sbc	<L117+nHowMany_0
  3131 00:07F2: 70 03        	bvs	L121
  3132 00:07F4: 49 00 80     	eor	#$8000
  3133                        L121:
  3134 00:07F7: 30 03        	bmi	L122
  Sat Jul 10 2021  1:15                                                Page 59


  3135 00:07F9: 82 CD FF     	brl	L10041
  3136                        L122:
  3137                        L10040:
  3138                        ;
  3139                        ;	va_end(intArgumentPointer);
  3140                        	.line	439
  3141                        ;
  3142                        ;	k_debug_integer(format, nSum);
  3143                        	.line	441
  3144 00:07FC: D4 07        	pei	<L118+nSum_1
  3145 00:07FE: D4 14        	pei	<L117+format_0+2
  3146 00:0800: D4 12        	pei	<L117+format_0
  3147 00:0802: 22 xx xx xx  	jsl	~~k_debug_integer
  3148                        ;}
  3149                        	.line	442
  3150                        L123:
  3151 00:0806: DA           	phx
  3152 00:0807: A6 10        	ldx	<L117+4
  3153 00:0809: A5 0E        	lda	<L117+2
  3154 00:080B: 95 0E        	sta	<L117+2,X
  3155 00:080D: A5 0D        	lda	<L117+1
  3156 00:080F: 95 0D        	sta	<L117+1,X
  3157 00:0811: 8A           	txa
  3158 00:0812: FA           	plx
  3159 00:0813: 2B           	pld
  3160 00:0814: 48           	pha
  3161 00:0815: 3B           	tsc
  3162 00:0816: 18           	clc
  3163 00:0817: 69 0E 00     	adc	#L117+2
  3164 00:081A: 63 01        	adc	<1,s
  3165 00:081C: 1B           	tcs
  3166 00:081D: 6B           	rtl
  3167                        	.endblock	442
  3168             0000000C   L117	equ	12
  3169             00000005   L118	equ	5
  3170                        	ends
  3171                        	efunc
  3172                        	.endfunc	442,5,12
  3173                        	.line	442
  3174                        ;
  3175                        ;/*
  3176                        ; *
  3177                        ; *
  3178                        ; *
  3179                        ; *
  3180                        ; */
  3181                        ;void k_debug_integer_array(char FAR* debugString,
                    UINT FAR *n,UINT size)
  3182                        ;{
  3183                        	.line	450
  3184                        	.line	451
  3185                        	code
  3186                        	xdef	~~k_debug_integer_array
  3187                        	func
  3188                        	.function	451
  3189                        ~~k_debug_integer_array:
  3190                        	longa	on
  3191                        	longi	on
  Sat Jul 10 2021  1:15                                                Page 60


  3192 00:081E: 3B           	tsc
  3193 00:081F: 38           	sec
  3194 00:0820: E9 12 00     	sbc	#L124
  3195 00:0823: 1B           	tcs
  3196 00:0824: 0B           	phd
  3197 00:0825: 5B           	tcd
  3198             00000004   debugString_0	set	4
  3199             00000008   n_0	set	8
  3200             0000000C   size_0	set	12
  3201                        	.block	451
  3202                        ;	int i = 0;
  3203                        ;	k_debug_string(debugString);
  3204             00000000   i_1	set	0
  3205                        	.sym	i,0,5,1,16
  3206                        	.sym	debugString,4,142,6,32
  3207                        	.sym	n,8,144,6,32
  3208                        	.sym	size,12,16,6,16
  3209 00:0826: 64 11        	stz	<L125+i_1
  3210                        	.line	453
  3211 00:0828: D4 18        	pei	<L124+debugString_0+2
  3212 00:082A: D4 16        	pei	<L124+debugString_0
  3213 00:082C: 22 xx xx xx  	jsl	~~k_debug_string
  3214                        ;
  3215                        ;	for(i=0;i<size;i++)
  3216                        	.line	455
  3217 00:0830: 64 11        	stz	<L125+i_1
  3218 00:0832: 82 5A 00     	brl	L10046
  3219                        L10045:
  3220                        ;	{
  3221                        	.line	456
  3222                        ;		if(i!=0)
  3223                        	.line	457
  3224                        ;			k_debug_string(",");
  3225 00:0835: A5 11        	lda	<L125+i_1
  3226 00:0837: D0 03        	bne	L127
  3227 00:0839: 82 0A 00     	brl	L10047
  3228                        L127:
  3229                        	.line	458
  3230 00:083C: F4 xx xx     	pea	#^L116
  3231 00:083F: F4 xx xx     	pea	#<L116
  3232 00:0842: 22 xx xx xx  	jsl	~~k_debug_string
  3233                        ;
  3234                        ;		k_debug_string(k_inttodec(n[i],k16buffer
                    ));
  3235                        L10047:
  3236                        	.line	460
  3237 00:0846: A9 xx xx     	lda	#<~~k16buffer
  3238 00:0849: 85 01        	sta	<R0
  3239                        	xref	_BEG_DATA
  3240 00:084B: A9 xx xx     	lda	#_BEG_DATA>>16
  3241 00:084E: 85 03        	sta	<R0+2
  3242 00:0850: D4 03        	pei	<R0+2
  3243 00:0852: D4 01        	pei	<R0
  3244 00:0854: A0 00 00     	ldy	#$0
  3245 00:0857: A5 11        	lda	<L125+i_1
  3246 00:0859: 10 01        	bpl	L128
  3247 00:085B: 88           	dey
  3248                        L128:
  Sat Jul 10 2021  1:15                                                Page 61


  3249 00:085C: 85 09        	sta	<R2
  3250 00:085E: 84 0B        	sty	<R2+2
  3251 00:0860: D4 0B        	pei	<R2+2
  3252 00:0862: D4 09        	pei	<R2
  3253 00:0864: A9 01 00     	lda	#$1
  3254                        	xref	~~~lasl
  3255 00:0867: 22 xx xx xx  	jsl	~~~lasl
  3256 00:086B: 85 05        	sta	<R1
  3257 00:086D: 86 07        	stx	<R1+2
  3258 00:086F: 18           	clc
  3259 00:0870: A5 1A        	lda	<L124+n_0
  3260 00:0872: 65 05        	adc	<R1
  3261 00:0874: 85 0D        	sta	<R3
  3262 00:0876: A5 1C        	lda	<L124+n_0+2
  3263 00:0878: 65 07        	adc	<R1+2
  3264 00:087A: 85 0F        	sta	<R3+2
  3265 00:087C: A7 0D        	lda	[<R3]
  3266 00:087E: 48           	pha
  3267 00:087F: 22 xx xx xx  	jsl	~~k_inttodec
  3268 00:0883: 85 05        	sta	<R1
  3269 00:0885: 86 07        	stx	<R1+2
  3270 00:0887: DA           	phx
  3271 00:0888: 48           	pha
  3272 00:0889: 22 xx xx xx  	jsl	~~k_debug_string
  3273                        ;	}
  3274                        	.line	461
  3275                        L10043:
  3276 00:088D: E6 11        	inc	<L125+i_1
  3277                        L10046:
  3278 00:088F: A5 11        	lda	<L125+i_1
  3279 00:0891: C5 1E        	cmp	<L124+size_0
  3280 00:0893: B0 03        	bcs	L129
  3281 00:0895: 82 9D FF     	brl	L10045
  3282                        L129:
  3283                        L10044:
  3284                        ;
  3285                        ;	k_debug_string("\r\n");
  3286                        	.line	463
  3287 00:0898: F4 xx xx     	pea	#^L116+2
  3288 00:089B: F4 xx xx     	pea	#<L116+2
  3289 00:089E: 22 xx xx xx  	jsl	~~k_debug_string
  3290                        ;
  3291                        ;	return;
  3292                        	.line	465
  3293                        L130:
  3294 00:08A2: A5 14        	lda	<L124+2
  3295 00:08A4: 85 1E        	sta	<L124+2+10
  3296 00:08A6: A5 13        	lda	<L124+1
  3297 00:08A8: 85 1D        	sta	<L124+1+10
  3298 00:08AA: 2B           	pld
  3299 00:08AB: 3B           	tsc
  3300 00:08AC: 18           	clc
  3301 00:08AD: 69 1C 00     	adc	#L124+10
  3302 00:08B0: 1B           	tcs
  3303 00:08B1: 6B           	rtl
  3304                        ;}
  3305                        	.line	466
  3306                        	.endblock	466
  Sat Jul 10 2021  1:15                                                Page 62


  3307             00000012   L124	equ	18
  3308             00000011   L125	equ	17
  3309                        	ends
  3310                        	efunc
  3311                        	.endfunc	466,17,18
  3312                        	.line	466
  3313                        	data
  3314                        L116:
  3315 00:010B: 2C 00 0D 0A  	db	$2C,$00,$0D,$0A,$00
       00:010F: 00 
  3316 00:0110:              	ends
  3317                        ;
  3318                        ;/*
  3319                        ; *
  3320                        ; *
  3321                        ; *
  3322                        ; *
  3323                        ; */
  3324                        ;void k_debug_long(char FAR* debugString, ULONG n)
  3325                        ;{
  3326                        	.line	474
  3327                        	.line	475
  3328                        	code
  3329                        	xdef	~~k_debug_long
  3330                        	func
  3331                        	.function	475
  3332                        ~~k_debug_long:
  3333                        	longa	on
  3334                        	longi	on
  3335 00:08B2: 3B           	tsc
  3336 00:08B3: 38           	sec
  3337 00:08B4: E9 08 00     	sbc	#L132
  3338 00:08B7: 1B           	tcs
  3339 00:08B8: 0B           	phd
  3340 00:08B9: 5B           	tcd
  3341             00000004   debugString_0	set	4
  3342             00000008   n_0	set	8
  3343                        	.block	475
  3344                        ;	k_debug_string(debugString);
  3345                        	.sym	debugString,4,142,6,32
  3346                        	.sym	n,8,18,6,32
  3347                        	.line	476
  3348 00:08BA: D4 0E        	pei	<L132+debugString_0+2
  3349 00:08BC: D4 0C        	pei	<L132+debugString_0
  3350 00:08BE: 22 xx xx xx  	jsl	~~k_debug_string
  3351                        ;
  3352                        ;	k_debug_string(k_longtodec(n,k16buffer));
  3353                        	.line	478
  3354 00:08C2: A9 xx xx     	lda	#<~~k16buffer
  3355 00:08C5: 85 01        	sta	<R0
  3356                        	xref	_BEG_DATA
  3357 00:08C7: A9 xx xx     	lda	#_BEG_DATA>>16
  3358 00:08CA: 85 03        	sta	<R0+2
  3359 00:08CC: D4 03        	pei	<R0+2
  3360 00:08CE: D4 01        	pei	<R0
  3361 00:08D0: D4 12        	pei	<L132+n_0+2
  3362 00:08D2: D4 10        	pei	<L132+n_0
  3363 00:08D4: 22 xx xx xx  	jsl	~~k_longtodec
  Sat Jul 10 2021  1:15                                                Page 63


  3364 00:08D8: 85 05        	sta	<R1
  3365 00:08DA: 86 07        	stx	<R1+2
  3366 00:08DC: DA           	phx
  3367 00:08DD: 48           	pha
  3368 00:08DE: 22 xx xx xx  	jsl	~~k_debug_string
  3369                        ;
  3370                        ;	k_debug_string("\r\n");
  3371                        	.line	480
  3372 00:08E2: F4 xx xx     	pea	#^L131
  3373 00:08E5: F4 xx xx     	pea	#<L131
  3374 00:08E8: 22 xx xx xx  	jsl	~~k_debug_string
  3375                        ;
  3376                        ;	return;
  3377                        	.line	482
  3378                        L135:
  3379 00:08EC: A5 0A        	lda	<L132+2
  3380 00:08EE: 85 12        	sta	<L132+2+8
  3381 00:08F0: A5 09        	lda	<L132+1
  3382 00:08F2: 85 11        	sta	<L132+1+8
  3383 00:08F4: 2B           	pld
  3384 00:08F5: 3B           	tsc
  3385 00:08F6: 18           	clc
  3386 00:08F7: 69 10 00     	adc	#L132+8
  3387 00:08FA: 1B           	tcs
  3388 00:08FB: 6B           	rtl
  3389                        ;}
  3390                        	.line	483
  3391                        	.endblock	483
  3392             00000008   L132	equ	8
  3393             00000009   L133	equ	9
  3394                        	ends
  3395                        	efunc
  3396                        	.endfunc	483,9,8
  3397                        	.line	483
  3398                        	data
  3399                        L131:
  3400 00:0110: 0D 0A 00     	db	$0D,$0A,$00
  3401 00:0113:              	ends
  3402                        ;/*
  3403                        ; *
  3404                        ; *
  3405                        ; *
  3406                        ; *
  3407                        ; */
  3408                        ;void k_debug_hex(LPSTR debugString, UCHAR n)
  3409                        ;{
  3410                        	.line	490
  3411                        	.line	491
  3412                        	code
  3413                        	xdef	~~k_debug_hex
  3414                        	func
  3415                        	.function	491
  3416                        ~~k_debug_hex:
  3417                        	longa	on
  3418                        	longi	on
  3419 00:08FC: 3B           	tsc
  3420 00:08FD: 38           	sec
  3421 00:08FE: E9 08 00     	sbc	#L137
  Sat Jul 10 2021  1:15                                                Page 64


  3422 00:0901: 1B           	tcs
  3423 00:0902: 0B           	phd
  3424 00:0903: 5B           	tcd
  3425             00000004   debugString_0	set	4
  3426             00000008   n_0	set	8
  3427                        	.block	491
  3428                        ;	k_debug_string(debugString);
  3429                        	.sym	debugString,4,142,6,32
  3430                        	.sym	n,8,14,6,8
  3431                        	.line	492
  3432 00:0904: D4 0E        	pei	<L137+debugString_0+2
  3433 00:0906: D4 0C        	pei	<L137+debugString_0
  3434 00:0908: 22 xx xx xx  	jsl	~~k_debug_string
  3435                        ;
  3436                        ;	k_debug_string(k_bytetohex(n,k16buffer));
  3437                        	.line	494
  3438 00:090C: A9 xx xx     	lda	#<~~k16buffer
  3439 00:090F: 85 01        	sta	<R0
  3440                        	xref	_BEG_DATA
  3441 00:0911: A9 xx xx     	lda	#_BEG_DATA>>16
  3442 00:0914: 85 03        	sta	<R0+2
  3443 00:0916: D4 03        	pei	<R0+2
  3444 00:0918: D4 01        	pei	<R0
  3445 00:091A: D4 10        	pei	<L137+n_0
  3446 00:091C: 22 xx xx xx  	jsl	~~k_bytetohex
  3447 00:0920: 85 05        	sta	<R1
  3448 00:0922: 86 07        	stx	<R1+2
  3449 00:0924: DA           	phx
  3450 00:0925: 48           	pha
  3451 00:0926: 22 xx xx xx  	jsl	~~k_debug_string
  3452                        ;
  3453                        ;	k_debug_string("\r\n");
  3454                        	.line	496
  3455 00:092A: F4 xx xx     	pea	#^L136
  3456 00:092D: F4 xx xx     	pea	#<L136
  3457 00:0930: 22 xx xx xx  	jsl	~~k_debug_string
  3458                        ;
  3459                        ;	return;
  3460                        	.line	498
  3461                        L140:
  3462 00:0934: A5 0A        	lda	<L137+2
  3463 00:0936: 85 10        	sta	<L137+2+6
  3464 00:0938: A5 09        	lda	<L137+1
  3465 00:093A: 85 0F        	sta	<L137+1+6
  3466 00:093C: 2B           	pld
  3467 00:093D: 3B           	tsc
  3468 00:093E: 18           	clc
  3469 00:093F: 69 0E 00     	adc	#L137+6
  3470 00:0942: 1B           	tcs
  3471 00:0943: 6B           	rtl
  3472                        ;}
  3473                        	.line	499
  3474                        	.endblock	499
  3475             00000008   L137	equ	8
  3476             00000009   L138	equ	9
  3477                        	ends
  3478                        	efunc
  3479                        	.endfunc	499,9,8
  Sat Jul 10 2021  1:15                                                Page 65


  3480                        	.line	499
  3481                        	data
  3482                        L136:
  3483 00:0113: 0D 0A 00     	db	$0D,$0A,$00
  3484 00:0116:              	ends
  3485                        ;
  3486                        ;void k_debug_message(char FAR* debugString,char F
                    AR *message)
  3487                        ;{
  3488                        	.line	501
  3489                        	.line	502
  3490                        	code
  3491                        	xdef	~~k_debug_message
  3492                        	func
  3493                        	.function	502
  3494                        ~~k_debug_message:
  3495                        	longa	on
  3496                        	longi	on
  3497 00:0944: 3B           	tsc
  3498 00:0945: 38           	sec
  3499 00:0946: E9 00 00     	sbc	#L142
  3500 00:0949: 1B           	tcs
  3501 00:094A: 0B           	phd
  3502 00:094B: 5B           	tcd
  3503             00000004   debugString_0	set	4
  3504             00000008   message_0	set	8
  3505                        	.block	502
  3506                        ;	k_debug_string(debugString);
  3507                        	.sym	debugString,4,142,6,32
  3508                        	.sym	message,8,142,6,32
  3509                        	.line	503
  3510 00:094C: D4 06        	pei	<L142+debugString_0+2
  3511 00:094E: D4 04        	pei	<L142+debugString_0
  3512 00:0950: 22 xx xx xx  	jsl	~~k_debug_string
  3513                        ;
  3514                        ;	k_debug_string(message);
  3515                        	.line	505
  3516 00:0954: D4 0A        	pei	<L142+message_0+2
  3517 00:0956: D4 08        	pei	<L142+message_0
  3518 00:0958: 22 xx xx xx  	jsl	~~k_debug_string
  3519                        ;
  3520                        ;	k_debug_string("\r\n");
  3521                        	.line	507
  3522 00:095C: F4 xx xx     	pea	#^L141
  3523 00:095F: F4 xx xx     	pea	#<L141
  3524 00:0962: 22 xx xx xx  	jsl	~~k_debug_string
  3525                        ;
  3526                        ;	return;
  3527                        	.line	509
  3528                        L145:
  3529 00:0966: A5 02        	lda	<L142+2
  3530 00:0968: 85 0A        	sta	<L142+2+8
  3531 00:096A: A5 01        	lda	<L142+1
  3532 00:096C: 85 09        	sta	<L142+1+8
  3533 00:096E: 2B           	pld
  3534 00:096F: 3B           	tsc
  3535 00:0970: 18           	clc
  3536 00:0971: 69 08 00     	adc	#L142+8
  Sat Jul 10 2021  1:15                                                Page 66


  3537 00:0974: 1B           	tcs
  3538 00:0975: 6B           	rtl
  3539                        ;}
  3540                        	.line	510
  3541                        	.endblock	510
  3542             00000000   L142	equ	0
  3543             00000001   L143	equ	1
  3544                        	ends
  3545                        	efunc
  3546                        	.endfunc	510,1,0
  3547                        	.line	510
  3548                        	data
  3549                        L141:
  3550 00:0116: 0D 0A 00     	db	$0D,$0A,$00
  3551 00:0119:              	ends
  3552                        ;
  3553                        ;void k_debug_strings(char FAR* debugString,char F
                    AR *message)
  3554                        ;{
  3555                        	.line	512
  3556                        	.line	513
  3557                        	code
  3558                        	xdef	~~k_debug_strings
  3559                        	func
  3560                        	.function	513
  3561                        ~~k_debug_strings:
  3562                        	longa	on
  3563                        	longi	on
  3564 00:0976: 3B           	tsc
  3565 00:0977: 38           	sec
  3566 00:0978: E9 00 00     	sbc	#L147
  3567 00:097B: 1B           	tcs
  3568 00:097C: 0B           	phd
  3569 00:097D: 5B           	tcd
  3570             00000004   debugString_0	set	4
  3571             00000008   message_0	set	8
  3572                        	.block	513
  3573                        ;	k_debug_message(debugString,message);
  3574                        	.sym	debugString,4,142,6,32
  3575                        	.sym	message,8,142,6,32
  3576                        	.line	514
  3577 00:097E: D4 0A        	pei	<L147+message_0+2
  3578 00:0980: D4 08        	pei	<L147+message_0
  3579 00:0982: D4 06        	pei	<L147+debugString_0+2
  3580 00:0984: D4 04        	pei	<L147+debugString_0
  3581 00:0986: 22 xx xx xx  	jsl	~~k_debug_message
  3582                        ;}
  3583                        	.line	515
  3584                        L150:
  3585 00:098A: A5 02        	lda	<L147+2
  3586 00:098C: 85 0A        	sta	<L147+2+8
  3587 00:098E: A5 01        	lda	<L147+1
  3588 00:0990: 85 09        	sta	<L147+1+8
  3589 00:0992: 2B           	pld
  3590 00:0993: 3B           	tsc
  3591 00:0994: 18           	clc
  3592 00:0995: 69 08 00     	adc	#L147+8
  3593 00:0998: 1B           	tcs
  Sat Jul 10 2021  1:15                                                Page 67


  3594 00:0999: 6B           	rtl
  3595                        	.endblock	515
  3596             00000000   L147	equ	0
  3597             00000001   L148	equ	1
  3598                        	ends
  3599                        	efunc
  3600                        	.endfunc	515,1,0
  3601                        	.line	515
  3602                        ;
  3603                        ;
  3604                        ;void k_debug_nmessage(char FAR* debugString,char 
                    FAR *message,UINT size)
  3605                        ;{
  3606                        	.line	518
  3607                        	.line	519
  3608                        	code
  3609                        	xdef	~~k_debug_nmessage
  3610                        	func
  3611                        	.function	519
  3612                        ~~k_debug_nmessage:
  3613                        	longa	on
  3614                        	longi	on
  3615 00:099A: 3B           	tsc
  3616 00:099B: 38           	sec
  3617 00:099C: E9 00 00     	sbc	#L151
  3618 00:099F: 1B           	tcs
  3619 00:09A0: 0B           	phd
  3620 00:09A1: 5B           	tcd
  3621             00000004   debugString_0	set	4
  3622             00000008   message_0	set	8
  3623             0000000C   size_0	set	12
  3624                        	.block	519
  3625                        ;	k_debug_string(debugString);
  3626                        	.sym	debugString,4,142,6,32
  3627                        	.sym	message,8,142,6,32
  3628                        	.sym	size,12,16,6,16
  3629                        	.line	520
  3630 00:09A2: D4 06        	pei	<L151+debugString_0+2
  3631 00:09A4: D4 04        	pei	<L151+debugString_0
  3632 00:09A6: 22 xx xx xx  	jsl	~~k_debug_string
  3633                        ;	k_debug_string("[");
  3634                        	.line	521
  3635 00:09AA: F4 xx xx     	pea	#^L146
  3636 00:09AD: F4 xx xx     	pea	#<L146
  3637 00:09B0: 22 xx xx xx  	jsl	~~k_debug_string
  3638                        ;	k_debug_nstring(message,size);
  3639                        	.line	522
  3640 00:09B4: D4 0C        	pei	<L151+size_0
  3641 00:09B6: D4 0A        	pei	<L151+message_0+2
  3642 00:09B8: D4 08        	pei	<L151+message_0
  3643 00:09BA: 22 xx xx xx  	jsl	~~k_debug_nstring
  3644                        ;	k_debug_string("]");
  3645                        	.line	523
  3646 00:09BE: F4 xx xx     	pea	#^L146+2
  3647 00:09C1: F4 xx xx     	pea	#<L146+2
  3648 00:09C4: 22 xx xx xx  	jsl	~~k_debug_string
  3649                        ;	k_debug_string("\r\n");
  3650                        	.line	524
  Sat Jul 10 2021  1:15                                                Page 68


  3651 00:09C8: F4 xx xx     	pea	#^L146+4
  3652 00:09CB: F4 xx xx     	pea	#<L146+4
  3653 00:09CE: 22 xx xx xx  	jsl	~~k_debug_string
  3654                        ;
  3655                        ;	return;
  3656                        	.line	526
  3657                        L154:
  3658 00:09D2: A5 02        	lda	<L151+2
  3659 00:09D4: 85 0C        	sta	<L151+2+10
  3660 00:09D6: A5 01        	lda	<L151+1
  3661 00:09D8: 85 0B        	sta	<L151+1+10
  3662 00:09DA: 2B           	pld
  3663 00:09DB: 3B           	tsc
  3664 00:09DC: 18           	clc
  3665 00:09DD: 69 0A 00     	adc	#L151+10
  3666 00:09E0: 1B           	tcs
  3667 00:09E1: 6B           	rtl
  3668                        ;}
  3669                        	.line	527
  3670                        	.endblock	527
  3671             00000000   L151	equ	0
  3672             00000001   L152	equ	1
  3673                        	ends
  3674                        	efunc
  3675                        	.endfunc	527,1,0
  3676                        	.line	527
  3677                        	data
  3678                        L146:
  3679 00:0119: 5B 00 5D 00  	db	$5B,$00,$5D,$00,$0D,$0A,$00
       00:011D: 0D 0A 00 
  3680 00:0120:              	ends
  3681                        ;
  3682                        ;void k_debug_nstrings(char FAR* debugString,char 
                    FAR *message,UINT size)
  3683                        ;{
  3684                        	.line	529
  3685                        	.line	530
  3686                        	code
  3687                        	xdef	~~k_debug_nstrings
  3688                        	func
  3689                        	.function	530
  3690                        ~~k_debug_nstrings:
  3691                        	longa	on
  3692                        	longi	on
  3693 00:09E2: 3B           	tsc
  3694 00:09E3: 38           	sec
  3695 00:09E4: E9 00 00     	sbc	#L156
  3696 00:09E7: 1B           	tcs
  3697 00:09E8: 0B           	phd
  3698 00:09E9: 5B           	tcd
  3699             00000004   debugString_0	set	4
  3700             00000008   message_0	set	8
  3701             0000000C   size_0	set	12
  3702                        	.block	530
  3703                        ;	k_debug_nmessage(debugString,message,size);
  3704                        	.sym	debugString,4,142,6,32
  3705                        	.sym	message,8,142,6,32
  3706                        	.sym	size,12,16,6,16
  Sat Jul 10 2021  1:15                                                Page 69


  3707                        	.line	531
  3708 00:09EA: D4 0C        	pei	<L156+size_0
  3709 00:09EC: D4 0A        	pei	<L156+message_0+2
  3710 00:09EE: D4 08        	pei	<L156+message_0
  3711 00:09F0: D4 06        	pei	<L156+debugString_0+2
  3712 00:09F2: D4 04        	pei	<L156+debugString_0
  3713 00:09F4: 22 xx xx xx  	jsl	~~k_debug_nmessage
  3714                        ;}
  3715                        	.line	532
  3716                        L159:
  3717 00:09F8: A5 02        	lda	<L156+2
  3718 00:09FA: 85 0C        	sta	<L156+2+10
  3719 00:09FC: A5 01        	lda	<L156+1
  3720 00:09FE: 85 0B        	sta	<L156+1+10
  3721 00:0A00: 2B           	pld
  3722 00:0A01: 3B           	tsc
  3723 00:0A02: 18           	clc
  3724 00:0A03: 69 0A 00     	adc	#L156+10
  3725 00:0A06: 1B           	tcs
  3726 00:0A07: 6B           	rtl
  3727                        	.endblock	532
  3728             00000000   L156	equ	0
  3729             00000001   L157	equ	1
  3730                        	ends
  3731                        	efunc
  3732                        	.endfunc	532,1,0
  3733                        	.line	532
  3734                        ;
  3735                        ;/*
  3736                        ; *
  3737                        ; *
  3738                        ; *
  3739                        ; *
  3740                        ; */
  3741                        ;void k_debug_hexchar(LPSTR debugString, UCHAR n)
  3742                        ;{
  3743                        	.line	540
  3744                        	.line	541
  3745                        	code
  3746                        	xdef	~~k_debug_hexchar
  3747                        	func
  3748                        	.function	541
  3749                        ~~k_debug_hexchar:
  3750                        	longa	on
  3751                        	longi	on
  3752 00:0A08: 3B           	tsc
  3753 00:0A09: 38           	sec
  3754 00:0A0A: E9 0A 00     	sbc	#L160
  3755 00:0A0D: 1B           	tcs
  3756 00:0A0E: 0B           	phd
  3757 00:0A0F: 5B           	tcd
  3758             00000004   debugString_0	set	4
  3759             00000008   n_0	set	8
  3760                        	.block	541
  3761                        ;	char b[2];
  3762                        ;
  3763                        ;	b[0] = n;
  3764             00000000   b_1	set	0
  Sat Jul 10 2021  1:15                                                Page 70


  3765                        	.sym	b,0,110,1,0,2
  3766                        	.sym	debugString,4,142,6,32
  3767                        	.sym	n,8,14,6,8
  3768                        	.line	544
  3769 00:0A10: E2 20        	sep	#$20
  3770                        	longa	off
  3771 00:0A12: A5 12        	lda	<L160+n_0
  3772 00:0A14: 85 09        	sta	<L161+b_1
  3773 00:0A16: C2 20        	rep	#$20
  3774                        	longa	on
  3775                        ;	b[1] = 0;
  3776                        	.line	545
  3777 00:0A18: E2 20        	sep	#$20
  3778                        	longa	off
  3779 00:0A1A: 64 0A        	stz	<L161+b_1+1
  3780 00:0A1C: C2 20        	rep	#$20
  3781                        	longa	on
  3782                        ;
  3783                        ;	k_debug_string(debugString);
  3784                        	.line	547
  3785 00:0A1E: D4 10        	pei	<L160+debugString_0+2
  3786 00:0A20: D4 0E        	pei	<L160+debugString_0
  3787 00:0A22: 22 xx xx xx  	jsl	~~k_debug_string
  3788                        ;
  3789                        ;	k_debug_string(k_bytetohex(n,k16buffer));
  3790                        	.line	549
  3791 00:0A26: A9 xx xx     	lda	#<~~k16buffer
  3792 00:0A29: 85 01        	sta	<R0
  3793                        	xref	_BEG_DATA
  3794 00:0A2B: A9 xx xx     	lda	#_BEG_DATA>>16
  3795 00:0A2E: 85 03        	sta	<R0+2
  3796 00:0A30: D4 03        	pei	<R0+2
  3797 00:0A32: D4 01        	pei	<R0
  3798 00:0A34: D4 12        	pei	<L160+n_0
  3799 00:0A36: 22 xx xx xx  	jsl	~~k_bytetohex
  3800 00:0A3A: 85 05        	sta	<R1
  3801 00:0A3C: 86 07        	stx	<R1+2
  3802 00:0A3E: DA           	phx
  3803 00:0A3F: 48           	pha
  3804 00:0A40: 22 xx xx xx  	jsl	~~k_debug_string
  3805                        ;	k_debug_string("(");
  3806                        	.line	550
  3807 00:0A44: F4 xx xx     	pea	#^L155
  3808 00:0A47: F4 xx xx     	pea	#<L155
  3809 00:0A4A: 22 xx xx xx  	jsl	~~k_debug_string
  3810                        ;	k_debug_string(b);
  3811                        	.line	551
  3812 00:0A4E: F4 00 00     	pea	#0
  3813 00:0A51: 18           	clc
  3814 00:0A52: 7B           	tdc
  3815 00:0A53: 69 09 00     	adc	#<L161+b_1
  3816 00:0A56: 48           	pha
  3817 00:0A57: 22 xx xx xx  	jsl	~~k_debug_string
  3818                        ;	k_debug_string(")");
  3819                        	.line	552
  3820 00:0A5B: F4 xx xx     	pea	#^L155+2
  3821 00:0A5E: F4 xx xx     	pea	#<L155+2
  3822 00:0A61: 22 xx xx xx  	jsl	~~k_debug_string
  Sat Jul 10 2021  1:15                                                Page 71


  3823                        ;	k_debug_string("\r\n");
  3824                        	.line	553
  3825 00:0A65: F4 xx xx     	pea	#^L155+4
  3826 00:0A68: F4 xx xx     	pea	#<L155+4
  3827 00:0A6B: 22 xx xx xx  	jsl	~~k_debug_string
  3828                        ;
  3829                        ;	return;
  3830                        	.line	555
  3831                        L163:
  3832 00:0A6F: A5 0C        	lda	<L160+2
  3833 00:0A71: 85 12        	sta	<L160+2+6
  3834 00:0A73: A5 0B        	lda	<L160+1
  3835 00:0A75: 85 11        	sta	<L160+1+6
  3836 00:0A77: 2B           	pld
  3837 00:0A78: 3B           	tsc
  3838 00:0A79: 18           	clc
  3839 00:0A7A: 69 10 00     	adc	#L160+6
  3840 00:0A7D: 1B           	tcs
  3841 00:0A7E: 6B           	rtl
  3842                        ;}
  3843                        	.line	556
  3844                        	.endblock	556
  3845             0000000A   L160	equ	10
  3846             00000009   L161	equ	9
  3847                        	ends
  3848                        	efunc
  3849                        	.endfunc	556,9,10
  3850                        	.line	556
  3851                        	data
  3852                        L155:
  3853 00:0120: 28 00 29 00  	db	$28,$00,$29,$00,$0D,$0A,$00
       00:0124: 0D 0A 00 
  3854 00:0127:              	ends
  3855                        ;
  3856                        ;void k_debug_on(UCHAR n)
  3857                        ;{
  3858                        	.line	558
  3859                        	.line	559
  3860                        	code
  3861                        	xdef	~~k_debug_on
  3862                        	func
  3863                        	.function	559
  3864                        ~~k_debug_on:
  3865                        	longa	on
  3866                        	longi	on
  3867 00:0A7F: 3B           	tsc
  3868 00:0A80: 38           	sec
  3869 00:0A81: E9 00 00     	sbc	#L165
  3870 00:0A84: 1B           	tcs
  3871 00:0A85: 0B           	phd
  3872 00:0A86: 5B           	tcd
  3873             00000004   n_0	set	4
  3874                        	.block	559
  3875                        ;	if(n == 0)
  3876                        	.sym	n,4,14,6,8
  3877                        	.line	560
  3878                        ;	{
  3879 00:0A87: A5 04        	lda	<L165+n_0
  Sat Jul 10 2021  1:15                                                Page 72


  3880 00:0A89: 29 FF 00     	and	#$ff
  3881 00:0A8C: F0 03        	beq	L168
  3882 00:0A8E: 82 0D 00     	brl	L10048
  3883                        L168:
  3884                        	.line	561
  3885                        ;		k_debug_string("0");
  3886                        	.line	562
  3887 00:0A91: F4 xx xx     	pea	#^L164
  3888 00:0A94: F4 xx xx     	pea	#<L164
  3889 00:0A97: 22 xx xx xx  	jsl	~~k_debug_string
  3890                        ;	}
  3891                        	.line	563
  3892                        ;	else
  3893 00:0A9B: 82 0A 00     	brl	L10049
  3894                        L10048:
  3895                        ;	{
  3896                        	.line	565
  3897                        ;		k_debug_string("1");
  3898                        	.line	566
  3899 00:0A9E: F4 xx xx     	pea	#^L164+2
  3900 00:0AA1: F4 xx xx     	pea	#<L164+2
  3901 00:0AA4: 22 xx xx xx  	jsl	~~k_debug_string
  3902                        ;	}
  3903                        	.line	567
  3904                        L10049:
  3905                        ;}
  3906                        	.line	568
  3907                        L169:
  3908 00:0AA8: A5 02        	lda	<L165+2
  3909 00:0AAA: 85 04        	sta	<L165+2+2
  3910 00:0AAC: A5 01        	lda	<L165+1
  3911 00:0AAE: 85 03        	sta	<L165+1+2
  3912 00:0AB0: 2B           	pld
  3913 00:0AB1: 3B           	tsc
  3914 00:0AB2: 18           	clc
  3915 00:0AB3: 69 02 00     	adc	#L165+2
  3916 00:0AB6: 1B           	tcs
  3917 00:0AB7: 6B           	rtl
  3918                        	.endblock	568
  3919             00000000   L165	equ	0
  3920             00000001   L166	equ	1
  3921                        	ends
  3922                        	efunc
  3923                        	.endfunc	568,1,0
  3924                        	.line	568
  3925                        	data
  3926                        L164:
  3927 00:0127: 30 00 31 00  	db	$30,$00,$31,$00
  3928 00:012B:              	ends
  3929                        ;
  3930                        ;void k_debug_bits(LPSTR debugString, UCHAR n)
  3931                        ;{
  3932                        	.line	570
  3933                        	.line	571
  3934                        	code
  3935                        	xdef	~~k_debug_bits
  3936                        	func
  3937                        	.function	571
  Sat Jul 10 2021  1:15                                                Page 73


  3938                        ~~k_debug_bits:
  3939                        	longa	on
  3940                        	longi	on
  3941 00:0AB8: 3B           	tsc
  3942 00:0AB9: 38           	sec
  3943 00:0ABA: E9 08 00     	sbc	#L171
  3944 00:0ABD: 1B           	tcs
  3945 00:0ABE: 0B           	phd
  3946 00:0ABF: 5B           	tcd
  3947             00000004   debugString_0	set	4
  3948             00000008   n_0	set	8
  3949                        	.block	571
  3950                        ;	PDEBUGBYTEBITS pbits = (PDEBUGBYTEBITS)&n;
  3951                        ;
  3952                        ;	k_debug_string(debugString);
  3953             00000000   pbits_1	set	0
  3954                        	.sym	pbits,0,138,1,32,81
  3955                        	.sym	debugString,4,142,6,32
  3956                        	.sym	n,8,14,6,8
  3957 00:0AC0: 18           	clc
  3958 00:0AC1: 7B           	tdc
  3959 00:0AC2: 69 10 00     	adc	#<L171+n_0
  3960 00:0AC5: 85 05        	sta	<L172+pbits_1
  3961 00:0AC7: A9 00 00     	lda	#$0
  3962 00:0ACA: 85 07        	sta	<L172+pbits_1+2
  3963                        	.line	574
  3964 00:0ACC: D4 0E        	pei	<L171+debugString_0+2
  3965 00:0ACE: D4 0C        	pei	<L171+debugString_0
  3966 00:0AD0: 22 xx xx xx  	jsl	~~k_debug_string
  3967                        ;
  3968                        ;
  3969                        ;	/*
  3970                        ;	k_debug_on(pbits->bit7);
  3971                        ;	k_debug_on(pbits->bit6);
  3972                        ;	k_debug_on(pbits->bit5);
  3973                        ;	k_debug_on(pbits->bit4);
  3974                        ;	k_debug_on(pbits->bit3);
  3975                        ;	k_debug_on(pbits->bit2);
  3976                        ;	k_debug_on(pbits->bit1);
  3977                        ;	k_debug_on(pbits->bit0);
  3978                        ;	*/
  3979                        ;
  3980                        ;	k_debug_on(pbits->bit0);
  3981                        	.line	588
  3982 00:0AD4: E2 20        	sep	#$20
  3983                        	longa	off
  3984 00:0AD6: A7 05        	lda	[<L172+pbits_1]
  3985 00:0AD8: 85 01        	sta	<R0
  3986 00:0ADA: C2 20        	rep	#$20
  3987                        	longa	on
  3988 00:0ADC: E2 20        	sep	#$20
  3989                        	longa	off
  3990 00:0ADE: 46 01        	lsr	<R0
  3991 00:0AE0: 46 01        	lsr	<R0
  3992 00:0AE2: 46 01        	lsr	<R0
  3993 00:0AE4: 46 01        	lsr	<R0
  3994 00:0AE6: 46 01        	lsr	<R0
  3995 00:0AE8: 46 01        	lsr	<R0
  Sat Jul 10 2021  1:15                                                Page 74


  3996 00:0AEA: 46 01        	lsr	<R0
  3997 00:0AEC: C2 20        	rep	#$20
  3998                        	longa	on
  3999 00:0AEE: D4 01        	pei	<R0
  4000 00:0AF0: 22 xx xx xx  	jsl	~~k_debug_on
  4001                        ;	k_debug_on(pbits->bit1);
  4002                        	.line	589
  4003 00:0AF4: E2 20        	sep	#$20
  4004                        	longa	off
  4005 00:0AF6: A7 05        	lda	[<L172+pbits_1]
  4006 00:0AF8: 85 01        	sta	<R0
  4007 00:0AFA: C2 20        	rep	#$20
  4008                        	longa	on
  4009 00:0AFC: E2 20        	sep	#$20
  4010                        	longa	off
  4011 00:0AFE: 46 01        	lsr	<R0
  4012 00:0B00: 46 01        	lsr	<R0
  4013 00:0B02: 46 01        	lsr	<R0
  4014 00:0B04: 46 01        	lsr	<R0
  4015 00:0B06: 46 01        	lsr	<R0
  4016 00:0B08: 46 01        	lsr	<R0
  4017 00:0B0A: C2 20        	rep	#$20
  4018                        	longa	on
  4019 00:0B0C: E2 20        	sep	#$20
  4020                        	longa	off
  4021 00:0B0E: A5 01        	lda	<R0
  4022 00:0B10: 29 01        	and	#<$1
  4023 00:0B12: 85 01        	sta	<R0
  4024 00:0B14: C2 20        	rep	#$20
  4025                        	longa	on
  4026 00:0B16: D4 01        	pei	<R0
  4027 00:0B18: 22 xx xx xx  	jsl	~~k_debug_on
  4028                        ;	k_debug_on(pbits->bit2);
  4029                        	.line	590
  4030 00:0B1C: E2 20        	sep	#$20
  4031                        	longa	off
  4032 00:0B1E: A7 05        	lda	[<L172+pbits_1]
  4033 00:0B20: 85 01        	sta	<R0
  4034 00:0B22: C2 20        	rep	#$20
  4035                        	longa	on
  4036 00:0B24: E2 20        	sep	#$20
  4037                        	longa	off
  4038 00:0B26: 46 01        	lsr	<R0
  4039 00:0B28: 46 01        	lsr	<R0
  4040 00:0B2A: 46 01        	lsr	<R0
  4041 00:0B2C: 46 01        	lsr	<R0
  4042 00:0B2E: 46 01        	lsr	<R0
  4043 00:0B30: C2 20        	rep	#$20
  4044                        	longa	on
  4045 00:0B32: E2 20        	sep	#$20
  4046                        	longa	off
  4047 00:0B34: A5 01        	lda	<R0
  4048 00:0B36: 29 01        	and	#<$1
  4049 00:0B38: 85 01        	sta	<R0
  4050 00:0B3A: C2 20        	rep	#$20
  4051                        	longa	on
  4052 00:0B3C: D4 01        	pei	<R0
  4053 00:0B3E: 22 xx xx xx  	jsl	~~k_debug_on
  Sat Jul 10 2021  1:15                                                Page 75


  4054                        ;	k_debug_on(pbits->bit3);
  4055                        	.line	591
  4056 00:0B42: E2 20        	sep	#$20
  4057                        	longa	off
  4058 00:0B44: A7 05        	lda	[<L172+pbits_1]
  4059 00:0B46: 85 01        	sta	<R0
  4060 00:0B48: C2 20        	rep	#$20
  4061                        	longa	on
  4062 00:0B4A: E2 20        	sep	#$20
  4063                        	longa	off
  4064 00:0B4C: 46 01        	lsr	<R0
  4065 00:0B4E: 46 01        	lsr	<R0
  4066 00:0B50: 46 01        	lsr	<R0
  4067 00:0B52: 46 01        	lsr	<R0
  4068 00:0B54: C2 20        	rep	#$20
  4069                        	longa	on
  4070 00:0B56: E2 20        	sep	#$20
  4071                        	longa	off
  4072 00:0B58: A5 01        	lda	<R0
  4073 00:0B5A: 29 01        	and	#<$1
  4074 00:0B5C: 85 01        	sta	<R0
  4075 00:0B5E: C2 20        	rep	#$20
  4076                        	longa	on
  4077 00:0B60: D4 01        	pei	<R0
  4078 00:0B62: 22 xx xx xx  	jsl	~~k_debug_on
  4079                        ;	k_debug_on(pbits->bit4);
  4080                        	.line	592
  4081 00:0B66: E2 20        	sep	#$20
  4082                        	longa	off
  4083 00:0B68: A7 05        	lda	[<L172+pbits_1]
  4084 00:0B6A: 85 01        	sta	<R0
  4085 00:0B6C: C2 20        	rep	#$20
  4086                        	longa	on
  4087 00:0B6E: E2 20        	sep	#$20
  4088                        	longa	off
  4089 00:0B70: 46 01        	lsr	<R0
  4090 00:0B72: 46 01        	lsr	<R0
  4091 00:0B74: 46 01        	lsr	<R0
  4092 00:0B76: C2 20        	rep	#$20
  4093                        	longa	on
  4094 00:0B78: E2 20        	sep	#$20
  4095                        	longa	off
  4096 00:0B7A: A5 01        	lda	<R0
  4097 00:0B7C: 29 01        	and	#<$1
  4098 00:0B7E: 85 01        	sta	<R0
  4099 00:0B80: C2 20        	rep	#$20
  4100                        	longa	on
  4101 00:0B82: D4 01        	pei	<R0
  4102 00:0B84: 22 xx xx xx  	jsl	~~k_debug_on
  4103                        ;	k_debug_on(pbits->bit5);
  4104                        	.line	593
  4105 00:0B88: E2 20        	sep	#$20
  4106                        	longa	off
  4107 00:0B8A: A7 05        	lda	[<L172+pbits_1]
  4108 00:0B8C: 85 01        	sta	<R0
  4109 00:0B8E: C2 20        	rep	#$20
  4110                        	longa	on
  4111 00:0B90: E2 20        	sep	#$20
  Sat Jul 10 2021  1:15                                                Page 76


  4112                        	longa	off
  4113 00:0B92: 46 01        	lsr	<R0
  4114 00:0B94: 46 01        	lsr	<R0
  4115 00:0B96: C2 20        	rep	#$20
  4116                        	longa	on
  4117 00:0B98: E2 20        	sep	#$20
  4118                        	longa	off
  4119 00:0B9A: A5 01        	lda	<R0
  4120 00:0B9C: 29 01        	and	#<$1
  4121 00:0B9E: 85 01        	sta	<R0
  4122 00:0BA0: C2 20        	rep	#$20
  4123                        	longa	on
  4124 00:0BA2: D4 01        	pei	<R0
  4125 00:0BA4: 22 xx xx xx  	jsl	~~k_debug_on
  4126                        ;	k_debug_on(pbits->bit6);
  4127                        	.line	594
  4128 00:0BA8: E2 20        	sep	#$20
  4129                        	longa	off
  4130 00:0BAA: A7 05        	lda	[<L172+pbits_1]
  4131 00:0BAC: 85 01        	sta	<R0
  4132 00:0BAE: C2 20        	rep	#$20
  4133                        	longa	on
  4134 00:0BB0: E2 20        	sep	#$20
  4135                        	longa	off
  4136 00:0BB2: 46 01        	lsr	<R0
  4137 00:0BB4: C2 20        	rep	#$20
  4138                        	longa	on
  4139 00:0BB6: E2 20        	sep	#$20
  4140                        	longa	off
  4141 00:0BB8: A5 01        	lda	<R0
  4142 00:0BBA: 29 01        	and	#<$1
  4143 00:0BBC: 85 01        	sta	<R0
  4144 00:0BBE: C2 20        	rep	#$20
  4145                        	longa	on
  4146 00:0BC0: D4 01        	pei	<R0
  4147 00:0BC2: 22 xx xx xx  	jsl	~~k_debug_on
  4148                        ;	k_debug_on(pbits->bit7);
  4149                        	.line	595
  4150 00:0BC6: E2 20        	sep	#$20
  4151                        	longa	off
  4152 00:0BC8: A7 05        	lda	[<L172+pbits_1]
  4153 00:0BCA: 85 01        	sta	<R0
  4154 00:0BCC: C2 20        	rep	#$20
  4155                        	longa	on
  4156 00:0BCE: E2 20        	sep	#$20
  4157                        	longa	off
  4158 00:0BD0: A5 01        	lda	<R0
  4159 00:0BD2: 29 01        	and	#<$1
  4160 00:0BD4: 85 01        	sta	<R0
  4161 00:0BD6: C2 20        	rep	#$20
  4162                        	longa	on
  4163 00:0BD8: D4 01        	pei	<R0
  4164 00:0BDA: 22 xx xx xx  	jsl	~~k_debug_on
  4165                        ;
  4166                        ;
  4167                        ;	/*
  4168                        ;	k_debug_string(k_bytetohex(pbits->bit7,k16buffer
                    ));
  Sat Jul 10 2021  1:15                                                Page 77


  4169                        ;	k_debug_string(k_bytetohex(pbits->bit6,k16buffer
                    ));
  4170                        ;	k_debug_string(k_bytetohex(pbits->bit5,k16buffer
                    ));
  4171                        ;	k_debug_string(k_bytetohex(pbits->bit4,k16buffer
                    ));
  4172                        ;	k_debug_string(k_bytetohex(pbits->bit3,k16buffer
                    ));
  4173                        ;	k_debug_string(k_bytetohex(pbits->bit2,k16buffer
                    ));
  4174                        ;	k_debug_string(k_bytetohex(pbits->bit1,k16buffer
                    ));
  4175                        ;	k_debug_string(k_bytetohex(pbits->bit0,k16buffer
                    ));
  4176                        ;	*/
  4177                        ;
  4178                        ;	k_debug_string("\r\n");
  4179                        	.line	609
  4180 00:0BDE: F4 xx xx     	pea	#^L170
  4181 00:0BE1: F4 xx xx     	pea	#<L170
  4182 00:0BE4: 22 xx xx xx  	jsl	~~k_debug_string
  4183                        ;}
  4184                        	.line	610
  4185                        L174:
  4186 00:0BE8: A5 0A        	lda	<L171+2
  4187 00:0BEA: 85 10        	sta	<L171+2+6
  4188 00:0BEC: A5 09        	lda	<L171+1
  4189 00:0BEE: 85 0F        	sta	<L171+1+6
  4190 00:0BF0: 2B           	pld
  4191 00:0BF1: 3B           	tsc
  4192 00:0BF2: 18           	clc
  4193 00:0BF3: 69 0E 00     	adc	#L171+6
  4194 00:0BF6: 1B           	tcs
  4195 00:0BF7: 6B           	rtl
  4196                        	.endblock	610
  4197             00000008   L171	equ	8
  4198             00000005   L172	equ	5
  4199                        	ends
  4200                        	efunc
  4201                        	.endfunc	610,5,8
  4202                        	.line	610
  4203                        	data
  4204                        L170:
  4205 00:012B: 0D 0A 00     	db	$0D,$0A,$00
  4206 00:012E:              	ends
  4207                        ;
  4208                        ;void k_debug_byte_array(LPCHAR debugString,PBYTE 
                    n,ULONG size)
  4209                        ;{
  4210                        	.line	612
  4211                        	.line	613
  4212                        	code
  4213                        	xdef	~~k_debug_byte_array
  4214                        	func
  4215                        	.function	613
  4216                        ~~k_debug_byte_array:
  4217                        	longa	on
  4218                        	longi	on
  Sat Jul 10 2021  1:15                                                Page 78


  4219 00:0BF8: 3B           	tsc
  4220 00:0BF9: 38           	sec
  4221 00:0BFA: E9 0C 00     	sbc	#L176
  4222 00:0BFD: 1B           	tcs
  4223 00:0BFE: 0B           	phd
  4224 00:0BFF: 5B           	tcd
  4225             00000004   debugString_0	set	4
  4226             00000008   n_0	set	8
  4227             0000000C   size_0	set	12
  4228                        	.block	613
  4229                        ;	ULONG i = 0;
  4230                        ;	k_debug_string(debugString);
  4231             00000000   i_1	set	0
  4232                        	.sym	i,0,18,1,32
  4233                        	.sym	debugString,4,142,6,32
  4234                        	.sym	n,8,142,6,32
  4235                        	.sym	size,12,18,6,32
  4236 00:0C00: 64 09        	stz	<L177+i_1
  4237 00:0C02: 64 0B        	stz	<L177+i_1+2
  4238                        	.line	615
  4239 00:0C04: D4 12        	pei	<L176+debugString_0+2
  4240 00:0C06: D4 10        	pei	<L176+debugString_0
  4241 00:0C08: 22 xx xx xx  	jsl	~~k_debug_string
  4242                        ;
  4243                        ;	for(i=0;i<size;i++)
  4244                        	.line	617
  4245 00:0C0C: 64 09        	stz	<L177+i_1
  4246 00:0C0E: 64 0B        	stz	<L177+i_1+2
  4247 00:0C10: 82 45 00     	brl	L10053
  4248                        L10052:
  4249                        ;	{
  4250                        	.line	618
  4251                        ;		if(i!=0)
  4252                        	.line	619
  4253                        ;			k_debug_string(" ");
  4254 00:0C13: A5 09        	lda	<L177+i_1
  4255 00:0C15: 05 0B        	ora	<L177+i_1+2
  4256 00:0C17: D0 03        	bne	L179
  4257 00:0C19: 82 0A 00     	brl	L10054
  4258                        L179:
  4259                        	.line	620
  4260 00:0C1C: F4 xx xx     	pea	#^L175
  4261 00:0C1F: F4 xx xx     	pea	#<L175
  4262 00:0C22: 22 xx xx xx  	jsl	~~k_debug_string
  4263                        ;
  4264                        ;		k_debug_string(k_bytetohex(n[i],k16buffe
                    r));
  4265                        L10054:
  4266                        	.line	622
  4267 00:0C26: A9 xx xx     	lda	#<~~k16buffer
  4268 00:0C29: 85 01        	sta	<R0
  4269                        	xref	_BEG_DATA
  4270 00:0C2B: A9 xx xx     	lda	#_BEG_DATA>>16
  4271 00:0C2E: 85 03        	sta	<R0+2
  4272 00:0C30: D4 03        	pei	<R0+2
  4273 00:0C32: D4 01        	pei	<R0
  4274 00:0C34: 18           	clc
  4275 00:0C35: A5 14        	lda	<L176+n_0
  Sat Jul 10 2021  1:15                                                Page 79


  4276 00:0C37: 65 09        	adc	<L177+i_1
  4277 00:0C39: 85 05        	sta	<R1
  4278 00:0C3B: A5 16        	lda	<L176+n_0+2
  4279 00:0C3D: 65 0B        	adc	<L177+i_1+2
  4280 00:0C3F: 85 07        	sta	<R1+2
  4281 00:0C41: A7 05        	lda	[<R1]
  4282 00:0C43: 48           	pha
  4283 00:0C44: 22 xx xx xx  	jsl	~~k_bytetohex
  4284 00:0C48: 85 05        	sta	<R1
  4285 00:0C4A: 86 07        	stx	<R1+2
  4286 00:0C4C: DA           	phx
  4287 00:0C4D: 48           	pha
  4288 00:0C4E: 22 xx xx xx  	jsl	~~k_debug_string
  4289                        ;	}
  4290                        	.line	623
  4291                        L10050:
  4292 00:0C52: E6 09        	inc	<L177+i_1
  4293 00:0C54: D0 02        	bne	L180
  4294 00:0C56: E6 0B        	inc	<L177+i_1+2
  4295                        L180:
  4296                        L10053:
  4297 00:0C58: A5 09        	lda	<L177+i_1
  4298 00:0C5A: C5 18        	cmp	<L176+size_0
  4299 00:0C5C: A5 0B        	lda	<L177+i_1+2
  4300 00:0C5E: E5 1A        	sbc	<L176+size_0+2
  4301 00:0C60: B0 03        	bcs	L181
  4302 00:0C62: 82 AE FF     	brl	L10052
  4303                        L181:
  4304                        L10051:
  4305                        ;
  4306                        ;	k_debug_string("\r\n");
  4307                        	.line	625
  4308 00:0C65: F4 xx xx     	pea	#^L175+2
  4309 00:0C68: F4 xx xx     	pea	#<L175+2
  4310 00:0C6B: 22 xx xx xx  	jsl	~~k_debug_string
  4311                        ;
  4312                        ;	return;
  4313                        	.line	627
  4314                        L182:
  4315 00:0C6F: A5 0E        	lda	<L176+2
  4316 00:0C71: 85 1A        	sta	<L176+2+12
  4317 00:0C73: A5 0D        	lda	<L176+1
  4318 00:0C75: 85 19        	sta	<L176+1+12
  4319 00:0C77: 2B           	pld
  4320 00:0C78: 3B           	tsc
  4321 00:0C79: 18           	clc
  4322 00:0C7A: 69 18 00     	adc	#L176+12
  4323 00:0C7D: 1B           	tcs
  4324 00:0C7E: 6B           	rtl
  4325                        ;}
  4326                        	.line	628
  4327                        	.endblock	628
  4328             0000000C   L176	equ	12
  4329             00000009   L177	equ	9
  4330                        	ends
  4331                        	efunc
  4332                        	.endfunc	628,9,12
  4333                        	.line	628
  Sat Jul 10 2021  1:15                                                Page 80


  4334                        	data
  4335                        L175:
  4336 00:012E: 20 00 0D 0A  	db	$20,$00,$0D,$0A,$00
       00:0132: 00 
  4337 00:0133:              	ends
  4338                        ;
  4339                        ;
  4340                        ;/**
  4341                        ; *
  4342                        ; *
  4343                        ; */
  4344                        ;void k_debug_node(PFXNODE node)
  4345                        ;{
  4346                        	.line	635
  4347                        	.line	636
  4348                        	code
  4349                        	xdef	~~k_debug_node
  4350                        	func
  4351                        	.function	636
  4352                        ~~k_debug_node:
  4353                        	longa	on
  4354                        	longi	on
  4355 00:0C7F: 3B           	tsc
  4356 00:0C80: 38           	sec
  4357 00:0C81: E9 04 00     	sbc	#L184
  4358 00:0C84: 1B           	tcs
  4359 00:0C85: 0B           	phd
  4360 00:0C86: 5B           	tcd
  4361             00000004   node_0	set	4
  4362                        	.block	636
  4363                        ;	k_debug_pointer("     NODE:",node);
  4364                        	.sym	node,4,138,6,32,5
  4365                        	.line	637
  4366 00:0C87: D4 0A        	pei	<L184+node_0+2
  4367 00:0C89: D4 08        	pei	<L184+node_0
  4368 00:0C8B: F4 xx xx     	pea	#^L183
  4369 00:0C8E: F4 xx xx     	pea	#<L183
  4370 00:0C91: 22 xx xx xx  	jsl	~~k_debug_pointer
  4371                        ;	if(node && node->name)
  4372                        	.line	638
  4373                        ;	{
  4374 00:0C95: A5 08        	lda	<L184+node_0
  4375 00:0C97: 05 0A        	ora	<L184+node_0+2
  4376 00:0C99: D0 03        	bne	L187
  4377 00:0C9B: 82 74 00     	brl	L10055
  4378                        L187:
  4379 00:0C9E: 18           	clc
  4380 00:0C9F: A9 0E 00     	lda	#$e
  4381 00:0CA2: 65 08        	adc	<L184+node_0
  4382 00:0CA4: 85 01        	sta	<R0
  4383 00:0CA6: A9 00 00     	lda	#$0
  4384 00:0CA9: 65 0A        	adc	<L184+node_0+2
  4385 00:0CAB: 85 03        	sta	<R0+2
  4386 00:0CAD: A5 01        	lda	<R0
  4387 00:0CAF: 05 03        	ora	<R0+2
  4388 00:0CB1: D0 03        	bne	L188
  4389 00:0CB3: 82 5C 00     	brl	L10055
  4390                        L188:
  Sat Jul 10 2021  1:15                                                Page 81


  4391                        	.line	639
  4392                        ;		node->name[31] = 0;
  4393                        	.line	640
  4394 00:0CB6: E2 20        	sep	#$20
  4395                        	longa	off
  4396 00:0CB8: A9 00        	lda	#$0
  4397 00:0CBA: A0 2D 00     	ldy	#$2d
  4398 00:0CBD: 97 08        	sta	[<L184+node_0],Y
  4399 00:0CBF: C2 20        	rep	#$20
  4400                        	longa	on
  4401                        ;		k_debug_string("NODE NAME:");
  4402                        	.line	641
  4403 00:0CC1: F4 xx xx     	pea	#^L183+11
  4404 00:0CC4: F4 xx xx     	pea	#<L183+11
  4405 00:0CC7: 22 xx xx xx  	jsl	~~k_debug_string
  4406                        ;		k_debug_string(node->name);
  4407                        	.line	642
  4408 00:0CCB: 18           	clc
  4409 00:0CCC: A9 0E 00     	lda	#$e
  4410 00:0CCF: 65 08        	adc	<L184+node_0
  4411 00:0CD1: 85 01        	sta	<R0
  4412 00:0CD3: A9 00 00     	lda	#$0
  4413 00:0CD6: 65 0A        	adc	<L184+node_0+2
  4414 00:0CD8: 85 03        	sta	<R0+2
  4415 00:0CDA: D4 03        	pei	<R0+2
  4416 00:0CDC: D4 01        	pei	<R0
  4417 00:0CDE: 22 xx xx xx  	jsl	~~k_debug_string
  4418                        ;		k_debug_string("\r\n");
  4419                        	.line	643
  4420 00:0CE2: F4 xx xx     	pea	#^L183+22
  4421 00:0CE5: F4 xx xx     	pea	#<L183+22
  4422 00:0CE8: 22 xx xx xx  	jsl	~~k_debug_string
  4423                        ;
  4424                        ;		k_debug_integer("     TYPE:",node->type)
                    ;
  4425                        	.line	645
  4426 00:0CEC: A7 08        	lda	[<L184+node_0]
  4427 00:0CEE: 29 FF 00     	and	#$ff
  4428 00:0CF1: 48           	pha
  4429 00:0CF2: F4 xx xx     	pea	#^L183+25
  4430 00:0CF5: F4 xx xx     	pea	#<L183+25
  4431 00:0CF8: 22 xx xx xx  	jsl	~~k_debug_integer
  4432                        ;		k_debug_pointer("  POINTER:",node->data)
                    ;
  4433                        	.line	646
  4434 00:0CFC: A0 04 00     	ldy	#$4
  4435 00:0CFF: B7 08        	lda	[<L184+node_0],Y
  4436 00:0D01: 48           	pha
  4437 00:0D02: A0 02 00     	ldy	#$2
  4438 00:0D05: B7 08        	lda	[<L184+node_0],Y
  4439 00:0D07: 48           	pha
  4440 00:0D08: F4 xx xx     	pea	#^L183+36
  4441 00:0D0B: F4 xx xx     	pea	#<L183+36
  4442 00:0D0E: 22 xx xx xx  	jsl	~~k_debug_pointer
  4443                        ;
  4444                        ;	}
  4445                        	.line	648
  4446                        ;}
  Sat Jul 10 2021  1:15                                                Page 82


  4447                        L10055:
  4448                        	.line	649
  4449                        L189:
  4450 00:0D12: A5 06        	lda	<L184+2
  4451 00:0D14: 85 0A        	sta	<L184+2+4
  4452 00:0D16: A5 05        	lda	<L184+1
  4453 00:0D18: 85 09        	sta	<L184+1+4
  4454 00:0D1A: 2B           	pld
  4455 00:0D1B: 3B           	tsc
  4456 00:0D1C: 18           	clc
  4457 00:0D1D: 69 08 00     	adc	#L184+4
  4458 00:0D20: 1B           	tcs
  4459 00:0D21: 6B           	rtl
  4460                        	.endblock	649
  4461             00000004   L184	equ	4
  4462             00000005   L185	equ	5
  4463                        	ends
  4464                        	efunc
  4465                        	.endfunc	649,5,4
  4466                        	.line	649
  4467                        	data
  4468                        L183:
  4469 00:0133: 20 20 20 20  	db	$20,$20,$20,$20,$20,$4E,$4F,$44,$45,$3A,
                    $00,$4E,$4F,$44,$45
       00:0137: 20 4E 4F 44 
       00:013B: 45 3A 00 4E 
       00:013F: 4F 44 45 
  4470 00:0142: 20 4E 41 4D  	db	$20,$4E,$41,$4D,$45,$3A,$00,$0D,$0A,$00,
                    $20,$20,$20,$20,$20
       00:0146: 45 3A 00 0D 
       00:014A: 0A 00 20 20 
       00:014E: 20 20 20 
  4471 00:0151: 54 59 50 45  	db	$54,$59,$50,$45,$3A,$00,$20,$20,$50,$4F,
                    $49,$4E,$54,$45,$52
       00:0155: 3A 00 20 20 
       00:0159: 50 4F 49 4E 
       00:015D: 54 45 52 
  4472 00:0160: 3A 00        	db	$3A,$00
  4473 00:0162:              	ends
  4474                        ;/**
  4475                        ; *
  4476                        ; *
  4477                        ; */
  4478                        ;void k_debug_nodelist(PFXNODE head)
  4479                        ;{
  4480                        	.line	654
  4481                        	.line	655
  4482                        	code
  4483                        	xdef	~~k_debug_nodelist
  4484                        	func
  4485                        	.function	655
  4486                        ~~k_debug_nodelist:
  4487                        	longa	on
  4488                        	longi	on
  4489 00:0D22: 3B           	tsc
  4490 00:0D23: 38           	sec
  4491 00:0D24: E9 08 00     	sbc	#L191
  4492 00:0D27: 1B           	tcs
  Sat Jul 10 2021  1:15                                                Page 83


  4493 00:0D28: 0B           	phd
  4494 00:0D29: 5B           	tcd
  4495             00000004   head_0	set	4
  4496                        	.block	655
  4497                        ;	PFXNODE ptr = head;
  4498                        ;	while(ptr!=NULL)
  4499             00000000   ptr_1	set	0
  4500                        	.sym	ptr,0,138,1,32,5
  4501                        	.sym	head,4,138,6,32,5
  4502 00:0D2A: A5 0C        	lda	<L191+head_0
  4503 00:0D2C: 85 05        	sta	<L192+ptr_1
  4504 00:0D2E: A5 0E        	lda	<L191+head_0+2
  4505 00:0D30: 85 07        	sta	<L192+ptr_1+2
  4506                        	.line	657
  4507                        L10056:
  4508 00:0D32: A5 05        	lda	<L192+ptr_1
  4509 00:0D34: 05 07        	ora	<L192+ptr_1+2
  4510 00:0D36: D0 03        	bne	L194
  4511 00:0D38: 82 21 00     	brl	L10057
  4512                        L194:
  4513                        ;	{
  4514                        	.line	658
  4515                        ;		k_debug_node(ptr);
  4516                        	.line	659
  4517 00:0D3B: D4 07        	pei	<L192+ptr_1+2
  4518 00:0D3D: D4 05        	pei	<L192+ptr_1
  4519 00:0D3F: 22 xx xx xx  	jsl	~~k_debug_node
  4520                        ;		ptr = ptr->next;
  4521                        	.line	660
  4522 00:0D43: A0 0A 00     	ldy	#$a
  4523 00:0D46: B7 05        	lda	[<L192+ptr_1],Y
  4524 00:0D48: 85 01        	sta	<R0
  4525 00:0D4A: A0 0C 00     	ldy	#$c
  4526 00:0D4D: B7 05        	lda	[<L192+ptr_1],Y
  4527 00:0D4F: 85 03        	sta	<R0+2
  4528 00:0D51: A5 01        	lda	<R0
  4529 00:0D53: 85 05        	sta	<L192+ptr_1
  4530 00:0D55: A5 03        	lda	<R0+2
  4531 00:0D57: 85 07        	sta	<L192+ptr_1+2
  4532                        ;	}
  4533                        	.line	661
  4534 00:0D59: 82 D6 FF     	brl	L10056
  4535                        L10057:
  4536                        ;}
  4537                        	.line	662
  4538                        L195:
  4539 00:0D5C: A5 0A        	lda	<L191+2
  4540 00:0D5E: 85 0E        	sta	<L191+2+4
  4541 00:0D60: A5 09        	lda	<L191+1
  4542 00:0D62: 85 0D        	sta	<L191+1+4
  4543 00:0D64: 2B           	pld
  4544 00:0D65: 3B           	tsc
  4545 00:0D66: 18           	clc
  4546 00:0D67: 69 0C 00     	adc	#L191+4
  4547 00:0D6A: 1B           	tcs
  4548 00:0D6B: 6B           	rtl
  4549                        	.endblock	662
  4550             00000008   L191	equ	8
  Sat Jul 10 2021  1:15                                                Page 84


  4551             00000005   L192	equ	5
  4552                        	ends
  4553                        	efunc
  4554                        	.endfunc	662,5,8
  4555                        	.line	662
  4556                        ;
  4557                        ;/**
  4558                        ; *
  4559                        ; *
  4560                        ; */
  4561                        ;void k_debug_nodelist_list(PFXNODELIST list,FOREA
                    CHNODE handler)
  4562                        ;{
  4563                        	.line	668
  4564                        	.line	669
  4565                        	code
  4566                        	xdef	~~k_debug_nodelist_list
  4567                        	func
  4568                        	.function	669
  4569                        ~~k_debug_nodelist_list:
  4570                        	longa	on
  4571                        	longi	on
  4572 00:0D6C: 3B           	tsc
  4573 00:0D6D: 38           	sec
  4574 00:0D6E: E9 08 00     	sbc	#L196
  4575 00:0D71: 1B           	tcs
  4576 00:0D72: 0B           	phd
  4577 00:0D73: 5B           	tcd
  4578             00000004   list_0	set	4
  4579             00000008   handler_0	set	8
  4580                        	.block	669
  4581                        ;	PFXNODE ptr = list->listhead->next;
  4582                        ;
  4583                        ;	k_debug_strings("NODELIST:",(LPCHAR)list->listhe
                    ad->data);
  4584             00000000   ptr_1	set	0
  4585                        	.sym	ptr,0,138,1,32,5
  4586                        	.sym	list,4,138,6,32,6
  4587                        	.sym	handler,8,641,6,32
  4588 00:0D74: A7 0C        	lda	[<L196+list_0]
  4589 00:0D76: 85 01        	sta	<R0
  4590 00:0D78: A0 02 00     	ldy	#$2
  4591 00:0D7B: B7 0C        	lda	[<L196+list_0],Y
  4592 00:0D7D: 85 03        	sta	<R0+2
  4593 00:0D7F: A0 0A 00     	ldy	#$a
  4594 00:0D82: B7 01        	lda	[<R0],Y
  4595 00:0D84: 85 05        	sta	<L197+ptr_1
  4596 00:0D86: A0 0C 00     	ldy	#$c
  4597 00:0D89: B7 01        	lda	[<R0],Y
  4598 00:0D8B: 85 07        	sta	<L197+ptr_1+2
  4599                        	.line	672
  4600 00:0D8D: A7 0C        	lda	[<L196+list_0]
  4601 00:0D8F: 85 01        	sta	<R0
  4602 00:0D91: A0 02 00     	ldy	#$2
  4603 00:0D94: B7 0C        	lda	[<L196+list_0],Y
  4604 00:0D96: 85 03        	sta	<R0+2
  4605 00:0D98: A0 04 00     	ldy	#$4
  4606 00:0D9B: B7 01        	lda	[<R0],Y
  Sat Jul 10 2021  1:15                                                Page 85


  4607 00:0D9D: 48           	pha
  4608 00:0D9E: A0 02 00     	ldy	#$2
  4609 00:0DA1: B7 01        	lda	[<R0],Y
  4610 00:0DA3: 48           	pha
  4611 00:0DA4: F4 xx xx     	pea	#^L190
  4612 00:0DA7: F4 xx xx     	pea	#<L190
  4613 00:0DAA: 22 xx xx xx  	jsl	~~k_debug_strings
  4614                        ;
  4615                        ;	k_debug_nodelist_with_data(list->listhead->next,
                    handler);
  4616                        	.line	674
  4617 00:0DAE: D4 12        	pei	<L196+handler_0+2
  4618 00:0DB0: D4 10        	pei	<L196+handler_0
  4619 00:0DB2: A7 0C        	lda	[<L196+list_0]
  4620 00:0DB4: 85 01        	sta	<R0
  4621 00:0DB6: A0 02 00     	ldy	#$2
  4622 00:0DB9: B7 0C        	lda	[<L196+list_0],Y
  4623 00:0DBB: 85 03        	sta	<R0+2
  4624 00:0DBD: A0 0C 00     	ldy	#$c
  4625 00:0DC0: B7 01        	lda	[<R0],Y
  4626 00:0DC2: 48           	pha
  4627 00:0DC3: A0 0A 00     	ldy	#$a
  4628 00:0DC6: B7 01        	lda	[<R0],Y
  4629 00:0DC8: 48           	pha
  4630 00:0DC9: 22 xx xx xx  	jsl	~~k_debug_nodelist_with_data
  4631                        ;}
  4632                        	.line	675
  4633                        L199:
  4634 00:0DCD: A5 0A        	lda	<L196+2
  4635 00:0DCF: 85 12        	sta	<L196+2+8
  4636 00:0DD1: A5 09        	lda	<L196+1
  4637 00:0DD3: 85 11        	sta	<L196+1+8
  4638 00:0DD5: 2B           	pld
  4639 00:0DD6: 3B           	tsc
  4640 00:0DD7: 18           	clc
  4641 00:0DD8: 69 10 00     	adc	#L196+8
  4642 00:0DDB: 1B           	tcs
  4643 00:0DDC: 6B           	rtl
  4644                        	.endblock	675
  4645             00000008   L196	equ	8
  4646             00000005   L197	equ	5
  4647                        	ends
  4648                        	efunc
  4649                        	.endfunc	675,5,8
  4650                        	.line	675
  4651                        	data
  4652                        L190:
  4653 00:0162: 4E 4F 44 45  	db	$4E,$4F,$44,$45,$4C,$49,$53,$54,$3A,$00
       00:0166: 4C 49 53 54 
       00:016A: 3A 00 
  4654 00:016C:              	ends
  4655                        ;
  4656                        ;
  4657                        ;void k_debug_nodelist_with_data(PFXNODE head,FORE
                    ACHNODE handler)
  4658                        ;{
  4659                        	.line	678
  4660                        	.line	679
  Sat Jul 10 2021  1:15                                                Page 86


  4661                        	code
  4662                        	xdef	~~k_debug_nodelist_with_data
  4663                        	func
  4664                        	.function	679
  4665                        ~~k_debug_nodelist_with_data:
  4666                        	longa	on
  4667                        	longi	on
  4668 00:0DDD: 3B           	tsc
  4669 00:0DDE: 38           	sec
  4670 00:0DDF: E9 08 00     	sbc	#L201
  4671 00:0DE2: 1B           	tcs
  4672 00:0DE3: 0B           	phd
  4673 00:0DE4: 5B           	tcd
  4674             00000004   head_0	set	4
  4675             00000008   handler_0	set	8
  4676                        	.block	679
  4677                        ;	PFXNODE ptr = head;
  4678                        ;	while(ptr!=NULL)
  4679             00000000   ptr_1	set	0
  4680                        	.sym	ptr,0,138,1,32,5
  4681                        	.sym	head,4,138,6,32,5
  4682                        	.sym	handler,8,641,6,32
  4683 00:0DE5: A5 0C        	lda	<L201+head_0
  4684 00:0DE7: 85 05        	sta	<L202+ptr_1
  4685 00:0DE9: A5 0E        	lda	<L201+head_0+2
  4686 00:0DEB: 85 07        	sta	<L202+ptr_1+2
  4687                        	.line	681
  4688                        L10058:
  4689 00:0DED: A5 05        	lda	<L202+ptr_1
  4690 00:0DEF: 05 07        	ora	<L202+ptr_1+2
  4691 00:0DF1: D0 03        	bne	L204
  4692 00:0DF3: 82 44 00     	brl	L10059
  4693                        L204:
  4694                        ;	{
  4695                        	.line	682
  4696                        ;		k_debug_node(ptr);
  4697                        	.line	683
  4698 00:0DF6: D4 07        	pei	<L202+ptr_1+2
  4699 00:0DF8: D4 05        	pei	<L202+ptr_1
  4700 00:0DFA: 22 xx xx xx  	jsl	~~k_debug_node
  4701                        ;		if(handler)
  4702                        	.line	684
  4703                        ;			handler(NULL,ptr->data);
  4704 00:0DFE: A5 10        	lda	<L201+handler_0
  4705 00:0E00: 05 12        	ora	<L201+handler_0+2
  4706 00:0E02: D0 03        	bne	L205
  4707 00:0E04: 82 1A 00     	brl	L10060
  4708                        L205:
  4709                        	.line	685
  4710 00:0E07: A0 04 00     	ldy	#$4
  4711 00:0E0A: B7 05        	lda	[<L202+ptr_1],Y
  4712 00:0E0C: 48           	pha
  4713 00:0E0D: A0 02 00     	ldy	#$2
  4714 00:0E10: B7 05        	lda	[<L202+ptr_1],Y
  4715 00:0E12: 48           	pha
  4716 00:0E13: F4 00 00     	pea	#^$0
  4717 00:0E16: F4 00 00     	pea	#<$0
  4718 00:0E19: A6 12        	ldx	<L201+handler_0+2
  Sat Jul 10 2021  1:15                                                Page 87


  4719 00:0E1B: A5 10        	lda	<L201+handler_0
  4720                        	xref	~~~lcal
  4721 00:0E1D: 22 xx xx xx  	jsl	~~~lcal
  4722                        ;		ptr = ptr->next;
  4723                        L10060:
  4724                        	.line	686
  4725 00:0E21: A0 0A 00     	ldy	#$a
  4726 00:0E24: B7 05        	lda	[<L202+ptr_1],Y
  4727 00:0E26: 85 01        	sta	<R0
  4728 00:0E28: A0 0C 00     	ldy	#$c
  4729 00:0E2B: B7 05        	lda	[<L202+ptr_1],Y
  4730 00:0E2D: 85 03        	sta	<R0+2
  4731 00:0E2F: A5 01        	lda	<R0
  4732 00:0E31: 85 05        	sta	<L202+ptr_1
  4733 00:0E33: A5 03        	lda	<R0+2
  4734 00:0E35: 85 07        	sta	<L202+ptr_1+2
  4735                        ;	}
  4736                        	.line	687
  4737 00:0E37: 82 B3 FF     	brl	L10058
  4738                        L10059:
  4739                        ;}
  4740                        	.line	688
  4741                        L206:
  4742 00:0E3A: A5 0A        	lda	<L201+2
  4743 00:0E3C: 85 12        	sta	<L201+2+8
  4744 00:0E3E: A5 09        	lda	<L201+1
  4745 00:0E40: 85 11        	sta	<L201+1+8
  4746 00:0E42: 2B           	pld
  4747 00:0E43: 3B           	tsc
  4748 00:0E44: 18           	clc
  4749 00:0E45: 69 10 00     	adc	#L201+8
  4750 00:0E48: 1B           	tcs
  4751 00:0E49: 6B           	rtl
  4752                        	.endblock	688
  4753             00000008   L201	equ	8
  4754             00000005   L202	equ	5
  4755                        	ends
  4756                        	efunc
  4757                        	.endfunc	688,5,8
  4758                        	.line	688
  4759                        ;/*
  4760                        ; *
  4761                        ; *
  4762                        ; *
  4763                        ; */
  4764                        ;void k_debug_crlf(void)
  4765                        ;{
  4766                        	.line	694
  4767                        	.line	695
  4768                        	code
  4769                        	xdef	~~k_debug_crlf
  4770                        	func
  4771                        	.function	695
  4772                        ~~k_debug_crlf:
  4773                        	longa	on
  4774                        	longi	on
  4775 00:0E4A: 3B           	tsc
  4776 00:0E4B: 38           	sec
  Sat Jul 10 2021  1:15                                                Page 88


  4777 00:0E4C: E9 00 00     	sbc	#L207
  4778 00:0E4F: 1B           	tcs
  4779 00:0E50: 0B           	phd
  4780 00:0E51: 5B           	tcd
  4781                        	.block	695
  4782                        ;	k_debug_string("\r\n");
  4783                        	.line	696
  4784 00:0E52: F4 xx xx     	pea	#^L200
  4785 00:0E55: F4 xx xx     	pea	#<L200
  4786 00:0E58: 22 xx xx xx  	jsl	~~k_debug_string
  4787                        ;}
  4788                        	.line	697
  4789                        L210:
  4790 00:0E5C: 2B           	pld
  4791 00:0E5D: 3B           	tsc
  4792 00:0E5E: 18           	clc
  4793 00:0E5F: 69 00 00     	adc	#L207
  4794 00:0E62: 1B           	tcs
  4795 00:0E63: 6B           	rtl
  4796                        	.endblock	697
  4797             00000000   L207	equ	0
  4798             00000001   L208	equ	1
  4799                        	ends
  4800                        	efunc
  4801                        	.endfunc	697,1,0
  4802                        	.line	697
  4803                        	data
  4804                        L200:
  4805 00:016C: 0D 0A 00     	db	$0D,$0A,$00
  4806 00:016F:              	ends
  4807                        ;
  4808                        ;void k_debug_uart_status_com1(int lc)
  4809                        ;{
  4810                        	.line	699
  4811                        	.line	700
  4812                        	code
  4813                        	xdef	~~k_debug_uart_status_com1
  4814                        	func
  4815                        	.function	700
  4816                        ~~k_debug_uart_status_com1:
  4817                        	longa	on
  4818                        	longi	on
  4819 00:0E64: 3B           	tsc
  4820 00:0E65: 38           	sec
  4821 00:0E66: E9 09 00     	sbc	#L212
  4822 00:0E69: 1B           	tcs
  4823 00:0E6A: 0B           	phd
  4824 00:0E6B: 5B           	tcd
  4825             00000004   lc_0	set	4
  4826                        	.block	700
  4827                        ;	char uartbuffer[3];
  4828                        ;	int lcp = 0;
  4829                        ;
  4830                        ;	//lcp = k_put_string(lcp,lc,"XX",15,0);
  4831                        ;	//k_put_char(lcp,lc,'-',15,0);lcp++;
  4832                        ;	lcp = k_put_string(lcp,lc,k_bytetohex(UART1_BASE
                    [UART_DLH],uartbuffer),15,0);
  4833             00000000   uartbuffer_1	set	0
  Sat Jul 10 2021  1:15                                                Page 89


  4834             00000003   lcp_1	set	3
  4835                        	.sym	uartbuffer,0,110,1,0,3
  4836                        	.sym	lcp,3,5,1,16
  4837                        	.sym	lc,4,5,6,16
  4838 00:0E6C: 64 08        	stz	<L213+lcp_1
  4839                        	.line	706
  4840 00:0E6E: F4 00 00     	pea	#<$0
  4841 00:0E71: F4 0F 00     	pea	#<$f
  4842 00:0E74: F4 00 00     	pea	#0
  4843 00:0E77: 18           	clc
  4844 00:0E78: 7B           	tdc
  4845 00:0E79: 69 05 00     	adc	#<L213+uartbuffer_1
  4846 00:0E7C: 48           	pha
  4847 00:0E7D: AF F9 18 AF  	lda	>11475193
  4848 00:0E81: 48           	pha
  4849 00:0E82: 22 xx xx xx  	jsl	~~k_bytetohex
  4850 00:0E86: 85 01        	sta	<R0
  4851 00:0E88: 86 03        	stx	<R0+2
  4852 00:0E8A: DA           	phx
  4853 00:0E8B: 48           	pha
  4854 00:0E8C: D4 0D        	pei	<L212+lc_0
  4855 00:0E8E: D4 08        	pei	<L213+lcp_1
  4856 00:0E90: 22 xx xx xx  	jsl	~~k_put_string
  4857 00:0E94: 85 08        	sta	<L213+lcp_1
  4858                        ;
  4859                        ;	k_put_char(lcp,lc,'-',15,0);lcp++;
  4860                        	.line	708
  4861 00:0E96: F4 00 00     	pea	#<$0
  4862 00:0E99: F4 0F 00     	pea	#<$f
  4863 00:0E9C: F4 2D 00     	pea	#<$2d
  4864 00:0E9F: D4 0D        	pei	<L212+lc_0
  4865 00:0EA1: D4 08        	pei	<L213+lcp_1
  4866 00:0EA3: 22 xx xx xx  	jsl	~~k_put_char
  4867                        	.line	708
  4868 00:0EA7: E6 08        	inc	<L213+lcp_1
  4869                        ;
  4870                        ;	lcp = k_put_string(lcp,lc,k_bytetohex(UART1_BASE
                    [UART_FCR],uartbuffer),15,0);
  4871                        	.line	710
  4872 00:0EA9: F4 00 00     	pea	#<$0
  4873 00:0EAC: F4 0F 00     	pea	#<$f
  4874 00:0EAF: F4 00 00     	pea	#0
  4875 00:0EB2: 18           	clc
  4876 00:0EB3: 7B           	tdc
  4877 00:0EB4: 69 05 00     	adc	#<L213+uartbuffer_1
  4878 00:0EB7: 48           	pha
  4879 00:0EB8: AF FA 18 AF  	lda	>11475194
  4880 00:0EBC: 48           	pha
  4881 00:0EBD: 22 xx xx xx  	jsl	~~k_bytetohex
  4882 00:0EC1: 85 01        	sta	<R0
  4883 00:0EC3: 86 03        	stx	<R0+2
  4884 00:0EC5: DA           	phx
  4885 00:0EC6: 48           	pha
  4886 00:0EC7: D4 0D        	pei	<L212+lc_0
  4887 00:0EC9: D4 08        	pei	<L213+lcp_1
  4888 00:0ECB: 22 xx xx xx  	jsl	~~k_put_string
  4889 00:0ECF: 85 08        	sta	<L213+lcp_1
  4890                        ;
  Sat Jul 10 2021  1:15                                                Page 90


  4891                        ;	k_put_char(lcp,lc,'-',15,0);lcp++;
  4892                        	.line	712
  4893 00:0ED1: F4 00 00     	pea	#<$0
  4894 00:0ED4: F4 0F 00     	pea	#<$f
  4895 00:0ED7: F4 2D 00     	pea	#<$2d
  4896 00:0EDA: D4 0D        	pei	<L212+lc_0
  4897 00:0EDC: D4 08        	pei	<L213+lcp_1
  4898 00:0EDE: 22 xx xx xx  	jsl	~~k_put_char
  4899                        	.line	712
  4900 00:0EE2: E6 08        	inc	<L213+lcp_1
  4901                        ;
  4902                        ;	lcp = k_put_string(lcp,lc,k_bytetohex(UART1_BASE
                    [UART_DLH],uartbuffer),15,0);
  4903                        	.line	714
  4904 00:0EE4: F4 00 00     	pea	#<$0
  4905 00:0EE7: F4 0F 00     	pea	#<$f
  4906 00:0EEA: F4 00 00     	pea	#0
  4907 00:0EED: 18           	clc
  4908 00:0EEE: 7B           	tdc
  4909 00:0EEF: 69 05 00     	adc	#<L213+uartbuffer_1
  4910 00:0EF2: 48           	pha
  4911 00:0EF3: AF F9 18 AF  	lda	>11475193
  4912 00:0EF7: 48           	pha
  4913 00:0EF8: 22 xx xx xx  	jsl	~~k_bytetohex
  4914 00:0EFC: 85 01        	sta	<R0
  4915 00:0EFE: 86 03        	stx	<R0+2
  4916 00:0F00: DA           	phx
  4917 00:0F01: 48           	pha
  4918 00:0F02: D4 0D        	pei	<L212+lc_0
  4919 00:0F04: D4 08        	pei	<L213+lcp_1
  4920 00:0F06: 22 xx xx xx  	jsl	~~k_put_string
  4921 00:0F0A: 85 08        	sta	<L213+lcp_1
  4922                        ;
  4923                        ;	k_put_char(lcp,lc,'-',15,0);lcp++;
  4924                        	.line	716
  4925 00:0F0C: F4 00 00     	pea	#<$0
  4926 00:0F0F: F4 0F 00     	pea	#<$f
  4927 00:0F12: F4 2D 00     	pea	#<$2d
  4928 00:0F15: D4 0D        	pei	<L212+lc_0
  4929 00:0F17: D4 08        	pei	<L213+lcp_1
  4930 00:0F19: 22 xx xx xx  	jsl	~~k_put_char
  4931                        	.line	716
  4932 00:0F1D: E6 08        	inc	<L213+lcp_1
  4933                        ;
  4934                        ;	lcp = k_put_string(lcp,lc,k_bytetohex(UART1_BASE
                    [UART_LCR],uartbuffer),15,0);
  4935                        	.line	718
  4936 00:0F1F: F4 00 00     	pea	#<$0
  4937 00:0F22: F4 0F 00     	pea	#<$f
  4938 00:0F25: F4 00 00     	pea	#0
  4939 00:0F28: 18           	clc
  4940 00:0F29: 7B           	tdc
  4941 00:0F2A: 69 05 00     	adc	#<L213+uartbuffer_1
  4942 00:0F2D: 48           	pha
  4943 00:0F2E: AF FB 18 AF  	lda	>11475195
  4944 00:0F32: 48           	pha
  4945 00:0F33: 22 xx xx xx  	jsl	~~k_bytetohex
  4946 00:0F37: 85 01        	sta	<R0
  Sat Jul 10 2021  1:15                                                Page 91


  4947 00:0F39: 86 03        	stx	<R0+2
  4948 00:0F3B: DA           	phx
  4949 00:0F3C: 48           	pha
  4950 00:0F3D: D4 0D        	pei	<L212+lc_0
  4951 00:0F3F: D4 08        	pei	<L213+lcp_1
  4952 00:0F41: 22 xx xx xx  	jsl	~~k_put_string
  4953 00:0F45: 85 08        	sta	<L213+lcp_1
  4954                        ;
  4955                        ;	k_put_char(lcp,lc,'-',15,0);lcp++;
  4956                        	.line	720
  4957 00:0F47: F4 00 00     	pea	#<$0
  4958 00:0F4A: F4 0F 00     	pea	#<$f
  4959 00:0F4D: F4 2D 00     	pea	#<$2d
  4960 00:0F50: D4 0D        	pei	<L212+lc_0
  4961 00:0F52: D4 08        	pei	<L213+lcp_1
  4962 00:0F54: 22 xx xx xx  	jsl	~~k_put_char
  4963                        	.line	720
  4964 00:0F58: E6 08        	inc	<L213+lcp_1
  4965                        ;
  4966                        ;	lcp = k_put_string(lcp,lc,k_bytetohex(UART1_BASE
                    [UART_MCR],uartbuffer),15,0);
  4967                        	.line	722
  4968 00:0F5A: F4 00 00     	pea	#<$0
  4969 00:0F5D: F4 0F 00     	pea	#<$f
  4970 00:0F60: F4 00 00     	pea	#0
  4971 00:0F63: 18           	clc
  4972 00:0F64: 7B           	tdc
  4973 00:0F65: 69 05 00     	adc	#<L213+uartbuffer_1
  4974 00:0F68: 48           	pha
  4975 00:0F69: AF FC 18 AF  	lda	>11475196
  4976 00:0F6D: 48           	pha
  4977 00:0F6E: 22 xx xx xx  	jsl	~~k_bytetohex
  4978 00:0F72: 85 01        	sta	<R0
  4979 00:0F74: 86 03        	stx	<R0+2
  4980 00:0F76: DA           	phx
  4981 00:0F77: 48           	pha
  4982 00:0F78: D4 0D        	pei	<L212+lc_0
  4983 00:0F7A: D4 08        	pei	<L213+lcp_1
  4984 00:0F7C: 22 xx xx xx  	jsl	~~k_put_string
  4985 00:0F80: 85 08        	sta	<L213+lcp_1
  4986                        ;
  4987                        ;	k_put_char(lcp,lc,'-',15,0);lcp++;
  4988                        	.line	724
  4989 00:0F82: F4 00 00     	pea	#<$0
  4990 00:0F85: F4 0F 00     	pea	#<$f
  4991 00:0F88: F4 2D 00     	pea	#<$2d
  4992 00:0F8B: D4 0D        	pei	<L212+lc_0
  4993 00:0F8D: D4 08        	pei	<L213+lcp_1
  4994 00:0F8F: 22 xx xx xx  	jsl	~~k_put_char
  4995                        	.line	724
  4996 00:0F93: E6 08        	inc	<L213+lcp_1
  4997                        ;
  4998                        ;	lcp = k_put_string(lcp,lc,k_bytetohex(UART1_BASE
                    [UART_MSR],uartbuffer),15,0);
  4999                        	.line	726
  5000 00:0F95: F4 00 00     	pea	#<$0
  5001 00:0F98: F4 0F 00     	pea	#<$f
  5002 00:0F9B: F4 00 00     	pea	#0
  Sat Jul 10 2021  1:15                                                Page 92


  5003 00:0F9E: 18           	clc
  5004 00:0F9F: 7B           	tdc
  5005 00:0FA0: 69 05 00     	adc	#<L213+uartbuffer_1
  5006 00:0FA3: 48           	pha
  5007 00:0FA4: AF FE 18 AF  	lda	>11475198
  5008 00:0FA8: 48           	pha
  5009 00:0FA9: 22 xx xx xx  	jsl	~~k_bytetohex
  5010 00:0FAD: 85 01        	sta	<R0
  5011 00:0FAF: 86 03        	stx	<R0+2
  5012 00:0FB1: DA           	phx
  5013 00:0FB2: 48           	pha
  5014 00:0FB3: D4 0D        	pei	<L212+lc_0
  5015 00:0FB5: D4 08        	pei	<L213+lcp_1
  5016 00:0FB7: 22 xx xx xx  	jsl	~~k_put_string
  5017 00:0FBB: 85 08        	sta	<L213+lcp_1
  5018                        ;}
  5019                        	.line	727
  5020                        L215:
  5021 00:0FBD: A5 0B        	lda	<L212+2
  5022 00:0FBF: 85 0D        	sta	<L212+2+2
  5023 00:0FC1: A5 0A        	lda	<L212+1
  5024 00:0FC3: 85 0C        	sta	<L212+1+2
  5025 00:0FC5: 2B           	pld
  5026 00:0FC6: 3B           	tsc
  5027 00:0FC7: 18           	clc
  5028 00:0FC8: 69 0B 00     	adc	#L212+2
  5029 00:0FCB: 1B           	tcs
  5030 00:0FCC: 6B           	rtl
  5031                        	.endblock	727
  5032             00000009   L212	equ	9
  5033             00000005   L213	equ	5
  5034                        	ends
  5035                        	efunc
  5036                        	.endfunc	727,5,9
  5037                        	.line	727
  5038                        ;
  5039                        ;void k_debug_uart_status_com2(int lc)
  5040                        ;{
  5041                        	.line	729
  5042                        	.line	730
  5043                        	code
  5044                        	xdef	~~k_debug_uart_status_com2
  5045                        	func
  5046                        	.function	730
  5047                        ~~k_debug_uart_status_com2:
  5048                        	longa	on
  5049                        	longi	on
  5050 00:0FCD: 3B           	tsc
  5051 00:0FCE: 38           	sec
  5052 00:0FCF: E9 09 00     	sbc	#L216
  5053 00:0FD2: 1B           	tcs
  5054 00:0FD3: 0B           	phd
  5055 00:0FD4: 5B           	tcd
  5056             00000004   lc_0	set	4
  5057                        	.block	730
  5058                        ;	char uartbuffer[3];
  5059                        ;	int lcp = 0;
  5060                        ;
  Sat Jul 10 2021  1:15                                                Page 93


  5061                        ;	//lcp = k_put_string(lcp,lc,"XX",15,0);
  5062                        ;	//k_put_char(lcp,lc,'-',15,0);lcp++;
  5063                        ;	lcp = k_put_string(lcp,lc,k_bytetohex(UART2_BASE
                    [UART_DLH],uartbuffer),15,0);
  5064             00000000   uartbuffer_1	set	0
  5065             00000003   lcp_1	set	3
  5066                        	.sym	uartbuffer,0,110,1,0,3
  5067                        	.sym	lcp,3,5,1,16
  5068                        	.sym	lc,4,5,6,16
  5069 00:0FD5: 64 08        	stz	<L217+lcp_1
  5070                        	.line	736
  5071 00:0FD7: F4 00 00     	pea	#<$0
  5072 00:0FDA: F4 0F 00     	pea	#<$f
  5073 00:0FDD: F4 00 00     	pea	#0
  5074 00:0FE0: 18           	clc
  5075 00:0FE1: 7B           	tdc
  5076 00:0FE2: 69 05 00     	adc	#<L217+uartbuffer_1
  5077 00:0FE5: 48           	pha
  5078 00:0FE6: AF F9 18 AF  	lda	>11475193
  5079 00:0FEA: 48           	pha
  5080 00:0FEB: 22 xx xx xx  	jsl	~~k_bytetohex
  5081 00:0FEF: 85 01        	sta	<R0
  5082 00:0FF1: 86 03        	stx	<R0+2
  5083 00:0FF3: DA           	phx
  5084 00:0FF4: 48           	pha
  5085 00:0FF5: D4 0D        	pei	<L216+lc_0
  5086 00:0FF7: D4 08        	pei	<L217+lcp_1
  5087 00:0FF9: 22 xx xx xx  	jsl	~~k_put_string
  5088 00:0FFD: 85 08        	sta	<L217+lcp_1
  5089                        ;
  5090                        ;	k_put_char(lcp,lc,'-',15,0);lcp++;
  5091                        	.line	738
  5092 00:0FFF: F4 00 00     	pea	#<$0
  5093 00:1002: F4 0F 00     	pea	#<$f
  5094 00:1005: F4 2D 00     	pea	#<$2d
  5095 00:1008: D4 0D        	pei	<L216+lc_0
  5096 00:100A: D4 08        	pei	<L217+lcp_1
  5097 00:100C: 22 xx xx xx  	jsl	~~k_put_char
  5098                        	.line	738
  5099 00:1010: E6 08        	inc	<L217+lcp_1
  5100                        ;
  5101                        ;	lcp = k_put_string(lcp,lc,k_bytetohex(UART2_BASE
                    [UART_FCR],uartbuffer),15,0);
  5102                        	.line	740
  5103 00:1012: F4 00 00     	pea	#<$0
  5104 00:1015: F4 0F 00     	pea	#<$f
  5105 00:1018: F4 00 00     	pea	#0
  5106 00:101B: 18           	clc
  5107 00:101C: 7B           	tdc
  5108 00:101D: 69 05 00     	adc	#<L217+uartbuffer_1
  5109 00:1020: 48           	pha
  5110 00:1021: AF FA 18 AF  	lda	>11475194
  5111 00:1025: 48           	pha
  5112 00:1026: 22 xx xx xx  	jsl	~~k_bytetohex
  5113 00:102A: 85 01        	sta	<R0
  5114 00:102C: 86 03        	stx	<R0+2
  5115 00:102E: DA           	phx
  5116 00:102F: 48           	pha
  Sat Jul 10 2021  1:15                                                Page 94


  5117 00:1030: D4 0D        	pei	<L216+lc_0
  5118 00:1032: D4 08        	pei	<L217+lcp_1
  5119 00:1034: 22 xx xx xx  	jsl	~~k_put_string
  5120 00:1038: 85 08        	sta	<L217+lcp_1
  5121                        ;
  5122                        ;	k_put_char(lcp,lc,'-',15,0);lcp++;
  5123                        	.line	742
  5124 00:103A: F4 00 00     	pea	#<$0
  5125 00:103D: F4 0F 00     	pea	#<$f
  5126 00:1040: F4 2D 00     	pea	#<$2d
  5127 00:1043: D4 0D        	pei	<L216+lc_0
  5128 00:1045: D4 08        	pei	<L217+lcp_1
  5129 00:1047: 22 xx xx xx  	jsl	~~k_put_char
  5130                        	.line	742
  5131 00:104B: E6 08        	inc	<L217+lcp_1
  5132                        ;
  5133                        ;	lcp = k_put_string(lcp,lc,k_bytetohex(UART2_BASE
                    [UART_DLH],uartbuffer),15,0);
  5134                        	.line	744
  5135 00:104D: F4 00 00     	pea	#<$0
  5136 00:1050: F4 0F 00     	pea	#<$f
  5137 00:1053: F4 00 00     	pea	#0
  5138 00:1056: 18           	clc
  5139 00:1057: 7B           	tdc
  5140 00:1058: 69 05 00     	adc	#<L217+uartbuffer_1
  5141 00:105B: 48           	pha
  5142 00:105C: AF F9 18 AF  	lda	>11475193
  5143 00:1060: 48           	pha
  5144 00:1061: 22 xx xx xx  	jsl	~~k_bytetohex
  5145 00:1065: 85 01        	sta	<R0
  5146 00:1067: 86 03        	stx	<R0+2
  5147 00:1069: DA           	phx
  5148 00:106A: 48           	pha
  5149 00:106B: D4 0D        	pei	<L216+lc_0
  5150 00:106D: D4 08        	pei	<L217+lcp_1
  5151 00:106F: 22 xx xx xx  	jsl	~~k_put_string
  5152 00:1073: 85 08        	sta	<L217+lcp_1
  5153                        ;
  5154                        ;	k_put_char(lcp,lc,'-',15,0);lcp++;
  5155                        	.line	746
  5156 00:1075: F4 00 00     	pea	#<$0
  5157 00:1078: F4 0F 00     	pea	#<$f
  5158 00:107B: F4 2D 00     	pea	#<$2d
  5159 00:107E: D4 0D        	pei	<L216+lc_0
  5160 00:1080: D4 08        	pei	<L217+lcp_1
  5161 00:1082: 22 xx xx xx  	jsl	~~k_put_char
  5162                        	.line	746
  5163 00:1086: E6 08        	inc	<L217+lcp_1
  5164                        ;
  5165                        ;	lcp = k_put_string(lcp,lc,k_bytetohex(UART2_BASE
                    [UART_LCR],uartbuffer),15,0);
  5166                        	.line	748
  5167 00:1088: F4 00 00     	pea	#<$0
  5168 00:108B: F4 0F 00     	pea	#<$f
  5169 00:108E: F4 00 00     	pea	#0
  5170 00:1091: 18           	clc
  5171 00:1092: 7B           	tdc
  5172 00:1093: 69 05 00     	adc	#<L217+uartbuffer_1
  Sat Jul 10 2021  1:15                                                Page 95


  5173 00:1096: 48           	pha
  5174 00:1097: AF FB 18 AF  	lda	>11475195
  5175 00:109B: 48           	pha
  5176 00:109C: 22 xx xx xx  	jsl	~~k_bytetohex
  5177 00:10A0: 85 01        	sta	<R0
  5178 00:10A2: 86 03        	stx	<R0+2
  5179 00:10A4: DA           	phx
  5180 00:10A5: 48           	pha
  5181 00:10A6: D4 0D        	pei	<L216+lc_0
  5182 00:10A8: D4 08        	pei	<L217+lcp_1
  5183 00:10AA: 22 xx xx xx  	jsl	~~k_put_string
  5184 00:10AE: 85 08        	sta	<L217+lcp_1
  5185                        ;
  5186                        ;	k_put_char(lcp,lc,'-',15,0);lcp++;
  5187                        	.line	750
  5188 00:10B0: F4 00 00     	pea	#<$0
  5189 00:10B3: F4 0F 00     	pea	#<$f
  5190 00:10B6: F4 2D 00     	pea	#<$2d
  5191 00:10B9: D4 0D        	pei	<L216+lc_0
  5192 00:10BB: D4 08        	pei	<L217+lcp_1
  5193 00:10BD: 22 xx xx xx  	jsl	~~k_put_char
  5194                        	.line	750
  5195 00:10C1: E6 08        	inc	<L217+lcp_1
  5196                        ;
  5197                        ;	lcp = k_put_string(lcp,lc,k_bytetohex(UART2_BASE
                    [UART_MCR],uartbuffer),15,0);
  5198                        	.line	752
  5199 00:10C3: F4 00 00     	pea	#<$0
  5200 00:10C6: F4 0F 00     	pea	#<$f
  5201 00:10C9: F4 00 00     	pea	#0
  5202 00:10CC: 18           	clc
  5203 00:10CD: 7B           	tdc
  5204 00:10CE: 69 05 00     	adc	#<L217+uartbuffer_1
  5205 00:10D1: 48           	pha
  5206 00:10D2: AF FC 18 AF  	lda	>11475196
  5207 00:10D6: 48           	pha
  5208 00:10D7: 22 xx xx xx  	jsl	~~k_bytetohex
  5209 00:10DB: 85 01        	sta	<R0
  5210 00:10DD: 86 03        	stx	<R0+2
  5211 00:10DF: DA           	phx
  5212 00:10E0: 48           	pha
  5213 00:10E1: D4 0D        	pei	<L216+lc_0
  5214 00:10E3: D4 08        	pei	<L217+lcp_1
  5215 00:10E5: 22 xx xx xx  	jsl	~~k_put_string
  5216 00:10E9: 85 08        	sta	<L217+lcp_1
  5217                        ;
  5218                        ;	k_put_char(lcp,lc,'-',15,0);lcp++;
  5219                        	.line	754
  5220 00:10EB: F4 00 00     	pea	#<$0
  5221 00:10EE: F4 0F 00     	pea	#<$f
  5222 00:10F1: F4 2D 00     	pea	#<$2d
  5223 00:10F4: D4 0D        	pei	<L216+lc_0
  5224 00:10F6: D4 08        	pei	<L217+lcp_1
  5225 00:10F8: 22 xx xx xx  	jsl	~~k_put_char
  5226                        	.line	754
  5227 00:10FC: E6 08        	inc	<L217+lcp_1
  5228                        ;
  5229                        ;	lcp = k_put_string(lcp,lc,k_bytetohex(UART2_BASE
  Sat Jul 10 2021  1:15                                                Page 96


                    [UART_MSR],uartbuffer),15,0);
  5230                        	.line	756
  5231 00:10FE: F4 00 00     	pea	#<$0
  5232 00:1101: F4 0F 00     	pea	#<$f
  5233 00:1104: F4 00 00     	pea	#0
  5234 00:1107: 18           	clc
  5235 00:1108: 7B           	tdc
  5236 00:1109: 69 05 00     	adc	#<L217+uartbuffer_1
  5237 00:110C: 48           	pha
  5238 00:110D: AF FE 18 AF  	lda	>11475198
  5239 00:1111: 48           	pha
  5240 00:1112: 22 xx xx xx  	jsl	~~k_bytetohex
  5241 00:1116: 85 01        	sta	<R0
  5242 00:1118: 86 03        	stx	<R0+2
  5243 00:111A: DA           	phx
  5244 00:111B: 48           	pha
  5245 00:111C: D4 0D        	pei	<L216+lc_0
  5246 00:111E: D4 08        	pei	<L217+lcp_1
  5247 00:1120: 22 xx xx xx  	jsl	~~k_put_string
  5248 00:1124: 85 08        	sta	<L217+lcp_1
  5249                        ;}
  5250                        	.line	757
  5251                        L219:
  5252 00:1126: A5 0B        	lda	<L216+2
  5253 00:1128: 85 0D        	sta	<L216+2+2
  5254 00:112A: A5 0A        	lda	<L216+1
  5255 00:112C: 85 0C        	sta	<L216+1+2
  5256 00:112E: 2B           	pld
  5257 00:112F: 3B           	tsc
  5258 00:1130: 18           	clc
  5259 00:1131: 69 0B 00     	adc	#L216+2
  5260 00:1134: 1B           	tcs
  5261 00:1135: 6B           	rtl
  5262                        	.endblock	757
  5263             00000009   L216	equ	9
  5264             00000005   L217	equ	5
  5265                        	ends
  5266                        	efunc
  5267                        	.endfunc	757,5,9
  5268                        	.line	757
  5269                        ;
  5270                        ;void k_debug_rect(LPCSTR message,PRECT prect)
  5271                        ;{
  5272                        	.line	759
  5273                        	.line	760
  5274                        	code
  5275                        	xdef	~~k_debug_rect
  5276                        	func
  5277                        	.function	760
  5278                        ~~k_debug_rect:
  5279                        	longa	on
  5280                        	longi	on
  5281 00:1136: 3B           	tsc
  5282 00:1137: 38           	sec
  5283 00:1138: E9 10 00     	sbc	#L220
  5284 00:113B: 1B           	tcs
  5285 00:113C: 0B           	phd
  5286 00:113D: 5B           	tcd
  Sat Jul 10 2021  1:15                                                Page 97


  5287             00000004   message_0	set	4
  5288             00000008   prect_0	set	8
  5289                        	.block	760
  5290                        ;	char buffer[16];
  5291                        ;
  5292                        ;	k_debug_string((LPCHAR)message);
  5293             00000000   buffer_1	set	0
  5294                        	.sym	buffer,0,110,1,0,16
  5295                        	.sym	message,4,142,6,32
  5296                        	.sym	prect,8,138,6,32,26
  5297                        	.line	763
  5298 00:113E: D4 16        	pei	<L220+message_0+2
  5299 00:1140: D4 14        	pei	<L220+message_0
  5300 00:1142: 22 xx xx xx  	jsl	~~k_debug_string
  5301                        ;	k_debug_crlf();
  5302                        	.line	764
  5303 00:1146: 22 xx xx xx  	jsl	~~k_debug_crlf
  5304                        ;	k_debug_integer("    RECT X:",prect->x);
  5305                        	.line	765
  5306 00:114A: A7 18        	lda	[<L220+prect_0]
  5307 00:114C: 48           	pha
  5308 00:114D: F4 xx xx     	pea	#^L211
  5309 00:1150: F4 xx xx     	pea	#<L211
  5310 00:1153: 22 xx xx xx  	jsl	~~k_debug_integer
  5311                        ;	k_debug_integer("    RECT Y:",prect->y);
  5312                        	.line	766
  5313 00:1157: A0 02 00     	ldy	#$2
  5314 00:115A: B7 18        	lda	[<L220+prect_0],Y
  5315 00:115C: 48           	pha
  5316 00:115D: F4 xx xx     	pea	#^L211+12
  5317 00:1160: F4 xx xx     	pea	#<L211+12
  5318 00:1163: 22 xx xx xx  	jsl	~~k_debug_integer
  5319                        ;	k_debug_integer("    RECT W:",prect->width);
  5320                        	.line	767
  5321 00:1167: A0 08 00     	ldy	#$8
  5322 00:116A: B7 18        	lda	[<L220+prect_0],Y
  5323 00:116C: 48           	pha
  5324 00:116D: F4 xx xx     	pea	#^L211+24
  5325 00:1170: F4 xx xx     	pea	#<L211+24
  5326 00:1173: 22 xx xx xx  	jsl	~~k_debug_integer
  5327                        ;	k_debug_integer("    RECT H:",prect->height);
  5328                        	.line	768
  5329 00:1177: A0 0A 00     	ldy	#$a
  5330 00:117A: B7 18        	lda	[<L220+prect_0],Y
  5331 00:117C: 48           	pha
  5332 00:117D: F4 xx xx     	pea	#^L211+36
  5333 00:1180: F4 xx xx     	pea	#<L211+36
  5334 00:1183: 22 xx xx xx  	jsl	~~k_debug_integer
  5335                        ;}
  5336                        	.line	769
  5337                        L223:
  5338 00:1187: A5 12        	lda	<L220+2
  5339 00:1189: 85 1A        	sta	<L220+2+8
  5340 00:118B: A5 11        	lda	<L220+1
  5341 00:118D: 85 19        	sta	<L220+1+8
  5342 00:118F: 2B           	pld
  5343 00:1190: 3B           	tsc
  5344 00:1191: 18           	clc
  Sat Jul 10 2021  1:15                                                Page 98


  5345 00:1192: 69 18 00     	adc	#L220+8
  5346 00:1195: 1B           	tcs
  5347 00:1196: 6B           	rtl
  5348                        	.endblock	769
  5349             00000010   L220	equ	16
  5350             00000001   L221	equ	1
  5351                        	ends
  5352                        	efunc
  5353                        	.endfunc	769,1,16
  5354                        	.line	769
  5355                        	data
  5356                        L211:
  5357 00:016F: 20 20 20 20  	db	$20,$20,$20,$20,$52,$45,$43,$54,$20,$58,
                    $3A,$00,$20,$20,$20
       00:0173: 52 45 43 54 
       00:0177: 20 58 3A 00 
       00:017B: 20 20 20 
  5358 00:017E: 20 52 45 43  	db	$20,$52,$45,$43,$54,$20,$59,$3A,$00,$20,
                    $20,$20,$20,$52,$45
       00:0182: 54 20 59 3A 
       00:0186: 00 20 20 20 
       00:018A: 20 52 45 
  5359 00:018D: 43 54 20 57  	db	$43,$54,$20,$57,$3A,$00,$20,$20,$20,$20,
                    $52,$45,$43,$54,$20
       00:0191: 3A 00 20 20 
       00:0195: 20 20 52 45 
       00:0199: 43 54 20 
  5360 00:019C: 48 3A 00     	db	$48,$3A,$00
  5361 00:019F:              	ends
  5362                        ;
  5363                        ;UINT k_get_rtc_hour(void)
  5364                        ;{
  5365                        	.line	771
  5366                        	.line	772
  5367                        	code
  5368                        	xdef	~~k_get_rtc_hour
  5369                        	func
  5370                        	.function	772
  5371                        ~~k_get_rtc_hour:
  5372                        	longa	on
  5373                        	longi	on
  5374 00:1197: 3B           	tsc
  5375 00:1198: 38           	sec
  5376 00:1199: E9 08 00     	sbc	#L225
  5377 00:119C: 1B           	tcs
  5378 00:119D: 0B           	phd
  5379 00:119E: 5B           	tcd
  5380                        	.block	772
  5381                        ;	return (((RTC_HRS[0]&0x30)>>4) * 10)  + (RTC_HRS
                    [0]&0x0F) ;
  5382                        	.line	773
  5383 00:119F: AF 04 08 AF  	lda	>11470852
  5384 00:11A3: 29 0F 00     	and	#<$f
  5385 00:11A6: 85 01        	sta	<R0
  5386 00:11A8: AF 04 08 AF  	lda	>11470852
  5387 00:11AC: 29 30 00     	and	#<$30
  5388 00:11AF: A2 04 00     	ldx	#<$4
  5389                        	xref	~~~asr
  Sat Jul 10 2021  1:15                                                Page 99


  5390 00:11B2: 22 xx xx xx  	jsl	~~~asr
  5391 00:11B6: 85 05        	sta	<R1
  5392 00:11B8: A5 05        	lda	<R1
  5393 00:11BA: 0A           	asl	A
  5394 00:11BB: 0A           	asl	A
  5395 00:11BC: 65 05        	adc	<R1
  5396 00:11BE: 0A           	asl	A
  5397 00:11BF: 85 05        	sta	<R1
  5398 00:11C1: 18           	clc
  5399 00:11C2: A5 05        	lda	<R1
  5400 00:11C4: 65 01        	adc	<R0
  5401                        L228:
  5402 00:11C6: A8           	tay
  5403 00:11C7: 2B           	pld
  5404 00:11C8: 3B           	tsc
  5405 00:11C9: 18           	clc
  5406 00:11CA: 69 08 00     	adc	#L225
  5407 00:11CD: 1B           	tcs
  5408 00:11CE: 98           	tya
  5409 00:11CF: 6B           	rtl
  5410                        ;}
  5411                        	.line	774
  5412                        	.endblock	774
  5413             00000008   L225	equ	8
  5414             00000009   L226	equ	9
  5415                        	ends
  5416                        	efunc
  5417                        	.endfunc	774,9,8
  5418                        	.line	774
  5419                        ;
  5420                        ;UINT k_get_rtc_minute(void)
  5421                        ;{
  5422                        	.line	776
  5423                        	.line	777
  5424                        	code
  5425                        	xdef	~~k_get_rtc_minute
  5426                        	func
  5427                        	.function	777
  5428                        ~~k_get_rtc_minute:
  5429                        	longa	on
  5430                        	longi	on
  5431 00:11D0: 3B           	tsc
  5432 00:11D1: 38           	sec
  5433 00:11D2: E9 08 00     	sbc	#L229
  5434 00:11D5: 1B           	tcs
  5435 00:11D6: 0B           	phd
  5436 00:11D7: 5B           	tcd
  5437                        	.block	777
  5438                        ;	return (((RTC_MIN[0]&0x70)>>4) * 10)  + (RTC_MIN
                    [0]&0x0F);
  5439                        	.line	778
  5440 00:11D8: AF 02 08 AF  	lda	>11470850
  5441 00:11DC: 29 0F 00     	and	#<$f
  5442 00:11DF: 85 01        	sta	<R0
  5443 00:11E1: AF 02 08 AF  	lda	>11470850
  5444 00:11E5: 29 70 00     	and	#<$70
  5445 00:11E8: A2 04 00     	ldx	#<$4
  5446                        	xref	~~~asr
  Sat Jul 10 2021  1:15                                                Page 100


  5447 00:11EB: 22 xx xx xx  	jsl	~~~asr
  5448 00:11EF: 85 05        	sta	<R1
  5449 00:11F1: A5 05        	lda	<R1
  5450 00:11F3: 0A           	asl	A
  5451 00:11F4: 0A           	asl	A
  5452 00:11F5: 65 05        	adc	<R1
  5453 00:11F7: 0A           	asl	A
  5454 00:11F8: 85 05        	sta	<R1
  5455 00:11FA: 18           	clc
  5456 00:11FB: A5 05        	lda	<R1
  5457 00:11FD: 65 01        	adc	<R0
  5458                        L232:
  5459 00:11FF: A8           	tay
  5460 00:1200: 2B           	pld
  5461 00:1201: 3B           	tsc
  5462 00:1202: 18           	clc
  5463 00:1203: 69 08 00     	adc	#L229
  5464 00:1206: 1B           	tcs
  5465 00:1207: 98           	tya
  5466 00:1208: 6B           	rtl
  5467                        ;}
  5468                        	.line	779
  5469                        	.endblock	779
  5470             00000008   L229	equ	8
  5471             00000009   L230	equ	9
  5472                        	ends
  5473                        	efunc
  5474                        	.endfunc	779,9,8
  5475                        	.line	779
  5476                        ;
  5477                        ;UINT k_get_rtc_second(void)
  5478                        ;{
  5479                        	.line	781
  5480                        	.line	782
  5481                        	code
  5482                        	xdef	~~k_get_rtc_second
  5483                        	func
  5484                        	.function	782
  5485                        ~~k_get_rtc_second:
  5486                        	longa	on
  5487                        	longi	on
  5488 00:1209: 3B           	tsc
  5489 00:120A: 38           	sec
  5490 00:120B: E9 08 00     	sbc	#L233
  5491 00:120E: 1B           	tcs
  5492 00:120F: 0B           	phd
  5493 00:1210: 5B           	tcd
  5494                        	.block	782
  5495                        ;	return (((RTC_SEC[0]&0x70)>>4) * 10)  + (RTC_SEC
                    [0]&0x0F);
  5496                        	.line	783
  5497 00:1211: AF 00 08 AF  	lda	>11470848
  5498 00:1215: 29 0F 00     	and	#<$f
  5499 00:1218: 85 01        	sta	<R0
  5500 00:121A: AF 00 08 AF  	lda	>11470848
  5501 00:121E: 29 70 00     	and	#<$70
  5502 00:1221: A2 04 00     	ldx	#<$4
  5503                        	xref	~~~asr
  Sat Jul 10 2021  1:15                                                Page 101


  5504 00:1224: 22 xx xx xx  	jsl	~~~asr
  5505 00:1228: 85 05        	sta	<R1
  5506 00:122A: A5 05        	lda	<R1
  5507 00:122C: 0A           	asl	A
  5508 00:122D: 0A           	asl	A
  5509 00:122E: 65 05        	adc	<R1
  5510 00:1230: 0A           	asl	A
  5511 00:1231: 85 05        	sta	<R1
  5512 00:1233: 18           	clc
  5513 00:1234: A5 05        	lda	<R1
  5514 00:1236: 65 01        	adc	<R0
  5515                        L236:
  5516 00:1238: A8           	tay
  5517 00:1239: 2B           	pld
  5518 00:123A: 3B           	tsc
  5519 00:123B: 18           	clc
  5520 00:123C: 69 08 00     	adc	#L233
  5521 00:123F: 1B           	tcs
  5522 00:1240: 98           	tya
  5523 00:1241: 6B           	rtl
  5524                        ;}
  5525                        	.line	784
  5526                        	.endblock	784
  5527             00000008   L233	equ	8
  5528             00000009   L234	equ	9
  5529                        	ends
  5530                        	efunc
  5531                        	.endfunc	784,9,8
  5532                        	.line	784
  5533                        ;
  5534                        ;UINT k_get_rtc_month(void)
  5535                        ;{
  5536                        	.line	786
  5537                        	.line	787
  5538                        	code
  5539                        	xdef	~~k_get_rtc_month
  5540                        	func
  5541                        	.function	787
  5542                        ~~k_get_rtc_month:
  5543                        	longa	on
  5544                        	longi	on
  5545 00:1242: 3B           	tsc
  5546 00:1243: 38           	sec
  5547 00:1244: E9 08 00     	sbc	#L237
  5548 00:1247: 1B           	tcs
  5549 00:1248: 0B           	phd
  5550 00:1249: 5B           	tcd
  5551                        	.block	787
  5552                        ;	return  (((RTC_MONTH[0]&0x10)>>4)  * 10)  + (RTC
                    _MONTH[0]&0x0F) ;
  5553                        	.line	788
  5554 00:124A: AF 09 08 AF  	lda	>11470857
  5555 00:124E: 29 0F 00     	and	#<$f
  5556 00:1251: 85 01        	sta	<R0
  5557 00:1253: AF 09 08 AF  	lda	>11470857
  5558 00:1257: 29 10 00     	and	#<$10
  5559 00:125A: A2 04 00     	ldx	#<$4
  5560                        	xref	~~~asr
  Sat Jul 10 2021  1:15                                                Page 102


  5561 00:125D: 22 xx xx xx  	jsl	~~~asr
  5562 00:1261: 85 05        	sta	<R1
  5563 00:1263: A5 05        	lda	<R1
  5564 00:1265: 0A           	asl	A
  5565 00:1266: 0A           	asl	A
  5566 00:1267: 65 05        	adc	<R1
  5567 00:1269: 0A           	asl	A
  5568 00:126A: 85 05        	sta	<R1
  5569 00:126C: 18           	clc
  5570 00:126D: A5 05        	lda	<R1
  5571 00:126F: 65 01        	adc	<R0
  5572                        L240:
  5573 00:1271: A8           	tay
  5574 00:1272: 2B           	pld
  5575 00:1273: 3B           	tsc
  5576 00:1274: 18           	clc
  5577 00:1275: 69 08 00     	adc	#L237
  5578 00:1278: 1B           	tcs
  5579 00:1279: 98           	tya
  5580 00:127A: 6B           	rtl
  5581                        ;}
  5582                        	.line	789
  5583                        	.endblock	789
  5584             00000008   L237	equ	8
  5585             00000009   L238	equ	9
  5586                        	ends
  5587                        	efunc
  5588                        	.endfunc	789,9,8
  5589                        	.line	789
  5590                        ;
  5591                        ;UINT k_get_rtc_day(void)
  5592                        ;{
  5593                        	.line	791
  5594                        	.line	792
  5595                        	code
  5596                        	xdef	~~k_get_rtc_day
  5597                        	func
  5598                        	.function	792
  5599                        ~~k_get_rtc_day:
  5600                        	longa	on
  5601                        	longi	on
  5602 00:127B: 3B           	tsc
  5603 00:127C: 38           	sec
  5604 00:127D: E9 08 00     	sbc	#L241
  5605 00:1280: 1B           	tcs
  5606 00:1281: 0B           	phd
  5607 00:1282: 5B           	tcd
  5608                        	.block	792
  5609                        ;	return (((RTC_DAY[0]&0x10)>>4)    * 10)  + (RTC_
                    DAY[0]&0x0F) ;
  5610                        	.line	793
  5611 00:1283: AF 06 08 AF  	lda	>11470854
  5612 00:1287: 29 0F 00     	and	#<$f
  5613 00:128A: 85 01        	sta	<R0
  5614 00:128C: AF 06 08 AF  	lda	>11470854
  5615 00:1290: 29 10 00     	and	#<$10
  5616 00:1293: A2 04 00     	ldx	#<$4
  5617                        	xref	~~~asr
  Sat Jul 10 2021  1:15                                                Page 103


  5618 00:1296: 22 xx xx xx  	jsl	~~~asr
  5619 00:129A: 85 05        	sta	<R1
  5620 00:129C: A5 05        	lda	<R1
  5621 00:129E: 0A           	asl	A
  5622 00:129F: 0A           	asl	A
  5623 00:12A0: 65 05        	adc	<R1
  5624 00:12A2: 0A           	asl	A
  5625 00:12A3: 85 05        	sta	<R1
  5626 00:12A5: 18           	clc
  5627 00:12A6: A5 05        	lda	<R1
  5628 00:12A8: 65 01        	adc	<R0
  5629                        L244:
  5630 00:12AA: A8           	tay
  5631 00:12AB: 2B           	pld
  5632 00:12AC: 3B           	tsc
  5633 00:12AD: 18           	clc
  5634 00:12AE: 69 08 00     	adc	#L241
  5635 00:12B1: 1B           	tcs
  5636 00:12B2: 98           	tya
  5637 00:12B3: 6B           	rtl
  5638                        ;}
  5639                        	.line	794
  5640                        	.endblock	794
  5641             00000008   L241	equ	8
  5642             00000009   L242	equ	9
  5643                        	ends
  5644                        	efunc
  5645                        	.endfunc	794,9,8
  5646                        	.line	794
  5647                        ;
  5648                        ;UINT k_get_rtc_year(void)
  5649                        ;{
  5650                        	.line	796
  5651                        	.line	797
  5652                        	code
  5653                        	xdef	~~k_get_rtc_year
  5654                        	func
  5655                        	.function	797
  5656                        ~~k_get_rtc_year:
  5657                        	longa	on
  5658                        	longi	on
  5659 00:12B4: 3B           	tsc
  5660 00:12B5: 38           	sec
  5661 00:12B6: E9 08 00     	sbc	#L245
  5662 00:12B9: 1B           	tcs
  5663 00:12BA: 0B           	phd
  5664 00:12BB: 5B           	tcd
  5665                        	.block	797
  5666                        ;	return  (((RTC_YEAR[0]&0xF0)>>4)   * 10)  + (RTC
                    _YEAR[0]&0x0F);
  5667                        	.line	798
  5668 00:12BC: AF 0A 08 AF  	lda	>11470858
  5669 00:12C0: 29 0F 00     	and	#<$f
  5670 00:12C3: 85 01        	sta	<R0
  5671 00:12C5: AF 0A 08 AF  	lda	>11470858
  5672 00:12C9: 29 F0 00     	and	#<$f0
  5673 00:12CC: A2 04 00     	ldx	#<$4
  5674                        	xref	~~~asr
  Sat Jul 10 2021  1:15                                                Page 104


  5675 00:12CF: 22 xx xx xx  	jsl	~~~asr
  5676 00:12D3: 85 05        	sta	<R1
  5677 00:12D5: A5 05        	lda	<R1
  5678 00:12D7: 0A           	asl	A
  5679 00:12D8: 0A           	asl	A
  5680 00:12D9: 65 05        	adc	<R1
  5681 00:12DB: 0A           	asl	A
  5682 00:12DC: 85 05        	sta	<R1
  5683 00:12DE: 18           	clc
  5684 00:12DF: A5 05        	lda	<R1
  5685 00:12E1: 65 01        	adc	<R0
  5686                        L248:
  5687 00:12E3: A8           	tay
  5688 00:12E4: 2B           	pld
  5689 00:12E5: 3B           	tsc
  5690 00:12E6: 18           	clc
  5691 00:12E7: 69 08 00     	adc	#L245
  5692 00:12EA: 1B           	tcs
  5693 00:12EB: 98           	tya
  5694 00:12EC: 6B           	rtl
  5695                        ;}
  5696                        	.line	799
  5697                        	.endblock	799
  5698             00000008   L245	equ	8
  5699             00000009   L246	equ	9
  5700                        	ends
  5701                        	efunc
  5702                        	.endfunc	799,9,8
  5703                        	.line	799
  5704                        ;
  5705                        ;UINT k_get_rtc_century(void)
  5706                        ;{
  5707                        	.line	801
  5708                        	.line	802
  5709                        	code
  5710                        	xdef	~~k_get_rtc_century
  5711                        	func
  5712                        	.function	802
  5713                        ~~k_get_rtc_century:
  5714                        	longa	on
  5715                        	longi	on
  5716 00:12ED: 3B           	tsc
  5717 00:12EE: 38           	sec
  5718 00:12EF: E9 08 00     	sbc	#L249
  5719 00:12F2: 1B           	tcs
  5720 00:12F3: 0B           	phd
  5721 00:12F4: 5B           	tcd
  5722                        	.block	802
  5723                        ;	return (((RTC_CENTURY[0]&0xF0)>>4)* 10)  + (RTC_
                    CENTURY[0]&0x0F);
  5724                        	.line	803
  5725 00:12F5: AF 0F 08 AF  	lda	>11470863
  5726 00:12F9: 29 0F 00     	and	#<$f
  5727 00:12FC: 85 01        	sta	<R0
  5728 00:12FE: AF 0F 08 AF  	lda	>11470863
  5729 00:1302: 29 F0 00     	and	#<$f0
  5730 00:1305: A2 04 00     	ldx	#<$4
  5731                        	xref	~~~asr
  Sat Jul 10 2021  1:15                                                Page 105


  5732 00:1308: 22 xx xx xx  	jsl	~~~asr
  5733 00:130C: 85 05        	sta	<R1
  5734 00:130E: A5 05        	lda	<R1
  5735 00:1310: 0A           	asl	A
  5736 00:1311: 0A           	asl	A
  5737 00:1312: 65 05        	adc	<R1
  5738 00:1314: 0A           	asl	A
  5739 00:1315: 85 05        	sta	<R1
  5740 00:1317: 18           	clc
  5741 00:1318: A5 05        	lda	<R1
  5742 00:131A: 65 01        	adc	<R0
  5743                        L252:
  5744 00:131C: A8           	tay
  5745 00:131D: 2B           	pld
  5746 00:131E: 3B           	tsc
  5747 00:131F: 18           	clc
  5748 00:1320: 69 08 00     	adc	#L249
  5749 00:1323: 1B           	tcs
  5750 00:1324: 98           	tya
  5751 00:1325: 6B           	rtl
  5752                        ;}
  5753                        	.line	804
  5754                        	.endblock	804
  5755             00000008   L249	equ	8
  5756             00000009   L250	equ	9
  5757                        	ends
  5758                        	efunc
  5759                        	.endfunc	804,9,8
  5760                        	.line	804
  5761                        ;
  5762                        ;void k_get_fpga_date_day(char *buffer)
  5763                        ;{
  5764                        	.line	806
  5765                        	.line	807
  5766                        	code
  5767                        	xdef	~~k_get_fpga_date_day
  5768                        	func
  5769                        	.function	807
  5770                        ~~k_get_fpga_date_day:
  5771                        	longa	on
  5772                        	longi	on
  5773 00:1326: 3B           	tsc
  5774 00:1327: 38           	sec
  5775 00:1328: E9 00 00     	sbc	#L253
  5776 00:132B: 1B           	tcs
  5777 00:132C: 0B           	phd
  5778 00:132D: 5B           	tcd
  5779             00000004   buffer_0	set	4
  5780                        	.block	807
  5781                        ;	k_bytetodec(FPGA_DOR[0],buffer);
  5782                        	.sym	buffer,4,142,6,32
  5783                        	.line	808
  5784 00:132E: D4 06        	pei	<L253+buffer_0+2
  5785 00:1330: D4 04        	pei	<L253+buffer_0
  5786 00:1332: AF 0D 07 AF  	lda	>11470605
  5787 00:1336: 48           	pha
  5788 00:1337: 22 xx xx xx  	jsl	~~k_bytetodec
  5789                        ;}
  Sat Jul 10 2021  1:15                                                Page 106


  5790                        	.line	809
  5791                        L256:
  5792 00:133B: A5 02        	lda	<L253+2
  5793 00:133D: 85 06        	sta	<L253+2+4
  5794 00:133F: A5 01        	lda	<L253+1
  5795 00:1341: 85 05        	sta	<L253+1+4
  5796 00:1343: 2B           	pld
  5797 00:1344: 3B           	tsc
  5798 00:1345: 18           	clc
  5799 00:1346: 69 04 00     	adc	#L253+4
  5800 00:1349: 1B           	tcs
  5801 00:134A: 6B           	rtl
  5802                        	.endblock	809
  5803             00000000   L253	equ	0
  5804             00000001   L254	equ	1
  5805                        	ends
  5806                        	efunc
  5807                        	.endfunc	809,1,0
  5808                        	.line	809
  5809                        ;
  5810                        ;void k_get_fpga_date_month(char *buffer)
  5811                        ;{
  5812                        	.line	811
  5813                        	.line	812
  5814                        	code
  5815                        	xdef	~~k_get_fpga_date_month
  5816                        	func
  5817                        	.function	812
  5818                        ~~k_get_fpga_date_month:
  5819                        	longa	on
  5820                        	longi	on
  5821 00:134B: 3B           	tsc
  5822 00:134C: 38           	sec
  5823 00:134D: E9 00 00     	sbc	#L257
  5824 00:1350: 1B           	tcs
  5825 00:1351: 0B           	phd
  5826 00:1352: 5B           	tcd
  5827             00000004   buffer_0	set	4
  5828                        	.block	812
  5829                        ;	k_bytetodec(FPGA_MOR[0],buffer);
  5830                        	.sym	buffer,4,142,6,32
  5831                        	.line	813
  5832 00:1353: D4 06        	pei	<L257+buffer_0+2
  5833 00:1355: D4 04        	pei	<L257+buffer_0
  5834 00:1357: AF 0E 07 AF  	lda	>11470606
  5835 00:135B: 48           	pha
  5836 00:135C: 22 xx xx xx  	jsl	~~k_bytetodec
  5837                        ;}
  5838                        	.line	814
  5839                        L260:
  5840 00:1360: A5 02        	lda	<L257+2
  5841 00:1362: 85 06        	sta	<L257+2+4
  5842 00:1364: A5 01        	lda	<L257+1
  5843 00:1366: 85 05        	sta	<L257+1+4
  5844 00:1368: 2B           	pld
  5845 00:1369: 3B           	tsc
  5846 00:136A: 18           	clc
  5847 00:136B: 69 04 00     	adc	#L257+4
  Sat Jul 10 2021  1:15                                                Page 107


  5848 00:136E: 1B           	tcs
  5849 00:136F: 6B           	rtl
  5850                        	.endblock	814
  5851             00000000   L257	equ	0
  5852             00000001   L258	equ	1
  5853                        	ends
  5854                        	efunc
  5855                        	.endfunc	814,1,0
  5856                        	.line	814
  5857                        ;
  5858                        ;void k_get_fpga_date_year(char *buffer)
  5859                        ;{
  5860                        	.line	816
  5861                        	.line	817
  5862                        	code
  5863                        	xdef	~~k_get_fpga_date_year
  5864                        	func
  5865                        	.function	817
  5866                        ~~k_get_fpga_date_year:
  5867                        	longa	on
  5868                        	longi	on
  5869 00:1370: 3B           	tsc
  5870 00:1371: 38           	sec
  5871 00:1372: E9 00 00     	sbc	#L261
  5872 00:1375: 1B           	tcs
  5873 00:1376: 0B           	phd
  5874 00:1377: 5B           	tcd
  5875             00000004   buffer_0	set	4
  5876                        	.block	817
  5877                        ;	k_bytetodec(FPGA_YOR[0],buffer);
  5878                        	.sym	buffer,4,142,6,32
  5879                        	.line	818
  5880 00:1378: D4 06        	pei	<L261+buffer_0+2
  5881 00:137A: D4 04        	pei	<L261+buffer_0
  5882 00:137C: AF 0F 07 AF  	lda	>11470607
  5883 00:1380: 48           	pha
  5884 00:1381: 22 xx xx xx  	jsl	~~k_bytetodec
  5885                        ;}
  5886                        	.line	819
  5887                        L264:
  5888 00:1385: A5 02        	lda	<L261+2
  5889 00:1387: 85 06        	sta	<L261+2+4
  5890 00:1389: A5 01        	lda	<L261+1
  5891 00:138B: 85 05        	sta	<L261+1+4
  5892 00:138D: 2B           	pld
  5893 00:138E: 3B           	tsc
  5894 00:138F: 18           	clc
  5895 00:1390: 69 04 00     	adc	#L261+4
  5896 00:1393: 1B           	tcs
  5897 00:1394: 6B           	rtl
  5898                        	.endblock	819
  5899             00000000   L261	equ	0
  5900             00000001   L262	equ	1
  5901                        	ends
  5902                        	efunc
  5903                        	.endfunc	819,1,0
  5904                        	.line	819
  5905                        ;
  Sat Jul 10 2021  1:15                                                Page 108


  5906                        ;void k_get_c256_major_version(char *buffer)
  5907                        ;{
  5908                        	.line	821
  5909                        	.line	822
  5910                        	code
  5911                        	xdef	~~k_get_c256_major_version
  5912                        	func
  5913                        	.function	822
  5914                        ~~k_get_c256_major_version:
  5915                        	longa	on
  5916                        	longi	on
  5917 00:1395: 3B           	tsc
  5918 00:1396: 38           	sec
  5919 00:1397: E9 00 00     	sbc	#L265
  5920 00:139A: 1B           	tcs
  5921 00:139B: 0B           	phd
  5922 00:139C: 5B           	tcd
  5923             00000004   buffer_0	set	4
  5924                        	.block	822
  5925                        ;	buffer[0] = *C256F_MODEL_MAJOR;
  5926                        	.sym	buffer,4,142,6,32
  5927                        	.line	823
  5928 00:139D: E2 20        	sep	#$20
  5929                        	longa	off
  5930 00:139F: AF 0B 07 AF  	lda	>11470603
  5931 00:13A3: 87 04        	sta	[<L265+buffer_0]
  5932 00:13A5: C2 20        	rep	#$20
  5933                        	longa	on
  5934                        ;	buffer[1] = 0;
  5935                        	.line	824
  5936 00:13A7: E2 20        	sep	#$20
  5937                        	longa	off
  5938 00:13A9: A9 00        	lda	#$0
  5939 00:13AB: A0 01 00     	ldy	#$1
  5940 00:13AE: 97 04        	sta	[<L265+buffer_0],Y
  5941 00:13B0: C2 20        	rep	#$20
  5942                        	longa	on
  5943                        ;}
  5944                        	.line	825
  5945                        L268:
  5946 00:13B2: A5 02        	lda	<L265+2
  5947 00:13B4: 85 06        	sta	<L265+2+4
  5948 00:13B6: A5 01        	lda	<L265+1
  5949 00:13B8: 85 05        	sta	<L265+1+4
  5950 00:13BA: 2B           	pld
  5951 00:13BB: 3B           	tsc
  5952 00:13BC: 18           	clc
  5953 00:13BD: 69 04 00     	adc	#L265+4
  5954 00:13C0: 1B           	tcs
  5955 00:13C1: 6B           	rtl
  5956                        	.endblock	825
  5957             00000000   L265	equ	0
  5958             00000001   L266	equ	1
  5959                        	ends
  5960                        	efunc
  5961                        	.endfunc	825,1,0
  5962                        	.line	825
  5963                        ;
  Sat Jul 10 2021  1:15                                                Page 109


  5964                        ;void k_get_c256_minor_version(char *buffer)
  5965                        ;{
  5966                        	.line	827
  5967                        	.line	828
  5968                        	code
  5969                        	xdef	~~k_get_c256_minor_version
  5970                        	func
  5971                        	.function	828
  5972                        ~~k_get_c256_minor_version:
  5973                        	longa	on
  5974                        	longi	on
  5975 00:13C2: 3B           	tsc
  5976 00:13C3: 38           	sec
  5977 00:13C4: E9 00 00     	sbc	#L269
  5978 00:13C7: 1B           	tcs
  5979 00:13C8: 0B           	phd
  5980 00:13C9: 5B           	tcd
  5981             00000004   buffer_0	set	4
  5982                        	.block	828
  5983                        ;	buffer[0] = *C256F_MODEL_MINOR;
  5984                        	.sym	buffer,4,142,6,32
  5985                        	.line	829
  5986 00:13CA: E2 20        	sep	#$20
  5987                        	longa	off
  5988 00:13CC: AF 0C 07 AF  	lda	>11470604
  5989 00:13D0: 87 04        	sta	[<L269+buffer_0]
  5990 00:13D2: C2 20        	rep	#$20
  5991                        	longa	on
  5992                        ;	buffer[1] = 0;
  5993                        	.line	830
  5994 00:13D4: E2 20        	sep	#$20
  5995                        	longa	off
  5996 00:13D6: A9 00        	lda	#$0
  5997 00:13D8: A0 01 00     	ldy	#$1
  5998 00:13DB: 97 04        	sta	[<L269+buffer_0],Y
  5999 00:13DD: C2 20        	rep	#$20
  6000                        	longa	on
  6001                        ;}
  6002                        	.line	831
  6003                        L272:
  6004 00:13DF: A5 02        	lda	<L269+2
  6005 00:13E1: 85 06        	sta	<L269+2+4
  6006 00:13E3: A5 01        	lda	<L269+1
  6007 00:13E5: 85 05        	sta	<L269+1+4
  6008 00:13E7: 2B           	pld
  6009 00:13E8: 3B           	tsc
  6010 00:13E9: 18           	clc
  6011 00:13EA: 69 04 00     	adc	#L269+4
  6012 00:13ED: 1B           	tcs
  6013 00:13EE: 6B           	rtl
  6014                        	.endblock	831
  6015             00000000   L269	equ	0
  6016             00000001   L270	equ	1
  6017                        	ends
  6018                        	efunc
  6019                        	.endfunc	831,1,0
  6020                        	.line	831
  6021                        ;
  Sat Jul 10 2021  1:15                                                Page 110


  6022                        ;void k_get_c256_release(char *buffer)
  6023                        ;{
  6024                        	.line	833
  6025                        	.line	834
  6026                        	code
  6027                        	xdef	~~k_get_c256_release
  6028                        	func
  6029                        	.function	834
  6030                        ~~k_get_c256_release:
  6031                        	longa	on
  6032                        	longi	on
  6033 00:13EF: 3B           	tsc
  6034 00:13F0: 38           	sec
  6035 00:13F1: E9 00 00     	sbc	#L273
  6036 00:13F4: 1B           	tcs
  6037 00:13F5: 0B           	phd
  6038 00:13F6: 5B           	tcd
  6039             00000004   buffer_0	set	4
  6040                        	.block	834
  6041                        ;	buffer[0] = *C256F_MODEL_MAJOR;
  6042                        	.sym	buffer,4,142,6,32
  6043                        	.line	835
  6044 00:13F7: E2 20        	sep	#$20
  6045                        	longa	off
  6046 00:13F9: AF 0B 07 AF  	lda	>11470603
  6047 00:13FD: 87 04        	sta	[<L273+buffer_0]
  6048 00:13FF: C2 20        	rep	#$20
  6049                        	longa	on
  6050                        ;	buffer[1] = *C256F_MODEL_MINOR;
  6051                        	.line	836
  6052 00:1401: E2 20        	sep	#$20
  6053                        	longa	off
  6054 00:1403: AF 0C 07 AF  	lda	>11470604
  6055 00:1407: A0 01 00     	ldy	#$1
  6056 00:140A: 97 04        	sta	[<L273+buffer_0],Y
  6057 00:140C: C2 20        	rep	#$20
  6058                        	longa	on
  6059                        ;	buffer[2] = 0;
  6060                        	.line	837
  6061 00:140E: E2 20        	sep	#$20
  6062                        	longa	off
  6063 00:1410: A9 00        	lda	#$0
  6064 00:1412: A0 02 00     	ldy	#$2
  6065 00:1415: 97 04        	sta	[<L273+buffer_0],Y
  6066 00:1417: C2 20        	rep	#$20
  6067                        	longa	on
  6068                        ;}
  6069                        	.line	838
  6070                        L276:
  6071 00:1419: A5 02        	lda	<L273+2
  6072 00:141B: 85 06        	sta	<L273+2+4
  6073 00:141D: A5 01        	lda	<L273+1
  6074 00:141F: 85 05        	sta	<L273+1+4
  6075 00:1421: 2B           	pld
  6076 00:1422: 3B           	tsc
  6077 00:1423: 18           	clc
  6078 00:1424: 69 04 00     	adc	#L273+4
  6079 00:1427: 1B           	tcs
  Sat Jul 10 2021  1:15                                                Page 111


  6080 00:1428: 6B           	rtl
  6081                        	.endblock	838
  6082             00000000   L273	equ	0
  6083             00000001   L274	equ	1
  6084                        	ends
  6085                        	efunc
  6086                        	.endfunc	838,1,0
  6087                        	.line	838
  6088                        ;
  6089                        ;BOOL k_user_IsOSDebug(VOID)
  6090                        ;{
  6091                        	.line	840
  6092                        	.line	841
  6093                        	code
  6094                        	xdef	~~k_user_IsOSDebug
  6095                        	func
  6096                        	.function	841
  6097                        ~~k_user_IsOSDebug:
  6098                        	longa	on
  6099                        	longi	on
  6100 00:1429: 3B           	tsc
  6101 00:142A: 38           	sec
  6102 00:142B: E9 00 00     	sbc	#L277
  6103 00:142E: 1B           	tcs
  6104 00:142F: 0B           	phd
  6105 00:1430: 5B           	tcd
  6106                        	.block	841
  6107                        ;	return _k_isOSDebug;
  6108                        	.line	842
  6109 00:1431: AD xx xx     	lda	|~~_k_isOSDebug
  6110 00:1434: 29 FF 00     	and	#$ff
  6111                        L280:
  6112 00:1437: A8           	tay
  6113 00:1438: 2B           	pld
  6114 00:1439: 3B           	tsc
  6115 00:143A: 18           	clc
  6116 00:143B: 69 00 00     	adc	#L277
  6117 00:143E: 1B           	tcs
  6118 00:143F: 98           	tya
  6119 00:1440: 6B           	rtl
  6120                        ;}
  6121                        	.line	843
  6122                        	.endblock	843
  6123             00000000   L277	equ	0
  6124             00000001   L278	equ	1
  6125                        	ends
  6126                        	efunc
  6127                        	.endfunc	843,1,0
  6128                        	.line	843
  6129                        ;
  6130                        ;VOID k_user_EnableOSDebug(VOID)
  6131                        ;{
  6132                        	.line	845
  6133                        	.line	846
  6134                        	code
  6135                        	xdef	~~k_user_EnableOSDebug
  6136                        	func
  6137                        	.function	846
  Sat Jul 10 2021  1:15                                                Page 112


  6138                        ~~k_user_EnableOSDebug:
  6139                        	longa	on
  6140                        	longi	on
  6141 00:1441: 3B           	tsc
  6142 00:1442: 38           	sec
  6143 00:1443: E9 00 00     	sbc	#L281
  6144 00:1446: 1B           	tcs
  6145 00:1447: 0B           	phd
  6146 00:1448: 5B           	tcd
  6147                        	.block	846
  6148                        ;	_k_isOSDebug = TRUE;
  6149                        	.line	847
  6150 00:1449: E2 20        	sep	#$20
  6151                        	longa	off
  6152 00:144B: A9 01        	lda	#$1
  6153 00:144D: 8D xx xx     	sta	|~~_k_isOSDebug
  6154 00:1450: C2 20        	rep	#$20
  6155                        	longa	on
  6156                        ;}
  6157                        	.line	848
  6158                        L284:
  6159 00:1452: 2B           	pld
  6160 00:1453: 3B           	tsc
  6161 00:1454: 18           	clc
  6162 00:1455: 69 00 00     	adc	#L281
  6163 00:1458: 1B           	tcs
  6164 00:1459: 6B           	rtl
  6165                        	.endblock	848
  6166             00000000   L281	equ	0
  6167             00000001   L282	equ	1
  6168                        	ends
  6169                        	efunc
  6170                        	.endfunc	848,1,0
  6171                        	.line	848
  6172                        ;
  6173                        ;VOID k_user_DisableOSDebug(VOID)
  6174                        ;{
  6175                        	.line	850
  6176                        	.line	851
  6177                        	code
  6178                        	xdef	~~k_user_DisableOSDebug
  6179                        	func
  6180                        	.function	851
  6181                        ~~k_user_DisableOSDebug:
  6182                        	longa	on
  6183                        	longi	on
  6184 00:145A: 3B           	tsc
  6185 00:145B: 38           	sec
  6186 00:145C: E9 00 00     	sbc	#L285
  6187 00:145F: 1B           	tcs
  6188 00:1460: 0B           	phd
  6189 00:1461: 5B           	tcd
  6190                        	.block	851
  6191                        ;	_k_isOSDebug = FALSE;
  6192                        	.line	852
  6193 00:1462: E2 20        	sep	#$20
  6194                        	longa	off
  6195 00:1464: 9C xx xx     	stz	|~~_k_isOSDebug
  Sat Jul 10 2021  1:15                                                Page 113


  6196 00:1467: C2 20        	rep	#$20
  6197                        	longa	on
  6198                        ;}
  6199                        	.line	853
  6200                        L288:
  6201 00:1469: 2B           	pld
  6202 00:146A: 3B           	tsc
  6203 00:146B: 18           	clc
  6204 00:146C: 69 00 00     	adc	#L285
  6205 00:146F: 1B           	tcs
  6206 00:1470: 6B           	rtl
  6207                        	.endblock	853
  6208             00000000   L285	equ	0
  6209             00000001   L286	equ	1
  6210                        	ends
  6211                        	efunc
  6212                        	.endfunc	853,1,0
  6213                        	.line	853
  6214                        ;
  6215                        	.line	853
  6216                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxkernel.c",850
  6217                        	xref	~~_k_initialize_call_table
  6218                        	xref	~~k_put_color
  6219                        	xref	~~k_put_string
  6220                        	xref	~~k_put_char
  6221                        	xref	~~k_longtodec
  6222                        	xref	~~k_inttodec
  6223                        	xref	~~k_bytetodec
  6224                        	xref	~~k_bytetohex
  6225                        	xref	~~k_strip_padding
  6226                        	xref	~~memset
  6227                        	udata
  6228                        ~~fx_con_api_table
  6229 00:0000:              	ds	1024
  6230 00:0400:              	ends
  6231                        	udata
  6232                        ~~fx_gui_api_table
  6233 00:0400:              	ds	1024
  6234 00:0800:              	ends
  6235                        	udata
  6236                        ~~fx_gfx_api_table
  6237 00:0800:              	ds	1024
  6238 00:0C00:              	ends
  6239                        	udata
  6240                        ~~fx_dos_api_table
  6241 00:0C00:              	ds	1024
  6242 00:1000:              	ends
  6243                        	udata
  6244                        ~~fx_kernel_api_table
  6245 00:1000:              	ds	1024
  6246 00:1400:              	ends
  6247                        	udata
  6248                        ~~KERNEL_FUNCTION_TABLE
  6249 00:1400:              	ds	4
  6250 00:1404:              	ends
  6251                        	udata
  6252                        ~~k16buffer
  Sat Jul 10 2021  1:15                                                Page 114


  6253 00:1404:              	ds	16
  6254 00:1414:              	ends
  6255                        	.sym	~~fx_con_api_table,~~fx_con_api_table,10
                    ,3,8192,78
  6256                        	.sym	~~fx_gui_api_table,~~fx_gui_api_table,10
                    ,3,8192,78
  6257                        	.sym	~~fx_gfx_api_table,~~fx_gfx_api_table,10
                    ,3,8192,78
  6258                        	.sym	~~fx_dos_api_table,~~fx_dos_api_table,10
                    ,3,8192,78
  6259                        	.sym	~~fx_kernel_api_table,~~fx_kernel_api_ta
                    ble,10,3,8192,78
  6260                        	.sym	~~KERNEL_FUNCTION_TABLE,~~KERNEL_FUNCTIO
                    N_TABLE,5249,3,32
  6261                        	.sym	~~k16buffer,~~k16buffer,110,3,0,16
  6262                        	.sym	~~_k_isOSDebug,~~_k_isOSDebug,14,3,8
  6263                        	.sym	~~FXOSVERSIONSTRING,~~FXOSVERSIONSTRING,
                    142,3,32
  6264                        	.sym	~~FXOSVERSION,~~FXOSVERSION,18,3,32
  6265                        	.sym	va_list,0,142,14,32
  6266                        	.sym	DEVICEDRIVER_COMMAND,0,656,14,32
  6267                        	.sym	DEVICEDRIVER_UNLOAD,0,654,14,32
  6268                        	.sym	DEVICEDRIVER_WRITE,0,656,14,32
  6269                        	.sym	DEVICEDRIVER_READ,0,656,14,32
  6270                        	.sym	DEVICEDRIVER_LOAD,0,654,14,32
  6271                        	.sym	DEVICEDRIVER_IRQ,0,654,14,32
  6272                        	.sym	PFX_BLOCK_DEVICE_DRIVER,0,138,14,32,84
  6273                        	.sym	FX_BLOCK_DEVICE_DRIVER,0,10,14,808,84
  6274                        	.sym	GETDRIVERDEF,0,8842,14,32,83
  6275                        	.sym	PFX_DEVICE_DRIVER,0,138,14,32,83
  6276                        	.sym	FX_DEVICE_DRIVER,0,10,14,776,83
  6277                        	.sym	~~k_DebugOutString,~~k_DebugOutString,65
                    ,2,0
  6278                        	.sym	~~k_get_c256_release,~~k_get_c256_releas
                    e,65,2,0
  6279                        	.sym	~~k_get_c256_minor_version,~~k_get_c256_
                    minor_version,65,2,0
  6280                        	.sym	~~k_get_c256_major_version,~~k_get_c256_
                    major_version,65,2,0
  6281                        	.sym	~~k_get_fpga_date_year,~~k_get_fpga_date
                    _year,65,2,0
  6282                        	.sym	~~k_get_fpga_date_month,~~k_get_fpga_dat
                    e_month,65,2,0
  6283                        	.sym	~~k_get_fpga_date_day,~~k_get_fpga_date_
                    day,65,2,0
  6284                        	.sym	~~k_get_rtc_century,~~k_get_rtc_century,
                    80,2,0
  6285                        	.sym	~~k_get_rtc_year,~~k_get_rtc_year,80,2,0
  6286                        	.sym	~~k_get_rtc_day,~~k_get_rtc_day,80,2,0
  6287                        	.sym	~~k_get_rtc_month,~~k_get_rtc_month,80,2
                    ,0
  6288                        	.sym	~~k_get_rtc_second,~~k_get_rtc_second,80
                    ,2,0
  6289                        	.sym	~~k_get_rtc_minute,~~k_get_rtc_minute,80
                    ,2,0
  6290                        	.sym	~~k_get_rtc_hour,~~k_get_rtc_hour,80,2,0
  6291                        	.sym	~~k_user_DisableOSDebug,~~k_user_Disable
                    OSDebug,65,2,0
  Sat Jul 10 2021  1:15                                                Page 115


  6292                        	.sym	~~k_user_EnableOSDebug,~~k_user_EnableOS
                    Debug,65,2,0
  6293                        	.sym	~~k_user_IsOSDebug,~~k_user_IsOSDebug,78
                    ,2,0
  6294                        	.sym	~~k_debug_uart_status_com2,~~k_debug_uar
                    t_status_com2,65,2,0
  6295                        	.sym	~~k_debug_uart_status_com1,~~k_debug_uar
                    t_status_com1,65,2,0
  6296                        	.sym	~~k_debug_nodelist_with_data,~~k_debug_n
                    odelist_with_data,65,2,0
  6297                        	.sym	~~k_debug_nodelist_list,~~k_debug_nodeli
                    st_list,65,2,0
  6298                        	.sym	~~k_debug_nodelist,~~k_debug_nodelist,65
                    ,2,0
  6299                        	.sym	~~k_debug_node,~~k_debug_node,65,2,0
  6300                        	.sym	~~k_debug_integers,~~k_debug_integers,65
                    ,2,0
  6301                        	.sym	~~k_debug_crlf,~~k_debug_crlf,65,2,0
  6302                        	.sym	~~k_debug_rect,~~k_debug_rect,65,2,0
  6303                        	.sym	~~k_debug_nstrings,~~k_debug_nstrings,65
                    ,2,0
  6304                        	.sym	~~k_debug_nmessage,~~k_debug_nmessage,65
                    ,2,0
  6305                        	.sym	~~k_debug_strings,~~k_debug_strings,65,2
                    ,0
  6306                        	.sym	~~k_debug_message,~~k_debug_message,65,2
                    ,0
  6307                        	.sym	~~k_debug_byte_array,~~k_debug_byte_arra
                    y,65,2,0
  6308                        	.sym	~~k_debug_on,~~k_debug_on,65,2,0
  6309                        	.sym	~~k_debug_bits,~~k_debug_bits,65,2,0
  6310                        	.sym	~~k_debug_hexchar,~~k_debug_hexchar,65,2
                    ,0
  6311                        	.sym	~~k_debug_hex,~~k_debug_hex,65,2,0
  6312                        	.sym	~~k_debug_long,~~k_debug_long,65,2,0
  6313                        	.sym	~~k_debug_integer_array,~~k_debug_intege
                    r_array,65,2,0
  6314                        	.sym	~~k_debug_hex_integer,~~k_debug_hex_inte
                    ger,65,2,0
  6315                        	.sym	~~k_debug_integer,~~k_debug_integer,65,2
                    ,0
  6316                        	.sym	~~k_debug_pointer,~~k_debug_pointer,65,2
                    ,0
  6317                        	.sym	~~k_debug_char,~~k_debug_char,65,2,0
  6318                        	.sym	~~k_debug_nstring,~~k_debug_nstring,65,2
                    ,0
  6319                        	.sym	~~k_debug_string,~~k_debug_string,65,2,0
  6320                        	.sym	~~k_debug_nstring_com1,~~k_debug_nstring
                    _com1,65,2,0
  6321                        	.sym	~~k_debug_nstring_com2,~~k_debug_nstring
                    _com2,65,2,0
  6322                        	.sym	~~k_debug_string_com2,~~k_debug_string_c
                    om2,65,2,0
  6323                        	.sym	~~k_debug_string_com1,~~k_debug_string_c
                    om1,65,2,0
  6324                        	.sym	~~k_delay,~~k_delay,65,2,0
  6325                        	.sym	~~k_report_configuration,~~k_report_conf
                    iguration,69,2,0
  Sat Jul 10 2021  1:15                                                Page 116


  6326                        	.sym	~~k_getFXOSVersionName,~~k_getFXOSVersio
                    nName,1102,2,32
  6327                        	.sym	~~sleep,~~sleep,65,2,0
  6328                        	.sym	~~k_delay_1ms,~~k_delay_1ms,65,2,0
  6329                        	.sym	~~k_delay_1,~~k_delay_1,65,2,0
  6330                        	.sym	~~k_delay_nop,~~k_delay_nop,65,2,0
  6331                        	.sym	PSEGMENTHEADER,0,138,14,32,82
  6332                        	.sym	SEGMENTHEADER,0,10,14,160,82
  6333                        	.sym	~~k_initializeZeroPage,~~k_initializeZer
                    oPage,1098,2,32,79
  6334                        	.sym	~~k_getKernelTrapTable,~~k_getKernelTrap
                    Table,42049,2,32
  6335                        	.sym	~~k_getZeroPage,~~k_getZeroPage,1098,2,3
                    2,79
  6336                        	.sym	PDEBUGBYTEBITS,0,138,14,32,81
  6337                        	.sym	DEBUGBYTEBITS,0,10,14,8,81
  6338                        	.sym	PFXENVIRONMENT,0,138,14,32,80
  6339                        	.sym	FXENVIRONMENT,0,10,14,96,80
  6340                        	.sym	~~_k_initialize_call_table,~~_k_initiali
                    ze_call_table,65,18,0
  6341                        	.sym	PFXZEROPAGE,0,138,14,32,79
  6342                        	.sym	FXZEROPAGE,0,10,14,824,79
  6343                        	.sym	KERNELTRAPCALL,0,641,14,32
  6344                        	.sym	PFXKERNEL_API_CALLTABLE,0,138,14,32,78
  6345                        	.sym	FXKERNEL_API_CALLTABLE,0,10,14,8192,78
  6346                        	.sym	FRESULT,0,5,14,16
  6347                        	.sym	MKFS_PARM,0,10,14,80,77
  6348                        	.sym	FILINFO,0,10,14,2224,76
  6349                        	.sym	DIR,0,10,14,416,75
  6350                        	.sym	FIL,0,10,14,4400,74
  6351                        	.sym	FFOBJID,0,10,14,128,73
  6352                        	.sym	FATFS,0,10,14,4504,72
  6353                        	.sym	LBA_t,0,18,14,32
  6354                        	.sym	FSIZE_t,0,18,14,32
  6355                        	.sym	TCHAR,0,14,14,8
  6356                        	.sym	~~k_put_color,~~k_put_color,69,18,0
  6357                        	.sym	~~k_put_string,~~k_put_string,69,18,0
  6358                        	.sym	~~k_put_char,~~k_put_char,65,18,0
  6359                        	.sym	PCOMMANDARGS,0,138,14,32,71
  6360                        	.sym	COMMANDARGS,0,10,14,64,71
  6361                        	.sym	PTOKENIZESTATE,0,133,14,32
  6362                        	.sym	TOKENIZESTATE,0,5,14,16
  6363                        	.sym	PTOKEN,0,138,14,32,70
  6364                        	.sym	TOKEN,0,10,14,64,70
  6365                        	.sym	PTOKENTYPE,0,133,14,32
  6366                        	.sym	TOKENTYPE,0,5,14,16
  6367                        	.sym	FXCommandHandler,0,656,14,32
  6368                        	.sym	PCONSOLECTX,0,138,14,32,69
  6369                        	.sym	CONSOLECTX,0,10,14,1144,69
  6370                        	.sym	PSPINNERCTX,0,138,14,32,68
  6371                        	.sym	SPINNERCTX,0,10,14,48,68
  6372                        	.sym	HCLIP,0,138,14,32,67
  6373                        	.sym	PCLIPBOARD_DATA,0,138,14,32,67
  6374                        	.sym	CLIPBOARD_DATA,0,10,14,168,67
  6375                        	.sym	PEVENTMANAGER,0,138,14,32,66
  6376                        	.sym	EVENTMANAGER,0,10,14,192,66
  6377                        	.sym	EV_RUN,0,656,14,32
  6378                        	.sym	EV_QUERY_METRIC,0,656,14,32
  Sat Jul 10 2021  1:15                                                Page 117


  6379                        	.sym	EV_CONFIGURE,0,656,14,32
  6380                        	.sym	EV_UNINIT,0,641,14,32
  6381                        	.sym	EV_INIT,0,8833,14,32
  6382                        	.sym	PMOUSE_MSG_STATE,0,138,14,32,65
  6383                        	.sym	MOUSE_MSG_STATE,0,10,14,184,65
  6384                        	.sym	PFXEVENTPROCESS,0,138,14,32,64
  6385                        	.sym	FXEVENTPROCESS,0,10,14,64,64
  6386                        	.sym	PMARSHALDATA,0,139,14,32,63
  6387                        	.sym	MARSHALDATA,0,11,14,32,63
  6388                        	.sym	FXIDLEPROCESS,0,641,14,32
  6389                        	.sym	FXEventProc,0,641,14,32
  6390                        	.sym	PMOUSEMSGDATA,0,138,14,32,62
  6391                        	.sym	MOUSEMSGDATA,0,10,14,64,62
  6392                        	.sym	MSGIRQ,0,5,14,16
  6393                        	.sym	MAINLOOPARGS,0,10,14,16,61
  6394                        	.sym	PEACHCHILD_MSG,0,138,14,32,60
  6395                        	.sym	EACHCHILD_MSG,0,10,14,64,60
  6396                        	.sym	PMSGBOX_DATA,0,138,14,32,59
  6397                        	.sym	MSGBOX_DATA,0,10,14,96,59
  6398                        	.sym	PDESKTOP_DATA,0,138,14,32,58
  6399                        	.sym	DESKTOP_DATA,0,10,14,64,58
  6400                        	.sym	PWINDOWMANAGER,0,138,14,32,57
  6401                        	.sym	WINDOWMANAGER,0,10,14,160,57
  6402                        	.sym	WM_DOPROCS,0,641,14,32
  6403                        	.sym	WM_QUERY_METRIC,0,656,14,32
  6404                        	.sym	WM_CONFIGURE,0,656,14,32
  6405                        	.sym	WM_HANDLE_EVENT,0,8833,14,32
  6406                        	.sym	WM_EVENTS,0,641,14,32
  6407                        	.sym	PCUR_PALETTE_MAP,0,138,14,32,56
  6408                        	.sym	CUR_PALETTE_MAP,0,10,14,400,56
  6409                        	.sym	PCLICKDETECTED,0,138,14,32,55
  6410                        	.sym	CLICKDETECTED,0,10,14,64,55
  6411                        	.sym	OBJECTCLICKED,0,641,14,32
  6412                        	.sym	PIPCPORT,0,138,14,32,54
  6413                        	.sym	IPCPORT,0,10,14,144,54
  6414                        	.sym	MemoryCallback,0,641,14,32
  6415                        	.sym	PFXMEMORYMAP,0,138,14,32,53
  6416                        	.sym	FXMEMORYMAP,0,10,14,2072,53
  6417                        	.sym	UMM_HEAP_INFO,0,10,14,256,52
  6418                        	.sym	FOREACHNODEUNTIL,0,654,14,32
  6419                        	.sym	FOREACHNODE,0,641,14,32
  6420                        	.sym	PEXECUTIVE,0,138,14,32,51
  6421                        	.sym	EXECUTIVE,0,10,14,128,51
  6422                        	.sym	EX_QUERY_METRIC,0,656,14,32
  6423                        	.sym	EX_CONFIGURE,0,656,14,32
  6424                        	.sym	EX_UNINIT,0,641,14,32
  6425                        	.sym	EX_INIT,0,8833,14,32
  6426                        	.sym	~~k_longtodec,~~k_longtodec,1102,18,32
  6427                        	.sym	~~k_inttodec,~~k_inttodec,1102,18,32
  6428                        	.sym	~~k_bytetodec,~~k_bytetodec,1102,18,32
  6429                        	.sym	~~k_bytetohex,~~k_bytetohex,1102,18,32
  6430                        	.sym	~~k_strip_padding,~~k_strip_padding,1102
                    ,18,32
  6431                        	.sym	PFXSTRING,0,138,14,32,50
  6432                        	.sym	FXSTRING,0,10,14,64,50
  6433                        	.sym	PFXRFHEADER_FONT,0,138,14,32,49
  6434                        	.sym	FXRFHEADER_FONT,0,10,14,144,49
  6435                        	.sym	PFXRFHEADER,0,138,14,32,48
  Sat Jul 10 2021  1:15                                                Page 118


  6436                        	.sym	FXRFHEADER,0,10,14,72,48
  6437                        	.sym	PFXCOMBUFFER,0,138,14,32,47
  6438                        	.sym	FXCOMBUFFER,0,10,14,2080,47
  6439                        	.sym	PSUBMENULIST,0,138,14,32,46
  6440                        	.sym	SUBMENULIST,0,10,14,40,46
  6441                        	.sym	HSUBMENU,0,7,14,32
  6442                        	.sym	PSUBMENU,0,138,14,32,45
  6443                        	.sym	SUBMENU,0,10,14,64,45
  6444                        	.sym	MenuAction,0,641,14,32
  6445                        	.sym	PMENUANCHOR,0,138,14,32,44
  6446                        	.sym	MENUANCHOR,0,10,14,272,44
  6447                        	.sym	PMSGBOX,0,138,14,32,43
  6448                        	.sym	MSGBOX,0,10,14,144,43
  6449                        	.sym	PTEXTBOX,0,138,14,32,42
  6450                        	.sym	TEXTBOX,0,10,14,144,42
  6451                        	.sym	PLISTBOX,0,138,14,32,41
  6452                        	.sym	LISTBOX,0,10,14,240,41
  6453                        	.sym	PSCROLLBAR,0,138,14,32,40
  6454                        	.sym	SCROLLBAR,0,10,14,240,40
  6455                        	.sym	PBUTTON,0,138,14,32,39
  6456                        	.sym	BUTTON,0,10,14,96,39
  6457                        	.sym	PMENUDROPDOWNDATA,0,138,14,32,38
  6458                        	.sym	MENUDROPDOWNDATA,0,10,14,5152,38
  6459                        	.sym	PMENUTAG,0,138,14,32,37
  6460                        	.sym	MENUTAG,0,10,14,160,37
  6461                        	.sym	PMENU,0,138,14,32,36
  6462                        	.sym	MENU,0,10,14,280,36
  6463                        	.sym	HMENURESOURCE,0,129,14,32
  6464                        	.sym	FONTMETRIC,0,10,14,32,35
  6465                        	.sym	TITLE,0,142,14,32
  6466                        	.sym	PHANDLE,0,1153,14,32
  6467                        	.sym	HANDLE,0,129,14,32
  6468                        	.sym	PWINDOWEX,0,138,14,32,34
  6469                        	.sym	WINDOWEX,0,10,14,3880,34
  6470                        	.sym	PWINDOW,0,138,14,32,33
  6471                        	.sym	WINDOW,0,10,14,3904,33
  6472                        	.sym	PDRAGDATA,0,138,14,32,32
  6473                        	.sym	DRAGDATA,0,10,14,216,32
  6474                        	.sym	PNCCLICKABLE,0,138,14,32,31
  6475                        	.sym	NCCLICKABLE,0,10,14,136,31
  6476                        	.sym	HCLICKABLE,0,7,14,32
  6477                        	.sym	PCLICKABLE,0,138,14,32,30
  6478                        	.sym	CLICKABLE,0,10,14,152,30
  6479                        	.sym	PWNDCLASS,0,138,14,32,29
  6480                        	.sym	WNDCLASS,0,10,14,272,29
  6481                        	.sym	HBRUSH,0,129,14,32
  6482                        	.sym	HCURSOR,0,129,14,32
  6483                        	.sym	HICON,0,129,14,32
  6484                        	.sym	HINSTANCE,0,129,14,32
  6485                        	.sym	FXWndProc,0,654,14,32
  6486                        	.sym	PDRECT,0,138,14,32,28
  6487                        	.sym	DRECT,0,10,14,112,28
  6488                        	.sym	PRECTP,0,138,14,32,27
  6489                        	.sym	RECTP,0,10,14,96,27
  6490                        	.sym	PRECT,0,138,14,32,26
  6491                        	.sym	RECT,0,10,14,112,26
  6492                        	.sym	PPOINT,0,138,14,32,25
  6493                        	.sym	POINT,0,10,14,32,25
  Sat Jul 10 2021  1:15                                                Page 119


  6494                        	.sym	PFXPROPERTY,0,138,14,32,23
  6495                        	.sym	FXPROPERTY,0,10,14,384,23
  6496                        	.sym	PKEYSTATE,0,138,14,32,22
  6497                        	.sym	KEYSTATE,0,10,14,112,22
  6498                        	.sym	SCANCODE,0,14,14,8
  6499                        	.sym	KEYCODE,0,16,14,16
  6500                        	.sym	PFXPROCESSMESSAGE,0,138,14,32,21
  6501                        	.sym	FXPROCESSMESSAGE,0,10,14,112,21
  6502                        	.sym	PFXPROCESS,0,138,14,32,20
  6503                        	.sym	FXPROCESS,0,10,14,800,20
  6504                        	.sym	PDESKTOP_CONTROL,0,138,14,32,19
  6505                        	.sym	DESKTOP_CONTROL,0,10,14,392,19
  6506                        	.sym	PCONSOLE_CONTROL,0,138,14,32,18
  6507                        	.sym	CONSOLE_CONTROL,0,10,14,448,18
  6508                        	.sym	FXProcessProc,0,641,14,32
  6509                        	.sym	PFXCMDMESSAGE,0,138,14,32,17
  6510                        	.sym	FXCMDMESSAGE,0,10,14,304,17
  6511                        	.sym	PFXOSMESSAGE,0,138,14,32,16
  6512                        	.sym	FXOSMESSAGE,0,10,14,304,16
  6513                        	.sym	PINT_REGS,0,138,14,32,15
  6514                        	.sym	INT_REGS,0,10,14,104,15
  6515                        	.sym	TASK_STACK,0,10,14,32,14
  6516                        	.sym	TASK,0,10,14,48,13
  6517                        	.sym	PIRQDATA,0,138,14,32,12
  6518                        	.sym	IRQDATA,0,10,14,48,12
  6519                        	.sym	HMENU,0,129,14,32
  6520                        	.sym	HWND,0,129,14,32
  6521                        	.sym	MSGDATA,0,14,14,8
  6522                        	.sym	MSGDEST,0,18,14,32
  6523                        	.sym	MSGSRC,0,18,14,32
  6524                        	.sym	MSGTYPE,0,16,14,16
  6525                        	.sym	PROCESS_RESOURCE_LIST,0,138,14,32,6
  6526                        	.sym	PROCESS_TLS_LIST,0,138,14,32,6
  6527                        	.sym	SEMAPHORE_LIST,0,138,14,32,6
  6528                        	.sym	FILE_BLOCK_LIST,0,138,14,32,6
  6529                        	.sym	FILE_PATH_LIST,0,138,14,32,6
  6530                        	.sym	PROCEDURE_LIST,0,138,14,32,6
  6531                        	.sym	FILE_HANDLE,0,138,14,32,11
  6532                        	.sym	FILE_BLOCK,0,10,14,552,11
  6533                        	.sym	SEMAPHORE,0,10,14,16,10
  6534                        	.sym	PPROCESS_SIGNAL,0,138,14,32,9
  6535                        	.sym	PROCESS_SIGNAL,0,10,14,16,9
  6536                        	.sym	KRESULT,0,18,14,32
  6537                        	.sym	PKERNEL_ERROR,0,138,14,32,8
  6538                        	.sym	KERNEL_ERROR,0,10,14,32,8
  6539                        	.sym	PROCESS_STATUS,0,16,14,16
  6540                        	.sym	FILE_PATH_NAME,0,142,14,32
  6541                        	.sym	PROCESS_RESOURCE,0,129,14,32
  6542                        	.sym	PROCESS_TLS,0,129,14,32
  6543                        	.sym	PROCESS_CTX,0,129,14,32
  6544                        	.sym	USERID,0,16,14,16
  6545                        	.sym	PROCESS_ID,0,18,14,32
  6546                        	.sym	PROCESS_BANK,0,14,14,8
  6547                        	.sym	PFXQUEUE,0,138,14,32,7
  6548                        	.sym	FXQUEUE,0,10,14,80,7
  6549                        	.sym	PFXNODELIST,0,138,14,32,6
  6550                        	.sym	FXNODELIST,0,10,14,96,6
  6551                        	.sym	NodeListDeallocator,0,641,14,32
  Sat Jul 10 2021  1:15                                                Page 120


  6552                        	.sym	PFXNODE,0,138,14,32,5
  6553                        	.sym	FXNODE,0,10,14,384,5
  6554                        	.sym	PBYTEBITS,0,138,14,32,4
  6555                        	.sym	BYTEBITS,0,10,14,8,4
  6556                        	.sym	HRESULT,0,18,14,32
  6557                        	.sym	LPWCHAR,0,144,14,32
  6558                        	.sym	WCHAR,0,16,14,16
  6559                        	.sym	HCOLOR,0,129,14,32
  6560                        	.sym	HFONT,0,129,14,32
  6561                        	.sym	HDC,0,129,14,32
  6562                        	.sym	HPOINTER,0,129,14,32
  6563                        	.sym	uint32_t,0,18,14,32
  6564                        	.sym	uint8_t,0,14,14,8
  6565                        	.sym	LPBOOL,0,142,14,32
  6566                        	.sym	BOOL,0,14,14,8
  6567                        	.sym	DWORD,0,18,14,32
  6568                        	.sym	ULONG,0,18,14,32
  6569                        	.sym	LPLONG,0,135,14,32
  6570                        	.sym	LONG,0,7,14,32
  6571                        	.sym	PUINT,0,144,14,32
  6572                        	.sym	USHORT,0,16,14,16
  6573                        	.sym	UINT,0,16,14,16
  6574                        	.sym	INT,0,5,14,16
  6575                        	.sym	WORD,0,5,14,16
  6576                        	.sym	PBYTE,0,142,14,32
  6577                        	.sym	BYTE,0,14,14,8
  6578                        	.sym	IOPORT,0,142,14,32
  6579                        	.sym	PUCHAR,0,142,14,32
  6580                        	.sym	UCHAR,0,14,14,8
  6581                        	.sym	LPWCSTR,0,142,14,32
  6582                        	.sym	LPCSTR,0,142,14,32
  6583                        	.sym	LPSTR,0,142,14,32
  6584                        	.sym	LPCHAR,0,142,14,32
  6585                        	.sym	CHAR,0,14,14,8
  6586                        	.sym	LPVOID,0,129,14,32
  6587                        	.sym	VOID,0,1,14,32
  6588                        	.sym	~~memset,~~memset,1089,18,32
  6589                        	.sym	Boolean_T,0,5,14,16
  6590                        	.sym	ldiv_t,0,10,14,64,2
  6591                        	.sym	div_t,0,10,14,32,1
  6592                        	.sym	wctype_t,0,16,14,16
  6593                        	.sym	wint_t,0,16,14,16
  6594                        	.sym	wchar_t,0,14,14,8
  6595                        	.sym	ptrdiff_t,0,7,14,32
  6596                        	.sym	size_t,0,16,14,16
  6597                        	end


      Lines assembled: 6597
      Errors: 0
