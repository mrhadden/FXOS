  Sat Jul 10 2021  1:15                                                Page 1


                     ***************************************
                     **      WDC 65C816 Macro Assembler   **
                     **                                   **
                     **     Version 3.49.1- Feb  6 2006    **
                     ***************************************

     1                        ;:ts=8
     2             00000001   R0	equ	1
     3             00000005   R1	equ	5
     4             00000009   R2	equ	9
     5             0000000D   R3	equ	13
     6                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\diskio.c",0
     7                        ;/*-----------------------------------------------
                    ------------------------*/
     8                        ;/* Low level disk I/O module skeleton for FatFs  
                       (C)ChaN, 2019        */
     9                        ;/*-----------------------------------------------
                    ------------------------*/
    10                        ;/* If a working storage control module is availab
                    le, it should be        */
    11                        ;/* attached to the FatFs via a glue function rath
                    er than modifying it.   */
    12                        ;/* This is an example of glue functions to attach
                     various exsisting      */
    13                        ;/* storage control modules to the FatFs module wi
                    th a defined API.       */
    14                        ;/*-----------------------------------------------
                    ------------------------*/
    15                        ;#include 	"fxkernel.h"
    16                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxkernel.h",0
    17                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos.h",0
    18                        	.file	"G:\devtools\WDCTools\wdc\Tools\include\
                    stdlib.h",0
    19                        	.file	"G:\devtools\WDCTools\wdc\Tools\include\
                    stddef.h",0
    20                        	.line	88
    21                        	.file	"G:\devtools\WDCTools\wdc\Tools\include\
                    stdlib.h",43
    22                        	.stag	fake1_,32,1
    23                        	.member	quot,0,5,8,16
    24                        	.member	rem,16,5,8,16
    25                        	.eos
    26                        	.stag	fake2_,64,2
    27                        	.member	quot,0,7,8,32
    28                        	.member	rem,32,7,8,32
    29                        	.eos
    30                        	.stag	int_sqrt,32,3
    31                        	.member	sqrt,0,16,8,16
    32                        	.member	frac,16,16,8,16
    33                        	.eos
    34                        	.line	205
    35                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos.h",4
    36                        	.file	"G:\devtools\WDCTools\wdc\Tools\include\
                    string.h",0
  Sat Jul 10 2021  1:15                                                Page 2


    37                        	.line	134
    38                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos.h",5
    39                        	.file	"G:\devtools\WDCTools\wdc\Tools\include\
                    ctype.h",0
    40                        	.line	103
    41                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos.h",6
    42                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxtypes.h",0
    43                        	.stag	_fx_bytebits,8,4
    44                        	.member	b7,0,14,17,1
    45                        	.member	b6,1,14,17,1
    46                        	.member	b5,2,14,17,1
    47                        	.member	b4,3,14,17,1
    48                        	.member	b3,4,14,17,1
    49                        	.member	b2,5,14,17,1
    50                        	.member	b1,6,14,17,1
    51                        	.member	b0,7,14,17,1
    52                        	.eos
    53                        	.stag	_fx_node,384,5
    54                        	.member	type,0,14,8,8
    55                        	.member	Reserved0,8,14,8,8
    56                        	.member	data,16,129,8,32
    57                        	.member	last,48,138,8,32,5
    58                        	.member	next,80,138,8,32,5
    59                        	.member	name,112,110,8,0,32
    60                        	.member	Reserved1,368,16,8,16
    61                        	.eos
    62                        	.stag	_fx_nodelist,96,6
    63                        	.member	listhead,0,138,8,32,5
    64                        	.member	listData,32,129,8,32
    65                        	.member	deallocator,64,641,8,32
    66                        	.eos
    67                        	.stag	_fx_queue,80,7
    68                        	.member	count,0,5,8,16
    69                        	.member	front,16,138,8,32,5
    70                        	.member	rear,48,138,8,32,5
    71                        	.eos
    72                        	.stag	fake8_,32,8
    73                        	.member	subsystem,0,14,8,8
    74                        	.member	level,8,14,8,8
    75                        	.member	error,16,16,8,16
    76                        	.eos
    77                        	.stag	_fx_process_signal,16,9
    78                        	.member	cbSize,0,16,8,16
    79                        	.eos
    80                        	.stag	_fx_semaphore,16,10
    81                        	.member	reserved,0,5,8,16
    82                        	.eos
    83                        	.stag	_fx_fileBlock,552,11
    84                        	.member	openCount,0,16,8,16
    85                        	.member	lockCount,16,16,8,16
    86                        	.member	dirty,32,14,8,8
    87                        	.member	fileBuffer,40,110,8,0,64
    88                        	.eos
    89                        	.stag	_fx_irq_data,48,12
    90                        	.member	line,0,5,8,16
  Sat Jul 10 2021  1:15                                                Page 3


    91                        	.member	keycode,16,142,8,32
    92                        	.eos
    93                        	.stag	_task,48,13
    94                        	.member	SPL,0,14,8,8
    95                        	.member	SPH,8,14,8,8
    96                        	.member	pstack,16,142,8,32
    97                        	.eos
    98                        	.stag	_task_stack,32,14
    99                        	.member	SS,0,142,8,32
   100                        	.eos
   101                        	.stag	int_regs,104,15
   102                        	.member	PB,0,14,8,8
   103                        	.member	PH,8,14,8,8
   104                        	.member	PL,16,14,8,8
   105                        	.member	PP,24,14,8,8
   106                        	.member	DB,32,14,8,8
   107                        	.member	DH,40,14,8,8
   108                        	.member	DL,48,14,8,8
   109                        	.member	AH,56,14,8,8
   110                        	.member	AL,64,14,8,8
   111                        	.member	XH,72,14,8,8
   112                        	.member	XL,80,14,8,8
   113                        	.member	YH,88,14,8,8
   114                        	.member	YL,96,14,8,8
   115                        	.eos
   116                        	.stag	_fx_eventMessage,304,16
   117                        	.member	src,0,18,8,32
   118                        	.member	dest,32,18,8,32
   119                        	.member	type,64,16,8,16
   120                        	.member	hwnd,80,129,8,32
   121                        	.member	pheap,112,129,8,32
   122                        	.member	msgTime,144,18,8,32
   123                        	.member	data,176,110,8,0,16
   124                        	.eos
   125                        	.stag	_fx_cmdMessage,304,17
   126                        	.member	src,0,18,8,32
   127                        	.member	dest,32,18,8,32
   128                        	.member	type,64,16,8,16
   129                        	.member	hwnd,80,129,8,32
   130                        	.member	pheap,112,129,8,32
   131                        	.member	msgTime,144,18,8,32
   132                        	.member	cmdCId,176,16,8,16
   133                        	.member	cmdMId,192,16,8,16
   134                        	.member	parameter1,208,18,8,32
   135                        	.member	parameter2,240,18,8,32
   136                        	.member	parameter3,272,18,8,32
   137                        	.eos
   138                        	.stag	_fx_console_ctl,448,18
   139                        	.member	maxCols,0,5,8,16
   140                        	.member	maxRows,16,5,8,16
   141                        	.member	curX,32,5,8,16
   142                        	.member	curY,48,5,8,16
   143                        	.member	fgColor,64,5,8,16
   144                        	.member	bgColor,80,5,8,16
   145                        	.member	mode,96,14,8,8
   146                        	.member	kbBuffer,104,101,8,0,16
   147                        	.member	screenBuffer,360,142,8,32
   148                        	.member	desktopMode,392,14,8,8
  Sat Jul 10 2021  1:15                                                Page 4


   149                        	.member	lastMouseButton,400,5,8,16
   150                        	.member	lastMouseX,416,5,8,16
   151                        	.member	lastMouseY,432,5,8,16
   152                        	.eos
   153                        	.stag	_fx_desktop_ctl,392,19
   154                        	.member	desktopMode,0,14,8,8
   155                        	.member	cursorCtl,8,5,8,16
   156                        	.member	cursorState,24,5,8,16
   157                        	.member	backgroundColor,40,5,8,16
   158                        	.member	foregroundColor,56,5,8,16
   159                        	.member	menuMode,72,5,8,16
   160                        	.member	lastMouseButton,88,5,8,16
   161                        	.member	lastMouseX,104,5,8,16
   162                        	.member	lastMouseY,120,5,8,16
   163                        	.member	currentDiskName,136,142,8,32
   164                        	.member	diskNodes,168,129,8,32
   165                        	.member	titleNodes,200,129,8,32
   166                        	.member	menuNodes,232,129,8,32
   167                        	.member	iconNodes,264,129,8,32
   168                        	.member	windowNodes,296,129,8,32
   169                        	.member	fontNodes,328,129,8,32
   170                        	.member	wndProc,360,138,8,32,6
   171                        	.eos
   172                        	.stag	_fx_process,800,20
   173                        	.member	cbSize,0,5,8,16
   174                        	.member	procId,16,18,8,32
   175                        	.member	parentId,48,18,8,32
   176                        	.member	ctx,80,129,8,32
   177                        	.member	userId,112,16,8,16
   178                        	.member	status,128,16,8,16
   179                        	.member	foregroundActive,144,14,8,8
   180                        	.member	tls,152,1121,8,32,8
   181                        	.member	commandLine,408,142,8,32
   182                        	.member	semaphores,440,138,8,32,6
   183                        	.member	fileHandles,472,138,8,32,6
   184                        	.member	pathList,504,138,8,32,6
   185                        	.member	resources,536,138,8,32,6
   186                        	.member	timerAware,568,14,8,8
   187                        	.member	timerTicks,576,112,8,0,2
   188                        	.member	timerTickCount,608,112,8,0,2
   189                        	.member	kernelError,640,10,8,32,8
   190                        	.member	consoleCtl,672,138,8,32,18
   191                        	.member	desktopCtl,704,138,8,32,19
   192                        	.member	execProc,736,641,8,32
   193                        	.member	startupArgs,768,129,8,32
   194                        	.eos
   195                        	.stag	_fxProcessMessage,112,21
   196                        	.member	src,0,18,8,32
   197                        	.member	dest,32,18,8,32
   198                        	.member	type,64,16,8,16
   199                        	.member	processInfo,80,138,8,32,20
   200                        	.eos
   201                        	.stag	_k_key_state,112,22
   202                        	.member	scanCode,0,14,8,8
   203                        	.member	isShifted,8,14,8,8
   204                        	.member	isAlt,16,14,8,8
   205                        	.member	isExtended,24,14,8,8
   206                        	.member	isCapsLock,32,14,8,8
  Sat Jul 10 2021  1:15                                                Page 5


   207                        	.member	isNumLock,40,14,8,8
   208                        	.member	isScrollLock,48,14,8,8
   209                        	.member	keyChar,56,16,8,16
   210                        	.member	scanTime,72,18,8,32
   211                        	.member	ledStatus,104,14,8,8
   212                        	.eos
   213                        	.stag	_fx_property,384,23
   214                        	.member	name,0,110,8,0,16
   215                        	.member	value,128,110,8,0,32
   216                        	.eos
   217                        	.utag	_24bitPointer,32,24
   218                        	.member	address,0,142,11,32
   219                        	.member	bytes,0,110,11,0,4
   220                        	.eos
   221                        	.stag	_PointStruct,32,25
   222                        	.member	x,0,5,8,16
   223                        	.member	y,16,5,8,16
   224                        	.eos
   225                        	.stag	_RectStruct,112,26
   226                        	.member	x,0,5,8,16
   227                        	.member	y,16,5,8,16
   228                        	.member	z,32,18,8,32
   229                        	.member	width,64,5,8,16
   230                        	.member	height,80,5,8,16
   231                        	.member	attr,96,5,8,16
   232                        	.eos
   233                        	.stag	fake27_,96,27
   234                        	.member	name,0,142,8,32
   235                        	.member	topLeft,32,10,8,32,25
   236                        	.member	bottomRight,64,10,8,32,25
   237                        	.eos
   238                        	.stag	fake28_,112,28
   239                        	.member	x,0,5,8,16
   240                        	.member	y,16,5,8,16
   241                        	.member	z,32,5,8,16
   242                        	.member	width,48,5,8,16
   243                        	.member	height,64,5,8,16
   244                        	.member	data,80,18,8,32
   245                        	.eos
   246                        	.stag	_k_WindowClass,272,29
   247                        	.member	cbSize,0,16,8,16
   248                        	.member	style,16,16,8,16
   249                        	.member	styleEx,32,16,8,16
   250                        	.member	pWndProc,48,654,8,32
   251                        	.member	hInstance,80,129,8,32
   252                        	.member	hIcon,112,129,8,32
   253                        	.member	hCursor,144,129,8,32
   254                        	.member	hbrBackground,176,129,8,32
   255                        	.member	lpszMenuName,208,142,8,32
   256                        	.member	lpszClassName,240,142,8,32
   257                        	.eos
   258                        	.stag	_ClickableRect,152,30
   259                        	.member	area,0,10,8,112,26
   260                        	.member	z,112,18,8,32
   261                        	.member	enabled,144,14,8,8
   262                        	.eos
   263                        	.stag	_NCClickableRect,136,31
   264                        	.member	area,0,10,8,112,26
  Sat Jul 10 2021  1:15                                                Page 6


   265                        	.member	msgType,112,16,8,16
   266                        	.member	enabled,128,14,8,8
   267                        	.eos
   268                        	.stag	_DragData,216,32
   269                        	.member	area,0,10,8,112,26
   270                        	.member	xoffset,112,5,8,16
   271                        	.member	yoffset,128,5,8,16
   272                        	.member	msgType,144,16,8,16
   273                        	.member	ncAction,160,16,8,16
   274                        	.member	isDrag,176,14,8,8
   275                        	.member	isResize,184,14,8,8
   276                        	.member	canDrag,192,14,8,8
   277                        	.member	canDrop,200,14,8,8
   278                        	.member	didDrag,208,14,8,8
   279                        	.eos
   280                        	.stag	_k_WindowStruct,3904,33
   281                        	.member	cbSize,0,16,8,16
   282                        	.member	style,16,18,8,32
   283                        	.member	styleEx,48,18,8,32
   284                        	.member	win_id,80,5,8,16
   285                        	.member	win_x,96,5,8,16
   286                        	.member	win_y,112,5,8,16
   287                        	.member	win_width,128,5,8,16
   288                        	.member	win_height,144,5,8,16
   289                        	.member	win_xoffset,160,5,8,16
   290                        	.member	win_yoffset,176,5,8,16
   291                        	.member	win_cxoffset,192,5,8,16
   292                        	.member	win_cyoffset,208,5,8,16
   293                        	.member	wndRect,224,10,8,112,26
   294                        	.member	clientRect,336,10,8,112,26
   295                        	.member	nonclientGadgets,448,106,8,0,31,16
   296                        	.member	clickable,2624,129,8,32
   297                        	.member	win_title,2656,110,8,0,32
   298                        	.member	Reserved0,2912,16,8,16
   299                        	.member	win_class,2928,110,8,0,16
   300                        	.member	win_class_name,3056,110,8,0,32
   301                        	.member	nBitmapLayer,3312,16,8,16
   302                        	.member	bgRegion,3328,129,8,32
   303                        	.member	procid,3360,18,8,32
   304                        	.member	pWndClass,3392,138,8,32,29
   305                        	.member	pParentWindow,3424,129,8,32
   306                        	.member	hMenu,3456,129,8,32
   307                        	.member	hPointer,3488,129,8,32
   308                        	.member	hBackground,3520,129,8,32
   309                        	.member	pChildWindows,3552,138,8,32,6
   310                        	.member	pChildHitList,3584,138,8,32,6
   311                        	.member	isVisible,3616,14,8,8
   312                        	.member	windowData,3624,129,8,32
   313                        	.member	clientData,3656,1121,8,32,6
   314                        	.member	isClosed,3848,14,8,8
   315                        	.member	isClosing,3856,14,8,8
   316                        	.member	isDesktop,3864,14,8,8
   317                        	.member	clickableNode,3872,138,8,32,5
   318                        	.eos
   319                        	.stag	_k_WindowStructEx,3880,34
   320                        	.member	cbSize,0,16,8,16
   321                        	.member	style,16,18,8,32
   322                        	.member	styleEx,48,18,8,32
  Sat Jul 10 2021  1:15                                                Page 7


   323                        	.member	win_id,80,5,8,16
   324                        	.member	win_x,96,5,8,16
   325                        	.member	win_y,112,5,8,16
   326                        	.member	win_width,128,5,8,16
   327                        	.member	win_height,144,5,8,16
   328                        	.member	win_xoffset,160,5,8,16
   329                        	.member	win_yoffset,176,5,8,16
   330                        	.member	win_cxoffset,192,5,8,16
   331                        	.member	win_cyoffset,208,5,8,16
   332                        	.member	wndRect,224,10,8,112,26
   333                        	.member	clientRect,336,10,8,112,26
   334                        	.member	nonclientGadgets,448,106,8,0,31,16
   335                        	.member	clickable,2624,129,8,32
   336                        	.member	win_title,2656,110,8,0,32
   337                        	.member	Reserved0,2912,16,8,16
   338                        	.member	win_class,2928,110,8,0,16
   339                        	.member	nBitmapLayer,3056,16,8,16
   340                        	.member	procid,3072,18,8,32
   341                        	.member	pWndClass,3104,138,8,32,29
   342                        	.member	pParentWindow,3136,129,8,32
   343                        	.member	hMenu,3168,129,8,32
   344                        	.member	hPointer,3200,129,8,32
   345                        	.member	hBackground,3232,129,8,32
   346                        	.member	pChildWindows,3264,138,8,32,6
   347                        	.member	pChildHitList,3296,138,8,32,6
   348                        	.member	isVisible,3328,14,8,8
   349                        	.member	windowData,3336,129,8,32
   350                        	.member	clientData,3368,1121,8,32,4
   351                        	.member	isClosed,3496,14,8,8
   352                        	.member	hWnd,3504,129,8,32
   353                        	.member	localRect,3536,10,8,112,26
   354                        	.member	globalRect,3648,10,8,112,26
   355                        	.member	clientOffsetRect,3760,10,8,112,26
   356                        	.member	isDesktop,3872,14,8,8
   357                        	.eos
   358                        	.stag	_FontMetric,32,35
   359                        	.member	width,0,5,8,16
   360                        	.member	height,16,5,8,16
   361                        	.eos
   362                        	.stag	_MenuStruct,280,36
   363                        	.member	cx,0,5,8,16
   364                        	.member	cy,16,5,8,16
   365                        	.member	width,32,5,8,16
   366                        	.member	height,48,5,8,16
   367                        	.member	fcolor,64,14,8,8
   368                        	.member	bcolor,72,14,8,8
   369                        	.member	chromeLeft,80,14,8,8
   370                        	.member	chromeRight1,88,14,8,8
   371                        	.member	chromeRight2,96,14,8,8
   372                        	.member	hFont,104,129,8,32
   373                        	.member	itemId,136,16,8,16
   374                        	.member	pCaption,152,142,8,32
   375                        	.member	subMenus,184,138,8,32,6
   376                        	.member	pBackground,216,129,8,32
   377                        	.member	hWndOwner,248,129,8,32
   378                        	.eos
   379                        	.stag	fake37_,160,37
   380                        	.member	menuId,0,16,8,16
  Sat Jul 10 2021  1:15                                                Page 8


   381                        	.member	caption,16,142,8,32
   382                        	.member	rect,48,10,8,112,26
   383                        	.eos
   384                        	.stag	fake38_,5152,38
   385                        	.member	pParent,0,138,8,32,33
   386                        	.member	rect,32,10,8,112,26
   387                        	.member	captions,144,1134,8,32,24
   388                        	.member	chrome,912,110,8,0,24
   389                        	.member	ids,1104,112,8,0,24
   390                        	.member	clickable,1488,106,8,0,30,24
   391                        	.member	selected,5136,16,8,16
   392                        	.eos
   393                        	.stag	_fx_button_t,96,39
   394                        	.member	pCaption,0,142,8,32
   395                        	.member	cCaption,32,16,8,16
   396                        	.member	data,48,129,8,32
   397                        	.member	captionPixelWidth,80,16,8,16
   398                        	.eos
   399                        	.stag	_fx_scrollbar_t,240,40
   400                        	.member	min,0,16,8,16
   401                        	.member	max,16,16,8,16
   402                        	.member	increment,32,16,8,16
   403                        	.member	stopsize,48,16,8,16
   404                        	.member	location,64,5,8,16
   405                        	.member	state,80,5,8,16
   406                        	.member	rectThumb,96,10,8,112,26
   407                        	.member	data,208,129,8,32
   408                        	.eos
   409                        	.stag	_fx_listbox_t,240,41
   410                        	.member	pos,0,5,8,16
   411                        	.member	selected,16,16,8,16
   412                        	.member	offsetX,32,5,8,16
   413                        	.member	offsetY,48,5,8,16
   414                        	.member	inc,64,5,8,16
   415                        	.member	direction,80,5,8,16
   416                        	.member	top,96,5,8,16
   417                        	.member	bottom,112,5,8,16
   418                        	.member	indexTop,128,5,8,16
   419                        	.member	indexBottom,144,5,8,16
   420                        	.member	maxItems,160,16,8,16
   421                        	.member	fontSet,176,142,8,32
   422                        	.member	data,208,129,8,32
   423                        	.eos
   424                        	.stag	_fx_textbox_t,144,42
   425                        	.member	pos,0,5,8,16
   426                        	.member	selected,16,16,8,16
   427                        	.member	offsetX,32,5,8,16
   428                        	.member	offsetY,48,5,8,16
   429                        	.member	isShifted,64,14,8,8
   430                        	.member	cursorState,72,14,8,8
   431                        	.member	fontSet,80,142,8,32
   432                        	.member	data,112,129,8,32
   433                        	.eos
   434                        	.stag	_fx_msgbox_t,144,43
   435                        	.member	pos,0,5,8,16
   436                        	.member	selected,16,16,8,16
   437                        	.member	offsetX,32,5,8,16
   438                        	.member	offsetY,48,5,8,16
  Sat Jul 10 2021  1:15                                                Page 9


   439                        	.member	isShifted,64,14,8,8
   440                        	.member	cursorState,72,14,8,8
   441                        	.member	fontSet,80,142,8,32
   442                        	.member	data,112,129,8,32
   443                        	.eos
   444                        	.stag	_fx_menuAnchor_t,272,44
   445                        	.member	pCaption,0,142,8,32
   446                        	.member	renderLayoutX,32,16,8,16
   447                        	.member	renderLayoutY,48,16,8,16
   448                        	.member	captionPixelWidth,64,16,8,16
   449                        	.member	data,80,129,8,32
   450                        	.member	droppedWindow,112,138,8,32,33
   451                        	.member	bytes,144,110,8,0,16
   452                        	.eos
   453                        	.stag	_SubMenuStruct,64,45
   454                        	.member	caption,0,142,8,32
   455                        	.member	action,32,641,8,32
   456                        	.eos
   457                        	.stag	_SubMenuListStruct,40,46
   458                        	.member	cMenus,0,14,8,8
   459                        	.member	psubmenus,8,9354,8,32,45
   460                        	.eos
   461                        	.stag	_fx_ComBuffer,2080,47
   462                        	.member	cbSize,0,16,8,16
   463                        	.member	cbBuffer,16,16,8,16
   464                        	.member	buffer,32,110,8,0,256
   465                        	.eos
   466                        	.stag	_fx_resource_header,72,48
   467                        	.member	magic,0,110,8,0,4
   468                        	.member	major,32,14,8,8
   469                        	.member	minor,40,14,8,8
   470                        	.member	type,48,14,8,8
   471                        	.member	reserved,56,14,8,8
   472                        	.member	resheaderSize,64,14,8,8
   473                        	.eos
   474                        	.stag	_fx_resource_header_font,144,49
   475                        	.member	title,0,110,8,0,16
   476                        	.member	height,128,14,8,8
   477                        	.member	width,136,14,8,8
   478                        	.eos
   479                        	.line	1010
   480                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos.h",8
   481                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxstringtable.h",0
   482                        	.line	89
   483                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos.h",9
   484                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxc256u.h",0
   485                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxtypes.h",0
   486                        	.line	1010
   487                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxc256u.h",5
   488                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fmx_vicky.h",0
   489                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
  Sat Jul 10 2021  1:15                                                Page 10


                    space\FXOSv1\src\fxtypes.h",0
   490                        	.line	1010
   491                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fmx_vicky.h",11
   492                        	.line	72
   493                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxc256u.h",6
   494                        	.line	1960
   495                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos.h",16
   496                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxkernel.h",0
   497                        	.line	400
   498                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos.h",22
   499                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxconsole.h",0
   500                        	.file	"G:\devtools\WDCTools\wdc\Tools\include\
                    string.h",0
   501                        	.line	134
   502                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxconsole.h",5
   503                        	.file	"G:\devtools\WDCTools\wdc\Tools\include\
                    stdlib.h",0
   504                        	.line	205
   505                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxconsole.h",6
   506                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxtypes.h",0
   507                        	.line	1010
   508                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxconsole.h",7
   509                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxc256u.h",0
   510                        	.line	1960
   511                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxconsole.h",12
   512                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxstring.h",0
   513                        	.file	"G:\devtools\WDCTools\wdc\Tools\include\
                    stdlib.h",0
   514                        	.line	205
   515                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxstring.h",5
   516                        	.file	"G:\devtools\WDCTools\wdc\Tools\include\
                    string.h",0
   517                        	.line	134
   518                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxstring.h",6
   519                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxtypes.h",0
   520                        	.line	1010
   521                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxstring.h",7
   522                        	.stag	_fx_string,64,50
   523                        	.member	size,0,16,8,16
   524                        	.member	pos,16,5,8,16
   525                        	.member	buffer,32,142,8,32
  Sat Jul 10 2021  1:15                                                Page 11


   526                        	.eos
   527                        	.line	139
   528                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxconsole.h",17
   529                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxeventmanager.h",0
   530                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos.h",0
   531                        	.line	30
   532                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxeventmanager.h",5
   533                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxexec.h",0
   534                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxtypes.h",0
   535                        	.line	1010
   536                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxexec.h",5
   537                        	.stag	_fxos_executive_vtable,128,51
   538                        	.member	Init,0,8833,8,32
   539                        	.member	Configure,32,656,8,32
   540                        	.member	Query,64,656,8,32
   541                        	.member	Uninit,96,641,8,32
   542                        	.eos
   543                        	.line	86
   544                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxeventmanager.h",6
   545                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxnode.h",0
   546                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxtypes.h",0
   547                        	.line	1010
   548                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxnode.h",11
   549                        	.line	114
   550                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxeventmanager.h",7
   551                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxconsole.h",0
   552                        	.line	208
   553                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxeventmanager.h",8
   554                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxwindowmanager.h",0
   555                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos.h",0
   556                        	.line	30
   557                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxwindowmanager.h",5
   558                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxmemorymanager.h",0
   559                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos.h",0
   560                        	.line	30
   561                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxmemorymanager.h",5
   562                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\umm_malloc_cfg.h",0
  Sat Jul 10 2021  1:15                                                Page 12


   563                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos_build_parameters.h",0
   564                        	.line	35
   565                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\umm_malloc_cfg.h",8
   566                        	.stag	UMM_HEAP_INFO_t,256,52
   567                        	.member	totalEntries,0,18,8,32
   568                        	.member	usedEntries,32,18,8,32
   569                        	.member	freeEntries,64,18,8,32
   570                        	.member	totalBlocks,96,18,8,32
   571                        	.member	usedBlocks,128,18,8,32
   572                        	.member	freeBlocks,160,18,8,32
   573                        	.member	maxFreeContiguousBlocks,192,18,8,32
   574                        	.member	blockSize,224,18,8,32
   575                        	.eos
   576                        	.line	199
   577                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxmemorymanager.h",6
   578                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\umm_malloc.h",0
   579                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxtypes.h",0
   580                        	.line	1010
   581                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\umm_malloc.h",11
   582                        	.line	24
   583                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxmemorymanager.h",7
   584                        	.stag	_fx_memory_map,2072,53
   585                        	.member	availableMemory,0,18,8,32
   586                        	.member	valid_segments,32,110,8,0,255
   587                        	.eos
   588                        	.stag	_fx_ipc_port,144,54
   589                        	.member	id,0,18,8,32
   590                        	.member	type,32,14,8,8
   591                        	.member	name,40,138,8,32,50
   592                        	.member	time,72,18,8,32
   593                        	.member	queue,104,138,8,32,7
   594                        	.member	reserved_1,136,14,8,8
   595                        	.eos
   596                        	.line	105
   597                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxwindowmanager.h",6
   598                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxeventmanager.h",0
   599                        	.line	564
   600                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxwindowmanager.h",7
   601                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxgui.h",0
   602                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxfont.h",0
   603                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxtypes.h",0
   604                        	.line	1010
   605                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxfont.h",6
   606                        	.line	74
  Sat Jul 10 2021  1:15                                                Page 13


   607                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxgui.h",5
   608                        	.stag	_click_detected,64,55
   609                        	.member	window,0,138,8,32,33
   610                        	.member	handler,32,641,8,32
   611                        	.eos
   612                        	.stag	_current_palette_map,400,56
   613                        	.member	CUR_DESKTOP,0,5,8,16
   614                        	.member	CUR_BACKGROUND,16,5,8,16
   615                        	.member	CUR_FONT,32,5,8,16
   616                        	.member	CUR_SELECTED_FONT,48,5,8,16
   617                        	.member	CUR_HIGHLIGHT_COLOR,64,5,8,16
   618                        	.member	CUR_WINDOWFRAME,80,5,8,16
   619                        	.member	CUR_WINDOWBORDER,96,5,8,16
   620                        	.member	CUR_WINDOWSHADOW,112,5,8,16
   621                        	.member	CUR_MENU,128,5,8,16
   622                        	.member	CUR_GADGET,144,5,8,16
   623                        	.member	CUR_COLOR,160,101,8,0,15
   624                        	.eos
   625                        	.line	359
   626                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxwindowmanager.h",8
   627                        	.stag	_fxos_winman_vtable,160,57
   628                        	.member	Events,0,641,8,32
   629                        	.member	ConfigureWindowManager,32,656,8,32
   630                        	.member	ProcessWindowEvent,64,8833,8,32
   631                        	.member	QueryWindowManager,96,656,8,32
   632                        	.member	DoWndProcs,128,641,8,32
   633                        	.eos
   634                        	.stag	fake58_,64,58
   635                        	.member	type,0,16,8,16
   636                        	.member	size,16,16,8,16
   637                        	.member	desktopAction,32,129,8,32
   638                        	.eos
   639                        	.stag	fake59_,96,59
   640                        	.member	type,0,16,8,16
   641                        	.member	caption,16,138,8,32,50
   642                        	.member	buttonType,48,16,8,16
   643                        	.member	x,64,5,8,16
   644                        	.member	y,80,5,8,16
   645                        	.eos
   646                        	.stag	_childMessage_t,64,60
   647                        	.member	msgType,0,16,8,16
   648                        	.member	msgData,16,129,8,32
   649                        	.member	dataSize,48,16,8,16
   650                        	.eos
   651                        	.line	581
   652                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxeventmanager.h",9
   653                        	.stag	_fx_main_loopvars,16,61
   654                        	.member	dummy,0,5,8,16
   655                        	.eos
   656                        	.stag	_fxMouseMessageData,64,62
   657                        	.member	button1,0,14,8,8
   658                        	.member	button2,8,14,8,8
   659                        	.member	button3,16,14,8,8
   660                        	.member	button4,24,14,8,8
   661                        	.member	x,32,16,8,16
  Sat Jul 10 2021  1:15                                                Page 14


   662                        	.member	y,48,16,8,16
   663                        	.eos
   664                        	.utag	marshalled_data,32,63
   665                        	.member	byteValue,0,14,11,8
   666                        	.member	verbValue,0,110,11,0,2
   667                        	.member	intValue,0,16,11,16
   668                        	.member	longValue,0,18,11,32
   669                        	.member	pointerValue,0,129,11,32
   670                        	.eos
   671                        	.stag	_fx_eventProcess,64,64
   672                        	.member	process,0,138,8,32,20
   673                        	.member	eventProc,32,641,8,32
   674                        	.eos
   675                        	.stag	_mouse_msg_state,184,65
   676                        	.member	lastEvent,0,18,8,32
   677                        	.member	buttonLeftDown,32,14,8,8
   678                        	.member	lastLeftDown,40,18,8,32
   679                        	.member	buttonRightDown,72,14,8,8
   680                        	.member	lastRightDown,80,18,8,32
   681                        	.member	buttonMiddleDown,112,14,8,8
   682                        	.member	lastMiddleDown,120,18,8,32
   683                        	.member	lastX,152,16,8,16
   684                        	.member	lastY,168,16,8,16
   685                        	.eos
   686                        	.stag	_fxos_eventmanager_vtable,192,66
   687                        	.member	EventQueue,0,138,8,32,7
   688                        	.member	Init,32,8833,8,32
   689                        	.member	Run,64,656,8,32
   690                        	.member	Configure,96,656,8,32
   691                        	.member	Query,128,656,8,32
   692                        	.member	Uninit,160,641,8,32
   693                        	.eos
   694                        	.stag	_k_clipboard_data,168,67
   695                        	.member	type,0,14,8,8
   696                        	.member	readable,8,110,8,0,16
   697                        	.member	data,136,129,8,32
   698                        	.eos
   699                        	.line	564
   700                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxconsole.h",18
   701                        	.stag	_fx_spinner_ctx,48,68
   702                        	.member	index,0,5,8,16
   703                        	.member	spinner,16,142,8,32
   704                        	.eos
   705                        	.stag	_fx_console_ctx,1144,69
   706                        	.member	lineBufferIndex,0,5,8,16
   707                        	.member	lineBuffer,16,110,8,0,128
   708                        	.member	isShifted,1040,14,8,8
   709                        	.member	userData,1048,129,8,32
   710                        	.member	screenBuffer,1080,129,8,32
   711                        	.member	Reserved1,1112,129,8,32
   712                        	.eos
   713                        	.stag	_token,64,70
   714                        	.member	type,0,5,8,16
   715                        	.member	depth,16,16,8,16
   716                        	.member	text,32,142,8,32
   717                        	.eos
   718                        	.stag	_command_args,64,71
  Sat Jul 10 2021  1:15                                                Page 15


   719                        	.member	proc,0,656,8,32
   720                        	.member	tokens,32,138,8,32,5
   721                        	.eos
   722                        	.line	208
   723                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos.h",23
   724                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxstring.h",0
   725                        	.line	139
   726                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos.h",24
   727                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxnode.h",0
   728                        	.line	114
   729                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos.h",25
   730                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\ff.h",0
   731                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\ffconf.h",0
   732                        	.line	298
   733                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\ff.h",29
   734                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxtypes.h",0
   735                        	.line	1010
   736                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\ff.h",30
   737                        	.stag	fake72_,4504,72
   738                        	.member	fs_type,0,14,8,8
   739                        	.member	pdrv,8,14,8,8
   740                        	.member	n_fats,16,14,8,8
   741                        	.member	wflag,24,14,8,8
   742                        	.member	fsi_flag,32,14,8,8
   743                        	.member	id,40,5,8,16
   744                        	.member	n_rootdir,56,5,8,16
   745                        	.member	csize,72,5,8,16
   746                        	.member	lfnbuf,88,144,8,32
   747                        	.member	last_clst,120,18,8,32
   748                        	.member	free_clst,152,18,8,32
   749                        	.member	n_fatent,184,18,8,32
   750                        	.member	fsize,216,18,8,32
   751                        	.member	volbase,248,18,8,32
   752                        	.member	fatbase,280,18,8,32
   753                        	.member	dirbase,312,18,8,32
   754                        	.member	database,344,18,8,32
   755                        	.member	winsect,376,18,8,32
   756                        	.member	win,408,110,8,0,512
   757                        	.eos
   758                        	.stag	fake73_,128,73
   759                        	.member	fs,0,138,8,32,72
   760                        	.member	id,32,5,8,16
   761                        	.member	attr,48,14,8,8
   762                        	.member	stat,56,14,8,8
   763                        	.member	sclust,64,18,8,32
   764                        	.member	objsize,96,18,8,32
   765                        	.eos
   766                        	.stag	fake74_,4400,74
  Sat Jul 10 2021  1:15                                                Page 16


   767                        	.member	obj,0,10,8,128,73
   768                        	.member	flag,128,14,8,8
   769                        	.member	err,136,14,8,8
   770                        	.member	fptr,144,18,8,32
   771                        	.member	clust,176,18,8,32
   772                        	.member	sect,208,18,8,32
   773                        	.member	dir_sect,240,18,8,32
   774                        	.member	dir_ptr,272,142,8,32
   775                        	.member	buf,304,110,8,0,512
   776                        	.eos
   777                        	.stag	fake75_,416,75
   778                        	.member	obj,0,10,8,128,73
   779                        	.member	dptr,128,18,8,32
   780                        	.member	clust,160,18,8,32
   781                        	.member	sect,192,18,8,32
   782                        	.member	dir,224,142,8,32
   783                        	.member	fn,256,110,8,0,12
   784                        	.member	blk_ofs,352,18,8,32
   785                        	.member	pat,384,142,8,32
   786                        	.eos
   787                        	.stag	fake76_,2224,76
   788                        	.member	fsize,0,18,8,32
   789                        	.member	fdate,32,5,8,16
   790                        	.member	ftime,48,5,8,16
   791                        	.member	fattrib,64,14,8,8
   792                        	.member	altname,72,110,8,0,13
   793                        	.member	fname,176,110,8,0,256
   794                        	.eos
   795                        	.stag	fake77_,80,77
   796                        	.member	fmt,0,14,8,8
   797                        	.member	n_fat,8,14,8,8
   798                        	.member	align,16,16,8,16
   799                        	.member	n_root,32,16,8,16
   800                        	.member	au_size,48,18,8,32
   801                        	.eos
   802                        	.line	429
   803                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos.h",26
   804                        	.line	30
   805                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxkernel.h",5
   806                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxnode.h",0
   807                        	.line	114
   808                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxkernel.h",6
   809                        	.stag	_fx_api_call_table,8192,78
   810                        	.member	call_table,0,1121,8,32,256
   811                        	.eos
   812                        	.stag	_fx_zero_page,824,79
   813                        	.member	fxos_mouse_byte_0,0,14,8,8
   814                        	.member	fxos_mouse_byte_1,8,14,8,8
   815                        	.member	fxos_mouse_byte_2,16,14,8,8
   816                        	.member	fxos_mouse_byte_t,24,14,8,8
   817                        	.member	fxos_mouse_byte_x_l,32,14,8,8
   818                        	.member	fxos_mouse_byte_x_h,40,14,8,8
   819                        	.member	fxos_mouse_byte_y_l,48,14,8,8
   820                        	.member	fxos_mouse_byte_y_h,56,14,8,8
  Sat Jul 10 2021  1:15                                                Page 17


   821                        	.member	fxos_key_byte_0,64,14,8,8
   822                        	.member	fxos_key_byte_1,72,14,8,8
   823                        	.member	fxos_key_byte_2,80,14,8,8
   824                        	.member	fxos_mouse_ctl,88,14,8,8
   825                        	.member	fxos_mouse_index,96,14,8,8
   826                        	.member	fxos_mouse_status,104,14,8,8
   827                        	.member	fxos_mouse_dbg_1,112,18,8,32
   828                        	.member	fxos_mouse_dbg_2,144,18,8,32
   829                        	.member	fxos_mouse_dbg_3,176,18,8,32
   830                        	.member	fxos_vicky_byte_0,208,14,8,8
   831                        	.member	fxos_vicky_byte_1,216,14,8,8
   832                        	.member	fxos_vicky_byte_2,224,14,8,8
   833                        	.member	VersionMajor,232,16,8,16
   834                        	.member	VersionMinor,248,16,8,16
   835                        	.member	VersionRelease,264,16,8,16
   836                        	.member	topMemory,280,18,8,32
   837                        	.member	bottomMemory,312,18,8,32
   838                        	.member	availableMemory,344,18,8,32
   839                        	.member	availableMemoryK,376,18,8,32
   840                        	.member	availableHeapMemory,408,18,8,32
   841                        	.member	availableHeapMemoryK,440,18,8,32
   842                        	.member	fxos_console_row,472,16,8,16
   843                        	.member	fxos_console_col,488,16,8,16
   844                        	.member	executive,504,129,8,32
   845                        	.member	eventmanager,536,129,8,32
   846                        	.member	devicemanager,568,129,8,32
   847                        	.member	windowmanager,600,129,8,32
   848                        	.member	fxos_kernel_api,632,138,8,32,78
   849                        	.member	fxos_dos_api,664,138,8,32,78
   850                        	.member	fxos_gfx_api,696,138,8,32,78
   851                        	.member	fxos_gui_api,728,138,8,32,78
   852                        	.member	fxos_con_api,760,138,8,32,78
   853                        	.member	fxos_reserved_2_api,792,138,8,32,78
   854                        	.eos
   855                        	.stag	_fx_environment,96,80
   856                        	.member	variables,0,142,8,32
   857                        	.member	reserved1,32,5,8,16
   858                        	.member	reserved2,48,5,8,16
   859                        	.member	reserved3,64,5,8,16
   860                        	.member	reserved4,80,5,8,16
   861                        	.eos
   862                        	.stag	_debug_byte_bits,8,81
   863                        	.member	bit7,0,14,17,1
   864                        	.member	bit6,1,14,17,1
   865                        	.member	bit5,2,14,17,1
   866                        	.member	bit4,3,14,17,1
   867                        	.member	bit3,4,14,17,1
   868                        	.member	bit2,5,14,17,1
   869                        	.member	bit1,6,14,17,1
   870                        	.member	bit0,7,14,17,1
   871                        	.eos
   872                        	.stag	_k_segmentheader,160,82
   873                        	.member	version_major,0,14,8,8
   874                        	.member	version_minor,8,14,8,8
   875                        	.member	length,16,5,8,16
   876                        	.member	segment_start_addr,32,7,8,32
   877                        	.member	segment_end_addr,64,7,8,32
   878                        	.member	segment_size,96,7,8,32
  Sat Jul 10 2021  1:15                                                Page 18


   879                        	.member	main_entry_addr,128,7,8,32
   880                        	.eos
   881                        	.stag	_fx_device_driver,776,83
   882                        	.member	name,0,110,8,0,32
   883                        	.member	version,256,110,8,0,16
   884                        	.member	hmajor,384,110,8,0,8
   885                        	.member	hminor,448,110,8,0,8
   886                        	.member	type,512,14,8,8
   887                        	.member	designation,520,110,8,0,6
   888                        	.member	reserved_1,568,16,8,16
   889                        	.member	f_driver_irq,584,129,8,32
   890                        	.member	driver_context,616,129,8,32
   891                        	.member	f_driver_load,648,129,8,32
   892                        	.member	f_driver_read,680,129,8,32
   893                        	.member	f_driver_write,712,129,8,32
   894                        	.member	f_driver_unload,744,129,8,32
   895                        	.eos
   896                        	.stag	_fx_block_device_driver,808,84
   897                        	.member	name,0,110,8,0,32
   898                        	.member	version,256,110,8,0,16
   899                        	.member	hmajor,384,110,8,0,8
   900                        	.member	hminor,448,110,8,0,8
   901                        	.member	type,512,14,8,8
   902                        	.member	designation,520,110,8,0,6
   903                        	.member	reserved_1,568,16,8,16
   904                        	.member	f_driver_irq,584,129,8,32
   905                        	.member	driver_context,616,129,8,32
   906                        	.member	f_driver_load,648,129,8,32
   907                        	.member	f_driver_read,680,129,8,32
   908                        	.member	f_driver_write,712,129,8,32
   909                        	.member	f_driver_unload,744,129,8,32
   910                        	.member	f_driver_command,776,129,8,32
   911                        	.eos
   912                        	.line	400
   913                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\diskio.c",9
   914                        ;
   915                        ;#if defined(USE_FX256_FMX) || defined(USE_FX256_U
                    )
   916                        ;
   917                        ;
   918                        ;#include "ff.h"			/* Obtains integ
                    er types */
   919                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\ff.h",0
   920                        	.line	429
   921                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\diskio.c",14
   922                        ;#include "diskio.h"		/* Declarations 
                    of disk functions */
   923                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\diskio.h",0
   924                        	.line	85
   925                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\diskio.c",15
   926                        ;#include "fxdos.h"
   927                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxdos.h",0
  Sat Jul 10 2021  1:15                                                Page 19


   928                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxtypes.h",0
   929                        	.line	1010
   930                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxdos.h",5
   931                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\ff.h",0
   932                        	.line	429
   933                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxdos.h",6
   934                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\diskio.h",0
   935                        	.line	85
   936                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxdos.h",7
   937                        	.stag	_fx_sd_direntry,256,85
   938                        	.member	filename,0,110,8,0,11
   939                        	.member	type,88,14,8,8
   940                        	.member	attrs,96,110,8,0,20
   941                        	.eos
   942                        	.stag	_fx_info,416,86
   943                        	.member	stgName,0,110,8,0,32
   944                        	.member	Reserved1,256,14,8,8
   945                        	.member	stgType,264,16,8,16
   946                        	.member	Reserved2,280,14,8,8
   947                        	.member	stgReserved,288,110,8,0,16
   948                        	.eos
   949                        	.stag	_fx_fileinfo,136,87
   950                        	.member	type,0,14,8,8
   951                        	.member	pFilename,8,142,8,32
   952                        	.member	lSize,40,18,8,32
   953                        	.member	lcreateDate,72,18,8,32
   954                        	.member	lchangeDate,104,18,8,32
   955                        	.eos
   956                        	.stag	_FX_FAT_DIR_INFO,256,88
   957                        	.member	DIR_Name,0,110,8,0,11
   958                        	.member	DIR_Attr,88,14,8,8
   959                        	.member	DIR_NTRes,96,14,8,8
   960                        	.member	DIR_CrtTimeTenth,104,14,8,8
   961                        	.member	DIR_CrtTime,112,16,8,16
   962                        	.member	DIR_CrtDate,128,16,8,16
   963                        	.member	DIR_LstAccDate,144,16,8,16
   964                        	.member	DIR_FstClusHI,160,16,8,16
   965                        	.member	DIR_WrtTime,176,16,8,16
   966                        	.member	DIR_WrtDate,192,16,8,16
   967                        	.member	DIR_FstClusLO,208,16,8,16
   968                        	.member	DIR_FileSize,224,18,8,32
   969                        	.eos
   970                        	.stag	fat_extBS_32,416,89
   971                        	.member	table_size_32,0,18,8,32
   972                        	.member	extended_flags,32,16,8,16
   973                        	.member	fat_version,48,16,8,16
   974                        	.member	root_cluster,64,18,8,32
   975                        	.member	fat_info,96,16,8,16
   976                        	.member	backup_BS_sector,112,16,8,16
   977                        	.member	reserved_0,128,110,8,0,12
   978                        	.member	drive_number,224,14,8,8
   979                        	.member	reserved_1,232,14,8,8
  Sat Jul 10 2021  1:15                                                Page 20


   980                        	.member	boot_signature,240,14,8,8
   981                        	.member	volume_id,248,16,8,16
   982                        	.member	volume_label,264,110,8,0,11
   983                        	.member	fat_type_label,352,110,8,0,8
   984                        	.eos
   985                        	.stag	fat_extBS_16,192,90
   986                        	.member	bios_drive_num,0,14,8,8
   987                        	.member	reserved1,8,14,8,8
   988                        	.member	boot_signature,16,14,8,8
   989                        	.member	volume_id,24,16,8,16
   990                        	.member	volume_label,40,110,8,0,11
   991                        	.member	fat_type_label,128,110,8,0,8
   992                        	.eos
   993                        	.stag	fat_BS,688,91
   994                        	.member	bootjmp,0,110,8,0,3
   995                        	.member	oem_name,24,110,8,0,8
   996                        	.member	bytes_per_sector,88,16,8,16
   997                        	.member	sectors_per_cluster,104,14,8,8
   998                        	.member	reserved_sector_count,112,16,8,16
   999                        	.member	table_count,128,14,8,8
  1000                        	.member	root_entry_count,136,16,8,16
  1001                        	.member	total_sectors_16,152,16,8,16
  1002                        	.member	media_type,168,14,8,8
  1003                        	.member	table_size_16,176,16,8,16
  1004                        	.member	sectors_per_track,192,16,8,16
  1005                        	.member	head_side_count,208,16,8,16
  1006                        	.member	hidden_sector_count,224,16,8,16
  1007                        	.member	total_sectors_32,240,16,8,16
  1008                        	.member	extended_section,256,110,8,0,54
  1009                        	.eos
  1010                        	.stag	__FATBootSector,928,92
  1011                        	.member	bootjmp,0,110,8,0,3
  1012                        	.member	oem_name,24,110,8,0,8
  1013                        	.member	bytes_per_sector,88,16,8,16
  1014                        	.member	sectors_per_cluster,104,14,8,8
  1015                        	.member	reserved_sector_count,112,16,8,16
  1016                        	.member	fat_table_count,128,14,8,8
  1017                        	.member	root_entry_count,136,16,8,16
  1018                        	.member	total_sectors_16,152,16,8,16
  1019                        	.member	media_type,168,14,8,8
  1020                        	.member	sectors_per_fat,176,16,8,16
  1021                        	.member	sectors_per_track,192,16,8,16
  1022                        	.member	head_side_count,208,16,8,16
  1023                        	.member	hidden_sector_count,224,18,8,32
  1024                        	.member	total_sectors_32,256,18,8,32
  1025                        	.member	drive_number,288,14,8,8
  1026                        	.member	reserved1,296,14,8,8
  1027                        	.member	boot_sig,304,14,8,8
  1028                        	.member	vol_id,312,18,8,32
  1029                        	.member	vol_name,344,110,8,0,11
  1030                        	.member	file_system_type,432,110,8,0,8
  1031                        	.member	extended_section,496,110,8,0,54
  1032                        	.eos
  1033                        	.stag	__PARTITIONTABLE,128,93
  1034                        	.member	first_byte,0,14,8,8
  1035                        	.member	start_chs,8,110,8,0,3
  1036                        	.member	partition_type,32,14,8,8
  1037                        	.member	end_chs,40,110,8,0,3
  Sat Jul 10 2021  1:15                                                Page 21


  1038                        	.member	start_sector,64,18,8,32
  1039                        	.member	length_sectors,96,18,8,32
  1040                        	.eos
  1041                        	.stag	fake94_,4096,94
  1042                        	.member	jmp,0,110,8,0,3
  1043                        	.member	oem,24,110,8,0,8
  1044                        	.member	sector_size,88,15,8,16
  1045                        	.member	sectors_per_cluster,104,14,8,8
  1046                        	.member	reserved_sectors,112,15,8,16
  1047                        	.member	number_ok_dos_fats,128,14,8,8
  1048                        	.member	root_dir_entries,136,15,8,16
  1049                        	.member	total_sectors_short,152,15,8,16
  1050                        	.member	media_descriptor,168,14,8,8
  1051                        	.member	fat_size_sectors,176,15,8,16
  1052                        	.member	sectors_per_track,192,15,8,16
  1053                        	.member	number_ok_dos_heads,208,15,8,16
  1054                        	.member	hidden_sectors,224,18,8,32
  1055                        	.member	total_sectors_long,256,18,8,32
  1056                        	.member	drive_number,288,14,8,8
  1057                        	.member	current_head,296,14,8,8
  1058                        	.member	boot_signature,304,14,8,8
  1059                        	.member	volume_id,312,18,8,32
  1060                        	.member	volume_label,344,110,8,0,11
  1061                        	.member	fs_type,432,110,8,0,8
  1062                        	.member	boot_code,496,110,8,0,448
  1063                        	.member	boot_sector_signature,4080,15,8,16
  1064                        	.eos
  1065                        	.stag	__FAT16ENTRY,256,95
  1066                        	.member	filename,0,110,8,0,8
  1067                        	.member	ext,64,110,8,0,3
  1068                        	.member	attributes,88,14,8,8
  1069                        	.member	reserved,96,110,8,0,10
  1070                        	.member	modify_time,176,16,8,16
  1071                        	.member	modify_date,192,16,8,16
  1072                        	.member	starting_cluster,208,16,8,16
  1073                        	.member	file_size,224,18,8,32
  1074                        	.eos
  1075                        	.stag	__FAT16ENTRYLONG,288,96
  1076                        	.member	filename,0,110,8,0,8
  1077                        	.member	ext,64,110,8,0,3
  1078                        	.member	attributes,88,14,8,8
  1079                        	.member	reserved,96,110,8,0,10
  1080                        	.member	modify_time,176,16,8,16
  1081                        	.member	modify_date,192,16,8,16
  1082                        	.member	starting_cluster,208,16,8,16
  1083                        	.member	file_size,224,18,8,32
  1084                        	.member	plongfileName,256,142,8,32
  1085                        	.eos
  1086                        	.stag	_LongFileName,256,97
  1087                        	.member	sequenceNo,0,14,8,8
  1088                        	.member	fileName_Part1,8,110,8,0,10
  1089                        	.member	fileattribute,88,14,8,8
  1090                        	.member	type,96,14,8,8
  1091                        	.member	checksum,104,14,8,8
  1092                        	.member	fileName_Part2,112,110,8,0,12
  1093                        	.member	fstclusLO,208,5,8,16
  1094                        	.member	fileName_Part3,224,110,8,0,4
  1095                        	.eos
  Sat Jul 10 2021  1:15                                                Page 22


  1096                        	.stag	_IDSECTOR,2048,98
  1097                        	.member	wGenConfig,0,16,8,16
  1098                        	.member	wNumCyls,16,16,8,16
  1099                        	.member	wReserved,32,16,8,16
  1100                        	.member	wNumHeads,48,16,8,16
  1101                        	.member	wBytesPerTrack,64,16,8,16
  1102                        	.member	wBytesPerSector,80,16,8,16
  1103                        	.member	wSectorsPerTrack,96,16,8,16
  1104                        	.member	wVendorUnique,112,112,8,0,3
  1105                        	.member	sSerialNumber,160,110,8,0,20
  1106                        	.member	wBufferType,320,16,8,16
  1107                        	.member	wBufferSize,336,16,8,16
  1108                        	.member	wECCSize,352,16,8,16
  1109                        	.member	sFirmwareRev,368,110,8,0,8
  1110                        	.member	sModelNumber,432,110,8,0,40
  1111                        	.member	wMoreVendorUnique,752,16,8,16
  1112                        	.member	wDoubleWordIO,768,16,8,16
  1113                        	.member	wCapabilities,784,16,8,16
  1114                        	.member	wReserved1,800,16,8,16
  1115                        	.member	wPIOTiming,816,16,8,16
  1116                        	.member	wDMATiming,832,16,8,16
  1117                        	.member	wBS,848,16,8,16
  1118                        	.member	wNumCurrentCyls,864,16,8,16
  1119                        	.member	wNumCurrentHeads,880,16,8,16
  1120                        	.member	wNumCurrentSectorsPerTrack,896,16,8,16
  1121                        	.member	ulCurrentSectorCapacity,912,18,8,32
  1122                        	.member	wMultSectorStuff,944,16,8,16
  1123                        	.member	ulTotalAddressableSectors,960,18,8,32
  1124                        	.member	wSingleWordDMA,992,16,8,16
  1125                        	.member	wMultiWordDMA,1008,16,8,16
  1126                        	.member	bReserved,1024,110,8,0,128
  1127                        	.eos
  1128                        	.stag	fake99_,16,99
  1129                        	.member	Reserved1,0,16,17,1
  1130                        	.member	Retired3,1,16,17,1
  1131                        	.member	ResponseIncomplete,2,16,17,1
  1132                        	.member	Retired2,3,16,17,3
  1133                        	.member	FixedDevice,6,16,17,1
  1134                        	.member	RemovableMedia,7,16,17,1
  1135                        	.member	Retired1,8,16,17,7
  1136                        	.member	DeviceType,15,16,17,1
  1137                        	.eos
  1138                        	.stag	fake100_,16,100
  1139                        	.member	FeatureSupported,0,16,17,1
  1140                        	.member	Reserved,1,16,17,15
  1141                        	.eos
  1142                        	.stag	fake101_,32,101
  1143                        	.member	CurrentLongPhysicalSectorAlignment,0,14,
                    17,2
  1144                        	.member	ReservedByte49,2,14,17,6
  1145                        	.member	DmaSupported,8,14,17,1
  1146                        	.member	LbaSupported,9,14,17,1
  1147                        	.member	IordyDisable,10,14,17,1
  1148                        	.member	IordySupported,11,14,17,1
  1149                        	.member	Reserved1,12,14,17,1
  1150                        	.member	StandybyTimerSupport,13,14,17,1
  1151                        	.member	Reserved2,14,14,17,2
  1152                        	.member	ReservedWord50,16,16,8,16
  Sat Jul 10 2021  1:15                                                Page 23


  1153                        	.eos
  1154                        	.stag	fake102_,16,102
  1155                        	.member	ZonedCapabilities,0,16,17,2
  1156                        	.member	NonVolatileWriteCache,2,16,17,1
  1157                        	.member	ExtendedUserAddressableSectorsSupported,
                    3,16,17,1
  1158                        	.member	DeviceEncryptsAllUserData,4,16,17,1
  1159                        	.member	ReadZeroAfterTrimSupported,5,16,17,1
  1160                        	.member	Optional28BitCommandsSupported,6,16,17,1
  1161                        	.member	IEEE1667,7,16,17,1
  1162                        	.member	DownloadMicrocodeDmaSupported,8,16,17,1
  1163                        	.member	SetMaxSetPasswordUnlockDmaSupported,9,16
                    ,17,1
  1164                        	.member	WriteBufferDmaSupported,10,16,17,1
  1165                        	.member	ReadBufferDmaSupported,11,16,17,1
  1166                        	.member	DeviceConfigIdentifySetDmaSupported,12,1
                    6,17,1
  1167                        	.member	LPSAERCSupported,13,16,17,1
  1168                        	.member	DeterministicReadAfterTrimSupported,14,1
                    6,17,1
  1169                        	.member	CFastSpecSupported,15,16,17,1
  1170                        	.eos
  1171                        	.stag	fake103_,32,103
  1172                        	.member	Reserved0,0,16,17,1
  1173                        	.member	SataGen1,1,16,17,1
  1174                        	.member	SataGen2,2,16,17,1
  1175                        	.member	SataGen3,3,16,17,1
  1176                        	.member	Reserved1,4,16,17,4
  1177                        	.member	NCQ,8,16,17,1
  1178                        	.member	HIPM,9,16,17,1
  1179                        	.member	PhyEvents,10,16,17,1
  1180                        	.member	NcqUnload,11,16,17,1
  1181                        	.member	NcqPriority,12,16,17,1
  1182                        	.member	HostAutoPS,13,16,17,1
  1183                        	.member	DeviceAutoPS,14,16,17,1
  1184                        	.member	ReadLogDMA,15,16,17,1
  1185                        	.member	Reserved2,16,16,17,1
  1186                        	.member	CurrentSpeed,17,16,17,3
  1187                        	.member	NcqStreaming,20,16,17,1
  1188                        	.member	NcqQueueMgmt,21,16,17,1
  1189                        	.member	NcqReceiveSend,22,16,17,1
  1190                        	.member	DEVSLPtoReducedPwrState,23,16,17,1
  1191                        	.member	Reserved3,24,16,17,8
  1192                        	.eos
  1193                        	.stag	fake104_,16,104
  1194                        	.member	Reserved0,0,16,17,1
  1195                        	.member	NonZeroOffsets,1,16,17,1
  1196                        	.member	DmaSetupAutoActivate,2,16,17,1
  1197                        	.member	DIPM,3,16,17,1
  1198                        	.member	InOrderData,4,16,17,1
  1199                        	.member	HardwareFeatureControl,5,16,17,1
  1200                        	.member	SoftwareSettingsPreservation,6,16,17,1
  1201                        	.member	NCQAutosense,7,16,17,1
  1202                        	.member	DEVSLP,8,16,17,1
  1203                        	.member	HybridInformation,9,16,17,1
  1204                        	.member	Reserved1,10,16,17,6
  1205                        	.eos
  1206                        	.stag	fake105_,16,105
  Sat Jul 10 2021  1:15                                                Page 24


  1207                        	.member	Reserved0,0,16,17,1
  1208                        	.member	NonZeroOffsets,1,16,17,1
  1209                        	.member	DmaSetupAutoActivate,2,16,17,1
  1210                        	.member	DIPM,3,16,17,1
  1211                        	.member	InOrderData,4,16,17,1
  1212                        	.member	HardwareFeatureControl,5,16,17,1
  1213                        	.member	SoftwareSettingsPreservation,6,16,17,1
  1214                        	.member	DeviceAutoPS,7,16,17,1
  1215                        	.member	DEVSLP,8,16,17,1
  1216                        	.member	HybridInformation,9,16,17,1
  1217                        	.member	Reserved1,10,16,17,6
  1218                        	.eos
  1219                        	.stag	fake106_,48,106
  1220                        	.member	SmartCommands,0,16,17,1
  1221                        	.member	SecurityMode,1,16,17,1
  1222                        	.member	RemovableMediaFeature,2,16,17,1
  1223                        	.member	PowerManagement,3,16,17,1
  1224                        	.member	Reserved1,4,16,17,1
  1225                        	.member	WriteCache,5,16,17,1
  1226                        	.member	LookAhead,6,16,17,1
  1227                        	.member	ReleaseInterrupt,7,16,17,1
  1228                        	.member	ServiceInterrupt,8,16,17,1
  1229                        	.member	DeviceReset,9,16,17,1
  1230                        	.member	HostProtectedArea,10,16,17,1
  1231                        	.member	Obsolete1,11,16,17,1
  1232                        	.member	WriteBuffer,12,16,17,1
  1233                        	.member	ReadBuffer,13,16,17,1
  1234                        	.member	Nop,14,16,17,1
  1235                        	.member	Obsolete2,15,16,17,1
  1236                        	.member	DownloadMicrocode,16,16,17,1
  1237                        	.member	DmaQueued,17,16,17,1
  1238                        	.member	Cfa,18,16,17,1
  1239                        	.member	AdvancedPm,19,16,17,1
  1240                        	.member	Msn,20,16,17,1
  1241                        	.member	PowerUpInStandby,21,16,17,1
  1242                        	.member	ManualPowerUp,22,16,17,1
  1243                        	.member	Reserved2,23,16,17,1
  1244                        	.member	SetMax,24,16,17,1
  1245                        	.member	Acoustics,25,16,17,1
  1246                        	.member	BigLba,26,16,17,1
  1247                        	.member	DeviceConfigOverlay,27,16,17,1
  1248                        	.member	FlushCache,28,16,17,1
  1249                        	.member	FlushCacheExt,29,16,17,1
  1250                        	.member	WordValid83,30,16,17,2
  1251                        	.member	SmartErrorLog,32,16,17,1
  1252                        	.member	SmartSelfTest,33,16,17,1
  1253                        	.member	MediaSerialNumber,34,16,17,1
  1254                        	.member	MediaCardPassThrough,35,16,17,1
  1255                        	.member	StreamingFeature,36,16,17,1
  1256                        	.member	GpLogging,37,16,17,1
  1257                        	.member	WriteFua,38,16,17,1
  1258                        	.member	WriteQueuedFua,39,16,17,1
  1259                        	.member	WWN64Bit,40,16,17,1
  1260                        	.member	URGReadStream,41,16,17,1
  1261                        	.member	URGWriteStream,42,16,17,1
  1262                        	.member	ReservedForTechReport,43,16,17,2
  1263                        	.member	IdleWithUnloadFeature,45,16,17,1
  1264                        	.member	WordValid,46,16,17,2
  Sat Jul 10 2021  1:15                                                Page 25


  1265                        	.eos
  1266                        	.stag	fake107_,48,107
  1267                        	.member	SmartCommands,0,16,17,1
  1268                        	.member	SecurityMode,1,16,17,1
  1269                        	.member	RemovableMediaFeature,2,16,17,1
  1270                        	.member	PowerManagement,3,16,17,1
  1271                        	.member	Reserved1,4,16,17,1
  1272                        	.member	WriteCache,5,16,17,1
  1273                        	.member	LookAhead,6,16,17,1
  1274                        	.member	ReleaseInterrupt,7,16,17,1
  1275                        	.member	ServiceInterrupt,8,16,17,1
  1276                        	.member	DeviceReset,9,16,17,1
  1277                        	.member	HostProtectedArea,10,16,17,1
  1278                        	.member	Obsolete1,11,16,17,1
  1279                        	.member	WriteBuffer,12,16,17,1
  1280                        	.member	ReadBuffer,13,16,17,1
  1281                        	.member	Nop,14,16,17,1
  1282                        	.member	Obsolete2,15,16,17,1
  1283                        	.member	DownloadMicrocode,16,16,17,1
  1284                        	.member	DmaQueued,17,16,17,1
  1285                        	.member	Cfa,18,16,17,1
  1286                        	.member	AdvancedPm,19,16,17,1
  1287                        	.member	Msn,20,16,17,1
  1288                        	.member	PowerUpInStandby,21,16,17,1
  1289                        	.member	ManualPowerUp,22,16,17,1
  1290                        	.member	Reserved2,23,16,17,1
  1291                        	.member	SetMax,24,16,17,1
  1292                        	.member	Acoustics,25,16,17,1
  1293                        	.member	BigLba,26,16,17,1
  1294                        	.member	DeviceConfigOverlay,27,16,17,1
  1295                        	.member	FlushCache,28,16,17,1
  1296                        	.member	FlushCacheExt,29,16,17,1
  1297                        	.member	Resrved3,30,16,17,1
  1298                        	.member	Words119_120Valid,31,16,17,1
  1299                        	.member	SmartErrorLog,32,16,17,1
  1300                        	.member	SmartSelfTest,33,16,17,1
  1301                        	.member	MediaSerialNumber,34,16,17,1
  1302                        	.member	MediaCardPassThrough,35,16,17,1
  1303                        	.member	StreamingFeature,36,16,17,1
  1304                        	.member	GpLogging,37,16,17,1
  1305                        	.member	WriteFua,38,16,17,1
  1306                        	.member	WriteQueuedFua,39,16,17,1
  1307                        	.member	WWN64Bit,40,16,17,1
  1308                        	.member	URGReadStream,41,16,17,1
  1309                        	.member	URGWriteStream,42,16,17,1
  1310                        	.member	ReservedForTechReport,43,16,17,2
  1311                        	.member	IdleWithUnloadFeature,45,16,17,1
  1312                        	.member	Reserved4,46,16,17,2
  1313                        	.eos
  1314                        	.stag	fake108_,16,108
  1315                        	.member	TimeRequired,0,16,17,15
  1316                        	.member	ExtendedTimeReported,15,16,17,1
  1317                        	.eos
  1318                        	.stag	fake109_,16,109
  1319                        	.member	TimeRequired,0,16,17,15
  1320                        	.member	ExtendedTimeReported,15,16,17,1
  1321                        	.eos
  1322                        	.stag	fake110_,16,110
  Sat Jul 10 2021  1:15                                                Page 26


  1323                        	.member	LogicalSectorsPerPhysicalSector,0,16,17,
                    4
  1324                        	.member	Reserved0,4,16,17,8
  1325                        	.member	LogicalSectorLongerThan256Words,12,16,17
                    ,1
  1326                        	.member	MultipleLogicalSectorsPerPhysicalSector,
                    13,16,17,1
  1327                        	.member	Reserved1,14,16,17,2
  1328                        	.eos
  1329                        	.stag	fake111_,16,111
  1330                        	.member	ReservedForDrqTechnicalReport,0,16,17,1
  1331                        	.member	WriteReadVerify,1,16,17,1
  1332                        	.member	WriteUncorrectableExt,2,16,17,1
  1333                        	.member	ReadWriteLogDmaExt,3,16,17,1
  1334                        	.member	DownloadMicrocodeMode3,4,16,17,1
  1335                        	.member	FreefallControl,5,16,17,1
  1336                        	.member	SenseDataReporting,6,16,17,1
  1337                        	.member	ExtendedPowerConditions,7,16,17,1
  1338                        	.member	Reserved0,8,16,17,6
  1339                        	.member	WordValid,14,16,17,2
  1340                        	.eos
  1341                        	.stag	fake112_,16,112
  1342                        	.member	ReservedForDrqTechnicalReport,0,16,17,1
  1343                        	.member	WriteReadVerify,1,16,17,1
  1344                        	.member	WriteUncorrectableExt,2,16,17,1
  1345                        	.member	ReadWriteLogDmaExt,3,16,17,1
  1346                        	.member	DownloadMicrocodeMode3,4,16,17,1
  1347                        	.member	FreefallControl,5,16,17,1
  1348                        	.member	SenseDataReporting,6,16,17,1
  1349                        	.member	ExtendedPowerConditions,7,16,17,1
  1350                        	.member	Reserved0,8,16,17,6
  1351                        	.member	Reserved1,14,16,17,2
  1352                        	.eos
  1353                        	.stag	fake113_,16,113
  1354                        	.member	SecuritySupported,0,16,17,1
  1355                        	.member	SecurityEnabled,1,16,17,1
  1356                        	.member	SecurityLocked,2,16,17,1
  1357                        	.member	SecurityFrozen,3,16,17,1
  1358                        	.member	SecurityCountExpired,4,16,17,1
  1359                        	.member	EnhancedSecurityEraseSupported,5,16,17,1
  1360                        	.member	Reserved0,6,16,17,2
  1361                        	.member	SecurityLevel,8,16,17,1
  1362                        	.member	Reserved1,9,16,17,7
  1363                        	.eos
  1364                        	.stag	fake114_,16,114
  1365                        	.member	MaximumCurrentInMA,0,16,17,12
  1366                        	.member	CfaPowerMode1Disabled,12,16,17,1
  1367                        	.member	CfaPowerMode1Required,13,16,17,1
  1368                        	.member	Reserved0,14,16,17,1
  1369                        	.member	Word160Supported,15,16,17,1
  1370                        	.eos
  1371                        	.stag	fake115_,16,115
  1372                        	.member	SupportsTrim,0,16,17,1
  1373                        	.member	Reserved0,1,16,17,15
  1374                        	.eos
  1375                        	.stag	fake116_,16,116
  1376                        	.member	Supported,0,16,17,1
  1377                        	.member	Reserved0,1,16,17,1
  Sat Jul 10 2021  1:15                                                Page 27


  1378                        	.member	WriteSameSuported,2,16,17,1
  1379                        	.member	ErrorRecoveryControlSupported,3,16,17,1
  1380                        	.member	FeatureControlSuported,4,16,17,1
  1381                        	.member	DataTablesSuported,5,16,17,1
  1382                        	.member	Reserved1,6,16,17,6
  1383                        	.member	VendorSpecific,12,16,17,4
  1384                        	.eos
  1385                        	.stag	fake117_,16,117
  1386                        	.member	AlignmentOfLogicalWithinPhysical,0,16,17
                    ,14
  1387                        	.member	Word209Supported,14,16,17,1
  1388                        	.member	Reserved0,15,16,17,1
  1389                        	.eos
  1390                        	.stag	fake118_,16,118
  1391                        	.member	NVCachePowerModeEnabled,0,16,17,1
  1392                        	.member	Reserved0,1,16,17,3
  1393                        	.member	NVCacheFeatureSetEnabled,4,16,17,1
  1394                        	.member	Reserved1,5,16,17,3
  1395                        	.member	NVCachePowerModeVersion,8,16,17,4
  1396                        	.member	NVCacheFeatureSetVersion,12,16,17,4
  1397                        	.eos
  1398                        	.stag	fake119_,16,119
  1399                        	.member	NVCacheEstimatedTimeToSpinUpInSeconds,0,
                    14,8,8
  1400                        	.member	Reserved,8,14,8,8
  1401                        	.eos
  1402                        	.stag	fake120_,16,120
  1403                        	.member	MajorVersion,0,16,17,12
  1404                        	.member	TransportType,12,16,17,4
  1405                        	.eos
  1406                        	.stag	_IDENTIFY_DEVICE_DATA,4096,121
  1407                        	.member	GeneralConfiguration,0,10,8,16,99
  1408                        	.member	NumCylinders,16,16,8,16
  1409                        	.member	SpecificConfiguration,32,16,8,16
  1410                        	.member	NumHeads,48,16,8,16
  1411                        	.member	Retired1Bytes,64,110,8,0,4
  1412                        	.member	NumSectorsPerTrack,96,16,8,16
  1413                        	.member	VendorUnique1Bytes,112,110,8,0,6
  1414                        	.member	SerialNumber,160,110,8,0,20
  1415                        	.member	Retired2,320,112,8,0,2
  1416                        	.member	Obsolete1,352,16,8,16
  1417                        	.member	FirmwareRevision,368,110,8,0,8
  1418                        	.member	ModelNumber,432,110,8,0,40
  1419                        	.member	MaximumBlockTransfer,752,14,8,8
  1420                        	.member	VendorUnique2,760,14,8,8
  1421                        	.member	TrustedComputing,768,10,8,16,100
  1422                        	.member	Capabilities,784,10,8,32,101
  1423                        	.member	ObsoleteWords51,816,112,8,0,2
  1424                        	.member	TranslationFieldsValid,848,16,17,3
  1425                        	.member	Reserved3,851,16,17,5
  1426                        	.member	FreeFallControlSensitivity,856,16,17,8
  1427                        	.member	NumberOfCurrentCylinders,864,16,8,16
  1428                        	.member	NumberOfCurrentHeads,880,16,8,16
  1429                        	.member	CurrentSectorsPerTrack,896,16,8,16
  1430                        	.member	CurrentSectorCapacity,912,18,8,32
  1431                        	.member	CurrentMultiSectorSetting,944,14,8,8
  1432                        	.member	MultiSectorSettingValid,952,14,17,1
  1433                        	.member	ReservedByte59,953,14,17,3
  Sat Jul 10 2021  1:15                                                Page 28


  1434                        	.member	SanitizeFeatureSupported,956,14,17,1
  1435                        	.member	CryptoScrambleExtCommandSupported,957,14
                    ,17,1
  1436                        	.member	OverwriteExtCommandSupported,958,14,17,1
  1437                        	.member	BlockEraseExtCommandSupported,959,14,17,
                    1
  1438                        	.member	UserAddressableSectors,960,18,8,32
  1439                        	.member	ObsoleteWord62,992,16,8,16
  1440                        	.member	MultiWordDMASupport,1008,16,17,8
  1441                        	.member	MultiWordDMAActive,1016,16,17,8
  1442                        	.member	AdvancedPIOModes,1024,16,17,8
  1443                        	.member	ReservedByte64,1032,16,17,8
  1444                        	.member	MinimumMWXferCycleTime,1040,16,8,16
  1445                        	.member	RecommendedMWXferCycleTime,1056,16,8,16
  1446                        	.member	MinimumPIOCycleTime,1072,16,8,16
  1447                        	.member	MinimumPIOCycleTimeIORDY,1088,16,8,16
  1448                        	.member	AdditionalSupported,1104,10,8,16,102
  1449                        	.member	ReservedWords70,1120,112,8,0,5
  1450                        	.member	QueueDepth,1200,16,17,5
  1451                        	.member	ReservedWord75,1205,16,17,11
  1452                        	.member	SerialAtaCapabilities,1216,10,8,32,103
  1453                        	.member	SerialAtaFeaturesSupported,1248,10,8,16,
                    104
  1454                        	.member	SerialAtaFeaturesEnabled,1264,10,8,16,10
                    5
  1455                        	.member	MajorRevision,1280,16,8,16
  1456                        	.member	MinorRevision,1296,16,8,16
  1457                        	.member	CommandSetSupport,1312,10,8,48,106
  1458                        	.member	CommandSetActive,1360,10,8,48,107
  1459                        	.member	UltraDMASupport,1408,16,17,8
  1460                        	.member	UltraDMAActive,1416,16,17,8
  1461                        	.member	NormalSecurityEraseUnit,1424,10,8,16,108
  1462                        	.member	EnhancedSecurityEraseUnit,1440,10,8,16,1
                    09
  1463                        	.member	CurrentAPMLevel,1456,16,17,8
  1464                        	.member	ReservedWord91,1464,16,17,8
  1465                        	.member	MasterPasswordID,1472,16,8,16
  1466                        	.member	HardwareResetResult,1488,16,8,16
  1467                        	.member	CurrentAcousticValue,1504,16,17,8
  1468                        	.member	RecommendedAcousticValue,1512,16,17,8
  1469                        	.member	StreamMinRequestSize,1520,16,8,16
  1470                        	.member	StreamingTransferTimeDMA,1536,16,8,16
  1471                        	.member	StreamingAccessLatencyDMAPIO,1552,16,8,1
                    6
  1472                        	.member	StreamingPerfGranularity,1568,18,8,32
  1473                        	.member	Max48BitLBA,1600,114,8,0,2
  1474                        	.member	StreamingTransferTime,1664,16,8,16
  1475                        	.member	DsmCap,1680,16,8,16
  1476                        	.member	PhysicalLogicalSectorSize,1696,10,8,16,1
                    10
  1477                        	.member	InterSeekDelay,1712,16,8,16
  1478                        	.member	WorldWideName,1728,112,8,0,4
  1479                        	.member	ReservedForWorldWideName128,1792,112,8,0
                    ,4
  1480                        	.member	ReservedForTlcTechnicalReport,1856,16,8,
                    16
  1481                        	.member	WordsPerLogicalSector,1872,112,8,0,2
  1482                        	.member	CommandSetSupportExt,1904,10,8,16,111
  Sat Jul 10 2021  1:15                                                Page 29


  1483                        	.member	CommandSetActiveExt,1920,10,8,16,112
  1484                        	.member	ReservedForExpandedSupportandActive,1936
                    ,112,8,0,6
  1485                        	.member	MsnSupport,2032,16,17,2
  1486                        	.member	ReservedWord127,2034,16,17,14
  1487                        	.member	SecurityStatus,2048,10,8,16,113
  1488                        	.member	ReservedWord129,2064,112,8,0,31
  1489                        	.member	CfaPowerMode1,2560,10,8,16,114
  1490                        	.member	ReservedForCfaWord161,2576,112,8,0,7
  1491                        	.member	NominalFormFactor,2688,16,17,4
  1492                        	.member	ReservedWord168,2692,16,17,12
  1493                        	.member	DataSetManagementFeature,2704,10,8,16,11
                    5
  1494                        	.member	AdditionalProductID,2720,112,8,0,4
  1495                        	.member	ReservedForCfaWord174,2784,112,8,0,2
  1496                        	.member	CurrentMediaSerialNumber,2816,112,8,0,30
  1497                        	.member	SCTCommandTransport,3296,10,8,16,116
  1498                        	.member	ReservedWord207,3312,112,8,0,2
  1499                        	.member	BlockAlignment,3344,10,8,16,117
  1500                        	.member	WriteReadVerifySectorCountMode3Only,3360
                    ,112,8,0,2
  1501                        	.member	WriteReadVerifySectorCountMode2Only,3392
                    ,112,8,0,2
  1502                        	.member	NVCacheCapabilities,3424,10,8,16,118
  1503                        	.member	NVCacheSizeLSW,3440,16,8,16
  1504                        	.member	NVCacheSizeMSW,3456,16,8,16
  1505                        	.member	NominalMediaRotationRate,3472,16,8,16
  1506                        	.member	ReservedWord218,3488,16,8,16
  1507                        	.member	NVCacheOptions,3504,10,8,16,119
  1508                        	.member	WriteReadVerifySectorCountMode,3520,16,1
                    7,8
  1509                        	.member	ReservedWord220,3528,16,17,8
  1510                        	.member	ReservedWord221,3536,16,8,16
  1511                        	.member	TransportMajorVersion,3552,10,8,16,120
  1512                        	.member	TransportMinorVersion,3568,16,8,16
  1513                        	.member	ReservedWord224,3584,112,8,0,6
  1514                        	.member	ExtendedNumberOfUserAddressableSectors,3
                    680,114,8,0,2
  1515                        	.member	MinBlocksPerDownloadMicrocodeMode03,3744
                    ,16,8,16
  1516                        	.member	MaxBlocksPerDownloadMicrocodeMode03,3760
                    ,16,8,16
  1517                        	.member	ReservedWord236,3776,112,8,0,19
  1518                        	.member	Signature,4080,16,17,8
  1519                        	.member	CheckSum,4088,16,17,8
  1520                        	.eos
  1521                        	.stag	_FXDosDevice,5744,122
  1522                        	.member	type,0,14,8,8
  1523                        	.member	initialized,8,14,8,8
  1524                        	.member	devdata,16,129,8,32
  1525                        	.member	devstatus,48,14,8,8
  1526                        	.member	bootSector,56,10,8,928,92
  1527                        	.member	partitionTable,984,10,8,128,93
  1528                        	.member	fileAllocationTable,1112,110,8,0,512
  1529                        	.member	bsOffset,5208,18,8,32
  1530                        	.member	rootDirSectors,5240,18,8,32
  1531                        	.member	root_entry_count,5272,5,8,16
  1532                        	.member	rootEntriesPerPage,5288,5,8,16
  Sat Jul 10 2021  1:15                                                Page 30


  1533                        	.member	sectors_per_cluster,5304,5,8,16
  1534                        	.member	firstDataSector,5320,18,8,32
  1535                        	.member	fatTableOffset,5352,18,8,32
  1536                        	.member	volume_name,5384,110,8,0,12
  1537                        	.member	root_volume_name,5480,110,8,0,12
  1538                        	.member	errorCode,5576,14,8,8
  1539                        	.member	pfInit,5584,641,8,32
  1540                        	.member	pfReset,5616,641,8,32
  1541                        	.member	pfUninit,5648,641,8,32
  1542                        	.member	pfReader,5680,654,8,32
  1543                        	.member	pfWriter,5712,654,8,32
  1544                        	.eos
  1545                        	.utag	item,32,123
  1546                        	.member	dir,0,138,11,32,75
  1547                        	.member	file,0,138,11,32,74
  1548                        	.member	fileInfo,0,138,11,32,76
  1549                        	.eos
  1550                        	.stag	_dos_handle,80,124
  1551                        	.member	fs,0,138,8,32,72
  1552                        	.member	fr,32,5,8,16
  1553                        	.member	path,48,142,8,32
  1554                        	.eos
  1555                        	.line	800
  1556                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\diskio.c",16
  1557                        ;
  1558                        ;
  1559                        ;static PFXDOSDEVICE diskioDevices[] = {NULL,NULL,
                    NULL,NULL,NULL,NULL};
  1560                        	data
  1561                        ~~diskioDevices:
  1562 00:0000: 00 00 00 00  	dl	$0,$0,$0,$0,$0,$0
       00:0004: 00 00 00 00 
       00:0008: 00 00 00 00 
       00:000C: 00 00 00 00 
       00:0010: 00 00 00 00 
       00:0014: 00 00 00 00 
  1563 00:0018:              	ends
  1564                        ;
  1565                        ;PFXDOSDEVICE FAR * k_dos_get_devices(VOID)
  1566                        ;{
  1567                        	.line	21
  1568                        	.line	22
  1569                        	code
  1570                        	xdef	~~k_dos_get_devices
  1571                        	func
  1572                        	.function	22
  1573                        ~~k_dos_get_devices:
  1574                        	longa	on
  1575                        	longi	on
  1576 00:0000: 3B           	tsc
  1577 00:0001: 38           	sec
  1578 00:0002: E9 04 00     	sbc	#L2
  1579 00:0005: 1B           	tcs
  1580 00:0006: 0B           	phd
  1581 00:0007: 5B           	tcd
  1582                        	.block	22
  1583                        ;	return diskioDevices;
  Sat Jul 10 2021  1:15                                                Page 31


  1584                        	.line	23
  1585 00:0008: A9 xx xx     	lda	#<~~diskioDevices
  1586 00:000B: 85 01        	sta	<R0
  1587                        	xref	_BEG_DATA
  1588 00:000D: A9 xx xx     	lda	#_BEG_DATA>>16
  1589 00:0010: 85 03        	sta	<R0+2
  1590 00:0012: A6 03        	ldx	<R0+2
  1591 00:0014: A5 01        	lda	<R0
  1592                        L5:
  1593 00:0016: A8           	tay
  1594 00:0017: 2B           	pld
  1595 00:0018: 3B           	tsc
  1596 00:0019: 18           	clc
  1597 00:001A: 69 04 00     	adc	#L2
  1598 00:001D: 1B           	tcs
  1599 00:001E: 98           	tya
  1600 00:001F: 6B           	rtl
  1601                        ;}
  1602                        	.line	24
  1603                        	.endblock	24
  1604             00000004   L2	equ	4
  1605             00000005   L3	equ	5
  1606                        	ends
  1607                        	efunc
  1608                        	.endfunc	24,5,4
  1609                        	.line	24
  1610                        ;
  1611                        ;PFXDOSDEVICE k_dos_get_device(UINT index)
  1612                        ;{
  1613                        	.line	26
  1614                        	.line	27
  1615                        	code
  1616                        	xdef	~~k_dos_get_device
  1617                        	func
  1618                        	.function	27
  1619                        ~~k_dos_get_device:
  1620                        	longa	on
  1621                        	longi	on
  1622 00:0020: 3B           	tsc
  1623 00:0021: 38           	sec
  1624 00:0022: E9 08 00     	sbc	#L6
  1625 00:0025: 1B           	tcs
  1626 00:0026: 0B           	phd
  1627 00:0027: 5B           	tcd
  1628             00000004   index_0	set	4
  1629                        	.block	27
  1630                        ;	return diskioDevices[index];
  1631                        	.sym	index,4,16,6,16
  1632                        	.line	28
  1633 00:0028: A5 0C        	lda	<L6+index_0
  1634 00:002A: 0A           	asl	A
  1635 00:002B: 0A           	asl	A
  1636 00:002C: 85 01        	sta	<R0
  1637 00:002E: 18           	clc
  1638 00:002F: A9 xx xx     	lda	#<~~diskioDevices
  1639 00:0032: 65 01        	adc	<R0
  1640 00:0034: 85 05        	sta	<R1
  1641 00:0036: A0 02 00     	ldy	#$2
  Sat Jul 10 2021  1:15                                                Page 32


  1642 00:0039: B1 05        	lda	(<R1),Y
  1643 00:003B: AA           	tax
  1644 00:003C: B2 05        	lda	(<R1)
  1645                        L9:
  1646 00:003E: A8           	tay
  1647 00:003F: A5 0A        	lda	<L6+2
  1648 00:0041: 85 0C        	sta	<L6+2+2
  1649 00:0043: A5 09        	lda	<L6+1
  1650 00:0045: 85 0B        	sta	<L6+1+2
  1651 00:0047: 2B           	pld
  1652 00:0048: 3B           	tsc
  1653 00:0049: 18           	clc
  1654 00:004A: 69 0A 00     	adc	#L6+2
  1655 00:004D: 1B           	tcs
  1656 00:004E: 98           	tya
  1657 00:004F: 6B           	rtl
  1658                        ;}
  1659                        	.line	29
  1660                        	.endblock	29
  1661             00000008   L6	equ	8
  1662             00000009   L7	equ	9
  1663                        	ends
  1664                        	efunc
  1665                        	.endfunc	29,9,8
  1666                        	.line	29
  1667                        ;
  1668                        ;UINT k_dos_get_device_status(UINT index)
  1669                        ;{
  1670                        	.line	31
  1671                        	.line	32
  1672                        	code
  1673                        	xdef	~~k_dos_get_device_status
  1674                        	func
  1675                        	.function	32
  1676                        ~~k_dos_get_device_status:
  1677                        	longa	on
  1678                        	longi	on
  1679 00:0050: 3B           	tsc
  1680 00:0051: 38           	sec
  1681 00:0052: E9 08 00     	sbc	#L10
  1682 00:0055: 1B           	tcs
  1683 00:0056: 0B           	phd
  1684 00:0057: 5B           	tcd
  1685             00000004   index_0	set	4
  1686                        	.block	32
  1687                        ;	return diskioDevices[index]->initialized;
  1688                        	.sym	index,4,16,6,16
  1689                        	.line	33
  1690 00:0058: A5 0C        	lda	<L10+index_0
  1691 00:005A: 0A           	asl	A
  1692 00:005B: 0A           	asl	A
  1693 00:005C: 85 01        	sta	<R0
  1694 00:005E: 18           	clc
  1695 00:005F: A9 xx xx     	lda	#<~~diskioDevices
  1696 00:0062: 65 01        	adc	<R0
  1697 00:0064: 85 05        	sta	<R1
  1698 00:0066: B2 05        	lda	(<R1)
  1699 00:0068: 85 01        	sta	<R0
  Sat Jul 10 2021  1:15                                                Page 33


  1700 00:006A: A0 02 00     	ldy	#$2
  1701 00:006D: B1 05        	lda	(<R1),Y
  1702 00:006F: 85 03        	sta	<R0+2
  1703 00:0071: A0 01 00     	ldy	#$1
  1704 00:0074: B7 01        	lda	[<R0],Y
  1705 00:0076: 29 FF 00     	and	#$ff
  1706                        L13:
  1707 00:0079: A8           	tay
  1708 00:007A: A5 0A        	lda	<L10+2
  1709 00:007C: 85 0C        	sta	<L10+2+2
  1710 00:007E: A5 09        	lda	<L10+1
  1711 00:0080: 85 0B        	sta	<L10+1+2
  1712 00:0082: 2B           	pld
  1713 00:0083: 3B           	tsc
  1714 00:0084: 18           	clc
  1715 00:0085: 69 0A 00     	adc	#L10+2
  1716 00:0088: 1B           	tcs
  1717 00:0089: 98           	tya
  1718 00:008A: 6B           	rtl
  1719                        ;}
  1720                        	.line	34
  1721                        	.endblock	34
  1722             00000008   L10	equ	8
  1723             00000009   L11	equ	9
  1724                        	ends
  1725                        	efunc
  1726                        	.endfunc	34,9,8
  1727                        	.line	34
  1728                        ;
  1729                        ;/*-----------------------------------------------
                    ------------------------*/
  1730                        ;/* Get Drive Status                              
                                            */
  1731                        ;/*-----------------------------------------------
                    ------------------------*/
  1732                        ;
  1733                        ;DSTATUS disk_status (
  1734                        ;	BYTE pdrv		/* Physical drive nmuber
                     to identify the drive */
  1735                        ;)
  1736                        ;{
  1737                        	.line	40
  1738                        	.line	43
  1739                        	code
  1740                        	xdef	~~disk_status
  1741                        	func
  1742                        	.function	43
  1743                        ~~disk_status:
  1744                        	longa	on
  1745                        	longi	on
  1746 00:008B: 3B           	tsc
  1747 00:008C: 38           	sec
  1748 00:008D: E9 0B 00     	sbc	#L14
  1749 00:0090: 1B           	tcs
  1750 00:0091: 0B           	phd
  1751 00:0092: 5B           	tcd
  1752             00000004   pdrv_0	set	4
  1753                        	.block	43
  Sat Jul 10 2021  1:15                                                Page 34


  1754                        ;	DSTATUS stat = STA_NOINIT;
  1755                        ;	int result;
  1756                        ;
  1757                        ;	//k_debug_hex("disk_status:",pdrv);
  1758                        ;
  1759                        ;	switch (pdrv)
  1760             00000000   stat_1	set	0
  1761             00000001   result_1	set	1
  1762                        	.sym	stat,0,14,1,8
  1763                        	.sym	result,1,5,1,16
  1764                        	.sym	pdrv,4,14,6,8
  1765 00:0093: E2 20        	sep	#$20
  1766                        	longa	off
  1767 00:0095: A9 01        	lda	#$1
  1768 00:0097: 85 09        	sta	<L15+stat_1
  1769 00:0099: C2 20        	rep	#$20
  1770                        	longa	on
  1771                        	.line	49
  1772 00:009B: A5 0F        	lda	<L14+pdrv_0
  1773 00:009D: 29 FF 00     	and	#$ff
  1774 00:00A0: 82 D3 00     	brl	L10001
  1775                        ;	{
  1776                        	.line	50
  1777                        ;	case 0x03 :
  1778                        	.line	51
  1779                        L10003:
  1780                        ;
  1781                        ;
  1782                        ;		if(diskioDevices[pdrv] != NULL)
  1783                        	.line	54
  1784                        ;		{
  1785 00:00A3: A5 0F        	lda	<L14+pdrv_0
  1786 00:00A5: 29 FF 00     	and	#$ff
  1787 00:00A8: 85 05        	sta	<R1
  1788 00:00AA: A5 05        	lda	<R1
  1789 00:00AC: 0A           	asl	A
  1790 00:00AD: 0A           	asl	A
  1791 00:00AE: 85 01        	sta	<R0
  1792 00:00B0: 18           	clc
  1793 00:00B1: A9 xx xx     	lda	#<~~diskioDevices
  1794 00:00B4: 65 01        	adc	<R0
  1795 00:00B6: 85 05        	sta	<R1
  1796 00:00B8: B2 05        	lda	(<R1)
  1797 00:00BA: A0 02 00     	ldy	#$2
  1798 00:00BD: 11 05        	ora	(<R1),Y
  1799 00:00BF: D0 03        	bne	L17
  1800 00:00C1: 82 42 00     	brl	L10004
  1801                        L17:
  1802                        	.line	55
  1803                        ;			if(diskioDevices[pdrv]->initiali
                    zed)
  1804                        	.line	56
  1805                        ;			{
  1806 00:00C4: A5 0F        	lda	<L14+pdrv_0
  1807 00:00C6: 29 FF 00     	and	#$ff
  1808 00:00C9: 85 05        	sta	<R1
  1809 00:00CB: A5 05        	lda	<R1
  1810 00:00CD: 0A           	asl	A
  Sat Jul 10 2021  1:15                                                Page 35


  1811 00:00CE: 0A           	asl	A
  1812 00:00CF: 85 01        	sta	<R0
  1813 00:00D1: 18           	clc
  1814 00:00D2: A9 xx xx     	lda	#<~~diskioDevices
  1815 00:00D5: 65 01        	adc	<R0
  1816 00:00D7: 85 05        	sta	<R1
  1817 00:00D9: B2 05        	lda	(<R1)
  1818 00:00DB: 85 01        	sta	<R0
  1819 00:00DD: A0 02 00     	ldy	#$2
  1820 00:00E0: B1 05        	lda	(<R1),Y
  1821 00:00E2: 85 03        	sta	<R0+2
  1822 00:00E4: A0 01 00     	ldy	#$1
  1823 00:00E7: B7 01        	lda	[<R0],Y
  1824 00:00E9: 29 FF 00     	and	#$ff
  1825 00:00EC: D0 03        	bne	L18
  1826 00:00EE: 82 15 00     	brl	L10005
  1827                        L18:
  1828                        	.line	57
  1829                        ;				return RES_OK;
  1830                        	.line	58
  1831 00:00F1: A9 00 00     	lda	#$0
  1832                        L19:
  1833 00:00F4: A8           	tay
  1834 00:00F5: A5 0D        	lda	<L14+2
  1835 00:00F7: 85 0F        	sta	<L14+2+2
  1836 00:00F9: A5 0C        	lda	<L14+1
  1837 00:00FB: 85 0E        	sta	<L14+1+2
  1838 00:00FD: 2B           	pld
  1839 00:00FE: 3B           	tsc
  1840 00:00FF: 18           	clc
  1841 00:0100: 69 0D 00     	adc	#L14+2
  1842 00:0103: 1B           	tcs
  1843 00:0104: 98           	tya
  1844 00:0105: 6B           	rtl
  1845                        ;			}
  1846                        	.line	59
  1847                        ;		}
  1848                        L10005:
  1849                        	.line	60
  1850                        ;
  1851                        ;		return RES_OK;
  1852                        L10004:
  1853                        	.line	62
  1854 00:0106: A9 00 00     	lda	#$0
  1855 00:0109: 82 E8 FF     	brl	L19
  1856                        ;		break;
  1857                        	.line	63
  1858                        ;	case 0x04 :
  1859                        	.line	64
  1860                        L10006:
  1861                        ;
  1862                        ;
  1863                        ;		if(diskioDevices[pdrv] != NULL)
  1864                        	.line	67
  1865                        ;		{
  1866 00:010C: A5 0F        	lda	<L14+pdrv_0
  1867 00:010E: 29 FF 00     	and	#$ff
  1868 00:0111: 85 05        	sta	<R1
  Sat Jul 10 2021  1:15                                                Page 36


  1869 00:0113: A5 05        	lda	<R1
  1870 00:0115: 0A           	asl	A
  1871 00:0116: 0A           	asl	A
  1872 00:0117: 85 01        	sta	<R0
  1873 00:0119: 18           	clc
  1874 00:011A: A9 xx xx     	lda	#<~~diskioDevices
  1875 00:011D: 65 01        	adc	<R0
  1876 00:011F: 85 05        	sta	<R1
  1877 00:0121: B2 05        	lda	(<R1)
  1878 00:0123: A0 02 00     	ldy	#$2
  1879 00:0126: 11 05        	ora	(<R1),Y
  1880 00:0128: D0 03        	bne	L20
  1881 00:012A: 82 33 00     	brl	L10007
  1882                        L20:
  1883                        	.line	68
  1884                        ;			if(diskioDevices[pdrv]->initiali
                    zed)
  1885                        	.line	69
  1886                        ;			{
  1887 00:012D: A5 0F        	lda	<L14+pdrv_0
  1888 00:012F: 29 FF 00     	and	#$ff
  1889 00:0132: 85 05        	sta	<R1
  1890 00:0134: A5 05        	lda	<R1
  1891 00:0136: 0A           	asl	A
  1892 00:0137: 0A           	asl	A
  1893 00:0138: 85 01        	sta	<R0
  1894 00:013A: 18           	clc
  1895 00:013B: A9 xx xx     	lda	#<~~diskioDevices
  1896 00:013E: 65 01        	adc	<R0
  1897 00:0140: 85 05        	sta	<R1
  1898 00:0142: B2 05        	lda	(<R1)
  1899 00:0144: 85 01        	sta	<R0
  1900 00:0146: A0 02 00     	ldy	#$2
  1901 00:0149: B1 05        	lda	(<R1),Y
  1902 00:014B: 85 03        	sta	<R0+2
  1903 00:014D: A0 01 00     	ldy	#$1
  1904 00:0150: B7 01        	lda	[<R0],Y
  1905 00:0152: 29 FF 00     	and	#$ff
  1906 00:0155: D0 03        	bne	L21
  1907 00:0157: 82 06 00     	brl	L10008
  1908                        L21:
  1909                        	.line	70
  1910                        ;				return RES_OK;
  1911                        	.line	71
  1912 00:015A: A9 00 00     	lda	#$0
  1913 00:015D: 82 94 FF     	brl	L19
  1914                        ;			}
  1915                        	.line	72
  1916                        ;		}
  1917                        L10008:
  1918                        	.line	73
  1919                        ;
  1920                        ;		return RES_OK;
  1921                        L10007:
  1922                        	.line	75
  1923 00:0160: A9 00 00     	lda	#$0
  1924 00:0163: 82 8E FF     	brl	L19
  1925                        ;
  Sat Jul 10 2021  1:15                                                Page 37


  1926                        ;		break;
  1927                        	.line	77
  1928                        ;	case DEV_MMC :
  1929                        	.line	78
  1930                        L10009:
  1931                        ;		//result = MMC_disk_status();
  1932                        ;
  1933                        ;		// translate the reslut code here
  1934                        ;
  1935                        ;		return stat;
  1936                        	.line	83
  1937 00:0166: A5 09        	lda	<L15+stat_1
  1938 00:0168: 29 FF 00     	and	#$ff
  1939 00:016B: 82 86 FF     	brl	L19
  1940                        ;
  1941                        ;		break;
  1942                        	.line	85
  1943                        ;	case DEV_USB :
  1944                        	.line	86
  1945                        L10010:
  1946                        ;		//result = USB_disk_status();
  1947                        ;
  1948                        ;		// translate the reslut code here
  1949                        ;
  1950                        ;		return stat;
  1951                        	.line	91
  1952 00:016E: A5 09        	lda	<L15+stat_1
  1953 00:0170: 29 FF 00     	and	#$ff
  1954 00:0173: 82 7E FF     	brl	L19
  1955                        ;	}
  1956                        	.line	92
  1957                        L10001:
  1958                        	xref	~~~fsw
  1959 00:0176: 22 xx xx xx  	jsl	~~~fsw
  1960 00:017A: 01 00        	dw	1
  1961 00:017C: 04 00        	dw	4
  1962 00:017E: xx xx        	dw	L10002-1
  1963 00:0180: xx xx        	dw	L10009-1
  1964 00:0182: xx xx        	dw	L10010-1
  1965 00:0184: xx xx        	dw	L10003-1
  1966 00:0186: xx xx        	dw	L10006-1
  1967                        L10002:
  1968                        ;	return STA_NOINIT;
  1969                        	.line	93
  1970 00:0188: A9 01 00     	lda	#$1
  1971 00:018B: 82 66 FF     	brl	L19
  1972                        ;}
  1973                        	.line	94
  1974                        	.endblock	94
  1975             0000000B   L14	equ	11
  1976             00000009   L15	equ	9
  1977                        	ends
  1978                        	efunc
  1979                        	.endfunc	94,9,11
  1980                        	.line	94
  1981                        ;
  1982                        ;
  1983                        ;
  Sat Jul 10 2021  1:15                                                Page 38


  1984                        ;/*-----------------------------------------------
                    ------------------------*/
  1985                        ;/* Inidialize a Drive                            
                                            */
  1986                        ;/*-----------------------------------------------
                    ------------------------*/
  1987                        ;
  1988                        ;DSTATUS disk_initialize (
  1989                        ;	BYTE pdrv				/* Physi
                    cal drive nmuber to identify the drive */
  1990                        ;)
  1991                        ;{
  1992                        	.line	102
  1993                        	.line	105
  1994                        	code
  1995                        	xdef	~~disk_initialize
  1996                        	func
  1997                        	.function	105
  1998                        ~~disk_initialize:
  1999                        	longa	on
  2000                        	longi	on
  2001 00:018E: 3B           	tsc
  2002 00:018F: 38           	sec
  2003 00:0190: E9 0B 00     	sbc	#L22
  2004 00:0193: 1B           	tcs
  2005 00:0194: 0B           	phd
  2006 00:0195: 5B           	tcd
  2007             00000004   pdrv_0	set	4
  2008                        	.block	105
  2009                        ;	DSTATUS stat = STA_NOINIT;
  2010                        ;	int result = 0;
  2011                        ;
  2012                        ;	//k_debug_hex("disk_initialize:",pdrv);
  2013                        ;	//k_debuginteger( "------- disk_initialize:dev:"
                    ,pdrv);
  2014                        ;	//k_debugstring("------- disk_initialize...\r\n"
                    );
  2015                        ;
  2016                        ;	switch (pdrv)
  2017             00000000   stat_1	set	0
  2018             00000001   result_1	set	1
  2019                        	.sym	stat,0,14,1,8
  2020                        	.sym	result,1,5,1,16
  2021                        	.sym	pdrv,4,14,6,8
  2022 00:0196: E2 20        	sep	#$20
  2023                        	longa	off
  2024 00:0198: A9 01        	lda	#$1
  2025 00:019A: 85 09        	sta	<L23+stat_1
  2026 00:019C: C2 20        	rep	#$20
  2027                        	longa	on
  2028 00:019E: 64 0A        	stz	<L23+result_1
  2029                        	.line	113
  2030 00:01A0: A5 0F        	lda	<L22+pdrv_0
  2031 00:01A2: 29 FF 00     	and	#$ff
  2032 00:01A5: 82 62 02     	brl	L10011
  2033                        ;	{
  2034                        	.line	114
  2035                        ;	case 0x03 :
  Sat Jul 10 2021  1:15                                                Page 39


  2036                        	.line	115
  2037                        L10013:
  2038                        ;		if(diskioDevices[pdrv] == NULL)
  2039                        	.line	116
  2040                        ;		{
  2041 00:01A8: A5 0F        	lda	<L22+pdrv_0
  2042 00:01AA: 29 FF 00     	and	#$ff
  2043 00:01AD: 85 05        	sta	<R1
  2044 00:01AF: A5 05        	lda	<R1
  2045 00:01B1: 0A           	asl	A
  2046 00:01B2: 0A           	asl	A
  2047 00:01B3: 85 01        	sta	<R0
  2048 00:01B5: 18           	clc
  2049 00:01B6: A9 xx xx     	lda	#<~~diskioDevices
  2050 00:01B9: 65 01        	adc	<R0
  2051 00:01BB: 85 05        	sta	<R1
  2052 00:01BD: B2 05        	lda	(<R1)
  2053 00:01BF: A0 02 00     	ldy	#$2
  2054 00:01C2: 11 05        	ora	(<R1),Y
  2055 00:01C4: F0 03        	beq	L25
  2056 00:01C6: 82 2E 00     	brl	L10014
  2057                        L25:
  2058                        	.line	117
  2059                        ;			//k_debug_hex("FIRST disk_initia
                    lize:",pdrv);
  2060                        ;			diskioDevices[pdrv] =  k_create_
                    dos_device(FXDOS_SDC);
  2061                        	.line	119
  2062 00:01C9: A5 0F        	lda	<L22+pdrv_0
  2063 00:01CB: 29 FF 00     	and	#$ff
  2064 00:01CE: 85 05        	sta	<R1
  2065 00:01D0: A5 05        	lda	<R1
  2066 00:01D2: 0A           	asl	A
  2067 00:01D3: 0A           	asl	A
  2068 00:01D4: 85 01        	sta	<R0
  2069 00:01D6: 18           	clc
  2070 00:01D7: A9 xx xx     	lda	#<~~diskioDevices
  2071 00:01DA: 65 01        	adc	<R0
  2072 00:01DC: 85 05        	sta	<R1
  2073 00:01DE: F4 05 00     	pea	#<$5
  2074 00:01E1: 22 xx xx xx  	jsl	~~k_create_dos_device
  2075 00:01E5: 85 01        	sta	<R0
  2076 00:01E7: 86 03        	stx	<R0+2
  2077 00:01E9: A5 01        	lda	<R0
  2078 00:01EB: 92 05        	sta	(<R1)
  2079 00:01ED: A5 03        	lda	<R0+2
  2080 00:01EF: A0 02 00     	ldy	#$2
  2081 00:01F2: 91 05        	sta	(<R1),Y
  2082                        ;		}
  2083                        	.line	120
  2084                        ;		else
  2085 00:01F4: 82 7D 00     	brl	L10015
  2086                        L10014:
  2087                        ;		{
  2088                        	.line	122
  2089                        ;			if(diskioDevices[pdrv]->initiali
                    zed != TRUE)
  2090                        	.line	123
  Sat Jul 10 2021  1:15                                                Page 40


  2091                        ;			{
  2092 00:01F7: A5 0F        	lda	<L22+pdrv_0
  2093 00:01F9: 29 FF 00     	and	#$ff
  2094 00:01FC: 85 05        	sta	<R1
  2095 00:01FE: A5 05        	lda	<R1
  2096 00:0200: 0A           	asl	A
  2097 00:0201: 0A           	asl	A
  2098 00:0202: 85 01        	sta	<R0
  2099 00:0204: 18           	clc
  2100 00:0205: A9 xx xx     	lda	#<~~diskioDevices
  2101 00:0208: 65 01        	adc	<R0
  2102 00:020A: 85 05        	sta	<R1
  2103 00:020C: B2 05        	lda	(<R1)
  2104 00:020E: 85 01        	sta	<R0
  2105 00:0210: A0 02 00     	ldy	#$2
  2106 00:0213: B1 05        	lda	(<R1),Y
  2107 00:0215: 85 03        	sta	<R0+2
  2108 00:0217: E2 20        	sep	#$20
  2109                        	longa	off
  2110 00:0219: A0 01 00     	ldy	#$1
  2111 00:021C: B7 01        	lda	[<R0],Y
  2112 00:021E: C9 01        	cmp	#<$1
  2113 00:0220: C2 20        	rep	#$20
  2114                        	longa	on
  2115 00:0222: D0 03        	bne	L26
  2116 00:0224: 82 4D 00     	brl	L10016
  2117                        L26:
  2118                        	.line	124
  2119                        ;				//k_debug_hex("RESTART d
                    isk_initialize:",pdrv);
  2120                        ;				k_mem_deallocate_heap(di
                    skioDevices[pdrv]);
  2121                        	.line	126
  2122 00:0227: A5 0F        	lda	<L22+pdrv_0
  2123 00:0229: 29 FF 00     	and	#$ff
  2124 00:022C: 85 05        	sta	<R1
  2125 00:022E: A5 05        	lda	<R1
  2126 00:0230: 0A           	asl	A
  2127 00:0231: 0A           	asl	A
  2128 00:0232: 85 01        	sta	<R0
  2129 00:0234: 18           	clc
  2130 00:0235: A9 xx xx     	lda	#<~~diskioDevices
  2131 00:0238: 65 01        	adc	<R0
  2132 00:023A: 85 05        	sta	<R1
  2133 00:023C: A0 02 00     	ldy	#$2
  2134 00:023F: B1 05        	lda	(<R1),Y
  2135 00:0241: 48           	pha
  2136 00:0242: B2 05        	lda	(<R1)
  2137 00:0244: 48           	pha
  2138 00:0245: 22 xx xx xx  	jsl	~~k_mem_deallocate_heap
  2139                        ;				diskioDevices[pdrv] =  k
                    _create_dos_device(FXDOS_SDC);
  2140                        	.line	127
  2141 00:0249: A5 0F        	lda	<L22+pdrv_0
  2142 00:024B: 29 FF 00     	and	#$ff
  2143 00:024E: 85 05        	sta	<R1
  2144 00:0250: A5 05        	lda	<R1
  2145 00:0252: 0A           	asl	A
  Sat Jul 10 2021  1:15                                                Page 41


  2146 00:0253: 0A           	asl	A
  2147 00:0254: 85 01        	sta	<R0
  2148 00:0256: 18           	clc
  2149 00:0257: A9 xx xx     	lda	#<~~diskioDevices
  2150 00:025A: 65 01        	adc	<R0
  2151 00:025C: 85 05        	sta	<R1
  2152 00:025E: F4 05 00     	pea	#<$5
  2153 00:0261: 22 xx xx xx  	jsl	~~k_create_dos_device
  2154 00:0265: 85 01        	sta	<R0
  2155 00:0267: 86 03        	stx	<R0+2
  2156 00:0269: A5 01        	lda	<R0
  2157 00:026B: 92 05        	sta	(<R1)
  2158 00:026D: A5 03        	lda	<R0+2
  2159 00:026F: A0 02 00     	ldy	#$2
  2160 00:0272: 91 05        	sta	(<R1),Y
  2161                        ;			}
  2162                        	.line	128
  2163                        ;		}
  2164                        L10016:
  2165                        	.line	129
  2166                        L10015:
  2167                        ;
  2168                        ;		if(diskioDevices[pdrv] && diskioDevices[
                    pdrv]->initialized)
  2169                        	.line	131
  2170                        ;			stat = 0x00;
  2171 00:0274: A5 0F        	lda	<L22+pdrv_0
  2172 00:0276: 29 FF 00     	and	#$ff
  2173 00:0279: 85 05        	sta	<R1
  2174 00:027B: A5 05        	lda	<R1
  2175 00:027D: 0A           	asl	A
  2176 00:027E: 0A           	asl	A
  2177 00:027F: 85 01        	sta	<R0
  2178 00:0281: 18           	clc
  2179 00:0282: A9 xx xx     	lda	#<~~diskioDevices
  2180 00:0285: 65 01        	adc	<R0
  2181 00:0287: 85 05        	sta	<R1
  2182 00:0289: B2 05        	lda	(<R1)
  2183 00:028B: A0 02 00     	ldy	#$2
  2184 00:028E: 11 05        	ora	(<R1),Y
  2185 00:0290: D0 03        	bne	L27
  2186 00:0292: 82 36 00     	brl	L10017
  2187                        L27:
  2188 00:0295: A5 0F        	lda	<L22+pdrv_0
  2189 00:0297: 29 FF 00     	and	#$ff
  2190 00:029A: 85 05        	sta	<R1
  2191 00:029C: A5 05        	lda	<R1
  2192 00:029E: 0A           	asl	A
  2193 00:029F: 0A           	asl	A
  2194 00:02A0: 85 01        	sta	<R0
  2195 00:02A2: 18           	clc
  2196 00:02A3: A9 xx xx     	lda	#<~~diskioDevices
  2197 00:02A6: 65 01        	adc	<R0
  2198 00:02A8: 85 05        	sta	<R1
  2199 00:02AA: B2 05        	lda	(<R1)
  2200 00:02AC: 85 01        	sta	<R0
  2201 00:02AE: A0 02 00     	ldy	#$2
  2202 00:02B1: B1 05        	lda	(<R1),Y
  Sat Jul 10 2021  1:15                                                Page 42


  2203 00:02B3: 85 03        	sta	<R0+2
  2204 00:02B5: A0 01 00     	ldy	#$1
  2205 00:02B8: B7 01        	lda	[<R0],Y
  2206 00:02BA: 29 FF 00     	and	#$ff
  2207 00:02BD: D0 03        	bne	L28
  2208 00:02BF: 82 09 00     	brl	L10017
  2209                        L28:
  2210                        	.line	132
  2211 00:02C2: E2 20        	sep	#$20
  2212                        	longa	off
  2213 00:02C4: 64 09        	stz	<L23+stat_1
  2214 00:02C6: C2 20        	rep	#$20
  2215                        	longa	on
  2216                        ;		else
  2217 00:02C8: 82 08 00     	brl	L10018
  2218                        L10017:
  2219                        ;			stat = STA_NOINIT;
  2220                        	.line	134
  2221 00:02CB: E2 20        	sep	#$20
  2222                        	longa	off
  2223 00:02CD: A9 01        	lda	#$1
  2224 00:02CF: 85 09        	sta	<L23+stat_1
  2225 00:02D1: C2 20        	rep	#$20
  2226                        	longa	on
  2227                        L10018:
  2228                        ;
  2229                        ;		break;
  2230                        	.line	136
  2231 00:02D3: 82 46 01     	brl	L10012
  2232                        ;	case 0x04:
  2233                        	.line	137
  2234                        L10019:
  2235                        ;
  2236                        ;		if(diskioDevices[pdrv] == NULL)
  2237                        	.line	139
  2238                        ;		{
  2239 00:02D6: A5 0F        	lda	<L22+pdrv_0
  2240 00:02D8: 29 FF 00     	and	#$ff
  2241 00:02DB: 85 05        	sta	<R1
  2242 00:02DD: A5 05        	lda	<R1
  2243 00:02DF: 0A           	asl	A
  2244 00:02E0: 0A           	asl	A
  2245 00:02E1: 85 01        	sta	<R0
  2246 00:02E3: 18           	clc
  2247 00:02E4: A9 xx xx     	lda	#<~~diskioDevices
  2248 00:02E7: 65 01        	adc	<R0
  2249 00:02E9: 85 05        	sta	<R1
  2250 00:02EB: B2 05        	lda	(<R1)
  2251 00:02ED: A0 02 00     	ldy	#$2
  2252 00:02F0: 11 05        	ora	(<R1),Y
  2253 00:02F2: F0 03        	beq	L29
  2254 00:02F4: 82 2E 00     	brl	L10020
  2255                        L29:
  2256                        	.line	140
  2257                        ;			//k_debug_hex("FIRST HD disk_ini
                    tialize:",pdrv);
  2258                        ;			diskioDevices[pdrv] =  k_create_
                    dos_device(FXDOS_HDD);
  Sat Jul 10 2021  1:15                                                Page 43


  2259                        	.line	142
  2260 00:02F7: A5 0F        	lda	<L22+pdrv_0
  2261 00:02F9: 29 FF 00     	and	#$ff
  2262 00:02FC: 85 05        	sta	<R1
  2263 00:02FE: A5 05        	lda	<R1
  2264 00:0300: 0A           	asl	A
  2265 00:0301: 0A           	asl	A
  2266 00:0302: 85 01        	sta	<R0
  2267 00:0304: 18           	clc
  2268 00:0305: A9 xx xx     	lda	#<~~diskioDevices
  2269 00:0308: 65 01        	adc	<R0
  2270 00:030A: 85 05        	sta	<R1
  2271 00:030C: F4 06 00     	pea	#<$6
  2272 00:030F: 22 xx xx xx  	jsl	~~k_create_dos_device
  2273 00:0313: 85 01        	sta	<R0
  2274 00:0315: 86 03        	stx	<R0+2
  2275 00:0317: A5 01        	lda	<R0
  2276 00:0319: 92 05        	sta	(<R1)
  2277 00:031B: A5 03        	lda	<R0+2
  2278 00:031D: A0 02 00     	ldy	#$2
  2279 00:0320: 91 05        	sta	(<R1),Y
  2280                        ;		}
  2281                        	.line	143
  2282                        ;		else
  2283 00:0322: 82 7D 00     	brl	L10021
  2284                        L10020:
  2285                        ;		{
  2286                        	.line	145
  2287                        ;			if(diskioDevices[pdrv]->initiali
                    zed != TRUE)
  2288                        	.line	146
  2289                        ;			{
  2290 00:0325: A5 0F        	lda	<L22+pdrv_0
  2291 00:0327: 29 FF 00     	and	#$ff
  2292 00:032A: 85 05        	sta	<R1
  2293 00:032C: A5 05        	lda	<R1
  2294 00:032E: 0A           	asl	A
  2295 00:032F: 0A           	asl	A
  2296 00:0330: 85 01        	sta	<R0
  2297 00:0332: 18           	clc
  2298 00:0333: A9 xx xx     	lda	#<~~diskioDevices
  2299 00:0336: 65 01        	adc	<R0
  2300 00:0338: 85 05        	sta	<R1
  2301 00:033A: B2 05        	lda	(<R1)
  2302 00:033C: 85 01        	sta	<R0
  2303 00:033E: A0 02 00     	ldy	#$2
  2304 00:0341: B1 05        	lda	(<R1),Y
  2305 00:0343: 85 03        	sta	<R0+2
  2306 00:0345: E2 20        	sep	#$20
  2307                        	longa	off
  2308 00:0347: A0 01 00     	ldy	#$1
  2309 00:034A: B7 01        	lda	[<R0],Y
  2310 00:034C: C9 01        	cmp	#<$1
  2311 00:034E: C2 20        	rep	#$20
  2312                        	longa	on
  2313 00:0350: D0 03        	bne	L30
  2314 00:0352: 82 4D 00     	brl	L10022
  2315                        L30:
  Sat Jul 10 2021  1:15                                                Page 44


  2316                        	.line	147
  2317                        ;				//k_debug_hex("RESTART H
                    D disk_initialize:",pdrv);
  2318                        ;				k_mem_deallocate_heap(di
                    skioDevices[pdrv]);
  2319                        	.line	149
  2320 00:0355: A5 0F        	lda	<L22+pdrv_0
  2321 00:0357: 29 FF 00     	and	#$ff
  2322 00:035A: 85 05        	sta	<R1
  2323 00:035C: A5 05        	lda	<R1
  2324 00:035E: 0A           	asl	A
  2325 00:035F: 0A           	asl	A
  2326 00:0360: 85 01        	sta	<R0
  2327 00:0362: 18           	clc
  2328 00:0363: A9 xx xx     	lda	#<~~diskioDevices
  2329 00:0366: 65 01        	adc	<R0
  2330 00:0368: 85 05        	sta	<R1
  2331 00:036A: A0 02 00     	ldy	#$2
  2332 00:036D: B1 05        	lda	(<R1),Y
  2333 00:036F: 48           	pha
  2334 00:0370: B2 05        	lda	(<R1)
  2335 00:0372: 48           	pha
  2336 00:0373: 22 xx xx xx  	jsl	~~k_mem_deallocate_heap
  2337                        ;				diskioDevices[pdrv] =  k
                    _create_dos_device(FXDOS_HDD);
  2338                        	.line	150
  2339 00:0377: A5 0F        	lda	<L22+pdrv_0
  2340 00:0379: 29 FF 00     	and	#$ff
  2341 00:037C: 85 05        	sta	<R1
  2342 00:037E: A5 05        	lda	<R1
  2343 00:0380: 0A           	asl	A
  2344 00:0381: 0A           	asl	A
  2345 00:0382: 85 01        	sta	<R0
  2346 00:0384: 18           	clc
  2347 00:0385: A9 xx xx     	lda	#<~~diskioDevices
  2348 00:0388: 65 01        	adc	<R0
  2349 00:038A: 85 05        	sta	<R1
  2350 00:038C: F4 06 00     	pea	#<$6
  2351 00:038F: 22 xx xx xx  	jsl	~~k_create_dos_device
  2352 00:0393: 85 01        	sta	<R0
  2353 00:0395: 86 03        	stx	<R0+2
  2354 00:0397: A5 01        	lda	<R0
  2355 00:0399: 92 05        	sta	(<R1)
  2356 00:039B: A5 03        	lda	<R0+2
  2357 00:039D: A0 02 00     	ldy	#$2
  2358 00:03A0: 91 05        	sta	(<R1),Y
  2359                        ;			}
  2360                        	.line	151
  2361                        ;		}
  2362                        L10022:
  2363                        	.line	152
  2364                        L10021:
  2365                        ;
  2366                        ;		if(diskioDevices[pdrv] && diskioDevices[
                    pdrv]->initialized)
  2367                        	.line	154
  2368                        ;			stat = 0x00;
  2369 00:03A2: A5 0F        	lda	<L22+pdrv_0
  Sat Jul 10 2021  1:15                                                Page 45


  2370 00:03A4: 29 FF 00     	and	#$ff
  2371 00:03A7: 85 05        	sta	<R1
  2372 00:03A9: A5 05        	lda	<R1
  2373 00:03AB: 0A           	asl	A
  2374 00:03AC: 0A           	asl	A
  2375 00:03AD: 85 01        	sta	<R0
  2376 00:03AF: 18           	clc
  2377 00:03B0: A9 xx xx     	lda	#<~~diskioDevices
  2378 00:03B3: 65 01        	adc	<R0
  2379 00:03B5: 85 05        	sta	<R1
  2380 00:03B7: B2 05        	lda	(<R1)
  2381 00:03B9: A0 02 00     	ldy	#$2
  2382 00:03BC: 11 05        	ora	(<R1),Y
  2383 00:03BE: D0 03        	bne	L31
  2384 00:03C0: 82 36 00     	brl	L10023
  2385                        L31:
  2386 00:03C3: A5 0F        	lda	<L22+pdrv_0
  2387 00:03C5: 29 FF 00     	and	#$ff
  2388 00:03C8: 85 05        	sta	<R1
  2389 00:03CA: A5 05        	lda	<R1
  2390 00:03CC: 0A           	asl	A
  2391 00:03CD: 0A           	asl	A
  2392 00:03CE: 85 01        	sta	<R0
  2393 00:03D0: 18           	clc
  2394 00:03D1: A9 xx xx     	lda	#<~~diskioDevices
  2395 00:03D4: 65 01        	adc	<R0
  2396 00:03D6: 85 05        	sta	<R1
  2397 00:03D8: B2 05        	lda	(<R1)
  2398 00:03DA: 85 01        	sta	<R0
  2399 00:03DC: A0 02 00     	ldy	#$2
  2400 00:03DF: B1 05        	lda	(<R1),Y
  2401 00:03E1: 85 03        	sta	<R0+2
  2402 00:03E3: A0 01 00     	ldy	#$1
  2403 00:03E6: B7 01        	lda	[<R0],Y
  2404 00:03E8: 29 FF 00     	and	#$ff
  2405 00:03EB: D0 03        	bne	L32
  2406 00:03ED: 82 09 00     	brl	L10023
  2407                        L32:
  2408                        	.line	155
  2409 00:03F0: E2 20        	sep	#$20
  2410                        	longa	off
  2411 00:03F2: 64 09        	stz	<L23+stat_1
  2412 00:03F4: C2 20        	rep	#$20
  2413                        	longa	on
  2414                        ;		else
  2415 00:03F6: 82 08 00     	brl	L10024
  2416                        L10023:
  2417                        ;			stat = STA_NOINIT;
  2418                        	.line	157
  2419 00:03F9: E2 20        	sep	#$20
  2420                        	longa	off
  2421 00:03FB: A9 01        	lda	#$1
  2422 00:03FD: 85 09        	sta	<L23+stat_1
  2423 00:03FF: C2 20        	rep	#$20
  2424                        	longa	on
  2425                        L10024:
  2426                        ;
  2427                        ;
  Sat Jul 10 2021  1:15                                                Page 46


  2428                        ;		break;
  2429                        	.line	160
  2430 00:0401: 82 18 00     	brl	L10012
  2431                        ;	case DEV_MMC :
  2432                        	.line	161
  2433                        L10025:
  2434                        ;		//result = MMC_disk_initialize();
  2435                        ;
  2436                        ;		// translate the reslut code here
  2437                        ;
  2438                        ;		//return stat;
  2439                        ;		break;
  2440                        	.line	167
  2441 00:0404: 82 15 00     	brl	L10012
  2442                        ;	case DEV_USB :
  2443                        	.line	168
  2444                        L10026:
  2445                        ;		//result = USB_disk_initialize();
  2446                        ;
  2447                        ;		// translate the reslut code here
  2448                        ;
  2449                        ;		//return stat;
  2450                        ;		break;
  2451                        	.line	174
  2452 00:0407: 82 12 00     	brl	L10012
  2453                        ;	}
  2454                        	.line	175
  2455                        L10011:
  2456                        	xref	~~~fsw
  2457 00:040A: 22 xx xx xx  	jsl	~~~fsw
  2458 00:040E: 01 00        	dw	1
  2459 00:0410: 04 00        	dw	4
  2460 00:0412: xx xx        	dw	L10012-1
  2461 00:0414: xx xx        	dw	L10025-1
  2462 00:0416: xx xx        	dw	L10026-1
  2463 00:0418: xx xx        	dw	L10013-1
  2464 00:041A: xx xx        	dw	L10019-1
  2465                        L10012:
  2466                        ;
  2467                        ;	//k_debugstring("------- disk_initialize exit\r\
                    n");
  2468                        ;
  2469                        ;	return stat;
  2470                        	.line	179
  2471 00:041C: A5 09        	lda	<L23+stat_1
  2472 00:041E: 29 FF 00     	and	#$ff
  2473                        L33:
  2474 00:0421: A8           	tay
  2475 00:0422: A5 0D        	lda	<L22+2
  2476 00:0424: 85 0F        	sta	<L22+2+2
  2477 00:0426: A5 0C        	lda	<L22+1
  2478 00:0428: 85 0E        	sta	<L22+1+2
  2479 00:042A: 2B           	pld
  2480 00:042B: 3B           	tsc
  2481 00:042C: 18           	clc
  2482 00:042D: 69 0D 00     	adc	#L22+2
  2483 00:0430: 1B           	tcs
  2484 00:0431: 98           	tya
  Sat Jul 10 2021  1:15                                                Page 47


  2485 00:0432: 6B           	rtl
  2486                        ;}
  2487                        	.line	180
  2488                        	.endblock	180
  2489             0000000B   L22	equ	11
  2490             00000009   L23	equ	9
  2491                        	ends
  2492                        	efunc
  2493                        	.endfunc	180,9,11
  2494                        	.line	180
  2495                        ;
  2496                        ;
  2497                        ;
  2498                        ;/*-----------------------------------------------
                    ------------------------*/
  2499                        ;/* Read Sector(s)                                
                                            */
  2500                        ;/*-----------------------------------------------
                    ------------------------*/
  2501                        ;
  2502                        ;DRESULT disk_read (
  2503                        ;	BYTE pdrv,		/* Physical drive nmuber
                     to identify the drive */
  2504                        ;	BYTE *buff,		/* Data buffer to store 
                    read data */
  2505                        ;	LBA_t sector,	/* Start sector in LBA */
  2506                        ;	UINT count		/* Number of sectors to 
                    read */
  2507                        ;)
  2508                        ;{
  2509                        	.line	188
  2510                        	.line	194
  2511                        	code
  2512                        	xdef	~~disk_read
  2513                        	func
  2514                        	.function	194
  2515                        ~~disk_read:
  2516                        	longa	on
  2517                        	longi	on
  2518 00:0433: 3B           	tsc
  2519 00:0434: 38           	sec
  2520 00:0435: E9 16 00     	sbc	#L34
  2521 00:0438: 1B           	tcs
  2522 00:0439: 0B           	phd
  2523 00:043A: 5B           	tcd
  2524             00000004   pdrv_0	set	4
  2525             00000006   buff_0	set	6
  2526             0000000A   sector_0	set	10
  2527             0000000E   count_0	set	14
  2528                        	.block	194
  2529                        ;	DRESULT res;
  2530                        ;	int result = RES_PARERR;
  2531                        ;	int i;
  2532                        ;
  2533                        ;	//k_debuginteger( "------- disk_read:dev:",pdrv)
                    ;
  2534                        ;	//k_debuglong("------- disk_read:sector:",sector
                    );
  Sat Jul 10 2021  1:15                                                Page 48


  2535                        ;	//k_debug_integer("------- disk_read:count:",cou
                    nt);
  2536                        ;
  2537                        ;	//k_debug_hex("disk_read:",pdrv);
  2538                        ;
  2539                        ;	switch (pdrv) {
  2540             00000000   res_1	set	0
  2541             00000002   result_1	set	2
  2542             00000004   i_1	set	4
  2543                        	.sym	res,0,5,1,16
  2544                        	.sym	result,2,5,1,16
  2545                        	.sym	i,4,5,1,16
  2546                        	.sym	pdrv,4,14,6,8
  2547                        	.sym	buff,6,142,6,32
  2548                        	.sym	sector,10,18,6,32
  2549                        	.sym	count,14,16,6,16
  2550 00:043B: A9 04 00     	lda	#$4
  2551 00:043E: 85 13        	sta	<L35+result_1
  2552                        	.line	205
  2553 00:0440: A5 1A        	lda	<L34+pdrv_0
  2554 00:0442: 29 FF 00     	and	#$ff
  2555 00:0445: 82 39 01     	brl	L10027
  2556                        	.line	205
  2557                        ;	case 0x03 :
  2558                        	.line	206
  2559                        L10029:
  2560                        ;		// translate the arguments here
  2561                        ;
  2562                        ;		//k_debugpointer( "------- disk_read:dis
                    kioDevices[pdrv]:",diskioDevices[pdrv]);
  2563                        ;
  2564                        ;		if(diskioDevices[pdrv]!=NULL)
  2565                        	.line	211
  2566                        ;		{
  2567 00:0448: A5 1A        	lda	<L34+pdrv_0
  2568 00:044A: 29 FF 00     	and	#$ff
  2569 00:044D: 85 05        	sta	<R1
  2570 00:044F: A5 05        	lda	<R1
  2571 00:0451: 0A           	asl	A
  2572 00:0452: 0A           	asl	A
  2573 00:0453: 85 01        	sta	<R0
  2574 00:0455: 18           	clc
  2575 00:0456: A9 xx xx     	lda	#<~~diskioDevices
  2576 00:0459: 65 01        	adc	<R0
  2577 00:045B: 85 05        	sta	<R1
  2578 00:045D: B2 05        	lda	(<R1)
  2579 00:045F: A0 02 00     	ldy	#$2
  2580 00:0462: 11 05        	ora	(<R1),Y
  2581 00:0464: D0 03        	bne	L37
  2582 00:0466: 82 7D 00     	brl	L10030
  2583                        L37:
  2584                        	.line	212
  2585                        ;			//k_debugpointer( "------- disk_
                    read:buff:",buff);
  2586                        ;
  2587                        ;			for(i=0;i<count;i++)
  2588                        	.line	215
  2589 00:0469: 64 15        	stz	<L35+i_1
  Sat Jul 10 2021  1:15                                                Page 49


  2590 00:046B: 82 6D 00     	brl	L10034
  2591                        L10033:
  2592                        ;			{
  2593                        	.line	216
  2594                        ;				//if(count > 1)
  2595                        ;				//{
  2596                        ;				//	k_debug_integer(
                     "------- disk_read:dev:count:",i);
  2597                        ;				//}
  2598                        ;				diskioDevices[pdrv]->pfR
                    eader((sector + i) * 512,buff);
  2599                        	.line	221
  2600 00:046E: D4 1E        	pei	<L34+buff_0+2
  2601 00:0470: D4 1C        	pei	<L34+buff_0
  2602 00:0472: A0 00 00     	ldy	#$0
  2603 00:0475: A5 15        	lda	<L35+i_1
  2604 00:0477: 10 01        	bpl	L38
  2605 00:0479: 88           	dey
  2606                        L38:
  2607 00:047A: 85 05        	sta	<R1
  2608 00:047C: 84 07        	sty	<R1+2
  2609 00:047E: 18           	clc
  2610 00:047F: A5 05        	lda	<R1
  2611 00:0481: 65 20        	adc	<L34+sector_0
  2612 00:0483: 85 09        	sta	<R2
  2613 00:0485: A5 07        	lda	<R1+2
  2614 00:0487: 65 22        	adc	<L34+sector_0+2
  2615 00:0489: 85 0B        	sta	<R2+2
  2616 00:048B: D4 0B        	pei	<R2+2
  2617 00:048D: D4 09        	pei	<R2
  2618 00:048F: A9 09 00     	lda	#$9
  2619                        	xref	~~~lasl
  2620 00:0492: 22 xx xx xx  	jsl	~~~lasl
  2621 00:0496: 85 01        	sta	<R0
  2622 00:0498: 86 03        	stx	<R0+2
  2623 00:049A: D4 03        	pei	<R0+2
  2624 00:049C: D4 01        	pei	<R0
  2625 00:049E: A5 1A        	lda	<L34+pdrv_0
  2626 00:04A0: 29 FF 00     	and	#$ff
  2627 00:04A3: 85 0D        	sta	<R3
  2628 00:04A5: A5 0D        	lda	<R3
  2629 00:04A7: 0A           	asl	A
  2630 00:04A8: 0A           	asl	A
  2631 00:04A9: 85 05        	sta	<R1
  2632 00:04AB: 18           	clc
  2633 00:04AC: A9 xx xx     	lda	#<~~diskioDevices
  2634 00:04AF: 65 05        	adc	<R1
  2635 00:04B1: 85 0D        	sta	<R3
  2636 00:04B3: B2 0D        	lda	(<R3)
  2637 00:04B5: 85 05        	sta	<R1
  2638 00:04B7: A0 02 00     	ldy	#$2
  2639 00:04BA: B1 0D        	lda	(<R3),Y
  2640 00:04BC: 85 07        	sta	<R1+2
  2641 00:04BE: A0 C8 02     	ldy	#$2c8
  2642 00:04C1: B7 05        	lda	[<R1],Y
  2643 00:04C3: AA           	tax
  2644 00:04C4: A0 C6 02     	ldy	#$2c6
  2645 00:04C7: B7 05        	lda	[<R1],Y
  Sat Jul 10 2021  1:15                                                Page 50


  2646                        	xref	~~~lcal
  2647 00:04C9: 22 xx xx xx  	jsl	~~~lcal
  2648                        ;				buff+=512;
  2649                        	.line	222
  2650 00:04CD: 18           	clc
  2651 00:04CE: A9 00 02     	lda	#$200
  2652 00:04D1: 65 1C        	adc	<L34+buff_0
  2653 00:04D3: 85 1C        	sta	<L34+buff_0
  2654 00:04D5: 90 02        	bcc	L39
  2655 00:04D7: E6 1E        	inc	<L34+buff_0+2
  2656                        L39:
  2657                        ;			}
  2658                        	.line	223
  2659                        L10031:
  2660 00:04D9: E6 15        	inc	<L35+i_1
  2661                        L10034:
  2662 00:04DB: A5 15        	lda	<L35+i_1
  2663 00:04DD: C5 24        	cmp	<L34+count_0
  2664 00:04DF: B0 03        	bcs	L40
  2665 00:04E1: 82 8A FF     	brl	L10033
  2666                        L40:
  2667                        L10032:
  2668                        ;			//k_debugbyte_array("------- dis
                    k_read:buff:data:\r\n",buff,512);
  2669                        ;
  2670                        ;			//result = RAM_disk_read(buff, s
                    ector, count);
  2671                        ;
  2672                        ;			// translate the reslut code her
                    e
  2673                        ;
  2674                        ;			res = RES_OK;
  2675                        	.line	230
  2676 00:04E4: 64 11        	stz	<L35+res_1
  2677                        ;		}
  2678                        	.line	231
  2679                        ;		break;
  2680                        L10030:
  2681                        	.line	232
  2682 00:04E6: 82 AA 00     	brl	L10028
  2683                        ;
  2684                        ;	case 0x04 :
  2685                        	.line	234
  2686                        L10035:
  2687                        ;		// translate the arguments here
  2688                        ;
  2689                        ;		//k_debugpointer( "------- disk_read:dis
                    kioDevices[pdrv]:",diskioDevices[pdrv]);
  2690                        ;
  2691                        ;		if(diskioDevices[pdrv]!=NULL)
  2692                        	.line	239
  2693                        ;		{
  2694 00:04E9: A5 1A        	lda	<L34+pdrv_0
  2695 00:04EB: 29 FF 00     	and	#$ff
  2696 00:04EE: 85 05        	sta	<R1
  2697 00:04F0: A5 05        	lda	<R1
  2698 00:04F2: 0A           	asl	A
  2699 00:04F3: 0A           	asl	A
  Sat Jul 10 2021  1:15                                                Page 51


  2700 00:04F4: 85 01        	sta	<R0
  2701 00:04F6: 18           	clc
  2702 00:04F7: A9 xx xx     	lda	#<~~diskioDevices
  2703 00:04FA: 65 01        	adc	<R0
  2704 00:04FC: 85 05        	sta	<R1
  2705 00:04FE: B2 05        	lda	(<R1)
  2706 00:0500: A0 02 00     	ldy	#$2
  2707 00:0503: 11 05        	ora	(<R1),Y
  2708 00:0505: D0 03        	bne	L41
  2709 00:0507: 82 6E 00     	brl	L10036
  2710                        L41:
  2711                        	.line	240
  2712                        ;			//k_debugpointer( "------- disk_
                    read:buff:",buff);
  2713                        ;
  2714                        ;			for(i=0;i<count;i++)
  2715                        	.line	243
  2716 00:050A: 64 15        	stz	<L35+i_1
  2717 00:050C: 82 5E 00     	brl	L10040
  2718                        L10039:
  2719                        ;			{
  2720                        	.line	244
  2721                        ;				//if(count > 1)
  2722                        ;				//{
  2723                        ;				//	k_debug_integer(
                     "------- disk_read:dev:count:",i);
  2724                        ;				//}
  2725                        ;				diskioDevices[pdrv]->pfR
                    eader((sector + i),buff);
  2726                        	.line	249
  2727 00:050F: D4 1E        	pei	<L34+buff_0+2
  2728 00:0511: D4 1C        	pei	<L34+buff_0
  2729 00:0513: A0 00 00     	ldy	#$0
  2730 00:0516: A5 15        	lda	<L35+i_1
  2731 00:0518: 10 01        	bpl	L42
  2732 00:051A: 88           	dey
  2733                        L42:
  2734 00:051B: 85 01        	sta	<R0
  2735 00:051D: 84 03        	sty	<R0+2
  2736 00:051F: 18           	clc
  2737 00:0520: A5 01        	lda	<R0
  2738 00:0522: 65 20        	adc	<L34+sector_0
  2739 00:0524: 85 05        	sta	<R1
  2740 00:0526: A5 03        	lda	<R0+2
  2741 00:0528: 65 22        	adc	<L34+sector_0+2
  2742 00:052A: 85 07        	sta	<R1+2
  2743 00:052C: D4 07        	pei	<R1+2
  2744 00:052E: D4 05        	pei	<R1
  2745 00:0530: A5 1A        	lda	<L34+pdrv_0
  2746 00:0532: 29 FF 00     	and	#$ff
  2747 00:0535: 85 09        	sta	<R2
  2748 00:0537: A5 09        	lda	<R2
  2749 00:0539: 0A           	asl	A
  2750 00:053A: 0A           	asl	A
  2751 00:053B: 85 01        	sta	<R0
  2752 00:053D: 18           	clc
  2753 00:053E: A9 xx xx     	lda	#<~~diskioDevices
  2754 00:0541: 65 01        	adc	<R0
  Sat Jul 10 2021  1:15                                                Page 52


  2755 00:0543: 85 09        	sta	<R2
  2756 00:0545: B2 09        	lda	(<R2)
  2757 00:0547: 85 01        	sta	<R0
  2758 00:0549: A0 02 00     	ldy	#$2
  2759 00:054C: B1 09        	lda	(<R2),Y
  2760 00:054E: 85 03        	sta	<R0+2
  2761 00:0550: A0 C8 02     	ldy	#$2c8
  2762 00:0553: B7 01        	lda	[<R0],Y
  2763 00:0555: AA           	tax
  2764 00:0556: A0 C6 02     	ldy	#$2c6
  2765 00:0559: B7 01        	lda	[<R0],Y
  2766                        	xref	~~~lcal
  2767 00:055B: 22 xx xx xx  	jsl	~~~lcal
  2768                        ;				buff+=512;
  2769                        	.line	250
  2770 00:055F: 18           	clc
  2771 00:0560: A9 00 02     	lda	#$200
  2772 00:0563: 65 1C        	adc	<L34+buff_0
  2773 00:0565: 85 1C        	sta	<L34+buff_0
  2774 00:0567: 90 02        	bcc	L43
  2775 00:0569: E6 1E        	inc	<L34+buff_0+2
  2776                        L43:
  2777                        ;			}
  2778                        	.line	251
  2779                        L10037:
  2780 00:056B: E6 15        	inc	<L35+i_1
  2781                        L10040:
  2782 00:056D: A5 15        	lda	<L35+i_1
  2783 00:056F: C5 24        	cmp	<L34+count_0
  2784 00:0571: B0 03        	bcs	L44
  2785 00:0573: 82 99 FF     	brl	L10039
  2786                        L44:
  2787                        L10038:
  2788                        ;			//k_debugbyte_array("------- dis
                    k_read:buff:data:\r\n",buff,512);
  2789                        ;
  2790                        ;			//result = RAM_disk_read(buff, s
                    ector, count);
  2791                        ;
  2792                        ;			// translate the reslut code her
                    e
  2793                        ;
  2794                        ;			res = RES_OK;
  2795                        	.line	258
  2796 00:0576: 64 11        	stz	<L35+res_1
  2797                        ;		}
  2798                        	.line	259
  2799                        ;		break;
  2800                        L10036:
  2801                        	.line	260
  2802 00:0578: 82 18 00     	brl	L10028
  2803                        ;
  2804                        ;	case DEV_MMC :
  2805                        	.line	262
  2806                        L10041:
  2807                        ;		// translate the arguments here
  2808                        ;
  2809                        ;		//result = MMC_disk_read(buff, sector, c
  Sat Jul 10 2021  1:15                                                Page 53


                    ount);
  2810                        ;
  2811                        ;		// translate the reslut code here
  2812                        ;
  2813                        ;		//return res;
  2814                        ;		break;
  2815                        	.line	270
  2816 00:057B: 82 15 00     	brl	L10028
  2817                        ;	case DEV_USB :
  2818                        	.line	271
  2819                        L10042:
  2820                        ;		// translate the arguments here
  2821                        ;
  2822                        ;		//result = USB_disk_read(buff, sector, c
                    ount);
  2823                        ;
  2824                        ;		// translate the reslut code here
  2825                        ;
  2826                        ;		//return res;
  2827                        ;		break;
  2828                        	.line	279
  2829 00:057E: 82 12 00     	brl	L10028
  2830                        ;	}
  2831                        	.line	280
  2832                        L10027:
  2833                        	xref	~~~fsw
  2834 00:0581: 22 xx xx xx  	jsl	~~~fsw
  2835 00:0585: 01 00        	dw	1
  2836 00:0587: 04 00        	dw	4
  2837 00:0589: xx xx        	dw	L10028-1
  2838 00:058B: xx xx        	dw	L10041-1
  2839 00:058D: xx xx        	dw	L10042-1
  2840 00:058F: xx xx        	dw	L10029-1
  2841 00:0591: xx xx        	dw	L10035-1
  2842                        L10028:
  2843                        ;
  2844                        ;	//k_debugstring("------- disk_read exit\r\n");
  2845                        ;
  2846                        ;	return res;
  2847                        	.line	284
  2848 00:0593: A5 11        	lda	<L35+res_1
  2849                        L45:
  2850 00:0595: A8           	tay
  2851 00:0596: A5 18        	lda	<L34+2
  2852 00:0598: 85 24        	sta	<L34+2+12
  2853 00:059A: A5 17        	lda	<L34+1
  2854 00:059C: 85 23        	sta	<L34+1+12
  2855 00:059E: 2B           	pld
  2856 00:059F: 3B           	tsc
  2857 00:05A0: 18           	clc
  2858 00:05A1: 69 22 00     	adc	#L34+12
  2859 00:05A4: 1B           	tcs
  2860 00:05A5: 98           	tya
  2861 00:05A6: 6B           	rtl
  2862                        ;}
  2863                        	.line	285
  2864                        	.endblock	285
  2865             00000016   L34	equ	22
  Sat Jul 10 2021  1:15                                                Page 54


  2866             00000011   L35	equ	17
  2867                        	ends
  2868                        	efunc
  2869                        	.endfunc	285,17,22
  2870                        	.line	285
  2871                        ;
  2872                        ;
  2873                        ;
  2874                        ;/*-----------------------------------------------
                    ------------------------*/
  2875                        ;/* Write Sector(s)                               
                                            */
  2876                        ;/*-----------------------------------------------
                    ------------------------*/
  2877                        ;
  2878                        ;#if FF_FS_READONLY == 0
  2879                        ;
  2880                        ;DRESULT disk_write (
  2881                        ;	BYTE pdrv,			/* Physical driv
                    e nmuber to identify the drive */
  2882                        ;	const BYTE *buff,	/* Data to be written */
  2883                        ;	LBA_t sector,		/* Start sector in LBA *
                    /
  2884                        ;	UINT count			/* Number of sec
                    tors to write */
  2885                        ;)
  2886                        ;{
  2887                        	.line	295
  2888                        	.line	301
  2889                        	code
  2890                        	xdef	~~disk_write
  2891                        	func
  2892                        	.function	301
  2893                        ~~disk_write:
  2894                        	longa	on
  2895                        	longi	on
  2896 00:05A7: 3B           	tsc
  2897 00:05A8: 38           	sec
  2898 00:05A9: E9 16 00     	sbc	#L46
  2899 00:05AC: 1B           	tcs
  2900 00:05AD: 0B           	phd
  2901 00:05AE: 5B           	tcd
  2902             00000004   pdrv_0	set	4
  2903             00000006   buff_0	set	6
  2904             0000000A   sector_0	set	10
  2905             0000000E   count_0	set	14
  2906                        	.block	301
  2907                        ;	int i = 0;
  2908                        ;	DRESULT res = RES_PARERR;
  2909                        ;	int result;
  2910                        ;
  2911                        ;	k_debug_integer("------- disk_write:dev:",pdrv);
  2912             00000000   i_1	set	0
  2913             00000002   res_1	set	2
  2914             00000004   result_1	set	4
  2915                        	.sym	i,0,5,1,16
  2916                        	.sym	res,2,5,1,16
  2917                        	.sym	result,4,5,1,16
  Sat Jul 10 2021  1:15                                                Page 55


  2918                        	.sym	pdrv,4,14,6,8
  2919                        	.sym	buff,6,142,6,32
  2920                        	.sym	sector,10,18,6,32
  2921                        	.sym	count,14,16,6,16
  2922 00:05AF: 64 11        	stz	<L47+i_1
  2923 00:05B1: A9 04 00     	lda	#$4
  2924 00:05B4: 85 13        	sta	<L47+res_1
  2925                        	.line	306
  2926 00:05B6: A5 1A        	lda	<L46+pdrv_0
  2927 00:05B8: 29 FF 00     	and	#$ff
  2928 00:05BB: 48           	pha
  2929 00:05BC: F4 xx xx     	pea	#^L1
  2930 00:05BF: F4 xx xx     	pea	#<L1
  2931 00:05C2: 22 xx xx xx  	jsl	~~k_debug_integer
  2932                        ;	k_debug_integer("------- disk_write::count:",cou
                    nt);
  2933                        	.line	307
  2934 00:05C6: D4 24        	pei	<L46+count_0
  2935 00:05C8: F4 xx xx     	pea	#^L1+24
  2936 00:05CB: F4 xx xx     	pea	#<L1+24
  2937 00:05CE: 22 xx xx xx  	jsl	~~k_debug_integer
  2938                        ;
  2939                        ;	switch (pdrv) {
  2940                        	.line	309
  2941 00:05D2: A5 1A        	lda	<L46+pdrv_0
  2942 00:05D4: 29 FF 00     	and	#$ff
  2943 00:05D7: 82 DE 01     	brl	L10043
  2944                        	.line	309
  2945                        ;	case 0x03 :
  2946                        	.line	310
  2947                        L10045:
  2948                        ;
  2949                        ;		if(diskioDevices[pdrv] && diskioDevices[
                    pdrv]->pfWriter)
  2950                        	.line	312
  2951                        ;		{
  2952 00:05DA: A5 1A        	lda	<L46+pdrv_0
  2953 00:05DC: 29 FF 00     	and	#$ff
  2954 00:05DF: 85 05        	sta	<R1
  2955 00:05E1: A5 05        	lda	<R1
  2956 00:05E3: 0A           	asl	A
  2957 00:05E4: 0A           	asl	A
  2958 00:05E5: 85 01        	sta	<R0
  2959 00:05E7: 18           	clc
  2960 00:05E8: A9 xx xx     	lda	#<~~diskioDevices
  2961 00:05EB: 65 01        	adc	<R0
  2962 00:05ED: 85 05        	sta	<R1
  2963 00:05EF: B2 05        	lda	(<R1)
  2964 00:05F1: A0 02 00     	ldy	#$2
  2965 00:05F4: 11 05        	ora	(<R1),Y
  2966 00:05F6: D0 03        	bne	L49
  2967 00:05F8: 82 D3 00     	brl	L10046
  2968                        L49:
  2969 00:05FB: A5 1A        	lda	<L46+pdrv_0
  2970 00:05FD: 29 FF 00     	and	#$ff
  2971 00:0600: 85 05        	sta	<R1
  2972 00:0602: A5 05        	lda	<R1
  2973 00:0604: 0A           	asl	A
  Sat Jul 10 2021  1:15                                                Page 56


  2974 00:0605: 0A           	asl	A
  2975 00:0606: 85 01        	sta	<R0
  2976 00:0608: 18           	clc
  2977 00:0609: A9 xx xx     	lda	#<~~diskioDevices
  2978 00:060C: 65 01        	adc	<R0
  2979 00:060E: 85 05        	sta	<R1
  2980 00:0610: B2 05        	lda	(<R1)
  2981 00:0612: 85 01        	sta	<R0
  2982 00:0614: A0 02 00     	ldy	#$2
  2983 00:0617: B1 05        	lda	(<R1),Y
  2984 00:0619: 85 03        	sta	<R0+2
  2985 00:061B: A0 CA 02     	ldy	#$2ca
  2986 00:061E: B7 01        	lda	[<R0],Y
  2987 00:0620: A0 CC 02     	ldy	#$2cc
  2988 00:0623: 17 01        	ora	[<R0],Y
  2989 00:0625: D0 03        	bne	L50
  2990 00:0627: 82 A4 00     	brl	L10046
  2991                        L50:
  2992                        	.line	313
  2993                        ;			// translate the arguments here
  2994                        ;			for(i=0;i<count;i++)
  2995                        	.line	315
  2996 00:062A: 64 11        	stz	<L47+i_1
  2997 00:062C: 82 96 00     	brl	L10050
  2998                        L10049:
  2999                        ;			{
  3000                        	.line	316
  3001                        ;				result = diskioDevices[p
                    drv]->pfWriter((sector+(ULONG)i)*512L,(BYTE*)buff);
  3002                        	.line	317
  3003 00:062F: D4 1E        	pei	<L46+buff_0+2
  3004 00:0631: D4 1C        	pei	<L46+buff_0
  3005 00:0633: A0 00 00     	ldy	#$0
  3006 00:0636: A5 11        	lda	<L47+i_1
  3007 00:0638: 10 01        	bpl	L51
  3008 00:063A: 88           	dey
  3009                        L51:
  3010 00:063B: 85 05        	sta	<R1
  3011 00:063D: 84 07        	sty	<R1+2
  3012 00:063F: 18           	clc
  3013 00:0640: A5 05        	lda	<R1
  3014 00:0642: 65 20        	adc	<L46+sector_0
  3015 00:0644: 85 09        	sta	<R2
  3016 00:0646: A5 07        	lda	<R1+2
  3017 00:0648: 65 22        	adc	<L46+sector_0+2
  3018 00:064A: 85 0B        	sta	<R2+2
  3019 00:064C: D4 0B        	pei	<R2+2
  3020 00:064E: D4 09        	pei	<R2
  3021 00:0650: A9 09 00     	lda	#$9
  3022                        	xref	~~~lasl
  3023 00:0653: 22 xx xx xx  	jsl	~~~lasl
  3024 00:0657: 85 01        	sta	<R0
  3025 00:0659: 86 03        	stx	<R0+2
  3026 00:065B: D4 03        	pei	<R0+2
  3027 00:065D: D4 01        	pei	<R0
  3028 00:065F: A5 1A        	lda	<L46+pdrv_0
  3029 00:0661: 29 FF 00     	and	#$ff
  3030 00:0664: 85 0D        	sta	<R3
  Sat Jul 10 2021  1:15                                                Page 57


  3031 00:0666: A5 0D        	lda	<R3
  3032 00:0668: 0A           	asl	A
  3033 00:0669: 0A           	asl	A
  3034 00:066A: 85 05        	sta	<R1
  3035 00:066C: 18           	clc
  3036 00:066D: A9 xx xx     	lda	#<~~diskioDevices
  3037 00:0670: 65 05        	adc	<R1
  3038 00:0672: 85 0D        	sta	<R3
  3039 00:0674: B2 0D        	lda	(<R3)
  3040 00:0676: 85 05        	sta	<R1
  3041 00:0678: A0 02 00     	ldy	#$2
  3042 00:067B: B1 0D        	lda	(<R3),Y
  3043 00:067D: 85 07        	sta	<R1+2
  3044 00:067F: A0 CC 02     	ldy	#$2cc
  3045 00:0682: B7 05        	lda	[<R1],Y
  3046 00:0684: AA           	tax
  3047 00:0685: A0 CA 02     	ldy	#$2ca
  3048 00:0688: B7 05        	lda	[<R1],Y
  3049                        	xref	~~~lcal
  3050 00:068A: 22 xx xx xx  	jsl	~~~lcal
  3051 00:068E: E2 20        	sep	#$20
  3052                        	longa	off
  3053 00:0690: 85 05        	sta	<R1
  3054 00:0692: C2 20        	rep	#$20
  3055                        	longa	on
  3056 00:0694: A5 05        	lda	<R1
  3057 00:0696: 29 FF 00     	and	#$ff
  3058 00:0699: 85 15        	sta	<L47+result_1
  3059                        ;				if(result)
  3060                        	.line	318
  3061                        ;				{
  3062 00:069B: A5 15        	lda	<L47+result_1
  3063 00:069D: D0 03        	bne	L52
  3064 00:069F: 82 15 00     	brl	L10051
  3065                        L52:
  3066                        	.line	319
  3067                        ;					return RES_PARER
                    R;
  3068                        	.line	320
  3069 00:06A2: A9 04 00     	lda	#$4
  3070                        L53:
  3071 00:06A5: A8           	tay
  3072 00:06A6: A5 18        	lda	<L46+2
  3073 00:06A8: 85 24        	sta	<L46+2+12
  3074 00:06AA: A5 17        	lda	<L46+1
  3075 00:06AC: 85 23        	sta	<L46+1+12
  3076 00:06AE: 2B           	pld
  3077 00:06AF: 3B           	tsc
  3078 00:06B0: 18           	clc
  3079 00:06B1: 69 22 00     	adc	#L46+12
  3080 00:06B4: 1B           	tcs
  3081 00:06B5: 98           	tya
  3082 00:06B6: 6B           	rtl
  3083                        ;				}
  3084                        	.line	321
  3085                        ;				buff+=512L;
  3086                        L10051:
  3087                        	.line	322
  Sat Jul 10 2021  1:15                                                Page 58


  3088 00:06B7: 18           	clc
  3089 00:06B8: A9 00 02     	lda	#$200
  3090 00:06BB: 65 1C        	adc	<L46+buff_0
  3091 00:06BD: 85 1C        	sta	<L46+buff_0
  3092 00:06BF: 90 02        	bcc	L54
  3093 00:06C1: E6 1E        	inc	<L46+buff_0+2
  3094                        L54:
  3095                        ;			}
  3096                        	.line	323
  3097                        L10047:
  3098 00:06C3: E6 11        	inc	<L47+i_1
  3099                        L10050:
  3100 00:06C5: A5 11        	lda	<L47+i_1
  3101 00:06C7: C5 24        	cmp	<L46+count_0
  3102 00:06C9: B0 03        	bcs	L55
  3103 00:06CB: 82 61 FF     	brl	L10049
  3104                        L55:
  3105                        L10048:
  3106                        ;			// translate the result code her
                    e
  3107                        ;		}
  3108                        	.line	325
  3109                        ;		res = 0;
  3110                        L10046:
  3111                        	.line	326
  3112 00:06CE: 64 13        	stz	<L47+res_1
  3113                        ;
  3114                        ;		break;
  3115                        	.line	328
  3116 00:06D0: 82 F7 00     	brl	L10044
  3117                        ;	case 0x04 :
  3118                        	.line	329
  3119                        L10052:
  3120                        ;
  3121                        ;		if(diskioDevices[pdrv] && diskioDevices[
                    pdrv]->pfWriter)
  3122                        	.line	331
  3123                        ;		{
  3124 00:06D3: A5 1A        	lda	<L46+pdrv_0
  3125 00:06D5: 29 FF 00     	and	#$ff
  3126 00:06D8: 85 05        	sta	<R1
  3127 00:06DA: A5 05        	lda	<R1
  3128 00:06DC: 0A           	asl	A
  3129 00:06DD: 0A           	asl	A
  3130 00:06DE: 85 01        	sta	<R0
  3131 00:06E0: 18           	clc
  3132 00:06E1: A9 xx xx     	lda	#<~~diskioDevices
  3133 00:06E4: 65 01        	adc	<R0
  3134 00:06E6: 85 05        	sta	<R1
  3135 00:06E8: B2 05        	lda	(<R1)
  3136 00:06EA: A0 02 00     	ldy	#$2
  3137 00:06ED: 11 05        	ora	(<R1),Y
  3138 00:06EF: D0 03        	bne	L56
  3139 00:06F1: 82 B5 00     	brl	L10053
  3140                        L56:
  3141 00:06F4: A5 1A        	lda	<L46+pdrv_0
  3142 00:06F6: 29 FF 00     	and	#$ff
  3143 00:06F9: 85 05        	sta	<R1
  Sat Jul 10 2021  1:15                                                Page 59


  3144 00:06FB: A5 05        	lda	<R1
  3145 00:06FD: 0A           	asl	A
  3146 00:06FE: 0A           	asl	A
  3147 00:06FF: 85 01        	sta	<R0
  3148 00:0701: 18           	clc
  3149 00:0702: A9 xx xx     	lda	#<~~diskioDevices
  3150 00:0705: 65 01        	adc	<R0
  3151 00:0707: 85 05        	sta	<R1
  3152 00:0709: B2 05        	lda	(<R1)
  3153 00:070B: 85 01        	sta	<R0
  3154 00:070D: A0 02 00     	ldy	#$2
  3155 00:0710: B1 05        	lda	(<R1),Y
  3156 00:0712: 85 03        	sta	<R0+2
  3157 00:0714: A0 CA 02     	ldy	#$2ca
  3158 00:0717: B7 01        	lda	[<R0],Y
  3159 00:0719: A0 CC 02     	ldy	#$2cc
  3160 00:071C: 17 01        	ora	[<R0],Y
  3161 00:071E: D0 03        	bne	L57
  3162 00:0720: 82 86 00     	brl	L10053
  3163                        L57:
  3164                        	.line	332
  3165                        ;			// translate the arguments here
  3166                        ;			for(i=0;i<count;i++)
  3167                        	.line	334
  3168 00:0723: 64 11        	stz	<L47+i_1
  3169 00:0725: 82 78 00     	brl	L10057
  3170                        L10056:
  3171                        ;			{
  3172                        	.line	335
  3173                        ;				result = diskioDevices[p
                    drv]->pfWriter(sector+((ULONG)i),(BYTE*)buff);
  3174                        	.line	336
  3175 00:0728: D4 1E        	pei	<L46+buff_0+2
  3176 00:072A: D4 1C        	pei	<L46+buff_0
  3177 00:072C: A0 00 00     	ldy	#$0
  3178 00:072F: A5 11        	lda	<L47+i_1
  3179 00:0731: 10 01        	bpl	L58
  3180 00:0733: 88           	dey
  3181                        L58:
  3182 00:0734: 85 01        	sta	<R0
  3183 00:0736: 84 03        	sty	<R0+2
  3184 00:0738: 18           	clc
  3185 00:0739: A5 01        	lda	<R0
  3186 00:073B: 65 20        	adc	<L46+sector_0
  3187 00:073D: 85 05        	sta	<R1
  3188 00:073F: A5 03        	lda	<R0+2
  3189 00:0741: 65 22        	adc	<L46+sector_0+2
  3190 00:0743: 85 07        	sta	<R1+2
  3191 00:0745: D4 07        	pei	<R1+2
  3192 00:0747: D4 05        	pei	<R1
  3193 00:0749: A5 1A        	lda	<L46+pdrv_0
  3194 00:074B: 29 FF 00     	and	#$ff
  3195 00:074E: 85 09        	sta	<R2
  3196 00:0750: A5 09        	lda	<R2
  3197 00:0752: 0A           	asl	A
  3198 00:0753: 0A           	asl	A
  3199 00:0754: 85 01        	sta	<R0
  3200 00:0756: 18           	clc
  Sat Jul 10 2021  1:15                                                Page 60


  3201 00:0757: A9 xx xx     	lda	#<~~diskioDevices
  3202 00:075A: 65 01        	adc	<R0
  3203 00:075C: 85 09        	sta	<R2
  3204 00:075E: B2 09        	lda	(<R2)
  3205 00:0760: 85 01        	sta	<R0
  3206 00:0762: A0 02 00     	ldy	#$2
  3207 00:0765: B1 09        	lda	(<R2),Y
  3208 00:0767: 85 03        	sta	<R0+2
  3209 00:0769: A0 CC 02     	ldy	#$2cc
  3210 00:076C: B7 01        	lda	[<R0],Y
  3211 00:076E: AA           	tax
  3212 00:076F: A0 CA 02     	ldy	#$2ca
  3213 00:0772: B7 01        	lda	[<R0],Y
  3214                        	xref	~~~lcal
  3215 00:0774: 22 xx xx xx  	jsl	~~~lcal
  3216 00:0778: E2 20        	sep	#$20
  3217                        	longa	off
  3218 00:077A: 85 01        	sta	<R0
  3219 00:077C: C2 20        	rep	#$20
  3220                        	longa	on
  3221 00:077E: A5 01        	lda	<R0
  3222 00:0780: 29 FF 00     	and	#$ff
  3223 00:0783: 85 15        	sta	<L47+result_1
  3224                        ;				if(result)
  3225                        	.line	337
  3226                        ;				{
  3227 00:0785: A5 15        	lda	<L47+result_1
  3228 00:0787: D0 03        	bne	L59
  3229 00:0789: 82 06 00     	brl	L10058
  3230                        L59:
  3231                        	.line	338
  3232                        ;					return RES_PARER
                    R;
  3233                        	.line	339
  3234 00:078C: A9 04 00     	lda	#$4
  3235 00:078F: 82 13 FF     	brl	L53
  3236                        ;				}
  3237                        	.line	340
  3238                        ;				buff+=512;
  3239                        L10058:
  3240                        	.line	341
  3241 00:0792: 18           	clc
  3242 00:0793: A9 00 02     	lda	#$200
  3243 00:0796: 65 1C        	adc	<L46+buff_0
  3244 00:0798: 85 1C        	sta	<L46+buff_0
  3245 00:079A: 90 02        	bcc	L60
  3246 00:079C: E6 1E        	inc	<L46+buff_0+2
  3247                        L60:
  3248                        ;			}
  3249                        	.line	342
  3250                        L10054:
  3251 00:079E: E6 11        	inc	<L47+i_1
  3252                        L10057:
  3253 00:07A0: A5 11        	lda	<L47+i_1
  3254 00:07A2: C5 24        	cmp	<L46+count_0
  3255 00:07A4: B0 03        	bcs	L61
  3256 00:07A6: 82 7F FF     	brl	L10056
  3257                        L61:
  Sat Jul 10 2021  1:15                                                Page 61


  3258                        L10055:
  3259                        ;			// translate the reslut code her
                    e
  3260                        ;		}
  3261                        	.line	344
  3262                        ;		res = 0;
  3263                        L10053:
  3264                        	.line	345
  3265 00:07A9: 64 13        	stz	<L47+res_1
  3266                        ;
  3267                        ;		break;
  3268                        	.line	347
  3269 00:07AB: 82 1C 00     	brl	L10044
  3270                        ;	case DEV_MMC :
  3271                        	.line	348
  3272                        L10059:
  3273                        ;		// translate the arguments here
  3274                        ;
  3275                        ;		//result = MMC_disk_write(buff, sector, 
                    count);
  3276                        ;
  3277                        ;		// translate the reslut code here
  3278                        ;
  3279                        ;		return res;
  3280                        	.line	355
  3281 00:07AE: A5 13        	lda	<L47+res_1
  3282 00:07B0: 82 F2 FE     	brl	L53
  3283                        ;
  3284                        ;	case DEV_USB :
  3285                        	.line	357
  3286                        L10060:
  3287                        ;		// translate the arguments here
  3288                        ;
  3289                        ;		//result = USB_disk_write(buff, sector, 
                    count);
  3290                        ;
  3291                        ;		// translate the reslut code here
  3292                        ;
  3293                        ;		return res;
  3294                        	.line	364
  3295 00:07B3: A5 13        	lda	<L47+res_1
  3296 00:07B5: 82 ED FE     	brl	L53
  3297                        ;	}
  3298                        	.line	365
  3299                        L10043:
  3300                        	xref	~~~fsw
  3301 00:07B8: 22 xx xx xx  	jsl	~~~fsw
  3302 00:07BC: 01 00        	dw	1
  3303 00:07BE: 04 00        	dw	4
  3304 00:07C0: xx xx        	dw	L10044-1
  3305 00:07C2: xx xx        	dw	L10059-1
  3306 00:07C4: xx xx        	dw	L10060-1
  3307 00:07C6: xx xx        	dw	L10045-1
  3308 00:07C8: xx xx        	dw	L10052-1
  3309                        L10044:
  3310                        ;
  3311                        ;	//k_debugstring("------- disk_write exit\r\n");
  3312                        ;
  Sat Jul 10 2021  1:15                                                Page 62


  3313                        ;	return res;
  3314                        	.line	369
  3315 00:07CA: A5 13        	lda	<L47+res_1
  3316 00:07CC: 82 D6 FE     	brl	L53
  3317                        ;}
  3318                        	.line	370
  3319                        	.endblock	370
  3320             00000016   L46	equ	22
  3321             00000011   L47	equ	17
  3322                        	ends
  3323                        	efunc
  3324                        	.endfunc	370,17,22
  3325                        	.line	370
  3326                        	data
  3327                        L1:
  3328 00:0018: 2D 2D 2D 2D  	db	$2D,$2D,$2D,$2D,$2D,$2D,$2D,$20,$64,$69,
                    $73,$6B,$5F,$77,$72
       00:001C: 2D 2D 2D 20 
       00:0020: 64 69 73 6B 
       00:0024: 5F 77 72 
  3329 00:0027: 69 74 65 3A  	db	$69,$74,$65,$3A,$64,$65,$76,$3A,$00,$2D,
                    $2D,$2D,$2D,$2D,$2D
       00:002B: 64 65 76 3A 
       00:002F: 00 2D 2D 2D 
       00:0033: 2D 2D 2D 
  3330 00:0036: 2D 20 64 69  	db	$2D,$20,$64,$69,$73,$6B,$5F,$77,$72,$69,
                    $74,$65,$3A,$3A,$63
       00:003A: 73 6B 5F 77 
       00:003E: 72 69 74 65 
       00:0042: 3A 3A 63 
  3331 00:0045: 6F 75 6E 74  	db	$6F,$75,$6E,$74,$3A,$00
       00:0049: 3A 00 
  3332 00:004B:              	ends
  3333                        ;
  3334                        ;#endif
  3335                        ;
  3336                        ;
  3337                        ;/*-----------------------------------------------
                    ------------------------*/
  3338                        ;/* Miscellaneous Functions                       
                                            */
  3339                        ;/*-----------------------------------------------
                    ------------------------*/
  3340                        ;
  3341                        ;DRESULT disk_ioctl (
  3342                        ;	BYTE pdrv,		/* Physical drive nmuber
                     (0..) */
  3343                        ;	BYTE cmd,		/* Control code */
  3344                        ;	void *buff		/* Buffer to send/receiv
                    e control data */
  3345                        ;)
  3346                        ;{
  3347                        	.line	379
  3348                        	.line	384
  3349                        	code
  3350                        	xdef	~~disk_ioctl
  3351                        	func
  3352                        	.function	384
  Sat Jul 10 2021  1:15                                                Page 63


  3353                        ~~disk_ioctl:
  3354                        	longa	on
  3355                        	longi	on
  3356 00:07CF: 3B           	tsc
  3357 00:07D0: 38           	sec
  3358 00:07D1: E9 04 00     	sbc	#L63
  3359 00:07D4: 1B           	tcs
  3360 00:07D5: 0B           	phd
  3361 00:07D6: 5B           	tcd
  3362             00000004   pdrv_0	set	4
  3363             00000006   cmd_0	set	6
  3364             00000008   buff_0	set	8
  3365                        	.block	384
  3366                        ;	DRESULT res;
  3367                        ;	int result;
  3368                        ;
  3369                        ;	k_debug_hex("disk_ioctl::pdrv:",pdrv);
  3370             00000000   res_1	set	0
  3371             00000002   result_1	set	2
  3372                        	.sym	res,0,5,1,16
  3373                        	.sym	result,2,5,1,16
  3374                        	.sym	pdrv,4,14,6,8
  3375                        	.sym	cmd,6,14,6,8
  3376                        	.sym	buff,8,129,6,32
  3377                        	.line	388
  3378 00:07D7: D4 08        	pei	<L63+pdrv_0
  3379 00:07D9: F4 xx xx     	pea	#^L62
  3380 00:07DC: F4 xx xx     	pea	#<L62
  3381 00:07DF: 22 xx xx xx  	jsl	~~k_debug_hex
  3382                        ;	k_debug_hex("disk_ioctl::cmd:",cmd);
  3383                        	.line	389
  3384 00:07E3: D4 0A        	pei	<L63+cmd_0
  3385 00:07E5: F4 xx xx     	pea	#^L62+18
  3386 00:07E8: F4 xx xx     	pea	#<L62+18
  3387 00:07EB: 22 xx xx xx  	jsl	~~k_debug_hex
  3388                        ;
  3389                        ;	switch (pdrv) {
  3390                        	.line	391
  3391 00:07EF: A5 08        	lda	<L63+pdrv_0
  3392 00:07F1: 29 FF 00     	and	#$ff
  3393 00:07F4: 82 25 00     	brl	L10061
  3394                        	.line	391
  3395                        ;	case 0x03 :
  3396                        	.line	392
  3397                        L10063:
  3398                        ;
  3399                        ;		//diskioDevices[pdrv]->pfWriter(sector,(
                    BYTE*)buff);
  3400                        ;
  3401                        ;		return RES_OK;
  3402                        	.line	396
  3403 00:07F7: A9 00 00     	lda	#$0
  3404                        L66:
  3405 00:07FA: A8           	tay
  3406 00:07FB: A5 06        	lda	<L63+2
  3407 00:07FD: 85 0E        	sta	<L63+2+8
  3408 00:07FF: A5 05        	lda	<L63+1
  3409 00:0801: 85 0D        	sta	<L63+1+8
  Sat Jul 10 2021  1:15                                                Page 64


  3410 00:0803: 2B           	pld
  3411 00:0804: 3B           	tsc
  3412 00:0805: 18           	clc
  3413 00:0806: 69 0C 00     	adc	#L63+8
  3414 00:0809: 1B           	tcs
  3415 00:080A: 98           	tya
  3416 00:080B: 6B           	rtl
  3417                        ;
  3418                        ;	case 0x04 :
  3419                        	.line	398
  3420                        L10064:
  3421                        ;
  3422                        ;		//diskioDevices[pdrv]->pfWriter(sector,(
                    BYTE*)buff);
  3423                        ;
  3424                        ;		return RES_OK;
  3425                        	.line	402
  3426 00:080C: A9 00 00     	lda	#$0
  3427 00:080F: 82 E8 FF     	brl	L66
  3428                        ;	case DEV_MMC :
  3429                        	.line	403
  3430                        L10065:
  3431                        ;
  3432                        ;		// Process of the command for the MMC/SD
                     card
  3433                        ;
  3434                        ;		return res;
  3435                        	.line	407
  3436 00:0812: A5 01        	lda	<L64+res_1
  3437 00:0814: 82 E3 FF     	brl	L66
  3438                        ;
  3439                        ;	case DEV_USB :
  3440                        	.line	409
  3441                        L10066:
  3442                        ;
  3443                        ;		// Process of the command the USB drive
  3444                        ;
  3445                        ;		return res;
  3446                        	.line	413
  3447 00:0817: A5 01        	lda	<L64+res_1
  3448 00:0819: 82 DE FF     	brl	L66
  3449                        ;	}
  3450                        	.line	414
  3451                        L10061:
  3452                        	xref	~~~fsw
  3453 00:081C: 22 xx xx xx  	jsl	~~~fsw
  3454 00:0820: 01 00        	dw	1
  3455 00:0822: 04 00        	dw	4
  3456 00:0824: xx xx        	dw	L10062-1
  3457 00:0826: xx xx        	dw	L10065-1
  3458 00:0828: xx xx        	dw	L10066-1
  3459 00:082A: xx xx        	dw	L10063-1
  3460 00:082C: xx xx        	dw	L10064-1
  3461                        L10062:
  3462                        ;
  3463                        ;	return RES_PARERR;
  3464                        	.line	416
  3465 00:082E: A9 04 00     	lda	#$4
  Sat Jul 10 2021  1:15                                                Page 65


  3466 00:0831: 82 C6 FF     	brl	L66
  3467                        ;}
  3468                        	.line	417
  3469                        	.endblock	417
  3470             00000004   L63	equ	4
  3471             00000001   L64	equ	1
  3472                        	ends
  3473                        	efunc
  3474                        	.endfunc	417,1,4
  3475                        	.line	417
  3476                        	data
  3477                        L62:
  3478 00:004B: 64 69 73 6B  	db	$64,$69,$73,$6B,$5F,$69,$6F,$63,$74,$6C,
                    $3A,$3A,$70,$64,$72
       00:004F: 5F 69 6F 63 
       00:0053: 74 6C 3A 3A 
       00:0057: 70 64 72 
  3479 00:005A: 76 3A 00 64  	db	$76,$3A,$00,$64,$69,$73,$6B,$5F,$69,$6F,
                    $63,$74,$6C,$3A,$3A
       00:005E: 69 73 6B 5F 
       00:0062: 69 6F 63 74 
       00:0066: 6C 3A 3A 
  3480 00:0069: 63 6D 64 3A  	db	$63,$6D,$64,$3A,$00
       00:006D: 00 
  3481 00:006E:              	ends
  3482                        ;#else
  3483                        ;
  3484                        ;
  3485                        ;
  3486                        ;/*-----------------------------------------------
                    ------------------------*/
  3487                        ;/* Get Drive Status                              
                                            */
  3488                        ;/*-----------------------------------------------
                    ------------------------*/
  3489                        ;
  3490                        ;DSTATUS disk_status (
  3491                        ;	BYTE pdrv		/* Physical drive nmuber
                     to identify the drive */
  3492                        ;)
  3493                        ;{
  3494                        ;	k_debug_hex("disk_status::pdrv:",pdrv);
  3495                        ;	return RES_OK;
  3496                        ;}
  3497                        ;
  3498                        ;
  3499                        ;
  3500                        ;/*-----------------------------------------------
                    ------------------------*/
  3501                        ;/* Inidialize a Drive                            
                                            */
  3502                        ;/*-----------------------------------------------
                    ------------------------*/
  3503                        ;
  3504                        ;DSTATUS disk_initialize (
  3505                        ;	BYTE pdrv				/* Physi
                    cal drive nmuber to identify the drive */
  3506                        ;)
  Sat Jul 10 2021  1:15                                                Page 66


  3507                        ;{
  3508                        ;	return STA_NOINIT;
  3509                        ;}
  3510                        ;
  3511                        ;
  3512                        ;
  3513                        ;/*-----------------------------------------------
                    ------------------------*/
  3514                        ;/* Read Sector(s)                                
                                            */
  3515                        ;/*-----------------------------------------------
                    ------------------------*/
  3516                        ;
  3517                        ;DRESULT disk_read (
  3518                        ;	BYTE pdrv,		/* Physical drive nmuber
                     to identify the drive */
  3519                        ;	BYTE *buff,		/* Data buffer to store 
                    read data */
  3520                        ;	LBA_t sector,	/* Start sector in LBA */
  3521                        ;	UINT count		/* Number of sectors to 
                    read */
  3522                        ;)
  3523                        ;{
  3524                        ;	//k_debugstring("------- disk_read exit\r\n");
  3525                        ;
  3526                        ;	return RES_PARERR;
  3527                        ;}
  3528                        ;
  3529                        ;
  3530                        ;
  3531                        ;/*-----------------------------------------------
                    ------------------------*/
  3532                        ;/* Write Sector(s)                               
                                            */
  3533                        ;/*-----------------------------------------------
                    ------------------------*/
  3534                        ;
  3535                        ;#if FF_FS_READONLY == 0
  3536                        ;
  3537                        ;DRESULT disk_write (
  3538                        ;	BYTE pdrv,			/* Physical driv
                    e nmuber to identify the drive */
  3539                        ;	const BYTE *buff,	/* Data to be written */
  3540                        ;	LBA_t sector,		/* Start sector in LBA *
                    /
  3541                        ;	UINT count			/* Number of sec
                    tors to write */
  3542                        ;)
  3543                        ;{
  3544                        ;	//k_debugstring("------- disk_write exit\r\n");
  3545                        ;
  3546                        ;	return RES_PARERR;
  3547                        ;}
  3548                        ;
  3549                        ;#endif
  3550                        ;
  3551                        ;
  3552                        ;/*-----------------------------------------------
  Sat Jul 10 2021  1:15                                                Page 67


                    ------------------------*/
  3553                        ;/* Miscellaneous Functions                       
                                            */
  3554                        ;/*-----------------------------------------------
                    ------------------------*/
  3555                        ;
  3556                        ;DRESULT disk_ioctl (
  3557                        ;	BYTE pdrv,		/* Physical drive nmuber
                     (0..) */
  3558                        ;	BYTE cmd,		/* Control code */
  3559                        ;	void *buff		/* Buffer to send/receiv
                    e control data */
  3560                        ;)
  3561                        ;{
  3562                        ;	return RES_PARERR;
  3563                        ;}
  3564                        ;
  3565                        ;
  3566                        ;#endif
  3567                        ;
  3568                        	.line	502
  3569                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\diskio.c",379
  3570                        	xref	~~k_create_dos_device
  3571                        	xref	~~k_debug_hex
  3572                        	xref	~~k_debug_integer
  3573                        	xref	~~k_mem_deallocate_heap
  3574                        	.sym	~~k_dos_get_device_status,~~k_dos_get_de
                    vice_status,80,2,0
  3575                        	.sym	~~k_dos_get_device,~~k_dos_get_device,10
                    98,2,32,122
  3576                        	.sym	~~k_dos_get_devices,~~k_dos_get_devices,
                    9290,2,32,122
  3577                        	.sym	~~diskioDevices,~~diskioDevices,1130,3,3
                    2,122,6
  3578                        	.sym	~~k_create_dos_device,~~k_create_dos_dev
                    ice,1098,18,32,122
  3579                        	.sym	PDOSHANDLE,0,138,14,32,124
  3580                        	.sym	DOSHANDLE,0,10,14,80,124
  3581                        	.sym	PFXDOSDEVICE,0,138,14,32,122
  3582                        	.sym	FXDOSDEVICE,0,10,14,5744,122
  3583                        	.sym	DOSINITDEVICE,0,641,14,32
  3584                        	.sym	DOSSECTORWRITER,0,654,14,32
  3585                        	.sym	DOSSECTORREADER,0,654,14,32
  3586                        	.sym	PIDENTIFY_DEVICE_DATA,0,138,14,32,121
  3587                        	.sym	IDENTIFY_DEVICE_DATA,0,10,14,4096,121
  3588                        	.sym	PIDSECTOR,0,138,14,32,98
  3589                        	.sym	IDSECTOR,0,10,14,2048,98
  3590                        	.sym	PLFN,0,138,14,32,97
  3591                        	.sym	LFN,0,10,14,256,97
  3592                        	.sym	PFAT16ENTRYLONG,0,138,14,32,96
  3593                        	.sym	FAT16ENTRYLONG,0,10,14,288,96
  3594                        	.sym	PFAT16ENTRY,0,138,14,32,95
  3595                        	.sym	FAT16ENTRY,0,10,14,256,95
  3596                        	.sym	Fat16BootSector,0,10,14,4096,94
  3597                        	.sym	PPARTITIONTABLE,0,138,14,32,93
  3598                        	.sym	PARTITIONTABLE,0,10,14,128,93
  3599                        	.sym	PFATBOOTSECTOR,0,138,14,32,92
  Sat Jul 10 2021  1:15                                                Page 68


  3600                        	.sym	FATBOOTSECTOR,0,10,14,928,92
  3601                        	.sym	fat_BS_t,0,10,14,688,91
  3602                        	.sym	fat_extBS_16_t,0,10,14,192,90
  3603                        	.sym	PFAT32EXT,0,138,14,32,89
  3604                        	.sym	fat_extBS_32_t,0,10,14,416,89
  3605                        	.sym	P_FX_FAT_DIR_INFO,0,138,14,32,88
  3606                        	.sym	FX_FAT_DIR_INFO,0,10,14,256,88
  3607                        	.sym	PFILEINFO,0,138,14,32,87
  3608                        	.sym	FILEINFO,0,10,14,136,87
  3609                        	.sym	PDISKINFO,0,138,14,32,86
  3610                        	.sym	DISKINFO,0,10,14,416,86
  3611                        	.sym	PDIRENTRY,0,138,14,32,85
  3612                        	.sym	DIRENTRY,0,10,14,256,85
  3613                        	.sym	~~disk_ioctl,~~disk_ioctl,69,2,0
  3614                        	.sym	~~disk_write,~~disk_write,69,2,0
  3615                        	.sym	~~disk_read,~~disk_read,69,2,0
  3616                        	.sym	~~disk_status,~~disk_status,78,2,0
  3617                        	.sym	~~disk_initialize,~~disk_initialize,78,2
                    ,0
  3618                        	.sym	DRESULT,0,5,14,16
  3619                        	.sym	DSTATUS,0,14,14,8
  3620                        	.sym	DEVICEDRIVER_COMMAND,0,656,14,32
  3621                        	.sym	DEVICEDRIVER_UNLOAD,0,654,14,32
  3622                        	.sym	DEVICEDRIVER_WRITE,0,656,14,32
  3623                        	.sym	DEVICEDRIVER_READ,0,656,14,32
  3624                        	.sym	DEVICEDRIVER_LOAD,0,654,14,32
  3625                        	.sym	DEVICEDRIVER_IRQ,0,654,14,32
  3626                        	.sym	PFX_BLOCK_DEVICE_DRIVER,0,138,14,32,84
  3627                        	.sym	FX_BLOCK_DEVICE_DRIVER,0,10,14,808,84
  3628                        	.sym	GETDRIVERDEF,0,8842,14,32,83
  3629                        	.sym	PFX_DEVICE_DRIVER,0,138,14,32,83
  3630                        	.sym	FX_DEVICE_DRIVER,0,10,14,776,83
  3631                        	.sym	~~k_debug_hex,~~k_debug_hex,65,18,0
  3632                        	.sym	~~k_debug_integer,~~k_debug_integer,65,1
                    8,0
  3633                        	.sym	PSEGMENTHEADER,0,138,14,32,82
  3634                        	.sym	SEGMENTHEADER,0,10,14,160,82
  3635                        	.sym	PDEBUGBYTEBITS,0,138,14,32,81
  3636                        	.sym	DEBUGBYTEBITS,0,10,14,8,81
  3637                        	.sym	PFXENVIRONMENT,0,138,14,32,80
  3638                        	.sym	FXENVIRONMENT,0,10,14,96,80
  3639                        	.sym	PFXZEROPAGE,0,138,14,32,79
  3640                        	.sym	FXZEROPAGE,0,10,14,824,79
  3641                        	.sym	KERNELTRAPCALL,0,641,14,32
  3642                        	.sym	PFXKERNEL_API_CALLTABLE,0,138,14,32,78
  3643                        	.sym	FXKERNEL_API_CALLTABLE,0,10,14,8192,78
  3644                        	.sym	FRESULT,0,5,14,16
  3645                        	.sym	MKFS_PARM,0,10,14,80,77
  3646                        	.sym	FILINFO,0,10,14,2224,76
  3647                        	.sym	DIR,0,10,14,416,75
  3648                        	.sym	FIL,0,10,14,4400,74
  3649                        	.sym	FFOBJID,0,10,14,128,73
  3650                        	.sym	FATFS,0,10,14,4504,72
  3651                        	.sym	LBA_t,0,18,14,32
  3652                        	.sym	FSIZE_t,0,18,14,32
  3653                        	.sym	TCHAR,0,14,14,8
  3654                        	.sym	PCOMMANDARGS,0,138,14,32,71
  3655                        	.sym	COMMANDARGS,0,10,14,64,71
  Sat Jul 10 2021  1:15                                                Page 69


  3656                        	.sym	PTOKENIZESTATE,0,133,14,32
  3657                        	.sym	TOKENIZESTATE,0,5,14,16
  3658                        	.sym	PTOKEN,0,138,14,32,70
  3659                        	.sym	TOKEN,0,10,14,64,70
  3660                        	.sym	PTOKENTYPE,0,133,14,32
  3661                        	.sym	TOKENTYPE,0,5,14,16
  3662                        	.sym	FXCommandHandler,0,656,14,32
  3663                        	.sym	PCONSOLECTX,0,138,14,32,69
  3664                        	.sym	CONSOLECTX,0,10,14,1144,69
  3665                        	.sym	PSPINNERCTX,0,138,14,32,68
  3666                        	.sym	SPINNERCTX,0,10,14,48,68
  3667                        	.sym	HCLIP,0,138,14,32,67
  3668                        	.sym	PCLIPBOARD_DATA,0,138,14,32,67
  3669                        	.sym	CLIPBOARD_DATA,0,10,14,168,67
  3670                        	.sym	PEVENTMANAGER,0,138,14,32,66
  3671                        	.sym	EVENTMANAGER,0,10,14,192,66
  3672                        	.sym	EV_RUN,0,656,14,32
  3673                        	.sym	EV_QUERY_METRIC,0,656,14,32
  3674                        	.sym	EV_CONFIGURE,0,656,14,32
  3675                        	.sym	EV_UNINIT,0,641,14,32
  3676                        	.sym	EV_INIT,0,8833,14,32
  3677                        	.sym	PMOUSE_MSG_STATE,0,138,14,32,65
  3678                        	.sym	MOUSE_MSG_STATE,0,10,14,184,65
  3679                        	.sym	PFXEVENTPROCESS,0,138,14,32,64
  3680                        	.sym	FXEVENTPROCESS,0,10,14,64,64
  3681                        	.sym	PMARSHALDATA,0,139,14,32,63
  3682                        	.sym	MARSHALDATA,0,11,14,32,63
  3683                        	.sym	FXIDLEPROCESS,0,641,14,32
  3684                        	.sym	FXEventProc,0,641,14,32
  3685                        	.sym	PMOUSEMSGDATA,0,138,14,32,62
  3686                        	.sym	MOUSEMSGDATA,0,10,14,64,62
  3687                        	.sym	MSGIRQ,0,5,14,16
  3688                        	.sym	MAINLOOPARGS,0,10,14,16,61
  3689                        	.sym	PEACHCHILD_MSG,0,138,14,32,60
  3690                        	.sym	EACHCHILD_MSG,0,10,14,64,60
  3691                        	.sym	PMSGBOX_DATA,0,138,14,32,59
  3692                        	.sym	MSGBOX_DATA,0,10,14,96,59
  3693                        	.sym	PDESKTOP_DATA,0,138,14,32,58
  3694                        	.sym	DESKTOP_DATA,0,10,14,64,58
  3695                        	.sym	PWINDOWMANAGER,0,138,14,32,57
  3696                        	.sym	WINDOWMANAGER,0,10,14,160,57
  3697                        	.sym	WM_DOPROCS,0,641,14,32
  3698                        	.sym	WM_QUERY_METRIC,0,656,14,32
  3699                        	.sym	WM_CONFIGURE,0,656,14,32
  3700                        	.sym	WM_HANDLE_EVENT,0,8833,14,32
  3701                        	.sym	WM_EVENTS,0,641,14,32
  3702                        	.sym	PCUR_PALETTE_MAP,0,138,14,32,56
  3703                        	.sym	CUR_PALETTE_MAP,0,10,14,400,56
  3704                        	.sym	PCLICKDETECTED,0,138,14,32,55
  3705                        	.sym	CLICKDETECTED,0,10,14,64,55
  3706                        	.sym	OBJECTCLICKED,0,641,14,32
  3707                        	.sym	PIPCPORT,0,138,14,32,54
  3708                        	.sym	IPCPORT,0,10,14,144,54
  3709                        	.sym	~~k_mem_deallocate_heap,~~k_mem_dealloca
                    te_heap,65,18,0
  3710                        	.sym	MemoryCallback,0,641,14,32
  3711                        	.sym	PFXMEMORYMAP,0,138,14,32,53
  3712                        	.sym	FXMEMORYMAP,0,10,14,2072,53
  Sat Jul 10 2021  1:15                                                Page 70


  3713                        	.sym	UMM_HEAP_INFO,0,10,14,256,52
  3714                        	.sym	FOREACHNODEUNTIL,0,654,14,32
  3715                        	.sym	FOREACHNODE,0,641,14,32
  3716                        	.sym	PEXECUTIVE,0,138,14,32,51
  3717                        	.sym	EXECUTIVE,0,10,14,128,51
  3718                        	.sym	EX_QUERY_METRIC,0,656,14,32
  3719                        	.sym	EX_CONFIGURE,0,656,14,32
  3720                        	.sym	EX_UNINIT,0,641,14,32
  3721                        	.sym	EX_INIT,0,8833,14,32
  3722                        	.sym	PFXSTRING,0,138,14,32,50
  3723                        	.sym	FXSTRING,0,10,14,64,50
  3724                        	.sym	PFXRFHEADER_FONT,0,138,14,32,49
  3725                        	.sym	FXRFHEADER_FONT,0,10,14,144,49
  3726                        	.sym	PFXRFHEADER,0,138,14,32,48
  3727                        	.sym	FXRFHEADER,0,10,14,72,48
  3728                        	.sym	PFXCOMBUFFER,0,138,14,32,47
  3729                        	.sym	FXCOMBUFFER,0,10,14,2080,47
  3730                        	.sym	PSUBMENULIST,0,138,14,32,46
  3731                        	.sym	SUBMENULIST,0,10,14,40,46
  3732                        	.sym	HSUBMENU,0,7,14,32
  3733                        	.sym	PSUBMENU,0,138,14,32,45
  3734                        	.sym	SUBMENU,0,10,14,64,45
  3735                        	.sym	MenuAction,0,641,14,32
  3736                        	.sym	PMENUANCHOR,0,138,14,32,44
  3737                        	.sym	MENUANCHOR,0,10,14,272,44
  3738                        	.sym	PMSGBOX,0,138,14,32,43
  3739                        	.sym	MSGBOX,0,10,14,144,43
  3740                        	.sym	PTEXTBOX,0,138,14,32,42
  3741                        	.sym	TEXTBOX,0,10,14,144,42
  3742                        	.sym	PLISTBOX,0,138,14,32,41
  3743                        	.sym	LISTBOX,0,10,14,240,41
  3744                        	.sym	PSCROLLBAR,0,138,14,32,40
  3745                        	.sym	SCROLLBAR,0,10,14,240,40
  3746                        	.sym	PBUTTON,0,138,14,32,39
  3747                        	.sym	BUTTON,0,10,14,96,39
  3748                        	.sym	PMENUDROPDOWNDATA,0,138,14,32,38
  3749                        	.sym	MENUDROPDOWNDATA,0,10,14,5152,38
  3750                        	.sym	PMENUTAG,0,138,14,32,37
  3751                        	.sym	MENUTAG,0,10,14,160,37
  3752                        	.sym	PMENU,0,138,14,32,36
  3753                        	.sym	MENU,0,10,14,280,36
  3754                        	.sym	HMENURESOURCE,0,129,14,32
  3755                        	.sym	FONTMETRIC,0,10,14,32,35
  3756                        	.sym	TITLE,0,142,14,32
  3757                        	.sym	PHANDLE,0,1153,14,32
  3758                        	.sym	HANDLE,0,129,14,32
  3759                        	.sym	PWINDOWEX,0,138,14,32,34
  3760                        	.sym	WINDOWEX,0,10,14,3880,34
  3761                        	.sym	PWINDOW,0,138,14,32,33
  3762                        	.sym	WINDOW,0,10,14,3904,33
  3763                        	.sym	PDRAGDATA,0,138,14,32,32
  3764                        	.sym	DRAGDATA,0,10,14,216,32
  3765                        	.sym	PNCCLICKABLE,0,138,14,32,31
  3766                        	.sym	NCCLICKABLE,0,10,14,136,31
  3767                        	.sym	HCLICKABLE,0,7,14,32
  3768                        	.sym	PCLICKABLE,0,138,14,32,30
  3769                        	.sym	CLICKABLE,0,10,14,152,30
  3770                        	.sym	PWNDCLASS,0,138,14,32,29
  Sat Jul 10 2021  1:15                                                Page 71


  3771                        	.sym	WNDCLASS,0,10,14,272,29
  3772                        	.sym	HBRUSH,0,129,14,32
  3773                        	.sym	HCURSOR,0,129,14,32
  3774                        	.sym	HICON,0,129,14,32
  3775                        	.sym	HINSTANCE,0,129,14,32
  3776                        	.sym	FXWndProc,0,654,14,32
  3777                        	.sym	PDRECT,0,138,14,32,28
  3778                        	.sym	DRECT,0,10,14,112,28
  3779                        	.sym	PRECTP,0,138,14,32,27
  3780                        	.sym	RECTP,0,10,14,96,27
  3781                        	.sym	PRECT,0,138,14,32,26
  3782                        	.sym	RECT,0,10,14,112,26
  3783                        	.sym	PPOINT,0,138,14,32,25
  3784                        	.sym	POINT,0,10,14,32,25
  3785                        	.sym	PFXPROPERTY,0,138,14,32,23
  3786                        	.sym	FXPROPERTY,0,10,14,384,23
  3787                        	.sym	PKEYSTATE,0,138,14,32,22
  3788                        	.sym	KEYSTATE,0,10,14,112,22
  3789                        	.sym	SCANCODE,0,14,14,8
  3790                        	.sym	KEYCODE,0,16,14,16
  3791                        	.sym	PFXPROCESSMESSAGE,0,138,14,32,21
  3792                        	.sym	FXPROCESSMESSAGE,0,10,14,112,21
  3793                        	.sym	PFXPROCESS,0,138,14,32,20
  3794                        	.sym	FXPROCESS,0,10,14,800,20
  3795                        	.sym	PDESKTOP_CONTROL,0,138,14,32,19
  3796                        	.sym	DESKTOP_CONTROL,0,10,14,392,19
  3797                        	.sym	PCONSOLE_CONTROL,0,138,14,32,18
  3798                        	.sym	CONSOLE_CONTROL,0,10,14,448,18
  3799                        	.sym	FXProcessProc,0,641,14,32
  3800                        	.sym	PFXCMDMESSAGE,0,138,14,32,17
  3801                        	.sym	FXCMDMESSAGE,0,10,14,304,17
  3802                        	.sym	PFXOSMESSAGE,0,138,14,32,16
  3803                        	.sym	FXOSMESSAGE,0,10,14,304,16
  3804                        	.sym	PINT_REGS,0,138,14,32,15
  3805                        	.sym	INT_REGS,0,10,14,104,15
  3806                        	.sym	TASK_STACK,0,10,14,32,14
  3807                        	.sym	TASK,0,10,14,48,13
  3808                        	.sym	PIRQDATA,0,138,14,32,12
  3809                        	.sym	IRQDATA,0,10,14,48,12
  3810                        	.sym	HMENU,0,129,14,32
  3811                        	.sym	HWND,0,129,14,32
  3812                        	.sym	MSGDATA,0,14,14,8
  3813                        	.sym	MSGDEST,0,18,14,32
  3814                        	.sym	MSGSRC,0,18,14,32
  3815                        	.sym	MSGTYPE,0,16,14,16
  3816                        	.sym	PROCESS_RESOURCE_LIST,0,138,14,32,6
  3817                        	.sym	PROCESS_TLS_LIST,0,138,14,32,6
  3818                        	.sym	SEMAPHORE_LIST,0,138,14,32,6
  3819                        	.sym	FILE_BLOCK_LIST,0,138,14,32,6
  3820                        	.sym	FILE_PATH_LIST,0,138,14,32,6
  3821                        	.sym	PROCEDURE_LIST,0,138,14,32,6
  3822                        	.sym	FILE_HANDLE,0,138,14,32,11
  3823                        	.sym	FILE_BLOCK,0,10,14,552,11
  3824                        	.sym	SEMAPHORE,0,10,14,16,10
  3825                        	.sym	PPROCESS_SIGNAL,0,138,14,32,9
  3826                        	.sym	PROCESS_SIGNAL,0,10,14,16,9
  3827                        	.sym	KRESULT,0,18,14,32
  3828                        	.sym	PKERNEL_ERROR,0,138,14,32,8
  Sat Jul 10 2021  1:15                                                Page 72


  3829                        	.sym	KERNEL_ERROR,0,10,14,32,8
  3830                        	.sym	PROCESS_STATUS,0,16,14,16
  3831                        	.sym	FILE_PATH_NAME,0,142,14,32
  3832                        	.sym	PROCESS_RESOURCE,0,129,14,32
  3833                        	.sym	PROCESS_TLS,0,129,14,32
  3834                        	.sym	PROCESS_CTX,0,129,14,32
  3835                        	.sym	USERID,0,16,14,16
  3836                        	.sym	PROCESS_ID,0,18,14,32
  3837                        	.sym	PROCESS_BANK,0,14,14,8
  3838                        	.sym	PFXQUEUE,0,138,14,32,7
  3839                        	.sym	FXQUEUE,0,10,14,80,7
  3840                        	.sym	PFXNODELIST,0,138,14,32,6
  3841                        	.sym	FXNODELIST,0,10,14,96,6
  3842                        	.sym	NodeListDeallocator,0,641,14,32
  3843                        	.sym	PFXNODE,0,138,14,32,5
  3844                        	.sym	FXNODE,0,10,14,384,5
  3845                        	.sym	PBYTEBITS,0,138,14,32,4
  3846                        	.sym	BYTEBITS,0,10,14,8,4
  3847                        	.sym	HRESULT,0,18,14,32
  3848                        	.sym	LPWCHAR,0,144,14,32
  3849                        	.sym	WCHAR,0,16,14,16
  3850                        	.sym	HCOLOR,0,129,14,32
  3851                        	.sym	HFONT,0,129,14,32
  3852                        	.sym	HDC,0,129,14,32
  3853                        	.sym	HPOINTER,0,129,14,32
  3854                        	.sym	uint32_t,0,18,14,32
  3855                        	.sym	uint8_t,0,14,14,8
  3856                        	.sym	LPBOOL,0,142,14,32
  3857                        	.sym	BOOL,0,14,14,8
  3858                        	.sym	DWORD,0,18,14,32
  3859                        	.sym	ULONG,0,18,14,32
  3860                        	.sym	LPLONG,0,135,14,32
  3861                        	.sym	LONG,0,7,14,32
  3862                        	.sym	PUINT,0,144,14,32
  3863                        	.sym	USHORT,0,16,14,16
  3864                        	.sym	UINT,0,16,14,16
  3865                        	.sym	INT,0,5,14,16
  3866                        	.sym	WORD,0,5,14,16
  3867                        	.sym	PBYTE,0,142,14,32
  3868                        	.sym	BYTE,0,14,14,8
  3869                        	.sym	IOPORT,0,142,14,32
  3870                        	.sym	PUCHAR,0,142,14,32
  3871                        	.sym	UCHAR,0,14,14,8
  3872                        	.sym	LPWCSTR,0,142,14,32
  3873                        	.sym	LPCSTR,0,142,14,32
  3874                        	.sym	LPSTR,0,142,14,32
  3875                        	.sym	LPCHAR,0,142,14,32
  3876                        	.sym	CHAR,0,14,14,8
  3877                        	.sym	LPVOID,0,129,14,32
  3878                        	.sym	VOID,0,1,14,32
  3879                        	.sym	Boolean_T,0,5,14,16
  3880                        	.sym	ldiv_t,0,10,14,64,2
  3881                        	.sym	div_t,0,10,14,32,1
  3882                        	.sym	wctype_t,0,16,14,16
  3883                        	.sym	wint_t,0,16,14,16
  3884                        	.sym	wchar_t,0,14,14,8
  3885                        	.sym	ptrdiff_t,0,7,14,32
  3886                        	.sym	size_t,0,16,14,16
  Sat Jul 10 2021  1:15                                                Page 73


  3887                        	end


      Lines assembled: 3887
      Errors: 0
