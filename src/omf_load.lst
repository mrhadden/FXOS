  Mon Sep 27 2021  9:39                                                Page 1


                     ***************************************
                     **      WDC 65C816 Macro Assembler   **
                     **                                   **
                     **     Version 1.00- Aug 10 2021    **
                     ***************************************

     1                        ;:ts=8
     2             00000001   R0	equ	1
     3             00000005   R1	equ	5
     4             00000009   R2	equ	9
     5             0000000D   R3	equ	13
     6                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\omf/OMF_Load.c",0
     7                        ;/************************************************
                    ************************/
     8                        ;/*                                               
                                           */
     9                        ;/*  OMF_Load.c : Module pour le chargement/décoda
                    ge des fichiers OMF.   */
    10                        ;/*                                               
                                           */
    11                        ;/************************************************
                    ************************/
    12                        ;/*  Auteur : Olivier ZARDINI  *  Brutal Deluxe So
                    ftware  *  Avril 2013  */
    13                        ;/************************************************
                    ************************/
    14                        ;
    15                        ;#include "omf/OMF_Load.h"
    16                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\omf/OMF_Load.h",0
    17                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxtypes.h",0
    18                        	.stag	_fx_bytebits,8,1
    19                        	.member	b7,0,14,17,1
    20                        	.member	b6,1,14,17,1
    21                        	.member	b5,2,14,17,1
    22                        	.member	b4,3,14,17,1
    23                        	.member	b3,4,14,17,1
    24                        	.member	b2,5,14,17,1
    25                        	.member	b1,6,14,17,1
    26                        	.member	b0,7,14,17,1
    27                        	.eos
    28                        	.stag	_fx_node,384,2
    29                        	.member	type,0,14,8,8
    30                        	.member	Reserved0,8,14,8,8
    31                        	.member	data,16,129,8,32
    32                        	.member	last,48,138,8,32,2
    33                        	.member	next,80,138,8,32,2
    34                        	.member	name,112,110,8,0,32
    35                        	.member	Reserved1,368,16,8,16
    36                        	.eos
    37                        	.stag	_fx_nodelist,96,3
    38                        	.member	listhead,0,138,8,32,2
    39                        	.member	listData,32,129,8,32
    40                        	.member	deallocator,64,641,8,32
    41                        	.eos
    42                        	.stag	_fx_queue,80,4
  Mon Sep 27 2021  9:39                                                Page 2


    43                        	.member	count,0,5,8,16
    44                        	.member	front,16,138,8,32,2
    45                        	.member	rear,48,138,8,32,2
    46                        	.eos
    47                        	.stag	fake5_,32,5
    48                        	.member	subsystem,0,14,8,8
    49                        	.member	level,8,14,8,8
    50                        	.member	error,16,16,8,16
    51                        	.eos
    52                        	.stag	_fx_process_signal,16,6
    53                        	.member	cbSize,0,16,8,16
    54                        	.eos
    55                        	.stag	_fx_semaphore,16,7
    56                        	.member	reserved,0,5,8,16
    57                        	.eos
    58                        	.stag	_fx_fileBlock,552,8
    59                        	.member	openCount,0,16,8,16
    60                        	.member	lockCount,16,16,8,16
    61                        	.member	dirty,32,14,8,8
    62                        	.member	fileBuffer,40,110,8,0,64
    63                        	.eos
    64                        	.stag	_fx_irq_data,48,9
    65                        	.member	line,0,5,8,16
    66                        	.member	keycode,16,142,8,32
    67                        	.eos
    68                        	.stag	_task,48,10
    69                        	.member	SPL,0,14,8,8
    70                        	.member	SPH,8,14,8,8
    71                        	.member	pstack,16,142,8,32
    72                        	.eos
    73                        	.stag	_task_stack,32,11
    74                        	.member	SS,0,142,8,32
    75                        	.eos
    76                        	.stag	int_regs,104,12
    77                        	.member	PB,0,14,8,8
    78                        	.member	PH,8,14,8,8
    79                        	.member	PL,16,14,8,8
    80                        	.member	PP,24,14,8,8
    81                        	.member	DB,32,14,8,8
    82                        	.member	DH,40,14,8,8
    83                        	.member	DL,48,14,8,8
    84                        	.member	AH,56,14,8,8
    85                        	.member	AL,64,14,8,8
    86                        	.member	XH,72,14,8,8
    87                        	.member	XL,80,14,8,8
    88                        	.member	YH,88,14,8,8
    89                        	.member	YL,96,14,8,8
    90                        	.eos
    91                        	.stag	_fx_eventMessage,312,13
    92                        	.member	src,0,18,8,32
    93                        	.member	dest,32,18,8,32
    94                        	.member	type,64,16,8,16
    95                        	.member	hwnd,80,129,8,32
    96                        	.member	pheap,112,129,8,32
    97                        	.member	msgTime,144,18,8,32
    98                        	.member	data,176,110,8,0,16
    99                        	.member	attr,304,14,8,8
   100                        	.eos
  Mon Sep 27 2021  9:39                                                Page 3


   101                        	.stag	_fx_cmdMessage,312,14
   102                        	.member	src,0,18,8,32
   103                        	.member	dest,32,18,8,32
   104                        	.member	type,64,16,8,16
   105                        	.member	hwnd,80,129,8,32
   106                        	.member	pheap,112,129,8,32
   107                        	.member	msgTime,144,18,8,32
   108                        	.member	cmdCId,176,16,8,16
   109                        	.member	cmdMId,192,16,8,16
   110                        	.member	parameter1,208,18,8,32
   111                        	.member	parameter2,240,18,8,32
   112                        	.member	parameter3,272,18,8,32
   113                        	.member	attr,304,14,8,8
   114                        	.eos
   115                        	.stag	_fx_console_ctl,448,15
   116                        	.member	maxCols,0,5,8,16
   117                        	.member	maxRows,16,5,8,16
   118                        	.member	curX,32,5,8,16
   119                        	.member	curY,48,5,8,16
   120                        	.member	fgColor,64,5,8,16
   121                        	.member	bgColor,80,5,8,16
   122                        	.member	mode,96,14,8,8
   123                        	.member	kbBuffer,104,101,8,0,16
   124                        	.member	screenBuffer,360,142,8,32
   125                        	.member	desktopMode,392,14,8,8
   126                        	.member	lastMouseButton,400,5,8,16
   127                        	.member	lastMouseX,416,5,8,16
   128                        	.member	lastMouseY,432,5,8,16
   129                        	.eos
   130                        	.stag	_fx_desktop_ctl,392,16
   131                        	.member	desktopMode,0,14,8,8
   132                        	.member	cursorCtl,8,5,8,16
   133                        	.member	cursorState,24,5,8,16
   134                        	.member	backgroundColor,40,5,8,16
   135                        	.member	foregroundColor,56,5,8,16
   136                        	.member	menuMode,72,5,8,16
   137                        	.member	lastMouseButton,88,5,8,16
   138                        	.member	lastMouseX,104,5,8,16
   139                        	.member	lastMouseY,120,5,8,16
   140                        	.member	currentDiskName,136,142,8,32
   141                        	.member	diskNodes,168,129,8,32
   142                        	.member	titleNodes,200,129,8,32
   143                        	.member	menuNodes,232,129,8,32
   144                        	.member	iconNodes,264,129,8,32
   145                        	.member	windowNodes,296,129,8,32
   146                        	.member	fontNodes,328,129,8,32
   147                        	.member	wndProc,360,138,8,32,3
   148                        	.eos
   149                        	.stag	_fx_process,800,17
   150                        	.member	cbSize,0,5,8,16
   151                        	.member	procId,16,18,8,32
   152                        	.member	parentId,48,18,8,32
   153                        	.member	ctx,80,129,8,32
   154                        	.member	userId,112,16,8,16
   155                        	.member	status,128,16,8,16
   156                        	.member	foregroundActive,144,14,8,8
   157                        	.member	tls,152,1121,8,32,8
   158                        	.member	commandLine,408,142,8,32
  Mon Sep 27 2021  9:39                                                Page 4


   159                        	.member	semaphores,440,138,8,32,3
   160                        	.member	fileHandles,472,138,8,32,3
   161                        	.member	pathList,504,138,8,32,3
   162                        	.member	resources,536,138,8,32,3
   163                        	.member	timerAware,568,14,8,8
   164                        	.member	timerTicks,576,112,8,0,2
   165                        	.member	timerTickCount,608,112,8,0,2
   166                        	.member	kernelError,640,10,8,32,5
   167                        	.member	consoleCtl,672,138,8,32,15
   168                        	.member	desktopCtl,704,138,8,32,16
   169                        	.member	execProc,736,641,8,32
   170                        	.member	startupArgs,768,129,8,32
   171                        	.eos
   172                        	.stag	_fxProcessMessage,112,18
   173                        	.member	src,0,18,8,32
   174                        	.member	dest,32,18,8,32
   175                        	.member	type,64,16,8,16
   176                        	.member	processInfo,80,138,8,32,17
   177                        	.eos
   178                        	.stag	_k_key_state,112,19
   179                        	.member	scanCode,0,14,8,8
   180                        	.member	isShifted,8,14,8,8
   181                        	.member	isAlt,16,14,8,8
   182                        	.member	isExtended,24,14,8,8
   183                        	.member	isCapsLock,32,14,8,8
   184                        	.member	isNumLock,40,14,8,8
   185                        	.member	isScrollLock,48,14,8,8
   186                        	.member	keyChar,56,16,8,16
   187                        	.member	scanTime,72,18,8,32
   188                        	.member	ledStatus,104,14,8,8
   189                        	.eos
   190                        	.stag	_fx_property,384,20
   191                        	.member	name,0,110,8,0,16
   192                        	.member	value,128,110,8,0,32
   193                        	.eos
   194                        	.utag	_24bitPointer,32,21
   195                        	.member	address,0,142,11,32
   196                        	.member	bytes,0,110,11,0,4
   197                        	.eos
   198                        	.stag	_PointStruct,32,22
   199                        	.member	x,0,5,8,16
   200                        	.member	y,16,5,8,16
   201                        	.eos
   202                        	.stag	_RectStruct,112,23
   203                        	.member	x,0,5,8,16
   204                        	.member	y,16,5,8,16
   205                        	.member	z,32,18,8,32
   206                        	.member	width,64,5,8,16
   207                        	.member	height,80,5,8,16
   208                        	.member	attr,96,5,8,16
   209                        	.eos
   210                        	.stag	fake24_,96,24
   211                        	.member	name,0,142,8,32
   212                        	.member	topLeft,32,10,8,32,22
   213                        	.member	bottomRight,64,10,8,32,22
   214                        	.eos
   215                        	.stag	fake25_,112,25
   216                        	.member	x,0,5,8,16
  Mon Sep 27 2021  9:39                                                Page 5


   217                        	.member	y,16,5,8,16
   218                        	.member	z,32,5,8,16
   219                        	.member	width,48,5,8,16
   220                        	.member	height,64,5,8,16
   221                        	.member	data,80,18,8,32
   222                        	.eos
   223                        	.stag	_k_WindowClass,272,26
   224                        	.member	cbSize,0,16,8,16
   225                        	.member	style,16,16,8,16
   226                        	.member	styleEx,32,16,8,16
   227                        	.member	pWndProc,48,654,8,32
   228                        	.member	hInstance,80,129,8,32
   229                        	.member	hIcon,112,129,8,32
   230                        	.member	hCursor,144,129,8,32
   231                        	.member	hbrBackground,176,129,8,32
   232                        	.member	lpszMenuName,208,142,8,32
   233                        	.member	lpszClassName,240,142,8,32
   234                        	.eos
   235                        	.stag	_ClickableRect,152,27
   236                        	.member	area,0,10,8,112,23
   237                        	.member	z,112,18,8,32
   238                        	.member	enabled,144,14,8,8
   239                        	.eos
   240                        	.stag	_NCClickableRect,136,28
   241                        	.member	area,0,10,8,112,23
   242                        	.member	msgType,112,16,8,16
   243                        	.member	enabled,128,14,8,8
   244                        	.eos
   245                        	.stag	_DragData,216,29
   246                        	.member	area,0,10,8,112,23
   247                        	.member	xoffset,112,5,8,16
   248                        	.member	yoffset,128,5,8,16
   249                        	.member	msgType,144,16,8,16
   250                        	.member	ncAction,160,16,8,16
   251                        	.member	isDrag,176,14,8,8
   252                        	.member	isResize,184,14,8,8
   253                        	.member	canDrag,192,14,8,8
   254                        	.member	canDrop,200,14,8,8
   255                        	.member	didDrag,208,14,8,8
   256                        	.eos
   257                        	.stag	_k_WindowStruct,3904,30
   258                        	.member	cbSize,0,16,8,16
   259                        	.member	style,16,18,8,32
   260                        	.member	styleEx,48,18,8,32
   261                        	.member	win_id,80,5,8,16
   262                        	.member	win_x,96,5,8,16
   263                        	.member	win_y,112,5,8,16
   264                        	.member	win_width,128,5,8,16
   265                        	.member	win_height,144,5,8,16
   266                        	.member	win_xoffset,160,5,8,16
   267                        	.member	win_yoffset,176,5,8,16
   268                        	.member	win_cxoffset,192,5,8,16
   269                        	.member	win_cyoffset,208,5,8,16
   270                        	.member	wndRect,224,10,8,112,23
   271                        	.member	clientRect,336,10,8,112,23
   272                        	.member	nonclientGadgets,448,106,8,0,28,16
   273                        	.member	clickable,2624,129,8,32
   274                        	.member	win_title,2656,110,8,0,32
  Mon Sep 27 2021  9:39                                                Page 6


   275                        	.member	Reserved0,2912,16,8,16
   276                        	.member	win_class,2928,110,8,0,16
   277                        	.member	win_class_name,3056,110,8,0,32
   278                        	.member	nBitmapLayer,3312,16,8,16
   279                        	.member	bgRegion,3328,129,8,32
   280                        	.member	procid,3360,18,8,32
   281                        	.member	pWndClass,3392,138,8,32,26
   282                        	.member	pParentWindow,3424,129,8,32
   283                        	.member	hMenu,3456,129,8,32
   284                        	.member	hPointer,3488,129,8,32
   285                        	.member	hBackground,3520,129,8,32
   286                        	.member	pChildWindows,3552,138,8,32,3
   287                        	.member	pChildHitList,3584,138,8,32,3
   288                        	.member	isVisible,3616,14,8,8
   289                        	.member	windowData,3624,129,8,32
   290                        	.member	clientData,3656,1121,8,32,6
   291                        	.member	isClosed,3848,14,8,8
   292                        	.member	isClosing,3856,14,8,8
   293                        	.member	isDesktop,3864,14,8,8
   294                        	.member	clickableNode,3872,138,8,32,2
   295                        	.eos
   296                        	.stag	_k_WindowStructEx,3880,31
   297                        	.member	cbSize,0,16,8,16
   298                        	.member	style,16,18,8,32
   299                        	.member	styleEx,48,18,8,32
   300                        	.member	win_id,80,5,8,16
   301                        	.member	win_x,96,5,8,16
   302                        	.member	win_y,112,5,8,16
   303                        	.member	win_width,128,5,8,16
   304                        	.member	win_height,144,5,8,16
   305                        	.member	win_xoffset,160,5,8,16
   306                        	.member	win_yoffset,176,5,8,16
   307                        	.member	win_cxoffset,192,5,8,16
   308                        	.member	win_cyoffset,208,5,8,16
   309                        	.member	wndRect,224,10,8,112,23
   310                        	.member	clientRect,336,10,8,112,23
   311                        	.member	nonclientGadgets,448,106,8,0,28,16
   312                        	.member	clickable,2624,129,8,32
   313                        	.member	win_title,2656,110,8,0,32
   314                        	.member	Reserved0,2912,16,8,16
   315                        	.member	win_class,2928,110,8,0,16
   316                        	.member	nBitmapLayer,3056,16,8,16
   317                        	.member	procid,3072,18,8,32
   318                        	.member	pWndClass,3104,138,8,32,26
   319                        	.member	pParentWindow,3136,129,8,32
   320                        	.member	hMenu,3168,129,8,32
   321                        	.member	hPointer,3200,129,8,32
   322                        	.member	hBackground,3232,129,8,32
   323                        	.member	pChildWindows,3264,138,8,32,3
   324                        	.member	pChildHitList,3296,138,8,32,3
   325                        	.member	isVisible,3328,14,8,8
   326                        	.member	windowData,3336,129,8,32
   327                        	.member	clientData,3368,1121,8,32,4
   328                        	.member	isClosed,3496,14,8,8
   329                        	.member	hWnd,3504,129,8,32
   330                        	.member	localRect,3536,10,8,112,23
   331                        	.member	globalRect,3648,10,8,112,23
   332                        	.member	clientOffsetRect,3760,10,8,112,23
  Mon Sep 27 2021  9:39                                                Page 7


   333                        	.member	isDesktop,3872,14,8,8
   334                        	.eos
   335                        	.stag	_FontMetric,32,32
   336                        	.member	width,0,5,8,16
   337                        	.member	height,16,5,8,16
   338                        	.eos
   339                        	.stag	_MenuStruct,280,33
   340                        	.member	cx,0,5,8,16
   341                        	.member	cy,16,5,8,16
   342                        	.member	width,32,5,8,16
   343                        	.member	height,48,5,8,16
   344                        	.member	fcolor,64,14,8,8
   345                        	.member	bcolor,72,14,8,8
   346                        	.member	chromeLeft,80,14,8,8
   347                        	.member	chromeRight1,88,14,8,8
   348                        	.member	chromeRight2,96,14,8,8
   349                        	.member	hFont,104,129,8,32
   350                        	.member	itemId,136,16,8,16
   351                        	.member	pCaption,152,142,8,32
   352                        	.member	subMenus,184,138,8,32,3
   353                        	.member	pBackground,216,129,8,32
   354                        	.member	hWndOwner,248,129,8,32
   355                        	.eos
   356                        	.stag	fake34_,160,34
   357                        	.member	menuId,0,16,8,16
   358                        	.member	caption,16,142,8,32
   359                        	.member	rect,48,10,8,112,23
   360                        	.eos
   361                        	.stag	fake35_,5152,35
   362                        	.member	pParent,0,138,8,32,30
   363                        	.member	rect,32,10,8,112,23
   364                        	.member	captions,144,1134,8,32,24
   365                        	.member	chrome,912,110,8,0,24
   366                        	.member	ids,1104,112,8,0,24
   367                        	.member	clickable,1488,106,8,0,27,24
   368                        	.member	selected,5136,16,8,16
   369                        	.eos
   370                        	.stag	_fx_button_t,96,36
   371                        	.member	pCaption,0,142,8,32
   372                        	.member	cCaption,32,16,8,16
   373                        	.member	data,48,129,8,32
   374                        	.member	captionPixelWidth,80,16,8,16
   375                        	.eos
   376                        	.stag	_fx_scrollbar_t,240,37
   377                        	.member	min,0,16,8,16
   378                        	.member	max,16,16,8,16
   379                        	.member	increment,32,16,8,16
   380                        	.member	stopsize,48,16,8,16
   381                        	.member	location,64,5,8,16
   382                        	.member	state,80,5,8,16
   383                        	.member	rectThumb,96,10,8,112,23
   384                        	.member	data,208,129,8,32
   385                        	.eos
   386                        	.stag	_fx_listbox_t,240,38
   387                        	.member	pos,0,5,8,16
   388                        	.member	selected,16,16,8,16
   389                        	.member	offsetX,32,5,8,16
   390                        	.member	offsetY,48,5,8,16
  Mon Sep 27 2021  9:39                                                Page 8


   391                        	.member	inc,64,5,8,16
   392                        	.member	direction,80,5,8,16
   393                        	.member	top,96,5,8,16
   394                        	.member	bottom,112,5,8,16
   395                        	.member	indexTop,128,5,8,16
   396                        	.member	indexBottom,144,5,8,16
   397                        	.member	maxItems,160,16,8,16
   398                        	.member	fontSet,176,142,8,32
   399                        	.member	data,208,129,8,32
   400                        	.eos
   401                        	.stag	_fx_textbox_t,144,39
   402                        	.member	pos,0,5,8,16
   403                        	.member	selected,16,16,8,16
   404                        	.member	offsetX,32,5,8,16
   405                        	.member	offsetY,48,5,8,16
   406                        	.member	isShifted,64,14,8,8
   407                        	.member	cursorState,72,14,8,8
   408                        	.member	fontSet,80,142,8,32
   409                        	.member	data,112,129,8,32
   410                        	.eos
   411                        	.stag	_fx_msgbox_t,144,40
   412                        	.member	pos,0,5,8,16
   413                        	.member	selected,16,16,8,16
   414                        	.member	offsetX,32,5,8,16
   415                        	.member	offsetY,48,5,8,16
   416                        	.member	isShifted,64,14,8,8
   417                        	.member	cursorState,72,14,8,8
   418                        	.member	fontSet,80,142,8,32
   419                        	.member	data,112,129,8,32
   420                        	.eos
   421                        	.stag	_fx_menuAnchor_t,272,41
   422                        	.member	pCaption,0,142,8,32
   423                        	.member	renderLayoutX,32,16,8,16
   424                        	.member	renderLayoutY,48,16,8,16
   425                        	.member	captionPixelWidth,64,16,8,16
   426                        	.member	data,80,129,8,32
   427                        	.member	droppedWindow,112,138,8,32,30
   428                        	.member	bytes,144,110,8,0,16
   429                        	.eos
   430                        	.stag	_SubMenuStruct,64,42
   431                        	.member	caption,0,142,8,32
   432                        	.member	action,32,641,8,32
   433                        	.eos
   434                        	.stag	_SubMenuListStruct,40,43
   435                        	.member	cMenus,0,14,8,8
   436                        	.member	psubmenus,8,9354,8,32,42
   437                        	.eos
   438                        	.stag	_fx_ComBuffer,2080,44
   439                        	.member	cbSize,0,16,8,16
   440                        	.member	cbBuffer,16,16,8,16
   441                        	.member	buffer,32,110,8,0,256
   442                        	.eos
   443                        	.stag	_fx_resource_header,72,45
   444                        	.member	magic,0,110,8,0,4
   445                        	.member	major,32,14,8,8
   446                        	.member	minor,40,14,8,8
   447                        	.member	type,48,14,8,8
   448                        	.member	reserved,56,14,8,8
  Mon Sep 27 2021  9:39                                                Page 9


   449                        	.member	resheaderSize,64,14,8,8
   450                        	.eos
   451                        	.stag	_fx_resource_header_font,144,46
   452                        	.member	title,0,110,8,0,16
   453                        	.member	height,128,14,8,8
   454                        	.member	width,136,14,8,8
   455                        	.eos
   456                        	.stag	_fx_resource_string,32,47
   457                        	.member	locale,0,110,8,0,2
   458                        	.member	entries,16,16,8,16
   459                        	.eos
   460                        	.stag	_fx_resource_string_entry,40,48
   461                        	.member	index,0,16,8,16
   462                        	.member	length,16,16,8,16
   463                        	.member	data,32,14,8,8
   464                        	.eos
   465                        	.line	1064
   466                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\omf/OMF_Load.h",9
   467                        	.stag	omf_segment_header,20984,49
   468                        	.member	FileOffset,0,18,8,32
   469                        	.member	SegmentOffset,32,18,8,32
   470                        	.member	BlockCnt,64,18,8,32
   471                        	.member	ByteCnt,96,18,8,32
   472                        	.member	ResSpc,128,18,8,32
   473                        	.member	Length,160,18,8,32
   474                        	.member	Type,192,14,8,8
   475                        	.member	undefine_1,200,14,8,8
   476                        	.member	LabLen,208,14,8,8
   477                        	.member	NumLen,216,14,8,8
   478                        	.member	Version,224,14,8,8
   479                        	.member	BankSize,232,18,8,32
   480                        	.member	Kind,264,5,8,16
   481                        	.member	undefine_2,280,14,8,8
   482                        	.member	undefine_3,288,14,8,8
   483                        	.member	Org,296,18,8,32
   484                        	.member	Align,328,18,8,32
   485                        	.member	NumSEx,360,14,8,8
   486                        	.member	LCBank,368,14,8,8
   487                        	.member	undefine_4,376,14,8,8
   488                        	.member	SegNum,384,5,8,16
   489                        	.member	EntryPointOffset,400,18,8,32
   490                        	.member	DispNameOffset,432,5,8,16
   491                        	.member	DispDataOffset,448,5,8,16
   492                        	.member	TempOrgLength,464,5,8,16
   493                        	.member	TempOrg,480,110,8,0,2048
   494                        	.member	LoadName,16864,110,8,0,256
   495                        	.member	SegName,18912,110,8,0,256
   496                        	.member	undefine_5,20960,14,8,8
   497                        	.member	undefine_6,20968,14,8,8
   498                        	.member	undefine_7,20976,14,8,8
   499                        	.eos
   500                        	.stag	omf_segment,21288,50
   501                        	.member	header,0,10,8,20984,49
   502                        	.member	nb_record,20984,5,8,16
   503                        	.member	first_record,21000,138,8,32,0
   504                        	.member	last_record,21032,138,8,32,0
   505                        	.member	data_offset,21064,5,8,16
  Mon Sep 27 2021  9:39                                                Page 10


   506                        	.member	data_length,21080,5,8,16
   507                        	.member	data,21096,142,8,32
   508                        	.member	reloc_offset,21128,5,8,16
   509                        	.member	reloc_length,21144,5,8,16
   510                        	.member	nb_reloc,21160,5,8,16
   511                        	.member	tab_reloc,21176,1162,8,32,0
   512                        	.member	nb_interseg,21208,5,8,16
   513                        	.member	tab_interseg,21224,1162,8,32,0
   514                        	.member	next,21256,138,8,32,50
   515                        	.eos
   516                        	.stag	omf_file,192,51
   517                        	.member	file_path,0,142,8,32
   518                        	.member	file_name,32,142,8,32
   519                        	.member	data_length,64,5,8,16
   520                        	.member	data,80,142,8,32
   521                        	.member	nb_segment,112,5,8,16
   522                        	.member	first_segment,128,138,8,32,50
   523                        	.member	last_segment,160,138,8,32,50
   524                        	.eos
   525                        	.line	113
   526                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\omf/OMF_Load.c",9
   527                        ;
   528                        ;#include "fxtypes.h"
   529                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxtypes.h",0
   530                        	.line	1064
   531                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\omf/OMF_Load.c",11
   532                        ;#include "fxmemorymanager.h"
   533                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxmemorymanager.h",0
   534                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxos.h",0
   535                        	.file	"G:\devtools\WDCTools\wdc\Tools\include\
                    stdlib.h",0
   536                        	.file	"G:\devtools\WDCTools\wdc\Tools\include\
                    stddef.h",0
   537                        	.line	88
   538                        	.file	"G:\devtools\WDCTools\wdc\Tools\include\
                    stdlib.h",43
   539                        	.stag	fake52_,32,52
   540                        	.member	quot,0,5,8,16
   541                        	.member	rem,16,5,8,16
   542                        	.eos
   543                        	.stag	fake53_,64,53
   544                        	.member	quot,0,7,8,32
   545                        	.member	rem,32,7,8,32
   546                        	.eos
   547                        	.stag	int_sqrt,32,54
   548                        	.member	sqrt,0,16,8,16
   549                        	.member	frac,16,16,8,16
   550                        	.eos
   551                        	.line	205
   552                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxos.h",4
   553                        	.file	"G:\devtools\WDCTools\wdc\Tools\include\
                    string.h",0
  Mon Sep 27 2021  9:39                                                Page 11


   554                        	.line	134
   555                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxos.h",5
   556                        	.file	"G:\devtools\WDCTools\wdc\Tools\include\
                    ctype.h",0
   557                        	.line	103
   558                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxos.h",6
   559                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxtypes.h",0
   560                        	.line	1064
   561                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxos.h",8
   562                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxstringtable.h",0
   563                        	.line	90
   564                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxos.h",9
   565                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxc256u.h",0
   566                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxtypes.h",0
   567                        	.line	1064
   568                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxc256u.h",5
   569                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fmx_vicky.h",0
   570                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxtypes.h",0
   571                        	.line	1064
   572                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fmx_vicky.h",11
   573                        	.line	72
   574                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxc256u.h",6
   575                        	.line	1963
   576                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxos.h",16
   577                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxkernel.h",0
   578                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxos.h",0
   579                        	.line	30
   580                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxkernel.h",5
   581                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxnode.h",0
   582                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxtypes.h",0
   583                        	.line	1064
   584                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxnode.h",11
   585                        	.line	118
   586                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxkernel.h",6
   587                        	.stag	_fx_api_call_table,8192,55
   588                        	.member	call_table,0,1121,8,32,256
   589                        	.eos
  Mon Sep 27 2021  9:39                                                Page 12


   590                        	.stag	_fx_zero_page_irq_data,32,56
   591                        	.member	data,0,110,8,0,4
   592                        	.eos
   593                        	.stag	_fx_zero_page,720,57
   594                        	.member	fxos_mouse_byte_0,0,14,8,8
   595                        	.member	fxos_mouse_byte_1,8,14,8,8
   596                        	.member	fxos_mouse_byte_2,16,14,8,8
   597                        	.member	fxos_mouse_byte_t,24,14,8,8
   598                        	.member	fxos_mouse_byte_x_l,32,14,8,8
   599                        	.member	fxos_mouse_byte_x_h,40,14,8,8
   600                        	.member	fxos_mouse_byte_y_l,48,14,8,8
   601                        	.member	fxos_mouse_byte_y_h,56,14,8,8
   602                        	.member	fxos_key_byte_0,64,14,8,8
   603                        	.member	fxos_key_byte_1,72,14,8,8
   604                        	.member	fxos_key_byte_2,80,14,8,8
   605                        	.member	fxos_mouse_ctl,88,14,8,8
   606                        	.member	fxos_mouse_index,96,14,8,8
   607                        	.member	fxos_mouse_status,104,14,8,8
   608                        	.member	Endianness,112,16,8,16
   609                        	.member	VersionMajor,128,16,8,16
   610                        	.member	VersionMinor,144,16,8,16
   611                        	.member	VersionRelease,160,16,8,16
   612                        	.member	topMemory,176,18,8,32
   613                        	.member	bottomMemory,208,18,8,32
   614                        	.member	availableMemory,240,18,8,32
   615                        	.member	availableMemoryK,272,18,8,32
   616                        	.member	availableHeapMemory,304,18,8,32
   617                        	.member	availableHeapMemoryK,336,18,8,32
   618                        	.member	fxos_console_row,368,16,8,16
   619                        	.member	fxos_console_col,384,16,8,16
   620                        	.member	executive,400,129,8,32
   621                        	.member	eventmanager,432,129,8,32
   622                        	.member	devicemanager,464,129,8,32
   623                        	.member	windowmanager,496,129,8,32
   624                        	.member	fxos_kernel_api,528,138,8,32,55
   625                        	.member	fxos_dos_api,560,138,8,32,55
   626                        	.member	fxos_gfx_api,592,138,8,32,55
   627                        	.member	fxos_gui_api,624,138,8,32,55
   628                        	.member	fxos_con_api,656,138,8,32,55
   629                        	.member	fxos_reserved_2_api,688,138,8,32,55
   630                        	.eos
   631                        	.stag	_fx_environment,96,58
   632                        	.member	variables,0,142,8,32
   633                        	.member	reserved1,32,5,8,16
   634                        	.member	reserved2,48,5,8,16
   635                        	.member	reserved3,64,5,8,16
   636                        	.member	reserved4,80,5,8,16
   637                        	.eos
   638                        	.stag	_debug_byte_bits,8,59
   639                        	.member	bit7,0,14,17,1
   640                        	.member	bit6,1,14,17,1
   641                        	.member	bit5,2,14,17,1
   642                        	.member	bit4,3,14,17,1
   643                        	.member	bit3,4,14,17,1
   644                        	.member	bit2,5,14,17,1
   645                        	.member	bit1,6,14,17,1
   646                        	.member	bit0,7,14,17,1
   647                        	.eos
  Mon Sep 27 2021  9:39                                                Page 13


   648                        	.stag	_k_segmentheader,160,60
   649                        	.member	version_major,0,14,8,8
   650                        	.member	version_minor,8,14,8,8
   651                        	.member	length,16,5,8,16
   652                        	.member	segment_start_addr,32,7,8,32
   653                        	.member	segment_end_addr,64,7,8,32
   654                        	.member	segment_size,96,7,8,32
   655                        	.member	main_entry_addr,128,7,8,32
   656                        	.eos
   657                        	.stag	_fx_device_driver,776,61
   658                        	.member	name,0,110,8,0,32
   659                        	.member	version,256,110,8,0,16
   660                        	.member	hmajor,384,110,8,0,8
   661                        	.member	hminor,448,110,8,0,8
   662                        	.member	type,512,14,8,8
   663                        	.member	designation,520,110,8,0,6
   664                        	.member	irq_ctl,568,16,8,16
   665                        	.member	f_driver_irq,584,129,8,32
   666                        	.member	driver_context,616,129,8,32
   667                        	.member	f_driver_load,648,129,8,32
   668                        	.member	f_driver_read,680,129,8,32
   669                        	.member	f_driver_write,712,129,8,32
   670                        	.member	f_driver_unload,744,129,8,32
   671                        	.eos
   672                        	.stag	_fx_block_device_driver,808,62
   673                        	.member	name,0,110,8,0,32
   674                        	.member	version,256,110,8,0,16
   675                        	.member	hmajor,384,110,8,0,8
   676                        	.member	hminor,448,110,8,0,8
   677                        	.member	type,512,14,8,8
   678                        	.member	designation,520,110,8,0,6
   679                        	.member	irq_ctl,568,16,8,16
   680                        	.member	f_driver_irq,584,129,8,32
   681                        	.member	driver_context,616,129,8,32
   682                        	.member	f_driver_load,648,129,8,32
   683                        	.member	f_driver_read,680,129,8,32
   684                        	.member	f_driver_write,712,129,8,32
   685                        	.member	f_driver_unload,744,129,8,32
   686                        	.member	f_driver_command,776,129,8,32
   687                        	.eos
   688                        	.stag	_k_irq_chain,128,63
   689                        	.member	handlers,0,5217,8,32,4
   690                        	.eos
   691                        	.line	475
   692                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxos.h",22
   693                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxconsole.h",0
   694                        	.file	"G:\devtools\WDCTools\wdc\Tools\include\
                    string.h",0
   695                        	.line	134
   696                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxconsole.h",5
   697                        	.file	"G:\devtools\WDCTools\wdc\Tools\include\
                    stdlib.h",0
   698                        	.line	205
   699                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxconsole.h",6
  Mon Sep 27 2021  9:39                                                Page 14


   700                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxtypes.h",0
   701                        	.line	1064
   702                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxconsole.h",7
   703                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxc256u.h",0
   704                        	.line	1963
   705                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxconsole.h",12
   706                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxstring.h",0
   707                        	.file	"G:\devtools\WDCTools\wdc\Tools\include\
                    stdlib.h",0
   708                        	.line	205
   709                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxstring.h",5
   710                        	.file	"G:\devtools\WDCTools\wdc\Tools\include\
                    string.h",0
   711                        	.line	134
   712                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxstring.h",6
   713                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxtypes.h",0
   714                        	.line	1064
   715                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxstring.h",7
   716                        	.stag	_fx_string,64,64
   717                        	.member	size,0,16,8,16
   718                        	.member	pos,16,5,8,16
   719                        	.member	buffer,32,142,8,32
   720                        	.eos
   721                        	.line	141
   722                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxconsole.h",17
   723                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxeventmanager.h",0
   724                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxos.h",0
   725                        	.line	30
   726                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxeventmanager.h",5
   727                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxexec.h",0
   728                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxtypes.h",0
   729                        	.line	1064
   730                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxexec.h",5
   731                        	.stag	_fxos_executive_vtable,128,65
   732                        	.member	Init,0,8833,8,32
   733                        	.member	Configure,32,656,8,32
   734                        	.member	Query,64,656,8,32
   735                        	.member	Uninit,96,641,8,32
   736                        	.eos
   737                        	.line	86
   738                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxeventmanager.h",6
  Mon Sep 27 2021  9:39                                                Page 15


   739                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxnode.h",0
   740                        	.line	118
   741                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxeventmanager.h",7
   742                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxconsole.h",0
   743                        	.line	208
   744                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxeventmanager.h",8
   745                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxwindowmanager.h",0
   746                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxos.h",0
   747                        	.line	30
   748                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxwindowmanager.h",5
   749                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxmemorymanager.h",0
   750                        	.line	129
   751                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxwindowmanager.h",6
   752                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxeventmanager.h",0
   753                        	.line	572
   754                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxwindowmanager.h",7
   755                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxgfx.h",0
   756                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxfont.h",0
   757                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxtypes.h",0
   758                        	.line	1064
   759                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxfont.h",6
   760                        	.line	74
   761                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxgfx.h",5
   762                        	.stag	_click_detected,64,66
   763                        	.member	window,0,138,8,32,30
   764                        	.member	handler,32,641,8,32
   765                        	.eos
   766                        	.stag	_current_palette_map,400,67
   767                        	.member	CUR_DESKTOP,0,5,8,16
   768                        	.member	CUR_BACKGROUND,16,5,8,16
   769                        	.member	CUR_FONT,32,5,8,16
   770                        	.member	CUR_SELECTED_FONT,48,5,8,16
   771                        	.member	CUR_HIGHLIGHT_COLOR,64,5,8,16
   772                        	.member	CUR_WINDOWFRAME,80,5,8,16
   773                        	.member	CUR_WINDOWBORDER,96,5,8,16
   774                        	.member	CUR_WINDOWSHADOW,112,5,8,16
   775                        	.member	CUR_MENU,128,5,8,16
   776                        	.member	CUR_GADGET,144,5,8,16
   777                        	.member	CUR_COLOR,160,101,8,0,15
   778                        	.eos
   779                        	.line	370
   780                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
  Mon Sep 27 2021  9:39                                                Page 16


                    space\FXOS-Beta\src\fxwindowmanager.h",8
   781                        	.stag	_fxos_winman_vtable,160,68
   782                        	.member	Events,0,641,8,32
   783                        	.member	ConfigureWindowManager,32,656,8,32
   784                        	.member	ProcessWindowEvent,64,8833,8,32
   785                        	.member	QueryWindowManager,96,656,8,32
   786                        	.member	DoWndProcs,128,641,8,32
   787                        	.eos
   788                        	.stag	fake69_,64,69
   789                        	.member	type,0,16,8,16
   790                        	.member	size,16,16,8,16
   791                        	.member	desktopAction,32,129,8,32
   792                        	.eos
   793                        	.stag	fake70_,96,70
   794                        	.member	type,0,16,8,16
   795                        	.member	caption,16,138,8,32,64
   796                        	.member	buttonType,48,16,8,16
   797                        	.member	x,64,5,8,16
   798                        	.member	y,80,5,8,16
   799                        	.eos
   800                        	.stag	_childMessage_t,64,71
   801                        	.member	msgType,0,16,8,16
   802                        	.member	msgData,16,129,8,32
   803                        	.member	dataSize,48,16,8,16
   804                        	.eos
   805                        	.line	594
   806                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxeventmanager.h",9
   807                        	.stag	_fx_main_loopvars,16,72
   808                        	.member	dummy,0,5,8,16
   809                        	.eos
   810                        	.stag	_fxMouseMessageData,64,73
   811                        	.member	button1,0,14,8,8
   812                        	.member	button2,8,14,8,8
   813                        	.member	button3,16,14,8,8
   814                        	.member	button4,24,14,8,8
   815                        	.member	x,32,16,8,16
   816                        	.member	y,48,16,8,16
   817                        	.eos
   818                        	.utag	marshalled_data,32,74
   819                        	.member	byteValue,0,14,11,8
   820                        	.member	verbValue,0,110,11,0,2
   821                        	.member	intValue,0,16,11,16
   822                        	.member	longValue,0,18,11,32
   823                        	.member	pointerValue,0,129,11,32
   824                        	.eos
   825                        	.stag	_fx_eventProcess,64,75
   826                        	.member	process,0,138,8,32,17
   827                        	.member	eventProc,32,641,8,32
   828                        	.eos
   829                        	.stag	_mouse_msg_state,184,76
   830                        	.member	lastEvent,0,18,8,32
   831                        	.member	buttonLeftDown,32,14,8,8
   832                        	.member	lastLeftDown,40,18,8,32
   833                        	.member	buttonRightDown,72,14,8,8
   834                        	.member	lastRightDown,80,18,8,32
   835                        	.member	buttonMiddleDown,112,14,8,8
   836                        	.member	lastMiddleDown,120,18,8,32
  Mon Sep 27 2021  9:39                                                Page 17


   837                        	.member	lastX,152,16,8,16
   838                        	.member	lastY,168,16,8,16
   839                        	.eos
   840                        	.stag	_fxos_eventmanager_vtable,192,77
   841                        	.member	EventQueue,0,138,8,32,4
   842                        	.member	Init,32,8833,8,32
   843                        	.member	Run,64,656,8,32
   844                        	.member	Configure,96,656,8,32
   845                        	.member	Query,128,656,8,32
   846                        	.member	Uninit,160,641,8,32
   847                        	.eos
   848                        	.stag	_k_clipboard_data,168,78
   849                        	.member	type,0,14,8,8
   850                        	.member	readable,8,110,8,0,16
   851                        	.member	data,136,129,8,32
   852                        	.eos
   853                        	.line	572
   854                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxconsole.h",18
   855                        	.stag	_fx_spinner_ctx,48,79
   856                        	.member	index,0,5,8,16
   857                        	.member	spinner,16,142,8,32
   858                        	.eos
   859                        	.stag	_fx_console_ctx,1144,80
   860                        	.member	lineBufferIndex,0,5,8,16
   861                        	.member	lineBuffer,16,110,8,0,128
   862                        	.member	isShifted,1040,14,8,8
   863                        	.member	userData,1048,129,8,32
   864                        	.member	screenBuffer,1080,129,8,32
   865                        	.member	Reserved1,1112,129,8,32
   866                        	.eos
   867                        	.stag	_token,64,81
   868                        	.member	type,0,5,8,16
   869                        	.member	depth,16,16,8,16
   870                        	.member	text,32,142,8,32
   871                        	.eos
   872                        	.stag	_command_args,64,82
   873                        	.member	proc,0,656,8,32
   874                        	.member	tokens,32,138,8,32,2
   875                        	.eos
   876                        	.line	208
   877                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxos.h",23
   878                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxstring.h",0
   879                        	.line	141
   880                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxos.h",24
   881                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxnode.h",0
   882                        	.line	118
   883                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxos.h",25
   884                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\ff/ff.h",0
   885                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\ff/ffconf.h",0
   886                        	.line	298
  Mon Sep 27 2021  9:39                                                Page 18


   887                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\ff/ff.h",29
   888                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxtypes.h",0
   889                        	.line	1064
   890                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\ff/ff.h",30
   891                        	.stag	fake83_,4504,83
   892                        	.member	fs_type,0,14,8,8
   893                        	.member	pdrv,8,14,8,8
   894                        	.member	n_fats,16,14,8,8
   895                        	.member	wflag,24,14,8,8
   896                        	.member	fsi_flag,32,14,8,8
   897                        	.member	id,40,5,8,16
   898                        	.member	n_rootdir,56,5,8,16
   899                        	.member	csize,72,5,8,16
   900                        	.member	lfnbuf,88,144,8,32
   901                        	.member	last_clst,120,18,8,32
   902                        	.member	free_clst,152,18,8,32
   903                        	.member	n_fatent,184,18,8,32
   904                        	.member	fsize,216,18,8,32
   905                        	.member	volbase,248,18,8,32
   906                        	.member	fatbase,280,18,8,32
   907                        	.member	dirbase,312,18,8,32
   908                        	.member	database,344,18,8,32
   909                        	.member	winsect,376,18,8,32
   910                        	.member	win,408,110,8,0,512
   911                        	.eos
   912                        	.stag	fake84_,128,84
   913                        	.member	fs,0,138,8,32,83
   914                        	.member	id,32,5,8,16
   915                        	.member	attr,48,14,8,8
   916                        	.member	stat,56,14,8,8
   917                        	.member	sclust,64,18,8,32
   918                        	.member	objsize,96,18,8,32
   919                        	.eos
   920                        	.stag	fake85_,4400,85
   921                        	.member	obj,0,10,8,128,84
   922                        	.member	flag,128,14,8,8
   923                        	.member	err,136,14,8,8
   924                        	.member	fptr,144,18,8,32
   925                        	.member	clust,176,18,8,32
   926                        	.member	sect,208,18,8,32
   927                        	.member	dir_sect,240,18,8,32
   928                        	.member	dir_ptr,272,142,8,32
   929                        	.member	buf,304,110,8,0,512
   930                        	.eos
   931                        	.stag	fake86_,416,86
   932                        	.member	obj,0,10,8,128,84
   933                        	.member	dptr,128,18,8,32
   934                        	.member	clust,160,18,8,32
   935                        	.member	sect,192,18,8,32
   936                        	.member	dir,224,142,8,32
   937                        	.member	fn,256,110,8,0,12
   938                        	.member	blk_ofs,352,18,8,32
   939                        	.member	pat,384,142,8,32
   940                        	.eos
   941                        	.stag	fake87_,2224,87
  Mon Sep 27 2021  9:39                                                Page 19


   942                        	.member	fsize,0,18,8,32
   943                        	.member	fdate,32,5,8,16
   944                        	.member	ftime,48,5,8,16
   945                        	.member	fattrib,64,14,8,8
   946                        	.member	altname,72,110,8,0,13
   947                        	.member	fname,176,110,8,0,256
   948                        	.eos
   949                        	.stag	fake88_,80,88
   950                        	.member	fmt,0,14,8,8
   951                        	.member	n_fat,8,14,8,8
   952                        	.member	align,16,16,8,16
   953                        	.member	n_root,32,16,8,16
   954                        	.member	au_size,48,18,8,32
   955                        	.eos
   956                        	.line	429
   957                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxos.h",26
   958                        	.line	30
   959                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxmemorymanager.h",5
   960                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\umm_malloc_cfg.h",0
   961                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxos_build_parameters.h",0
   962                        	.line	35
   963                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\umm_malloc_cfg.h",8
   964                        	.stag	UMM_HEAP_INFO_t,256,89
   965                        	.member	totalEntries,0,18,8,32
   966                        	.member	usedEntries,32,18,8,32
   967                        	.member	freeEntries,64,18,8,32
   968                        	.member	totalBlocks,96,18,8,32
   969                        	.member	usedBlocks,128,18,8,32
   970                        	.member	freeBlocks,160,18,8,32
   971                        	.member	maxFreeContiguousBlocks,192,18,8,32
   972                        	.member	blockSize,224,18,8,32
   973                        	.eos
   974                        	.line	199
   975                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxmemorymanager.h",6
   976                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\umm_malloc.h",0
   977                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxtypes.h",0
   978                        	.line	1064
   979                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\umm_malloc.h",11
   980                        	.line	24
   981                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxmemorymanager.h",7
   982                        	.stag	_fx_memory_map,2072,90
   983                        	.member	availableMemory,0,18,8,32
   984                        	.member	valid_segments,32,110,8,0,255
   985                        	.eos
   986                        	.stag	_fx_ipc_port,144,91
   987                        	.member	id,0,18,8,32
   988                        	.member	type,32,14,8,8
   989                        	.member	name,40,138,8,32,64
  Mon Sep 27 2021  9:39                                                Page 20


   990                        	.member	time,72,18,8,32
   991                        	.member	queue,104,138,8,32,4
   992                        	.member	reserved_1,136,14,8,8
   993                        	.eos
   994                        	.stag	_k_mem_alloc_header,80,92
   995                        	.member	user,0,14,8,8
   996                        	.member	attr,8,14,8,8
   997                        	.member	size,16,18,8,32
   998                        	.member	virtual,48,129,8,32
   999                        	.eos
  1000                        	.line	129
  1001                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\omf/OMF_Load.c",12
  1002                        ;/*
  1003                        ;#include <stdlib.h>
  1004                        ;#include <string.h>
  1005                        ;*/
  1006                        ;
  1007                        ;
  1008                        ;#include "omf/OMF_Dc_Memory.h"
  1009                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\omf/OMF_Dc_Memory.h",0
  1010                        	.line	24
  1011                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\omf/OMF_Load.c",19
  1012                        ;#include "omf/OMF_Dc_Shared.h"
  1013                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\omf/OMF_Dc_Shared.h",0
  1014                        	.line	18
  1015                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\omf/OMF_Load.c",20
  1016                        ;#include "omf/OMF_Record.h"
  1017                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\omf/OMF_Record.h",0
  1018                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxtypes.h",0
  1019                        	.line	1064
  1020                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\omf/OMF_Record.h",8
  1021                        	.stag	omf_body_record,168,93
  1022                        	.member	FileOffset,0,18,8,32
  1023                        	.member	SegmentOffset,32,18,8,32
  1024                        	.member	operation_code,64,14,8,8
  1025                        	.member	length,72,5,8,16
  1026                        	.member	record_data,88,129,8,32
  1027                        	.member	processed,120,5,8,16
  1028                        	.member	next,136,138,8,32,93
  1029                        	.eos
  1030                        	.stag	subrecord_SuperReloc2,16520,94
  1031                        	.member	FileOffset,0,18,8,32
  1032                        	.member	SegmentOffset,32,18,8,32
  1033                        	.member	Count,64,14,8,8
  1034                        	.member	ByteCnt,72,14,8,8
  1035                        	.member	BitShiftCnt,80,14,8,8
  1036                        	.member	nb_address,88,5,8,16
  1037                        	.member	OffsetPatch,104,114,8,0,256
  1038                        	.member	OffsetReference,8296,114,8,0,256
  1039                        	.member	next,16488,138,8,32,94
  Mon Sep 27 2021  9:39                                                Page 21


  1040                        	.eos
  1041                        	.stag	subrecord_SuperReloc3,16520,95
  1042                        	.member	FileOffset,0,18,8,32
  1043                        	.member	SegmentOffset,32,18,8,32
  1044                        	.member	Count,64,14,8,8
  1045                        	.member	ByteCnt,72,14,8,8
  1046                        	.member	BitShiftCnt,80,14,8,8
  1047                        	.member	nb_address,88,5,8,16
  1048                        	.member	OffsetPatch,104,114,8,0,256
  1049                        	.member	OffsetReference,8296,114,8,0,256
  1050                        	.member	next,16488,138,8,32,95
  1051                        	.eos
  1052                        	.stag	subrecord_SuperInterseg1,20632,96
  1053                        	.member	FileOffset,0,18,8,32
  1054                        	.member	SegmentOffset,32,18,8,32
  1055                        	.member	Count,64,14,8,8
  1056                        	.member	ByteCnt,72,14,8,8
  1057                        	.member	BitShiftCnt,80,14,8,8
  1058                        	.member	FileNum,88,5,8,16
  1059                        	.member	nb_address,104,5,8,16
  1060                        	.member	OffsetPatch,120,114,8,0,256
  1061                        	.member	OffsetReference,8312,114,8,0,256
  1062                        	.member	SegNum,16504,101,8,0,256
  1063                        	.member	next,20600,138,8,32,96
  1064                        	.eos
  1065                        	.stag	subrecord_SuperInterseg212,20632,97
  1066                        	.member	FileOffset,0,18,8,32
  1067                        	.member	SegmentOffset,32,18,8,32
  1068                        	.member	Count,64,14,8,8
  1069                        	.member	ByteCnt,72,14,8,8
  1070                        	.member	BitShiftCnt,80,14,8,8
  1071                        	.member	FileNum,88,5,8,16
  1072                        	.member	nb_address,104,5,8,16
  1073                        	.member	OffsetPatch,120,114,8,0,256
  1074                        	.member	OffsetReference,8312,114,8,0,256
  1075                        	.member	SegNum,16504,101,8,0,256
  1076                        	.member	next,20600,138,8,32,97
  1077                        	.eos
  1078                        	.stag	subrecord_SuperInterseg1324,16544,98
  1079                        	.member	FileOffset,0,18,8,32
  1080                        	.member	SegmentOffset,32,18,8,32
  1081                        	.member	Count,64,14,8,8
  1082                        	.member	ByteCnt,72,14,8,8
  1083                        	.member	BitShiftCnt,80,14,8,8
  1084                        	.member	SegNum,88,14,8,8
  1085                        	.member	FileNum,96,5,8,16
  1086                        	.member	nb_address,112,5,8,16
  1087                        	.member	OffsetPatch,128,114,8,0,256
  1088                        	.member	OffsetReference,8320,114,8,0,256
  1089                        	.member	next,16512,138,8,32,98
  1090                        	.eos
  1091                        	.stag	subrecord_SuperInterseg2536,16544,99
  1092                        	.member	FileOffset,0,18,8,32
  1093                        	.member	SegmentOffset,32,18,8,32
  1094                        	.member	Count,64,14,8,8
  1095                        	.member	ByteCnt,72,14,8,8
  1096                        	.member	BitShiftCnt,80,14,8,8
  1097                        	.member	SegNum,88,14,8,8
  Mon Sep 27 2021  9:39                                                Page 22


  1098                        	.member	FileNum,96,5,8,16
  1099                        	.member	nb_address,112,5,8,16
  1100                        	.member	OffsetPatch,128,114,8,0,256
  1101                        	.member	OffsetReference,8320,114,8,0,256
  1102                        	.member	next,16512,138,8,32,99
  1103                        	.eos
  1104                        	.stag	record_END,72,100
  1105                        	.member	FileOffset,0,18,8,32
  1106                        	.member	SegmentOffset,32,18,8,32
  1107                        	.member	operation_code,64,14,8,8
  1108                        	.eos
  1109                        	.stag	record_CONST,112,101
  1110                        	.member	FileOffset,0,18,8,32
  1111                        	.member	SegmentOffset,32,18,8,32
  1112                        	.member	operation_code,64,14,8,8
  1113                        	.member	ByteCnt,72,14,8,8
  1114                        	.member	data,80,142,8,32
  1115                        	.eos
  1116                        	.stag	record_ALIGN,72,102
  1117                        	.member	FileOffset,0,18,8,32
  1118                        	.member	SegmentOffset,32,18,8,32
  1119                        	.member	operation_code,64,14,8,8
  1120                        	.eos
  1121                        	.stag	record_ORG,72,103
  1122                        	.member	FileOffset,0,18,8,32
  1123                        	.member	SegmentOffset,32,18,8,32
  1124                        	.member	operation_code,64,14,8,8
  1125                        	.eos
  1126                        	.stag	record_RELOC,152,104
  1127                        	.member	FileOffset,0,18,8,32
  1128                        	.member	SegmentOffset,32,18,8,32
  1129                        	.member	operation_code,64,14,8,8
  1130                        	.member	ByteCnt,72,14,8,8
  1131                        	.member	BitShiftCnt,80,14,8,8
  1132                        	.member	OffsetPatch,88,18,8,32
  1133                        	.member	OffsetReference,120,18,8,32
  1134                        	.eos
  1135                        	.stag	record_INTERSEG,184,105
  1136                        	.member	FileOffset,0,18,8,32
  1137                        	.member	SegmentOffset,32,18,8,32
  1138                        	.member	operation_code,64,14,8,8
  1139                        	.member	ByteCnt,72,14,8,8
  1140                        	.member	BitShiftCnt,80,14,8,8
  1141                        	.member	OffsetPatch,88,18,8,32
  1142                        	.member	FileNum,120,5,8,16
  1143                        	.member	SegNum,136,5,8,16
  1144                        	.member	OffsetReference,152,18,8,32
  1145                        	.eos
  1146                        	.stag	record_USING,72,106
  1147                        	.member	FileOffset,0,18,8,32
  1148                        	.member	SegmentOffset,32,18,8,32
  1149                        	.member	operation_code,64,14,8,8
  1150                        	.eos
  1151                        	.stag	record_STRONG,72,107
  1152                        	.member	FileOffset,0,18,8,32
  1153                        	.member	SegmentOffset,32,18,8,32
  1154                        	.member	operation_code,64,14,8,8
  1155                        	.eos
  Mon Sep 27 2021  9:39                                                Page 23


  1156                        	.stag	record_GLOBAL,72,108
  1157                        	.member	FileOffset,0,18,8,32
  1158                        	.member	SegmentOffset,32,18,8,32
  1159                        	.member	operation_code,64,14,8,8
  1160                        	.eos
  1161                        	.stag	record_GEQU,72,109
  1162                        	.member	FileOffset,0,18,8,32
  1163                        	.member	SegmentOffset,32,18,8,32
  1164                        	.member	operation_code,64,14,8,8
  1165                        	.eos
  1166                        	.stag	record_MEM,72,110
  1167                        	.member	FileOffset,0,18,8,32
  1168                        	.member	SegmentOffset,32,18,8,32
  1169                        	.member	operation_code,64,14,8,8
  1170                        	.eos
  1171                        	.stag	record_EXPR,72,111
  1172                        	.member	FileOffset,0,18,8,32
  1173                        	.member	SegmentOffset,32,18,8,32
  1174                        	.member	operation_code,64,14,8,8
  1175                        	.eos
  1176                        	.stag	record_ZEXPR,72,112
  1177                        	.member	FileOffset,0,18,8,32
  1178                        	.member	SegmentOffset,32,18,8,32
  1179                        	.member	operation_code,64,14,8,8
  1180                        	.eos
  1181                        	.stag	record_BEXPR,72,113
  1182                        	.member	FileOffset,0,18,8,32
  1183                        	.member	SegmentOffset,32,18,8,32
  1184                        	.member	operation_code,64,14,8,8
  1185                        	.eos
  1186                        	.stag	record_RELEXPR,72,114
  1187                        	.member	FileOffset,0,18,8,32
  1188                        	.member	SegmentOffset,32,18,8,32
  1189                        	.member	operation_code,64,14,8,8
  1190                        	.eos
  1191                        	.stag	record_LOCAL,72,115
  1192                        	.member	FileOffset,0,18,8,32
  1193                        	.member	SegmentOffset,32,18,8,32
  1194                        	.member	operation_code,64,14,8,8
  1195                        	.eos
  1196                        	.stag	record_EQU,72,116
  1197                        	.member	FileOffset,0,18,8,32
  1198                        	.member	SegmentOffset,32,18,8,32
  1199                        	.member	operation_code,64,14,8,8
  1200                        	.eos
  1201                        	.stag	record_DS,104,117
  1202                        	.member	FileOffset,0,18,8,32
  1203                        	.member	SegmentOffset,32,18,8,32
  1204                        	.member	operation_code,64,14,8,8
  1205                        	.member	nb_zero_byte,72,18,8,32
  1206                        	.eos
  1207                        	.stag	record_LCONST,136,118
  1208                        	.member	FileOffset,0,18,8,32
  1209                        	.member	SegmentOffset,32,18,8,32
  1210                        	.member	operation_code,64,14,8,8
  1211                        	.member	ByteCnt,72,18,8,32
  1212                        	.member	data,104,142,8,32
  1213                        	.eos
  Mon Sep 27 2021  9:39                                                Page 24


  1214                        	.stag	record_LEXPR,72,119
  1215                        	.member	FileOffset,0,18,8,32
  1216                        	.member	SegmentOffset,32,18,8,32
  1217                        	.member	operation_code,64,14,8,8
  1218                        	.eos
  1219                        	.stag	record_ENTRY,72,120
  1220                        	.member	FileOffset,0,18,8,32
  1221                        	.member	SegmentOffset,32,18,8,32
  1222                        	.member	operation_code,64,14,8,8
  1223                        	.eos
  1224                        	.stag	record_cRELOC,152,121
  1225                        	.member	FileOffset,0,18,8,32
  1226                        	.member	SegmentOffset,32,18,8,32
  1227                        	.member	operation_code,64,14,8,8
  1228                        	.member	ByteCnt,72,14,8,8
  1229                        	.member	BitShiftCnt,80,14,8,8
  1230                        	.member	OffsetPatch,88,18,8,32
  1231                        	.member	OffsetReference,120,18,8,32
  1232                        	.eos
  1233                        	.stag	record_cINTERSEG,176,122
  1234                        	.member	FileOffset,0,18,8,32
  1235                        	.member	SegmentOffset,32,18,8,32
  1236                        	.member	operation_code,64,14,8,8
  1237                        	.member	ByteCnt,72,14,8,8
  1238                        	.member	BitShiftCnt,80,14,8,8
  1239                        	.member	OffsetPatch,88,18,8,32
  1240                        	.member	FileNum,120,5,8,16
  1241                        	.member	SegNum,136,14,8,8
  1242                        	.member	OffsetReference,144,18,8,32
  1243                        	.eos
  1244                        	.stag	record_SUPER,592,123
  1245                        	.member	FileOffset,0,18,8,32
  1246                        	.member	SegmentOffset,32,18,8,32
  1247                        	.member	operation_code,64,14,8,8
  1248                        	.member	ByteCnt,72,18,8,32
  1249                        	.member	RecordType,104,14,8,8
  1250                        	.member	nb_SuperReloc2,112,5,8,16
  1251                        	.member	first_SuperReloc2,128,138,8,32,94
  1252                        	.member	last_SuperReloc2,160,138,8,32,94
  1253                        	.member	nb_SuperReloc3,192,5,8,16
  1254                        	.member	first_SuperReloc3,208,138,8,32,95
  1255                        	.member	last_SuperReloc3,240,138,8,32,95
  1256                        	.member	nb_SuperInterseg1,272,5,8,16
  1257                        	.member	first_SuperInterseg1,288,138,8,32,96
  1258                        	.member	last_SuperInterseg1,320,138,8,32,96
  1259                        	.member	nb_SuperInterseg212,352,5,8,16
  1260                        	.member	first_SuperInterseg212,368,138,8,32,97
  1261                        	.member	last_SuperInterseg212,400,138,8,32,97
  1262                        	.member	nb_SuperInterseg1324,432,5,8,16
  1263                        	.member	first_SuperInterseg1324,448,138,8,32,98
  1264                        	.member	last_SuperInterseg1324,480,138,8,32,98
  1265                        	.member	nb_SuperInterseg2536,512,5,8,16
  1266                        	.member	first_SuperInterseg2536,528,138,8,32,99
  1267                        	.member	last_SuperInterseg2536,560,138,8,32,99
  1268                        	.eos
  1269                        	.stag	record_General,72,124
  1270                        	.member	FileOffset,0,18,8,32
  1271                        	.member	SegmentOffset,32,18,8,32
  Mon Sep 27 2021  9:39                                                Page 25


  1272                        	.member	operation_code,64,14,8,8
  1273                        	.eos
  1274                        	.stag	record_Experimental,72,125
  1275                        	.member	FileOffset,0,18,8,32
  1276                        	.member	SegmentOffset,32,18,8,32
  1277                        	.member	operation_code,64,14,8,8
  1278                        	.eos
  1279                        	.stag	omf_reloc,128,126
  1280                        	.member	ByteCnt,0,14,8,8
  1281                        	.member	BitShiftCnt,8,14,8,8
  1282                        	.member	OffsetPatch,16,18,8,32
  1283                        	.member	OffsetReference,48,18,8,32
  1284                        	.member	origin,80,5,8,16
  1285                        	.member	next,96,138,8,32,126
  1286                        	.eos
  1287                        	.stag	omf_interseg,160,127
  1288                        	.member	ByteCnt,0,14,8,8
  1289                        	.member	BitShiftCnt,8,14,8,8
  1290                        	.member	OffsetPatch,16,18,8,32
  1291                        	.member	OffsetReference,48,18,8,32
  1292                        	.member	FileNum,80,5,8,16
  1293                        	.member	SegNum,96,5,8,16
  1294                        	.member	origin,112,5,8,16
  1295                        	.member	next,128,138,8,32,127
  1296                        	.eos
  1297                        	.line	458
  1298                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\omf/OMF_Load.c",21
  1299                        ;
  1300                        ;static int DecodeOMFFile(struct omf_file *f);
  1301                        ;static struct omf_segment *DecodeOneSegment(struc
                    t omf_file *f,int i,int *ii);
  1302                        ;static int DecodeSegmentHeader(struct omf_file *f
                    ,int i,struct omf_segment_header *sh);
  1303                        ;static int DecodeSegmentHeaderV0(struct omf_file 
                    *f,int i,struct omf_segment_header *sh);
  1304                        ;static int DecodeSegmentHeaderV1(struct omf_file 
                    *f,int i,struct omf_segment_header *sh);
  1305                        ;static int DecodeSegmentHeaderV2(struct omf_file 
                    *f,int i,struct omf_segment_header *sh);
  1306                        ;static int DecodeSegmentBody(struct omf_file *f,i
                    nt i,struct omf_segment *s);
  1307                        ;static void mem_free_segment(struct omf_segment *
                    s);
  1308                        ;
  1309                        ;#pragma section CODE=LOADER,offset $9:B1CE
  1310                        LOADER	section	offset $9:B1CE
  1311 09:B1CE:              	ends
  1312                        ;
  1313                        ;/************************************************
                    ***********/
  1314                        ;/*  LoadOMFFile() :  Chargement/Décodage d'un fic
                    hier OMF. */
  1315                        ;/************************************************
                    ***********/
  1316                        ;struct omf_file *LoadOMFFile(char *file_path)
  1317                        ;{
  1318                        	.line	37
  Mon Sep 27 2021  9:39                                                Page 26


  1319                        	.line	38
  1320                        	LOADER
  1321                        	xdef	~~LoadOMFFile
  1322                        	func
  1323                        	.function	38
  1324                        ~~LoadOMFFile:
  1325                        	longa	on
  1326                        	longi	on
  1327 09:B1CE: 3B           	tsc
  1328 09:B1CF: 38           	sec
  1329 09:B1D0: E9 10 00     	sbc	#L2
  1330 09:B1D3: 1B           	tcs
  1331 09:B1D4: 0B           	phd
  1332 09:B1D5: 5B           	tcd
  1333             00000004   file_path_0	set	4
  1334                        	.block	38
  1335                        ;  int i, result;
  1336                        ;  struct omf_file *current_file;
  1337                        ;
  1338                        ;  k_debug_string("LoadOMFFile enter... \r\n");
  1339             00000000   i_1	set	0
  1340             00000002   result_1	set	2
  1341             00000004   current_file_1	set	4
  1342                        	.sym	i,0,5,1,16
  1343                        	.sym	result,2,5,1,16
  1344                        	.sym	current_file,4,138,1,32,51
  1345                        	.sym	file_path,4,142,6,32
  1346                        	.line	42
  1347 09:B1D6: F4 xx xx     	pea	#^L1
  1348 09:B1D9: F4 xx xx     	pea	#<L1
  1349 09:B1DC: 22 xx xx xx  	jsl	~~k_debug_string
  1350                        ;
  1351                        ;  /* Allocation mémoire */
  1352                        ;  current_file = (struct omf_file *) k_calloc(1,s
                    izeof(struct omf_file));
  1353                        	.line	45
  1354 09:B1E0: F4 18 00     	pea	#<$18
  1355 09:B1E3: F4 01 00     	pea	#<$1
  1356 09:B1E6: 22 xx xx xx  	jsl	~~k_calloc
  1357 09:B1EA: 85 0D        	sta	<L3+current_file_1
  1358 09:B1EC: 86 0F        	stx	<L3+current_file_1+2
  1359                        ;  if(current_file == NULL)
  1360                        	.line	46
  1361                        ;    {
  1362 09:B1EE: A5 0D        	lda	<L3+current_file_1
  1363 09:B1F0: 05 0F        	ora	<L3+current_file_1+2
  1364 09:B1F2: F0 03        	beq	L5
  1365 09:B1F4: 82 19 00     	brl	L10001
  1366                        L5:
  1367                        	.line	47
  1368                        ;      //printf("  Error : Impossible to allocate 
                    memory to process OMF file.\n");
  1369                        ;      return(NULL);
  1370                        	.line	49
  1371 09:B1F7: A9 00 00     	lda	#$0
  1372 09:B1FA: AA           	tax
  1373 09:B1FB: A9 00 00     	lda	#$0
  1374                        L6:
  Mon Sep 27 2021  9:39                                                Page 27


  1375 09:B1FE: A8           	tay
  1376 09:B1FF: A5 12        	lda	<L2+2
  1377 09:B201: 85 16        	sta	<L2+2+4
  1378 09:B203: A5 11        	lda	<L2+1
  1379 09:B205: 85 15        	sta	<L2+1+4
  1380 09:B207: 2B           	pld
  1381 09:B208: 3B           	tsc
  1382 09:B209: 18           	clc
  1383 09:B20A: 69 14 00     	adc	#L2+4
  1384 09:B20D: 1B           	tcs
  1385 09:B20E: 98           	tya
  1386 09:B20F: 6B           	rtl
  1387                        ;    }
  1388                        	.line	50
  1389                        ;
  1390                        ;  /* Conservation du nom */
  1391                        ;  current_file->file_path = k_string_copy_string(
                    file_path);
  1392                        L10001:
  1393                        	.line	53
  1394 09:B210: D4 16        	pei	<L2+file_path_0+2
  1395 09:B212: D4 14        	pei	<L2+file_path_0
  1396 09:B214: 22 xx xx xx  	jsl	~~k_string_copy_string
  1397 09:B218: 85 01        	sta	<R0
  1398 09:B21A: 86 03        	stx	<R0+2
  1399 09:B21C: A5 01        	lda	<R0
  1400 09:B21E: 87 0D        	sta	[<L3+current_file_1]
  1401 09:B220: A5 03        	lda	<R0+2
  1402 09:B222: A0 02 00     	ldy	#$2
  1403 09:B225: 97 0D        	sta	[<L3+current_file_1],Y
  1404                        ;  if(current_file->file_path == NULL)
  1405                        	.line	54
  1406                        ;    {
  1407 09:B227: A7 0D        	lda	[<L3+current_file_1]
  1408 09:B229: A0 02 00     	ldy	#$2
  1409 09:B22C: 17 0D        	ora	[<L3+current_file_1],Y
  1410 09:B22E: F0 03        	beq	L7
  1411 09:B230: 82 12 00     	brl	L10002
  1412                        L7:
  1413                        	.line	55
  1414                        ;      mem_free_omf(current_file);
  1415                        	.line	56
  1416 09:B233: D4 0F        	pei	<L3+current_file_1+2
  1417 09:B235: D4 0D        	pei	<L3+current_file_1
  1418 09:B237: 22 C0 D5 09  	jsl	~~mem_free_omf
  1419                        ;      //printf("  Error : Impossible to allocate 
                    memory to process OMF file.\n");
  1420                        ;      return(NULL);
  1421                        	.line	58
  1422 09:B23B: A9 00 00     	lda	#$0
  1423 09:B23E: AA           	tax
  1424 09:B23F: A9 00 00     	lda	#$0
  1425 09:B242: 82 B9 FF     	brl	L6
  1426                        ;    }
  1427                        	.line	59
  1428                        ;
  1429                        ;  k_debug_strings("LoadOMFFile current_file->file
                    _path:",current_file->file_path);
  Mon Sep 27 2021  9:39                                                Page 28


  1430                        L10002:
  1431                        	.line	61
  1432 09:B245: A0 02 00     	ldy	#$2
  1433 09:B248: B7 0D        	lda	[<L3+current_file_1],Y
  1434 09:B24A: 48           	pha
  1435 09:B24B: A7 0D        	lda	[<L3+current_file_1]
  1436 09:B24D: 48           	pha
  1437 09:B24E: F4 xx xx     	pea	#^L1+24
  1438 09:B251: F4 xx xx     	pea	#<L1+24
  1439 09:B254: 22 xx xx xx  	jsl	~~k_debug_strings
  1440                        ;
  1441                        ;  for(i=(int)strlen(current_file->file_path); i>=
                    0; i--)
  1442                        	.line	63
  1443 09:B258: A0 02 00     	ldy	#$2
  1444 09:B25B: B7 0D        	lda	[<L3+current_file_1],Y
  1445 09:B25D: 48           	pha
  1446 09:B25E: A7 0D        	lda	[<L3+current_file_1]
  1447 09:B260: 48           	pha
  1448 09:B261: 22 xx xx xx  	jsl	~~strlen
  1449 09:B265: 85 09        	sta	<L3+i_1
  1450 09:B267: 82 68 00     	brl	L10006
  1451                        L10005:
  1452                        ;    if(current_file->file_path[i] == '\\' || curr
                    ent_file->file_path[i] == '/')
  1453                        	.line	64
  1454                        ;      {
  1455 09:B26A: A7 0D        	lda	[<L3+current_file_1]
  1456 09:B26C: 85 01        	sta	<R0
  1457 09:B26E: A0 02 00     	ldy	#$2
  1458 09:B271: B7 0D        	lda	[<L3+current_file_1],Y
  1459 09:B273: 85 03        	sta	<R0+2
  1460 09:B275: E2 20        	sep	#$20
  1461                        	longa	off
  1462 09:B277: A4 09        	ldy	<L3+i_1
  1463 09:B279: B7 01        	lda	[<R0],Y
  1464 09:B27B: C9 5C        	cmp	#<$5c
  1465 09:B27D: C2 20        	rep	#$20
  1466                        	longa	on
  1467 09:B27F: D0 03        	bne	L9
  1468 09:B281: 82 1A 00     	brl	L8
  1469                        L9:
  1470 09:B284: A7 0D        	lda	[<L3+current_file_1]
  1471 09:B286: 85 01        	sta	<R0
  1472 09:B288: A0 02 00     	ldy	#$2
  1473 09:B28B: B7 0D        	lda	[<L3+current_file_1],Y
  1474 09:B28D: 85 03        	sta	<R0+2
  1475 09:B28F: E2 20        	sep	#$20
  1476                        	longa	off
  1477 09:B291: A4 09        	ldy	<L3+i_1
  1478 09:B293: B7 01        	lda	[<R0],Y
  1479 09:B295: C9 2F        	cmp	#<$2f
  1480 09:B297: C2 20        	rep	#$20
  1481                        	longa	on
  1482 09:B299: F0 03        	beq	L10
  1483 09:B29B: 82 32 00     	brl	L10007
  1484                        L10:
  1485                        L8:
  Mon Sep 27 2021  9:39                                                Page 29


  1486                        	.line	65
  1487                        ;        current_file->file_name = &current_file->
                    file_path[i+1];
  1488                        	.line	66
  1489 09:B29E: A5 09        	lda	<L3+i_1
  1490 09:B2A0: 1A           	ina
  1491 09:B2A1: 85 01        	sta	<R0
  1492 09:B2A3: A0 00 00     	ldy	#$0
  1493 09:B2A6: A5 01        	lda	<R0
  1494 09:B2A8: 10 01        	bpl	L11
  1495 09:B2AA: 88           	dey
  1496                        L11:
  1497 09:B2AB: 85 01        	sta	<R0
  1498 09:B2AD: 84 03        	sty	<R0+2
  1499 09:B2AF: 18           	clc
  1500 09:B2B0: A7 0D        	lda	[<L3+current_file_1]
  1501 09:B2B2: 65 01        	adc	<R0
  1502 09:B2B4: 85 05        	sta	<R1
  1503 09:B2B6: A0 02 00     	ldy	#$2
  1504 09:B2B9: B7 0D        	lda	[<L3+current_file_1],Y
  1505 09:B2BB: 65 03        	adc	<R0+2
  1506 09:B2BD: 85 07        	sta	<R1+2
  1507 09:B2BF: A5 05        	lda	<R1
  1508 09:B2C1: A0 04 00     	ldy	#$4
  1509 09:B2C4: 97 0D        	sta	[<L3+current_file_1],Y
  1510 09:B2C6: A5 07        	lda	<R1+2
  1511 09:B2C8: A0 06 00     	ldy	#$6
  1512 09:B2CB: 97 0D        	sta	[<L3+current_file_1],Y
  1513                        ;        break;
  1514                        	.line	67
  1515 09:B2CD: 82 09 00     	brl	L10004
  1516                        ;      }
  1517                        	.line	68
  1518                        ;  if(current_file->file_name == NULL)
  1519                        L10007:
  1520                        L10003:
  1521 09:B2D0: C6 09        	dec	<L3+i_1
  1522                        L10006:
  1523 09:B2D2: A5 09        	lda	<L3+i_1
  1524 09:B2D4: 30 03        	bmi	L12
  1525 09:B2D6: 82 91 FF     	brl	L10005
  1526                        L12:
  1527                        L10004:
  1528                        	.line	69
  1529                        ;    current_file->file_name = current_file->file_
                    path;
  1530 09:B2D9: A0 04 00     	ldy	#$4
  1531 09:B2DC: B7 0D        	lda	[<L3+current_file_1],Y
  1532 09:B2DE: A0 06 00     	ldy	#$6
  1533 09:B2E1: 17 0D        	ora	[<L3+current_file_1],Y
  1534 09:B2E3: F0 03        	beq	L13
  1535 09:B2E5: 82 11 00     	brl	L10008
  1536                        L13:
  1537                        	.line	70
  1538 09:B2E8: A7 0D        	lda	[<L3+current_file_1]
  1539 09:B2EA: A0 04 00     	ldy	#$4
  1540 09:B2ED: 97 0D        	sta	[<L3+current_file_1],Y
  1541 09:B2EF: A0 02 00     	ldy	#$2
  Mon Sep 27 2021  9:39                                                Page 30


  1542 09:B2F2: B7 0D        	lda	[<L3+current_file_1],Y
  1543 09:B2F4: A0 06 00     	ldy	#$6
  1544 09:B2F7: 97 0D        	sta	[<L3+current_file_1],Y
  1545                        ;
  1546                        ;  /* Chargement des Data du fichier OMF */
  1547                        ;  current_file->data = LoadFileData(file_path,&cu
                    rrent_file->data_length);
  1548                        L10008:
  1549                        	.line	73
  1550 09:B2F9: 18           	clc
  1551 09:B2FA: A9 08 00     	lda	#$8
  1552 09:B2FD: 65 0D        	adc	<L3+current_file_1
  1553 09:B2FF: 85 01        	sta	<R0
  1554 09:B301: A9 00 00     	lda	#$0
  1555 09:B304: 65 0F        	adc	<L3+current_file_1+2
  1556 09:B306: 85 03        	sta	<R0+2
  1557 09:B308: D4 03        	pei	<R0+2
  1558 09:B30A: D4 01        	pei	<R0
  1559 09:B30C: D4 16        	pei	<L2+file_path_0+2
  1560 09:B30E: D4 14        	pei	<L2+file_path_0
  1561 09:B310: 22 xx xx xx  	jsl	~~LoadFileData
  1562 09:B314: 85 05        	sta	<R1
  1563 09:B316: 86 07        	stx	<R1+2
  1564 09:B318: A5 05        	lda	<R1
  1565 09:B31A: A0 0A 00     	ldy	#$a
  1566 09:B31D: 97 0D        	sta	[<L3+current_file_1],Y
  1567 09:B31F: A5 07        	lda	<R1+2
  1568 09:B321: A0 0C 00     	ldy	#$c
  1569 09:B324: 97 0D        	sta	[<L3+current_file_1],Y
  1570                        ;  if(current_file->data == NULL)
  1571                        	.line	74
  1572                        ;    {
  1573 09:B326: A0 0A 00     	ldy	#$a
  1574 09:B329: B7 0D        	lda	[<L3+current_file_1],Y
  1575 09:B32B: A0 0C 00     	ldy	#$c
  1576 09:B32E: 17 0D        	ora	[<L3+current_file_1],Y
  1577 09:B330: F0 03        	beq	L14
  1578 09:B332: 82 12 00     	brl	L10009
  1579                        L14:
  1580                        	.line	75
  1581                        ;      mem_free_omf(current_file);
  1582                        	.line	76
  1583 09:B335: D4 0F        	pei	<L3+current_file_1+2
  1584 09:B337: D4 0D        	pei	<L3+current_file_1
  1585 09:B339: 22 C0 D5 09  	jsl	~~mem_free_omf
  1586                        ;      //printf("  Error : Impossible to load OMF 
                    file '%s'.\n",file_path);
  1587                        ;      return(NULL);
  1588                        	.line	78
  1589 09:B33D: A9 00 00     	lda	#$0
  1590 09:B340: AA           	tax
  1591 09:B341: A9 00 00     	lda	#$0
  1592 09:B344: 82 B7 FE     	brl	L6
  1593                        ;    }
  1594                        	.line	79
  1595                        ;
  1596                        ;  /** Décodage du contenu du fichier OMF **/
  1597                        ;  result = DecodeOMFFile(current_file);
  Mon Sep 27 2021  9:39                                                Page 31


  1598                        L10009:
  1599                        	.line	82
  1600 09:B347: D4 0F        	pei	<L3+current_file_1+2
  1601 09:B349: D4 0D        	pei	<L3+current_file_1
  1602 09:B34B: 22 62 B3 09  	jsl	~~DecodeOMFFile
  1603 09:B34F: 85 0B        	sta	<L3+result_1
  1604                        ;
  1605                        ;  k_debug_string("LoadOMFFile exit... \r\n");
  1606                        	.line	84
  1607 09:B351: F4 xx xx     	pea	#^L1+61
  1608 09:B354: F4 xx xx     	pea	#<L1+61
  1609 09:B357: 22 xx xx xx  	jsl	~~k_debug_string
  1610                        ;
  1611                        ;  /* Renvoie la structure */
  1612                        ;  return(current_file);
  1613                        	.line	87
  1614 09:B35B: A6 0F        	ldx	<L3+current_file_1+2
  1615 09:B35D: A5 0D        	lda	<L3+current_file_1
  1616 09:B35F: 82 9C FE     	brl	L6
  1617                        ;}
  1618                        	.line	88
  1619                        	.endblock	88
  1620             00000010   L2	equ	16
  1621             00000009   L3	equ	9
  1622 09:B362:              	ends
  1623                        	efunc
  1624                        	.endfunc	88,9,16
  1625                        	.line	88
  1626                        	data
  1627                        L1:
  1628 00:0000: 4C 6F 61 64  	db	$4C,$6F,$61,$64,$4F,$4D,$46,$46,$69,$6C,
                    $65,$20,$65,$6E,$74
       00:0004: 4F 4D 46 46 
       00:0008: 69 6C 65 20 
       00:000C: 65 6E 74 
  1629 00:000F: 65 72 2E 2E  	db	$65,$72,$2E,$2E,$2E,$20,$0D,$0A,$00,$4C,
                    $6F,$61,$64,$4F,$4D
       00:0013: 2E 20 0D 0A 
       00:0017: 00 4C 6F 61 
       00:001B: 64 4F 4D 
  1630 00:001E: 46 46 69 6C  	db	$46,$46,$69,$6C,$65,$20,$63,$75,$72,$72,
                    $65,$6E,$74,$5F,$66
       00:0022: 65 20 63 75 
       00:0026: 72 72 65 6E 
       00:002A: 74 5F 66 
  1631 00:002D: 69 6C 65 2D  	db	$69,$6C,$65,$2D,$3E,$66,$69,$6C,$65,$5F,
                    $70,$61,$74,$68,$3A
       00:0031: 3E 66 69 6C 
       00:0035: 65 5F 70 61 
       00:0039: 74 68 3A 
  1632 00:003C: 00 4C 6F 61  	db	$00,$4C,$6F,$61,$64,$4F,$4D,$46,$46,$69,
                    $6C,$65,$20,$65,$78
       00:0040: 64 4F 4D 46 
       00:0044: 46 69 6C 65 
       00:0048: 20 65 78 
  1633 00:004B: 69 74 2E 2E  	db	$69,$74,$2E,$2E,$2E,$20,$0D,$0A,$00
       00:004F: 2E 20 0D 0A 
       00:0053: 00 
  Mon Sep 27 2021  9:39                                                Page 32


  1634 00:0054:              	ends
  1635                        ;
  1636                        ;
  1637                        ;/************************************************
                    ***************/
  1638                        ;/*  DecodeOMFFile() :  Décodage des structures du
                     fichier OMF. */
  1639                        ;/************************************************
                    ***************/
  1640                        ;static int DecodeOMFFile(struct omf_file *current
                    _file)
  1641                        ;{
  1642                        	.line	94
  1643                        	.line	95
  1644                        	LOADER
  1645                        	func
  1646                        	.function	95
  1647                        ~~DecodeOMFFile:
  1648                        	longa	on
  1649                        	longi	on
  1650 09:B362: 3B           	tsc
  1651 09:B363: 38           	sec
  1652 09:B364: E9 0C 00     	sbc	#L16
  1653 09:B367: 1B           	tcs
  1654 09:B368: 0B           	phd
  1655 09:B369: 5B           	tcd
  1656             00000004   current_file_0	set	4
  1657                        	.block	95
  1658                        ;  int file_offset, segment_length;
  1659                        ;  struct omf_segment *current_segment;
  1660                        ;
  1661                        ;  /* Init */
  1662                        ;  file_offset = 0;
  1663             00000000   file_offset_1	set	0
  1664             00000002   segment_length_1	set	2
  1665             00000004   current_segment_1	set	4
  1666                        	.sym	file_offset,0,5,1,16
  1667                        	.sym	segment_length,2,5,1,16
  1668                        	.sym	current_segment,4,138,1,32,50
  1669                        	.sym	current_file,4,138,6,32,51
  1670                        	.line	100
  1671 09:B36A: 64 05        	stz	<L17+file_offset_1
  1672                        ;
  1673                        ;  /** On va itérer sur tous les segments **/
  1674                        ;  while(1)
  1675                        	.line	103
  1676                        L10010:
  1677                        ;    {
  1678                        	.line	104
  1679                        ;      /** Décode 1 segment **/
  1680                        ;      current_segment = DecodeOneSegment(current_
                    file,file_offset,&segment_length);
  1681                        	.line	106
  1682 09:B36C: F4 00 00     	pea	#0
  1683 09:B36F: 18           	clc
  1684 09:B370: 7B           	tdc
  1685 09:B371: 69 07 00     	adc	#<L17+segment_length_1
  1686 09:B374: 48           	pha
  Mon Sep 27 2021  9:39                                                Page 33


  1687 09:B375: D4 05        	pei	<L17+file_offset_1
  1688 09:B377: D4 12        	pei	<L16+current_file_0+2
  1689 09:B379: D4 10        	pei	<L16+current_file_0
  1690 09:B37B: 22 12 B4 09  	jsl	~~DecodeOneSegment
  1691 09:B37F: 85 09        	sta	<L17+current_segment_1
  1692 09:B381: 86 0B        	stx	<L17+current_segment_1+2
  1693                        ;      if(current_segment == NULL)
  1694                        	.line	107
  1695                        ;        {
  1696 09:B383: A5 09        	lda	<L17+current_segment_1
  1697 09:B385: 05 0B        	ora	<L17+current_segment_1+2
  1698 09:B387: F0 03        	beq	L19
  1699 09:B389: 82 15 00     	brl	L10012
  1700                        L19:
  1701                        	.line	108
  1702                        ;          /* Erreur */
  1703                        ;          return(1);
  1704                        	.line	110
  1705 09:B38C: A9 01 00     	lda	#$1
  1706                        L20:
  1707 09:B38F: A8           	tay
  1708 09:B390: A5 0E        	lda	<L16+2
  1709 09:B392: 85 12        	sta	<L16+2+4
  1710 09:B394: A5 0D        	lda	<L16+1
  1711 09:B396: 85 11        	sta	<L16+1+4
  1712 09:B398: 2B           	pld
  1713 09:B399: 3B           	tsc
  1714 09:B39A: 18           	clc
  1715 09:B39B: 69 10 00     	adc	#L16+4
  1716 09:B39E: 1B           	tcs
  1717 09:B39F: 98           	tya
  1718 09:B3A0: 6B           	rtl
  1719                        ;        }
  1720                        	.line	111
  1721                        ;
  1722                        ;      /* Rattache ce segment au fichier OMF */
  1723                        ;      if(current_file->first_segment == NULL)
  1724                        L10012:
  1725                        	.line	114
  1726                        ;        current_file->first_segment = current_seg
                    ment;
  1727 09:B3A1: A0 10 00     	ldy	#$10
  1728 09:B3A4: B7 10        	lda	[<L16+current_file_0],Y
  1729 09:B3A6: A0 12 00     	ldy	#$12
  1730 09:B3A9: 17 10        	ora	[<L16+current_file_0],Y
  1731 09:B3AB: F0 03        	beq	L21
  1732 09:B3AD: 82 11 00     	brl	L10013
  1733                        L21:
  1734                        	.line	115
  1735 09:B3B0: A5 09        	lda	<L17+current_segment_1
  1736 09:B3B2: A0 10 00     	ldy	#$10
  1737 09:B3B5: 97 10        	sta	[<L16+current_file_0],Y
  1738 09:B3B7: A5 0B        	lda	<L17+current_segment_1+2
  1739 09:B3B9: A0 12 00     	ldy	#$12
  1740 09:B3BC: 97 10        	sta	[<L16+current_file_0],Y
  1741                        ;      else
  1742 09:B3BE: 82 1C 00     	brl	L10014
  1743                        L10013:
  Mon Sep 27 2021  9:39                                                Page 34


  1744                        ;        current_file->last_segment->next = curren
                    t_segment;
  1745                        	.line	117
  1746 09:B3C1: A0 14 00     	ldy	#$14
  1747 09:B3C4: B7 10        	lda	[<L16+current_file_0],Y
  1748 09:B3C6: 85 01        	sta	<R0
  1749 09:B3C8: A0 16 00     	ldy	#$16
  1750 09:B3CB: B7 10        	lda	[<L16+current_file_0],Y
  1751 09:B3CD: 85 03        	sta	<R0+2
  1752 09:B3CF: A5 09        	lda	<L17+current_segment_1
  1753 09:B3D1: A0 61 0A     	ldy	#$a61
  1754 09:B3D4: 97 01        	sta	[<R0],Y
  1755 09:B3D6: A5 0B        	lda	<L17+current_segment_1+2
  1756 09:B3D8: A0 63 0A     	ldy	#$a63
  1757 09:B3DB: 97 01        	sta	[<R0],Y
  1758                        L10014:
  1759                        ;      current_file->last_segment = current_segmen
                    t;
  1760                        	.line	118
  1761 09:B3DD: A5 09        	lda	<L17+current_segment_1
  1762 09:B3DF: A0 14 00     	ldy	#$14
  1763 09:B3E2: 97 10        	sta	[<L16+current_file_0],Y
  1764 09:B3E4: A5 0B        	lda	<L17+current_segment_1+2
  1765 09:B3E6: A0 16 00     	ldy	#$16
  1766 09:B3E9: 97 10        	sta	[<L16+current_file_0],Y
  1767                        ;      current_file->nb_segment++;
  1768                        	.line	119
  1769 09:B3EB: A0 0E 00     	ldy	#$e
  1770 09:B3EE: B7 10        	lda	[<L16+current_file_0],Y
  1771 09:B3F0: 1A           	ina
  1772 09:B3F1: A0 0E 00     	ldy	#$e
  1773 09:B3F4: 97 10        	sta	[<L16+current_file_0],Y
  1774                        ;
  1775                        ;      /* Segment suivant */
  1776                        ;      file_offset += segment_length;
  1777                        	.line	122
  1778 09:B3F6: 18           	clc
  1779 09:B3F7: A5 05        	lda	<L17+file_offset_1
  1780 09:B3F9: 65 07        	adc	<L17+segment_length_1
  1781 09:B3FB: 85 05        	sta	<L17+file_offset_1
  1782                        ;
  1783                        ;      /* Fin de fichier */
  1784                        ;      if(file_offset == current_file->data_length
                    )
  1785                        	.line	125
  1786                        ;        break;
  1787 09:B3FD: A5 05        	lda	<L17+file_offset_1
  1788 09:B3FF: A0 08 00     	ldy	#$8
  1789 09:B402: D7 10        	cmp	[<L16+current_file_0],Y
  1790 09:B404: D0 03        	bne	L22
  1791 09:B406: 82 03 00     	brl	L10011
  1792                        L22:
  1793                        ;    }
  1794                        	.line	127
  1795 09:B409: 82 60 FF     	brl	L10010
  1796                        L10011:
  1797                        ;
  1798                        ;  /* OK */
  Mon Sep 27 2021  9:39                                                Page 35


  1799                        ;  return(0);
  1800                        	.line	130
  1801 09:B40C: A9 00 00     	lda	#$0
  1802 09:B40F: 82 7D FF     	brl	L20
  1803                        ;}
  1804                        	.line	131
  1805                        	.endblock	131
  1806             0000000C   L16	equ	12
  1807             00000005   L17	equ	5
  1808 09:B412:              	ends
  1809                        	efunc
  1810                        	.endfunc	131,5,12
  1811                        	.line	131
  1812                        ;
  1813                        ;
  1814                        ;/************************************************
                    ****************/
  1815                        ;/*  DecodeOneSegment() :  Décodage d'un Segment d
                    u fichier OMF. */
  1816                        ;/************************************************
                    ****************/
  1817                        ;static struct omf_segment *DecodeOneSegment(struc
                    t omf_file *current_file, int data_offset, int *segment_leng
                    th_rtn)
  1818                        ;{
  1819                        	.line	137
  1820                        	.line	138
  1821                        	LOADER
  1822                        	func
  1823                        	.function	138
  1824                        ~~DecodeOneSegment:
  1825                        	longa	on
  1826                        	longi	on
  1827 09:B412: 3B           	tsc
  1828 09:B413: 38           	sec
  1829 09:B414: E9 0A 00     	sbc	#L23
  1830 09:B417: 1B           	tcs
  1831 09:B418: 0B           	phd
  1832 09:B419: 5B           	tcd
  1833             00000004   current_file_0	set	4
  1834             00000008   data_offset_0	set	8
  1835             0000000A   segment_length_rtn_0	set	10
  1836                        	.block	138
  1837                        ;  int result;
  1838                        ;  struct omf_segment *current_segment;
  1839                        ;
  1840                        ;  /* Allocation mémoire */
  1841                        ;  current_segment = (struct omf_segment *) k_call
                    oc(1,sizeof(struct omf_segment));
  1842             00000000   result_1	set	0
  1843             00000002   current_segment_1	set	2
  1844                        	.sym	result,0,5,1,16
  1845                        	.sym	current_segment,2,138,1,32,50
  1846                        	.sym	current_file,4,138,6,32,51
  1847                        	.sym	data_offset,8,5,6,16
  1848                        	.sym	segment_length_rtn,10,133,6,32
  1849                        	.line	143
  1850 09:B41A: F4 65 0A     	pea	#<$a65
  Mon Sep 27 2021  9:39                                                Page 36


  1851 09:B41D: F4 01 00     	pea	#<$1
  1852 09:B420: 22 xx xx xx  	jsl	~~k_calloc
  1853 09:B424: 85 07        	sta	<L24+current_segment_1
  1854 09:B426: 86 09        	stx	<L24+current_segment_1+2
  1855                        ;  if(current_segment == NULL)
  1856                        	.line	144
  1857                        ;    {
  1858 09:B428: A5 07        	lda	<L24+current_segment_1
  1859 09:B42A: 05 09        	ora	<L24+current_segment_1+2
  1860 09:B42C: F0 03        	beq	L26
  1861 09:B42E: 82 19 00     	brl	L10015
  1862                        L26:
  1863                        	.line	145
  1864                        ;      //printf("  Error : Impossible to allocate 
                    memory to process Segment #%d.\n",current_file->nb_segment+1
                    );
  1865                        ;      return(NULL);
  1866                        	.line	147
  1867 09:B431: A9 00 00     	lda	#$0
  1868 09:B434: AA           	tax
  1869 09:B435: A9 00 00     	lda	#$0
  1870                        L27:
  1871 09:B438: A8           	tay
  1872 09:B439: A5 0C        	lda	<L23+2
  1873 09:B43B: 85 16        	sta	<L23+2+10
  1874 09:B43D: A5 0B        	lda	<L23+1
  1875 09:B43F: 85 15        	sta	<L23+1+10
  1876 09:B441: 2B           	pld
  1877 09:B442: 3B           	tsc
  1878 09:B443: 18           	clc
  1879 09:B444: 69 14 00     	adc	#L23+10
  1880 09:B447: 1B           	tcs
  1881 09:B448: 98           	tya
  1882 09:B449: 6B           	rtl
  1883                        ;    }
  1884                        	.line	148
  1885                        ;
  1886                        ;  /** Décodage du Segment Header **/
  1887                        ;  result = DecodeSegmentHeader(current_file,data_
                    offset,&current_segment->header);
  1888                        L10015:
  1889                        	.line	151
  1890 09:B44A: D4 09        	pei	<L24+current_segment_1+2
  1891 09:B44C: D4 07        	pei	<L24+current_segment_1
  1892 09:B44E: D4 12        	pei	<L23+data_offset_0
  1893 09:B450: D4 10        	pei	<L23+current_file_0+2
  1894 09:B452: D4 0E        	pei	<L23+current_file_0
  1895 09:B454: 22 D8 B4 09  	jsl	~~DecodeSegmentHeader
  1896 09:B458: 85 05        	sta	<L24+result_1
  1897                        ;  if(result)
  1898                        	.line	152
  1899                        ;    {
  1900 09:B45A: A5 05        	lda	<L24+result_1
  1901 09:B45C: D0 03        	bne	L28
  1902 09:B45E: 82 12 00     	brl	L10016
  1903                        L28:
  1904                        	.line	153
  1905                        ;      mem_free_segment(current_segment);
  Mon Sep 27 2021  9:39                                                Page 37


  1906                        	.line	154
  1907 09:B461: D4 09        	pei	<L24+current_segment_1+2
  1908 09:B463: D4 07        	pei	<L24+current_segment_1
  1909 09:B465: 22 59 D6 09  	jsl	~~mem_free_segment
  1910                        ;      return(NULL);
  1911                        	.line	155
  1912 09:B469: A9 00 00     	lda	#$0
  1913 09:B46C: AA           	tax
  1914 09:B46D: A9 00 00     	lda	#$0
  1915 09:B470: 82 C5 FF     	brl	L27
  1916                        ;    }
  1917                        	.line	156
  1918                        ;  current_segment->header.FileOffset = data_offse
                    t;
  1919                        L10016:
  1920                        	.line	157
  1921 09:B473: A0 00 00     	ldy	#$0
  1922 09:B476: A5 12        	lda	<L23+data_offset_0
  1923 09:B478: 10 01        	bpl	L29
  1924 09:B47A: 88           	dey
  1925                        L29:
  1926 09:B47B: 85 01        	sta	<R0
  1927 09:B47D: 84 03        	sty	<R0+2
  1928 09:B47F: A5 01        	lda	<R0
  1929 09:B481: 87 07        	sta	[<L24+current_segment_1]
  1930 09:B483: A5 03        	lda	<R0+2
  1931 09:B485: A0 02 00     	ldy	#$2
  1932 09:B488: 97 07        	sta	[<L24+current_segment_1],Y
  1933                        ;  current_segment->header.SegmentOffset = 0;
  1934                        	.line	158
  1935 09:B48A: A9 00 00     	lda	#$0
  1936 09:B48D: A0 04 00     	ldy	#$4
  1937 09:B490: 97 07        	sta	[<L24+current_segment_1],Y
  1938 09:B492: A9 00 00     	lda	#$0
  1939 09:B495: A0 06 00     	ldy	#$6
  1940 09:B498: 97 07        	sta	[<L24+current_segment_1],Y
  1941                        ;
  1942                        ;  /** Décodage du Segment Body **/
  1943                        ;  result = DecodeSegmentBody(current_file,data_of
                    fset+current_segment->header.DispDataOffset,current_segment)
                    ;
  1944                        	.line	161
  1945 09:B49A: D4 09        	pei	<L24+current_segment_1+2
  1946 09:B49C: D4 07        	pei	<L24+current_segment_1
  1947 09:B49E: 18           	clc
  1948 09:B49F: A5 12        	lda	<L23+data_offset_0
  1949 09:B4A1: A0 38 00     	ldy	#$38
  1950 09:B4A4: 77 07        	adc	[<L24+current_segment_1],Y
  1951 09:B4A6: 48           	pha
  1952 09:B4A7: D4 10        	pei	<L23+current_file_0+2
  1953 09:B4A9: D4 0E        	pei	<L23+current_file_0
  1954 09:B4AB: 22 5F CF 09  	jsl	~~DecodeSegmentBody
  1955 09:B4AF: 85 05        	sta	<L24+result_1
  1956                        ;  if(result)
  1957                        	.line	162
  1958                        ;    {
  1959 09:B4B1: A5 05        	lda	<L24+result_1
  1960 09:B4B3: D0 03        	bne	L30
  Mon Sep 27 2021  9:39                                                Page 38


  1961 09:B4B5: 82 12 00     	brl	L10017
  1962                        L30:
  1963                        	.line	163
  1964                        ;      mem_free_segment(current_segment);
  1965                        	.line	164
  1966 09:B4B8: D4 09        	pei	<L24+current_segment_1+2
  1967 09:B4BA: D4 07        	pei	<L24+current_segment_1
  1968 09:B4BC: 22 59 D6 09  	jsl	~~mem_free_segment
  1969                        ;      return(NULL);
  1970                        	.line	165
  1971 09:B4C0: A9 00 00     	lda	#$0
  1972 09:B4C3: AA           	tax
  1973 09:B4C4: A9 00 00     	lda	#$0
  1974 09:B4C7: 82 6E FF     	brl	L27
  1975                        ;    }
  1976                        	.line	166
  1977                        ;
  1978                        ;  /* Renvoie le segment */
  1979                        ;  *segment_length_rtn = (int) current_segment->he
                    ader.ByteCnt;
  1980                        L10017:
  1981                        	.line	169
  1982 09:B4CA: A0 0C 00     	ldy	#$c
  1983 09:B4CD: B7 07        	lda	[<L24+current_segment_1],Y
  1984 09:B4CF: 87 14        	sta	[<L23+segment_length_rtn_0]
  1985                        ;  return(current_segment);
  1986                        	.line	170
  1987 09:B4D1: A6 09        	ldx	<L24+current_segment_1+2
  1988 09:B4D3: A5 07        	lda	<L24+current_segment_1
  1989 09:B4D5: 82 60 FF     	brl	L27
  1990                        ;}
  1991                        	.line	171
  1992                        	.endblock	171
  1993             0000000A   L23	equ	10
  1994             00000005   L24	equ	5
  1995 09:B4D8:              	ends
  1996                        	efunc
  1997                        	.endfunc	171,5,10
  1998                        	.line	171
  1999                        ;
  2000                        ;
  2001                        ;/************************************************
                    **********/
  2002                        ;/*  DecodeSegmentHeader() :  Décode le Header du 
                    Segment. */
  2003                        ;/************************************************
                    **********/
  2004                        ;static int DecodeSegmentHeader(struct omf_file *c
                    urrent_file, int data_offset, struct omf_segment_header *cur
                    rent_header)
  2005                        ;{
  2006                        	.line	177
  2007                        	.line	178
  2008                        	LOADER
  2009                        	func
  2010                        	.function	178
  2011                        ~~DecodeSegmentHeader:
  2012                        	longa	on
  Mon Sep 27 2021  9:39                                                Page 39


  2013                        	longi	on
  2014 09:B4D8: 3B           	tsc
  2015 09:B4D9: 38           	sec
  2016 09:B4DA: E9 0A 00     	sbc	#L31
  2017 09:B4DD: 1B           	tcs
  2018 09:B4DE: 0B           	phd
  2019 09:B4DF: 5B           	tcd
  2020             00000004   current_file_0	set	4
  2021             00000008   data_offset_0	set	8
  2022             0000000A   current_header_0	set	10
  2023                        	.block	178
  2024                        ;  int error;
  2025                        ;
  2026                        ;  /* Vérifie la taille */
  2027                        ;  if(data_offset + SEGMENT_HEADER_VERSION_OFFSET 
                    > current_file->data_length)
  2028             00000000   error_1	set	0
  2029                        	.sym	error,0,5,1,16
  2030                        	.sym	current_file,4,138,6,32,51
  2031                        	.sym	data_offset,8,5,6,16
  2032                        	.sym	current_header,10,138,6,32,49
  2033                        	.line	182
  2034                        ;    {
  2035 09:B4E0: 18           	clc
  2036 09:B4E1: A9 0F 00     	lda	#$f
  2037 09:B4E4: 65 12        	adc	<L31+data_offset_0
  2038 09:B4E6: 85 01        	sta	<R0
  2039 09:B4E8: 38           	sec
  2040 09:B4E9: A0 08 00     	ldy	#$8
  2041 09:B4EC: B7 0E        	lda	[<L31+current_file_0],Y
  2042 09:B4EE: E5 01        	sbc	<R0
  2043 09:B4F0: 70 03        	bvs	L34
  2044 09:B4F2: 49 00 80     	eor	#$8000
  2045                        L34:
  2046 09:B4F5: 10 03        	bpl	L35
  2047 09:B4F7: 82 15 00     	brl	L10018
  2048                        L35:
  2049                        	.line	183
  2050                        ;      //printf("  Error : Not enough data to enco
                    de a Segment Header (offset=%d, Segment #%d).\n",data_offset
                    ,current_file->nb_segment+1);
  2051                        ;      return(1);
  2052                        	.line	185
  2053 09:B4FA: A9 01 00     	lda	#$1
  2054                        L36:
  2055 09:B4FD: A8           	tay
  2056 09:B4FE: A5 0C        	lda	<L31+2
  2057 09:B500: 85 16        	sta	<L31+2+10
  2058 09:B502: A5 0B        	lda	<L31+1
  2059 09:B504: 85 15        	sta	<L31+1+10
  2060 09:B506: 2B           	pld
  2061 09:B507: 3B           	tsc
  2062 09:B508: 18           	clc
  2063 09:B509: 69 14 00     	adc	#L31+10
  2064 09:B50C: 1B           	tcs
  2065 09:B50D: 98           	tya
  2066 09:B50E: 6B           	rtl
  2067                        ;    }
  Mon Sep 27 2021  9:39                                                Page 40


  2068                        	.line	186
  2069                        ;
  2070                        ;  /**  On va déterminer la version de l'OMF utili
                    sé  **/
  2071                        ;  memcpy(&current_header->Version,&current_file->
                    data[data_offset+SEGMENT_HEADER_VERSION_OFFSET],sizeof(BYTE)
                    );
  2072                        L10018:
  2073                        	.line	189
  2074 09:B50F: F4 01 00     	pea	#<$1
  2075 09:B512: 18           	clc
  2076 09:B513: A9 0F 00     	lda	#$f
  2077 09:B516: 65 12        	adc	<L31+data_offset_0
  2078 09:B518: 85 01        	sta	<R0
  2079 09:B51A: A0 00 00     	ldy	#$0
  2080 09:B51D: A5 01        	lda	<R0
  2081 09:B51F: 10 01        	bpl	L37
  2082 09:B521: 88           	dey
  2083                        L37:
  2084 09:B522: 85 01        	sta	<R0
  2085 09:B524: 84 03        	sty	<R0+2
  2086 09:B526: 18           	clc
  2087 09:B527: A0 0A 00     	ldy	#$a
  2088 09:B52A: B7 0E        	lda	[<L31+current_file_0],Y
  2089 09:B52C: 65 01        	adc	<R0
  2090 09:B52E: 85 05        	sta	<R1
  2091 09:B530: A0 0C 00     	ldy	#$c
  2092 09:B533: B7 0E        	lda	[<L31+current_file_0],Y
  2093 09:B535: 65 03        	adc	<R0+2
  2094 09:B537: 85 07        	sta	<R1+2
  2095 09:B539: D4 07        	pei	<R1+2
  2096 09:B53B: D4 05        	pei	<R1
  2097 09:B53D: 18           	clc
  2098 09:B53E: A9 1C 00     	lda	#$1c
  2099 09:B541: 65 14        	adc	<L31+current_header_0
  2100 09:B543: 85 01        	sta	<R0
  2101 09:B545: A9 00 00     	lda	#$0
  2102 09:B548: 65 16        	adc	<L31+current_header_0+2
  2103 09:B54A: 85 03        	sta	<R0+2
  2104 09:B54C: D4 03        	pei	<R0+2
  2105 09:B54E: D4 01        	pei	<R0
  2106 09:B550: 22 xx xx xx  	jsl	~~memcpy
  2107                        ;
  2108                        ;  /** On décode selon le type **/
  2109                        ;  if(current_header->Version == 0x00)
  2110                        	.line	192
  2111                        ;    error = DecodeSegmentHeaderV0(current_file,da
                    ta_offset,current_header);
  2112 09:B554: A0 1C 00     	ldy	#$1c
  2113 09:B557: B7 14        	lda	[<L31+current_header_0],Y
  2114 09:B559: 29 FF 00     	and	#$ff
  2115 09:B55C: F0 03        	beq	L38
  2116 09:B55E: 82 13 00     	brl	L10019
  2117                        L38:
  2118                        	.line	193
  2119 09:B561: D4 16        	pei	<L31+current_header_0+2
  2120 09:B563: D4 14        	pei	<L31+current_header_0
  2121 09:B565: D4 12        	pei	<L31+data_offset_0
  Mon Sep 27 2021  9:39                                                Page 41


  2122 09:B567: D4 10        	pei	<L31+current_file_0+2
  2123 09:B569: D4 0E        	pei	<L31+current_file_0
  2124 09:B56B: 22 C5 B5 09  	jsl	~~DecodeSegmentHeaderV0
  2125 09:B56F: 85 09        	sta	<L32+error_1
  2126                        ;  else if(current_header->Version == 0x01)
  2127 09:B571: 82 4C 00     	brl	L10020
  2128                        L10019:
  2129                        	.line	194
  2130                        ;    error = DecodeSegmentHeaderV1(current_file,da
                    ta_offset,current_header);
  2131 09:B574: E2 20        	sep	#$20
  2132                        	longa	off
  2133 09:B576: A0 1C 00     	ldy	#$1c
  2134 09:B579: B7 14        	lda	[<L31+current_header_0],Y
  2135 09:B57B: C9 01        	cmp	#<$1
  2136 09:B57D: C2 20        	rep	#$20
  2137                        	longa	on
  2138 09:B57F: F0 03        	beq	L39
  2139 09:B581: 82 13 00     	brl	L10021
  2140                        L39:
  2141                        	.line	195
  2142 09:B584: D4 16        	pei	<L31+current_header_0+2
  2143 09:B586: D4 14        	pei	<L31+current_header_0
  2144 09:B588: D4 12        	pei	<L31+data_offset_0
  2145 09:B58A: D4 10        	pei	<L31+current_file_0+2
  2146 09:B58C: D4 0E        	pei	<L31+current_file_0
  2147 09:B58E: 22 E2 BC 09  	jsl	~~DecodeSegmentHeaderV1
  2148 09:B592: 85 09        	sta	<L32+error_1
  2149                        ;  else if(current_header->Version == 0x02)
  2150 09:B594: 82 29 00     	brl	L10022
  2151                        L10021:
  2152                        	.line	196
  2153                        ;    error = DecodeSegmentHeaderV2(current_file,da
                    ta_offset,current_header);
  2154 09:B597: E2 20        	sep	#$20
  2155                        	longa	off
  2156 09:B599: A0 1C 00     	ldy	#$1c
  2157 09:B59C: B7 14        	lda	[<L31+current_header_0],Y
  2158 09:B59E: C9 02        	cmp	#<$2
  2159 09:B5A0: C2 20        	rep	#$20
  2160                        	longa	on
  2161 09:B5A2: F0 03        	beq	L40
  2162 09:B5A4: 82 13 00     	brl	L10023
  2163                        L40:
  2164                        	.line	197
  2165 09:B5A7: D4 16        	pei	<L31+current_header_0+2
  2166 09:B5A9: D4 14        	pei	<L31+current_header_0
  2167 09:B5AB: D4 12        	pei	<L31+data_offset_0
  2168 09:B5AD: D4 10        	pei	<L31+current_file_0+2
  2169 09:B5AF: D4 0E        	pei	<L31+current_file_0
  2170 09:B5B1: 22 21 C6 09  	jsl	~~DecodeSegmentHeaderV2
  2171 09:B5B5: 85 09        	sta	<L32+error_1
  2172                        ;  else
  2173 09:B5B7: 82 06 00     	brl	L10024
  2174                        L10023:
  2175                        ;    {
  2176                        	.line	199
  2177                        ;      //printf("  Segment #%d Header Error : Inva
  Mon Sep 27 2021  9:39                                                Page 42


                    lid 'Version' value (the value should be 0, 1 or 2 for the A
                    pple IIgs).\n",current_file->nb_segment+1);
  2178                        ;      return(1);
  2179                        	.line	201
  2180 09:B5BA: A9 01 00     	lda	#$1
  2181 09:B5BD: 82 3D FF     	brl	L36
  2182                        ;    }
  2183                        	.line	202
  2184                        L10024:
  2185                        L10022:
  2186                        L10020:
  2187                        ;
  2188                        ;  /* Code d'erreur */
  2189                        ;  return(error);
  2190                        	.line	205
  2191 09:B5C0: A5 09        	lda	<L32+error_1
  2192 09:B5C2: 82 38 FF     	brl	L36
  2193                        ;}
  2194                        	.line	206
  2195                        	.endblock	206
  2196             0000000A   L31	equ	10
  2197             00000009   L32	equ	9
  2198 09:B5C5:              	ends
  2199                        	efunc
  2200                        	.endfunc	206,9,10
  2201                        	.line	206
  2202                        ;
  2203                        ;
  2204                        ;/************************************************
                    ************/
  2205                        ;/*  DecodeSegmentHeaderV0() :  Décode le Header d
                    u Segment. */
  2206                        ;/************************************************
                    ************/
  2207                        ;static int DecodeSegmentHeaderV0(struct omf_file 
                    *current_file, int data_offset, struct omf_segment_header *c
                    urrent_header)
  2208                        ;{
  2209                        	.line	212
  2210                        	.line	213
  2211                        	LOADER
  2212                        	func
  2213                        	.function	213
  2214                        ~~DecodeSegmentHeaderV0:
  2215                        	longa	on
  2216                        	longi	on
  2217 09:B5C5: 3B           	tsc
  2218 09:B5C6: 38           	sec
  2219 09:B5C7: E9 08 00     	sbc	#L41
  2220 09:B5CA: 1B           	tcs
  2221 09:B5CB: 0B           	phd
  2222 09:B5CC: 5B           	tcd
  2223             00000004   current_file_0	set	4
  2224             00000008   data_offset_0	set	8
  2225             0000000A   current_header_0	set	10
  2226                        	.block	213
  2227                        ;  /* Vérifie la taille */
  2228                        ;  if(data_offset + SEGMENT_HEADER_SIZE_V0 > curre
  Mon Sep 27 2021  9:39                                                Page 43


                    nt_file->data_length)
  2229                        	.sym	current_file,4,138,6,32,51
  2230                        	.sym	data_offset,8,5,6,16
  2231                        	.sym	current_header,10,138,6,32,49
  2232                        	.line	215
  2233                        ;    {
  2234 09:B5CD: 18           	clc
  2235 09:B5CE: A9 2E 00     	lda	#$2e
  2236 09:B5D1: 65 10        	adc	<L41+data_offset_0
  2237 09:B5D3: 85 01        	sta	<R0
  2238 09:B5D5: 38           	sec
  2239 09:B5D6: A0 08 00     	ldy	#$8
  2240 09:B5D9: B7 0C        	lda	[<L41+current_file_0],Y
  2241 09:B5DB: E5 01        	sbc	<R0
  2242 09:B5DD: 70 03        	bvs	L44
  2243 09:B5DF: 49 00 80     	eor	#$8000
  2244                        L44:
  2245 09:B5E2: 10 03        	bpl	L45
  2246 09:B5E4: 82 15 00     	brl	L10025
  2247                        L45:
  2248                        	.line	216
  2249                        ;      //printf("  Error : Not enough data to enco
                    de a Segment Header (offset=%d, Segment #%d).\n",data_offset
                    ,current_file->nb_segment+1);
  2250                        ;      return(1);
  2251                        	.line	218
  2252 09:B5E7: A9 01 00     	lda	#$1
  2253                        L46:
  2254 09:B5EA: A8           	tay
  2255 09:B5EB: A5 0A        	lda	<L41+2
  2256 09:B5ED: 85 14        	sta	<L41+2+10
  2257 09:B5EF: A5 09        	lda	<L41+1
  2258 09:B5F1: 85 13        	sta	<L41+1+10
  2259 09:B5F3: 2B           	pld
  2260 09:B5F4: 3B           	tsc
  2261 09:B5F5: 18           	clc
  2262 09:B5F6: 69 12 00     	adc	#L41+10
  2263 09:B5F9: 1B           	tcs
  2264 09:B5FA: 98           	tya
  2265 09:B5FB: 6B           	rtl
  2266                        ;    }
  2267                        	.line	219
  2268                        ;
  2269                        ;  /**********************************************
                    *********/
  2270                        ;  /**  On va décoder tous les éléments fixes du H
                    eader  **/
  2271                        ;  /**********************************************
                    *********/
  2272                        ;  memcpy(&current_header->BlockCnt,&current_file-
                    >data[data_offset+0x00],sizeof(DWORD));     /* Block Count *
                     512 = ByteCount */
  2273                        L10025:
  2274                        	.line	224
  2275 09:B5FC: F4 04 00     	pea	#<$4
  2276 09:B5FF: A0 00 00     	ldy	#$0
  2277 09:B602: A5 10        	lda	<L41+data_offset_0
  2278 09:B604: 10 01        	bpl	L47
  Mon Sep 27 2021  9:39                                                Page 44


  2279 09:B606: 88           	dey
  2280                        L47:
  2281 09:B607: 85 01        	sta	<R0
  2282 09:B609: 84 03        	sty	<R0+2
  2283 09:B60B: 18           	clc
  2284 09:B60C: A0 0A 00     	ldy	#$a
  2285 09:B60F: B7 0C        	lda	[<L41+current_file_0],Y
  2286 09:B611: 65 01        	adc	<R0
  2287 09:B613: 85 05        	sta	<R1
  2288 09:B615: A0 0C 00     	ldy	#$c
  2289 09:B618: B7 0C        	lda	[<L41+current_file_0],Y
  2290 09:B61A: 65 03        	adc	<R0+2
  2291 09:B61C: 85 07        	sta	<R1+2
  2292 09:B61E: D4 07        	pei	<R1+2
  2293 09:B620: D4 05        	pei	<R1
  2294 09:B622: 18           	clc
  2295 09:B623: A9 08 00     	lda	#$8
  2296 09:B626: 65 12        	adc	<L41+current_header_0
  2297 09:B628: 85 01        	sta	<R0
  2298 09:B62A: A9 00 00     	lda	#$0
  2299 09:B62D: 65 14        	adc	<L41+current_header_0+2
  2300 09:B62F: 85 03        	sta	<R0+2
  2301 09:B631: D4 03        	pei	<R0+2
  2302 09:B633: D4 01        	pei	<R0
  2303 09:B635: 22 xx xx xx  	jsl	~~memcpy
  2304                        ;  current_header->ByteCnt = 512*current_header->B
                    lockCnt;
  2305                        	.line	225
  2306 09:B639: A0 0A 00     	ldy	#$a
  2307 09:B63C: B7 12        	lda	[<L41+current_header_0],Y
  2308 09:B63E: 48           	pha
  2309 09:B63F: A0 08 00     	ldy	#$8
  2310 09:B642: B7 12        	lda	[<L41+current_header_0],Y
  2311 09:B644: 48           	pha
  2312 09:B645: A9 09 00     	lda	#$9
  2313                        	xref	~~~lasl
  2314 09:B648: 22 xx xx xx  	jsl	~~~lasl
  2315 09:B64C: 85 01        	sta	<R0
  2316 09:B64E: 86 03        	stx	<R0+2
  2317 09:B650: A5 01        	lda	<R0
  2318 09:B652: A0 0C 00     	ldy	#$c
  2319 09:B655: 97 12        	sta	[<L41+current_header_0],Y
  2320 09:B657: A5 03        	lda	<R0+2
  2321 09:B659: A0 0E 00     	ldy	#$e
  2322 09:B65C: 97 12        	sta	[<L41+current_header_0],Y
  2323                        ;  memcpy(&current_header->ResSpc,&current_file->d
                    ata[data_offset+0x04],sizeof(DWORD));
  2324                        	.line	226
  2325 09:B65E: F4 04 00     	pea	#<$4
  2326 09:B661: 18           	clc
  2327 09:B662: A9 04 00     	lda	#$4
  2328 09:B665: 65 10        	adc	<L41+data_offset_0
  2329 09:B667: 85 01        	sta	<R0
  2330 09:B669: A0 00 00     	ldy	#$0
  2331 09:B66C: A5 01        	lda	<R0
  2332 09:B66E: 10 01        	bpl	L48
  2333 09:B670: 88           	dey
  2334                        L48:
  Mon Sep 27 2021  9:39                                                Page 45


  2335 09:B671: 85 01        	sta	<R0
  2336 09:B673: 84 03        	sty	<R0+2
  2337 09:B675: 18           	clc
  2338 09:B676: A0 0A 00     	ldy	#$a
  2339 09:B679: B7 0C        	lda	[<L41+current_file_0],Y
  2340 09:B67B: 65 01        	adc	<R0
  2341 09:B67D: 85 05        	sta	<R1
  2342 09:B67F: A0 0C 00     	ldy	#$c
  2343 09:B682: B7 0C        	lda	[<L41+current_file_0],Y
  2344 09:B684: 65 03        	adc	<R0+2
  2345 09:B686: 85 07        	sta	<R1+2
  2346 09:B688: D4 07        	pei	<R1+2
  2347 09:B68A: D4 05        	pei	<R1
  2348 09:B68C: 18           	clc
  2349 09:B68D: A9 10 00     	lda	#$10
  2350 09:B690: 65 12        	adc	<L41+current_header_0
  2351 09:B692: 85 01        	sta	<R0
  2352 09:B694: A9 00 00     	lda	#$0
  2353 09:B697: 65 14        	adc	<L41+current_header_0+2
  2354 09:B699: 85 03        	sta	<R0+2
  2355 09:B69B: D4 03        	pei	<R0+2
  2356 09:B69D: D4 01        	pei	<R0
  2357 09:B69F: 22 xx xx xx  	jsl	~~memcpy
  2358                        ;  memcpy(&current_header->Length,&current_file->d
                    ata[data_offset+0x08],sizeof(DWORD));
  2359                        	.line	227
  2360 09:B6A3: F4 04 00     	pea	#<$4
  2361 09:B6A6: 18           	clc
  2362 09:B6A7: A9 08 00     	lda	#$8
  2363 09:B6AA: 65 10        	adc	<L41+data_offset_0
  2364 09:B6AC: 85 01        	sta	<R0
  2365 09:B6AE: A0 00 00     	ldy	#$0
  2366 09:B6B1: A5 01        	lda	<R0
  2367 09:B6B3: 10 01        	bpl	L49
  2368 09:B6B5: 88           	dey
  2369                        L49:
  2370 09:B6B6: 85 01        	sta	<R0
  2371 09:B6B8: 84 03        	sty	<R0+2
  2372 09:B6BA: 18           	clc
  2373 09:B6BB: A0 0A 00     	ldy	#$a
  2374 09:B6BE: B7 0C        	lda	[<L41+current_file_0],Y
  2375 09:B6C0: 65 01        	adc	<R0
  2376 09:B6C2: 85 05        	sta	<R1
  2377 09:B6C4: A0 0C 00     	ldy	#$c
  2378 09:B6C7: B7 0C        	lda	[<L41+current_file_0],Y
  2379 09:B6C9: 65 03        	adc	<R0+2
  2380 09:B6CB: 85 07        	sta	<R1+2
  2381 09:B6CD: D4 07        	pei	<R1+2
  2382 09:B6CF: D4 05        	pei	<R1
  2383 09:B6D1: 18           	clc
  2384 09:B6D2: A9 14 00     	lda	#$14
  2385 09:B6D5: 65 12        	adc	<L41+current_header_0
  2386 09:B6D7: 85 01        	sta	<R0
  2387 09:B6D9: A9 00 00     	lda	#$0
  2388 09:B6DC: 65 14        	adc	<L41+current_header_0+2
  2389 09:B6DE: 85 03        	sta	<R0+2
  2390 09:B6E0: D4 03        	pei	<R0+2
  2391 09:B6E2: D4 01        	pei	<R0
  Mon Sep 27 2021  9:39                                                Page 46


  2392 09:B6E4: 22 xx xx xx  	jsl	~~memcpy
  2393                        ;  memcpy(&current_header->Type,&current_file->dat
                    a[data_offset+0x0C],sizeof(BYTE));
  2394                        	.line	228
  2395 09:B6E8: F4 01 00     	pea	#<$1
  2396 09:B6EB: 18           	clc
  2397 09:B6EC: A9 0C 00     	lda	#$c
  2398 09:B6EF: 65 10        	adc	<L41+data_offset_0
  2399 09:B6F1: 85 01        	sta	<R0
  2400 09:B6F3: A0 00 00     	ldy	#$0
  2401 09:B6F6: A5 01        	lda	<R0
  2402 09:B6F8: 10 01        	bpl	L50
  2403 09:B6FA: 88           	dey
  2404                        L50:
  2405 09:B6FB: 85 01        	sta	<R0
  2406 09:B6FD: 84 03        	sty	<R0+2
  2407 09:B6FF: 18           	clc
  2408 09:B700: A0 0A 00     	ldy	#$a
  2409 09:B703: B7 0C        	lda	[<L41+current_file_0],Y
  2410 09:B705: 65 01        	adc	<R0
  2411 09:B707: 85 05        	sta	<R1
  2412 09:B709: A0 0C 00     	ldy	#$c
  2413 09:B70C: B7 0C        	lda	[<L41+current_file_0],Y
  2414 09:B70E: 65 03        	adc	<R0+2
  2415 09:B710: 85 07        	sta	<R1+2
  2416 09:B712: D4 07        	pei	<R1+2
  2417 09:B714: D4 05        	pei	<R1
  2418 09:B716: 18           	clc
  2419 09:B717: A9 18 00     	lda	#$18
  2420 09:B71A: 65 12        	adc	<L41+current_header_0
  2421 09:B71C: 85 01        	sta	<R0
  2422 09:B71E: A9 00 00     	lda	#$0
  2423 09:B721: 65 14        	adc	<L41+current_header_0+2
  2424 09:B723: 85 03        	sta	<R0+2
  2425 09:B725: D4 03        	pei	<R0+2
  2426 09:B727: D4 01        	pei	<R0
  2427 09:B729: 22 xx xx xx  	jsl	~~memcpy
  2428                        ;  memcpy(&current_header->LabLen,&current_file->d
                    ata[data_offset+0x0D],sizeof(BYTE));
  2429                        	.line	229
  2430 09:B72D: F4 01 00     	pea	#<$1
  2431 09:B730: 18           	clc
  2432 09:B731: A9 0D 00     	lda	#$d
  2433 09:B734: 65 10        	adc	<L41+data_offset_0
  2434 09:B736: 85 01        	sta	<R0
  2435 09:B738: A0 00 00     	ldy	#$0
  2436 09:B73B: A5 01        	lda	<R0
  2437 09:B73D: 10 01        	bpl	L51
  2438 09:B73F: 88           	dey
  2439                        L51:
  2440 09:B740: 85 01        	sta	<R0
  2441 09:B742: 84 03        	sty	<R0+2
  2442 09:B744: 18           	clc
  2443 09:B745: A0 0A 00     	ldy	#$a
  2444 09:B748: B7 0C        	lda	[<L41+current_file_0],Y
  2445 09:B74A: 65 01        	adc	<R0
  2446 09:B74C: 85 05        	sta	<R1
  2447 09:B74E: A0 0C 00     	ldy	#$c
  Mon Sep 27 2021  9:39                                                Page 47


  2448 09:B751: B7 0C        	lda	[<L41+current_file_0],Y
  2449 09:B753: 65 03        	adc	<R0+2
  2450 09:B755: 85 07        	sta	<R1+2
  2451 09:B757: D4 07        	pei	<R1+2
  2452 09:B759: D4 05        	pei	<R1
  2453 09:B75B: 18           	clc
  2454 09:B75C: A9 1A 00     	lda	#$1a
  2455 09:B75F: 65 12        	adc	<L41+current_header_0
  2456 09:B761: 85 01        	sta	<R0
  2457 09:B763: A9 00 00     	lda	#$0
  2458 09:B766: 65 14        	adc	<L41+current_header_0+2
  2459 09:B768: 85 03        	sta	<R0+2
  2460 09:B76A: D4 03        	pei	<R0+2
  2461 09:B76C: D4 01        	pei	<R0
  2462 09:B76E: 22 xx xx xx  	jsl	~~memcpy
  2463                        ;  memcpy(&current_header->NumLen,&current_file->d
                    ata[data_offset+0x0E],sizeof(BYTE));
  2464                        	.line	230
  2465 09:B772: F4 01 00     	pea	#<$1
  2466 09:B775: 18           	clc
  2467 09:B776: A9 0E 00     	lda	#$e
  2468 09:B779: 65 10        	adc	<L41+data_offset_0
  2469 09:B77B: 85 01        	sta	<R0
  2470 09:B77D: A0 00 00     	ldy	#$0
  2471 09:B780: A5 01        	lda	<R0
  2472 09:B782: 10 01        	bpl	L52
  2473 09:B784: 88           	dey
  2474                        L52:
  2475 09:B785: 85 01        	sta	<R0
  2476 09:B787: 84 03        	sty	<R0+2
  2477 09:B789: 18           	clc
  2478 09:B78A: A0 0A 00     	ldy	#$a
  2479 09:B78D: B7 0C        	lda	[<L41+current_file_0],Y
  2480 09:B78F: 65 01        	adc	<R0
  2481 09:B791: 85 05        	sta	<R1
  2482 09:B793: A0 0C 00     	ldy	#$c
  2483 09:B796: B7 0C        	lda	[<L41+current_file_0],Y
  2484 09:B798: 65 03        	adc	<R0+2
  2485 09:B79A: 85 07        	sta	<R1+2
  2486 09:B79C: D4 07        	pei	<R1+2
  2487 09:B79E: D4 05        	pei	<R1
  2488 09:B7A0: 18           	clc
  2489 09:B7A1: A9 1B 00     	lda	#$1b
  2490 09:B7A4: 65 12        	adc	<L41+current_header_0
  2491 09:B7A6: 85 01        	sta	<R0
  2492 09:B7A8: A9 00 00     	lda	#$0
  2493 09:B7AB: 65 14        	adc	<L41+current_header_0+2
  2494 09:B7AD: 85 03        	sta	<R0+2
  2495 09:B7AF: D4 03        	pei	<R0+2
  2496 09:B7B1: D4 01        	pei	<R0
  2497 09:B7B3: 22 xx xx xx  	jsl	~~memcpy
  2498                        ;  /* Version Byte */
  2499                        ;  memcpy(&current_header->BankSize,&current_file-
                    >data[data_offset+0x10],sizeof(DWORD));
  2500                        	.line	232
  2501 09:B7B7: F4 04 00     	pea	#<$4
  2502 09:B7BA: 18           	clc
  2503 09:B7BB: A9 10 00     	lda	#$10
  Mon Sep 27 2021  9:39                                                Page 48


  2504 09:B7BE: 65 10        	adc	<L41+data_offset_0
  2505 09:B7C0: 85 01        	sta	<R0
  2506 09:B7C2: A0 00 00     	ldy	#$0
  2507 09:B7C5: A5 01        	lda	<R0
  2508 09:B7C7: 10 01        	bpl	L53
  2509 09:B7C9: 88           	dey
  2510                        L53:
  2511 09:B7CA: 85 01        	sta	<R0
  2512 09:B7CC: 84 03        	sty	<R0+2
  2513 09:B7CE: 18           	clc
  2514 09:B7CF: A0 0A 00     	ldy	#$a
  2515 09:B7D2: B7 0C        	lda	[<L41+current_file_0],Y
  2516 09:B7D4: 65 01        	adc	<R0
  2517 09:B7D6: 85 05        	sta	<R1
  2518 09:B7D8: A0 0C 00     	ldy	#$c
  2519 09:B7DB: B7 0C        	lda	[<L41+current_file_0],Y
  2520 09:B7DD: 65 03        	adc	<R0+2
  2521 09:B7DF: 85 07        	sta	<R1+2
  2522 09:B7E1: D4 07        	pei	<R1+2
  2523 09:B7E3: D4 05        	pei	<R1
  2524 09:B7E5: 18           	clc
  2525 09:B7E6: A9 1D 00     	lda	#$1d
  2526 09:B7E9: 65 12        	adc	<L41+current_header_0
  2527 09:B7EB: 85 01        	sta	<R0
  2528 09:B7ED: A9 00 00     	lda	#$0
  2529 09:B7F0: 65 14        	adc	<L41+current_header_0+2
  2530 09:B7F2: 85 03        	sta	<R0+2
  2531 09:B7F4: D4 03        	pei	<R0+2
  2532 09:B7F6: D4 01        	pei	<R0
  2533 09:B7F8: 22 xx xx xx  	jsl	~~memcpy
  2534                        ;  memcpy(&current_header->Org,&current_file->data
                    [data_offset+0x14],sizeof(DWORD));
  2535                        	.line	233
  2536 09:B7FC: F4 04 00     	pea	#<$4
  2537 09:B7FF: 18           	clc
  2538 09:B800: A9 14 00     	lda	#$14
  2539 09:B803: 65 10        	adc	<L41+data_offset_0
  2540 09:B805: 85 01        	sta	<R0
  2541 09:B807: A0 00 00     	ldy	#$0
  2542 09:B80A: A5 01        	lda	<R0
  2543 09:B80C: 10 01        	bpl	L54
  2544 09:B80E: 88           	dey
  2545                        L54:
  2546 09:B80F: 85 01        	sta	<R0
  2547 09:B811: 84 03        	sty	<R0+2
  2548 09:B813: 18           	clc
  2549 09:B814: A0 0A 00     	ldy	#$a
  2550 09:B817: B7 0C        	lda	[<L41+current_file_0],Y
  2551 09:B819: 65 01        	adc	<R0
  2552 09:B81B: 85 05        	sta	<R1
  2553 09:B81D: A0 0C 00     	ldy	#$c
  2554 09:B820: B7 0C        	lda	[<L41+current_file_0],Y
  2555 09:B822: 65 03        	adc	<R0+2
  2556 09:B824: 85 07        	sta	<R1+2
  2557 09:B826: D4 07        	pei	<R1+2
  2558 09:B828: D4 05        	pei	<R1
  2559 09:B82A: 18           	clc
  2560 09:B82B: A9 25 00     	lda	#$25
  Mon Sep 27 2021  9:39                                                Page 49


  2561 09:B82E: 65 12        	adc	<L41+current_header_0
  2562 09:B830: 85 01        	sta	<R0
  2563 09:B832: A9 00 00     	lda	#$0
  2564 09:B835: 65 14        	adc	<L41+current_header_0+2
  2565 09:B837: 85 03        	sta	<R0+2
  2566 09:B839: D4 03        	pei	<R0+2
  2567 09:B83B: D4 01        	pei	<R0
  2568 09:B83D: 22 xx xx xx  	jsl	~~memcpy
  2569                        ;  memcpy(&current_header->Align,&current_file->da
                    ta[data_offset+0x18],sizeof(DWORD));
  2570                        	.line	234
  2571 09:B841: F4 04 00     	pea	#<$4
  2572 09:B844: 18           	clc
  2573 09:B845: A9 18 00     	lda	#$18
  2574 09:B848: 65 10        	adc	<L41+data_offset_0
  2575 09:B84A: 85 01        	sta	<R0
  2576 09:B84C: A0 00 00     	ldy	#$0
  2577 09:B84F: A5 01        	lda	<R0
  2578 09:B851: 10 01        	bpl	L55
  2579 09:B853: 88           	dey
  2580                        L55:
  2581 09:B854: 85 01        	sta	<R0
  2582 09:B856: 84 03        	sty	<R0+2
  2583 09:B858: 18           	clc
  2584 09:B859: A0 0A 00     	ldy	#$a
  2585 09:B85C: B7 0C        	lda	[<L41+current_file_0],Y
  2586 09:B85E: 65 01        	adc	<R0
  2587 09:B860: 85 05        	sta	<R1
  2588 09:B862: A0 0C 00     	ldy	#$c
  2589 09:B865: B7 0C        	lda	[<L41+current_file_0],Y
  2590 09:B867: 65 03        	adc	<R0+2
  2591 09:B869: 85 07        	sta	<R1+2
  2592 09:B86B: D4 07        	pei	<R1+2
  2593 09:B86D: D4 05        	pei	<R1
  2594 09:B86F: 18           	clc
  2595 09:B870: A9 29 00     	lda	#$29
  2596 09:B873: 65 12        	adc	<L41+current_header_0
  2597 09:B875: 85 01        	sta	<R0
  2598 09:B877: A9 00 00     	lda	#$0
  2599 09:B87A: 65 14        	adc	<L41+current_header_0+2
  2600 09:B87C: 85 03        	sta	<R0+2
  2601 09:B87E: D4 03        	pei	<R0+2
  2602 09:B880: D4 01        	pei	<R0
  2603 09:B882: 22 xx xx xx  	jsl	~~memcpy
  2604                        ;  memcpy(&current_header->NumSEx,&current_file->d
                    ata[data_offset+0x1C],sizeof(BYTE));
  2605                        	.line	235
  2606 09:B886: F4 01 00     	pea	#<$1
  2607 09:B889: 18           	clc
  2608 09:B88A: A9 1C 00     	lda	#$1c
  2609 09:B88D: 65 10        	adc	<L41+data_offset_0
  2610 09:B88F: 85 01        	sta	<R0
  2611 09:B891: A0 00 00     	ldy	#$0
  2612 09:B894: A5 01        	lda	<R0
  2613 09:B896: 10 01        	bpl	L56
  2614 09:B898: 88           	dey
  2615                        L56:
  2616 09:B899: 85 01        	sta	<R0
  Mon Sep 27 2021  9:39                                                Page 50


  2617 09:B89B: 84 03        	sty	<R0+2
  2618 09:B89D: 18           	clc
  2619 09:B89E: A0 0A 00     	ldy	#$a
  2620 09:B8A1: B7 0C        	lda	[<L41+current_file_0],Y
  2621 09:B8A3: 65 01        	adc	<R0
  2622 09:B8A5: 85 05        	sta	<R1
  2623 09:B8A7: A0 0C 00     	ldy	#$c
  2624 09:B8AA: B7 0C        	lda	[<L41+current_file_0],Y
  2625 09:B8AC: 65 03        	adc	<R0+2
  2626 09:B8AE: 85 07        	sta	<R1+2
  2627 09:B8B0: D4 07        	pei	<R1+2
  2628 09:B8B2: D4 05        	pei	<R1
  2629 09:B8B4: 18           	clc
  2630 09:B8B5: A9 2D 00     	lda	#$2d
  2631 09:B8B8: 65 12        	adc	<L41+current_header_0
  2632 09:B8BA: 85 01        	sta	<R0
  2633 09:B8BC: A9 00 00     	lda	#$0
  2634 09:B8BF: 65 14        	adc	<L41+current_header_0+2
  2635 09:B8C1: 85 03        	sta	<R0+2
  2636 09:B8C3: D4 03        	pei	<R0+2
  2637 09:B8C5: D4 01        	pei	<R0
  2638 09:B8C7: 22 xx xx xx  	jsl	~~memcpy
  2639                        ;  memcpy(&current_header->undefine_1,&current_fil
                    e->data[data_offset+0x1D],sizeof(BYTE));
  2640                        	.line	236
  2641 09:B8CB: F4 01 00     	pea	#<$1
  2642 09:B8CE: 18           	clc
  2643 09:B8CF: A9 1D 00     	lda	#$1d
  2644 09:B8D2: 65 10        	adc	<L41+data_offset_0
  2645 09:B8D4: 85 01        	sta	<R0
  2646 09:B8D6: A0 00 00     	ldy	#$0
  2647 09:B8D9: A5 01        	lda	<R0
  2648 09:B8DB: 10 01        	bpl	L57
  2649 09:B8DD: 88           	dey
  2650                        L57:
  2651 09:B8DE: 85 01        	sta	<R0
  2652 09:B8E0: 84 03        	sty	<R0+2
  2653 09:B8E2: 18           	clc
  2654 09:B8E3: A0 0A 00     	ldy	#$a
  2655 09:B8E6: B7 0C        	lda	[<L41+current_file_0],Y
  2656 09:B8E8: 65 01        	adc	<R0
  2657 09:B8EA: 85 05        	sta	<R1
  2658 09:B8EC: A0 0C 00     	ldy	#$c
  2659 09:B8EF: B7 0C        	lda	[<L41+current_file_0],Y
  2660 09:B8F1: 65 03        	adc	<R0+2
  2661 09:B8F3: 85 07        	sta	<R1+2
  2662 09:B8F5: D4 07        	pei	<R1+2
  2663 09:B8F7: D4 05        	pei	<R1
  2664 09:B8F9: 18           	clc
  2665 09:B8FA: A9 19 00     	lda	#$19
  2666 09:B8FD: 65 12        	adc	<L41+current_header_0
  2667 09:B8FF: 85 01        	sta	<R0
  2668 09:B901: A9 00 00     	lda	#$0
  2669 09:B904: 65 14        	adc	<L41+current_header_0+2
  2670 09:B906: 85 03        	sta	<R0+2
  2671 09:B908: D4 03        	pei	<R0+2
  2672 09:B90A: D4 01        	pei	<R0
  2673 09:B90C: 22 xx xx xx  	jsl	~~memcpy
  Mon Sep 27 2021  9:39                                                Page 51


  2674                        ;  memcpy(&current_header->undefine_2,&current_fil
                    e->data[data_offset+0x1E],sizeof(BYTE));
  2675                        	.line	237
  2676 09:B910: F4 01 00     	pea	#<$1
  2677 09:B913: 18           	clc
  2678 09:B914: A9 1E 00     	lda	#$1e
  2679 09:B917: 65 10        	adc	<L41+data_offset_0
  2680 09:B919: 85 01        	sta	<R0
  2681 09:B91B: A0 00 00     	ldy	#$0
  2682 09:B91E: A5 01        	lda	<R0
  2683 09:B920: 10 01        	bpl	L58
  2684 09:B922: 88           	dey
  2685                        L58:
  2686 09:B923: 85 01        	sta	<R0
  2687 09:B925: 84 03        	sty	<R0+2
  2688 09:B927: 18           	clc
  2689 09:B928: A0 0A 00     	ldy	#$a
  2690 09:B92B: B7 0C        	lda	[<L41+current_file_0],Y
  2691 09:B92D: 65 01        	adc	<R0
  2692 09:B92F: 85 05        	sta	<R1
  2693 09:B931: A0 0C 00     	ldy	#$c
  2694 09:B934: B7 0C        	lda	[<L41+current_file_0],Y
  2695 09:B936: 65 03        	adc	<R0+2
  2696 09:B938: 85 07        	sta	<R1+2
  2697 09:B93A: D4 07        	pei	<R1+2
  2698 09:B93C: D4 05        	pei	<R1
  2699 09:B93E: 18           	clc
  2700 09:B93F: A9 23 00     	lda	#$23
  2701 09:B942: 65 12        	adc	<L41+current_header_0
  2702 09:B944: 85 01        	sta	<R0
  2703 09:B946: A9 00 00     	lda	#$0
  2704 09:B949: 65 14        	adc	<L41+current_header_0+2
  2705 09:B94B: 85 03        	sta	<R0+2
  2706 09:B94D: D4 03        	pei	<R0+2
  2707 09:B94F: D4 01        	pei	<R0
  2708 09:B951: 22 xx xx xx  	jsl	~~memcpy
  2709                        ;  memcpy(&current_header->undefine_3,&current_fil
                    e->data[data_offset+0x1F],sizeof(BYTE));
  2710                        	.line	238
  2711 09:B955: F4 01 00     	pea	#<$1
  2712 09:B958: 18           	clc
  2713 09:B959: A9 1F 00     	lda	#$1f
  2714 09:B95C: 65 10        	adc	<L41+data_offset_0
  2715 09:B95E: 85 01        	sta	<R0
  2716 09:B960: A0 00 00     	ldy	#$0
  2717 09:B963: A5 01        	lda	<R0
  2718 09:B965: 10 01        	bpl	L59
  2719 09:B967: 88           	dey
  2720                        L59:
  2721 09:B968: 85 01        	sta	<R0
  2722 09:B96A: 84 03        	sty	<R0+2
  2723 09:B96C: 18           	clc
  2724 09:B96D: A0 0A 00     	ldy	#$a
  2725 09:B970: B7 0C        	lda	[<L41+current_file_0],Y
  2726 09:B972: 65 01        	adc	<R0
  2727 09:B974: 85 05        	sta	<R1
  2728 09:B976: A0 0C 00     	ldy	#$c
  2729 09:B979: B7 0C        	lda	[<L41+current_file_0],Y
  Mon Sep 27 2021  9:39                                                Page 52


  2730 09:B97B: 65 03        	adc	<R0+2
  2731 09:B97D: 85 07        	sta	<R1+2
  2732 09:B97F: D4 07        	pei	<R1+2
  2733 09:B981: D4 05        	pei	<R1
  2734 09:B983: 18           	clc
  2735 09:B984: A9 24 00     	lda	#$24
  2736 09:B987: 65 12        	adc	<L41+current_header_0
  2737 09:B989: 85 01        	sta	<R0
  2738 09:B98B: A9 00 00     	lda	#$0
  2739 09:B98E: 65 14        	adc	<L41+current_header_0+2
  2740 09:B990: 85 03        	sta	<R0+2
  2741 09:B992: D4 03        	pei	<R0+2
  2742 09:B994: D4 01        	pei	<R0
  2743 09:B996: 22 xx xx xx  	jsl	~~memcpy
  2744                        ;  memcpy(&current_header->undefine_4,&current_fil
                    e->data[data_offset+0x20],sizeof(BYTE));
  2745                        	.line	239
  2746 09:B99A: F4 01 00     	pea	#<$1
  2747 09:B99D: 18           	clc
  2748 09:B99E: A9 20 00     	lda	#$20
  2749 09:B9A1: 65 10        	adc	<L41+data_offset_0
  2750 09:B9A3: 85 01        	sta	<R0
  2751 09:B9A5: A0 00 00     	ldy	#$0
  2752 09:B9A8: A5 01        	lda	<R0
  2753 09:B9AA: 10 01        	bpl	L60
  2754 09:B9AC: 88           	dey
  2755                        L60:
  2756 09:B9AD: 85 01        	sta	<R0
  2757 09:B9AF: 84 03        	sty	<R0+2
  2758 09:B9B1: 18           	clc
  2759 09:B9B2: A0 0A 00     	ldy	#$a
  2760 09:B9B5: B7 0C        	lda	[<L41+current_file_0],Y
  2761 09:B9B7: 65 01        	adc	<R0
  2762 09:B9B9: 85 05        	sta	<R1
  2763 09:B9BB: A0 0C 00     	ldy	#$c
  2764 09:B9BE: B7 0C        	lda	[<L41+current_file_0],Y
  2765 09:B9C0: 65 03        	adc	<R0+2
  2766 09:B9C2: 85 07        	sta	<R1+2
  2767 09:B9C4: D4 07        	pei	<R1+2
  2768 09:B9C6: D4 05        	pei	<R1
  2769 09:B9C8: 18           	clc
  2770 09:B9C9: A9 2F 00     	lda	#$2f
  2771 09:B9CC: 65 12        	adc	<L41+current_header_0
  2772 09:B9CE: 85 01        	sta	<R0
  2773 09:B9D0: A9 00 00     	lda	#$0
  2774 09:B9D3: 65 14        	adc	<L41+current_header_0+2
  2775 09:B9D5: 85 03        	sta	<R0+2
  2776 09:B9D7: D4 03        	pei	<R0+2
  2777 09:B9D9: D4 01        	pei	<R0
  2778 09:B9DB: 22 xx xx xx  	jsl	~~memcpy
  2779                        ;  memcpy(&current_header->undefine_5,&current_fil
                    e->data[data_offset+0x21],sizeof(BYTE));
  2780                        	.line	240
  2781 09:B9DF: F4 01 00     	pea	#<$1
  2782 09:B9E2: 18           	clc
  2783 09:B9E3: A9 21 00     	lda	#$21
  2784 09:B9E6: 65 10        	adc	<L41+data_offset_0
  2785 09:B9E8: 85 01        	sta	<R0
  Mon Sep 27 2021  9:39                                                Page 53


  2786 09:B9EA: A0 00 00     	ldy	#$0
  2787 09:B9ED: A5 01        	lda	<R0
  2788 09:B9EF: 10 01        	bpl	L61
  2789 09:B9F1: 88           	dey
  2790                        L61:
  2791 09:B9F2: 85 01        	sta	<R0
  2792 09:B9F4: 84 03        	sty	<R0+2
  2793 09:B9F6: 18           	clc
  2794 09:B9F7: A0 0A 00     	ldy	#$a
  2795 09:B9FA: B7 0C        	lda	[<L41+current_file_0],Y
  2796 09:B9FC: 65 01        	adc	<R0
  2797 09:B9FE: 85 05        	sta	<R1
  2798 09:BA00: A0 0C 00     	ldy	#$c
  2799 09:BA03: B7 0C        	lda	[<L41+current_file_0],Y
  2800 09:BA05: 65 03        	adc	<R0+2
  2801 09:BA07: 85 07        	sta	<R1+2
  2802 09:BA09: D4 07        	pei	<R1+2
  2803 09:BA0B: D4 05        	pei	<R1
  2804 09:BA0D: 18           	clc
  2805 09:BA0E: A9 3C 0A     	lda	#$a3c
  2806 09:BA11: 65 12        	adc	<L41+current_header_0
  2807 09:BA13: 85 01        	sta	<R0
  2808 09:BA15: A9 00 00     	lda	#$0
  2809 09:BA18: 65 14        	adc	<L41+current_header_0+2
  2810 09:BA1A: 85 03        	sta	<R0+2
  2811 09:BA1C: D4 03        	pei	<R0+2
  2812 09:BA1E: D4 01        	pei	<R0
  2813 09:BA20: 22 xx xx xx  	jsl	~~memcpy
  2814                        ;  memcpy(&current_header->undefine_6,&current_fil
                    e->data[data_offset+0x22],sizeof(BYTE));
  2815                        	.line	241
  2816 09:BA24: F4 01 00     	pea	#<$1
  2817 09:BA27: 18           	clc
  2818 09:BA28: A9 22 00     	lda	#$22
  2819 09:BA2B: 65 10        	adc	<L41+data_offset_0
  2820 09:BA2D: 85 01        	sta	<R0
  2821 09:BA2F: A0 00 00     	ldy	#$0
  2822 09:BA32: A5 01        	lda	<R0
  2823 09:BA34: 10 01        	bpl	L62
  2824 09:BA36: 88           	dey
  2825                        L62:
  2826 09:BA37: 85 01        	sta	<R0
  2827 09:BA39: 84 03        	sty	<R0+2
  2828 09:BA3B: 18           	clc
  2829 09:BA3C: A0 0A 00     	ldy	#$a
  2830 09:BA3F: B7 0C        	lda	[<L41+current_file_0],Y
  2831 09:BA41: 65 01        	adc	<R0
  2832 09:BA43: 85 05        	sta	<R1
  2833 09:BA45: A0 0C 00     	ldy	#$c
  2834 09:BA48: B7 0C        	lda	[<L41+current_file_0],Y
  2835 09:BA4A: 65 03        	adc	<R0+2
  2836 09:BA4C: 85 07        	sta	<R1+2
  2837 09:BA4E: D4 07        	pei	<R1+2
  2838 09:BA50: D4 05        	pei	<R1
  2839 09:BA52: 18           	clc
  2840 09:BA53: A9 3D 0A     	lda	#$a3d
  2841 09:BA56: 65 12        	adc	<L41+current_header_0
  2842 09:BA58: 85 01        	sta	<R0
  Mon Sep 27 2021  9:39                                                Page 54


  2843 09:BA5A: A9 00 00     	lda	#$0
  2844 09:BA5D: 65 14        	adc	<L41+current_header_0+2
  2845 09:BA5F: 85 03        	sta	<R0+2
  2846 09:BA61: D4 03        	pei	<R0+2
  2847 09:BA63: D4 01        	pei	<R0
  2848 09:BA65: 22 xx xx xx  	jsl	~~memcpy
  2849                        ;  memcpy(&current_header->undefine_7,&current_fil
                    e->data[data_offset+0x23],sizeof(BYTE));
  2850                        	.line	242
  2851 09:BA69: F4 01 00     	pea	#<$1
  2852 09:BA6C: 18           	clc
  2853 09:BA6D: A9 23 00     	lda	#$23
  2854 09:BA70: 65 10        	adc	<L41+data_offset_0
  2855 09:BA72: 85 01        	sta	<R0
  2856 09:BA74: A0 00 00     	ldy	#$0
  2857 09:BA77: A5 01        	lda	<R0
  2858 09:BA79: 10 01        	bpl	L63
  2859 09:BA7B: 88           	dey
  2860                        L63:
  2861 09:BA7C: 85 01        	sta	<R0
  2862 09:BA7E: 84 03        	sty	<R0+2
  2863 09:BA80: 18           	clc
  2864 09:BA81: A0 0A 00     	ldy	#$a
  2865 09:BA84: B7 0C        	lda	[<L41+current_file_0],Y
  2866 09:BA86: 65 01        	adc	<R0
  2867 09:BA88: 85 05        	sta	<R1
  2868 09:BA8A: A0 0C 00     	ldy	#$c
  2869 09:BA8D: B7 0C        	lda	[<L41+current_file_0],Y
  2870 09:BA8F: 65 03        	adc	<R0+2
  2871 09:BA91: 85 07        	sta	<R1+2
  2872 09:BA93: D4 07        	pei	<R1+2
  2873 09:BA95: D4 05        	pei	<R1
  2874 09:BA97: 18           	clc
  2875 09:BA98: A9 3E 0A     	lda	#$a3e
  2876 09:BA9B: 65 12        	adc	<L41+current_header_0
  2877 09:BA9D: 85 01        	sta	<R0
  2878 09:BA9F: A9 00 00     	lda	#$0
  2879 09:BAA2: 65 14        	adc	<L41+current_header_0+2
  2880 09:BAA4: 85 03        	sta	<R0+2
  2881 09:BAA6: D4 03        	pei	<R0+2
  2882 09:BAA8: D4 01        	pei	<R0
  2883 09:BAAA: 22 xx xx xx  	jsl	~~memcpy
  2884                        ;
  2885                        ;  /********************************************/
  2886                        ;  /**  On va valider les données récupérées  **/
  2887                        ;  /********************************************/
  2888                        ;  /* Taille du Segment */
  2889                        ;  if((int)(data_offset + current_header->ByteCnt)
                     > (int) current_file->data_length)
  2890                        	.line	248
  2891                        ;    {
  2892 09:BAAE: A0 00 00     	ldy	#$0
  2893 09:BAB1: A5 10        	lda	<L41+data_offset_0
  2894 09:BAB3: 10 01        	bpl	L64
  2895 09:BAB5: 88           	dey
  2896                        L64:
  2897 09:BAB6: 85 01        	sta	<R0
  2898 09:BAB8: 84 03        	sty	<R0+2
  Mon Sep 27 2021  9:39                                                Page 55


  2899 09:BABA: 18           	clc
  2900 09:BABB: A5 01        	lda	<R0
  2901 09:BABD: A0 0C 00     	ldy	#$c
  2902 09:BAC0: 77 12        	adc	[<L41+current_header_0],Y
  2903 09:BAC2: 85 05        	sta	<R1
  2904 09:BAC4: A5 03        	lda	<R0+2
  2905 09:BAC6: A0 0E 00     	ldy	#$e
  2906 09:BAC9: 77 12        	adc	[<L41+current_header_0],Y
  2907 09:BACB: 85 07        	sta	<R1+2
  2908 09:BACD: 38           	sec
  2909 09:BACE: A0 08 00     	ldy	#$8
  2910 09:BAD1: B7 0C        	lda	[<L41+current_file_0],Y
  2911 09:BAD3: E5 05        	sbc	<R1
  2912 09:BAD5: 70 03        	bvs	L65
  2913 09:BAD7: 49 00 80     	eor	#$8000
  2914                        L65:
  2915 09:BADA: 10 03        	bpl	L66
  2916 09:BADC: 82 06 00     	brl	L10026
  2917                        L66:
  2918                        	.line	249
  2919                        ;      //printf("  Segment #%d Header Error : Inva
                    lid 'BlockCnt' value (the segment size can't be larger than 
                    the OMF file).\n",current_file->nb_segment+1);
  2920                        ;      return(1);
  2921                        	.line	251
  2922 09:BADF: A9 01 00     	lda	#$1
  2923 09:BAE2: 82 05 FB     	brl	L46
  2924                        ;    }
  2925                        	.line	252
  2926                        ;  if(current_header->ByteCnt < SEGMENT_HEADER_SIZ
                    E_V1)
  2927                        L10026:
  2928                        	.line	253
  2929                        ;    {
  2930 09:BAE5: A0 0C 00     	ldy	#$c
  2931 09:BAE8: B7 12        	lda	[<L41+current_header_0],Y
  2932 09:BAEA: C9 40 00     	cmp	#<$40
  2933 09:BAED: A0 0E 00     	ldy	#$e
  2934 09:BAF0: B7 12        	lda	[<L41+current_header_0],Y
  2935 09:BAF2: E9 00 00     	sbc	#^$40
  2936 09:BAF5: 90 03        	bcc	L67
  2937 09:BAF7: 82 06 00     	brl	L10027
  2938                        L67:
  2939                        	.line	254
  2940                        ;      //printf("  Segment #%d Header Error : Inva
                    lid 'BlockCnt' value (the segment size can't be smaller than
                     the Sgement Header size).\n",current_file->nb_segment+1);
  2941                        ;      return(1);
  2942                        	.line	256
  2943 09:BAFA: A9 01 00     	lda	#$1
  2944 09:BAFD: 82 EA FA     	brl	L46
  2945                        ;    }
  2946                        	.line	257
  2947                        ;
  2948                        ;  /* Nombre de 0x00 à ajouter à la fin */
  2949                        ;  if(current_header->ResSpc >= 0x010000)
  2950                        L10027:
  2951                        	.line	260
  Mon Sep 27 2021  9:39                                                Page 56


  2952                        ;    {
  2953 09:BB00: A0 10 00     	ldy	#$10
  2954 09:BB03: B7 12        	lda	[<L41+current_header_0],Y
  2955 09:BB05: C9 00 00     	cmp	#<$10000
  2956 09:BB08: A0 12 00     	ldy	#$12
  2957 09:BB0B: B7 12        	lda	[<L41+current_header_0],Y
  2958 09:BB0D: E9 01 00     	sbc	#^$10000
  2959 09:BB10: B0 03        	bcs	L68
  2960 09:BB12: 82 06 00     	brl	L10028
  2961                        L68:
  2962                        	.line	261
  2963                        ;      //printf("  Segment #%d Header Error : Inva
                    lid 'ResSpc' value (the size can't be larger than 64 KB).\n"
                    ,current_file->nb_segment+1);
  2964                        ;      return(1);
  2965                        	.line	263
  2966 09:BB15: A9 01 00     	lda	#$1
  2967 09:BB18: 82 CF FA     	brl	L46
  2968                        ;    }
  2969                        	.line	264
  2970                        ;
  2971                        ;  /* La taille d'un Segment en mémoire ne peut pa
                    s dépasser 64 KB */
  2972                        ;  if(current_header->Length >= 0x010000)
  2973                        L10028:
  2974                        	.line	267
  2975                        ;    //printf("  Segment #%d Header Warning : Weir
                    d 'Length' value (the segment size is usually < 64 KB).\n",c
                    urrent_file->nb_segment+1);
  2976                        ;
  2977                        ;  /* Type */
  2978                        ;  if((current_header->Type & 0x1F) != 0x00 && (cu
                    rrent_header->Type & 0x1F) != 0x01 && (current_header->Type 
                    & 0x1F) != 0x02 &&
  2979 09:BB1B: A0 14 00     	ldy	#$14
  2980 09:BB1E: B7 12        	lda	[<L41+current_header_0],Y
  2981 09:BB20: C9 00 00     	cmp	#<$10000
  2982 09:BB23: A0 16 00     	ldy	#$16
  2983 09:BB26: B7 12        	lda	[<L41+current_header_0],Y
  2984 09:BB28: E9 01 00     	sbc	#^$10000
  2985 09:BB2B: B0 03        	bcs	L69
  2986 09:BB2D: 82 A2 00     	brl	L10029
  2987                        L69:
  2988                        	.line	271
  2989                        ;     (current_header->Type & 0x1F) != 0x04 && (cu
                    rrent_header->Type & 0x1F) != 0x08 && (current_header->Type 
                    & 0x1F) != 0x10 &&
  2990                        ;     (current_header->Type & 0x1F) != 0x11 && (cu
                    rrent_header->Type & 0x1F) != 0x12)
  2991                        ;    {
  2992 09:BB30: E2 20        	sep	#$20
  2993                        	longa	off
  2994 09:BB32: A0 18 00     	ldy	#$18
  2995 09:BB35: B7 12        	lda	[<L41+current_header_0],Y
  2996 09:BB37: 29 1F        	and	#<$1f
  2997 09:BB39: C2 20        	rep	#$20
  2998                        	longa	on
  2999 09:BB3B: D0 03        	bne	L70
  Mon Sep 27 2021  9:39                                                Page 57


  3000 09:BB3D: 82 92 00     	brl	L10030
  3001                        L70:
  3002 09:BB40: A0 18 00     	ldy	#$18
  3003 09:BB43: B7 12        	lda	[<L41+current_header_0],Y
  3004 09:BB45: 29 1F 00     	and	#<$1f
  3005 09:BB48: 85 01        	sta	<R0
  3006 09:BB4A: A5 01        	lda	<R0
  3007 09:BB4C: C9 01 00     	cmp	#<$1
  3008 09:BB4F: D0 03        	bne	L71
  3009 09:BB51: 82 7E 00     	brl	L10030
  3010                        L71:
  3011 09:BB54: A0 18 00     	ldy	#$18
  3012 09:BB57: B7 12        	lda	[<L41+current_header_0],Y
  3013 09:BB59: 29 1F 00     	and	#<$1f
  3014 09:BB5C: 85 01        	sta	<R0
  3015 09:BB5E: A5 01        	lda	<R0
  3016 09:BB60: C9 02 00     	cmp	#<$2
  3017 09:BB63: D0 03        	bne	L72
  3018 09:BB65: 82 6A 00     	brl	L10030
  3019                        L72:
  3020 09:BB68: A0 18 00     	ldy	#$18
  3021 09:BB6B: B7 12        	lda	[<L41+current_header_0],Y
  3022 09:BB6D: 29 1F 00     	and	#<$1f
  3023 09:BB70: 85 01        	sta	<R0
  3024 09:BB72: A5 01        	lda	<R0
  3025 09:BB74: C9 04 00     	cmp	#<$4
  3026 09:BB77: D0 03        	bne	L73
  3027 09:BB79: 82 56 00     	brl	L10030
  3028                        L73:
  3029 09:BB7C: A0 18 00     	ldy	#$18
  3030 09:BB7F: B7 12        	lda	[<L41+current_header_0],Y
  3031 09:BB81: 29 1F 00     	and	#<$1f
  3032 09:BB84: 85 01        	sta	<R0
  3033 09:BB86: A5 01        	lda	<R0
  3034 09:BB88: C9 08 00     	cmp	#<$8
  3035 09:BB8B: D0 03        	bne	L74
  3036 09:BB8D: 82 42 00     	brl	L10030
  3037                        L74:
  3038 09:BB90: A0 18 00     	ldy	#$18
  3039 09:BB93: B7 12        	lda	[<L41+current_header_0],Y
  3040 09:BB95: 29 1F 00     	and	#<$1f
  3041 09:BB98: 85 01        	sta	<R0
  3042 09:BB9A: A5 01        	lda	<R0
  3043 09:BB9C: C9 10 00     	cmp	#<$10
  3044 09:BB9F: D0 03        	bne	L75
  3045 09:BBA1: 82 2E 00     	brl	L10030
  3046                        L75:
  3047 09:BBA4: A0 18 00     	ldy	#$18
  3048 09:BBA7: B7 12        	lda	[<L41+current_header_0],Y
  3049 09:BBA9: 29 1F 00     	and	#<$1f
  3050 09:BBAC: 85 01        	sta	<R0
  3051 09:BBAE: A5 01        	lda	<R0
  3052 09:BBB0: C9 11 00     	cmp	#<$11
  3053 09:BBB3: D0 03        	bne	L76
  3054 09:BBB5: 82 1A 00     	brl	L10030
  3055                        L76:
  3056 09:BBB8: A0 18 00     	ldy	#$18
  3057 09:BBBB: B7 12        	lda	[<L41+current_header_0],Y
  Mon Sep 27 2021  9:39                                                Page 58


  3058 09:BBBD: 29 1F 00     	and	#<$1f
  3059 09:BBC0: 85 01        	sta	<R0
  3060 09:BBC2: A5 01        	lda	<R0
  3061 09:BBC4: C9 12 00     	cmp	#<$12
  3062 09:BBC7: D0 03        	bne	L77
  3063 09:BBC9: 82 06 00     	brl	L10030
  3064                        L77:
  3065                        	.line	274
  3066                        ;      //printf("  Segment #%d Header Error : Inva
                    lid 'Type' value (possible values are $0,$1,$2,$4,$8,$10,$11
                     or $12).\n",current_file->nb_segment+1);
  3067                        ;      return(1);
  3068                        	.line	276
  3069 09:BBCC: A9 01 00     	lda	#$1
  3070 09:BBCF: 82 18 FA     	brl	L46
  3071                        ;    }
  3072                        	.line	277
  3073                        ;
  3074                        ;  /* LabLen : 0 ou 10 */
  3075                        ;  if(current_header->LabLen != 0x00 && current_he
                    ader->LabLen != 0x0A)
  3076                        L10030:
  3077                        L10029:
  3078                        	.line	280
  3079                        ;    {
  3080 09:BBD2: A0 1A 00     	ldy	#$1a
  3081 09:BBD5: B7 12        	lda	[<L41+current_header_0],Y
  3082 09:BBD7: 29 FF 00     	and	#$ff
  3083 09:BBDA: D0 03        	bne	L78
  3084 09:BBDC: 82 16 00     	brl	L10031
  3085                        L78:
  3086 09:BBDF: E2 20        	sep	#$20
  3087                        	longa	off
  3088 09:BBE1: A0 1A 00     	ldy	#$1a
  3089 09:BBE4: B7 12        	lda	[<L41+current_header_0],Y
  3090 09:BBE6: C9 0A        	cmp	#<$a
  3091 09:BBE8: C2 20        	rep	#$20
  3092                        	longa	on
  3093 09:BBEA: D0 03        	bne	L79
  3094 09:BBEC: 82 06 00     	brl	L10031
  3095                        L79:
  3096                        	.line	281
  3097                        ;      //printf("  Segment #%d Header Error : Inva
                    lid 'LabLen' value (the value should be 0 or 10 for the Appl
                    e IIgs).\n",current_file->nb_segment+1);
  3098                        ;      return(1);
  3099                        	.line	283
  3100 09:BBEF: A9 01 00     	lda	#$1
  3101 09:BBF2: 82 F5 F9     	brl	L46
  3102                        ;    }
  3103                        	.line	284
  3104                        ;
  3105                        ;  /* Num Len : Tjs à 4 pour le IIgs */
  3106                        ;  if(current_header->NumLen != 0x04)
  3107                        L10031:
  3108                        	.line	287
  3109                        ;    {
  3110 09:BBF5: E2 20        	sep	#$20
  Mon Sep 27 2021  9:39                                                Page 59


  3111                        	longa	off
  3112 09:BBF7: A0 1B 00     	ldy	#$1b
  3113 09:BBFA: B7 12        	lda	[<L41+current_header_0],Y
  3114 09:BBFC: C9 04        	cmp	#<$4
  3115 09:BBFE: C2 20        	rep	#$20
  3116                        	longa	on
  3117 09:BC00: D0 03        	bne	L80
  3118 09:BC02: 82 06 00     	brl	L10032
  3119                        L80:
  3120                        	.line	288
  3121                        ;      //printf("  Segment #%d Header Error : Inva
                    lid 'NumLen' value (the value should be 4 for the Apple IIgs
                    ).\n",current_file->nb_segment+1);
  3122                        ;      return(1);
  3123                        	.line	290
  3124 09:BC05: A9 01 00     	lda	#$1
  3125 09:BC08: 82 DF F9     	brl	L46
  3126                        ;    }
  3127                        	.line	291
  3128                        ;
  3129                        ;  /* BankSize : <= 64 KB */
  3130                        ;  if(current_header->BankSize > 0x010000)
  3131                        L10032:
  3132                        	.line	294
  3133                        ;    {
  3134 09:BC0B: A9 00 00     	lda	#$0
  3135 09:BC0E: A0 1D 00     	ldy	#$1d
  3136 09:BC11: D7 12        	cmp	[<L41+current_header_0],Y
  3137 09:BC13: A9 01 00     	lda	#$1
  3138 09:BC16: A0 1F 00     	ldy	#$1f
  3139 09:BC19: F7 12        	sbc	[<L41+current_header_0],Y
  3140 09:BC1B: 90 03        	bcc	L81
  3141 09:BC1D: 82 06 00     	brl	L10033
  3142                        L81:
  3143                        	.line	295
  3144                        ;      //printf("  Segment #%d Header Error : Inva
                    lid 'BankSize' value (the value can't be larger than 64 KB).
                    \n",current_file->nb_segment+1);
  3145                        ;      return(1);
  3146                        	.line	297
  3147 09:BC20: A9 01 00     	lda	#$1
  3148 09:BC23: 82 C4 F9     	brl	L46
  3149                        ;    }
  3150                        	.line	298
  3151                        ;
  3152                        ;  /* Org : < 64 KB */
  3153                        ;  if(current_header->Org >= 0x010000)
  3154                        L10033:
  3155                        	.line	301
  3156                        ;    //printf("  Segment #%d Header Warning : Unus
                    ual 'Org' value (the value in usually < 64 KB).\n",current_f
                    ile->nb_segment+1);
  3157                        ;
  3158                        ;  /* Align : 0, 0x0100 ou 0x010000 */
  3159                        ;  if(current_header->Align != 0x00 && current_hea
                    der->Align != 0x0100 && current_header->Align != 0x010000)
  3160 09:BC26: A0 25 00     	ldy	#$25
  3161 09:BC29: B7 12        	lda	[<L41+current_header_0],Y
  Mon Sep 27 2021  9:39                                                Page 60


  3162 09:BC2B: C9 00 00     	cmp	#<$10000
  3163 09:BC2E: A0 27 00     	ldy	#$27
  3164 09:BC31: B7 12        	lda	[<L41+current_header_0],Y
  3165 09:BC33: E9 01 00     	sbc	#^$10000
  3166 09:BC36: B0 03        	bcs	L82
  3167 09:BC38: 82 43 00     	brl	L10034
  3168                        L82:
  3169                        	.line	305
  3170                        ;    {
  3171 09:BC3B: A0 29 00     	ldy	#$29
  3172 09:BC3E: B7 12        	lda	[<L41+current_header_0],Y
  3173 09:BC40: A0 2B 00     	ldy	#$2b
  3174 09:BC43: 17 12        	ora	[<L41+current_header_0],Y
  3175 09:BC45: D0 03        	bne	L83
  3176 09:BC47: 82 34 00     	brl	L10035
  3177                        L83:
  3178 09:BC4A: A0 29 00     	ldy	#$29
  3179 09:BC4D: B7 12        	lda	[<L41+current_header_0],Y
  3180 09:BC4F: C9 00 01     	cmp	#<$100
  3181 09:BC52: D0 08        	bne	L84
  3182 09:BC54: A0 2B 00     	ldy	#$2b
  3183 09:BC57: B7 12        	lda	[<L41+current_header_0],Y
  3184 09:BC59: C9 00 00     	cmp	#^$100
  3185                        L84:
  3186 09:BC5C: D0 03        	bne	L85
  3187 09:BC5E: 82 1D 00     	brl	L10035
  3188                        L85:
  3189 09:BC61: A0 29 00     	ldy	#$29
  3190 09:BC64: B7 12        	lda	[<L41+current_header_0],Y
  3191 09:BC66: C9 00 00     	cmp	#<$10000
  3192 09:BC69: D0 08        	bne	L86
  3193 09:BC6B: A0 2B 00     	ldy	#$2b
  3194 09:BC6E: B7 12        	lda	[<L41+current_header_0],Y
  3195 09:BC70: C9 01 00     	cmp	#^$10000
  3196                        L86:
  3197 09:BC73: D0 03        	bne	L87
  3198 09:BC75: 82 06 00     	brl	L10035
  3199                        L87:
  3200                        	.line	306
  3201                        ;      //printf("  Segment #%d Header Error : Inva
                    lid 'Align' value (the value should be 0, 256 or 64KB or for
                     the Apple IIgs).\n",current_file->nb_segment+1);
  3202                        ;      return(1);
  3203                        	.line	308
  3204 09:BC78: A9 01 00     	lda	#$1
  3205 09:BC7B: 82 6C F9     	brl	L46
  3206                        ;    }
  3207                        	.line	309
  3208                        ;
  3209                        ;  /* NumSEx : Tjs à 0 */
  3210                        ;  if(current_header->NumSEx != 0x00)
  3211                        L10035:
  3212                        L10034:
  3213                        	.line	312
  3214                        ;    {
  3215 09:BC7E: A0 2D 00     	ldy	#$2d
  3216 09:BC81: B7 12        	lda	[<L41+current_header_0],Y
  3217 09:BC83: 29 FF 00     	and	#$ff
  Mon Sep 27 2021  9:39                                                Page 61


  3218 09:BC86: D0 03        	bne	L88
  3219 09:BC88: 82 06 00     	brl	L10036
  3220                        L88:
  3221                        	.line	313
  3222                        ;      //printf("  Segment #%d Header Error : Inva
                    lid 'NumSEx' value (the value should be 0 for the Apple IIgs
                    ).\n",current_file->nb_segment+1);
  3223                        ;      return(1);
  3224                        	.line	315
  3225 09:BC8B: A9 01 00     	lda	#$1
  3226 09:BC8E: 82 59 F9     	brl	L46
  3227                        ;    }
  3228                        	.line	316
  3229                        ;
  3230                        ;  /* Noms */
  3231                        ;  memcpy(current_header->SegName,&current_file->d
                    ata[data_offset+0x24],current_header->LabLen);
  3232                        L10036:
  3233                        	.line	319
  3234 09:BC91: A0 1A 00     	ldy	#$1a
  3235 09:BC94: B7 12        	lda	[<L41+current_header_0],Y
  3236 09:BC96: 29 FF 00     	and	#$ff
  3237 09:BC99: 48           	pha
  3238 09:BC9A: 18           	clc
  3239 09:BC9B: A9 24 00     	lda	#$24
  3240 09:BC9E: 65 10        	adc	<L41+data_offset_0
  3241 09:BCA0: 85 01        	sta	<R0
  3242 09:BCA2: A0 00 00     	ldy	#$0
  3243 09:BCA5: A5 01        	lda	<R0
  3244 09:BCA7: 10 01        	bpl	L89
  3245 09:BCA9: 88           	dey
  3246                        L89:
  3247 09:BCAA: 85 01        	sta	<R0
  3248 09:BCAC: 84 03        	sty	<R0+2
  3249 09:BCAE: 18           	clc
  3250 09:BCAF: A0 0A 00     	ldy	#$a
  3251 09:BCB2: B7 0C        	lda	[<L41+current_file_0],Y
  3252 09:BCB4: 65 01        	adc	<R0
  3253 09:BCB6: 85 05        	sta	<R1
  3254 09:BCB8: A0 0C 00     	ldy	#$c
  3255 09:BCBB: B7 0C        	lda	[<L41+current_file_0],Y
  3256 09:BCBD: 65 03        	adc	<R0+2
  3257 09:BCBF: 85 07        	sta	<R1+2
  3258 09:BCC1: D4 07        	pei	<R1+2
  3259 09:BCC3: D4 05        	pei	<R1
  3260 09:BCC5: 18           	clc
  3261 09:BCC6: A9 3C 09     	lda	#$93c
  3262 09:BCC9: 65 12        	adc	<L41+current_header_0
  3263 09:BCCB: 85 01        	sta	<R0
  3264 09:BCCD: A9 00 00     	lda	#$0
  3265 09:BCD0: 65 14        	adc	<L41+current_header_0+2
  3266 09:BCD2: 85 03        	sta	<R0+2
  3267 09:BCD4: D4 03        	pei	<R0+2
  3268 09:BCD6: D4 01        	pei	<R0
  3269 09:BCD8: 22 xx xx xx  	jsl	~~memcpy
  3270                        ;
  3271                        ;  /* OK */
  3272                        ;  return(0);
  Mon Sep 27 2021  9:39                                                Page 62


  3273                        	.line	322
  3274 09:BCDC: A9 00 00     	lda	#$0
  3275 09:BCDF: 82 08 F9     	brl	L46
  3276                        ;}
  3277                        	.line	323
  3278                        	.endblock	323
  3279             00000008   L41	equ	8
  3280             00000009   L42	equ	9
  3281 09:BCE2:              	ends
  3282                        	efunc
  3283                        	.endfunc	323,9,8
  3284                        	.line	323
  3285                        ;
  3286                        ;
  3287                        ;/************************************************
                    ************/
  3288                        ;/*  DecodeSegmentHeaderV1() :  Décode le Header d
                    u Segment. */
  3289                        ;/************************************************
                    ************/
  3290                        ;static int DecodeSegmentHeaderV1(struct omf_file 
                    *current_file, int data_offset, struct omf_segment_header *c
                    urrent_header)
  3291                        ;{
  3292                        	.line	329
  3293                        	.line	330
  3294                        	LOADER
  3295                        	func
  3296                        	.function	330
  3297                        ~~DecodeSegmentHeaderV1:
  3298                        	longa	on
  3299                        	longi	on
  3300 09:BCE2: 3B           	tsc
  3301 09:BCE3: 38           	sec
  3302 09:BCE4: E9 0A 00     	sbc	#L90
  3303 09:BCE7: 1B           	tcs
  3304 09:BCE8: 0B           	phd
  3305 09:BCE9: 5B           	tcd
  3306             00000004   current_file_0	set	4
  3307             00000008   data_offset_0	set	8
  3308             0000000A   current_header_0	set	10
  3309                        	.block	330
  3310                        ;  int length;
  3311                        ;
  3312                        ;  /* Vérifie la taille */
  3313                        ;  if(data_offset + SEGMENT_HEADER_SIZE_V1 > curre
                    nt_file->data_length)
  3314             00000000   length_1	set	0
  3315                        	.sym	length,0,5,1,16
  3316                        	.sym	current_file,4,138,6,32,51
  3317                        	.sym	data_offset,8,5,6,16
  3318                        	.sym	current_header,10,138,6,32,49
  3319                        	.line	334
  3320                        ;    {
  3321 09:BCEA: 18           	clc
  3322 09:BCEB: A9 40 00     	lda	#$40
  3323 09:BCEE: 65 12        	adc	<L90+data_offset_0
  3324 09:BCF0: 85 01        	sta	<R0
  Mon Sep 27 2021  9:39                                                Page 63


  3325 09:BCF2: 38           	sec
  3326 09:BCF3: A0 08 00     	ldy	#$8
  3327 09:BCF6: B7 0E        	lda	[<L90+current_file_0],Y
  3328 09:BCF8: E5 01        	sbc	<R0
  3329 09:BCFA: 70 03        	bvs	L93
  3330 09:BCFC: 49 00 80     	eor	#$8000
  3331                        L93:
  3332 09:BCFF: 10 03        	bpl	L94
  3333 09:BD01: 82 15 00     	brl	L10037
  3334                        L94:
  3335                        	.line	335
  3336                        ;      //printf("  Error : Not enough data to enco
                    de a Segment Header (offset=%d, Segment #%d).\n",data_offset
                    ,current_file->nb_segment+1);
  3337                        ;      return(1);
  3338                        	.line	337
  3339 09:BD04: A9 01 00     	lda	#$1
  3340                        L95:
  3341 09:BD07: A8           	tay
  3342 09:BD08: A5 0C        	lda	<L90+2
  3343 09:BD0A: 85 16        	sta	<L90+2+10
  3344 09:BD0C: A5 0B        	lda	<L90+1
  3345 09:BD0E: 85 15        	sta	<L90+1+10
  3346 09:BD10: 2B           	pld
  3347 09:BD11: 3B           	tsc
  3348 09:BD12: 18           	clc
  3349 09:BD13: 69 14 00     	adc	#L90+10
  3350 09:BD16: 1B           	tcs
  3351 09:BD17: 98           	tya
  3352 09:BD18: 6B           	rtl
  3353                        ;    }
  3354                        	.line	338
  3355                        ;
  3356                        ;  /**********************************************
                    *********/
  3357                        ;  /**  On va décoder tous les éléments fixes du H
                    eader  **/
  3358                        ;  /**********************************************
                    *********/
  3359                        ;  memcpy(&current_header->BlockCnt,&current_file-
                    >data[data_offset+0x00],sizeof(DWORD));     /* Block Count *
                     512 = ByteCount */
  3360                        L10037:
  3361                        	.line	343
  3362 09:BD19: F4 04 00     	pea	#<$4
  3363 09:BD1C: A0 00 00     	ldy	#$0
  3364 09:BD1F: A5 12        	lda	<L90+data_offset_0
  3365 09:BD21: 10 01        	bpl	L96
  3366 09:BD23: 88           	dey
  3367                        L96:
  3368 09:BD24: 85 01        	sta	<R0
  3369 09:BD26: 84 03        	sty	<R0+2
  3370 09:BD28: 18           	clc
  3371 09:BD29: A0 0A 00     	ldy	#$a
  3372 09:BD2C: B7 0E        	lda	[<L90+current_file_0],Y
  3373 09:BD2E: 65 01        	adc	<R0
  3374 09:BD30: 85 05        	sta	<R1
  3375 09:BD32: A0 0C 00     	ldy	#$c
  Mon Sep 27 2021  9:39                                                Page 64


  3376 09:BD35: B7 0E        	lda	[<L90+current_file_0],Y
  3377 09:BD37: 65 03        	adc	<R0+2
  3378 09:BD39: 85 07        	sta	<R1+2
  3379 09:BD3B: D4 07        	pei	<R1+2
  3380 09:BD3D: D4 05        	pei	<R1
  3381 09:BD3F: 18           	clc
  3382 09:BD40: A9 08 00     	lda	#$8
  3383 09:BD43: 65 14        	adc	<L90+current_header_0
  3384 09:BD45: 85 01        	sta	<R0
  3385 09:BD47: A9 00 00     	lda	#$0
  3386 09:BD4A: 65 16        	adc	<L90+current_header_0+2
  3387 09:BD4C: 85 03        	sta	<R0+2
  3388 09:BD4E: D4 03        	pei	<R0+2
  3389 09:BD50: D4 01        	pei	<R0
  3390 09:BD52: 22 xx xx xx  	jsl	~~memcpy
  3391                        ;  current_header->ByteCnt = 512*current_header->B
                    lockCnt;
  3392                        	.line	344
  3393 09:BD56: A0 0A 00     	ldy	#$a
  3394 09:BD59: B7 14        	lda	[<L90+current_header_0],Y
  3395 09:BD5B: 48           	pha
  3396 09:BD5C: A0 08 00     	ldy	#$8
  3397 09:BD5F: B7 14        	lda	[<L90+current_header_0],Y
  3398 09:BD61: 48           	pha
  3399 09:BD62: A9 09 00     	lda	#$9
  3400                        	xref	~~~lasl
  3401 09:BD65: 22 xx xx xx  	jsl	~~~lasl
  3402 09:BD69: 85 01        	sta	<R0
  3403 09:BD6B: 86 03        	stx	<R0+2
  3404 09:BD6D: A5 01        	lda	<R0
  3405 09:BD6F: A0 0C 00     	ldy	#$c
  3406 09:BD72: 97 14        	sta	[<L90+current_header_0],Y
  3407 09:BD74: A5 03        	lda	<R0+2
  3408 09:BD76: A0 0E 00     	ldy	#$e
  3409 09:BD79: 97 14        	sta	[<L90+current_header_0],Y
  3410                        ;  memcpy(&current_header->ResSpc,&current_file->d
                    ata[data_offset+0x04],sizeof(DWORD));
  3411                        	.line	345
  3412 09:BD7B: F4 04 00     	pea	#<$4
  3413 09:BD7E: 18           	clc
  3414 09:BD7F: A9 04 00     	lda	#$4
  3415 09:BD82: 65 12        	adc	<L90+data_offset_0
  3416 09:BD84: 85 01        	sta	<R0
  3417 09:BD86: A0 00 00     	ldy	#$0
  3418 09:BD89: A5 01        	lda	<R0
  3419 09:BD8B: 10 01        	bpl	L97
  3420 09:BD8D: 88           	dey
  3421                        L97:
  3422 09:BD8E: 85 01        	sta	<R0
  3423 09:BD90: 84 03        	sty	<R0+2
  3424 09:BD92: 18           	clc
  3425 09:BD93: A0 0A 00     	ldy	#$a
  3426 09:BD96: B7 0E        	lda	[<L90+current_file_0],Y
  3427 09:BD98: 65 01        	adc	<R0
  3428 09:BD9A: 85 05        	sta	<R1
  3429 09:BD9C: A0 0C 00     	ldy	#$c
  3430 09:BD9F: B7 0E        	lda	[<L90+current_file_0],Y
  3431 09:BDA1: 65 03        	adc	<R0+2
  Mon Sep 27 2021  9:39                                                Page 65


  3432 09:BDA3: 85 07        	sta	<R1+2
  3433 09:BDA5: D4 07        	pei	<R1+2
  3434 09:BDA7: D4 05        	pei	<R1
  3435 09:BDA9: 18           	clc
  3436 09:BDAA: A9 10 00     	lda	#$10
  3437 09:BDAD: 65 14        	adc	<L90+current_header_0
  3438 09:BDAF: 85 01        	sta	<R0
  3439 09:BDB1: A9 00 00     	lda	#$0
  3440 09:BDB4: 65 16        	adc	<L90+current_header_0+2
  3441 09:BDB6: 85 03        	sta	<R0+2
  3442 09:BDB8: D4 03        	pei	<R0+2
  3443 09:BDBA: D4 01        	pei	<R0
  3444 09:BDBC: 22 xx xx xx  	jsl	~~memcpy
  3445                        ;  memcpy(&current_header->Length,&current_file->d
                    ata[data_offset+0x08],sizeof(DWORD));
  3446                        	.line	346
  3447 09:BDC0: F4 04 00     	pea	#<$4
  3448 09:BDC3: 18           	clc
  3449 09:BDC4: A9 08 00     	lda	#$8
  3450 09:BDC7: 65 12        	adc	<L90+data_offset_0
  3451 09:BDC9: 85 01        	sta	<R0
  3452 09:BDCB: A0 00 00     	ldy	#$0
  3453 09:BDCE: A5 01        	lda	<R0
  3454 09:BDD0: 10 01        	bpl	L98
  3455 09:BDD2: 88           	dey
  3456                        L98:
  3457 09:BDD3: 85 01        	sta	<R0
  3458 09:BDD5: 84 03        	sty	<R0+2
  3459 09:BDD7: 18           	clc
  3460 09:BDD8: A0 0A 00     	ldy	#$a
  3461 09:BDDB: B7 0E        	lda	[<L90+current_file_0],Y
  3462 09:BDDD: 65 01        	adc	<R0
  3463 09:BDDF: 85 05        	sta	<R1
  3464 09:BDE1: A0 0C 00     	ldy	#$c
  3465 09:BDE4: B7 0E        	lda	[<L90+current_file_0],Y
  3466 09:BDE6: 65 03        	adc	<R0+2
  3467 09:BDE8: 85 07        	sta	<R1+2
  3468 09:BDEA: D4 07        	pei	<R1+2
  3469 09:BDEC: D4 05        	pei	<R1
  3470 09:BDEE: 18           	clc
  3471 09:BDEF: A9 14 00     	lda	#$14
  3472 09:BDF2: 65 14        	adc	<L90+current_header_0
  3473 09:BDF4: 85 01        	sta	<R0
  3474 09:BDF6: A9 00 00     	lda	#$0
  3475 09:BDF9: 65 16        	adc	<L90+current_header_0+2
  3476 09:BDFB: 85 03        	sta	<R0+2
  3477 09:BDFD: D4 03        	pei	<R0+2
  3478 09:BDFF: D4 01        	pei	<R0
  3479 09:BE01: 22 xx xx xx  	jsl	~~memcpy
  3480                        ;  memcpy(&current_header->Type,&current_file->dat
                    a[data_offset+0x0C],sizeof(BYTE));
  3481                        	.line	347
  3482 09:BE05: F4 01 00     	pea	#<$1
  3483 09:BE08: 18           	clc
  3484 09:BE09: A9 0C 00     	lda	#$c
  3485 09:BE0C: 65 12        	adc	<L90+data_offset_0
  3486 09:BE0E: 85 01        	sta	<R0
  3487 09:BE10: A0 00 00     	ldy	#$0
  Mon Sep 27 2021  9:39                                                Page 66


  3488 09:BE13: A5 01        	lda	<R0
  3489 09:BE15: 10 01        	bpl	L99
  3490 09:BE17: 88           	dey
  3491                        L99:
  3492 09:BE18: 85 01        	sta	<R0
  3493 09:BE1A: 84 03        	sty	<R0+2
  3494 09:BE1C: 18           	clc
  3495 09:BE1D: A0 0A 00     	ldy	#$a
  3496 09:BE20: B7 0E        	lda	[<L90+current_file_0],Y
  3497 09:BE22: 65 01        	adc	<R0
  3498 09:BE24: 85 05        	sta	<R1
  3499 09:BE26: A0 0C 00     	ldy	#$c
  3500 09:BE29: B7 0E        	lda	[<L90+current_file_0],Y
  3501 09:BE2B: 65 03        	adc	<R0+2
  3502 09:BE2D: 85 07        	sta	<R1+2
  3503 09:BE2F: D4 07        	pei	<R1+2
  3504 09:BE31: D4 05        	pei	<R1
  3505 09:BE33: 18           	clc
  3506 09:BE34: A9 18 00     	lda	#$18
  3507 09:BE37: 65 14        	adc	<L90+current_header_0
  3508 09:BE39: 85 01        	sta	<R0
  3509 09:BE3B: A9 00 00     	lda	#$0
  3510 09:BE3E: 65 16        	adc	<L90+current_header_0+2
  3511 09:BE40: 85 03        	sta	<R0+2
  3512 09:BE42: D4 03        	pei	<R0+2
  3513 09:BE44: D4 01        	pei	<R0
  3514 09:BE46: 22 xx xx xx  	jsl	~~memcpy
  3515                        ;  memcpy(&current_header->LabLen,&current_file->d
                    ata[data_offset+0x0D],sizeof(BYTE));
  3516                        	.line	348
  3517 09:BE4A: F4 01 00     	pea	#<$1
  3518 09:BE4D: 18           	clc
  3519 09:BE4E: A9 0D 00     	lda	#$d
  3520 09:BE51: 65 12        	adc	<L90+data_offset_0
  3521 09:BE53: 85 01        	sta	<R0
  3522 09:BE55: A0 00 00     	ldy	#$0
  3523 09:BE58: A5 01        	lda	<R0
  3524 09:BE5A: 10 01        	bpl	L100
  3525 09:BE5C: 88           	dey
  3526                        L100:
  3527 09:BE5D: 85 01        	sta	<R0
  3528 09:BE5F: 84 03        	sty	<R0+2
  3529 09:BE61: 18           	clc
  3530 09:BE62: A0 0A 00     	ldy	#$a
  3531 09:BE65: B7 0E        	lda	[<L90+current_file_0],Y
  3532 09:BE67: 65 01        	adc	<R0
  3533 09:BE69: 85 05        	sta	<R1
  3534 09:BE6B: A0 0C 00     	ldy	#$c
  3535 09:BE6E: B7 0E        	lda	[<L90+current_file_0],Y
  3536 09:BE70: 65 03        	adc	<R0+2
  3537 09:BE72: 85 07        	sta	<R1+2
  3538 09:BE74: D4 07        	pei	<R1+2
  3539 09:BE76: D4 05        	pei	<R1
  3540 09:BE78: 18           	clc
  3541 09:BE79: A9 1A 00     	lda	#$1a
  3542 09:BE7C: 65 14        	adc	<L90+current_header_0
  3543 09:BE7E: 85 01        	sta	<R0
  3544 09:BE80: A9 00 00     	lda	#$0
  Mon Sep 27 2021  9:39                                                Page 67


  3545 09:BE83: 65 16        	adc	<L90+current_header_0+2
  3546 09:BE85: 85 03        	sta	<R0+2
  3547 09:BE87: D4 03        	pei	<R0+2
  3548 09:BE89: D4 01        	pei	<R0
  3549 09:BE8B: 22 xx xx xx  	jsl	~~memcpy
  3550                        ;  memcpy(&current_header->NumLen,&current_file->d
                    ata[data_offset+0x0E],sizeof(BYTE));
  3551                        	.line	349
  3552 09:BE8F: F4 01 00     	pea	#<$1
  3553 09:BE92: 18           	clc
  3554 09:BE93: A9 0E 00     	lda	#$e
  3555 09:BE96: 65 12        	adc	<L90+data_offset_0
  3556 09:BE98: 85 01        	sta	<R0
  3557 09:BE9A: A0 00 00     	ldy	#$0
  3558 09:BE9D: A5 01        	lda	<R0
  3559 09:BE9F: 10 01        	bpl	L101
  3560 09:BEA1: 88           	dey
  3561                        L101:
  3562 09:BEA2: 85 01        	sta	<R0
  3563 09:BEA4: 84 03        	sty	<R0+2
  3564 09:BEA6: 18           	clc
  3565 09:BEA7: A0 0A 00     	ldy	#$a
  3566 09:BEAA: B7 0E        	lda	[<L90+current_file_0],Y
  3567 09:BEAC: 65 01        	adc	<R0
  3568 09:BEAE: 85 05        	sta	<R1
  3569 09:BEB0: A0 0C 00     	ldy	#$c
  3570 09:BEB3: B7 0E        	lda	[<L90+current_file_0],Y
  3571 09:BEB5: 65 03        	adc	<R0+2
  3572 09:BEB7: 85 07        	sta	<R1+2
  3573 09:BEB9: D4 07        	pei	<R1+2
  3574 09:BEBB: D4 05        	pei	<R1
  3575 09:BEBD: 18           	clc
  3576 09:BEBE: A9 1B 00     	lda	#$1b
  3577 09:BEC1: 65 14        	adc	<L90+current_header_0
  3578 09:BEC3: 85 01        	sta	<R0
  3579 09:BEC5: A9 00 00     	lda	#$0
  3580 09:BEC8: 65 16        	adc	<L90+current_header_0+2
  3581 09:BECA: 85 03        	sta	<R0+2
  3582 09:BECC: D4 03        	pei	<R0+2
  3583 09:BECE: D4 01        	pei	<R0
  3584 09:BED0: 22 xx xx xx  	jsl	~~memcpy
  3585                        ;  /* Version Byte */
  3586                        ;  memcpy(&current_header->BankSize,&current_file-
                    >data[data_offset+0x10],sizeof(DWORD));
  3587                        	.line	351
  3588 09:BED4: F4 04 00     	pea	#<$4
  3589 09:BED7: 18           	clc
  3590 09:BED8: A9 10 00     	lda	#$10
  3591 09:BEDB: 65 12        	adc	<L90+data_offset_0
  3592 09:BEDD: 85 01        	sta	<R0
  3593 09:BEDF: A0 00 00     	ldy	#$0
  3594 09:BEE2: A5 01        	lda	<R0
  3595 09:BEE4: 10 01        	bpl	L102
  3596 09:BEE6: 88           	dey
  3597                        L102:
  3598 09:BEE7: 85 01        	sta	<R0
  3599 09:BEE9: 84 03        	sty	<R0+2
  3600 09:BEEB: 18           	clc
  Mon Sep 27 2021  9:39                                                Page 68


  3601 09:BEEC: A0 0A 00     	ldy	#$a
  3602 09:BEEF: B7 0E        	lda	[<L90+current_file_0],Y
  3603 09:BEF1: 65 01        	adc	<R0
  3604 09:BEF3: 85 05        	sta	<R1
  3605 09:BEF5: A0 0C 00     	ldy	#$c
  3606 09:BEF8: B7 0E        	lda	[<L90+current_file_0],Y
  3607 09:BEFA: 65 03        	adc	<R0+2
  3608 09:BEFC: 85 07        	sta	<R1+2
  3609 09:BEFE: D4 07        	pei	<R1+2
  3610 09:BF00: D4 05        	pei	<R1
  3611 09:BF02: 18           	clc
  3612 09:BF03: A9 1D 00     	lda	#$1d
  3613 09:BF06: 65 14        	adc	<L90+current_header_0
  3614 09:BF08: 85 01        	sta	<R0
  3615 09:BF0A: A9 00 00     	lda	#$0
  3616 09:BF0D: 65 16        	adc	<L90+current_header_0+2
  3617 09:BF0F: 85 03        	sta	<R0+2
  3618 09:BF11: D4 03        	pei	<R0+2
  3619 09:BF13: D4 01        	pei	<R0
  3620 09:BF15: 22 xx xx xx  	jsl	~~memcpy
  3621                        ;  memcpy(&current_header->undefine_1,&current_fil
                    e->data[data_offset+0x14],sizeof(BYTE));
  3622                        	.line	352
  3623 09:BF19: F4 01 00     	pea	#<$1
  3624 09:BF1C: 18           	clc
  3625 09:BF1D: A9 14 00     	lda	#$14
  3626 09:BF20: 65 12        	adc	<L90+data_offset_0
  3627 09:BF22: 85 01        	sta	<R0
  3628 09:BF24: A0 00 00     	ldy	#$0
  3629 09:BF27: A5 01        	lda	<R0
  3630 09:BF29: 10 01        	bpl	L103
  3631 09:BF2B: 88           	dey
  3632                        L103:
  3633 09:BF2C: 85 01        	sta	<R0
  3634 09:BF2E: 84 03        	sty	<R0+2
  3635 09:BF30: 18           	clc
  3636 09:BF31: A0 0A 00     	ldy	#$a
  3637 09:BF34: B7 0E        	lda	[<L90+current_file_0],Y
  3638 09:BF36: 65 01        	adc	<R0
  3639 09:BF38: 85 05        	sta	<R1
  3640 09:BF3A: A0 0C 00     	ldy	#$c
  3641 09:BF3D: B7 0E        	lda	[<L90+current_file_0],Y
  3642 09:BF3F: 65 03        	adc	<R0+2
  3643 09:BF41: 85 07        	sta	<R1+2
  3644 09:BF43: D4 07        	pei	<R1+2
  3645 09:BF45: D4 05        	pei	<R1
  3646 09:BF47: 18           	clc
  3647 09:BF48: A9 19 00     	lda	#$19
  3648 09:BF4B: 65 14        	adc	<L90+current_header_0
  3649 09:BF4D: 85 01        	sta	<R0
  3650 09:BF4F: A9 00 00     	lda	#$0
  3651 09:BF52: 65 16        	adc	<L90+current_header_0+2
  3652 09:BF54: 85 03        	sta	<R0+2
  3653 09:BF56: D4 03        	pei	<R0+2
  3654 09:BF58: D4 01        	pei	<R0
  3655 09:BF5A: 22 xx xx xx  	jsl	~~memcpy
  3656                        ;  memcpy(&current_header->undefine_2,&current_fil
                    e->data[data_offset+0x15],sizeof(BYTE));
  Mon Sep 27 2021  9:39                                                Page 69


  3657                        	.line	353
  3658 09:BF5E: F4 01 00     	pea	#<$1
  3659 09:BF61: 18           	clc
  3660 09:BF62: A9 15 00     	lda	#$15
  3661 09:BF65: 65 12        	adc	<L90+data_offset_0
  3662 09:BF67: 85 01        	sta	<R0
  3663 09:BF69: A0 00 00     	ldy	#$0
  3664 09:BF6C: A5 01        	lda	<R0
  3665 09:BF6E: 10 01        	bpl	L104
  3666 09:BF70: 88           	dey
  3667                        L104:
  3668 09:BF71: 85 01        	sta	<R0
  3669 09:BF73: 84 03        	sty	<R0+2
  3670 09:BF75: 18           	clc
  3671 09:BF76: A0 0A 00     	ldy	#$a
  3672 09:BF79: B7 0E        	lda	[<L90+current_file_0],Y
  3673 09:BF7B: 65 01        	adc	<R0
  3674 09:BF7D: 85 05        	sta	<R1
  3675 09:BF7F: A0 0C 00     	ldy	#$c
  3676 09:BF82: B7 0E        	lda	[<L90+current_file_0],Y
  3677 09:BF84: 65 03        	adc	<R0+2
  3678 09:BF86: 85 07        	sta	<R1+2
  3679 09:BF88: D4 07        	pei	<R1+2
  3680 09:BF8A: D4 05        	pei	<R1
  3681 09:BF8C: 18           	clc
  3682 09:BF8D: A9 23 00     	lda	#$23
  3683 09:BF90: 65 14        	adc	<L90+current_header_0
  3684 09:BF92: 85 01        	sta	<R0
  3685 09:BF94: A9 00 00     	lda	#$0
  3686 09:BF97: 65 16        	adc	<L90+current_header_0+2
  3687 09:BF99: 85 03        	sta	<R0+2
  3688 09:BF9B: D4 03        	pei	<R0+2
  3689 09:BF9D: D4 01        	pei	<R0
  3690 09:BF9F: 22 xx xx xx  	jsl	~~memcpy
  3691                        ;  memcpy(&current_header->undefine_3,&current_fil
                    e->data[data_offset+0x16],sizeof(BYTE));
  3692                        	.line	354
  3693 09:BFA3: F4 01 00     	pea	#<$1
  3694 09:BFA6: 18           	clc
  3695 09:BFA7: A9 16 00     	lda	#$16
  3696 09:BFAA: 65 12        	adc	<L90+data_offset_0
  3697 09:BFAC: 85 01        	sta	<R0
  3698 09:BFAE: A0 00 00     	ldy	#$0
  3699 09:BFB1: A5 01        	lda	<R0
  3700 09:BFB3: 10 01        	bpl	L105
  3701 09:BFB5: 88           	dey
  3702                        L105:
  3703 09:BFB6: 85 01        	sta	<R0
  3704 09:BFB8: 84 03        	sty	<R0+2
  3705 09:BFBA: 18           	clc
  3706 09:BFBB: A0 0A 00     	ldy	#$a
  3707 09:BFBE: B7 0E        	lda	[<L90+current_file_0],Y
  3708 09:BFC0: 65 01        	adc	<R0
  3709 09:BFC2: 85 05        	sta	<R1
  3710 09:BFC4: A0 0C 00     	ldy	#$c
  3711 09:BFC7: B7 0E        	lda	[<L90+current_file_0],Y
  3712 09:BFC9: 65 03        	adc	<R0+2
  3713 09:BFCB: 85 07        	sta	<R1+2
  Mon Sep 27 2021  9:39                                                Page 70


  3714 09:BFCD: D4 07        	pei	<R1+2
  3715 09:BFCF: D4 05        	pei	<R1
  3716 09:BFD1: 18           	clc
  3717 09:BFD2: A9 24 00     	lda	#$24
  3718 09:BFD5: 65 14        	adc	<L90+current_header_0
  3719 09:BFD7: 85 01        	sta	<R0
  3720 09:BFD9: A9 00 00     	lda	#$0
  3721 09:BFDC: 65 16        	adc	<L90+current_header_0+2
  3722 09:BFDE: 85 03        	sta	<R0+2
  3723 09:BFE0: D4 03        	pei	<R0+2
  3724 09:BFE2: D4 01        	pei	<R0
  3725 09:BFE4: 22 xx xx xx  	jsl	~~memcpy
  3726                        ;  memcpy(&current_header->undefine_4,&current_fil
                    e->data[data_offset+0x17],sizeof(BYTE));
  3727                        	.line	355
  3728 09:BFE8: F4 01 00     	pea	#<$1
  3729 09:BFEB: 18           	clc
  3730 09:BFEC: A9 17 00     	lda	#$17
  3731 09:BFEF: 65 12        	adc	<L90+data_offset_0
  3732 09:BFF1: 85 01        	sta	<R0
  3733 09:BFF3: A0 00 00     	ldy	#$0
  3734 09:BFF6: A5 01        	lda	<R0
  3735 09:BFF8: 10 01        	bpl	L106
  3736 09:BFFA: 88           	dey
  3737                        L106:
  3738 09:BFFB: 85 01        	sta	<R0
  3739 09:BFFD: 84 03        	sty	<R0+2
  3740 09:BFFF: 18           	clc
  3741 09:C000: A0 0A 00     	ldy	#$a
  3742 09:C003: B7 0E        	lda	[<L90+current_file_0],Y
  3743 09:C005: 65 01        	adc	<R0
  3744 09:C007: 85 05        	sta	<R1
  3745 09:C009: A0 0C 00     	ldy	#$c
  3746 09:C00C: B7 0E        	lda	[<L90+current_file_0],Y
  3747 09:C00E: 65 03        	adc	<R0+2
  3748 09:C010: 85 07        	sta	<R1+2
  3749 09:C012: D4 07        	pei	<R1+2
  3750 09:C014: D4 05        	pei	<R1
  3751 09:C016: 18           	clc
  3752 09:C017: A9 2F 00     	lda	#$2f
  3753 09:C01A: 65 14        	adc	<L90+current_header_0
  3754 09:C01C: 85 01        	sta	<R0
  3755 09:C01E: A9 00 00     	lda	#$0
  3756 09:C021: 65 16        	adc	<L90+current_header_0+2
  3757 09:C023: 85 03        	sta	<R0+2
  3758 09:C025: D4 03        	pei	<R0+2
  3759 09:C027: D4 01        	pei	<R0
  3760 09:C029: 22 xx xx xx  	jsl	~~memcpy
  3761                        ;  memcpy(&current_header->Org,&current_file->data
                    [data_offset+0x18],sizeof(DWORD));
  3762                        	.line	356
  3763 09:C02D: F4 04 00     	pea	#<$4
  3764 09:C030: 18           	clc
  3765 09:C031: A9 18 00     	lda	#$18
  3766 09:C034: 65 12        	adc	<L90+data_offset_0
  3767 09:C036: 85 01        	sta	<R0
  3768 09:C038: A0 00 00     	ldy	#$0
  3769 09:C03B: A5 01        	lda	<R0
  Mon Sep 27 2021  9:39                                                Page 71


  3770 09:C03D: 10 01        	bpl	L107
  3771 09:C03F: 88           	dey
  3772                        L107:
  3773 09:C040: 85 01        	sta	<R0
  3774 09:C042: 84 03        	sty	<R0+2
  3775 09:C044: 18           	clc
  3776 09:C045: A0 0A 00     	ldy	#$a
  3777 09:C048: B7 0E        	lda	[<L90+current_file_0],Y
  3778 09:C04A: 65 01        	adc	<R0
  3779 09:C04C: 85 05        	sta	<R1
  3780 09:C04E: A0 0C 00     	ldy	#$c
  3781 09:C051: B7 0E        	lda	[<L90+current_file_0],Y
  3782 09:C053: 65 03        	adc	<R0+2
  3783 09:C055: 85 07        	sta	<R1+2
  3784 09:C057: D4 07        	pei	<R1+2
  3785 09:C059: D4 05        	pei	<R1
  3786 09:C05B: 18           	clc
  3787 09:C05C: A9 25 00     	lda	#$25
  3788 09:C05F: 65 14        	adc	<L90+current_header_0
  3789 09:C061: 85 01        	sta	<R0
  3790 09:C063: A9 00 00     	lda	#$0
  3791 09:C066: 65 16        	adc	<L90+current_header_0+2
  3792 09:C068: 85 03        	sta	<R0+2
  3793 09:C06A: D4 03        	pei	<R0+2
  3794 09:C06C: D4 01        	pei	<R0
  3795 09:C06E: 22 xx xx xx  	jsl	~~memcpy
  3796                        ;  memcpy(&current_header->Align,&current_file->da
                    ta[data_offset+0x1C],sizeof(DWORD));
  3797                        	.line	357
  3798 09:C072: F4 04 00     	pea	#<$4
  3799 09:C075: 18           	clc
  3800 09:C076: A9 1C 00     	lda	#$1c
  3801 09:C079: 65 12        	adc	<L90+data_offset_0
  3802 09:C07B: 85 01        	sta	<R0
  3803 09:C07D: A0 00 00     	ldy	#$0
  3804 09:C080: A5 01        	lda	<R0
  3805 09:C082: 10 01        	bpl	L108
  3806 09:C084: 88           	dey
  3807                        L108:
  3808 09:C085: 85 01        	sta	<R0
  3809 09:C087: 84 03        	sty	<R0+2
  3810 09:C089: 18           	clc
  3811 09:C08A: A0 0A 00     	ldy	#$a
  3812 09:C08D: B7 0E        	lda	[<L90+current_file_0],Y
  3813 09:C08F: 65 01        	adc	<R0
  3814 09:C091: 85 05        	sta	<R1
  3815 09:C093: A0 0C 00     	ldy	#$c
  3816 09:C096: B7 0E        	lda	[<L90+current_file_0],Y
  3817 09:C098: 65 03        	adc	<R0+2
  3818 09:C09A: 85 07        	sta	<R1+2
  3819 09:C09C: D4 07        	pei	<R1+2
  3820 09:C09E: D4 05        	pei	<R1
  3821 09:C0A0: 18           	clc
  3822 09:C0A1: A9 29 00     	lda	#$29
  3823 09:C0A4: 65 14        	adc	<L90+current_header_0
  3824 09:C0A6: 85 01        	sta	<R0
  3825 09:C0A8: A9 00 00     	lda	#$0
  3826 09:C0AB: 65 16        	adc	<L90+current_header_0+2
  Mon Sep 27 2021  9:39                                                Page 72


  3827 09:C0AD: 85 03        	sta	<R0+2
  3828 09:C0AF: D4 03        	pei	<R0+2
  3829 09:C0B1: D4 01        	pei	<R0
  3830 09:C0B3: 22 xx xx xx  	jsl	~~memcpy
  3831                        ;  memcpy(&current_header->NumSEx,&current_file->d
                    ata[data_offset+0x20],sizeof(BYTE));
  3832                        	.line	358
  3833 09:C0B7: F4 01 00     	pea	#<$1
  3834 09:C0BA: 18           	clc
  3835 09:C0BB: A9 20 00     	lda	#$20
  3836 09:C0BE: 65 12        	adc	<L90+data_offset_0
  3837 09:C0C0: 85 01        	sta	<R0
  3838 09:C0C2: A0 00 00     	ldy	#$0
  3839 09:C0C5: A5 01        	lda	<R0
  3840 09:C0C7: 10 01        	bpl	L109
  3841 09:C0C9: 88           	dey
  3842                        L109:
  3843 09:C0CA: 85 01        	sta	<R0
  3844 09:C0CC: 84 03        	sty	<R0+2
  3845 09:C0CE: 18           	clc
  3846 09:C0CF: A0 0A 00     	ldy	#$a
  3847 09:C0D2: B7 0E        	lda	[<L90+current_file_0],Y
  3848 09:C0D4: 65 01        	adc	<R0
  3849 09:C0D6: 85 05        	sta	<R1
  3850 09:C0D8: A0 0C 00     	ldy	#$c
  3851 09:C0DB: B7 0E        	lda	[<L90+current_file_0],Y
  3852 09:C0DD: 65 03        	adc	<R0+2
  3853 09:C0DF: 85 07        	sta	<R1+2
  3854 09:C0E1: D4 07        	pei	<R1+2
  3855 09:C0E3: D4 05        	pei	<R1
  3856 09:C0E5: 18           	clc
  3857 09:C0E6: A9 2D 00     	lda	#$2d
  3858 09:C0E9: 65 14        	adc	<L90+current_header_0
  3859 09:C0EB: 85 01        	sta	<R0
  3860 09:C0ED: A9 00 00     	lda	#$0
  3861 09:C0F0: 65 16        	adc	<L90+current_header_0+2
  3862 09:C0F2: 85 03        	sta	<R0+2
  3863 09:C0F4: D4 03        	pei	<R0+2
  3864 09:C0F6: D4 01        	pei	<R0
  3865 09:C0F8: 22 xx xx xx  	jsl	~~memcpy
  3866                        ;  memcpy(&current_header->LCBank,&current_file->d
                    ata[data_offset+0x21],sizeof(BYTE));               /* Langua
                    ge Card */
  3867                        	.line	359
  3868 09:C0FC: F4 01 00     	pea	#<$1
  3869 09:C0FF: 18           	clc
  3870 09:C100: A9 21 00     	lda	#$21
  3871 09:C103: 65 12        	adc	<L90+data_offset_0
  3872 09:C105: 85 01        	sta	<R0
  3873 09:C107: A0 00 00     	ldy	#$0
  3874 09:C10A: A5 01        	lda	<R0
  3875 09:C10C: 10 01        	bpl	L110
  3876 09:C10E: 88           	dey
  3877                        L110:
  3878 09:C10F: 85 01        	sta	<R0
  3879 09:C111: 84 03        	sty	<R0+2
  3880 09:C113: 18           	clc
  3881 09:C114: A0 0A 00     	ldy	#$a
  Mon Sep 27 2021  9:39                                                Page 73


  3882 09:C117: B7 0E        	lda	[<L90+current_file_0],Y
  3883 09:C119: 65 01        	adc	<R0
  3884 09:C11B: 85 05        	sta	<R1
  3885 09:C11D: A0 0C 00     	ldy	#$c
  3886 09:C120: B7 0E        	lda	[<L90+current_file_0],Y
  3887 09:C122: 65 03        	adc	<R0+2
  3888 09:C124: 85 07        	sta	<R1+2
  3889 09:C126: D4 07        	pei	<R1+2
  3890 09:C128: D4 05        	pei	<R1
  3891 09:C12A: 18           	clc
  3892 09:C12B: A9 2E 00     	lda	#$2e
  3893 09:C12E: 65 14        	adc	<L90+current_header_0
  3894 09:C130: 85 01        	sta	<R0
  3895 09:C132: A9 00 00     	lda	#$0
  3896 09:C135: 65 16        	adc	<L90+current_header_0+2
  3897 09:C137: 85 03        	sta	<R0+2
  3898 09:C139: D4 03        	pei	<R0+2
  3899 09:C13B: D4 01        	pei	<R0
  3900 09:C13D: 22 xx xx xx  	jsl	~~memcpy
  3901                        ;  memcpy(&current_header->SegNum,&current_file->d
                    ata[data_offset+0x22],sizeof(WORD));
  3902                        	.line	360
  3903 09:C141: F4 02 00     	pea	#<$2
  3904 09:C144: 18           	clc
  3905 09:C145: A9 22 00     	lda	#$22
  3906 09:C148: 65 12        	adc	<L90+data_offset_0
  3907 09:C14A: 85 01        	sta	<R0
  3908 09:C14C: A0 00 00     	ldy	#$0
  3909 09:C14F: A5 01        	lda	<R0
  3910 09:C151: 10 01        	bpl	L111
  3911 09:C153: 88           	dey
  3912                        L111:
  3913 09:C154: 85 01        	sta	<R0
  3914 09:C156: 84 03        	sty	<R0+2
  3915 09:C158: 18           	clc
  3916 09:C159: A0 0A 00     	ldy	#$a
  3917 09:C15C: B7 0E        	lda	[<L90+current_file_0],Y
  3918 09:C15E: 65 01        	adc	<R0
  3919 09:C160: 85 05        	sta	<R1
  3920 09:C162: A0 0C 00     	ldy	#$c
  3921 09:C165: B7 0E        	lda	[<L90+current_file_0],Y
  3922 09:C167: 65 03        	adc	<R0+2
  3923 09:C169: 85 07        	sta	<R1+2
  3924 09:C16B: D4 07        	pei	<R1+2
  3925 09:C16D: D4 05        	pei	<R1
  3926 09:C16F: 18           	clc
  3927 09:C170: A9 30 00     	lda	#$30
  3928 09:C173: 65 14        	adc	<L90+current_header_0
  3929 09:C175: 85 01        	sta	<R0
  3930 09:C177: A9 00 00     	lda	#$0
  3931 09:C17A: 65 16        	adc	<L90+current_header_0+2
  3932 09:C17C: 85 03        	sta	<R0+2
  3933 09:C17E: D4 03        	pei	<R0+2
  3934 09:C180: D4 01        	pei	<R0
  3935 09:C182: 22 xx xx xx  	jsl	~~memcpy
  3936                        ;  memcpy(&current_header->EntryPointOffset,&curre
                    nt_file->data[data_offset+0x24],sizeof(DWORD));
  3937                        	.line	361
  Mon Sep 27 2021  9:39                                                Page 74


  3938 09:C186: F4 04 00     	pea	#<$4
  3939 09:C189: 18           	clc
  3940 09:C18A: A9 24 00     	lda	#$24
  3941 09:C18D: 65 12        	adc	<L90+data_offset_0
  3942 09:C18F: 85 01        	sta	<R0
  3943 09:C191: A0 00 00     	ldy	#$0
  3944 09:C194: A5 01        	lda	<R0
  3945 09:C196: 10 01        	bpl	L112
  3946 09:C198: 88           	dey
  3947                        L112:
  3948 09:C199: 85 01        	sta	<R0
  3949 09:C19B: 84 03        	sty	<R0+2
  3950 09:C19D: 18           	clc
  3951 09:C19E: A0 0A 00     	ldy	#$a
  3952 09:C1A1: B7 0E        	lda	[<L90+current_file_0],Y
  3953 09:C1A3: 65 01        	adc	<R0
  3954 09:C1A5: 85 05        	sta	<R1
  3955 09:C1A7: A0 0C 00     	ldy	#$c
  3956 09:C1AA: B7 0E        	lda	[<L90+current_file_0],Y
  3957 09:C1AC: 65 03        	adc	<R0+2
  3958 09:C1AE: 85 07        	sta	<R1+2
  3959 09:C1B0: D4 07        	pei	<R1+2
  3960 09:C1B2: D4 05        	pei	<R1
  3961 09:C1B4: 18           	clc
  3962 09:C1B5: A9 32 00     	lda	#$32
  3963 09:C1B8: 65 14        	adc	<L90+current_header_0
  3964 09:C1BA: 85 01        	sta	<R0
  3965 09:C1BC: A9 00 00     	lda	#$0
  3966 09:C1BF: 65 16        	adc	<L90+current_header_0+2
  3967 09:C1C1: 85 03        	sta	<R0+2
  3968 09:C1C3: D4 03        	pei	<R0+2
  3969 09:C1C5: D4 01        	pei	<R0
  3970 09:C1C7: 22 xx xx xx  	jsl	~~memcpy
  3971                        ;  memcpy(&current_header->DispNameOffset,&current
                    _file->data[data_offset+0x28],sizeof(WORD));       /* Load N
                    ame Offset */
  3972                        	.line	362
  3973 09:C1CB: F4 02 00     	pea	#<$2
  3974 09:C1CE: 18           	clc
  3975 09:C1CF: A9 28 00     	lda	#$28
  3976 09:C1D2: 65 12        	adc	<L90+data_offset_0
  3977 09:C1D4: 85 01        	sta	<R0
  3978 09:C1D6: A0 00 00     	ldy	#$0
  3979 09:C1D9: A5 01        	lda	<R0
  3980 09:C1DB: 10 01        	bpl	L113
  3981 09:C1DD: 88           	dey
  3982                        L113:
  3983 09:C1DE: 85 01        	sta	<R0
  3984 09:C1E0: 84 03        	sty	<R0+2
  3985 09:C1E2: 18           	clc
  3986 09:C1E3: A0 0A 00     	ldy	#$a
  3987 09:C1E6: B7 0E        	lda	[<L90+current_file_0],Y
  3988 09:C1E8: 65 01        	adc	<R0
  3989 09:C1EA: 85 05        	sta	<R1
  3990 09:C1EC: A0 0C 00     	ldy	#$c
  3991 09:C1EF: B7 0E        	lda	[<L90+current_file_0],Y
  3992 09:C1F1: 65 03        	adc	<R0+2
  3993 09:C1F3: 85 07        	sta	<R1+2
  Mon Sep 27 2021  9:39                                                Page 75


  3994 09:C1F5: D4 07        	pei	<R1+2
  3995 09:C1F7: D4 05        	pei	<R1
  3996 09:C1F9: 18           	clc
  3997 09:C1FA: A9 36 00     	lda	#$36
  3998 09:C1FD: 65 14        	adc	<L90+current_header_0
  3999 09:C1FF: 85 01        	sta	<R0
  4000 09:C201: A9 00 00     	lda	#$0
  4001 09:C204: 65 16        	adc	<L90+current_header_0+2
  4002 09:C206: 85 03        	sta	<R0+2
  4003 09:C208: D4 03        	pei	<R0+2
  4004 09:C20A: D4 01        	pei	<R0
  4005 09:C20C: 22 xx xx xx  	jsl	~~memcpy
  4006                        ;  memcpy(&current_header->DispDataOffset,&current
                    _file->data[data_offset+0x2A],sizeof(WORD));       /* Segmen
                    t Name Offset */
  4007                        	.line	363
  4008 09:C210: F4 02 00     	pea	#<$2
  4009 09:C213: 18           	clc
  4010 09:C214: A9 2A 00     	lda	#$2a
  4011 09:C217: 65 12        	adc	<L90+data_offset_0
  4012 09:C219: 85 01        	sta	<R0
  4013 09:C21B: A0 00 00     	ldy	#$0
  4014 09:C21E: A5 01        	lda	<R0
  4015 09:C220: 10 01        	bpl	L114
  4016 09:C222: 88           	dey
  4017                        L114:
  4018 09:C223: 85 01        	sta	<R0
  4019 09:C225: 84 03        	sty	<R0+2
  4020 09:C227: 18           	clc
  4021 09:C228: A0 0A 00     	ldy	#$a
  4022 09:C22B: B7 0E        	lda	[<L90+current_file_0],Y
  4023 09:C22D: 65 01        	adc	<R0
  4024 09:C22F: 85 05        	sta	<R1
  4025 09:C231: A0 0C 00     	ldy	#$c
  4026 09:C234: B7 0E        	lda	[<L90+current_file_0],Y
  4027 09:C236: 65 03        	adc	<R0+2
  4028 09:C238: 85 07        	sta	<R1+2
  4029 09:C23A: D4 07        	pei	<R1+2
  4030 09:C23C: D4 05        	pei	<R1
  4031 09:C23E: 18           	clc
  4032 09:C23F: A9 38 00     	lda	#$38
  4033 09:C242: 65 14        	adc	<L90+current_header_0
  4034 09:C244: 85 01        	sta	<R0
  4035 09:C246: A9 00 00     	lda	#$0
  4036 09:C249: 65 16        	adc	<L90+current_header_0+2
  4037 09:C24B: 85 03        	sta	<R0+2
  4038 09:C24D: D4 03        	pei	<R0+2
  4039 09:C24F: D4 01        	pei	<R0
  4040 09:C251: 22 xx xx xx  	jsl	~~memcpy
  4041                        ;
  4042                        ;  /********************************************/
  4043                        ;  /**  On va valider les données récupérées  **/
  4044                        ;  /********************************************/
  4045                        ;  /* Taille du Segment */
  4046                        ;  if((int)(data_offset + current_header->ByteCnt)
                     > (int) current_file->data_length)
  4047                        	.line	369
  4048                        ;    {
  Mon Sep 27 2021  9:39                                                Page 76


  4049 09:C255: A0 00 00     	ldy	#$0
  4050 09:C258: A5 12        	lda	<L90+data_offset_0
  4051 09:C25A: 10 01        	bpl	L115
  4052 09:C25C: 88           	dey
  4053                        L115:
  4054 09:C25D: 85 01        	sta	<R0
  4055 09:C25F: 84 03        	sty	<R0+2
  4056 09:C261: 18           	clc
  4057 09:C262: A5 01        	lda	<R0
  4058 09:C264: A0 0C 00     	ldy	#$c
  4059 09:C267: 77 14        	adc	[<L90+current_header_0],Y
  4060 09:C269: 85 05        	sta	<R1
  4061 09:C26B: A5 03        	lda	<R0+2
  4062 09:C26D: A0 0E 00     	ldy	#$e
  4063 09:C270: 77 14        	adc	[<L90+current_header_0],Y
  4064 09:C272: 85 07        	sta	<R1+2
  4065 09:C274: 38           	sec
  4066 09:C275: A0 08 00     	ldy	#$8
  4067 09:C278: B7 0E        	lda	[<L90+current_file_0],Y
  4068 09:C27A: E5 05        	sbc	<R1
  4069 09:C27C: 70 03        	bvs	L116
  4070 09:C27E: 49 00 80     	eor	#$8000
  4071                        L116:
  4072 09:C281: 10 03        	bpl	L117
  4073 09:C283: 82 06 00     	brl	L10038
  4074                        L117:
  4075                        	.line	370
  4076                        ;      //printf("  Segment #%d Header Error : Inva
                    lid 'BlockCnt' value (the segment size can't be larger than 
                    the OMF file).\n",current_file->nb_segment+1);
  4077                        ;      return(1);
  4078                        	.line	372
  4079 09:C286: A9 01 00     	lda	#$1
  4080 09:C289: 82 7B FA     	brl	L95
  4081                        ;    }
  4082                        	.line	373
  4083                        ;  if(current_header->ByteCnt < SEGMENT_HEADER_SIZ
                    E_V1)
  4084                        L10038:
  4085                        	.line	374
  4086                        ;    {
  4087 09:C28C: A0 0C 00     	ldy	#$c
  4088 09:C28F: B7 14        	lda	[<L90+current_header_0],Y
  4089 09:C291: C9 40 00     	cmp	#<$40
  4090 09:C294: A0 0E 00     	ldy	#$e
  4091 09:C297: B7 14        	lda	[<L90+current_header_0],Y
  4092 09:C299: E9 00 00     	sbc	#^$40
  4093 09:C29C: 90 03        	bcc	L118
  4094 09:C29E: 82 06 00     	brl	L10039
  4095                        L118:
  4096                        	.line	375
  4097                        ;      //printf("  Segment #%d Header Error : Inva
                    lid 'BlockCnt' value (the segment size can't be smaller than
                     the Sgement Header size).\n",current_file->nb_segment+1);
  4098                        ;      return(1);
  4099                        	.line	377
  4100 09:C2A1: A9 01 00     	lda	#$1
  4101 09:C2A4: 82 60 FA     	brl	L95
  Mon Sep 27 2021  9:39                                                Page 77


  4102                        ;    }
  4103                        	.line	378
  4104                        ;
  4105                        ;  /* Nombre de 0x00 à ajouter à la fin */
  4106                        ;  if(current_header->ResSpc >= 0x010000)
  4107                        L10039:
  4108                        	.line	381
  4109                        ;    {
  4110 09:C2A7: A0 10 00     	ldy	#$10
  4111 09:C2AA: B7 14        	lda	[<L90+current_header_0],Y
  4112 09:C2AC: C9 00 00     	cmp	#<$10000
  4113 09:C2AF: A0 12 00     	ldy	#$12
  4114 09:C2B2: B7 14        	lda	[<L90+current_header_0],Y
  4115 09:C2B4: E9 01 00     	sbc	#^$10000
  4116 09:C2B7: B0 03        	bcs	L119
  4117 09:C2B9: 82 06 00     	brl	L10040
  4118                        L119:
  4119                        	.line	382
  4120                        ;      //printf("  Segment #%d Header Error : Inva
                    lid 'ResSpc' value (the size can't be larger than 64 KB).\n"
                    ,current_file->nb_segment+1);
  4121                        ;      return(1);
  4122                        	.line	384
  4123 09:C2BC: A9 01 00     	lda	#$1
  4124 09:C2BF: 82 45 FA     	brl	L95
  4125                        ;    }
  4126                        	.line	385
  4127                        ;
  4128                        ;  /* La taille d'un Segment en mémoire ne peut pa
                    s dépasser 64 KB */
  4129                        ;  if(current_header->Length >= 0x010000)
  4130                        L10040:
  4131                        	.line	388
  4132                        ;    //printf("  Segment #%d Header Warning : Weir
                    d 'Length' value (the segment size is usually < 64 KB).\n",c
                    urrent_file->nb_segment+1);
  4133                        ;
  4134                        ;  /* Type */
  4135                        ;  if((current_header->Type & 0x1F) != 0x00 && (cu
                    rrent_header->Type & 0x1F) != 0x01 && (current_header->Type 
                    & 0x1F) != 0x02 &&
  4136 09:C2C2: A0 14 00     	ldy	#$14
  4137 09:C2C5: B7 14        	lda	[<L90+current_header_0],Y
  4138 09:C2C7: C9 00 00     	cmp	#<$10000
  4139 09:C2CA: A0 16 00     	ldy	#$16
  4140 09:C2CD: B7 14        	lda	[<L90+current_header_0],Y
  4141 09:C2CF: E9 01 00     	sbc	#^$10000
  4142 09:C2D2: B0 03        	bcs	L120
  4143 09:C2D4: 82 A2 00     	brl	L10041
  4144                        L120:
  4145                        	.line	392
  4146                        ;     (current_header->Type & 0x1F) != 0x04 && (cu
                    rrent_header->Type & 0x1F) != 0x08 && (current_header->Type 
                    & 0x1F) != 0x10 &&
  4147                        ;     (current_header->Type & 0x1F) != 0x11 && (cu
                    rrent_header->Type & 0x1F) != 0x12)
  4148                        ;    {
  4149 09:C2D7: E2 20        	sep	#$20
  Mon Sep 27 2021  9:39                                                Page 78


  4150                        	longa	off
  4151 09:C2D9: A0 18 00     	ldy	#$18
  4152 09:C2DC: B7 14        	lda	[<L90+current_header_0],Y
  4153 09:C2DE: 29 1F        	and	#<$1f
  4154 09:C2E0: C2 20        	rep	#$20
  4155                        	longa	on
  4156 09:C2E2: D0 03        	bne	L121
  4157 09:C2E4: 82 92 00     	brl	L10042
  4158                        L121:
  4159 09:C2E7: A0 18 00     	ldy	#$18
  4160 09:C2EA: B7 14        	lda	[<L90+current_header_0],Y
  4161 09:C2EC: 29 1F 00     	and	#<$1f
  4162 09:C2EF: 85 01        	sta	<R0
  4163 09:C2F1: A5 01        	lda	<R0
  4164 09:C2F3: C9 01 00     	cmp	#<$1
  4165 09:C2F6: D0 03        	bne	L122
  4166 09:C2F8: 82 7E 00     	brl	L10042
  4167                        L122:
  4168 09:C2FB: A0 18 00     	ldy	#$18
  4169 09:C2FE: B7 14        	lda	[<L90+current_header_0],Y
  4170 09:C300: 29 1F 00     	and	#<$1f
  4171 09:C303: 85 01        	sta	<R0
  4172 09:C305: A5 01        	lda	<R0
  4173 09:C307: C9 02 00     	cmp	#<$2
  4174 09:C30A: D0 03        	bne	L123
  4175 09:C30C: 82 6A 00     	brl	L10042
  4176                        L123:
  4177 09:C30F: A0 18 00     	ldy	#$18
  4178 09:C312: B7 14        	lda	[<L90+current_header_0],Y
  4179 09:C314: 29 1F 00     	and	#<$1f
  4180 09:C317: 85 01        	sta	<R0
  4181 09:C319: A5 01        	lda	<R0
  4182 09:C31B: C9 04 00     	cmp	#<$4
  4183 09:C31E: D0 03        	bne	L124
  4184 09:C320: 82 56 00     	brl	L10042
  4185                        L124:
  4186 09:C323: A0 18 00     	ldy	#$18
  4187 09:C326: B7 14        	lda	[<L90+current_header_0],Y
  4188 09:C328: 29 1F 00     	and	#<$1f
  4189 09:C32B: 85 01        	sta	<R0
  4190 09:C32D: A5 01        	lda	<R0
  4191 09:C32F: C9 08 00     	cmp	#<$8
  4192 09:C332: D0 03        	bne	L125
  4193 09:C334: 82 42 00     	brl	L10042
  4194                        L125:
  4195 09:C337: A0 18 00     	ldy	#$18
  4196 09:C33A: B7 14        	lda	[<L90+current_header_0],Y
  4197 09:C33C: 29 1F 00     	and	#<$1f
  4198 09:C33F: 85 01        	sta	<R0
  4199 09:C341: A5 01        	lda	<R0
  4200 09:C343: C9 10 00     	cmp	#<$10
  4201 09:C346: D0 03        	bne	L126
  4202 09:C348: 82 2E 00     	brl	L10042
  4203                        L126:
  4204 09:C34B: A0 18 00     	ldy	#$18
  4205 09:C34E: B7 14        	lda	[<L90+current_header_0],Y
  4206 09:C350: 29 1F 00     	and	#<$1f
  4207 09:C353: 85 01        	sta	<R0
  Mon Sep 27 2021  9:39                                                Page 79


  4208 09:C355: A5 01        	lda	<R0
  4209 09:C357: C9 11 00     	cmp	#<$11
  4210 09:C35A: D0 03        	bne	L127
  4211 09:C35C: 82 1A 00     	brl	L10042
  4212                        L127:
  4213 09:C35F: A0 18 00     	ldy	#$18
  4214 09:C362: B7 14        	lda	[<L90+current_header_0],Y
  4215 09:C364: 29 1F 00     	and	#<$1f
  4216 09:C367: 85 01        	sta	<R0
  4217 09:C369: A5 01        	lda	<R0
  4218 09:C36B: C9 12 00     	cmp	#<$12
  4219 09:C36E: D0 03        	bne	L128
  4220 09:C370: 82 06 00     	brl	L10042
  4221                        L128:
  4222                        	.line	395
  4223                        ;      //printf("  Segment #%d Header Error : Inva
                    lid 'Type' value (possible values are $0,$1,$2,$4,$8,$10,$11
                     or $12).\n",current_file->nb_segment+1);
  4224                        ;      return(1);
  4225                        	.line	397
  4226 09:C373: A9 01 00     	lda	#$1
  4227 09:C376: 82 8E F9     	brl	L95
  4228                        ;    }
  4229                        	.line	398
  4230                        ;
  4231                        ;  /* LabLen : 0 ou 10 */
  4232                        ;  if(current_header->LabLen != 0x00 && current_he
                    ader->LabLen != 0x0A)
  4233                        L10042:
  4234                        L10041:
  4235                        	.line	401
  4236                        ;    {
  4237 09:C379: A0 1A 00     	ldy	#$1a
  4238 09:C37C: B7 14        	lda	[<L90+current_header_0],Y
  4239 09:C37E: 29 FF 00     	and	#$ff
  4240 09:C381: D0 03        	bne	L129
  4241 09:C383: 82 16 00     	brl	L10043
  4242                        L129:
  4243 09:C386: E2 20        	sep	#$20
  4244                        	longa	off
  4245 09:C388: A0 1A 00     	ldy	#$1a
  4246 09:C38B: B7 14        	lda	[<L90+current_header_0],Y
  4247 09:C38D: C9 0A        	cmp	#<$a
  4248 09:C38F: C2 20        	rep	#$20
  4249                        	longa	on
  4250 09:C391: D0 03        	bne	L130
  4251 09:C393: 82 06 00     	brl	L10043
  4252                        L130:
  4253                        	.line	402
  4254                        ;      //printf("  Segment #%d Header Error : Inva
                    lid 'LabLen' value (the value should be 0 or 10 for the Appl
                    e IIgs).\n",current_file->nb_segment+1);
  4255                        ;      return(1);
  4256                        	.line	404
  4257 09:C396: A9 01 00     	lda	#$1
  4258 09:C399: 82 6B F9     	brl	L95
  4259                        ;    }
  4260                        	.line	405
  Mon Sep 27 2021  9:39                                                Page 80


  4261                        ;
  4262                        ;  /* Num Len : Tjs à 4 pour le IIgs */
  4263                        ;  if(current_header->NumLen != 0x04)
  4264                        L10043:
  4265                        	.line	408
  4266                        ;    {
  4267 09:C39C: E2 20        	sep	#$20
  4268                        	longa	off
  4269 09:C39E: A0 1B 00     	ldy	#$1b
  4270 09:C3A1: B7 14        	lda	[<L90+current_header_0],Y
  4271 09:C3A3: C9 04        	cmp	#<$4
  4272 09:C3A5: C2 20        	rep	#$20
  4273                        	longa	on
  4274 09:C3A7: D0 03        	bne	L131
  4275 09:C3A9: 82 06 00     	brl	L10044
  4276                        L131:
  4277                        	.line	409
  4278                        ;      //printf("  Segment #%d Header Error : Inva
                    lid 'NumLen' value (the value should be 4 for the Apple IIgs
                    ).\n",current_file->nb_segment+1);
  4279                        ;      return(1);
  4280                        	.line	411
  4281 09:C3AC: A9 01 00     	lda	#$1
  4282 09:C3AF: 82 55 F9     	brl	L95
  4283                        ;    }
  4284                        	.line	412
  4285                        ;
  4286                        ;  /* BankSize : <= 64 KB */
  4287                        ;  if(current_header->BankSize > 0x010000)
  4288                        L10044:
  4289                        	.line	415
  4290                        ;    {
  4291 09:C3B2: A9 00 00     	lda	#$0
  4292 09:C3B5: A0 1D 00     	ldy	#$1d
  4293 09:C3B8: D7 14        	cmp	[<L90+current_header_0],Y
  4294 09:C3BA: A9 01 00     	lda	#$1
  4295 09:C3BD: A0 1F 00     	ldy	#$1f
  4296 09:C3C0: F7 14        	sbc	[<L90+current_header_0],Y
  4297 09:C3C2: 90 03        	bcc	L132
  4298 09:C3C4: 82 06 00     	brl	L10045
  4299                        L132:
  4300                        	.line	416
  4301                        ;      //printf("  Segment #%d Header Error : Inva
                    lid 'BankSize' value (the value can't be larger than 64 KB).
                    \n",current_file->nb_segment+1);
  4302                        ;      return(1);
  4303                        	.line	418
  4304 09:C3C7: A9 01 00     	lda	#$1
  4305 09:C3CA: 82 3A F9     	brl	L95
  4306                        ;    }
  4307                        	.line	419
  4308                        ;
  4309                        ;  /* Org : < 64 KB */
  4310                        ;  if(current_header->Org >= 0x010000)
  4311                        L10045:
  4312                        	.line	422
  4313                        ;    //printf("  Segment #%d Header Warning : Unus
                    ual 'Org' value (the value is usually < 64 KB) and it is set
  Mon Sep 27 2021  9:39                                                Page 81


                     to 0x%X.\n",current_file->nb_segment+1,current_header->Org)
                    ;
  4314                        ;
  4315                        ;  /* Align : 0, 0x0100 ou 0x010000 (0x200 avec Gs
                    Basic) */
  4316                        ;  if(current_header->Align != 0x00 && current_hea
                    der->Align != 0x0100 && current_header->Align != 0x010000)
  4317 09:C3CD: A0 25 00     	ldy	#$25
  4318 09:C3D0: B7 14        	lda	[<L90+current_header_0],Y
  4319 09:C3D2: C9 00 00     	cmp	#<$10000
  4320 09:C3D5: A0 27 00     	ldy	#$27
  4321 09:C3D8: B7 14        	lda	[<L90+current_header_0],Y
  4322 09:C3DA: E9 01 00     	sbc	#^$10000
  4323 09:C3DD: B0 03        	bcs	L133
  4324 09:C3DF: 82 50 00     	brl	L10046
  4325                        L133:
  4326                        	.line	426
  4327                        ;    //printf("  Segment #%d Header Warning : Unus
                    ual 'Align' value (the value should be 0, 256 or 64KB or for
                     the Apple IIgs) and it is set to 0x%X.\n",current_file->nb_
                    segment+1,current_header->Align);
  4328                        ;
  4329                        ;  /* NumSEx : Tjs à 0 */
  4330                        ;  if(current_header->NumSEx != 0x00)
  4331 09:C3E2: A0 29 00     	ldy	#$29
  4332 09:C3E5: B7 14        	lda	[<L90+current_header_0],Y
  4333 09:C3E7: A0 2B 00     	ldy	#$2b
  4334 09:C3EA: 17 14        	ora	[<L90+current_header_0],Y
  4335 09:C3EC: D0 03        	bne	L134
  4336 09:C3EE: 82 41 00     	brl	L10047
  4337                        L134:
  4338 09:C3F1: A0 29 00     	ldy	#$29
  4339 09:C3F4: B7 14        	lda	[<L90+current_header_0],Y
  4340 09:C3F6: C9 00 01     	cmp	#<$100
  4341 09:C3F9: D0 08        	bne	L135
  4342 09:C3FB: A0 2B 00     	ldy	#$2b
  4343 09:C3FE: B7 14        	lda	[<L90+current_header_0],Y
  4344 09:C400: C9 00 00     	cmp	#^$100
  4345                        L135:
  4346 09:C403: D0 03        	bne	L136
  4347 09:C405: 82 2A 00     	brl	L10047
  4348                        L136:
  4349 09:C408: A0 29 00     	ldy	#$29
  4350 09:C40B: B7 14        	lda	[<L90+current_header_0],Y
  4351 09:C40D: C9 00 00     	cmp	#<$10000
  4352 09:C410: D0 08        	bne	L137
  4353 09:C412: A0 2B 00     	ldy	#$2b
  4354 09:C415: B7 14        	lda	[<L90+current_header_0],Y
  4355 09:C417: C9 01 00     	cmp	#^$10000
  4356                        L137:
  4357 09:C41A: D0 03        	bne	L138
  4358 09:C41C: 82 13 00     	brl	L10047
  4359                        L138:
  4360                        	.line	430
  4361                        ;    {
  4362 09:C41F: A0 2D 00     	ldy	#$2d
  4363 09:C422: B7 14        	lda	[<L90+current_header_0],Y
  4364 09:C424: 29 FF 00     	and	#$ff
  Mon Sep 27 2021  9:39                                                Page 82


  4365 09:C427: D0 03        	bne	L139
  4366 09:C429: 82 06 00     	brl	L10048
  4367                        L139:
  4368                        	.line	431
  4369                        ;      //printf("  Segment #%d Header Error : Inva
                    lid 'NumSEx' value (the value should be 0 for the Apple IIgs
                    ).\n",current_file->nb_segment+1);
  4370                        ;      return(1);
  4371                        	.line	433
  4372 09:C42C: A9 01 00     	lda	#$1
  4373 09:C42F: 82 D5 F8     	brl	L95
  4374                        ;    }
  4375                        	.line	434
  4376                        ;
  4377                        ;  /* SegNum : 1 -> N */
  4378                        ;  if(current_header->SegNum != (WORD) current_fil
                    e->nb_segment+1)
  4379                        L10048:
  4380                        L10047:
  4381                        L10046:
  4382                        	.line	437
  4383                        ;    {
  4384 09:C432: A0 0E 00     	ldy	#$e
  4385 09:C435: B7 0E        	lda	[<L90+current_file_0],Y
  4386 09:C437: 1A           	ina
  4387 09:C438: 85 01        	sta	<R0
  4388 09:C43A: A5 01        	lda	<R0
  4389 09:C43C: A0 30 00     	ldy	#$30
  4390 09:C43F: D7 14        	cmp	[<L90+current_header_0],Y
  4391 09:C441: D0 03        	bne	L140
  4392 09:C443: 82 06 00     	brl	L10049
  4393                        L140:
  4394                        	.line	438
  4395                        ;      //printf("  Segment #%d Header Error : Inva
                    lid 'SegNum' value (the value should be %d and we have %d fo
                    r the Apple IIgs).\n",current_file->nb_segment+1,current_fil
                    e->nb_segment+1,current_header->SegNum);
  4396                        ;      return(1);
  4397                        	.line	440
  4398 09:C446: A9 01 00     	lda	#$1
  4399 09:C449: 82 BB F8     	brl	L95
  4400                        ;    }
  4401                        	.line	441
  4402                        ;
  4403                        ;  /* Entry Point */
  4404                        ;  if(current_header->EntryPointOffset > current_h
                    eader->Length)
  4405                        L10049:
  4406                        	.line	444
  4407                        ;    {
  4408 09:C44C: A0 14 00     	ldy	#$14
  4409 09:C44F: B7 14        	lda	[<L90+current_header_0],Y
  4410 09:C451: A0 32 00     	ldy	#$32
  4411 09:C454: D7 14        	cmp	[<L90+current_header_0],Y
  4412 09:C456: A0 16 00     	ldy	#$16
  4413 09:C459: B7 14        	lda	[<L90+current_header_0],Y
  4414 09:C45B: A0 34 00     	ldy	#$34
  4415 09:C45E: F7 14        	sbc	[<L90+current_header_0],Y
  Mon Sep 27 2021  9:39                                                Page 83


  4416 09:C460: 90 03        	bcc	L141
  4417 09:C462: 82 06 00     	brl	L10050
  4418                        L141:
  4419                        	.line	445
  4420                        ;      //printf("  Segment #%d Header Error : Inva
                    lid 'EntryPointOffset' value (the value can't be larger than
                     the Segment size).\n",current_file->nb_segment+1);
  4421                        ;      return(1);
  4422                        	.line	447
  4423 09:C465: A9 01 00     	lda	#$1
  4424 09:C468: 82 9C F8     	brl	L95
  4425                        ;    }
  4426                        	.line	448
  4427                        ;
  4428                        ;  /* DispName offset devrait être 44 ($2C) */
  4429                        ;  if(current_header->DispNameOffset < SEGMENT_HEA
                    DER_MIN_SIZE_V1)
  4430                        L10050:
  4431                        	.line	451
  4432                        ;    {
  4433 09:C46B: 38           	sec
  4434 09:C46C: A0 36 00     	ldy	#$36
  4435 09:C46F: B7 14        	lda	[<L90+current_header_0],Y
  4436 09:C471: E9 2C 00     	sbc	#<$2c
  4437 09:C474: 70 03        	bvs	L142
  4438 09:C476: 49 00 80     	eor	#$8000
  4439                        L142:
  4440 09:C479: 10 03        	bpl	L143
  4441 09:C47B: 82 06 00     	brl	L10051
  4442                        L143:
  4443                        	.line	452
  4444                        ;      //printf("  Segment #%d Header Error : Inva
                    lid 'DispNameOffset' value (the value can't be smaller than 
                    the Segment Header size).\n",current_file->nb_segment+1);
  4445                        ;      return(1);
  4446                        	.line	454
  4447 09:C47E: A9 01 00     	lda	#$1
  4448 09:C481: 82 83 F8     	brl	L95
  4449                        ;    }
  4450                        	.line	455
  4451                        ;  if(current_header->DispNameOffset > current_hea
                    der->ByteCnt)
  4452                        L10051:
  4453                        	.line	456
  4454                        ;    {
  4455 09:C484: A0 00 00     	ldy	#$0
  4456 09:C487: 5A           	phy
  4457 09:C488: A0 36 00     	ldy	#$36
  4458 09:C48B: B7 14        	lda	[<L90+current_header_0],Y
  4459 09:C48D: 7A           	ply
  4460 09:C48E: 2A           	rol	A
  4461 09:C48F: 6A           	ror	A
  4462 09:C490: 10 01        	bpl	L144
  4463 09:C492: 88           	dey
  4464                        L144:
  4465 09:C493: 85 01        	sta	<R0
  4466 09:C495: 84 03        	sty	<R0+2
  4467 09:C497: A0 0C 00     	ldy	#$c
  Mon Sep 27 2021  9:39                                                Page 84


  4468 09:C49A: B7 14        	lda	[<L90+current_header_0],Y
  4469 09:C49C: C5 01        	cmp	<R0
  4470 09:C49E: A0 0E 00     	ldy	#$e
  4471 09:C4A1: B7 14        	lda	[<L90+current_header_0],Y
  4472 09:C4A3: E5 03        	sbc	<R0+2
  4473 09:C4A5: 90 03        	bcc	L145
  4474 09:C4A7: 82 06 00     	brl	L10052
  4475                        L145:
  4476                        	.line	457
  4477                        ;      //printf("  Segment #%d Header Error : Inva
                    lid 'DispNameOffset' value (the value can't be larger than t
                    he Segment size).\n",current_file->nb_segment+1);
  4478                        ;      return(1);
  4479                        	.line	459
  4480 09:C4AA: A9 01 00     	lda	#$1
  4481 09:C4AD: 82 57 F8     	brl	L95
  4482                        ;    }
  4483                        	.line	460
  4484                        ;
  4485                        ;  /* DispData offset devrait être 64 ($40) */
  4486                        ;  if(current_header->DispDataOffset < SEGMENT_HEA
                    DER_MIN_SIZE_V1)
  4487                        L10052:
  4488                        	.line	463
  4489                        ;    {
  4490 09:C4B0: 38           	sec
  4491 09:C4B1: A0 38 00     	ldy	#$38
  4492 09:C4B4: B7 14        	lda	[<L90+current_header_0],Y
  4493 09:C4B6: E9 2C 00     	sbc	#<$2c
  4494 09:C4B9: 70 03        	bvs	L146
  4495 09:C4BB: 49 00 80     	eor	#$8000
  4496                        L146:
  4497 09:C4BE: 10 03        	bpl	L147
  4498 09:C4C0: 82 06 00     	brl	L10053
  4499                        L147:
  4500                        	.line	464
  4501                        ;      //printf("  Segment #%d Header Error : Inva
                    lid 'DispDataOffset' value (the value can't be smaller than 
                    the Segment Header size).\n",current_file->nb_segment+1);
  4502                        ;      return(1);
  4503                        	.line	466
  4504 09:C4C3: A9 01 00     	lda	#$1
  4505 09:C4C6: 82 3E F8     	brl	L95
  4506                        ;    }
  4507                        	.line	467
  4508                        ;  if(current_header->DispNameOffset > current_hea
                    der->ByteCnt)
  4509                        L10053:
  4510                        	.line	468
  4511                        ;    {
  4512 09:C4C9: A0 00 00     	ldy	#$0
  4513 09:C4CC: 5A           	phy
  4514 09:C4CD: A0 36 00     	ldy	#$36
  4515 09:C4D0: B7 14        	lda	[<L90+current_header_0],Y
  4516 09:C4D2: 7A           	ply
  4517 09:C4D3: 2A           	rol	A
  4518 09:C4D4: 6A           	ror	A
  4519 09:C4D5: 10 01        	bpl	L148
  Mon Sep 27 2021  9:39                                                Page 85


  4520 09:C4D7: 88           	dey
  4521                        L148:
  4522 09:C4D8: 85 01        	sta	<R0
  4523 09:C4DA: 84 03        	sty	<R0+2
  4524 09:C4DC: A0 0C 00     	ldy	#$c
  4525 09:C4DF: B7 14        	lda	[<L90+current_header_0],Y
  4526 09:C4E1: C5 01        	cmp	<R0
  4527 09:C4E3: A0 0E 00     	ldy	#$e
  4528 09:C4E6: B7 14        	lda	[<L90+current_header_0],Y
  4529 09:C4E8: E5 03        	sbc	<R0+2
  4530 09:C4EA: 90 03        	bcc	L149
  4531 09:C4EC: 82 06 00     	brl	L10054
  4532                        L149:
  4533                        	.line	469
  4534                        ;      //printf("  Segment #%d Header Error : Inva
                    lid 'DispDataOffset' value (the value can't be larger than t
                    he Segment size).\n",current_file->nb_segment+1);
  4535                        ;      return(1);
  4536                        	.line	471
  4537 09:C4EF: A9 01 00     	lda	#$1
  4538 09:C4F2: 82 12 F8     	brl	L95
  4539                        ;    }
  4540                        	.line	472
  4541                        ;
  4542                        ;  /*********************************************/
  4543                        ;  /**  On va récupérer les données variables  **/
  4544                        ;  /*********************************************/
  4545                        ;  /* Noms */
  4546                        ;  memcpy(current_header->LoadName,&current_file->
                    data[data_offset+current_header->DispNameOffset],10);
  4547                        L10054:
  4548                        	.line	478
  4549 09:C4F5: F4 0A 00     	pea	#<$a
  4550 09:C4F8: 18           	clc
  4551 09:C4F9: A5 12        	lda	<L90+data_offset_0
  4552 09:C4FB: A0 36 00     	ldy	#$36
  4553 09:C4FE: 77 14        	adc	[<L90+current_header_0],Y
  4554 09:C500: 85 01        	sta	<R0
  4555 09:C502: A0 00 00     	ldy	#$0
  4556 09:C505: A5 01        	lda	<R0
  4557 09:C507: 10 01        	bpl	L150
  4558 09:C509: 88           	dey
  4559                        L150:
  4560 09:C50A: 85 01        	sta	<R0
  4561 09:C50C: 84 03        	sty	<R0+2
  4562 09:C50E: 18           	clc
  4563 09:C50F: A0 0A 00     	ldy	#$a
  4564 09:C512: B7 0E        	lda	[<L90+current_file_0],Y
  4565 09:C514: 65 01        	adc	<R0
  4566 09:C516: 85 05        	sta	<R1
  4567 09:C518: A0 0C 00     	ldy	#$c
  4568 09:C51B: B7 0E        	lda	[<L90+current_file_0],Y
  4569 09:C51D: 65 03        	adc	<R0+2
  4570 09:C51F: 85 07        	sta	<R1+2
  4571 09:C521: D4 07        	pei	<R1+2
  4572 09:C523: D4 05        	pei	<R1
  4573 09:C525: 18           	clc
  4574 09:C526: A9 3C 08     	lda	#$83c
  Mon Sep 27 2021  9:39                                                Page 86


  4575 09:C529: 65 14        	adc	<L90+current_header_0
  4576 09:C52B: 85 01        	sta	<R0
  4577 09:C52D: A9 00 00     	lda	#$0
  4578 09:C530: 65 16        	adc	<L90+current_header_0+2
  4579 09:C532: 85 03        	sta	<R0+2
  4580 09:C534: D4 03        	pei	<R0+2
  4581 09:C536: D4 01        	pei	<R0
  4582 09:C538: 22 xx xx xx  	jsl	~~memcpy
  4583                        ;  if(current_header->LabLen > 0)
  4584                        	.line	479
  4585                        ;    memcpy(current_header->SegName,&current_file-
                    >data[data_offset+current_header->DispNameOffset+10],current
                    _header->LabLen);
  4586 09:C53C: E2 20        	sep	#$20
  4587                        	longa	off
  4588 09:C53E: A9 00        	lda	#$0
  4589 09:C540: A0 1A 00     	ldy	#$1a
  4590 09:C543: D7 14        	cmp	[<L90+current_header_0],Y
  4591 09:C545: C2 20        	rep	#$20
  4592                        	longa	on
  4593 09:C547: 90 03        	bcc	L151
  4594 09:C549: 82 58 00     	brl	L10055
  4595                        L151:
  4596                        	.line	480
  4597 09:C54C: A0 1A 00     	ldy	#$1a
  4598 09:C54F: B7 14        	lda	[<L90+current_header_0],Y
  4599 09:C551: 29 FF 00     	and	#$ff
  4600 09:C554: 48           	pha
  4601 09:C555: 18           	clc
  4602 09:C556: A5 12        	lda	<L90+data_offset_0
  4603 09:C558: A0 36 00     	ldy	#$36
  4604 09:C55B: 77 14        	adc	[<L90+current_header_0],Y
  4605 09:C55D: 85 01        	sta	<R0
  4606 09:C55F: 18           	clc
  4607 09:C560: A9 0A 00     	lda	#$a
  4608 09:C563: 65 01        	adc	<R0
  4609 09:C565: 85 05        	sta	<R1
  4610 09:C567: A0 00 00     	ldy	#$0
  4611 09:C56A: A5 05        	lda	<R1
  4612 09:C56C: 10 01        	bpl	L152
  4613 09:C56E: 88           	dey
  4614                        L152:
  4615 09:C56F: 85 01        	sta	<R0
  4616 09:C571: 84 03        	sty	<R0+2
  4617 09:C573: 18           	clc
  4618 09:C574: A0 0A 00     	ldy	#$a
  4619 09:C577: B7 0E        	lda	[<L90+current_file_0],Y
  4620 09:C579: 65 01        	adc	<R0
  4621 09:C57B: 85 05        	sta	<R1
  4622 09:C57D: A0 0C 00     	ldy	#$c
  4623 09:C580: B7 0E        	lda	[<L90+current_file_0],Y
  4624 09:C582: 65 03        	adc	<R0+2
  4625 09:C584: 85 07        	sta	<R1+2
  4626 09:C586: D4 07        	pei	<R1+2
  4627 09:C588: D4 05        	pei	<R1
  4628 09:C58A: 18           	clc
  4629 09:C58B: A9 3C 09     	lda	#$93c
  4630 09:C58E: 65 14        	adc	<L90+current_header_0
  Mon Sep 27 2021  9:39                                                Page 87


  4631 09:C590: 85 01        	sta	<R0
  4632 09:C592: A9 00 00     	lda	#$0
  4633 09:C595: 65 16        	adc	<L90+current_header_0+2
  4634 09:C597: 85 03        	sta	<R0+2
  4635 09:C599: D4 03        	pei	<R0+2
  4636 09:C59B: D4 01        	pei	<R0
  4637 09:C59D: 22 xx xx xx  	jsl	~~memcpy
  4638                        ;  else
  4639 09:C5A1: 82 77 00     	brl	L10056
  4640                        L10055:
  4641                        ;    {
  4642                        	.line	482
  4643                        ;      /* La longueur est codée au début */
  4644                        ;      length = (int) current_file->data[data_offs
                    et+current_header->DispNameOffset+10];
  4645                        	.line	484
  4646 09:C5A4: 18           	clc
  4647 09:C5A5: A5 12        	lda	<L90+data_offset_0
  4648 09:C5A7: A0 36 00     	ldy	#$36
  4649 09:C5AA: 77 14        	adc	[<L90+current_header_0],Y
  4650 09:C5AC: 85 01        	sta	<R0
  4651 09:C5AE: 18           	clc
  4652 09:C5AF: A9 0A 00     	lda	#$a
  4653 09:C5B2: 65 01        	adc	<R0
  4654 09:C5B4: 85 05        	sta	<R1
  4655 09:C5B6: A0 0A 00     	ldy	#$a
  4656 09:C5B9: B7 0E        	lda	[<L90+current_file_0],Y
  4657 09:C5BB: 85 01        	sta	<R0
  4658 09:C5BD: A0 0C 00     	ldy	#$c
  4659 09:C5C0: B7 0E        	lda	[<L90+current_file_0],Y
  4660 09:C5C2: 85 03        	sta	<R0+2
  4661 09:C5C4: A4 05        	ldy	<R1
  4662 09:C5C6: B7 01        	lda	[<R0],Y
  4663 09:C5C8: 29 FF 00     	and	#$ff
  4664 09:C5CB: 85 09        	sta	<L91+length_1
  4665                        ;      memcpy(&current_header->SegName,&current_fi
                    le->data[data_offset+current_header->DispNameOffset+10+1],le
                    ngth);
  4666                        	.line	485
  4667 09:C5CD: D4 09        	pei	<L91+length_1
  4668 09:C5CF: 18           	clc
  4669 09:C5D0: A5 12        	lda	<L90+data_offset_0
  4670 09:C5D2: A0 36 00     	ldy	#$36
  4671 09:C5D5: 77 14        	adc	[<L90+current_header_0],Y
  4672 09:C5D7: 85 01        	sta	<R0
  4673 09:C5D9: 18           	clc
  4674 09:C5DA: A9 0B 00     	lda	#$b
  4675 09:C5DD: 65 01        	adc	<R0
  4676 09:C5DF: 85 05        	sta	<R1
  4677 09:C5E1: A0 00 00     	ldy	#$0
  4678 09:C5E4: A5 05        	lda	<R1
  4679 09:C5E6: 10 01        	bpl	L153
  4680 09:C5E8: 88           	dey
  4681                        L153:
  4682 09:C5E9: 85 01        	sta	<R0
  4683 09:C5EB: 84 03        	sty	<R0+2
  4684 09:C5ED: 18           	clc
  4685 09:C5EE: A0 0A 00     	ldy	#$a
  Mon Sep 27 2021  9:39                                                Page 88


  4686 09:C5F1: B7 0E        	lda	[<L90+current_file_0],Y
  4687 09:C5F3: 65 01        	adc	<R0
  4688 09:C5F5: 85 05        	sta	<R1
  4689 09:C5F7: A0 0C 00     	ldy	#$c
  4690 09:C5FA: B7 0E        	lda	[<L90+current_file_0],Y
  4691 09:C5FC: 65 03        	adc	<R0+2
  4692 09:C5FE: 85 07        	sta	<R1+2
  4693 09:C600: D4 07        	pei	<R1+2
  4694 09:C602: D4 05        	pei	<R1
  4695 09:C604: 18           	clc
  4696 09:C605: A9 3C 09     	lda	#$93c
  4697 09:C608: 65 14        	adc	<L90+current_header_0
  4698 09:C60A: 85 01        	sta	<R0
  4699 09:C60C: A9 00 00     	lda	#$0
  4700 09:C60F: 65 16        	adc	<L90+current_header_0+2
  4701 09:C611: 85 03        	sta	<R0+2
  4702 09:C613: D4 03        	pei	<R0+2
  4703 09:C615: D4 01        	pei	<R0
  4704 09:C617: 22 xx xx xx  	jsl	~~memcpy
  4705                        ;    }
  4706                        	.line	486
  4707                        L10056:
  4708                        ;
  4709                        ;  /* OK */
  4710                        ;  return(0);
  4711                        	.line	489
  4712 09:C61B: A9 00 00     	lda	#$0
  4713 09:C61E: 82 E6 F6     	brl	L95
  4714                        ;}
  4715                        	.line	490
  4716                        	.endblock	490
  4717             0000000A   L90	equ	10
  4718             00000009   L91	equ	9
  4719 09:C621:              	ends
  4720                        	efunc
  4721                        	.endfunc	490,9,10
  4722                        	.line	490
  4723                        ;
  4724                        ;
  4725                        ;/************************************************
                    ************/
  4726                        ;/*  DecodeSegmentHeaderV2() :  Décode le Header d
                    u Segment. */
  4727                        ;/************************************************
                    ************/
  4728                        ;static int DecodeSegmentHeaderV2(struct omf_file 
                    *current_file, int data_offset, struct omf_segment_header *c
                    urrent_header)
  4729                        ;{
  4730                        	.line	496
  4731                        	.line	497
  4732                        	LOADER
  4733                        	func
  4734                        	.function	497
  4735                        ~~DecodeSegmentHeaderV2:
  4736                        	longa	on
  4737                        	longi	on
  4738 09:C621: 3B           	tsc
  Mon Sep 27 2021  9:39                                                Page 89


  4739 09:C622: 38           	sec
  4740 09:C623: E9 0A 00     	sbc	#L154
  4741 09:C626: 1B           	tcs
  4742 09:C627: 0B           	phd
  4743 09:C628: 5B           	tcd
  4744             00000004   current_file_0	set	4
  4745             00000008   data_offset_0	set	8
  4746             0000000A   current_header_0	set	10
  4747                        	.block	497
  4748                        ;  int length;
  4749                        ;
  4750                        ;  /* Vérifie la taille */
  4751                        ;  if(data_offset + SEGMENT_HEADER_SIZE_V2 > curre
                    nt_file->data_length)
  4752             00000000   length_1	set	0
  4753                        	.sym	length,0,5,1,16
  4754                        	.sym	current_file,4,138,6,32,51
  4755                        	.sym	data_offset,8,5,6,16
  4756                        	.sym	current_header,10,138,6,32,49
  4757                        	.line	501
  4758                        ;    {
  4759 09:C629: 18           	clc
  4760 09:C62A: A9 40 00     	lda	#$40
  4761 09:C62D: 65 12        	adc	<L154+data_offset_0
  4762 09:C62F: 85 01        	sta	<R0
  4763 09:C631: 38           	sec
  4764 09:C632: A0 08 00     	ldy	#$8
  4765 09:C635: B7 0E        	lda	[<L154+current_file_0],Y
  4766 09:C637: E5 01        	sbc	<R0
  4767 09:C639: 70 03        	bvs	L157
  4768 09:C63B: 49 00 80     	eor	#$8000
  4769                        L157:
  4770 09:C63E: 10 03        	bpl	L158
  4771 09:C640: 82 15 00     	brl	L10057
  4772                        L158:
  4773                        	.line	502
  4774                        ;      //printf("  Error : Not enough data to enco
                    de a Segment Header (offset=%d, Segment #%d).\n",data_offset
                    ,current_file->nb_segment+1);
  4775                        ;      return(1);
  4776                        	.line	504
  4777 09:C643: A9 01 00     	lda	#$1
  4778                        L159:
  4779 09:C646: A8           	tay
  4780 09:C647: A5 0C        	lda	<L154+2
  4781 09:C649: 85 16        	sta	<L154+2+10
  4782 09:C64B: A5 0B        	lda	<L154+1
  4783 09:C64D: 85 15        	sta	<L154+1+10
  4784 09:C64F: 2B           	pld
  4785 09:C650: 3B           	tsc
  4786 09:C651: 18           	clc
  4787 09:C652: 69 14 00     	adc	#L154+10
  4788 09:C655: 1B           	tcs
  4789 09:C656: 98           	tya
  4790 09:C657: 6B           	rtl
  4791                        ;    }
  4792                        	.line	505
  4793                        ;
  Mon Sep 27 2021  9:39                                                Page 90


  4794                        ;  /**********************************************
                    *********/
  4795                        ;  /**  On va décoder tous les éléments fixes du H
                    eader  **/
  4796                        ;  /**********************************************
                    *********/
  4797                        ;  memcpy(&current_header->ByteCnt,&current_file->
                    data[data_offset+0x00],sizeof(DWORD));
  4798                        L10057:
  4799                        	.line	510
  4800 09:C658: F4 04 00     	pea	#<$4
  4801 09:C65B: A0 00 00     	ldy	#$0
  4802 09:C65E: A5 12        	lda	<L154+data_offset_0
  4803 09:C660: 10 01        	bpl	L160
  4804 09:C662: 88           	dey
  4805                        L160:
  4806 09:C663: 85 01        	sta	<R0
  4807 09:C665: 84 03        	sty	<R0+2
  4808 09:C667: 18           	clc
  4809 09:C668: A0 0A 00     	ldy	#$a
  4810 09:C66B: B7 0E        	lda	[<L154+current_file_0],Y
  4811 09:C66D: 65 01        	adc	<R0
  4812 09:C66F: 85 05        	sta	<R1
  4813 09:C671: A0 0C 00     	ldy	#$c
  4814 09:C674: B7 0E        	lda	[<L154+current_file_0],Y
  4815 09:C676: 65 03        	adc	<R0+2
  4816 09:C678: 85 07        	sta	<R1+2
  4817 09:C67A: D4 07        	pei	<R1+2
  4818 09:C67C: D4 05        	pei	<R1
  4819 09:C67E: 18           	clc
  4820 09:C67F: A9 0C 00     	lda	#$c
  4821 09:C682: 65 14        	adc	<L154+current_header_0
  4822 09:C684: 85 01        	sta	<R0
  4823 09:C686: A9 00 00     	lda	#$0
  4824 09:C689: 65 16        	adc	<L154+current_header_0+2
  4825 09:C68B: 85 03        	sta	<R0+2
  4826 09:C68D: D4 03        	pei	<R0+2
  4827 09:C68F: D4 01        	pei	<R0
  4828 09:C691: 22 xx xx xx  	jsl	~~memcpy
  4829                        ;  memcpy(&current_header->ResSpc,&current_file->d
                    ata[data_offset+0x04],sizeof(DWORD));
  4830                        	.line	511
  4831 09:C695: F4 04 00     	pea	#<$4
  4832 09:C698: 18           	clc
  4833 09:C699: A9 04 00     	lda	#$4
  4834 09:C69C: 65 12        	adc	<L154+data_offset_0
  4835 09:C69E: 85 01        	sta	<R0
  4836 09:C6A0: A0 00 00     	ldy	#$0
  4837 09:C6A3: A5 01        	lda	<R0
  4838 09:C6A5: 10 01        	bpl	L161
  4839 09:C6A7: 88           	dey
  4840                        L161:
  4841 09:C6A8: 85 01        	sta	<R0
  4842 09:C6AA: 84 03        	sty	<R0+2
  4843 09:C6AC: 18           	clc
  4844 09:C6AD: A0 0A 00     	ldy	#$a
  4845 09:C6B0: B7 0E        	lda	[<L154+current_file_0],Y
  4846 09:C6B2: 65 01        	adc	<R0
  Mon Sep 27 2021  9:39                                                Page 91


  4847 09:C6B4: 85 05        	sta	<R1
  4848 09:C6B6: A0 0C 00     	ldy	#$c
  4849 09:C6B9: B7 0E        	lda	[<L154+current_file_0],Y
  4850 09:C6BB: 65 03        	adc	<R0+2
  4851 09:C6BD: 85 07        	sta	<R1+2
  4852 09:C6BF: D4 07        	pei	<R1+2
  4853 09:C6C1: D4 05        	pei	<R1
  4854 09:C6C3: 18           	clc
  4855 09:C6C4: A9 10 00     	lda	#$10
  4856 09:C6C7: 65 14        	adc	<L154+current_header_0
  4857 09:C6C9: 85 01        	sta	<R0
  4858 09:C6CB: A9 00 00     	lda	#$0
  4859 09:C6CE: 65 16        	adc	<L154+current_header_0+2
  4860 09:C6D0: 85 03        	sta	<R0+2
  4861 09:C6D2: D4 03        	pei	<R0+2
  4862 09:C6D4: D4 01        	pei	<R0
  4863 09:C6D6: 22 xx xx xx  	jsl	~~memcpy
  4864                        ;  memcpy(&current_header->Length,&current_file->d
                    ata[data_offset+0x08],sizeof(DWORD));
  4865                        	.line	512
  4866 09:C6DA: F4 04 00     	pea	#<$4
  4867 09:C6DD: 18           	clc
  4868 09:C6DE: A9 08 00     	lda	#$8
  4869 09:C6E1: 65 12        	adc	<L154+data_offset_0
  4870 09:C6E3: 85 01        	sta	<R0
  4871 09:C6E5: A0 00 00     	ldy	#$0
  4872 09:C6E8: A5 01        	lda	<R0
  4873 09:C6EA: 10 01        	bpl	L162
  4874 09:C6EC: 88           	dey
  4875                        L162:
  4876 09:C6ED: 85 01        	sta	<R0
  4877 09:C6EF: 84 03        	sty	<R0+2
  4878 09:C6F1: 18           	clc
  4879 09:C6F2: A0 0A 00     	ldy	#$a
  4880 09:C6F5: B7 0E        	lda	[<L154+current_file_0],Y
  4881 09:C6F7: 65 01        	adc	<R0
  4882 09:C6F9: 85 05        	sta	<R1
  4883 09:C6FB: A0 0C 00     	ldy	#$c
  4884 09:C6FE: B7 0E        	lda	[<L154+current_file_0],Y
  4885 09:C700: 65 03        	adc	<R0+2
  4886 09:C702: 85 07        	sta	<R1+2
  4887 09:C704: D4 07        	pei	<R1+2
  4888 09:C706: D4 05        	pei	<R1
  4889 09:C708: 18           	clc
  4890 09:C709: A9 14 00     	lda	#$14
  4891 09:C70C: 65 14        	adc	<L154+current_header_0
  4892 09:C70E: 85 01        	sta	<R0
  4893 09:C710: A9 00 00     	lda	#$0
  4894 09:C713: 65 16        	adc	<L154+current_header_0+2
  4895 09:C715: 85 03        	sta	<R0+2
  4896 09:C717: D4 03        	pei	<R0+2
  4897 09:C719: D4 01        	pei	<R0
  4898 09:C71B: 22 xx xx xx  	jsl	~~memcpy
  4899                        ;  memcpy(&current_header->undefine_1,&current_fil
                    e->data[data_offset+0x0C],sizeof(BYTE));
  4900                        	.line	513
  4901 09:C71F: F4 01 00     	pea	#<$1
  4902 09:C722: 18           	clc
  Mon Sep 27 2021  9:39                                                Page 92


  4903 09:C723: A9 0C 00     	lda	#$c
  4904 09:C726: 65 12        	adc	<L154+data_offset_0
  4905 09:C728: 85 01        	sta	<R0
  4906 09:C72A: A0 00 00     	ldy	#$0
  4907 09:C72D: A5 01        	lda	<R0
  4908 09:C72F: 10 01        	bpl	L163
  4909 09:C731: 88           	dey
  4910                        L163:
  4911 09:C732: 85 01        	sta	<R0
  4912 09:C734: 84 03        	sty	<R0+2
  4913 09:C736: 18           	clc
  4914 09:C737: A0 0A 00     	ldy	#$a
  4915 09:C73A: B7 0E        	lda	[<L154+current_file_0],Y
  4916 09:C73C: 65 01        	adc	<R0
  4917 09:C73E: 85 05        	sta	<R1
  4918 09:C740: A0 0C 00     	ldy	#$c
  4919 09:C743: B7 0E        	lda	[<L154+current_file_0],Y
  4920 09:C745: 65 03        	adc	<R0+2
  4921 09:C747: 85 07        	sta	<R1+2
  4922 09:C749: D4 07        	pei	<R1+2
  4923 09:C74B: D4 05        	pei	<R1
  4924 09:C74D: 18           	clc
  4925 09:C74E: A9 19 00     	lda	#$19
  4926 09:C751: 65 14        	adc	<L154+current_header_0
  4927 09:C753: 85 01        	sta	<R0
  4928 09:C755: A9 00 00     	lda	#$0
  4929 09:C758: 65 16        	adc	<L154+current_header_0+2
  4930 09:C75A: 85 03        	sta	<R0+2
  4931 09:C75C: D4 03        	pei	<R0+2
  4932 09:C75E: D4 01        	pei	<R0
  4933 09:C760: 22 xx xx xx  	jsl	~~memcpy
  4934                        ;  memcpy(&current_header->LabLen,&current_file->d
                    ata[data_offset+0x0D],sizeof(BYTE));
  4935                        	.line	514
  4936 09:C764: F4 01 00     	pea	#<$1
  4937 09:C767: 18           	clc
  4938 09:C768: A9 0D 00     	lda	#$d
  4939 09:C76B: 65 12        	adc	<L154+data_offset_0
  4940 09:C76D: 85 01        	sta	<R0
  4941 09:C76F: A0 00 00     	ldy	#$0
  4942 09:C772: A5 01        	lda	<R0
  4943 09:C774: 10 01        	bpl	L164
  4944 09:C776: 88           	dey
  4945                        L164:
  4946 09:C777: 85 01        	sta	<R0
  4947 09:C779: 84 03        	sty	<R0+2
  4948 09:C77B: 18           	clc
  4949 09:C77C: A0 0A 00     	ldy	#$a
  4950 09:C77F: B7 0E        	lda	[<L154+current_file_0],Y
  4951 09:C781: 65 01        	adc	<R0
  4952 09:C783: 85 05        	sta	<R1
  4953 09:C785: A0 0C 00     	ldy	#$c
  4954 09:C788: B7 0E        	lda	[<L154+current_file_0],Y
  4955 09:C78A: 65 03        	adc	<R0+2
  4956 09:C78C: 85 07        	sta	<R1+2
  4957 09:C78E: D4 07        	pei	<R1+2
  4958 09:C790: D4 05        	pei	<R1
  4959 09:C792: 18           	clc
  Mon Sep 27 2021  9:39                                                Page 93


  4960 09:C793: A9 1A 00     	lda	#$1a
  4961 09:C796: 65 14        	adc	<L154+current_header_0
  4962 09:C798: 85 01        	sta	<R0
  4963 09:C79A: A9 00 00     	lda	#$0
  4964 09:C79D: 65 16        	adc	<L154+current_header_0+2
  4965 09:C79F: 85 03        	sta	<R0+2
  4966 09:C7A1: D4 03        	pei	<R0+2
  4967 09:C7A3: D4 01        	pei	<R0
  4968 09:C7A5: 22 xx xx xx  	jsl	~~memcpy
  4969                        ;  memcpy(&current_header->NumLen,&current_file->d
                    ata[data_offset+0x0E],sizeof(BYTE));
  4970                        	.line	515
  4971 09:C7A9: F4 01 00     	pea	#<$1
  4972 09:C7AC: 18           	clc
  4973 09:C7AD: A9 0E 00     	lda	#$e
  4974 09:C7B0: 65 12        	adc	<L154+data_offset_0
  4975 09:C7B2: 85 01        	sta	<R0
  4976 09:C7B4: A0 00 00     	ldy	#$0
  4977 09:C7B7: A5 01        	lda	<R0
  4978 09:C7B9: 10 01        	bpl	L165
  4979 09:C7BB: 88           	dey
  4980                        L165:
  4981 09:C7BC: 85 01        	sta	<R0
  4982 09:C7BE: 84 03        	sty	<R0+2
  4983 09:C7C0: 18           	clc
  4984 09:C7C1: A0 0A 00     	ldy	#$a
  4985 09:C7C4: B7 0E        	lda	[<L154+current_file_0],Y
  4986 09:C7C6: 65 01        	adc	<R0
  4987 09:C7C8: 85 05        	sta	<R1
  4988 09:C7CA: A0 0C 00     	ldy	#$c
  4989 09:C7CD: B7 0E        	lda	[<L154+current_file_0],Y
  4990 09:C7CF: 65 03        	adc	<R0+2
  4991 09:C7D1: 85 07        	sta	<R1+2
  4992 09:C7D3: D4 07        	pei	<R1+2
  4993 09:C7D5: D4 05        	pei	<R1
  4994 09:C7D7: 18           	clc
  4995 09:C7D8: A9 1B 00     	lda	#$1b
  4996 09:C7DB: 65 14        	adc	<L154+current_header_0
  4997 09:C7DD: 85 01        	sta	<R0
  4998 09:C7DF: A9 00 00     	lda	#$0
  4999 09:C7E2: 65 16        	adc	<L154+current_header_0+2
  5000 09:C7E4: 85 03        	sta	<R0+2
  5001 09:C7E6: D4 03        	pei	<R0+2
  5002 09:C7E8: D4 01        	pei	<R0
  5003 09:C7EA: 22 xx xx xx  	jsl	~~memcpy
  5004                        ;  memcpy(&current_header->BankSize,&current_file-
                    >data[data_offset+0x10],sizeof(DWORD));
  5005                        	.line	516
  5006 09:C7EE: F4 04 00     	pea	#<$4
  5007 09:C7F1: 18           	clc
  5008 09:C7F2: A9 10 00     	lda	#$10
  5009 09:C7F5: 65 12        	adc	<L154+data_offset_0
  5010 09:C7F7: 85 01        	sta	<R0
  5011 09:C7F9: A0 00 00     	ldy	#$0
  5012 09:C7FC: A5 01        	lda	<R0
  5013 09:C7FE: 10 01        	bpl	L166
  5014 09:C800: 88           	dey
  5015                        L166:
  Mon Sep 27 2021  9:39                                                Page 94


  5016 09:C801: 85 01        	sta	<R0
  5017 09:C803: 84 03        	sty	<R0+2
  5018 09:C805: 18           	clc
  5019 09:C806: A0 0A 00     	ldy	#$a
  5020 09:C809: B7 0E        	lda	[<L154+current_file_0],Y
  5021 09:C80B: 65 01        	adc	<R0
  5022 09:C80D: 85 05        	sta	<R1
  5023 09:C80F: A0 0C 00     	ldy	#$c
  5024 09:C812: B7 0E        	lda	[<L154+current_file_0],Y
  5025 09:C814: 65 03        	adc	<R0+2
  5026 09:C816: 85 07        	sta	<R1+2
  5027 09:C818: D4 07        	pei	<R1+2
  5028 09:C81A: D4 05        	pei	<R1
  5029 09:C81C: 18           	clc
  5030 09:C81D: A9 1D 00     	lda	#$1d
  5031 09:C820: 65 14        	adc	<L154+current_header_0
  5032 09:C822: 85 01        	sta	<R0
  5033 09:C824: A9 00 00     	lda	#$0
  5034 09:C827: 65 16        	adc	<L154+current_header_0+2
  5035 09:C829: 85 03        	sta	<R0+2
  5036 09:C82B: D4 03        	pei	<R0+2
  5037 09:C82D: D4 01        	pei	<R0
  5038 09:C82F: 22 xx xx xx  	jsl	~~memcpy
  5039                        ;  memcpy(&current_header->Kind,&current_file->dat
                    a[data_offset+0x14],sizeof(WORD));
  5040                        	.line	517
  5041 09:C833: F4 02 00     	pea	#<$2
  5042 09:C836: 18           	clc
  5043 09:C837: A9 14 00     	lda	#$14
  5044 09:C83A: 65 12        	adc	<L154+data_offset_0
  5045 09:C83C: 85 01        	sta	<R0
  5046 09:C83E: A0 00 00     	ldy	#$0
  5047 09:C841: A5 01        	lda	<R0
  5048 09:C843: 10 01        	bpl	L167
  5049 09:C845: 88           	dey
  5050                        L167:
  5051 09:C846: 85 01        	sta	<R0
  5052 09:C848: 84 03        	sty	<R0+2
  5053 09:C84A: 18           	clc
  5054 09:C84B: A0 0A 00     	ldy	#$a
  5055 09:C84E: B7 0E        	lda	[<L154+current_file_0],Y
  5056 09:C850: 65 01        	adc	<R0
  5057 09:C852: 85 05        	sta	<R1
  5058 09:C854: A0 0C 00     	ldy	#$c
  5059 09:C857: B7 0E        	lda	[<L154+current_file_0],Y
  5060 09:C859: 65 03        	adc	<R0+2
  5061 09:C85B: 85 07        	sta	<R1+2
  5062 09:C85D: D4 07        	pei	<R1+2
  5063 09:C85F: D4 05        	pei	<R1
  5064 09:C861: 18           	clc
  5065 09:C862: A9 21 00     	lda	#$21
  5066 09:C865: 65 14        	adc	<L154+current_header_0
  5067 09:C867: 85 01        	sta	<R0
  5068 09:C869: A9 00 00     	lda	#$0
  5069 09:C86C: 65 16        	adc	<L154+current_header_0+2
  5070 09:C86E: 85 03        	sta	<R0+2
  5071 09:C870: D4 03        	pei	<R0+2
  5072 09:C872: D4 01        	pei	<R0
  Mon Sep 27 2021  9:39                                                Page 95


  5073 09:C874: 22 xx xx xx  	jsl	~~memcpy
  5074                        ;  memcpy(&current_header->undefine_2,&current_fil
                    e->data[data_offset+0x16],sizeof(BYTE));
  5075                        	.line	518
  5076 09:C878: F4 01 00     	pea	#<$1
  5077 09:C87B: 18           	clc
  5078 09:C87C: A9 16 00     	lda	#$16
  5079 09:C87F: 65 12        	adc	<L154+data_offset_0
  5080 09:C881: 85 01        	sta	<R0
  5081 09:C883: A0 00 00     	ldy	#$0
  5082 09:C886: A5 01        	lda	<R0
  5083 09:C888: 10 01        	bpl	L168
  5084 09:C88A: 88           	dey
  5085                        L168:
  5086 09:C88B: 85 01        	sta	<R0
  5087 09:C88D: 84 03        	sty	<R0+2
  5088 09:C88F: 18           	clc
  5089 09:C890: A0 0A 00     	ldy	#$a
  5090 09:C893: B7 0E        	lda	[<L154+current_file_0],Y
  5091 09:C895: 65 01        	adc	<R0
  5092 09:C897: 85 05        	sta	<R1
  5093 09:C899: A0 0C 00     	ldy	#$c
  5094 09:C89C: B7 0E        	lda	[<L154+current_file_0],Y
  5095 09:C89E: 65 03        	adc	<R0+2
  5096 09:C8A0: 85 07        	sta	<R1+2
  5097 09:C8A2: D4 07        	pei	<R1+2
  5098 09:C8A4: D4 05        	pei	<R1
  5099 09:C8A6: 18           	clc
  5100 09:C8A7: A9 23 00     	lda	#$23
  5101 09:C8AA: 65 14        	adc	<L154+current_header_0
  5102 09:C8AC: 85 01        	sta	<R0
  5103 09:C8AE: A9 00 00     	lda	#$0
  5104 09:C8B1: 65 16        	adc	<L154+current_header_0+2
  5105 09:C8B3: 85 03        	sta	<R0+2
  5106 09:C8B5: D4 03        	pei	<R0+2
  5107 09:C8B7: D4 01        	pei	<R0
  5108 09:C8B9: 22 xx xx xx  	jsl	~~memcpy
  5109                        ;  memcpy(&current_header->undefine_3,&current_fil
                    e->data[data_offset+0x17],sizeof(BYTE));
  5110                        	.line	519
  5111 09:C8BD: F4 01 00     	pea	#<$1
  5112 09:C8C0: 18           	clc
  5113 09:C8C1: A9 17 00     	lda	#$17
  5114 09:C8C4: 65 12        	adc	<L154+data_offset_0
  5115 09:C8C6: 85 01        	sta	<R0
  5116 09:C8C8: A0 00 00     	ldy	#$0
  5117 09:C8CB: A5 01        	lda	<R0
  5118 09:C8CD: 10 01        	bpl	L169
  5119 09:C8CF: 88           	dey
  5120                        L169:
  5121 09:C8D0: 85 01        	sta	<R0
  5122 09:C8D2: 84 03        	sty	<R0+2
  5123 09:C8D4: 18           	clc
  5124 09:C8D5: A0 0A 00     	ldy	#$a
  5125 09:C8D8: B7 0E        	lda	[<L154+current_file_0],Y
  5126 09:C8DA: 65 01        	adc	<R0
  5127 09:C8DC: 85 05        	sta	<R1
  5128 09:C8DE: A0 0C 00     	ldy	#$c
  Mon Sep 27 2021  9:39                                                Page 96


  5129 09:C8E1: B7 0E        	lda	[<L154+current_file_0],Y
  5130 09:C8E3: 65 03        	adc	<R0+2
  5131 09:C8E5: 85 07        	sta	<R1+2
  5132 09:C8E7: D4 07        	pei	<R1+2
  5133 09:C8E9: D4 05        	pei	<R1
  5134 09:C8EB: 18           	clc
  5135 09:C8EC: A9 24 00     	lda	#$24
  5136 09:C8EF: 65 14        	adc	<L154+current_header_0
  5137 09:C8F1: 85 01        	sta	<R0
  5138 09:C8F3: A9 00 00     	lda	#$0
  5139 09:C8F6: 65 16        	adc	<L154+current_header_0+2
  5140 09:C8F8: 85 03        	sta	<R0+2
  5141 09:C8FA: D4 03        	pei	<R0+2
  5142 09:C8FC: D4 01        	pei	<R0
  5143 09:C8FE: 22 xx xx xx  	jsl	~~memcpy
  5144                        ;  memcpy(&current_header->Org,&current_file->data
                    [data_offset+0x18],sizeof(DWORD));
  5145                        	.line	520
  5146 09:C902: F4 04 00     	pea	#<$4
  5147 09:C905: 18           	clc
  5148 09:C906: A9 18 00     	lda	#$18
  5149 09:C909: 65 12        	adc	<L154+data_offset_0
  5150 09:C90B: 85 01        	sta	<R0
  5151 09:C90D: A0 00 00     	ldy	#$0
  5152 09:C910: A5 01        	lda	<R0
  5153 09:C912: 10 01        	bpl	L170
  5154 09:C914: 88           	dey
  5155                        L170:
  5156 09:C915: 85 01        	sta	<R0
  5157 09:C917: 84 03        	sty	<R0+2
  5158 09:C919: 18           	clc
  5159 09:C91A: A0 0A 00     	ldy	#$a
  5160 09:C91D: B7 0E        	lda	[<L154+current_file_0],Y
  5161 09:C91F: 65 01        	adc	<R0
  5162 09:C921: 85 05        	sta	<R1
  5163 09:C923: A0 0C 00     	ldy	#$c
  5164 09:C926: B7 0E        	lda	[<L154+current_file_0],Y
  5165 09:C928: 65 03        	adc	<R0+2
  5166 09:C92A: 85 07        	sta	<R1+2
  5167 09:C92C: D4 07        	pei	<R1+2
  5168 09:C92E: D4 05        	pei	<R1
  5169 09:C930: 18           	clc
  5170 09:C931: A9 25 00     	lda	#$25
  5171 09:C934: 65 14        	adc	<L154+current_header_0
  5172 09:C936: 85 01        	sta	<R0
  5173 09:C938: A9 00 00     	lda	#$0
  5174 09:C93B: 65 16        	adc	<L154+current_header_0+2
  5175 09:C93D: 85 03        	sta	<R0+2
  5176 09:C93F: D4 03        	pei	<R0+2
  5177 09:C941: D4 01        	pei	<R0
  5178 09:C943: 22 xx xx xx  	jsl	~~memcpy
  5179                        ;  memcpy(&current_header->Align,&current_file->da
                    ta[data_offset+0x1C],sizeof(DWORD));
  5180                        	.line	521
  5181 09:C947: F4 04 00     	pea	#<$4
  5182 09:C94A: 18           	clc
  5183 09:C94B: A9 1C 00     	lda	#$1c
  5184 09:C94E: 65 12        	adc	<L154+data_offset_0
  Mon Sep 27 2021  9:39                                                Page 97


  5185 09:C950: 85 01        	sta	<R0
  5186 09:C952: A0 00 00     	ldy	#$0
  5187 09:C955: A5 01        	lda	<R0
  5188 09:C957: 10 01        	bpl	L171
  5189 09:C959: 88           	dey
  5190                        L171:
  5191 09:C95A: 85 01        	sta	<R0
  5192 09:C95C: 84 03        	sty	<R0+2
  5193 09:C95E: 18           	clc
  5194 09:C95F: A0 0A 00     	ldy	#$a
  5195 09:C962: B7 0E        	lda	[<L154+current_file_0],Y
  5196 09:C964: 65 01        	adc	<R0
  5197 09:C966: 85 05        	sta	<R1
  5198 09:C968: A0 0C 00     	ldy	#$c
  5199 09:C96B: B7 0E        	lda	[<L154+current_file_0],Y
  5200 09:C96D: 65 03        	adc	<R0+2
  5201 09:C96F: 85 07        	sta	<R1+2
  5202 09:C971: D4 07        	pei	<R1+2
  5203 09:C973: D4 05        	pei	<R1
  5204 09:C975: 18           	clc
  5205 09:C976: A9 29 00     	lda	#$29
  5206 09:C979: 65 14        	adc	<L154+current_header_0
  5207 09:C97B: 85 01        	sta	<R0
  5208 09:C97D: A9 00 00     	lda	#$0
  5209 09:C980: 65 16        	adc	<L154+current_header_0+2
  5210 09:C982: 85 03        	sta	<R0+2
  5211 09:C984: D4 03        	pei	<R0+2
  5212 09:C986: D4 01        	pei	<R0
  5213 09:C988: 22 xx xx xx  	jsl	~~memcpy
  5214                        ;  memcpy(&current_header->NumSEx,&current_file->d
                    ata[data_offset+0x20],sizeof(BYTE));
  5215                        	.line	522
  5216 09:C98C: F4 01 00     	pea	#<$1
  5217 09:C98F: 18           	clc
  5218 09:C990: A9 20 00     	lda	#$20
  5219 09:C993: 65 12        	adc	<L154+data_offset_0
  5220 09:C995: 85 01        	sta	<R0
  5221 09:C997: A0 00 00     	ldy	#$0
  5222 09:C99A: A5 01        	lda	<R0
  5223 09:C99C: 10 01        	bpl	L172
  5224 09:C99E: 88           	dey
  5225                        L172:
  5226 09:C99F: 85 01        	sta	<R0
  5227 09:C9A1: 84 03        	sty	<R0+2
  5228 09:C9A3: 18           	clc
  5229 09:C9A4: A0 0A 00     	ldy	#$a
  5230 09:C9A7: B7 0E        	lda	[<L154+current_file_0],Y
  5231 09:C9A9: 65 01        	adc	<R0
  5232 09:C9AB: 85 05        	sta	<R1
  5233 09:C9AD: A0 0C 00     	ldy	#$c
  5234 09:C9B0: B7 0E        	lda	[<L154+current_file_0],Y
  5235 09:C9B2: 65 03        	adc	<R0+2
  5236 09:C9B4: 85 07        	sta	<R1+2
  5237 09:C9B6: D4 07        	pei	<R1+2
  5238 09:C9B8: D4 05        	pei	<R1
  5239 09:C9BA: 18           	clc
  5240 09:C9BB: A9 2D 00     	lda	#$2d
  5241 09:C9BE: 65 14        	adc	<L154+current_header_0
  Mon Sep 27 2021  9:39                                                Page 98


  5242 09:C9C0: 85 01        	sta	<R0
  5243 09:C9C2: A9 00 00     	lda	#$0
  5244 09:C9C5: 65 16        	adc	<L154+current_header_0+2
  5245 09:C9C7: 85 03        	sta	<R0+2
  5246 09:C9C9: D4 03        	pei	<R0+2
  5247 09:C9CB: D4 01        	pei	<R0
  5248 09:C9CD: 22 xx xx xx  	jsl	~~memcpy
  5249                        ;  memcpy(&current_header->undefine_4,&current_fil
                    e->data[data_offset+0x21],sizeof(BYTE));
  5250                        	.line	523
  5251 09:C9D1: F4 01 00     	pea	#<$1
  5252 09:C9D4: 18           	clc
  5253 09:C9D5: A9 21 00     	lda	#$21
  5254 09:C9D8: 65 12        	adc	<L154+data_offset_0
  5255 09:C9DA: 85 01        	sta	<R0
  5256 09:C9DC: A0 00 00     	ldy	#$0
  5257 09:C9DF: A5 01        	lda	<R0
  5258 09:C9E1: 10 01        	bpl	L173
  5259 09:C9E3: 88           	dey
  5260                        L173:
  5261 09:C9E4: 85 01        	sta	<R0
  5262 09:C9E6: 84 03        	sty	<R0+2
  5263 09:C9E8: 18           	clc
  5264 09:C9E9: A0 0A 00     	ldy	#$a
  5265 09:C9EC: B7 0E        	lda	[<L154+current_file_0],Y
  5266 09:C9EE: 65 01        	adc	<R0
  5267 09:C9F0: 85 05        	sta	<R1
  5268 09:C9F2: A0 0C 00     	ldy	#$c
  5269 09:C9F5: B7 0E        	lda	[<L154+current_file_0],Y
  5270 09:C9F7: 65 03        	adc	<R0+2
  5271 09:C9F9: 85 07        	sta	<R1+2
  5272 09:C9FB: D4 07        	pei	<R1+2
  5273 09:C9FD: D4 05        	pei	<R1
  5274 09:C9FF: 18           	clc
  5275 09:CA00: A9 2F 00     	lda	#$2f
  5276 09:CA03: 65 14        	adc	<L154+current_header_0
  5277 09:CA05: 85 01        	sta	<R0
  5278 09:CA07: A9 00 00     	lda	#$0
  5279 09:CA0A: 65 16        	adc	<L154+current_header_0+2
  5280 09:CA0C: 85 03        	sta	<R0+2
  5281 09:CA0E: D4 03        	pei	<R0+2
  5282 09:CA10: D4 01        	pei	<R0
  5283 09:CA12: 22 xx xx xx  	jsl	~~memcpy
  5284                        ;  memcpy(&current_header->SegNum,&current_file->d
                    ata[data_offset+0x22],sizeof(WORD));
  5285                        	.line	524
  5286 09:CA16: F4 02 00     	pea	#<$2
  5287 09:CA19: 18           	clc
  5288 09:CA1A: A9 22 00     	lda	#$22
  5289 09:CA1D: 65 12        	adc	<L154+data_offset_0
  5290 09:CA1F: 85 01        	sta	<R0
  5291 09:CA21: A0 00 00     	ldy	#$0
  5292 09:CA24: A5 01        	lda	<R0
  5293 09:CA26: 10 01        	bpl	L174
  5294 09:CA28: 88           	dey
  5295                        L174:
  5296 09:CA29: 85 01        	sta	<R0
  5297 09:CA2B: 84 03        	sty	<R0+2
  Mon Sep 27 2021  9:39                                                Page 99


  5298 09:CA2D: 18           	clc
  5299 09:CA2E: A0 0A 00     	ldy	#$a
  5300 09:CA31: B7 0E        	lda	[<L154+current_file_0],Y
  5301 09:CA33: 65 01        	adc	<R0
  5302 09:CA35: 85 05        	sta	<R1
  5303 09:CA37: A0 0C 00     	ldy	#$c
  5304 09:CA3A: B7 0E        	lda	[<L154+current_file_0],Y
  5305 09:CA3C: 65 03        	adc	<R0+2
  5306 09:CA3E: 85 07        	sta	<R1+2
  5307 09:CA40: D4 07        	pei	<R1+2
  5308 09:CA42: D4 05        	pei	<R1
  5309 09:CA44: 18           	clc
  5310 09:CA45: A9 30 00     	lda	#$30
  5311 09:CA48: 65 14        	adc	<L154+current_header_0
  5312 09:CA4A: 85 01        	sta	<R0
  5313 09:CA4C: A9 00 00     	lda	#$0
  5314 09:CA4F: 65 16        	adc	<L154+current_header_0+2
  5315 09:CA51: 85 03        	sta	<R0+2
  5316 09:CA53: D4 03        	pei	<R0+2
  5317 09:CA55: D4 01        	pei	<R0
  5318 09:CA57: 22 xx xx xx  	jsl	~~memcpy
  5319                        ;  memcpy(&current_header->EntryPointOffset,&curre
                    nt_file->data[data_offset+0x24],sizeof(DWORD));
  5320                        	.line	525
  5321 09:CA5B: F4 04 00     	pea	#<$4
  5322 09:CA5E: 18           	clc
  5323 09:CA5F: A9 24 00     	lda	#$24
  5324 09:CA62: 65 12        	adc	<L154+data_offset_0
  5325 09:CA64: 85 01        	sta	<R0
  5326 09:CA66: A0 00 00     	ldy	#$0
  5327 09:CA69: A5 01        	lda	<R0
  5328 09:CA6B: 10 01        	bpl	L175
  5329 09:CA6D: 88           	dey
  5330                        L175:
  5331 09:CA6E: 85 01        	sta	<R0
  5332 09:CA70: 84 03        	sty	<R0+2
  5333 09:CA72: 18           	clc
  5334 09:CA73: A0 0A 00     	ldy	#$a
  5335 09:CA76: B7 0E        	lda	[<L154+current_file_0],Y
  5336 09:CA78: 65 01        	adc	<R0
  5337 09:CA7A: 85 05        	sta	<R1
  5338 09:CA7C: A0 0C 00     	ldy	#$c
  5339 09:CA7F: B7 0E        	lda	[<L154+current_file_0],Y
  5340 09:CA81: 65 03        	adc	<R0+2
  5341 09:CA83: 85 07        	sta	<R1+2
  5342 09:CA85: D4 07        	pei	<R1+2
  5343 09:CA87: D4 05        	pei	<R1
  5344 09:CA89: 18           	clc
  5345 09:CA8A: A9 32 00     	lda	#$32
  5346 09:CA8D: 65 14        	adc	<L154+current_header_0
  5347 09:CA8F: 85 01        	sta	<R0
  5348 09:CA91: A9 00 00     	lda	#$0
  5349 09:CA94: 65 16        	adc	<L154+current_header_0+2
  5350 09:CA96: 85 03        	sta	<R0+2
  5351 09:CA98: D4 03        	pei	<R0+2
  5352 09:CA9A: D4 01        	pei	<R0
  5353 09:CA9C: 22 xx xx xx  	jsl	~~memcpy
  5354                        ;  memcpy(&current_header->DispNameOffset,&current
  Mon Sep 27 2021  9:39                                                Page 100


                    _file->data[data_offset+0x28],sizeof(WORD));       /* Load N
                    ame Offset */
  5355                        	.line	526
  5356 09:CAA0: F4 02 00     	pea	#<$2
  5357 09:CAA3: 18           	clc
  5358 09:CAA4: A9 28 00     	lda	#$28
  5359 09:CAA7: 65 12        	adc	<L154+data_offset_0
  5360 09:CAA9: 85 01        	sta	<R0
  5361 09:CAAB: A0 00 00     	ldy	#$0
  5362 09:CAAE: A5 01        	lda	<R0
  5363 09:CAB0: 10 01        	bpl	L176
  5364 09:CAB2: 88           	dey
  5365                        L176:
  5366 09:CAB3: 85 01        	sta	<R0
  5367 09:CAB5: 84 03        	sty	<R0+2
  5368 09:CAB7: 18           	clc
  5369 09:CAB8: A0 0A 00     	ldy	#$a
  5370 09:CABB: B7 0E        	lda	[<L154+current_file_0],Y
  5371 09:CABD: 65 01        	adc	<R0
  5372 09:CABF: 85 05        	sta	<R1
  5373 09:CAC1: A0 0C 00     	ldy	#$c
  5374 09:CAC4: B7 0E        	lda	[<L154+current_file_0],Y
  5375 09:CAC6: 65 03        	adc	<R0+2
  5376 09:CAC8: 85 07        	sta	<R1+2
  5377 09:CACA: D4 07        	pei	<R1+2
  5378 09:CACC: D4 05        	pei	<R1
  5379 09:CACE: 18           	clc
  5380 09:CACF: A9 36 00     	lda	#$36
  5381 09:CAD2: 65 14        	adc	<L154+current_header_0
  5382 09:CAD4: 85 01        	sta	<R0
  5383 09:CAD6: A9 00 00     	lda	#$0
  5384 09:CAD9: 65 16        	adc	<L154+current_header_0+2
  5385 09:CADB: 85 03        	sta	<R0+2
  5386 09:CADD: D4 03        	pei	<R0+2
  5387 09:CADF: D4 01        	pei	<R0
  5388 09:CAE1: 22 xx xx xx  	jsl	~~memcpy
  5389                        ;  memcpy(&current_header->DispDataOffset,&current
                    _file->data[data_offset+0x2A],sizeof(WORD));       /* Segmen
                    t Name Offset */
  5390                        	.line	527
  5391 09:CAE5: F4 02 00     	pea	#<$2
  5392 09:CAE8: 18           	clc
  5393 09:CAE9: A9 2A 00     	lda	#$2a
  5394 09:CAEC: 65 12        	adc	<L154+data_offset_0
  5395 09:CAEE: 85 01        	sta	<R0
  5396 09:CAF0: A0 00 00     	ldy	#$0
  5397 09:CAF3: A5 01        	lda	<R0
  5398 09:CAF5: 10 01        	bpl	L177
  5399 09:CAF7: 88           	dey
  5400                        L177:
  5401 09:CAF8: 85 01        	sta	<R0
  5402 09:CAFA: 84 03        	sty	<R0+2
  5403 09:CAFC: 18           	clc
  5404 09:CAFD: A0 0A 00     	ldy	#$a
  5405 09:CB00: B7 0E        	lda	[<L154+current_file_0],Y
  5406 09:CB02: 65 01        	adc	<R0
  5407 09:CB04: 85 05        	sta	<R1
  5408 09:CB06: A0 0C 00     	ldy	#$c
  Mon Sep 27 2021  9:39                                                Page 101


  5409 09:CB09: B7 0E        	lda	[<L154+current_file_0],Y
  5410 09:CB0B: 65 03        	adc	<R0+2
  5411 09:CB0D: 85 07        	sta	<R1+2
  5412 09:CB0F: D4 07        	pei	<R1+2
  5413 09:CB11: D4 05        	pei	<R1
  5414 09:CB13: 18           	clc
  5415 09:CB14: A9 38 00     	lda	#$38
  5416 09:CB17: 65 14        	adc	<L154+current_header_0
  5417 09:CB19: 85 01        	sta	<R0
  5418 09:CB1B: A9 00 00     	lda	#$0
  5419 09:CB1E: 65 16        	adc	<L154+current_header_0+2
  5420 09:CB20: 85 03        	sta	<R0+2
  5421 09:CB22: D4 03        	pei	<R0+2
  5422 09:CB24: D4 01        	pei	<R0
  5423 09:CB26: 22 xx xx xx  	jsl	~~memcpy
  5424                        ;
  5425                        ;  /********************************************/
  5426                        ;  /**  On va valider les données récupérées  **/
  5427                        ;  /********************************************/
  5428                        ;  /* Taille du Segment */
  5429                        ;  if((int)(data_offset + current_header->ByteCnt)
                     > (int) current_file->data_length)
  5430                        	.line	533
  5431                        ;    {
  5432 09:CB2A: A0 00 00     	ldy	#$0
  5433 09:CB2D: A5 12        	lda	<L154+data_offset_0
  5434 09:CB2F: 10 01        	bpl	L178
  5435 09:CB31: 88           	dey
  5436                        L178:
  5437 09:CB32: 85 01        	sta	<R0
  5438 09:CB34: 84 03        	sty	<R0+2
  5439 09:CB36: 18           	clc
  5440 09:CB37: A5 01        	lda	<R0
  5441 09:CB39: A0 0C 00     	ldy	#$c
  5442 09:CB3C: 77 14        	adc	[<L154+current_header_0],Y
  5443 09:CB3E: 85 05        	sta	<R1
  5444 09:CB40: A5 03        	lda	<R0+2
  5445 09:CB42: A0 0E 00     	ldy	#$e
  5446 09:CB45: 77 14        	adc	[<L154+current_header_0],Y
  5447 09:CB47: 85 07        	sta	<R1+2
  5448 09:CB49: 38           	sec
  5449 09:CB4A: A0 08 00     	ldy	#$8
  5450 09:CB4D: B7 0E        	lda	[<L154+current_file_0],Y
  5451 09:CB4F: E5 05        	sbc	<R1
  5452 09:CB51: 70 03        	bvs	L179
  5453 09:CB53: 49 00 80     	eor	#$8000
  5454                        L179:
  5455 09:CB56: 10 03        	bpl	L180
  5456 09:CB58: 82 06 00     	brl	L10058
  5457                        L180:
  5458                        	.line	534
  5459                        ;      //printf("  Segment #%d Header Error : Inva
                    lid 'ByteCnt' value (the segment size can't be larger than t
                    he OMF file).\n",current_file->nb_segment+1);
  5460                        ;      return(1);
  5461                        	.line	536
  5462 09:CB5B: A9 01 00     	lda	#$1
  5463 09:CB5E: 82 E5 FA     	brl	L159
  Mon Sep 27 2021  9:39                                                Page 102


  5464                        ;    }
  5465                        	.line	537
  5466                        ;  if(current_header->ByteCnt < SEGMENT_HEADER_SIZ
                    E_V2)
  5467                        L10058:
  5468                        	.line	538
  5469                        ;    {
  5470 09:CB61: A0 0C 00     	ldy	#$c
  5471 09:CB64: B7 14        	lda	[<L154+current_header_0],Y
  5472 09:CB66: C9 40 00     	cmp	#<$40
  5473 09:CB69: A0 0E 00     	ldy	#$e
  5474 09:CB6C: B7 14        	lda	[<L154+current_header_0],Y
  5475 09:CB6E: E9 00 00     	sbc	#^$40
  5476 09:CB71: 90 03        	bcc	L181
  5477 09:CB73: 82 06 00     	brl	L10059
  5478                        L181:
  5479                        	.line	539
  5480                        ;      //printf("  Segment #%d Header Error : Inva
                    lid 'ByteCnt' value (the segment size can't be smaller than 
                    the Sgement Header size).\n",current_file->nb_segment+1);
  5481                        ;      return(1);
  5482                        	.line	541
  5483 09:CB76: A9 01 00     	lda	#$1
  5484 09:CB79: 82 CA FA     	brl	L159
  5485                        ;    }
  5486                        	.line	542
  5487                        ;
  5488                        ;  /* Nombre de 0x00 à ajouter à la fin */
  5489                        ;  if(current_header->ResSpc >= 0x010000)
  5490                        L10059:
  5491                        	.line	545
  5492                        ;    {
  5493 09:CB7C: A0 10 00     	ldy	#$10
  5494 09:CB7F: B7 14        	lda	[<L154+current_header_0],Y
  5495 09:CB81: C9 00 00     	cmp	#<$10000
  5496 09:CB84: A0 12 00     	ldy	#$12
  5497 09:CB87: B7 14        	lda	[<L154+current_header_0],Y
  5498 09:CB89: E9 01 00     	sbc	#^$10000
  5499 09:CB8C: B0 03        	bcs	L182
  5500 09:CB8E: 82 06 00     	brl	L10060
  5501                        L182:
  5502                        	.line	546
  5503                        ;      //printf("  Segment #%d Header Error : Inva
                    lid 'ResSpc' value (the size can't be larger than 64 KB).\n"
                    ,current_file->nb_segment+1);
  5504                        ;      return(1);
  5505                        	.line	548
  5506 09:CB91: A9 01 00     	lda	#$1
  5507 09:CB94: 82 AF FA     	brl	L159
  5508                        ;    }
  5509                        	.line	549
  5510                        ;
  5511                        ;  /* La taille d'un Segment en mémoire ne peut pa
                    s dépasser 64 KB */
  5512                        ;  if(current_header->Length >= 0x010000)
  5513                        L10060:
  5514                        	.line	552
  5515                        ;    {
  Mon Sep 27 2021  9:39                                                Page 103


  5516 09:CB97: A0 14 00     	ldy	#$14
  5517 09:CB9A: B7 14        	lda	[<L154+current_header_0],Y
  5518 09:CB9C: C9 00 00     	cmp	#<$10000
  5519 09:CB9F: A0 16 00     	ldy	#$16
  5520 09:CBA2: B7 14        	lda	[<L154+current_header_0],Y
  5521 09:CBA4: E9 01 00     	sbc	#^$10000
  5522 09:CBA7: B0 03        	bcs	L183
  5523 09:CBA9: 82 06 00     	brl	L10061
  5524                        L183:
  5525                        	.line	553
  5526                        ;      //printf("  Segment #%d Header Error : Inva
                    lid 'Length' value (the segment size can't be larger than 64
                     KB).\n",current_file->nb_segment+1);
  5527                        ;      return(1);
  5528                        	.line	555
  5529 09:CBAC: A9 01 00     	lda	#$1
  5530 09:CBAF: 82 94 FA     	brl	L159
  5531                        ;    }
  5532                        	.line	556
  5533                        ;
  5534                        ;  /* LabLen : 0 ou 10 */
  5535                        ;  if(current_header->LabLen != 0x00 && current_he
                    ader->LabLen != 0x0A)
  5536                        L10061:
  5537                        	.line	559
  5538                        ;    {
  5539 09:CBB2: A0 1A 00     	ldy	#$1a
  5540 09:CBB5: B7 14        	lda	[<L154+current_header_0],Y
  5541 09:CBB7: 29 FF 00     	and	#$ff
  5542 09:CBBA: D0 03        	bne	L184
  5543 09:CBBC: 82 16 00     	brl	L10062
  5544                        L184:
  5545 09:CBBF: E2 20        	sep	#$20
  5546                        	longa	off
  5547 09:CBC1: A0 1A 00     	ldy	#$1a
  5548 09:CBC4: B7 14        	lda	[<L154+current_header_0],Y
  5549 09:CBC6: C9 0A        	cmp	#<$a
  5550 09:CBC8: C2 20        	rep	#$20
  5551                        	longa	on
  5552 09:CBCA: D0 03        	bne	L185
  5553 09:CBCC: 82 06 00     	brl	L10062
  5554                        L185:
  5555                        	.line	560
  5556                        ;      //printf("  Segment #%d Header Error : Inva
                    lid 'LabLen' value (the value should be 0 or 10 for the Appl
                    e IIgs).\n",current_file->nb_segment+1);
  5557                        ;      return(1);
  5558                        	.line	562
  5559 09:CBCF: A9 01 00     	lda	#$1
  5560 09:CBD2: 82 71 FA     	brl	L159
  5561                        ;    }
  5562                        	.line	563
  5563                        ;
  5564                        ;  /* Num Len : Tjs à 4 pour le IIgs */
  5565                        ;  if(current_header->NumLen != 0x04)
  5566                        L10062:
  5567                        	.line	566
  5568                        ;    {
  Mon Sep 27 2021  9:39                                                Page 104


  5569 09:CBD5: E2 20        	sep	#$20
  5570                        	longa	off
  5571 09:CBD7: A0 1B 00     	ldy	#$1b
  5572 09:CBDA: B7 14        	lda	[<L154+current_header_0],Y
  5573 09:CBDC: C9 04        	cmp	#<$4
  5574 09:CBDE: C2 20        	rep	#$20
  5575                        	longa	on
  5576 09:CBE0: D0 03        	bne	L186
  5577 09:CBE2: 82 06 00     	brl	L10063
  5578                        L186:
  5579                        	.line	567
  5580                        ;      //printf("  Segment #%d Header Error : Inva
                    lid 'NumLen' value (the value should be 4 for the Apple IIgs
                    ).\n",current_file->nb_segment+1);
  5581                        ;      return(1);
  5582                        	.line	569
  5583 09:CBE5: A9 01 00     	lda	#$1
  5584 09:CBE8: 82 5B FA     	brl	L159
  5585                        ;    }
  5586                        	.line	570
  5587                        ;
  5588                        ;  /* BankSize : <= 64 KB */
  5589                        ;  if(current_header->BankSize > 0x010000)
  5590                        L10063:
  5591                        	.line	573
  5592                        ;    {
  5593 09:CBEB: A9 00 00     	lda	#$0
  5594 09:CBEE: A0 1D 00     	ldy	#$1d
  5595 09:CBF1: D7 14        	cmp	[<L154+current_header_0],Y
  5596 09:CBF3: A9 01 00     	lda	#$1
  5597 09:CBF6: A0 1F 00     	ldy	#$1f
  5598 09:CBF9: F7 14        	sbc	[<L154+current_header_0],Y
  5599 09:CBFB: 90 03        	bcc	L187
  5600 09:CBFD: 82 06 00     	brl	L10064
  5601                        L187:
  5602                        	.line	574
  5603                        ;      //printf("  Segment #%d Header Error : Inva
                    lid 'BankSize' value (the value can't be larger than 64 KB).
                    \n",current_file->nb_segment+1);
  5604                        ;      return(1);
  5605                        	.line	576
  5606 09:CC00: A9 01 00     	lda	#$1
  5607 09:CC03: 82 40 FA     	brl	L159
  5608                        ;    }
  5609                        	.line	577
  5610                        ;
  5611                        ;  /* Kind */
  5612                        ;  if((current_header->Kind & 0x001F) != 0x0000 &&
                     (current_header->Kind & 0x001F) != 0x0001 && (current_heade
                    r->Kind & 0x001F) != 0x0002 &&
  5613                        L10064:
  5614                        	.line	580
  5615                        ;     (current_header->Kind & 0x001F) != 0x0004 &&
                     (current_header->Kind & 0x001F) != 0x0008 && (current_heade
                    r->Kind & 0x001F) != 0x0010 &&
  5616                        ;     (current_header->Kind & 0x001F) != 0x0012)
  5617                        ;    {
  5618 09:CC06: A0 21 00     	ldy	#$21
  Mon Sep 27 2021  9:39                                                Page 105


  5619 09:CC09: B7 14        	lda	[<L154+current_header_0],Y
  5620 09:CC0B: 29 1F 00     	and	#<$1f
  5621 09:CC0E: D0 03        	bne	L188
  5622 09:CC10: 82 7E 00     	brl	L10065
  5623                        L188:
  5624 09:CC13: A0 21 00     	ldy	#$21
  5625 09:CC16: B7 14        	lda	[<L154+current_header_0],Y
  5626 09:CC18: 29 1F 00     	and	#<$1f
  5627 09:CC1B: 85 01        	sta	<R0
  5628 09:CC1D: A5 01        	lda	<R0
  5629 09:CC1F: C9 01 00     	cmp	#<$1
  5630 09:CC22: D0 03        	bne	L189
  5631 09:CC24: 82 6A 00     	brl	L10065
  5632                        L189:
  5633 09:CC27: A0 21 00     	ldy	#$21
  5634 09:CC2A: B7 14        	lda	[<L154+current_header_0],Y
  5635 09:CC2C: 29 1F 00     	and	#<$1f
  5636 09:CC2F: 85 01        	sta	<R0
  5637 09:CC31: A5 01        	lda	<R0
  5638 09:CC33: C9 02 00     	cmp	#<$2
  5639 09:CC36: D0 03        	bne	L190
  5640 09:CC38: 82 56 00     	brl	L10065
  5641                        L190:
  5642 09:CC3B: A0 21 00     	ldy	#$21
  5643 09:CC3E: B7 14        	lda	[<L154+current_header_0],Y
  5644 09:CC40: 29 1F 00     	and	#<$1f
  5645 09:CC43: 85 01        	sta	<R0
  5646 09:CC45: A5 01        	lda	<R0
  5647 09:CC47: C9 04 00     	cmp	#<$4
  5648 09:CC4A: D0 03        	bne	L191
  5649 09:CC4C: 82 42 00     	brl	L10065
  5650                        L191:
  5651 09:CC4F: A0 21 00     	ldy	#$21
  5652 09:CC52: B7 14        	lda	[<L154+current_header_0],Y
  5653 09:CC54: 29 1F 00     	and	#<$1f
  5654 09:CC57: 85 01        	sta	<R0
  5655 09:CC59: A5 01        	lda	<R0
  5656 09:CC5B: C9 08 00     	cmp	#<$8
  5657 09:CC5E: D0 03        	bne	L192
  5658 09:CC60: 82 2E 00     	brl	L10065
  5659                        L192:
  5660 09:CC63: A0 21 00     	ldy	#$21
  5661 09:CC66: B7 14        	lda	[<L154+current_header_0],Y
  5662 09:CC68: 29 1F 00     	and	#<$1f
  5663 09:CC6B: 85 01        	sta	<R0
  5664 09:CC6D: A5 01        	lda	<R0
  5665 09:CC6F: C9 10 00     	cmp	#<$10
  5666 09:CC72: D0 03        	bne	L193
  5667 09:CC74: 82 1A 00     	brl	L10065
  5668                        L193:
  5669 09:CC77: A0 21 00     	ldy	#$21
  5670 09:CC7A: B7 14        	lda	[<L154+current_header_0],Y
  5671 09:CC7C: 29 1F 00     	and	#<$1f
  5672 09:CC7F: 85 01        	sta	<R0
  5673 09:CC81: A5 01        	lda	<R0
  5674 09:CC83: C9 12 00     	cmp	#<$12
  5675 09:CC86: D0 03        	bne	L194
  5676 09:CC88: 82 06 00     	brl	L10065
  Mon Sep 27 2021  9:39                                                Page 106


  5677                        L194:
  5678                        	.line	583
  5679                        ;      //printf("  Segment #%d Header Error : Inva
                    lid 'Kind' value (possible values are 0,1,2,4,8,16 or 18).\n
                    ",current_file->nb_segment+1);
  5680                        ;      return(1);
  5681                        	.line	585
  5682 09:CC8B: A9 01 00     	lda	#$1
  5683 09:CC8E: 82 B5 F9     	brl	L159
  5684                        ;    }
  5685                        	.line	586
  5686                        ;
  5687                        ;  /* Org : < 64 KB */
  5688                        ;  if(current_header->Org >= 0x010000)
  5689                        L10065:
  5690                        	.line	589
  5691                        ;    //printf("  Segment #%d Header Warning : Unus
                    ual 'Org' value (the value is usually < 64 KB).\n",current_f
                    ile->nb_segment+1);
  5692                        ;
  5693                        ;  /* Align : 0, 0x0100 ou 0x010000 */
  5694                        ;  if(current_header->Align != 0x00 && current_hea
                    der->Align != 0x0100 && current_header->Align != 0x010000)
  5695 09:CC91: A0 25 00     	ldy	#$25
  5696 09:CC94: B7 14        	lda	[<L154+current_header_0],Y
  5697 09:CC96: C9 00 00     	cmp	#<$10000
  5698 09:CC99: A0 27 00     	ldy	#$27
  5699 09:CC9C: B7 14        	lda	[<L154+current_header_0],Y
  5700 09:CC9E: E9 01 00     	sbc	#^$10000
  5701 09:CCA1: B0 03        	bcs	L195
  5702 09:CCA3: 82 43 00     	brl	L10066
  5703                        L195:
  5704                        	.line	593
  5705                        ;    {
  5706 09:CCA6: A0 29 00     	ldy	#$29
  5707 09:CCA9: B7 14        	lda	[<L154+current_header_0],Y
  5708 09:CCAB: A0 2B 00     	ldy	#$2b
  5709 09:CCAE: 17 14        	ora	[<L154+current_header_0],Y
  5710 09:CCB0: D0 03        	bne	L196
  5711 09:CCB2: 82 34 00     	brl	L10067
  5712                        L196:
  5713 09:CCB5: A0 29 00     	ldy	#$29
  5714 09:CCB8: B7 14        	lda	[<L154+current_header_0],Y
  5715 09:CCBA: C9 00 01     	cmp	#<$100
  5716 09:CCBD: D0 08        	bne	L197
  5717 09:CCBF: A0 2B 00     	ldy	#$2b
  5718 09:CCC2: B7 14        	lda	[<L154+current_header_0],Y
  5719 09:CCC4: C9 00 00     	cmp	#^$100
  5720                        L197:
  5721 09:CCC7: D0 03        	bne	L198
  5722 09:CCC9: 82 1D 00     	brl	L10067
  5723                        L198:
  5724 09:CCCC: A0 29 00     	ldy	#$29
  5725 09:CCCF: B7 14        	lda	[<L154+current_header_0],Y
  5726 09:CCD1: C9 00 00     	cmp	#<$10000
  5727 09:CCD4: D0 08        	bne	L199
  5728 09:CCD6: A0 2B 00     	ldy	#$2b
  5729 09:CCD9: B7 14        	lda	[<L154+current_header_0],Y
  Mon Sep 27 2021  9:39                                                Page 107


  5730 09:CCDB: C9 01 00     	cmp	#^$10000
  5731                        L199:
  5732 09:CCDE: D0 03        	bne	L200
  5733 09:CCE0: 82 06 00     	brl	L10067
  5734                        L200:
  5735                        	.line	594
  5736                        ;      //printf("  Segment #%d Header Error : Inva
                    lid 'Align' value (the value should be 0, 256 or 64KB or for
                     the Apple IIgs).\n",current_file->nb_segment+1);
  5737                        ;      return(1);
  5738                        	.line	596
  5739 09:CCE3: A9 01 00     	lda	#$1
  5740 09:CCE6: 82 5D F9     	brl	L159
  5741                        ;    }
  5742                        	.line	597
  5743                        ;
  5744                        ;  /* NumSEx : Tjs à 0 */
  5745                        ;  if(current_header->NumSEx != 0x00)
  5746                        L10067:
  5747                        L10066:
  5748                        	.line	600
  5749                        ;    {
  5750 09:CCE9: A0 2D 00     	ldy	#$2d
  5751 09:CCEC: B7 14        	lda	[<L154+current_header_0],Y
  5752 09:CCEE: 29 FF 00     	and	#$ff
  5753 09:CCF1: D0 03        	bne	L201
  5754 09:CCF3: 82 06 00     	brl	L10068
  5755                        L201:
  5756                        	.line	601
  5757                        ;      //printf("  Segment #%d Header Error : Inva
                    lid 'NumSEx' value (the value should be 0 for the Apple IIgs
                    ).\n",current_file->nb_segment+1);
  5758                        ;      return(1);
  5759                        	.line	603
  5760 09:CCF6: A9 01 00     	lda	#$1
  5761 09:CCF9: 82 4A F9     	brl	L159
  5762                        ;    }
  5763                        	.line	604
  5764                        ;
  5765                        ;  /* SegNum : 1 -> N */
  5766                        ;  if(current_header->SegNum != (WORD) current_fil
                    e->nb_segment+1)
  5767                        L10068:
  5768                        	.line	607
  5769                        ;    {
  5770 09:CCFC: A0 0E 00     	ldy	#$e
  5771 09:CCFF: B7 0E        	lda	[<L154+current_file_0],Y
  5772 09:CD01: 1A           	ina
  5773 09:CD02: 85 01        	sta	<R0
  5774 09:CD04: A5 01        	lda	<R0
  5775 09:CD06: A0 30 00     	ldy	#$30
  5776 09:CD09: D7 14        	cmp	[<L154+current_header_0],Y
  5777 09:CD0B: D0 03        	bne	L202
  5778 09:CD0D: 82 06 00     	brl	L10069
  5779                        L202:
  5780                        	.line	608
  5781                        ;      //printf("  Segment #%d Header Error : Inva
                    lid 'SegNum' value (the value should be %d and we have %d fo
  Mon Sep 27 2021  9:39                                                Page 108


                    r the Apple IIgs).\n",current_file->nb_segment+1,current_fil
                    e->nb_segment+1,current_header->SegNum);
  5782                        ;      return(1);
  5783                        	.line	610
  5784 09:CD10: A9 01 00     	lda	#$1
  5785 09:CD13: 82 30 F9     	brl	L159
  5786                        ;    }
  5787                        	.line	611
  5788                        ;
  5789                        ;  /* Entry Point */
  5790                        ;  if(current_header->EntryPointOffset > current_h
                    eader->Length)
  5791                        L10069:
  5792                        	.line	614
  5793                        ;    {
  5794 09:CD16: A0 14 00     	ldy	#$14
  5795 09:CD19: B7 14        	lda	[<L154+current_header_0],Y
  5796 09:CD1B: A0 32 00     	ldy	#$32
  5797 09:CD1E: D7 14        	cmp	[<L154+current_header_0],Y
  5798 09:CD20: A0 16 00     	ldy	#$16
  5799 09:CD23: B7 14        	lda	[<L154+current_header_0],Y
  5800 09:CD25: A0 34 00     	ldy	#$34
  5801 09:CD28: F7 14        	sbc	[<L154+current_header_0],Y
  5802 09:CD2A: 90 03        	bcc	L203
  5803 09:CD2C: 82 06 00     	brl	L10070
  5804                        L203:
  5805                        	.line	615
  5806                        ;      //printf("  Segment #%d Header Error : Inva
                    lid 'EntryPointOffset' value (the value can't be larger than
                     the Segment size).\n",current_file->nb_segment+1);
  5807                        ;      return(1);
  5808                        	.line	617
  5809 09:CD2F: A9 01 00     	lda	#$1
  5810 09:CD32: 82 11 F9     	brl	L159
  5811                        ;    }
  5812                        	.line	618
  5813                        ;
  5814                        ;  /* DispName offset (devrait être 44 si TmpOrg e
                    st vide) */
  5815                        ;  if(current_header->DispNameOffset < SEGMENT_HEA
                    DER_MIN_SIZE_V2)
  5816                        L10070:
  5817                        	.line	621
  5818                        ;    {
  5819 09:CD35: 38           	sec
  5820 09:CD36: A0 36 00     	ldy	#$36
  5821 09:CD39: B7 14        	lda	[<L154+current_header_0],Y
  5822 09:CD3B: E9 2C 00     	sbc	#<$2c
  5823 09:CD3E: 70 03        	bvs	L204
  5824 09:CD40: 49 00 80     	eor	#$8000
  5825                        L204:
  5826 09:CD43: 10 03        	bpl	L205
  5827 09:CD45: 82 06 00     	brl	L10071
  5828                        L205:
  5829                        	.line	622
  5830                        ;      //printf("  Segment #%d Header Error : Inva
                    lid 'DispNameOffset' value (the value can't be smaller than 
                    the Segment Header size).\n",current_file->nb_segment+1);
  Mon Sep 27 2021  9:39                                                Page 109


  5831                        ;      return(1);
  5832                        	.line	624
  5833 09:CD48: A9 01 00     	lda	#$1
  5834 09:CD4B: 82 F8 F8     	brl	L159
  5835                        ;    }
  5836                        	.line	625
  5837                        ;  if(current_header->DispNameOffset > current_hea
                    der->ByteCnt)
  5838                        L10071:
  5839                        	.line	626
  5840                        ;    {
  5841 09:CD4E: A0 00 00     	ldy	#$0
  5842 09:CD51: 5A           	phy
  5843 09:CD52: A0 36 00     	ldy	#$36
  5844 09:CD55: B7 14        	lda	[<L154+current_header_0],Y
  5845 09:CD57: 7A           	ply
  5846 09:CD58: 2A           	rol	A
  5847 09:CD59: 6A           	ror	A
  5848 09:CD5A: 10 01        	bpl	L206
  5849 09:CD5C: 88           	dey
  5850                        L206:
  5851 09:CD5D: 85 01        	sta	<R0
  5852 09:CD5F: 84 03        	sty	<R0+2
  5853 09:CD61: A0 0C 00     	ldy	#$c
  5854 09:CD64: B7 14        	lda	[<L154+current_header_0],Y
  5855 09:CD66: C5 01        	cmp	<R0
  5856 09:CD68: A0 0E 00     	ldy	#$e
  5857 09:CD6B: B7 14        	lda	[<L154+current_header_0],Y
  5858 09:CD6D: E5 03        	sbc	<R0+2
  5859 09:CD6F: 90 03        	bcc	L207
  5860 09:CD71: 82 06 00     	brl	L10072
  5861                        L207:
  5862                        	.line	627
  5863                        ;      //printf("  Segment #%d Header Error : Inva
                    lid 'DispNameOffset' value (the value can't be larger than t
                    he Segment size).\n",current_file->nb_segment+1);
  5864                        ;      return(1);
  5865                        	.line	629
  5866 09:CD74: A9 01 00     	lda	#$1
  5867 09:CD77: 82 CC F8     	brl	L159
  5868                        ;    }
  5869                        	.line	630
  5870                        ;
  5871                        ;  /* DispData offset (devrait être 64 si TmpOrg e
                    st vide) */
  5872                        ;  if(current_header->DispDataOffset < SEGMENT_HEA
                    DER_MIN_SIZE_V2)
  5873                        L10072:
  5874                        	.line	633
  5875                        ;    {
  5876 09:CD7A: 38           	sec
  5877 09:CD7B: A0 38 00     	ldy	#$38
  5878 09:CD7E: B7 14        	lda	[<L154+current_header_0],Y
  5879 09:CD80: E9 2C 00     	sbc	#<$2c
  5880 09:CD83: 70 03        	bvs	L208
  5881 09:CD85: 49 00 80     	eor	#$8000
  5882                        L208:
  5883 09:CD88: 10 03        	bpl	L209
  Mon Sep 27 2021  9:39                                                Page 110


  5884 09:CD8A: 82 06 00     	brl	L10073
  5885                        L209:
  5886                        	.line	634
  5887                        ;      //printf("  Segment #%d Header Error : Inva
                    lid 'DispDataOffset' value (the value can't be smaller than 
                    the Segment Header size).\n",current_file->nb_segment+1);
  5888                        ;      return(1);
  5889                        	.line	636
  5890 09:CD8D: A9 01 00     	lda	#$1
  5891 09:CD90: 82 B3 F8     	brl	L159
  5892                        ;    }
  5893                        	.line	637
  5894                        ;  if(current_header->DispNameOffset > current_hea
                    der->ByteCnt)
  5895                        L10073:
  5896                        	.line	638
  5897                        ;    {
  5898 09:CD93: A0 00 00     	ldy	#$0
  5899 09:CD96: 5A           	phy
  5900 09:CD97: A0 36 00     	ldy	#$36
  5901 09:CD9A: B7 14        	lda	[<L154+current_header_0],Y
  5902 09:CD9C: 7A           	ply
  5903 09:CD9D: 2A           	rol	A
  5904 09:CD9E: 6A           	ror	A
  5905 09:CD9F: 10 01        	bpl	L210
  5906 09:CDA1: 88           	dey
  5907                        L210:
  5908 09:CDA2: 85 01        	sta	<R0
  5909 09:CDA4: 84 03        	sty	<R0+2
  5910 09:CDA6: A0 0C 00     	ldy	#$c
  5911 09:CDA9: B7 14        	lda	[<L154+current_header_0],Y
  5912 09:CDAB: C5 01        	cmp	<R0
  5913 09:CDAD: A0 0E 00     	ldy	#$e
  5914 09:CDB0: B7 14        	lda	[<L154+current_header_0],Y
  5915 09:CDB2: E5 03        	sbc	<R0+2
  5916 09:CDB4: 90 03        	bcc	L211
  5917 09:CDB6: 82 06 00     	brl	L10074
  5918                        L211:
  5919                        	.line	639
  5920                        ;      //printf("  Segment #%d Header Error : Inva
                    lid 'DispDataOffset' value (the value can't be larger than t
                    he Segment size).\n",current_file->nb_segment+1);
  5921                        ;      return(1);
  5922                        	.line	641
  5923 09:CDB9: A9 01 00     	lda	#$1
  5924 09:CDBC: 82 87 F8     	brl	L159
  5925                        ;    }
  5926                        	.line	642
  5927                        ;
  5928                        ;  /*********************************************/
  5929                        ;  /**  On va récupérer les données variables  **/
  5930                        ;  /*********************************************/
  5931                        ;  /* Temp Org */
  5932                        ;  if(current_header->DispNameOffset > SEGMENT_HEA
                    DER_MIN_SIZE_V2) /* 44 */
  5933                        L10074:
  5934                        	.line	648
  5935                        ;    {
  Mon Sep 27 2021  9:39                                                Page 111


  5936 09:CDBF: 38           	sec
  5937 09:CDC0: A9 2C 00     	lda	#$2c
  5938 09:CDC3: A0 36 00     	ldy	#$36
  5939 09:CDC6: F7 14        	sbc	[<L154+current_header_0],Y
  5940 09:CDC8: 70 03        	bvs	L212
  5941 09:CDCA: 49 00 80     	eor	#$8000
  5942                        L212:
  5943 09:CDCD: 10 03        	bpl	L213
  5944 09:CDCF: 82 59 00     	brl	L10075
  5945                        L213:
  5946                        	.line	649
  5947                        ;      current_header->TempOrgLength = current_hea
                    der->DispNameOffset - SEGMENT_HEADER_MIN_SIZE_V2;
  5948                        	.line	650
  5949 09:CDD2: 18           	clc
  5950 09:CDD3: A9 D4 FF     	lda	#$ffd4
  5951 09:CDD6: A0 36 00     	ldy	#$36
  5952 09:CDD9: 77 14        	adc	[<L154+current_header_0],Y
  5953 09:CDDB: A0 3A 00     	ldy	#$3a
  5954 09:CDDE: 97 14        	sta	[<L154+current_header_0],Y
  5955                        ;      memcpy(current_header->TempOrg,&current_fil
                    e->data[data_offset+SEGMENT_HEADER_MIN_SIZE_V2],current_head
                    er->TempOrgLength);
  5956                        	.line	651
  5957 09:CDE0: A0 3A 00     	ldy	#$3a
  5958 09:CDE3: B7 14        	lda	[<L154+current_header_0],Y
  5959 09:CDE5: 48           	pha
  5960 09:CDE6: 18           	clc
  5961 09:CDE7: A9 2C 00     	lda	#$2c
  5962 09:CDEA: 65 12        	adc	<L154+data_offset_0
  5963 09:CDEC: 85 01        	sta	<R0
  5964 09:CDEE: A0 00 00     	ldy	#$0
  5965 09:CDF1: A5 01        	lda	<R0
  5966 09:CDF3: 10 01        	bpl	L214
  5967 09:CDF5: 88           	dey
  5968                        L214:
  5969 09:CDF6: 85 01        	sta	<R0
  5970 09:CDF8: 84 03        	sty	<R0+2
  5971 09:CDFA: 18           	clc
  5972 09:CDFB: A0 0A 00     	ldy	#$a
  5973 09:CDFE: B7 0E        	lda	[<L154+current_file_0],Y
  5974 09:CE00: 65 01        	adc	<R0
  5975 09:CE02: 85 05        	sta	<R1
  5976 09:CE04: A0 0C 00     	ldy	#$c
  5977 09:CE07: B7 0E        	lda	[<L154+current_file_0],Y
  5978 09:CE09: 65 03        	adc	<R0+2
  5979 09:CE0B: 85 07        	sta	<R1+2
  5980 09:CE0D: D4 07        	pei	<R1+2
  5981 09:CE0F: D4 05        	pei	<R1
  5982 09:CE11: 18           	clc
  5983 09:CE12: A9 3C 00     	lda	#$3c
  5984 09:CE15: 65 14        	adc	<L154+current_header_0
  5985 09:CE17: 85 01        	sta	<R0
  5986 09:CE19: A9 00 00     	lda	#$0
  5987 09:CE1C: 65 16        	adc	<L154+current_header_0+2
  5988 09:CE1E: 85 03        	sta	<R0+2
  5989 09:CE20: D4 03        	pei	<R0+2
  5990 09:CE22: D4 01        	pei	<R0
  Mon Sep 27 2021  9:39                                                Page 112


  5991 09:CE24: 22 xx xx xx  	jsl	~~memcpy
  5992                        ;    }
  5993                        	.line	652
  5994                        ;  else
  5995 09:CE28: 82 08 00     	brl	L10076
  5996                        L10075:
  5997                        ;    current_header->TempOrgLength = 0;
  5998                        	.line	654
  5999 09:CE2B: A9 00 00     	lda	#$0
  6000 09:CE2E: A0 3A 00     	ldy	#$3a
  6001 09:CE31: 97 14        	sta	[<L154+current_header_0],Y
  6002                        L10076:
  6003                        ;
  6004                        ;  /* Noms */
  6005                        ;  memcpy(current_header->LoadName,&current_file->
                    data[data_offset+current_header->DispNameOffset],10);
  6006                        	.line	657
  6007 09:CE33: F4 0A 00     	pea	#<$a
  6008 09:CE36: 18           	clc
  6009 09:CE37: A5 12        	lda	<L154+data_offset_0
  6010 09:CE39: A0 36 00     	ldy	#$36
  6011 09:CE3C: 77 14        	adc	[<L154+current_header_0],Y
  6012 09:CE3E: 85 01        	sta	<R0
  6013 09:CE40: A0 00 00     	ldy	#$0
  6014 09:CE43: A5 01        	lda	<R0
  6015 09:CE45: 10 01        	bpl	L215
  6016 09:CE47: 88           	dey
  6017                        L215:
  6018 09:CE48: 85 01        	sta	<R0
  6019 09:CE4A: 84 03        	sty	<R0+2
  6020 09:CE4C: 18           	clc
  6021 09:CE4D: A0 0A 00     	ldy	#$a
  6022 09:CE50: B7 0E        	lda	[<L154+current_file_0],Y
  6023 09:CE52: 65 01        	adc	<R0
  6024 09:CE54: 85 05        	sta	<R1
  6025 09:CE56: A0 0C 00     	ldy	#$c
  6026 09:CE59: B7 0E        	lda	[<L154+current_file_0],Y
  6027 09:CE5B: 65 03        	adc	<R0+2
  6028 09:CE5D: 85 07        	sta	<R1+2
  6029 09:CE5F: D4 07        	pei	<R1+2
  6030 09:CE61: D4 05        	pei	<R1
  6031 09:CE63: 18           	clc
  6032 09:CE64: A9 3C 08     	lda	#$83c
  6033 09:CE67: 65 14        	adc	<L154+current_header_0
  6034 09:CE69: 85 01        	sta	<R0
  6035 09:CE6B: A9 00 00     	lda	#$0
  6036 09:CE6E: 65 16        	adc	<L154+current_header_0+2
  6037 09:CE70: 85 03        	sta	<R0+2
  6038 09:CE72: D4 03        	pei	<R0+2
  6039 09:CE74: D4 01        	pei	<R0
  6040 09:CE76: 22 xx xx xx  	jsl	~~memcpy
  6041                        ;  if(current_header->LabLen > 0)
  6042                        	.line	658
  6043                        ;    memcpy(current_header->SegName,&current_file-
                    >data[data_offset+current_header->DispNameOffset+10],current
                    _header->LabLen);
  6044 09:CE7A: E2 20        	sep	#$20
  6045                        	longa	off
  Mon Sep 27 2021  9:39                                                Page 113


  6046 09:CE7C: A9 00        	lda	#$0
  6047 09:CE7E: A0 1A 00     	ldy	#$1a
  6048 09:CE81: D7 14        	cmp	[<L154+current_header_0],Y
  6049 09:CE83: C2 20        	rep	#$20
  6050                        	longa	on
  6051 09:CE85: 90 03        	bcc	L216
  6052 09:CE87: 82 58 00     	brl	L10077
  6053                        L216:
  6054                        	.line	659
  6055 09:CE8A: A0 1A 00     	ldy	#$1a
  6056 09:CE8D: B7 14        	lda	[<L154+current_header_0],Y
  6057 09:CE8F: 29 FF 00     	and	#$ff
  6058 09:CE92: 48           	pha
  6059 09:CE93: 18           	clc
  6060 09:CE94: A5 12        	lda	<L154+data_offset_0
  6061 09:CE96: A0 36 00     	ldy	#$36
  6062 09:CE99: 77 14        	adc	[<L154+current_header_0],Y
  6063 09:CE9B: 85 01        	sta	<R0
  6064 09:CE9D: 18           	clc
  6065 09:CE9E: A9 0A 00     	lda	#$a
  6066 09:CEA1: 65 01        	adc	<R0
  6067 09:CEA3: 85 05        	sta	<R1
  6068 09:CEA5: A0 00 00     	ldy	#$0
  6069 09:CEA8: A5 05        	lda	<R1
  6070 09:CEAA: 10 01        	bpl	L217
  6071 09:CEAC: 88           	dey
  6072                        L217:
  6073 09:CEAD: 85 01        	sta	<R0
  6074 09:CEAF: 84 03        	sty	<R0+2
  6075 09:CEB1: 18           	clc
  6076 09:CEB2: A0 0A 00     	ldy	#$a
  6077 09:CEB5: B7 0E        	lda	[<L154+current_file_0],Y
  6078 09:CEB7: 65 01        	adc	<R0
  6079 09:CEB9: 85 05        	sta	<R1
  6080 09:CEBB: A0 0C 00     	ldy	#$c
  6081 09:CEBE: B7 0E        	lda	[<L154+current_file_0],Y
  6082 09:CEC0: 65 03        	adc	<R0+2
  6083 09:CEC2: 85 07        	sta	<R1+2
  6084 09:CEC4: D4 07        	pei	<R1+2
  6085 09:CEC6: D4 05        	pei	<R1
  6086 09:CEC8: 18           	clc
  6087 09:CEC9: A9 3C 09     	lda	#$93c
  6088 09:CECC: 65 14        	adc	<L154+current_header_0
  6089 09:CECE: 85 01        	sta	<R0
  6090 09:CED0: A9 00 00     	lda	#$0
  6091 09:CED3: 65 16        	adc	<L154+current_header_0+2
  6092 09:CED5: 85 03        	sta	<R0+2
  6093 09:CED7: D4 03        	pei	<R0+2
  6094 09:CED9: D4 01        	pei	<R0
  6095 09:CEDB: 22 xx xx xx  	jsl	~~memcpy
  6096                        ;  else
  6097 09:CEDF: 82 77 00     	brl	L10078
  6098                        L10077:
  6099                        ;    {
  6100                        	.line	661
  6101                        ;      /* La longueur est codée au début du texte,
                     sur 1 Byte */
  6102                        ;      length = (int) current_file->data[data_offs
  Mon Sep 27 2021  9:39                                                Page 114


                    et+current_header->DispNameOffset+10];
  6103                        	.line	663
  6104 09:CEE2: 18           	clc
  6105 09:CEE3: A5 12        	lda	<L154+data_offset_0
  6106 09:CEE5: A0 36 00     	ldy	#$36
  6107 09:CEE8: 77 14        	adc	[<L154+current_header_0],Y
  6108 09:CEEA: 85 01        	sta	<R0
  6109 09:CEEC: 18           	clc
  6110 09:CEED: A9 0A 00     	lda	#$a
  6111 09:CEF0: 65 01        	adc	<R0
  6112 09:CEF2: 85 05        	sta	<R1
  6113 09:CEF4: A0 0A 00     	ldy	#$a
  6114 09:CEF7: B7 0E        	lda	[<L154+current_file_0],Y
  6115 09:CEF9: 85 01        	sta	<R0
  6116 09:CEFB: A0 0C 00     	ldy	#$c
  6117 09:CEFE: B7 0E        	lda	[<L154+current_file_0],Y
  6118 09:CF00: 85 03        	sta	<R0+2
  6119 09:CF02: A4 05        	ldy	<R1
  6120 09:CF04: B7 01        	lda	[<R0],Y
  6121 09:CF06: 29 FF 00     	and	#$ff
  6122 09:CF09: 85 09        	sta	<L155+length_1
  6123                        ;      memcpy(&current_header->SegName,&current_fi
                    le->data[data_offset+current_header->DispNameOffset+10+1],le
                    ngth);
  6124                        	.line	664
  6125 09:CF0B: D4 09        	pei	<L155+length_1
  6126 09:CF0D: 18           	clc
  6127 09:CF0E: A5 12        	lda	<L154+data_offset_0
  6128 09:CF10: A0 36 00     	ldy	#$36
  6129 09:CF13: 77 14        	adc	[<L154+current_header_0],Y
  6130 09:CF15: 85 01        	sta	<R0
  6131 09:CF17: 18           	clc
  6132 09:CF18: A9 0B 00     	lda	#$b
  6133 09:CF1B: 65 01        	adc	<R0
  6134 09:CF1D: 85 05        	sta	<R1
  6135 09:CF1F: A0 00 00     	ldy	#$0
  6136 09:CF22: A5 05        	lda	<R1
  6137 09:CF24: 10 01        	bpl	L218
  6138 09:CF26: 88           	dey
  6139                        L218:
  6140 09:CF27: 85 01        	sta	<R0
  6141 09:CF29: 84 03        	sty	<R0+2
  6142 09:CF2B: 18           	clc
  6143 09:CF2C: A0 0A 00     	ldy	#$a
  6144 09:CF2F: B7 0E        	lda	[<L154+current_file_0],Y
  6145 09:CF31: 65 01        	adc	<R0
  6146 09:CF33: 85 05        	sta	<R1
  6147 09:CF35: A0 0C 00     	ldy	#$c
  6148 09:CF38: B7 0E        	lda	[<L154+current_file_0],Y
  6149 09:CF3A: 65 03        	adc	<R0+2
  6150 09:CF3C: 85 07        	sta	<R1+2
  6151 09:CF3E: D4 07        	pei	<R1+2
  6152 09:CF40: D4 05        	pei	<R1
  6153 09:CF42: 18           	clc
  6154 09:CF43: A9 3C 09     	lda	#$93c
  6155 09:CF46: 65 14        	adc	<L154+current_header_0
  6156 09:CF48: 85 01        	sta	<R0
  6157 09:CF4A: A9 00 00     	lda	#$0
  Mon Sep 27 2021  9:39                                                Page 115


  6158 09:CF4D: 65 16        	adc	<L154+current_header_0+2
  6159 09:CF4F: 85 03        	sta	<R0+2
  6160 09:CF51: D4 03        	pei	<R0+2
  6161 09:CF53: D4 01        	pei	<R0
  6162 09:CF55: 22 xx xx xx  	jsl	~~memcpy
  6163                        ;    }
  6164                        	.line	665
  6165                        L10078:
  6166                        ;
  6167                        ;  /* OK */
  6168                        ;  return(0);
  6169                        	.line	668
  6170 09:CF59: A9 00 00     	lda	#$0
  6171 09:CF5C: 82 E7 F6     	brl	L159
  6172                        ;}
  6173                        	.line	669
  6174                        	.endblock	669
  6175             0000000A   L154	equ	10
  6176             00000009   L155	equ	9
  6177 09:CF5F:              	ends
  6178                        	efunc
  6179                        	.endfunc	669,9,10
  6180                        	.line	669
  6181                        ;
  6182                        ;
  6183                        ;/************************************************
                    *******************************/
  6184                        ;/*  DecodeSegmentBody() :  Décode les différents 
                    Records du Body d'un Segment. */
  6185                        ;/************************************************
                    *******************************/
  6186                        ;static int DecodeSegmentBody(struct omf_file *cur
                    rent_file, int data_offset, struct omf_segment *current_segm
                    ent)
  6187                        ;{
  6188                        	.line	675
  6189                        	.line	676
  6190                        	LOADER
  6191                        	func
  6192                        	.function	676
  6193                        ~~DecodeSegmentBody:
  6194                        	longa	on
  6195                        	longi	on
  6196 09:CF5F: 3B           	tsc
  6197 09:CF60: 38           	sec
  6198 09:CF61: E9 20 00     	sbc	#L219
  6199 09:CF64: 1B           	tcs
  6200 09:CF65: 0B           	phd
  6201 09:CF66: 5B           	tcd
  6202             00000004   current_file_0	set	4
  6203             00000008   data_offset_0	set	8
  6204             0000000A   current_segment_0	set	10
  6205                        	.block	676
  6206                        ;  int body_offset, body_length, record_length, re
                    cord_data_length;
  6207                        ;  unsigned char *record_data;
  6208                        ;  unsigned char *data;
  6209                        ;  struct omf_body_record *current_record;
  Mon Sep 27 2021  9:39                                                Page 116


  6210                        ;
  6211                        ;  /* Init */
  6212                        ;  body_offset = 0;
  6213             00000000   body_offset_1	set	0
  6214             00000002   body_length_1	set	2
  6215             00000004   record_length_1	set	4
  6216             00000006   record_data_length_1	set	6
  6217             00000008   record_data_1	set	8
  6218             0000000C   data_1	set	12
  6219             00000010   current_record_1	set	16
  6220                        	.sym	body_offset,0,5,1,16
  6221                        	.sym	body_length,2,5,1,16
  6222                        	.sym	record_length,4,5,1,16
  6223                        	.sym	record_data_length,6,5,1,16
  6224                        	.sym	record_data,8,142,1,32
  6225                        	.sym	data,12,142,1,32
  6226                        	.sym	current_record,16,138,1,32,93
  6227                        	.sym	current_file,4,138,6,32,51
  6228                        	.sym	data_offset,8,5,6,16
  6229                        	.sym	current_segment,10,138,6,32,50
  6230                        	.line	683
  6231 09:CF67: 64 0D        	stz	<L220+body_offset_1
  6232                        ;  body_length = current_segment->header.ByteCnt -
                     current_segment->header.DispDataOffset;
  6233                        	.line	684
  6234 09:CF69: A0 00 00     	ldy	#$0
  6235 09:CF6C: 5A           	phy
  6236 09:CF6D: A0 38 00     	ldy	#$38
  6237 09:CF70: B7 2A        	lda	[<L219+current_segment_0],Y
  6238 09:CF72: 7A           	ply
  6239 09:CF73: 2A           	rol	A
  6240 09:CF74: 6A           	ror	A
  6241 09:CF75: 10 01        	bpl	L222
  6242 09:CF77: 88           	dey
  6243                        L222:
  6244 09:CF78: 85 01        	sta	<R0
  6245 09:CF7A: 84 03        	sty	<R0+2
  6246 09:CF7C: 38           	sec
  6247 09:CF7D: A0 0C 00     	ldy	#$c
  6248 09:CF80: B7 2A        	lda	[<L219+current_segment_0],Y
  6249 09:CF82: E5 01        	sbc	<R0
  6250 09:CF84: 85 05        	sta	<R1
  6251 09:CF86: A0 0E 00     	ldy	#$e
  6252 09:CF89: B7 2A        	lda	[<L219+current_segment_0],Y
  6253 09:CF8B: E5 03        	sbc	<R0+2
  6254 09:CF8D: 85 07        	sta	<R1+2
  6255 09:CF8F: A5 05        	lda	<R1
  6256 09:CF91: 85 0F        	sta	<L220+body_length_1
  6257                        ;
  6258                        ;  /* On libère les structures précédentes */
  6259                        ;  my_Memory(MEMORY_FREE_RELOC,NULL,NULL);
  6260                        	.line	687
  6261 09:CF93: F4 00 00     	pea	#^$0
  6262 09:CF96: F4 00 00     	pea	#<$0
  6263 09:CF99: F4 00 00     	pea	#^$0
  6264 09:CF9C: F4 00 00     	pea	#<$0
  6265 09:CF9F: F4 0D 00     	pea	#<$d
  6266 09:CFA2: 22 xx xx xx  	jsl	~~my_Memory
  Mon Sep 27 2021  9:39                                                Page 117


  6267                        ;  my_Memory(MEMORY_FREE_INTERSEG,NULL,NULL);
  6268                        	.line	688
  6269 09:CFA6: F4 00 00     	pea	#^$0
  6270 09:CFA9: F4 00 00     	pea	#<$0
  6271 09:CFAC: F4 00 00     	pea	#^$0
  6272 09:CFAF: F4 00 00     	pea	#<$0
  6273 09:CFB2: F4 17 00     	pea	#<$17
  6274 09:CFB5: 22 xx xx xx  	jsl	~~my_Memory
  6275                        ;
  6276                        ;  /** Boucle sur tous les Records du Body **/
  6277                        ;  while(1)
  6278                        	.line	691
  6279                        L10079:
  6280                        ;    {
  6281                        	.line	692
  6282                        ;      /** Extrait un Record du Body **/
  6283                        ;      current_record = DecodeOneRecord(&current_f
                    ile->data[data_offset+body_offset],current_segment->header.S
                    egNum,data_offset+body_offset,current_segment->header.ByteCn
                    t+body_offset,current_segment->data,current_segment->data_le
                    ngth,&record_length,current_segment);
  6284                        	.line	694
  6285 09:CFB9: D4 2C        	pei	<L219+current_segment_0+2
  6286 09:CFBB: D4 2A        	pei	<L219+current_segment_0
  6287 09:CFBD: F4 00 00     	pea	#0
  6288 09:CFC0: 18           	clc
  6289 09:CFC1: 7B           	tdc
  6290 09:CFC2: 69 11 00     	adc	#<L220+record_length_1
  6291 09:CFC5: 48           	pha
  6292 09:CFC6: A0 4B 0A     	ldy	#$a4b
  6293 09:CFC9: B7 2A        	lda	[<L219+current_segment_0],Y
  6294 09:CFCB: 48           	pha
  6295 09:CFCC: A0 4F 0A     	ldy	#$a4f
  6296 09:CFCF: B7 2A        	lda	[<L219+current_segment_0],Y
  6297 09:CFD1: 48           	pha
  6298 09:CFD2: A0 4D 0A     	ldy	#$a4d
  6299 09:CFD5: B7 2A        	lda	[<L219+current_segment_0],Y
  6300 09:CFD7: 48           	pha
  6301 09:CFD8: A0 00 00     	ldy	#$0
  6302 09:CFDB: A5 0D        	lda	<L220+body_offset_1
  6303 09:CFDD: 10 01        	bpl	L223
  6304 09:CFDF: 88           	dey
  6305                        L223:
  6306 09:CFE0: 85 01        	sta	<R0
  6307 09:CFE2: 84 03        	sty	<R0+2
  6308 09:CFE4: 18           	clc
  6309 09:CFE5: A5 01        	lda	<R0
  6310 09:CFE7: A0 0C 00     	ldy	#$c
  6311 09:CFEA: 77 2A        	adc	[<L219+current_segment_0],Y
  6312 09:CFEC: 85 05        	sta	<R1
  6313 09:CFEE: A5 03        	lda	<R0+2
  6314 09:CFF0: A0 0E 00     	ldy	#$e
  6315 09:CFF3: 77 2A        	adc	[<L219+current_segment_0],Y
  6316 09:CFF5: 85 07        	sta	<R1+2
  6317 09:CFF7: D4 05        	pei	<R1
  6318 09:CFF9: 18           	clc
  6319 09:CFFA: A5 28        	lda	<L219+data_offset_0
  6320 09:CFFC: 65 0D        	adc	<L220+body_offset_1
  Mon Sep 27 2021  9:39                                                Page 118


  6321 09:CFFE: 48           	pha
  6322 09:CFFF: A0 30 00     	ldy	#$30
  6323 09:D002: B7 2A        	lda	[<L219+current_segment_0],Y
  6324 09:D004: 48           	pha
  6325 09:D005: 18           	clc
  6326 09:D006: A5 28        	lda	<L219+data_offset_0
  6327 09:D008: 65 0D        	adc	<L220+body_offset_1
  6328 09:D00A: 85 01        	sta	<R0
  6329 09:D00C: A0 00 00     	ldy	#$0
  6330 09:D00F: A5 01        	lda	<R0
  6331 09:D011: 10 01        	bpl	L224
  6332 09:D013: 88           	dey
  6333                        L224:
  6334 09:D014: 85 01        	sta	<R0
  6335 09:D016: 84 03        	sty	<R0+2
  6336 09:D018: 18           	clc
  6337 09:D019: A0 0A 00     	ldy	#$a
  6338 09:D01C: B7 24        	lda	[<L219+current_file_0],Y
  6339 09:D01E: 65 01        	adc	<R0
  6340 09:D020: 85 09        	sta	<R2
  6341 09:D022: A0 0C 00     	ldy	#$c
  6342 09:D025: B7 24        	lda	[<L219+current_file_0],Y
  6343 09:D027: 65 03        	adc	<R0+2
  6344 09:D029: 85 0B        	sta	<R2+2
  6345 09:D02B: D4 0B        	pei	<R2+2
  6346 09:D02D: D4 09        	pei	<R2
  6347 09:D02F: 22 xx xx xx  	jsl	~~DecodeOneRecord
  6348 09:D033: 85 1D        	sta	<L220+current_record_1
  6349 09:D035: 86 1F        	stx	<L220+current_record_1+2
  6350                        ;      if(current_record == NULL)
  6351                        	.line	695
  6352                        ;        return(1);
  6353 09:D037: A5 1D        	lda	<L220+current_record_1
  6354 09:D039: 05 1F        	ora	<L220+current_record_1+2
  6355 09:D03B: F0 03        	beq	L225
  6356 09:D03D: 82 15 00     	brl	L10081
  6357                        L225:
  6358                        	.line	696
  6359 09:D040: A9 01 00     	lda	#$1
  6360                        L226:
  6361 09:D043: A8           	tay
  6362 09:D044: A5 22        	lda	<L219+2
  6363 09:D046: 85 2C        	sta	<L219+2+10
  6364 09:D048: A5 21        	lda	<L219+1
  6365 09:D04A: 85 2B        	sta	<L219+1+10
  6366 09:D04C: 2B           	pld
  6367 09:D04D: 3B           	tsc
  6368 09:D04E: 18           	clc
  6369 09:D04F: 69 2A 00     	adc	#L219+10
  6370 09:D052: 1B           	tcs
  6371 09:D053: 98           	tya
  6372 09:D054: 6B           	rtl
  6373                        ;      current_record->FileOffset = data_offset+bo
                    dy_offset;
  6374                        L10081:
  6375                        	.line	697
  6376 09:D055: 18           	clc
  6377 09:D056: A5 28        	lda	<L219+data_offset_0
  Mon Sep 27 2021  9:39                                                Page 119


  6378 09:D058: 65 0D        	adc	<L220+body_offset_1
  6379 09:D05A: 85 01        	sta	<R0
  6380 09:D05C: A0 00 00     	ldy	#$0
  6381 09:D05F: A5 01        	lda	<R0
  6382 09:D061: 10 01        	bpl	L227
  6383 09:D063: 88           	dey
  6384                        L227:
  6385 09:D064: 85 01        	sta	<R0
  6386 09:D066: 84 03        	sty	<R0+2
  6387 09:D068: A5 01        	lda	<R0
  6388 09:D06A: 87 1D        	sta	[<L220+current_record_1]
  6389 09:D06C: A5 03        	lda	<R0+2
  6390 09:D06E: A0 02 00     	ldy	#$2
  6391 09:D071: 97 1D        	sta	[<L220+current_record_1],Y
  6392                        ;      current_record->SegmentOffset = current_seg
                    ment->header.ByteCnt + body_offset;
  6393                        	.line	698
  6394 09:D073: A0 00 00     	ldy	#$0
  6395 09:D076: A5 0D        	lda	<L220+body_offset_1
  6396 09:D078: 10 01        	bpl	L228
  6397 09:D07A: 88           	dey
  6398                        L228:
  6399 09:D07B: 85 01        	sta	<R0
  6400 09:D07D: 84 03        	sty	<R0+2
  6401 09:D07F: 18           	clc
  6402 09:D080: A5 01        	lda	<R0
  6403 09:D082: A0 0C 00     	ldy	#$c
  6404 09:D085: 77 2A        	adc	[<L219+current_segment_0],Y
  6405 09:D087: 85 05        	sta	<R1
  6406 09:D089: A5 03        	lda	<R0+2
  6407 09:D08B: A0 0E 00     	ldy	#$e
  6408 09:D08E: 77 2A        	adc	[<L219+current_segment_0],Y
  6409 09:D090: 85 07        	sta	<R1+2
  6410 09:D092: A5 05        	lda	<R1
  6411 09:D094: A0 04 00     	ldy	#$4
  6412 09:D097: 97 1D        	sta	[<L220+current_record_1],Y
  6413 09:D099: A5 07        	lda	<R1+2
  6414 09:D09B: A0 06 00     	ldy	#$6
  6415 09:D09E: 97 1D        	sta	[<L220+current_record_1],Y
  6416                        ;
  6417                        ;      /* Attache de Record aux précédents */
  6418                        ;      if(current_segment->first_record == NULL)
  6419                        	.line	701
  6420                        ;        current_segment->first_record = current_r
                    ecord;
  6421 09:D0A0: A0 41 0A     	ldy	#$a41
  6422 09:D0A3: B7 2A        	lda	[<L219+current_segment_0],Y
  6423 09:D0A5: A0 43 0A     	ldy	#$a43
  6424 09:D0A8: 17 2A        	ora	[<L219+current_segment_0],Y
  6425 09:D0AA: F0 03        	beq	L229
  6426 09:D0AC: 82 11 00     	brl	L10082
  6427                        L229:
  6428                        	.line	702
  6429 09:D0AF: A5 1D        	lda	<L220+current_record_1
  6430 09:D0B1: A0 41 0A     	ldy	#$a41
  6431 09:D0B4: 97 2A        	sta	[<L219+current_segment_0],Y
  6432 09:D0B6: A5 1F        	lda	<L220+current_record_1+2
  6433 09:D0B8: A0 43 0A     	ldy	#$a43
  Mon Sep 27 2021  9:39                                                Page 120


  6434 09:D0BB: 97 2A        	sta	[<L219+current_segment_0],Y
  6435                        ;      else
  6436 09:D0BD: 82 1C 00     	brl	L10083
  6437                        L10082:
  6438                        ;        current_segment->last_record->next = curr
                    ent_record;
  6439                        	.line	704
  6440 09:D0C0: A0 45 0A     	ldy	#$a45
  6441 09:D0C3: B7 2A        	lda	[<L219+current_segment_0],Y
  6442 09:D0C5: 85 01        	sta	<R0
  6443 09:D0C7: A0 47 0A     	ldy	#$a47
  6444 09:D0CA: B7 2A        	lda	[<L219+current_segment_0],Y
  6445 09:D0CC: 85 03        	sta	<R0+2
  6446 09:D0CE: A5 1D        	lda	<L220+current_record_1
  6447 09:D0D0: A0 11 00     	ldy	#$11
  6448 09:D0D3: 97 01        	sta	[<R0],Y
  6449 09:D0D5: A5 1F        	lda	<L220+current_record_1+2
  6450 09:D0D7: A0 13 00     	ldy	#$13
  6451 09:D0DA: 97 01        	sta	[<R0],Y
  6452                        L10083:
  6453                        ;      current_segment->last_record = current_reco
                    rd;
  6454                        	.line	705
  6455 09:D0DC: A5 1D        	lda	<L220+current_record_1
  6456 09:D0DE: A0 45 0A     	ldy	#$a45
  6457 09:D0E1: 97 2A        	sta	[<L219+current_segment_0],Y
  6458 09:D0E3: A5 1F        	lda	<L220+current_record_1+2
  6459 09:D0E5: A0 47 0A     	ldy	#$a47
  6460 09:D0E8: 97 2A        	sta	[<L219+current_segment_0],Y
  6461                        ;      current_segment->nb_record++;
  6462                        	.line	706
  6463 09:D0EA: A0 3F 0A     	ldy	#$a3f
  6464 09:D0ED: B7 2A        	lda	[<L219+current_segment_0],Y
  6465 09:D0EF: 1A           	ina
  6466 09:D0F0: A0 3F 0A     	ldy	#$a3f
  6467 09:D0F3: 97 2A        	sta	[<L219+current_segment_0],Y
  6468                        ;
  6469                        ;      /******************************************
                    ************/
  6470                        ;      /** On conserve un pointeur vers les Data d
                    u Segment **/
  6471                        ;      /******************************************
                    ************/
  6472                        ;      if(current_record->operation_code >= 0x01 &
                    & current_record->operation_code <= 0xDF && current_record->
                    record_data != NULL)
  6473                        	.line	711
  6474                        ;        {
  6475 09:D0F5: E2 20        	sep	#$20
  6476                        	longa	off
  6477 09:D0F7: A0 08 00     	ldy	#$8
  6478 09:D0FA: B7 1D        	lda	[<L220+current_record_1],Y
  6479 09:D0FC: C9 01        	cmp	#<$1
  6480 09:D0FE: C2 20        	rep	#$20
  6481                        	longa	on
  6482 09:D100: B0 03        	bcs	L230
  6483 09:D102: 82 20 01     	brl	L10084
  6484                        L230:
  Mon Sep 27 2021  9:39                                                Page 121


  6485 09:D105: E2 20        	sep	#$20
  6486                        	longa	off
  6487 09:D107: A9 DF        	lda	#$df
  6488 09:D109: A0 08 00     	ldy	#$8
  6489 09:D10C: D7 1D        	cmp	[<L220+current_record_1],Y
  6490 09:D10E: C2 20        	rep	#$20
  6491                        	longa	on
  6492 09:D110: B0 03        	bcs	L231
  6493 09:D112: 82 10 01     	brl	L10084
  6494                        L231:
  6495 09:D115: A0 0B 00     	ldy	#$b
  6496 09:D118: B7 1D        	lda	[<L220+current_record_1],Y
  6497 09:D11A: A0 0D 00     	ldy	#$d
  6498 09:D11D: 17 1D        	ora	[<L220+current_record_1],Y
  6499 09:D11F: D0 03        	bne	L232
  6500 09:D121: 82 01 01     	brl	L10084
  6501                        L232:
  6502                        	.line	712
  6503                        ;          /* Ajoute les data du CONST au Segment 
                    */
  6504                        ;          record_data = ((struct record_CONST *)(
                    current_record->record_data))->data;
  6505                        	.line	714
  6506 09:D124: A0 0B 00     	ldy	#$b
  6507 09:D127: B7 1D        	lda	[<L220+current_record_1],Y
  6508 09:D129: 85 01        	sta	<R0
  6509 09:D12B: A0 0D 00     	ldy	#$d
  6510 09:D12E: B7 1D        	lda	[<L220+current_record_1],Y
  6511 09:D130: 85 03        	sta	<R0+2
  6512 09:D132: A0 0A 00     	ldy	#$a
  6513 09:D135: B7 01        	lda	[<R0],Y
  6514 09:D137: 85 15        	sta	<L220+record_data_1
  6515 09:D139: A0 0C 00     	ldy	#$c
  6516 09:D13C: B7 01        	lda	[<R0],Y
  6517 09:D13E: 85 17        	sta	<L220+record_data_1+2
  6518                        ;          record_data_length = ((struct record_CO
                    NST *)(current_record->record_data))->ByteCnt;
  6519                        	.line	715
  6520 09:D140: A0 0B 00     	ldy	#$b
  6521 09:D143: B7 1D        	lda	[<L220+current_record_1],Y
  6522 09:D145: 85 01        	sta	<R0
  6523 09:D147: A0 0D 00     	ldy	#$d
  6524 09:D14A: B7 1D        	lda	[<L220+current_record_1],Y
  6525 09:D14C: 85 03        	sta	<R0+2
  6526 09:D14E: A0 09 00     	ldy	#$9
  6527 09:D151: B7 01        	lda	[<R0],Y
  6528 09:D153: 29 FF 00     	and	#$ff
  6529 09:D156: 85 13        	sta	<L220+record_data_length_1
  6530                        ;
  6531                        ;          /* Allocation mémoire */
  6532                        ;          data = (unsigned char *) k_calloc(1,cur
                    rent_segment->data_length+record_data_length);
  6533                        	.line	718
  6534 09:D158: 18           	clc
  6535 09:D159: A0 4B 0A     	ldy	#$a4b
  6536 09:D15C: B7 2A        	lda	[<L219+current_segment_0],Y
  6537 09:D15E: 65 13        	adc	<L220+record_data_length_1
  6538 09:D160: 48           	pha
  Mon Sep 27 2021  9:39                                                Page 122


  6539 09:D161: F4 01 00     	pea	#<$1
  6540 09:D164: 22 xx xx xx  	jsl	~~k_calloc
  6541 09:D168: 85 19        	sta	<L220+data_1
  6542 09:D16A: 86 1B        	stx	<L220+data_1+2
  6543                        ;          if(data == NULL)
  6544                        	.line	719
  6545                        ;            {
  6546 09:D16C: A5 19        	lda	<L220+data_1
  6547 09:D16E: 05 1B        	ora	<L220+data_1+2
  6548 09:D170: F0 03        	beq	L233
  6549 09:D172: 82 0E 00     	brl	L10085
  6550                        L233:
  6551                        	.line	720
  6552                        ;              //printf("  Error : Impossible to a
                    llocate memory to process Segment Body Record.\n");
  6553                        ;              mem_free_record(current_record);
  6554                        	.line	722
  6555 09:D175: D4 1F        	pei	<L220+current_record_1+2
  6556 09:D177: D4 1D        	pei	<L220+current_record_1
  6557 09:D179: 22 xx xx xx  	jsl	~~mem_free_record
  6558                        ;              return(1);
  6559                        	.line	723
  6560 09:D17D: A9 01 00     	lda	#$1
  6561 09:D180: 82 C0 FE     	brl	L226
  6562                        ;            }
  6563                        	.line	724
  6564                        ;
  6565                        ;          /* Data */
  6566                        ;          memcpy(data,current_segment->data,curre
                    nt_segment->data_length);
  6567                        L10085:
  6568                        	.line	727
  6569 09:D183: A0 4B 0A     	ldy	#$a4b
  6570 09:D186: B7 2A        	lda	[<L219+current_segment_0],Y
  6571 09:D188: 48           	pha
  6572 09:D189: A0 4F 0A     	ldy	#$a4f
  6573 09:D18C: B7 2A        	lda	[<L219+current_segment_0],Y
  6574 09:D18E: 48           	pha
  6575 09:D18F: A0 4D 0A     	ldy	#$a4d
  6576 09:D192: B7 2A        	lda	[<L219+current_segment_0],Y
  6577 09:D194: 48           	pha
  6578 09:D195: D4 1B        	pei	<L220+data_1+2
  6579 09:D197: D4 19        	pei	<L220+data_1
  6580 09:D199: 22 xx xx xx  	jsl	~~memcpy
  6581                        ;          memcpy(data+current_segment->data_lengt
                    h,record_data,record_data_length);
  6582                        	.line	728
  6583 09:D19D: D4 13        	pei	<L220+record_data_length_1
  6584 09:D19F: D4 17        	pei	<L220+record_data_1+2
  6585 09:D1A1: D4 15        	pei	<L220+record_data_1
  6586 09:D1A3: A0 00 00     	ldy	#$0
  6587 09:D1A6: 5A           	phy
  6588 09:D1A7: A0 4B 0A     	ldy	#$a4b
  6589 09:D1AA: B7 2A        	lda	[<L219+current_segment_0],Y
  6590 09:D1AC: 7A           	ply
  6591 09:D1AD: 2A           	rol	A
  6592 09:D1AE: 6A           	ror	A
  6593 09:D1AF: 10 01        	bpl	L234
  Mon Sep 27 2021  9:39                                                Page 123


  6594 09:D1B1: 88           	dey
  6595                        L234:
  6596 09:D1B2: 85 01        	sta	<R0
  6597 09:D1B4: 84 03        	sty	<R0+2
  6598 09:D1B6: 18           	clc
  6599 09:D1B7: A5 19        	lda	<L220+data_1
  6600 09:D1B9: 65 01        	adc	<R0
  6601 09:D1BB: 85 05        	sta	<R1
  6602 09:D1BD: A5 1B        	lda	<L220+data_1+2
  6603 09:D1BF: 65 03        	adc	<R0+2
  6604 09:D1C1: 85 07        	sta	<R1+2
  6605 09:D1C3: D4 07        	pei	<R1+2
  6606 09:D1C5: D4 05        	pei	<R1
  6607 09:D1C7: 22 xx xx xx  	jsl	~~memcpy
  6608                        ;          k_free(current_segment->data);
  6609                        	.line	729
  6610 09:D1CB: A0 4F 0A     	ldy	#$a4f
  6611 09:D1CE: B7 2A        	lda	[<L219+current_segment_0],Y
  6612 09:D1D0: 48           	pha
  6613 09:D1D1: A0 4D 0A     	ldy	#$a4d
  6614 09:D1D4: B7 2A        	lda	[<L219+current_segment_0],Y
  6615 09:D1D6: 48           	pha
  6616 09:D1D7: 22 xx xx xx  	jsl	~~k_free
  6617                        ;          current_segment->data = data;
  6618                        	.line	730
  6619 09:D1DB: A5 19        	lda	<L220+data_1
  6620 09:D1DD: A0 4D 0A     	ldy	#$a4d
  6621 09:D1E0: 97 2A        	sta	[<L219+current_segment_0],Y
  6622 09:D1E2: A5 1B        	lda	<L220+data_1+2
  6623 09:D1E4: A0 4F 0A     	ldy	#$a4f
  6624 09:D1E7: 97 2A        	sta	[<L219+current_segment_0],Y
  6625                        ;
  6626                        ;          /* Longueur Data (CONST/DS/LCONST) */
  6627                        ;          current_segment->data_length += record_
                    data_length;
  6628                        	.line	733
  6629 09:D1E9: 18           	clc
  6630 09:D1EA: A9 4B 0A     	lda	#$a4b
  6631 09:D1ED: 65 2A        	adc	<L219+current_segment_0
  6632 09:D1EF: 85 01        	sta	<R0
  6633 09:D1F1: A9 00 00     	lda	#$0
  6634 09:D1F4: 65 2C        	adc	<L219+current_segment_0+2
  6635 09:D1F6: 85 03        	sta	<R0+2
  6636 09:D1F8: 18           	clc
  6637 09:D1F9: A7 01        	lda	[<R0]
  6638 09:D1FB: 65 13        	adc	<L220+record_data_length_1
  6639 09:D1FD: 87 01        	sta	[<R0]
  6640                        ;
  6641                        ;          /* Offset des Data (CONST/DS/LCONST) du
                     segment */
  6642                        ;          if(current_segment->data_offset == 0)
  6643                        	.line	736
  6644                        ;            current_segment->data_offset = curren
                    t_record->FileOffset + 1;    /* Code */
  6645 09:D1FF: A0 49 0A     	ldy	#$a49
  6646 09:D202: B7 2A        	lda	[<L219+current_segment_0],Y
  6647 09:D204: F0 03        	beq	L235
  6648 09:D206: 82 19 00     	brl	L10086
  Mon Sep 27 2021  9:39                                                Page 124


  6649                        L235:
  6650                        	.line	737
  6651 09:D209: 18           	clc
  6652 09:D20A: A9 01 00     	lda	#$1
  6653 09:D20D: 67 1D        	adc	[<L220+current_record_1]
  6654 09:D20F: 85 01        	sta	<R0
  6655 09:D211: A9 00 00     	lda	#$0
  6656 09:D214: A0 02 00     	ldy	#$2
  6657 09:D217: 77 1D        	adc	[<L220+current_record_1],Y
  6658 09:D219: 85 03        	sta	<R0+2
  6659 09:D21B: A5 01        	lda	<R0
  6660 09:D21D: A0 49 0A     	ldy	#$a49
  6661 09:D220: 97 2A        	sta	[<L219+current_segment_0],Y
  6662                        ;        }
  6663                        L10086:
  6664                        	.line	738
  6665                        ;      else if(current_record->operation_code == 0
                    xF1 && current_record->record_data != NULL)
  6666 09:D222: 82 ED 01     	brl	L10087
  6667                        L10084:
  6668                        	.line	739
  6669                        ;        {
  6670 09:D225: E2 20        	sep	#$20
  6671                        	longa	off
  6672 09:D227: A0 08 00     	ldy	#$8
  6673 09:D22A: B7 1D        	lda	[<L220+current_record_1],Y
  6674 09:D22C: C9 F1        	cmp	#<$f1
  6675 09:D22E: C2 20        	rep	#$20
  6676                        	longa	on
  6677 09:D230: F0 03        	beq	L236
  6678 09:D232: 82 C3 00     	brl	L10088
  6679                        L236:
  6680 09:D235: A0 0B 00     	ldy	#$b
  6681 09:D238: B7 1D        	lda	[<L220+current_record_1],Y
  6682 09:D23A: A0 0D 00     	ldy	#$d
  6683 09:D23D: 17 1D        	ora	[<L220+current_record_1],Y
  6684 09:D23F: D0 03        	bne	L237
  6685 09:D241: 82 B4 00     	brl	L10088
  6686                        L237:
  6687                        	.line	740
  6688                        ;          /* Ajoute les 00 du DS au Segment */
  6689                        ;          record_data_length = (int) ((struct rec
                    ord_DS *)(current_record->record_data))->nb_zero_byte;
  6690                        	.line	742
  6691 09:D244: A0 0B 00     	ldy	#$b
  6692 09:D247: B7 1D        	lda	[<L220+current_record_1],Y
  6693 09:D249: 85 01        	sta	<R0
  6694 09:D24B: A0 0D 00     	ldy	#$d
  6695 09:D24E: B7 1D        	lda	[<L220+current_record_1],Y
  6696 09:D250: 85 03        	sta	<R0+2
  6697 09:D252: A0 09 00     	ldy	#$9
  6698 09:D255: B7 01        	lda	[<R0],Y
  6699 09:D257: 85 13        	sta	<L220+record_data_length_1
  6700                        ;
  6701                        ;          /* Allocation mémoire */
  6702                        ;          data = (unsigned char *) k_calloc(1,cur
                    rent_segment->data_length+record_data_length);
  6703                        	.line	745
  Mon Sep 27 2021  9:39                                                Page 125


  6704 09:D259: 18           	clc
  6705 09:D25A: A0 4B 0A     	ldy	#$a4b
  6706 09:D25D: B7 2A        	lda	[<L219+current_segment_0],Y
  6707 09:D25F: 65 13        	adc	<L220+record_data_length_1
  6708 09:D261: 48           	pha
  6709 09:D262: F4 01 00     	pea	#<$1
  6710 09:D265: 22 xx xx xx  	jsl	~~k_calloc
  6711 09:D269: 85 19        	sta	<L220+data_1
  6712 09:D26B: 86 1B        	stx	<L220+data_1+2
  6713                        ;          if(data == NULL)
  6714                        	.line	746
  6715                        ;            {
  6716 09:D26D: A5 19        	lda	<L220+data_1
  6717 09:D26F: 05 1B        	ora	<L220+data_1+2
  6718 09:D271: F0 03        	beq	L238
  6719 09:D273: 82 0E 00     	brl	L10089
  6720                        L238:
  6721                        	.line	747
  6722                        ;              //printf("  Error : Impossible to a
                    llocate memory to process Segment Body Record.\n");
  6723                        ;              mem_free_record(current_record);
  6724                        	.line	749
  6725 09:D276: D4 1F        	pei	<L220+current_record_1+2
  6726 09:D278: D4 1D        	pei	<L220+current_record_1
  6727 09:D27A: 22 xx xx xx  	jsl	~~mem_free_record
  6728                        ;              return(1);
  6729                        	.line	750
  6730 09:D27E: A9 01 00     	lda	#$1
  6731 09:D281: 82 BF FD     	brl	L226
  6732                        ;            }
  6733                        	.line	751
  6734                        ;
  6735                        ;          /* Data */
  6736                        ;          memcpy(data,current_segment->data,curre
                    nt_segment->data_length);
  6737                        L10089:
  6738                        	.line	754
  6739 09:D284: A0 4B 0A     	ldy	#$a4b
  6740 09:D287: B7 2A        	lda	[<L219+current_segment_0],Y
  6741 09:D289: 48           	pha
  6742 09:D28A: A0 4F 0A     	ldy	#$a4f
  6743 09:D28D: B7 2A        	lda	[<L219+current_segment_0],Y
  6744 09:D28F: 48           	pha
  6745 09:D290: A0 4D 0A     	ldy	#$a4d
  6746 09:D293: B7 2A        	lda	[<L219+current_segment_0],Y
  6747 09:D295: 48           	pha
  6748 09:D296: D4 1B        	pei	<L220+data_1+2
  6749 09:D298: D4 19        	pei	<L220+data_1
  6750 09:D29A: 22 xx xx xx  	jsl	~~memcpy
  6751                        ;          k_free(current_segment->data);
  6752                        	.line	755
  6753 09:D29E: A0 4F 0A     	ldy	#$a4f
  6754 09:D2A1: B7 2A        	lda	[<L219+current_segment_0],Y
  6755 09:D2A3: 48           	pha
  6756 09:D2A4: A0 4D 0A     	ldy	#$a4d
  6757 09:D2A7: B7 2A        	lda	[<L219+current_segment_0],Y
  6758 09:D2A9: 48           	pha
  6759 09:D2AA: 22 xx xx xx  	jsl	~~k_free
  Mon Sep 27 2021  9:39                                                Page 126


  6760                        ;          current_segment->data = data;
  6761                        	.line	756
  6762 09:D2AE: A5 19        	lda	<L220+data_1
  6763 09:D2B0: A0 4D 0A     	ldy	#$a4d
  6764 09:D2B3: 97 2A        	sta	[<L219+current_segment_0],Y
  6765 09:D2B5: A5 1B        	lda	<L220+data_1+2
  6766 09:D2B7: A0 4F 0A     	ldy	#$a4f
  6767 09:D2BA: 97 2A        	sta	[<L219+current_segment_0],Y
  6768                        ;
  6769                        ;          /* Longueur Data (CONST/DS/LCONST) */
  6770                        ;          current_segment->data_length += record_
                    data_length;
  6771                        	.line	759
  6772 09:D2BC: 18           	clc
  6773 09:D2BD: A9 4B 0A     	lda	#$a4b
  6774 09:D2C0: 65 2A        	adc	<L219+current_segment_0
  6775 09:D2C2: 85 01        	sta	<R0
  6776 09:D2C4: A9 00 00     	lda	#$0
  6777 09:D2C7: 65 2C        	adc	<L219+current_segment_0+2
  6778 09:D2C9: 85 03        	sta	<R0+2
  6779 09:D2CB: 18           	clc
  6780 09:D2CC: A7 01        	lda	[<R0]
  6781 09:D2CE: 65 13        	adc	<L220+record_data_length_1
  6782 09:D2D0: 87 01        	sta	[<R0]
  6783                        ;
  6784                        ;          /* Offset des Data (CONST/DS/LCONST) du
                     segment */
  6785                        ;          if(current_segment->data_offset == 0)
  6786                        	.line	762
  6787                        ;            current_segment->data_offset = curren
                    t_record->FileOffset + 1 + sizeof(DWORD);    /* Code + Nb 0 
                    */
  6788 09:D2D2: A0 49 0A     	ldy	#$a49
  6789 09:D2D5: B7 2A        	lda	[<L219+current_segment_0],Y
  6790 09:D2D7: F0 03        	beq	L239
  6791 09:D2D9: 82 19 00     	brl	L10090
  6792                        L239:
  6793                        	.line	763
  6794 09:D2DC: 18           	clc
  6795 09:D2DD: A9 05 00     	lda	#$5
  6796 09:D2E0: 67 1D        	adc	[<L220+current_record_1]
  6797 09:D2E2: 85 01        	sta	<R0
  6798 09:D2E4: A9 00 00     	lda	#$0
  6799 09:D2E7: A0 02 00     	ldy	#$2
  6800 09:D2EA: 77 1D        	adc	[<L220+current_record_1],Y
  6801 09:D2EC: 85 03        	sta	<R0+2
  6802 09:D2EE: A5 01        	lda	<R0
  6803 09:D2F0: A0 49 0A     	ldy	#$a49
  6804 09:D2F3: 97 2A        	sta	[<L219+current_segment_0],Y
  6805                        ;        }
  6806                        L10090:
  6807                        	.line	764
  6808                        ;      else if(current_record->operation_code == 0
                    xF2 && current_record->record_data != NULL)
  6809 09:D2F5: 82 1A 01     	brl	L10091
  6810                        L10088:
  6811                        	.line	765
  6812                        ;        {
  Mon Sep 27 2021  9:39                                                Page 127


  6813 09:D2F8: E2 20        	sep	#$20
  6814                        	longa	off
  6815 09:D2FA: A0 08 00     	ldy	#$8
  6816 09:D2FD: B7 1D        	lda	[<L220+current_record_1],Y
  6817 09:D2FF: C9 F2        	cmp	#<$f2
  6818 09:D301: C2 20        	rep	#$20
  6819                        	longa	on
  6820 09:D303: F0 03        	beq	L240
  6821 09:D305: 82 0A 01     	brl	L10092
  6822                        L240:
  6823 09:D308: A0 0B 00     	ldy	#$b
  6824 09:D30B: B7 1D        	lda	[<L220+current_record_1],Y
  6825 09:D30D: A0 0D 00     	ldy	#$d
  6826 09:D310: 17 1D        	ora	[<L220+current_record_1],Y
  6827 09:D312: D0 03        	bne	L241
  6828 09:D314: 82 FB 00     	brl	L10092
  6829                        L241:
  6830                        	.line	766
  6831                        ;          /* Ajoute les data du LCONST au Segment
                     */
  6832                        ;          record_data = ((struct record_LCONST *)
                    (current_record->record_data))->data;
  6833                        	.line	768
  6834 09:D317: A0 0B 00     	ldy	#$b
  6835 09:D31A: B7 1D        	lda	[<L220+current_record_1],Y
  6836 09:D31C: 85 01        	sta	<R0
  6837 09:D31E: A0 0D 00     	ldy	#$d
  6838 09:D321: B7 1D        	lda	[<L220+current_record_1],Y
  6839 09:D323: 85 03        	sta	<R0+2
  6840 09:D325: A0 0D 00     	ldy	#$d
  6841 09:D328: B7 01        	lda	[<R0],Y
  6842 09:D32A: 85 15        	sta	<L220+record_data_1
  6843 09:D32C: A0 0F 00     	ldy	#$f
  6844 09:D32F: B7 01        	lda	[<R0],Y
  6845 09:D331: 85 17        	sta	<L220+record_data_1+2
  6846                        ;          record_data_length = ((struct record_LC
                    ONST *)(current_record->record_data))->ByteCnt;
  6847                        	.line	769
  6848 09:D333: A0 0B 00     	ldy	#$b
  6849 09:D336: B7 1D        	lda	[<L220+current_record_1],Y
  6850 09:D338: 85 01        	sta	<R0
  6851 09:D33A: A0 0D 00     	ldy	#$d
  6852 09:D33D: B7 1D        	lda	[<L220+current_record_1],Y
  6853 09:D33F: 85 03        	sta	<R0+2
  6854 09:D341: A0 09 00     	ldy	#$9
  6855 09:D344: B7 01        	lda	[<R0],Y
  6856 09:D346: 85 13        	sta	<L220+record_data_length_1
  6857                        ;
  6858                        ;          /* Allocation mémoire */
  6859                        ;          data = (unsigned char *) k_calloc(1,cur
                    rent_segment->data_length+record_data_length);
  6860                        	.line	772
  6861 09:D348: 18           	clc
  6862 09:D349: A0 4B 0A     	ldy	#$a4b
  6863 09:D34C: B7 2A        	lda	[<L219+current_segment_0],Y
  6864 09:D34E: 65 13        	adc	<L220+record_data_length_1
  6865 09:D350: 48           	pha
  6866 09:D351: F4 01 00     	pea	#<$1
  Mon Sep 27 2021  9:39                                                Page 128


  6867 09:D354: 22 xx xx xx  	jsl	~~k_calloc
  6868 09:D358: 85 19        	sta	<L220+data_1
  6869 09:D35A: 86 1B        	stx	<L220+data_1+2
  6870                        ;          if(data == NULL)
  6871                        	.line	773
  6872                        ;            {
  6873 09:D35C: A5 19        	lda	<L220+data_1
  6874 09:D35E: 05 1B        	ora	<L220+data_1+2
  6875 09:D360: F0 03        	beq	L242
  6876 09:D362: 82 0E 00     	brl	L10093
  6877                        L242:
  6878                        	.line	774
  6879                        ;              //printf("  Error : Impossible to a
                    llocate memory to process Segment Body Record.\n");
  6880                        ;              mem_free_record(current_record);
  6881                        	.line	776
  6882 09:D365: D4 1F        	pei	<L220+current_record_1+2
  6883 09:D367: D4 1D        	pei	<L220+current_record_1
  6884 09:D369: 22 xx xx xx  	jsl	~~mem_free_record
  6885                        ;              return(1);
  6886                        	.line	777
  6887 09:D36D: A9 01 00     	lda	#$1
  6888 09:D370: 82 D0 FC     	brl	L226
  6889                        ;            }
  6890                        	.line	778
  6891                        ;
  6892                        ;          /* Data */
  6893                        ;          memcpy(data,current_segment->data,curre
                    nt_segment->data_length);
  6894                        L10093:
  6895                        	.line	781
  6896 09:D373: A0 4B 0A     	ldy	#$a4b
  6897 09:D376: B7 2A        	lda	[<L219+current_segment_0],Y
  6898 09:D378: 48           	pha
  6899 09:D379: A0 4F 0A     	ldy	#$a4f
  6900 09:D37C: B7 2A        	lda	[<L219+current_segment_0],Y
  6901 09:D37E: 48           	pha
  6902 09:D37F: A0 4D 0A     	ldy	#$a4d
  6903 09:D382: B7 2A        	lda	[<L219+current_segment_0],Y
  6904 09:D384: 48           	pha
  6905 09:D385: D4 1B        	pei	<L220+data_1+2
  6906 09:D387: D4 19        	pei	<L220+data_1
  6907 09:D389: 22 xx xx xx  	jsl	~~memcpy
  6908                        ;          memcpy(data+current_segment->data_lengt
                    h,record_data,record_data_length);
  6909                        	.line	782
  6910 09:D38D: D4 13        	pei	<L220+record_data_length_1
  6911 09:D38F: D4 17        	pei	<L220+record_data_1+2
  6912 09:D391: D4 15        	pei	<L220+record_data_1
  6913 09:D393: A0 00 00     	ldy	#$0
  6914 09:D396: 5A           	phy
  6915 09:D397: A0 4B 0A     	ldy	#$a4b
  6916 09:D39A: B7 2A        	lda	[<L219+current_segment_0],Y
  6917 09:D39C: 7A           	ply
  6918 09:D39D: 2A           	rol	A
  6919 09:D39E: 6A           	ror	A
  6920 09:D39F: 10 01        	bpl	L243
  6921 09:D3A1: 88           	dey
  Mon Sep 27 2021  9:39                                                Page 129


  6922                        L243:
  6923 09:D3A2: 85 01        	sta	<R0
  6924 09:D3A4: 84 03        	sty	<R0+2
  6925 09:D3A6: 18           	clc
  6926 09:D3A7: A5 19        	lda	<L220+data_1
  6927 09:D3A9: 65 01        	adc	<R0
  6928 09:D3AB: 85 05        	sta	<R1
  6929 09:D3AD: A5 1B        	lda	<L220+data_1+2
  6930 09:D3AF: 65 03        	adc	<R0+2
  6931 09:D3B1: 85 07        	sta	<R1+2
  6932 09:D3B3: D4 07        	pei	<R1+2
  6933 09:D3B5: D4 05        	pei	<R1
  6934 09:D3B7: 22 xx xx xx  	jsl	~~memcpy
  6935                        ;          k_free(current_segment->data);
  6936                        	.line	783
  6937 09:D3BB: A0 4F 0A     	ldy	#$a4f
  6938 09:D3BE: B7 2A        	lda	[<L219+current_segment_0],Y
  6939 09:D3C0: 48           	pha
  6940 09:D3C1: A0 4D 0A     	ldy	#$a4d
  6941 09:D3C4: B7 2A        	lda	[<L219+current_segment_0],Y
  6942 09:D3C6: 48           	pha
  6943 09:D3C7: 22 xx xx xx  	jsl	~~k_free
  6944                        ;          current_segment->data = data;
  6945                        	.line	784
  6946 09:D3CB: A5 19        	lda	<L220+data_1
  6947 09:D3CD: A0 4D 0A     	ldy	#$a4d
  6948 09:D3D0: 97 2A        	sta	[<L219+current_segment_0],Y
  6949 09:D3D2: A5 1B        	lda	<L220+data_1+2
  6950 09:D3D4: A0 4F 0A     	ldy	#$a4f
  6951 09:D3D7: 97 2A        	sta	[<L219+current_segment_0],Y
  6952                        ;
  6953                        ;          /* Longueur Data (CONST/DS/LCONST) */
  6954                        ;          current_segment->data_length += record_
                    data_length;
  6955                        	.line	787
  6956 09:D3D9: 18           	clc
  6957 09:D3DA: A9 4B 0A     	lda	#$a4b
  6958 09:D3DD: 65 2A        	adc	<L219+current_segment_0
  6959 09:D3DF: 85 01        	sta	<R0
  6960 09:D3E1: A9 00 00     	lda	#$0
  6961 09:D3E4: 65 2C        	adc	<L219+current_segment_0+2
  6962 09:D3E6: 85 03        	sta	<R0+2
  6963 09:D3E8: 18           	clc
  6964 09:D3E9: A7 01        	lda	[<R0]
  6965 09:D3EB: 65 13        	adc	<L220+record_data_length_1
  6966 09:D3ED: 87 01        	sta	[<R0]
  6967                        ;
  6968                        ;          /* Offset des Data (CONST/DS/LCONST) du
                     segment */
  6969                        ;          if(current_segment->data_offset == 0)
  6970                        	.line	790
  6971                        ;            current_segment->data_offset = curren
                    t_record->FileOffset + 1 + sizeof(DWORD);    /* Code + Lengt
                    h */
  6972 09:D3EF: A0 49 0A     	ldy	#$a49
  6973 09:D3F2: B7 2A        	lda	[<L219+current_segment_0],Y
  6974 09:D3F4: F0 03        	beq	L244
  6975 09:D3F6: 82 19 00     	brl	L10094
  Mon Sep 27 2021  9:39                                                Page 130


  6976                        L244:
  6977                        	.line	791
  6978 09:D3F9: 18           	clc
  6979 09:D3FA: A9 05 00     	lda	#$5
  6980 09:D3FD: 67 1D        	adc	[<L220+current_record_1]
  6981 09:D3FF: 85 01        	sta	<R0
  6982 09:D401: A9 00 00     	lda	#$0
  6983 09:D404: A0 02 00     	ldy	#$2
  6984 09:D407: 77 1D        	adc	[<L220+current_record_1],Y
  6985 09:D409: 85 03        	sta	<R0+2
  6986 09:D40B: A5 01        	lda	<R0
  6987 09:D40D: A0 49 0A     	ldy	#$a49
  6988 09:D410: 97 2A        	sta	[<L219+current_segment_0],Y
  6989                        ;        }
  6990                        L10094:
  6991                        	.line	792
  6992                        ;
  6993                        ;      /******************************************
                    ********************/
  6994                        ;      /** On conserve l'offset et la longueur des
                     Reloc du Segment **/
  6995                        ;      /******************************************
                    ********************/
  6996                        ;      if(current_record->operation_code == 0xE2) 
                         /* RELOC */
  6997                        L10092:
  6998                        L10091:
  6999                        L10087:
  7000                        	.line	797
  7001                        ;        {
  7002 09:D412: E2 20        	sep	#$20
  7003                        	longa	off
  7004 09:D414: A0 08 00     	ldy	#$8
  7005 09:D417: B7 1D        	lda	[<L220+current_record_1],Y
  7006 09:D419: C9 E2        	cmp	#<$e2
  7007 09:D41B: C2 20        	rep	#$20
  7008                        	longa	on
  7009 09:D41D: F0 03        	beq	L245
  7010 09:D41F: 82 2D 00     	brl	L10095
  7011                        L245:
  7012                        	.line	798
  7013                        ;          /* Longueur Reloc */
  7014                        ;          current_segment->reloc_length += curren
                    t_record->length;
  7015                        	.line	800
  7016 09:D422: 18           	clc
  7017 09:D423: A9 53 0A     	lda	#$a53
  7018 09:D426: 65 2A        	adc	<L219+current_segment_0
  7019 09:D428: 85 01        	sta	<R0
  7020 09:D42A: A9 00 00     	lda	#$0
  7021 09:D42D: 65 2C        	adc	<L219+current_segment_0+2
  7022 09:D42F: 85 03        	sta	<R0+2
  7023 09:D431: 18           	clc
  7024 09:D432: A7 01        	lda	[<R0]
  7025 09:D434: A0 09 00     	ldy	#$9
  7026 09:D437: 77 1D        	adc	[<L220+current_record_1],Y
  7027 09:D439: 87 01        	sta	[<R0]
  7028                        ;
  Mon Sep 27 2021  9:39                                                Page 131


  7029                        ;          /* Offset des Reloc du segment */
  7030                        ;          if(current_segment->reloc_offset == 0)
  7031                        	.line	803
  7032                        ;            current_segment->reloc_offset = curre
                    nt_record->FileOffset;
  7033 09:D43B: A0 51 0A     	ldy	#$a51
  7034 09:D43E: B7 2A        	lda	[<L219+current_segment_0],Y
  7035 09:D440: F0 03        	beq	L246
  7036 09:D442: 82 07 00     	brl	L10096
  7037                        L246:
  7038                        	.line	804
  7039 09:D445: A7 1D        	lda	[<L220+current_record_1]
  7040 09:D447: A0 51 0A     	ldy	#$a51
  7041 09:D44A: 97 2A        	sta	[<L219+current_segment_0],Y
  7042                        ;        }
  7043                        L10096:
  7044                        	.line	805
  7045                        ;      else if(current_record->operation_code == 0
                    xE3)      /* INTERSEG */
  7046 09:D44C: 82 F1 00     	brl	L10097
  7047                        L10095:
  7048                        	.line	806
  7049                        ;        {
  7050 09:D44F: E2 20        	sep	#$20
  7051                        	longa	off
  7052 09:D451: A0 08 00     	ldy	#$8
  7053 09:D454: B7 1D        	lda	[<L220+current_record_1],Y
  7054 09:D456: C9 E3        	cmp	#<$e3
  7055 09:D458: C2 20        	rep	#$20
  7056                        	longa	on
  7057 09:D45A: F0 03        	beq	L247
  7058 09:D45C: 82 2D 00     	brl	L10098
  7059                        L247:
  7060                        	.line	807
  7061                        ;          /* Longueur Reloc */
  7062                        ;          current_segment->reloc_length += curren
                    t_record->length;
  7063                        	.line	809
  7064 09:D45F: 18           	clc
  7065 09:D460: A9 53 0A     	lda	#$a53
  7066 09:D463: 65 2A        	adc	<L219+current_segment_0
  7067 09:D465: 85 01        	sta	<R0
  7068 09:D467: A9 00 00     	lda	#$0
  7069 09:D46A: 65 2C        	adc	<L219+current_segment_0+2
  7070 09:D46C: 85 03        	sta	<R0+2
  7071 09:D46E: 18           	clc
  7072 09:D46F: A7 01        	lda	[<R0]
  7073 09:D471: A0 09 00     	ldy	#$9
  7074 09:D474: 77 1D        	adc	[<L220+current_record_1],Y
  7075 09:D476: 87 01        	sta	[<R0]
  7076                        ;
  7077                        ;          /* Offset des Reloc du segment */
  7078                        ;          if(current_segment->reloc_offset == 0)
  7079                        	.line	812
  7080                        ;            current_segment->reloc_offset = curre
                    nt_record->FileOffset;
  7081 09:D478: A0 51 0A     	ldy	#$a51
  7082 09:D47B: B7 2A        	lda	[<L219+current_segment_0],Y
  Mon Sep 27 2021  9:39                                                Page 132


  7083 09:D47D: F0 03        	beq	L248
  7084 09:D47F: 82 07 00     	brl	L10099
  7085                        L248:
  7086                        	.line	813
  7087 09:D482: A7 1D        	lda	[<L220+current_record_1]
  7088 09:D484: A0 51 0A     	ldy	#$a51
  7089 09:D487: 97 2A        	sta	[<L219+current_segment_0],Y
  7090                        ;        }
  7091                        L10099:
  7092                        	.line	814
  7093                        ;      else if(current_record->operation_code == 0
                    xF5)      /* cRELOC */
  7094 09:D489: 82 B4 00     	brl	L10100
  7095                        L10098:
  7096                        	.line	815
  7097                        ;        {
  7098 09:D48C: E2 20        	sep	#$20
  7099                        	longa	off
  7100 09:D48E: A0 08 00     	ldy	#$8
  7101 09:D491: B7 1D        	lda	[<L220+current_record_1],Y
  7102 09:D493: C9 F5        	cmp	#<$f5
  7103 09:D495: C2 20        	rep	#$20
  7104                        	longa	on
  7105 09:D497: F0 03        	beq	L249
  7106 09:D499: 82 2D 00     	brl	L10101
  7107                        L249:
  7108                        	.line	816
  7109                        ;          /* Longueur Reloc */
  7110                        ;          current_segment->reloc_length += curren
                    t_record->length;
  7111                        	.line	818
  7112 09:D49C: 18           	clc
  7113 09:D49D: A9 53 0A     	lda	#$a53
  7114 09:D4A0: 65 2A        	adc	<L219+current_segment_0
  7115 09:D4A2: 85 01        	sta	<R0
  7116 09:D4A4: A9 00 00     	lda	#$0
  7117 09:D4A7: 65 2C        	adc	<L219+current_segment_0+2
  7118 09:D4A9: 85 03        	sta	<R0+2
  7119 09:D4AB: 18           	clc
  7120 09:D4AC: A7 01        	lda	[<R0]
  7121 09:D4AE: A0 09 00     	ldy	#$9
  7122 09:D4B1: 77 1D        	adc	[<L220+current_record_1],Y
  7123 09:D4B3: 87 01        	sta	[<R0]
  7124                        ;
  7125                        ;          /* Offset des Reloc du segment */
  7126                        ;          if(current_segment->reloc_offset == 0)
  7127                        	.line	821
  7128                        ;            current_segment->reloc_offset = curre
                    nt_record->FileOffset;
  7129 09:D4B5: A0 51 0A     	ldy	#$a51
  7130 09:D4B8: B7 2A        	lda	[<L219+current_segment_0],Y
  7131 09:D4BA: F0 03        	beq	L250
  7132 09:D4BC: 82 07 00     	brl	L10102
  7133                        L250:
  7134                        	.line	822
  7135 09:D4BF: A7 1D        	lda	[<L220+current_record_1]
  7136 09:D4C1: A0 51 0A     	ldy	#$a51
  7137 09:D4C4: 97 2A        	sta	[<L219+current_segment_0],Y
  Mon Sep 27 2021  9:39                                                Page 133


  7138                        ;        }
  7139                        L10102:
  7140                        	.line	823
  7141                        ;      else if(current_record->operation_code == 0
                    xF6)      /* cINTERSEG */
  7142 09:D4C6: 82 77 00     	brl	L10103
  7143                        L10101:
  7144                        	.line	824
  7145                        ;        {
  7146 09:D4C9: E2 20        	sep	#$20
  7147                        	longa	off
  7148 09:D4CB: A0 08 00     	ldy	#$8
  7149 09:D4CE: B7 1D        	lda	[<L220+current_record_1],Y
  7150 09:D4D0: C9 F6        	cmp	#<$f6
  7151 09:D4D2: C2 20        	rep	#$20
  7152                        	longa	on
  7153 09:D4D4: F0 03        	beq	L251
  7154 09:D4D6: 82 2D 00     	brl	L10104
  7155                        L251:
  7156                        	.line	825
  7157                        ;          /* Longueur Reloc */
  7158                        ;          current_segment->reloc_length += curren
                    t_record->length;
  7159                        	.line	827
  7160 09:D4D9: 18           	clc
  7161 09:D4DA: A9 53 0A     	lda	#$a53
  7162 09:D4DD: 65 2A        	adc	<L219+current_segment_0
  7163 09:D4DF: 85 01        	sta	<R0
  7164 09:D4E1: A9 00 00     	lda	#$0
  7165 09:D4E4: 65 2C        	adc	<L219+current_segment_0+2
  7166 09:D4E6: 85 03        	sta	<R0+2
  7167 09:D4E8: 18           	clc
  7168 09:D4E9: A7 01        	lda	[<R0]
  7169 09:D4EB: A0 09 00     	ldy	#$9
  7170 09:D4EE: 77 1D        	adc	[<L220+current_record_1],Y
  7171 09:D4F0: 87 01        	sta	[<R0]
  7172                        ;
  7173                        ;          /* Offset des Reloc du segment */
  7174                        ;          if(current_segment->reloc_offset == 0)
  7175                        	.line	830
  7176                        ;            current_segment->reloc_offset = curre
                    nt_record->FileOffset;
  7177 09:D4F2: A0 51 0A     	ldy	#$a51
  7178 09:D4F5: B7 2A        	lda	[<L219+current_segment_0],Y
  7179 09:D4F7: F0 03        	beq	L252
  7180 09:D4F9: 82 07 00     	brl	L10105
  7181                        L252:
  7182                        	.line	831
  7183 09:D4FC: A7 1D        	lda	[<L220+current_record_1]
  7184 09:D4FE: A0 51 0A     	ldy	#$a51
  7185 09:D501: 97 2A        	sta	[<L219+current_segment_0],Y
  7186                        ;        }
  7187                        L10105:
  7188                        	.line	832
  7189                        ;      else if(current_record->operation_code == 0
                    xF7)      /* SUPER */
  7190 09:D503: 82 3A 00     	brl	L10106
  7191                        L10104:
  Mon Sep 27 2021  9:39                                                Page 134


  7192                        	.line	833
  7193                        ;        {
  7194 09:D506: E2 20        	sep	#$20
  7195                        	longa	off
  7196 09:D508: A0 08 00     	ldy	#$8
  7197 09:D50B: B7 1D        	lda	[<L220+current_record_1],Y
  7198 09:D50D: C9 F7        	cmp	#<$f7
  7199 09:D50F: C2 20        	rep	#$20
  7200                        	longa	on
  7201 09:D511: F0 03        	beq	L253
  7202 09:D513: 82 2A 00     	brl	L10107
  7203                        L253:
  7204                        	.line	834
  7205                        ;          /* Longueur Reloc */
  7206                        ;          current_segment->reloc_length += curren
                    t_record->length;
  7207                        	.line	836
  7208 09:D516: 18           	clc
  7209 09:D517: A9 53 0A     	lda	#$a53
  7210 09:D51A: 65 2A        	adc	<L219+current_segment_0
  7211 09:D51C: 85 01        	sta	<R0
  7212 09:D51E: A9 00 00     	lda	#$0
  7213 09:D521: 65 2C        	adc	<L219+current_segment_0+2
  7214 09:D523: 85 03        	sta	<R0+2
  7215 09:D525: 18           	clc
  7216 09:D526: A7 01        	lda	[<R0]
  7217 09:D528: A0 09 00     	ldy	#$9
  7218 09:D52B: 77 1D        	adc	[<L220+current_record_1],Y
  7219 09:D52D: 87 01        	sta	[<R0]
  7220                        ;
  7221                        ;          /* Offset des Reloc du segment */
  7222                        ;          if(current_segment->reloc_offset == 0)
  7223                        	.line	839
  7224                        ;            current_segment->reloc_offset = curre
                    nt_record->FileOffset;
  7225 09:D52F: A0 51 0A     	ldy	#$a51
  7226 09:D532: B7 2A        	lda	[<L219+current_segment_0],Y
  7227 09:D534: F0 03        	beq	L254
  7228 09:D536: 82 07 00     	brl	L10108
  7229                        L254:
  7230                        	.line	840
  7231 09:D539: A7 1D        	lda	[<L220+current_record_1]
  7232 09:D53B: A0 51 0A     	ldy	#$a51
  7233 09:D53E: 97 2A        	sta	[<L219+current_segment_0],Y
  7234                        ;        }
  7235                        L10108:
  7236                        	.line	841
  7237                        ;
  7238                        ;
  7239                        ;      /** On passe au Record suivant si on est ar
                    rivé à la fin du Body (V 2.1) **/
  7240                        ;      body_offset += record_length;
  7241                        L10107:
  7242                        L10106:
  7243                        L10103:
  7244                        L10100:
  7245                        L10097:
  7246                        	.line	845
  Mon Sep 27 2021  9:39                                                Page 135


  7247 09:D540: 18           	clc
  7248 09:D541: A5 0D        	lda	<L220+body_offset_1
  7249 09:D543: 65 11        	adc	<L220+record_length_1
  7250 09:D545: 85 0D        	sta	<L220+body_offset_1
  7251                        ;      if(body_offset == body_length)
  7252                        	.line	846
  7253                        ;        break;
  7254 09:D547: A5 0D        	lda	<L220+body_offset_1
  7255 09:D549: C5 0F        	cmp	<L220+body_length_1
  7256 09:D54B: D0 03        	bne	L255
  7257 09:D54D: 82 10 00     	brl	L10080
  7258                        L255:
  7259                        ;
  7260                        ;      /* On va aussi s'arrêter si on tombe sur un
                     DEND (qui en V0 et V1 vient avant la fin du Body) */
  7261                        ;      if(current_record->operation_code == 0x00)
  7262                        	.line	850
  7263                        ;        break;
  7264 09:D550: A0 08 00     	ldy	#$8
  7265 09:D553: B7 1D        	lda	[<L220+current_record_1],Y
  7266 09:D555: 29 FF 00     	and	#$ff
  7267 09:D558: D0 03        	bne	L256
  7268 09:D55A: 82 03 00     	brl	L10080
  7269                        L256:
  7270                        ;    }
  7271                        	.line	852
  7272 09:D55D: 82 59 FA     	brl	L10079
  7273                        L10080:
  7274                        ;
  7275                        ;  /** On va extraire tous les RELOC / INTERSEG **
                    /
  7276                        ;  my_Memory(MEMORY_SORT_RELOC,&current_segment->n
                    b_reloc,&current_segment->tab_reloc);
  7277                        	.line	855
  7278 09:D560: 18           	clc
  7279 09:D561: A9 57 0A     	lda	#$a57
  7280 09:D564: 65 2A        	adc	<L219+current_segment_0
  7281 09:D566: 85 01        	sta	<R0
  7282 09:D568: A9 00 00     	lda	#$0
  7283 09:D56B: 65 2C        	adc	<L219+current_segment_0+2
  7284 09:D56D: 85 03        	sta	<R0+2
  7285 09:D56F: D4 03        	pei	<R0+2
  7286 09:D571: D4 01        	pei	<R0
  7287 09:D573: 18           	clc
  7288 09:D574: A9 55 0A     	lda	#$a55
  7289 09:D577: 65 2A        	adc	<L219+current_segment_0
  7290 09:D579: 85 05        	sta	<R1
  7291 09:D57B: A9 00 00     	lda	#$0
  7292 09:D57E: 65 2C        	adc	<L219+current_segment_0+2
  7293 09:D580: 85 07        	sta	<R1+2
  7294 09:D582: D4 07        	pei	<R1+2
  7295 09:D584: D4 05        	pei	<R1
  7296 09:D586: F4 0C 00     	pea	#<$c
  7297 09:D589: 22 xx xx xx  	jsl	~~my_Memory
  7298                        ;  my_Memory(MEMORY_SORT_INTERSEG,&current_segment
                    ->nb_interseg,&current_segment->tab_interseg);
  7299                        	.line	856
  7300 09:D58D: 18           	clc
  Mon Sep 27 2021  9:39                                                Page 136


  7301 09:D58E: A9 5D 0A     	lda	#$a5d
  7302 09:D591: 65 2A        	adc	<L219+current_segment_0
  7303 09:D593: 85 01        	sta	<R0
  7304 09:D595: A9 00 00     	lda	#$0
  7305 09:D598: 65 2C        	adc	<L219+current_segment_0+2
  7306 09:D59A: 85 03        	sta	<R0+2
  7307 09:D59C: D4 03        	pei	<R0+2
  7308 09:D59E: D4 01        	pei	<R0
  7309 09:D5A0: 18           	clc
  7310 09:D5A1: A9 5B 0A     	lda	#$a5b
  7311 09:D5A4: 65 2A        	adc	<L219+current_segment_0
  7312 09:D5A6: 85 05        	sta	<R1
  7313 09:D5A8: A9 00 00     	lda	#$0
  7314 09:D5AB: 65 2C        	adc	<L219+current_segment_0+2
  7315 09:D5AD: 85 07        	sta	<R1+2
  7316 09:D5AF: D4 07        	pei	<R1+2
  7317 09:D5B1: D4 05        	pei	<R1
  7318 09:D5B3: F4 16 00     	pea	#<$16
  7319 09:D5B6: 22 xx xx xx  	jsl	~~my_Memory
  7320                        ;
  7321                        ;  /* OK */
  7322                        ;  return(0);
  7323                        	.line	859
  7324 09:D5BA: A9 00 00     	lda	#$0
  7325 09:D5BD: 82 83 FA     	brl	L226
  7326                        ;}
  7327                        	.line	860
  7328                        	.endblock	860
  7329             00000020   L219	equ	32
  7330             0000000D   L220	equ	13
  7331 09:D5C0:              	ends
  7332                        	efunc
  7333                        	.endfunc	860,13,32
  7334                        	.line	860
  7335                        ;
  7336                        ;
  7337                        ;/************************************************
                    *******************/
  7338                        ;/*  mem_free_omf() :  Libération mémoire de la st
                    ructure omf_file. */
  7339                        ;/************************************************
                    *******************/
  7340                        ;void mem_free_omf(struct omf_file *current_file)
  7341                        ;{
  7342                        	.line	866
  7343                        	.line	867
  7344                        	LOADER
  7345                        	xdef	~~mem_free_omf
  7346                        	func
  7347                        	.function	867
  7348                        ~~mem_free_omf:
  7349                        	longa	on
  7350                        	longi	on
  7351 09:D5C0: 3B           	tsc
  7352 09:D5C1: 38           	sec
  7353 09:D5C2: E9 08 00     	sbc	#L257
  7354 09:D5C5: 1B           	tcs
  7355 09:D5C6: 0B           	phd
  Mon Sep 27 2021  9:39                                                Page 137


  7356 09:D5C7: 5B           	tcd
  7357             00000004   current_file_0	set	4
  7358                        	.block	867
  7359                        ;  struct omf_segment *current_segment;
  7360                        ;  struct omf_segment *next_segment;
  7361                        ;
  7362                        ;  if(current_file)
  7363             00000000   current_segment_1	set	0
  7364             00000004   next_segment_1	set	4
  7365                        	.sym	current_segment,0,138,1,32,50
  7366                        	.sym	next_segment,4,138,1,32,50
  7367                        	.sym	current_file,4,138,6,32,51
  7368                        	.line	871
  7369                        ;    {
  7370 09:D5C8: A5 0C        	lda	<L257+current_file_0
  7371 09:D5CA: 05 0E        	ora	<L257+current_file_0+2
  7372 09:D5CC: D0 03        	bne	L260
  7373 09:D5CE: 82 78 00     	brl	L10109
  7374                        L260:
  7375                        	.line	872
  7376                        ;      if(current_file->file_path)
  7377                        	.line	873
  7378                        ;        k_free(current_file->file_path);
  7379 09:D5D1: A7 0C        	lda	[<L257+current_file_0]
  7380 09:D5D3: A0 02 00     	ldy	#$2
  7381 09:D5D6: 17 0C        	ora	[<L257+current_file_0],Y
  7382 09:D5D8: D0 03        	bne	L261
  7383 09:D5DA: 82 0D 00     	brl	L10110
  7384                        L261:
  7385                        	.line	874
  7386 09:D5DD: A0 02 00     	ldy	#$2
  7387 09:D5E0: B7 0C        	lda	[<L257+current_file_0],Y
  7388 09:D5E2: 48           	pha
  7389 09:D5E3: A7 0C        	lda	[<L257+current_file_0]
  7390 09:D5E5: 48           	pha
  7391 09:D5E6: 22 xx xx xx  	jsl	~~k_free
  7392                        ;
  7393                        ;      if(current_file->data)
  7394                        L10110:
  7395                        	.line	876
  7396                        ;        k_free(current_file->data);
  7397 09:D5EA: A0 0A 00     	ldy	#$a
  7398 09:D5ED: B7 0C        	lda	[<L257+current_file_0],Y
  7399 09:D5EF: A0 0C 00     	ldy	#$c
  7400 09:D5F2: 17 0C        	ora	[<L257+current_file_0],Y
  7401 09:D5F4: D0 03        	bne	L262
  7402 09:D5F6: 82 10 00     	brl	L10111
  7403                        L262:
  7404                        	.line	877
  7405 09:D5F9: A0 0C 00     	ldy	#$c
  7406 09:D5FC: B7 0C        	lda	[<L257+current_file_0],Y
  7407 09:D5FE: 48           	pha
  7408 09:D5FF: A0 0A 00     	ldy	#$a
  7409 09:D602: B7 0C        	lda	[<L257+current_file_0],Y
  7410 09:D604: 48           	pha
  7411 09:D605: 22 xx xx xx  	jsl	~~k_free
  7412                        ;
  7413                        ;      /* Libération des segments */
  Mon Sep 27 2021  9:39                                                Page 138


  7414                        ;      for(current_segment = current_file->first_s
                    egment; current_segment; )
  7415                        L10111:
  7416                        	.line	880
  7417 09:D609: A0 10 00     	ldy	#$10
  7418 09:D60C: B7 0C        	lda	[<L257+current_file_0],Y
  7419 09:D60E: 85 01        	sta	<L258+current_segment_1
  7420 09:D610: A0 12 00     	ldy	#$12
  7421 09:D613: B7 0C        	lda	[<L257+current_file_0],Y
  7422 09:D615: 85 03        	sta	<L258+current_segment_1+2
  7423 09:D617: 82 1E 00     	brl	L10115
  7424                        L10114:
  7425                        ;        {
  7426                        	.line	881
  7427                        ;          next_segment = current_segment->next;
  7428                        	.line	882
  7429 09:D61A: A0 61 0A     	ldy	#$a61
  7430 09:D61D: B7 01        	lda	[<L258+current_segment_1],Y
  7431 09:D61F: 85 05        	sta	<L258+next_segment_1
  7432 09:D621: A0 63 0A     	ldy	#$a63
  7433 09:D624: B7 01        	lda	[<L258+current_segment_1],Y
  7434 09:D626: 85 07        	sta	<L258+next_segment_1+2
  7435                        ;          mem_free_segment(current_segment);
  7436                        	.line	883
  7437 09:D628: D4 03        	pei	<L258+current_segment_1+2
  7438 09:D62A: D4 01        	pei	<L258+current_segment_1
  7439 09:D62C: 22 59 D6 09  	jsl	~~mem_free_segment
  7440                        ;          current_segment = next_segment;
  7441                        	.line	884
  7442 09:D630: A5 05        	lda	<L258+next_segment_1
  7443 09:D632: 85 01        	sta	<L258+current_segment_1
  7444 09:D634: A5 07        	lda	<L258+next_segment_1+2
  7445 09:D636: 85 03        	sta	<L258+current_segment_1+2
  7446                        ;        }
  7447                        	.line	885
  7448                        L10112:
  7449                        L10115:
  7450 09:D638: A5 01        	lda	<L258+current_segment_1
  7451 09:D63A: 05 03        	ora	<L258+current_segment_1+2
  7452 09:D63C: F0 03        	beq	L263
  7453 09:D63E: 82 D9 FF     	brl	L10114
  7454                        L263:
  7455                        L10113:
  7456                        ;
  7457                        ;      k_free(current_file);
  7458                        	.line	887
  7459 09:D641: D4 0E        	pei	<L257+current_file_0+2
  7460 09:D643: D4 0C        	pei	<L257+current_file_0
  7461 09:D645: 22 xx xx xx  	jsl	~~k_free
  7462                        ;    }
  7463                        	.line	888
  7464                        ;}
  7465                        L10109:
  7466                        	.line	889
  7467                        L264:
  7468 09:D649: A5 0A        	lda	<L257+2
  7469 09:D64B: 85 0E        	sta	<L257+2+4
  7470 09:D64D: A5 09        	lda	<L257+1
  Mon Sep 27 2021  9:39                                                Page 139


  7471 09:D64F: 85 0D        	sta	<L257+1+4
  7472 09:D651: 2B           	pld
  7473 09:D652: 3B           	tsc
  7474 09:D653: 18           	clc
  7475 09:D654: 69 0C 00     	adc	#L257+4
  7476 09:D657: 1B           	tcs
  7477 09:D658: 6B           	rtl
  7478                        	.endblock	889
  7479             00000008   L257	equ	8
  7480             00000001   L258	equ	1
  7481 09:D659:              	ends
  7482                        	efunc
  7483                        	.endfunc	889,1,8
  7484                        	.line	889
  7485                        ;
  7486                        ;
  7487                        ;/************************************************
                    **************************/
  7488                        ;/*  mem_free_segment() :  Libération mémoire de l
                    a structure omf_segment. */
  7489                        ;/************************************************
                    **************************/
  7490                        ;static void mem_free_segment(struct omf_segment *
                    current_segment)
  7491                        ;{
  7492                        	.line	895
  7493                        	.line	896
  7494                        	LOADER
  7495                        	func
  7496                        	.function	896
  7497                        ~~mem_free_segment:
  7498                        	longa	on
  7499                        	longi	on
  7500 09:D659: 3B           	tsc
  7501 09:D65A: 38           	sec
  7502 09:D65B: E9 16 00     	sbc	#L265
  7503 09:D65E: 1B           	tcs
  7504 09:D65F: 0B           	phd
  7505 09:D660: 5B           	tcd
  7506             00000004   current_segment_0	set	4
  7507                        	.block	896
  7508                        ;  int i;
  7509                        ;  struct omf_body_record *current_record;
  7510                        ;  struct omf_body_record *next_record;
  7511                        ;
  7512                        ;  if(current_segment)
  7513             00000000   i_1	set	0
  7514             00000002   current_record_1	set	2
  7515             00000006   next_record_1	set	6
  7516                        	.sym	i,0,5,1,16
  7517                        	.sym	current_record,2,138,1,32,93
  7518                        	.sym	next_record,6,138,1,32,93
  7519                        	.sym	current_segment,4,138,6,32,50
  7520                        	.line	901
  7521                        ;    {
  7522 09:D661: A5 1A        	lda	<L265+current_segment_0
  7523 09:D663: 05 1C        	ora	<L265+current_segment_0+2
  7524 09:D665: D0 03        	bne	L268
  Mon Sep 27 2021  9:39                                                Page 140


  7525 09:D667: 82 45 01     	brl	L10116
  7526                        L268:
  7527                        	.line	902
  7528                        ;      /* Libération des Records */
  7529                        ;      for(current_record=current_segment->first_r
                    ecord; current_record; )
  7530                        	.line	904
  7531 09:D66A: A0 41 0A     	ldy	#$a41
  7532 09:D66D: B7 1A        	lda	[<L265+current_segment_0],Y
  7533 09:D66F: 85 0F        	sta	<L266+current_record_1
  7534 09:D671: A0 43 0A     	ldy	#$a43
  7535 09:D674: B7 1A        	lda	[<L265+current_segment_0],Y
  7536 09:D676: 85 11        	sta	<L266+current_record_1+2
  7537 09:D678: 82 1E 00     	brl	L10120
  7538                        L10119:
  7539                        ;        {
  7540                        	.line	905
  7541                        ;          next_record = current_record->next;
  7542                        	.line	906
  7543 09:D67B: A0 11 00     	ldy	#$11
  7544 09:D67E: B7 0F        	lda	[<L266+current_record_1],Y
  7545 09:D680: 85 13        	sta	<L266+next_record_1
  7546 09:D682: A0 13 00     	ldy	#$13
  7547 09:D685: B7 0F        	lda	[<L266+current_record_1],Y
  7548 09:D687: 85 15        	sta	<L266+next_record_1+2
  7549                        ;          mem_free_record(current_record);
  7550                        	.line	907
  7551 09:D689: D4 11        	pei	<L266+current_record_1+2
  7552 09:D68B: D4 0F        	pei	<L266+current_record_1
  7553 09:D68D: 22 xx xx xx  	jsl	~~mem_free_record
  7554                        ;          current_record = next_record;
  7555                        	.line	908
  7556 09:D691: A5 13        	lda	<L266+next_record_1
  7557 09:D693: 85 0F        	sta	<L266+current_record_1
  7558 09:D695: A5 15        	lda	<L266+next_record_1+2
  7559 09:D697: 85 11        	sta	<L266+current_record_1+2
  7560                        ;        }
  7561                        	.line	909
  7562                        L10117:
  7563                        L10120:
  7564 09:D699: A5 0F        	lda	<L266+current_record_1
  7565 09:D69B: 05 11        	ora	<L266+current_record_1+2
  7566 09:D69D: F0 03        	beq	L269
  7567 09:D69F: 82 D9 FF     	brl	L10119
  7568                        L269:
  7569                        L10118:
  7570                        ;
  7571                        ;      /* Libération des Data */
  7572                        ;      if(current_segment->data)
  7573                        	.line	912
  7574                        ;        k_free(current_segment->data);
  7575 09:D6A2: A0 4D 0A     	ldy	#$a4d
  7576 09:D6A5: B7 1A        	lda	[<L265+current_segment_0],Y
  7577 09:D6A7: A0 4F 0A     	ldy	#$a4f
  7578 09:D6AA: 17 1A        	ora	[<L265+current_segment_0],Y
  7579 09:D6AC: D0 03        	bne	L270
  7580 09:D6AE: 82 10 00     	brl	L10121
  7581                        L270:
  Mon Sep 27 2021  9:39                                                Page 141


  7582                        	.line	913
  7583 09:D6B1: A0 4F 0A     	ldy	#$a4f
  7584 09:D6B4: B7 1A        	lda	[<L265+current_segment_0],Y
  7585 09:D6B6: 48           	pha
  7586 09:D6B7: A0 4D 0A     	ldy	#$a4d
  7587 09:D6BA: B7 1A        	lda	[<L265+current_segment_0],Y
  7588 09:D6BC: 48           	pha
  7589 09:D6BD: 22 xx xx xx  	jsl	~~k_free
  7590                        ;
  7591                        ;      /* Libération des tableaux */
  7592                        ;      if(current_segment->tab_reloc)
  7593                        L10121:
  7594                        	.line	916
  7595                        ;        {
  7596 09:D6C1: A0 57 0A     	ldy	#$a57
  7597 09:D6C4: B7 1A        	lda	[<L265+current_segment_0],Y
  7598 09:D6C6: A0 59 0A     	ldy	#$a59
  7599 09:D6C9: 17 1A        	ora	[<L265+current_segment_0],Y
  7600 09:D6CB: D0 03        	bne	L271
  7601 09:D6CD: 82 64 00     	brl	L10122
  7602                        L271:
  7603                        	.line	917
  7604                        ;          for(i=0; i<current_segment->nb_reloc; i
                    ++)
  7605                        	.line	918
  7606 09:D6D0: 64 0D        	stz	<L266+i_1
  7607 09:D6D2: 82 3D 00     	brl	L10126
  7608                        L10125:
  7609                        ;            k_free(current_segment->tab_reloc[i])
                    ;
  7610                        	.line	919
  7611 09:D6D5: A0 00 00     	ldy	#$0
  7612 09:D6D8: A5 0D        	lda	<L266+i_1
  7613 09:D6DA: 10 01        	bpl	L272
  7614 09:D6DC: 88           	dey
  7615                        L272:
  7616 09:D6DD: 85 05        	sta	<R1
  7617 09:D6DF: 84 07        	sty	<R1+2
  7618 09:D6E1: D4 07        	pei	<R1+2
  7619 09:D6E3: D4 05        	pei	<R1
  7620 09:D6E5: A9 02 00     	lda	#$2
  7621                        	xref	~~~lasl
  7622 09:D6E8: 22 xx xx xx  	jsl	~~~lasl
  7623 09:D6EC: 85 01        	sta	<R0
  7624 09:D6EE: 86 03        	stx	<R0+2
  7625 09:D6F0: 18           	clc
  7626 09:D6F1: A0 57 0A     	ldy	#$a57
  7627 09:D6F4: B7 1A        	lda	[<L265+current_segment_0],Y
  7628 09:D6F6: 65 01        	adc	<R0
  7629 09:D6F8: 85 09        	sta	<R2
  7630 09:D6FA: A0 59 0A     	ldy	#$a59
  7631 09:D6FD: B7 1A        	lda	[<L265+current_segment_0],Y
  7632 09:D6FF: 65 03        	adc	<R0+2
  7633 09:D701: 85 0B        	sta	<R2+2
  7634 09:D703: A0 02 00     	ldy	#$2
  7635 09:D706: B7 09        	lda	[<R2],Y
  7636 09:D708: 48           	pha
  7637 09:D709: A7 09        	lda	[<R2]
  Mon Sep 27 2021  9:39                                                Page 142


  7638 09:D70B: 48           	pha
  7639 09:D70C: 22 xx xx xx  	jsl	~~k_free
  7640                        L10123:
  7641 09:D710: E6 0D        	inc	<L266+i_1
  7642                        L10126:
  7643 09:D712: 38           	sec
  7644 09:D713: A5 0D        	lda	<L266+i_1
  7645 09:D715: A0 55 0A     	ldy	#$a55
  7646 09:D718: F7 1A        	sbc	[<L265+current_segment_0],Y
  7647 09:D71A: 70 03        	bvs	L273
  7648 09:D71C: 49 00 80     	eor	#$8000
  7649                        L273:
  7650 09:D71F: 30 03        	bmi	L274
  7651 09:D721: 82 B1 FF     	brl	L10125
  7652                        L274:
  7653                        L10124:
  7654                        ;          k_free(current_segment->tab_reloc);
  7655                        	.line	920
  7656 09:D724: A0 59 0A     	ldy	#$a59
  7657 09:D727: B7 1A        	lda	[<L265+current_segment_0],Y
  7658 09:D729: 48           	pha
  7659 09:D72A: A0 57 0A     	ldy	#$a57
  7660 09:D72D: B7 1A        	lda	[<L265+current_segment_0],Y
  7661 09:D72F: 48           	pha
  7662 09:D730: 22 xx xx xx  	jsl	~~k_free
  7663                        ;        }
  7664                        	.line	921
  7665                        ;      if(current_segment->tab_interseg)
  7666                        L10122:
  7667                        	.line	922
  7668                        ;        {
  7669 09:D734: A0 5D 0A     	ldy	#$a5d
  7670 09:D737: B7 1A        	lda	[<L265+current_segment_0],Y
  7671 09:D739: A0 5F 0A     	ldy	#$a5f
  7672 09:D73C: 17 1A        	ora	[<L265+current_segment_0],Y
  7673 09:D73E: D0 03        	bne	L275
  7674 09:D740: 82 64 00     	brl	L10127
  7675                        L275:
  7676                        	.line	923
  7677                        ;          for(i=0; i<current_segment->nb_interseg
                    ; i++)
  7678                        	.line	924
  7679 09:D743: 64 0D        	stz	<L266+i_1
  7680 09:D745: 82 3D 00     	brl	L10131
  7681                        L10130:
  7682                        ;            k_free(current_segment->tab_interseg[
                    i]);
  7683                        	.line	925
  7684 09:D748: A0 00 00     	ldy	#$0
  7685 09:D74B: A5 0D        	lda	<L266+i_1
  7686 09:D74D: 10 01        	bpl	L276
  7687 09:D74F: 88           	dey
  7688                        L276:
  7689 09:D750: 85 05        	sta	<R1
  7690 09:D752: 84 07        	sty	<R1+2
  7691 09:D754: D4 07        	pei	<R1+2
  7692 09:D756: D4 05        	pei	<R1
  7693 09:D758: A9 02 00     	lda	#$2
  Mon Sep 27 2021  9:39                                                Page 143


  7694                        	xref	~~~lasl
  7695 09:D75B: 22 xx xx xx  	jsl	~~~lasl
  7696 09:D75F: 85 01        	sta	<R0
  7697 09:D761: 86 03        	stx	<R0+2
  7698 09:D763: 18           	clc
  7699 09:D764: A0 5D 0A     	ldy	#$a5d
  7700 09:D767: B7 1A        	lda	[<L265+current_segment_0],Y
  7701 09:D769: 65 01        	adc	<R0
  7702 09:D76B: 85 09        	sta	<R2
  7703 09:D76D: A0 5F 0A     	ldy	#$a5f
  7704 09:D770: B7 1A        	lda	[<L265+current_segment_0],Y
  7705 09:D772: 65 03        	adc	<R0+2
  7706 09:D774: 85 0B        	sta	<R2+2
  7707 09:D776: A0 02 00     	ldy	#$2
  7708 09:D779: B7 09        	lda	[<R2],Y
  7709 09:D77B: 48           	pha
  7710 09:D77C: A7 09        	lda	[<R2]
  7711 09:D77E: 48           	pha
  7712 09:D77F: 22 xx xx xx  	jsl	~~k_free
  7713                        L10128:
  7714 09:D783: E6 0D        	inc	<L266+i_1
  7715                        L10131:
  7716 09:D785: 38           	sec
  7717 09:D786: A5 0D        	lda	<L266+i_1
  7718 09:D788: A0 5B 0A     	ldy	#$a5b
  7719 09:D78B: F7 1A        	sbc	[<L265+current_segment_0],Y
  7720 09:D78D: 70 03        	bvs	L277
  7721 09:D78F: 49 00 80     	eor	#$8000
  7722                        L277:
  7723 09:D792: 30 03        	bmi	L278
  7724 09:D794: 82 B1 FF     	brl	L10130
  7725                        L278:
  7726                        L10129:
  7727                        ;          k_free(current_segment->tab_interseg);
  7728                        	.line	926
  7729 09:D797: A0 5F 0A     	ldy	#$a5f
  7730 09:D79A: B7 1A        	lda	[<L265+current_segment_0],Y
  7731 09:D79C: 48           	pha
  7732 09:D79D: A0 5D 0A     	ldy	#$a5d
  7733 09:D7A0: B7 1A        	lda	[<L265+current_segment_0],Y
  7734 09:D7A2: 48           	pha
  7735 09:D7A3: 22 xx xx xx  	jsl	~~k_free
  7736                        ;        }
  7737                        	.line	927
  7738                        ;
  7739                        ;      k_free(current_segment);
  7740                        L10127:
  7741                        	.line	929
  7742 09:D7A7: D4 1C        	pei	<L265+current_segment_0+2
  7743 09:D7A9: D4 1A        	pei	<L265+current_segment_0
  7744 09:D7AB: 22 xx xx xx  	jsl	~~k_free
  7745                        ;    }
  7746                        	.line	930
  7747                        ;}
  7748                        L10116:
  7749                        	.line	931
  7750                        L279:
  7751 09:D7AF: A5 18        	lda	<L265+2
  Mon Sep 27 2021  9:39                                                Page 144


  7752 09:D7B1: 85 1C        	sta	<L265+2+4
  7753 09:D7B3: A5 17        	lda	<L265+1
  7754 09:D7B5: 85 1B        	sta	<L265+1+4
  7755 09:D7B7: 2B           	pld
  7756 09:D7B8: 3B           	tsc
  7757 09:D7B9: 18           	clc
  7758 09:D7BA: 69 1A 00     	adc	#L265+4
  7759 09:D7BD: 1B           	tcs
  7760 09:D7BE: 6B           	rtl
  7761                        	.endblock	931
  7762             00000016   L265	equ	22
  7763             0000000D   L266	equ	13
  7764 09:D7BF:              	ends
  7765                        	efunc
  7766                        	.endfunc	931,13,22
  7767                        	.line	931
  7768                        ;
  7769                        ;/************************************************
                    ************************/
  7770                        ;
  7771                        	.line	933
  7772                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\omf/OMF_Load.c",895
  7773                        	xref	~~mem_free_record
  7774                        	xref	~~DecodeOneRecord
  7775                        	xref	~~LoadFileData
  7776                        	xref	~~my_Memory
  7777                        	xref	~~k_free
  7778                        	xref	~~k_calloc
  7779                        	xref	~~k_string_copy_string
  7780                        	xref	~~k_debug_strings
  7781                        	xref	~~k_debug_string
  7782                        	xref	~~strlen
  7783                        	xref	~~memcpy
  7784                        	.sym	~~mem_free_segment,~~mem_free_segment,65
                    ,3,0
  7785                        	.sym	~~DecodeSegmentBody,~~DecodeSegmentBody,
                    69,3,0
  7786                        	.sym	~~DecodeSegmentHeaderV2,~~DecodeSegmentH
                    eaderV2,69,3,0
  7787                        	.sym	~~DecodeSegmentHeaderV1,~~DecodeSegmentH
                    eaderV1,69,3,0
  7788                        	.sym	~~DecodeSegmentHeaderV0,~~DecodeSegmentH
                    eaderV0,69,3,0
  7789                        	.sym	~~DecodeSegmentHeader,~~DecodeSegmentHea
                    der,69,3,0
  7790                        	.sym	~~DecodeOneSegment,~~DecodeOneSegment,10
                    98,3,32,50
  7791                        	.sym	~~DecodeOMFFile,~~DecodeOMFFile,69,3,0
  7792                        	.sym	~~mem_free_record,~~mem_free_record,65,1
                    8,0
  7793                        	.sym	~~DecodeOneRecord,~~DecodeOneRecord,1098
                    ,18,32,93
  7794                        	.sym	~~LoadFileData,~~LoadFileData,1102,18,32
  7795                        	.sym	~~my_Memory,~~my_Memory,65,18,0
  7796                        	.sym	PALLOCATIONHEADER,0,138,14,32,92
  7797                        	.sym	ALLOCATIONHEADER,0,10,14,80,92
  7798                        	.sym	PIPCPORT,0,138,14,32,91
  Mon Sep 27 2021  9:39                                                Page 145


  7799                        	.sym	IPCPORT,0,10,14,144,91
  7800                        	.sym	~~k_free,~~k_free,65,18,0
  7801                        	.sym	~~k_calloc,~~k_calloc,1089,18,32
  7802                        	.sym	MemoryCallback,0,641,14,32
  7803                        	.sym	PFXMEMORYMAP,0,138,14,32,90
  7804                        	.sym	FXMEMORYMAP,0,10,14,2072,90
  7805                        	.sym	UMM_HEAP_INFO,0,10,14,256,89
  7806                        	.sym	FRESULT,0,5,14,16
  7807                        	.sym	MKFS_PARM,0,10,14,80,88
  7808                        	.sym	FILINFO,0,10,14,2224,87
  7809                        	.sym	DIR,0,10,14,416,86
  7810                        	.sym	FIL,0,10,14,4400,85
  7811                        	.sym	FFOBJID,0,10,14,128,84
  7812                        	.sym	FATFS,0,10,14,4504,83
  7813                        	.sym	LBA_t,0,18,14,32
  7814                        	.sym	FSIZE_t,0,18,14,32
  7815                        	.sym	TCHAR,0,14,14,8
  7816                        	.sym	PCOMMANDARGS,0,138,14,32,82
  7817                        	.sym	COMMANDARGS,0,10,14,64,82
  7818                        	.sym	PTOKENIZESTATE,0,133,14,32
  7819                        	.sym	TOKENIZESTATE,0,5,14,16
  7820                        	.sym	PTOKEN,0,138,14,32,81
  7821                        	.sym	TOKEN,0,10,14,64,81
  7822                        	.sym	PTOKENTYPE,0,133,14,32
  7823                        	.sym	TOKENTYPE,0,5,14,16
  7824                        	.sym	FXCommandHandler,0,656,14,32
  7825                        	.sym	PCONSOLECTX,0,138,14,32,80
  7826                        	.sym	CONSOLECTX,0,10,14,1144,80
  7827                        	.sym	PSPINNERCTX,0,138,14,32,79
  7828                        	.sym	SPINNERCTX,0,10,14,48,79
  7829                        	.sym	HCLIP,0,138,14,32,78
  7830                        	.sym	PCLIPBOARD_DATA,0,138,14,32,78
  7831                        	.sym	CLIPBOARD_DATA,0,10,14,168,78
  7832                        	.sym	PEVENTMANAGER,0,138,14,32,77
  7833                        	.sym	EVENTMANAGER,0,10,14,192,77
  7834                        	.sym	EV_RUN,0,656,14,32
  7835                        	.sym	EV_QUERY_METRIC,0,656,14,32
  7836                        	.sym	EV_CONFIGURE,0,656,14,32
  7837                        	.sym	EV_UNINIT,0,641,14,32
  7838                        	.sym	EV_INIT,0,8833,14,32
  7839                        	.sym	PMOUSE_MSG_STATE,0,138,14,32,76
  7840                        	.sym	MOUSE_MSG_STATE,0,10,14,184,76
  7841                        	.sym	PFXEVENTPROCESS,0,138,14,32,75
  7842                        	.sym	FXEVENTPROCESS,0,10,14,64,75
  7843                        	.sym	FXASYNCPROCESS,0,641,14,32
  7844                        	.sym	PMARSHALDATA,0,139,14,32,74
  7845                        	.sym	MARSHALDATA,0,11,14,32,74
  7846                        	.sym	FXIDLEPROCESS,0,641,14,32
  7847                        	.sym	FXEventProc,0,641,14,32
  7848                        	.sym	PMOUSEMSGDATA,0,138,14,32,73
  7849                        	.sym	MOUSEMSGDATA,0,10,14,64,73
  7850                        	.sym	MSGIRQ,0,5,14,16
  7851                        	.sym	MAINLOOPARGS,0,10,14,16,72
  7852                        	.sym	PEACHCHILD_MSG,0,138,14,32,71
  7853                        	.sym	EACHCHILD_MSG,0,10,14,64,71
  7854                        	.sym	PMSGBOX_DATA,0,138,14,32,70
  7855                        	.sym	MSGBOX_DATA,0,10,14,96,70
  7856                        	.sym	PDESKTOP_DATA,0,138,14,32,69
  Mon Sep 27 2021  9:39                                                Page 146


  7857                        	.sym	DESKTOP_DATA,0,10,14,64,69
  7858                        	.sym	PWINDOWMANAGER,0,138,14,32,68
  7859                        	.sym	WINDOWMANAGER,0,10,14,160,68
  7860                        	.sym	WM_DOPROCS,0,641,14,32
  7861                        	.sym	WM_QUERY_METRIC,0,656,14,32
  7862                        	.sym	WM_CONFIGURE,0,656,14,32
  7863                        	.sym	WM_HANDLE_EVENT,0,8833,14,32
  7864                        	.sym	WM_EVENTS,0,641,14,32
  7865                        	.sym	PCUR_PALETTE_MAP,0,138,14,32,67
  7866                        	.sym	CUR_PALETTE_MAP,0,10,14,400,67
  7867                        	.sym	PCLICKDETECTED,0,138,14,32,66
  7868                        	.sym	CLICKDETECTED,0,10,14,64,66
  7869                        	.sym	OBJECTCLICKED,0,641,14,32
  7870                        	.sym	PEXECUTIVE,0,138,14,32,65
  7871                        	.sym	EXECUTIVE,0,10,14,128,65
  7872                        	.sym	EX_QUERY_METRIC,0,656,14,32
  7873                        	.sym	EX_CONFIGURE,0,656,14,32
  7874                        	.sym	EX_UNINIT,0,641,14,32
  7875                        	.sym	EX_INIT,0,8833,14,32
  7876                        	.sym	~~k_string_copy_string,~~k_string_copy_s
                    tring,1102,18,32
  7877                        	.sym	PFXSTRING,0,138,14,32,64
  7878                        	.sym	FXSTRING,0,10,14,64,64
  7879                        	.sym	PIRQCHAIN,0,138,14,32,63
  7880                        	.sym	IRQCHAIN,0,10,14,128,63
  7881                        	.sym	DEVICEDRIVER_COMMAND,0,654,14,32
  7882                        	.sym	DEVICEDRIVER_UNLOAD,0,654,14,32
  7883                        	.sym	DEVICEDRIVER_WRITE,0,654,14,32
  7884                        	.sym	DEVICEDRIVER_READ,0,654,14,32
  7885                        	.sym	DEVICEDRIVER_LOAD,0,654,14,32
  7886                        	.sym	DEVICEDRIVER_IRQ,0,641,14,32
  7887                        	.sym	PFX_BLOCK_DEVICE_DRIVER,0,138,14,32,62
  7888                        	.sym	FX_BLOCK_DEVICE_DRIVER,0,10,14,808,62
  7889                        	.sym	GETDRIVERDEF,0,8842,14,32,61
  7890                        	.sym	PFX_DEVICE_DRIVER,0,138,14,32,61
  7891                        	.sym	FX_DEVICE_DRIVER,0,10,14,776,61
  7892                        	.sym	~~k_debug_strings,~~k_debug_strings,65,1
                    8,0
  7893                        	.sym	~~k_debug_string,~~k_debug_string,65,18,
                    0
  7894                        	.sym	PSEGMENTHEADER,0,138,14,32,60
  7895                        	.sym	SEGMENTHEADER,0,10,14,160,60
  7896                        	.sym	PDEBUGBYTEBITS,0,138,14,32,59
  7897                        	.sym	DEBUGBYTEBITS,0,10,14,8,59
  7898                        	.sym	PFXENVIRONMENT,0,138,14,32,58
  7899                        	.sym	FXENVIRONMENT,0,10,14,96,58
  7900                        	.sym	PFXZEROPAGE,0,138,14,32,57
  7901                        	.sym	FXZEROPAGE,0,10,14,720,57
  7902                        	.sym	IRQBUFFER,0,10,14,32,56
  7903                        	.sym	KERNELTRAPCALL,0,641,14,32
  7904                        	.sym	PFXKERNEL_API_CALLTABLE,0,138,14,32,55
  7905                        	.sym	FXKERNEL_API_CALLTABLE,0,10,14,8192,55
  7906                        	.sym	FOREACHNODEUNTIL,0,654,14,32
  7907                        	.sym	FOREACHNODE,0,641,14,32
  7908                        	.sym	~~strlen,~~strlen,80,18,0
  7909                        	.sym	~~memcpy,~~memcpy,1089,18,32
  7910                        	.sym	Boolean_T,0,5,14,16
  7911                        	.sym	ldiv_t,0,10,14,64,53
  Mon Sep 27 2021  9:39                                                Page 147


  7912                        	.sym	div_t,0,10,14,32,52
  7913                        	.sym	wctype_t,0,16,14,16
  7914                        	.sym	wint_t,0,16,14,16
  7915                        	.sym	wchar_t,0,14,14,8
  7916                        	.sym	ptrdiff_t,0,7,14,32
  7917                        	.sym	size_t,0,16,14,16
  7918                        	.sym	~~mem_free_omf,~~mem_free_omf,65,2,0
  7919                        	.sym	~~LoadOMFFile,~~LoadOMFFile,1098,2,32,51
  7920                        	.sym	PFXRFHEADER_STRING_ENTRY,0,138,14,32,48
  7921                        	.sym	FXRFHEADER_STRING_ENTRY,0,10,14,40,48
  7922                        	.sym	PFXRFHEADER_STRING,0,138,14,32,47
  7923                        	.sym	FXRFHEADER_STRING,0,10,14,32,47
  7924                        	.sym	PFXRFHEADER_FONT,0,138,14,32,46
  7925                        	.sym	FXRFHEADER_FONT,0,10,14,144,46
  7926                        	.sym	PFXRFHEADER,0,138,14,32,45
  7927                        	.sym	FXRFHEADER,0,10,14,72,45
  7928                        	.sym	PFXCOMBUFFER,0,138,14,32,44
  7929                        	.sym	FXCOMBUFFER,0,10,14,2080,44
  7930                        	.sym	PSUBMENULIST,0,138,14,32,43
  7931                        	.sym	SUBMENULIST,0,10,14,40,43
  7932                        	.sym	HSUBMENU,0,7,14,32
  7933                        	.sym	PSUBMENU,0,138,14,32,42
  7934                        	.sym	SUBMENU,0,10,14,64,42
  7935                        	.sym	MenuAction,0,641,14,32
  7936                        	.sym	PMENUANCHOR,0,138,14,32,41
  7937                        	.sym	MENUANCHOR,0,10,14,272,41
  7938                        	.sym	PMSGBOX,0,138,14,32,40
  7939                        	.sym	MSGBOX,0,10,14,144,40
  7940                        	.sym	PTEXTBOX,0,138,14,32,39
  7941                        	.sym	TEXTBOX,0,10,14,144,39
  7942                        	.sym	PLISTBOX,0,138,14,32,38
  7943                        	.sym	LISTBOX,0,10,14,240,38
  7944                        	.sym	PSCROLLBAR,0,138,14,32,37
  7945                        	.sym	SCROLLBAR,0,10,14,240,37
  7946                        	.sym	PBUTTON,0,138,14,32,36
  7947                        	.sym	BUTTON,0,10,14,96,36
  7948                        	.sym	PMENUDROPDOWNDATA,0,138,14,32,35
  7949                        	.sym	MENUDROPDOWNDATA,0,10,14,5152,35
  7950                        	.sym	PMENUTAG,0,138,14,32,34
  7951                        	.sym	MENUTAG,0,10,14,160,34
  7952                        	.sym	PMENU,0,138,14,32,33
  7953                        	.sym	MENU,0,10,14,280,33
  7954                        	.sym	HMENURESOURCE,0,129,14,32
  7955                        	.sym	FONTMETRIC,0,10,14,32,32
  7956                        	.sym	TITLE,0,142,14,32
  7957                        	.sym	PHANDLE,0,1153,14,32
  7958                        	.sym	HANDLE,0,129,14,32
  7959                        	.sym	PWINDOWEX,0,138,14,32,31
  7960                        	.sym	WINDOWEX,0,10,14,3880,31
  7961                        	.sym	PWINDOW,0,138,14,32,30
  7962                        	.sym	WINDOW,0,10,14,3904,30
  7963                        	.sym	PDRAGDATA,0,138,14,32,29
  7964                        	.sym	DRAGDATA,0,10,14,216,29
  7965                        	.sym	PNCCLICKABLE,0,138,14,32,28
  7966                        	.sym	NCCLICKABLE,0,10,14,136,28
  7967                        	.sym	HCLICKABLE,0,7,14,32
  7968                        	.sym	PCLICKABLE,0,138,14,32,27
  7969                        	.sym	CLICKABLE,0,10,14,152,27
  Mon Sep 27 2021  9:39                                                Page 148


  7970                        	.sym	PWNDCLASS,0,138,14,32,26
  7971                        	.sym	WNDCLASS,0,10,14,272,26
  7972                        	.sym	HBRUSH,0,129,14,32
  7973                        	.sym	HCURSOR,0,129,14,32
  7974                        	.sym	HICON,0,129,14,32
  7975                        	.sym	HINSTANCE,0,129,14,32
  7976                        	.sym	FXWndProc,0,654,14,32
  7977                        	.sym	PDRECT,0,138,14,32,25
  7978                        	.sym	DRECT,0,10,14,112,25
  7979                        	.sym	PRECTP,0,138,14,32,24
  7980                        	.sym	RECTP,0,10,14,96,24
  7981                        	.sym	PRECT,0,138,14,32,23
  7982                        	.sym	RECT,0,10,14,112,23
  7983                        	.sym	PPOINT,0,138,14,32,22
  7984                        	.sym	POINT,0,10,14,32,22
  7985                        	.sym	PFXPROPERTY,0,138,14,32,20
  7986                        	.sym	FXPROPERTY,0,10,14,384,20
  7987                        	.sym	PKEYSTATE,0,138,14,32,19
  7988                        	.sym	KEYSTATE,0,10,14,112,19
  7989                        	.sym	SCANCODE,0,14,14,8
  7990                        	.sym	KEYCODE,0,16,14,16
  7991                        	.sym	PFXPROCESSMESSAGE,0,138,14,32,18
  7992                        	.sym	FXPROCESSMESSAGE,0,10,14,112,18
  7993                        	.sym	PFXPROCESS,0,138,14,32,17
  7994                        	.sym	FXPROCESS,0,10,14,800,17
  7995                        	.sym	PDESKTOP_CONTROL,0,138,14,32,16
  7996                        	.sym	DESKTOP_CONTROL,0,10,14,392,16
  7997                        	.sym	PCONSOLE_CONTROL,0,138,14,32,15
  7998                        	.sym	CONSOLE_CONTROL,0,10,14,448,15
  7999                        	.sym	FXProcessProc,0,641,14,32
  8000                        	.sym	PFXCMDMESSAGE,0,138,14,32,14
  8001                        	.sym	FXCMDMESSAGE,0,10,14,312,14
  8002                        	.sym	PFXOSMESSAGE,0,138,14,32,13
  8003                        	.sym	FXOSMESSAGE,0,10,14,312,13
  8004                        	.sym	PINT_REGS,0,138,14,32,12
  8005                        	.sym	INT_REGS,0,10,14,104,12
  8006                        	.sym	TASK_STACK,0,10,14,32,11
  8007                        	.sym	TASK,0,10,14,48,10
  8008                        	.sym	PIRQDATA,0,138,14,32,9
  8009                        	.sym	IRQDATA,0,10,14,48,9
  8010                        	.sym	HMENU,0,129,14,32
  8011                        	.sym	HWND,0,129,14,32
  8012                        	.sym	MSGDATA,0,14,14,8
  8013                        	.sym	MSGDEST,0,18,14,32
  8014                        	.sym	MSGSRC,0,18,14,32
  8015                        	.sym	MSGTYPE,0,16,14,16
  8016                        	.sym	PROCESS_RESOURCE_LIST,0,138,14,32,3
  8017                        	.sym	PROCESS_TLS_LIST,0,138,14,32,3
  8018                        	.sym	SEMAPHORE_LIST,0,138,14,32,3
  8019                        	.sym	FILE_BLOCK_LIST,0,138,14,32,3
  8020                        	.sym	FILE_PATH_LIST,0,138,14,32,3
  8021                        	.sym	PROCEDURE_LIST,0,138,14,32,3
  8022                        	.sym	FILE_HANDLE,0,138,14,32,8
  8023                        	.sym	FILE_BLOCK,0,10,14,552,8
  8024                        	.sym	SEMAPHORE,0,10,14,16,7
  8025                        	.sym	PPROCESS_SIGNAL,0,138,14,32,6
  8026                        	.sym	PROCESS_SIGNAL,0,10,14,16,6
  8027                        	.sym	KRESULT,0,18,14,32
  Mon Sep 27 2021  9:39                                                Page 149


  8028                        	.sym	PKERNEL_ERROR,0,138,14,32,5
  8029                        	.sym	KERNEL_ERROR,0,10,14,32,5
  8030                        	.sym	PROCESS_STATUS,0,16,14,16
  8031                        	.sym	FILE_PATH_NAME,0,142,14,32
  8032                        	.sym	PROCESS_RESOURCE,0,129,14,32
  8033                        	.sym	PROCESS_TLS,0,129,14,32
  8034                        	.sym	PROCESS_CTX,0,129,14,32
  8035                        	.sym	USERID,0,16,14,16
  8036                        	.sym	PROCESS_ID,0,18,14,32
  8037                        	.sym	PROCESS_BANK,0,14,14,8
  8038                        	.sym	PFXQUEUE,0,138,14,32,4
  8039                        	.sym	FXQUEUE,0,10,14,80,4
  8040                        	.sym	PFXNODELIST,0,138,14,32,3
  8041                        	.sym	FXNODELIST,0,10,14,96,3
  8042                        	.sym	NodeListDeallocator,0,641,14,32
  8043                        	.sym	PFXNODE,0,138,14,32,2
  8044                        	.sym	FXNODE,0,10,14,384,2
  8045                        	.sym	PBYTEBITS,0,138,14,32,1
  8046                        	.sym	BYTEBITS,0,10,14,8,1
  8047                        	.sym	HRESULT,0,18,14,32
  8048                        	.sym	LPWCHAR,0,144,14,32
  8049                        	.sym	WCHAR,0,16,14,16
  8050                        	.sym	HSTRINGTABLE,0,129,14,32
  8051                        	.sym	HCOLOR,0,129,14,32
  8052                        	.sym	HFONT,0,129,14,32
  8053                        	.sym	HDC,0,129,14,32
  8054                        	.sym	HPOINTER,0,129,14,32
  8055                        	.sym	uint32_t,0,18,14,32
  8056                        	.sym	uint8_t,0,14,14,8
  8057                        	.sym	LPBOOL,0,142,14,32
  8058                        	.sym	BOOL,0,14,14,8
  8059                        	.sym	DWORD,0,18,14,32
  8060                        	.sym	ULONG,0,18,14,32
  8061                        	.sym	LPLONG,0,135,14,32
  8062                        	.sym	LONG,0,7,14,32
  8063                        	.sym	PUINT,0,144,14,32
  8064                        	.sym	USHORT,0,16,14,16
  8065                        	.sym	UINT,0,16,14,16
  8066                        	.sym	INT,0,5,14,16
  8067                        	.sym	WORD,0,5,14,16
  8068                        	.sym	PBYTE,0,142,14,32
  8069                        	.sym	BYTE,0,14,14,8
  8070                        	.sym	IOPORT,0,142,14,32
  8071                        	.sym	PUCHAR,0,142,14,32
  8072                        	.sym	UCHAR,0,14,14,8
  8073                        	.sym	LPWCSTR,0,142,14,32
  8074                        	.sym	LPCSTR,0,142,14,32
  8075                        	.sym	LPSTR,0,142,14,32
  8076                        	.sym	LPCHAR,0,142,14,32
  8077                        	.sym	CHAR,0,14,14,8
  8078                        	.sym	PUINT_32,0,146,14,32
  8079                        	.sym	UINT_32,0,18,14,32
  8080                        	.sym	PUINT_16,0,144,14,32
  8081                        	.sym	UINT_16,0,16,14,16
  8082                        	.sym	PUINT_8,0,142,14,32
  8083                        	.sym	UINT_8,0,14,14,8
  8084                        	.sym	LPVOID,0,129,14,32
  8085                        	.sym	VOID,0,1,14,32
  Mon Sep 27 2021  9:39                                                Page 150


  8086                        	end


      Lines assembled: 8086
      Errors: 0
