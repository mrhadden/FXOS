  Sat Jul 10 2021  1:15                                                Page 1


                     ***************************************
                     **      WDC 65C816 Macro Assembler   **
                     **                                   **
                     **     Version 3.49.1- Feb  6 2006    **
                     ***************************************

     1                        ;:ts=8
     2             00000001   R0	equ	1
     3             00000005   R1	equ	5
     4             00000009   R2	equ	9
     5             0000000D   R3	equ	13
     6                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\flpydsk.c",0
     7                        ;//***********************************************
                    *****************************
     8                        ;//**
     9                        ;//**    flpydsk.cpp
    10                        ;//**		-Floppy Disk driver
    11                        ;//**
    12                        ;//***********************************************
                    *****************************
    13                        ;//===============================================
                    =============================
    14                        ;//    IMPLEMENTATION HEADERS
    15                        ;//===============================================
                    =============================
    16                        ;
    17                        ;#include "fxos.h"
    18                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos.h",0
    19                        	.file	"G:\devtools\WDCTools\wdc\Tools\include\
                    stdlib.h",0
    20                        	.file	"G:\devtools\WDCTools\wdc\Tools\include\
                    stddef.h",0
    21                        	.line	88
    22                        	.file	"G:\devtools\WDCTools\wdc\Tools\include\
                    stdlib.h",43
    23                        	.stag	fake1_,32,1
    24                        	.member	quot,0,5,8,16
    25                        	.member	rem,16,5,8,16
    26                        	.eos
    27                        	.stag	fake2_,64,2
    28                        	.member	quot,0,7,8,32
    29                        	.member	rem,32,7,8,32
    30                        	.eos
    31                        	.stag	int_sqrt,32,3
    32                        	.member	sqrt,0,16,8,16
    33                        	.member	frac,16,16,8,16
    34                        	.eos
    35                        	.line	205
    36                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos.h",4
    37                        	.file	"G:\devtools\WDCTools\wdc\Tools\include\
                    string.h",0
    38                        	.line	134
    39                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos.h",5
    40                        	.file	"G:\devtools\WDCTools\wdc\Tools\include\
  Sat Jul 10 2021  1:15                                                Page 2


                    ctype.h",0
    41                        	.line	103
    42                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos.h",6
    43                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxtypes.h",0
    44                        	.stag	_fx_bytebits,8,4
    45                        	.member	b7,0,14,17,1
    46                        	.member	b6,1,14,17,1
    47                        	.member	b5,2,14,17,1
    48                        	.member	b4,3,14,17,1
    49                        	.member	b3,4,14,17,1
    50                        	.member	b2,5,14,17,1
    51                        	.member	b1,6,14,17,1
    52                        	.member	b0,7,14,17,1
    53                        	.eos
    54                        	.stag	_fx_node,384,5
    55                        	.member	type,0,14,8,8
    56                        	.member	Reserved0,8,14,8,8
    57                        	.member	data,16,129,8,32
    58                        	.member	last,48,138,8,32,5
    59                        	.member	next,80,138,8,32,5
    60                        	.member	name,112,110,8,0,32
    61                        	.member	Reserved1,368,16,8,16
    62                        	.eos
    63                        	.stag	_fx_nodelist,96,6
    64                        	.member	listhead,0,138,8,32,5
    65                        	.member	listData,32,129,8,32
    66                        	.member	deallocator,64,641,8,32
    67                        	.eos
    68                        	.stag	_fx_queue,80,7
    69                        	.member	count,0,5,8,16
    70                        	.member	front,16,138,8,32,5
    71                        	.member	rear,48,138,8,32,5
    72                        	.eos
    73                        	.stag	fake8_,32,8
    74                        	.member	subsystem,0,14,8,8
    75                        	.member	level,8,14,8,8
    76                        	.member	error,16,16,8,16
    77                        	.eos
    78                        	.stag	_fx_process_signal,16,9
    79                        	.member	cbSize,0,16,8,16
    80                        	.eos
    81                        	.stag	_fx_semaphore,16,10
    82                        	.member	reserved,0,5,8,16
    83                        	.eos
    84                        	.stag	_fx_fileBlock,552,11
    85                        	.member	openCount,0,16,8,16
    86                        	.member	lockCount,16,16,8,16
    87                        	.member	dirty,32,14,8,8
    88                        	.member	fileBuffer,40,110,8,0,64
    89                        	.eos
    90                        	.stag	_fx_irq_data,48,12
    91                        	.member	line,0,5,8,16
    92                        	.member	keycode,16,142,8,32
    93                        	.eos
    94                        	.stag	_task,48,13
    95                        	.member	SPL,0,14,8,8
  Sat Jul 10 2021  1:15                                                Page 3


    96                        	.member	SPH,8,14,8,8
    97                        	.member	pstack,16,142,8,32
    98                        	.eos
    99                        	.stag	_task_stack,32,14
   100                        	.member	SS,0,142,8,32
   101                        	.eos
   102                        	.stag	int_regs,104,15
   103                        	.member	PB,0,14,8,8
   104                        	.member	PH,8,14,8,8
   105                        	.member	PL,16,14,8,8
   106                        	.member	PP,24,14,8,8
   107                        	.member	DB,32,14,8,8
   108                        	.member	DH,40,14,8,8
   109                        	.member	DL,48,14,8,8
   110                        	.member	AH,56,14,8,8
   111                        	.member	AL,64,14,8,8
   112                        	.member	XH,72,14,8,8
   113                        	.member	XL,80,14,8,8
   114                        	.member	YH,88,14,8,8
   115                        	.member	YL,96,14,8,8
   116                        	.eos
   117                        	.stag	_fx_eventMessage,304,16
   118                        	.member	src,0,18,8,32
   119                        	.member	dest,32,18,8,32
   120                        	.member	type,64,16,8,16
   121                        	.member	hwnd,80,129,8,32
   122                        	.member	pheap,112,129,8,32
   123                        	.member	msgTime,144,18,8,32
   124                        	.member	data,176,110,8,0,16
   125                        	.eos
   126                        	.stag	_fx_cmdMessage,304,17
   127                        	.member	src,0,18,8,32
   128                        	.member	dest,32,18,8,32
   129                        	.member	type,64,16,8,16
   130                        	.member	hwnd,80,129,8,32
   131                        	.member	pheap,112,129,8,32
   132                        	.member	msgTime,144,18,8,32
   133                        	.member	cmdCId,176,16,8,16
   134                        	.member	cmdMId,192,16,8,16
   135                        	.member	parameter1,208,18,8,32
   136                        	.member	parameter2,240,18,8,32
   137                        	.member	parameter3,272,18,8,32
   138                        	.eos
   139                        	.stag	_fx_console_ctl,448,18
   140                        	.member	maxCols,0,5,8,16
   141                        	.member	maxRows,16,5,8,16
   142                        	.member	curX,32,5,8,16
   143                        	.member	curY,48,5,8,16
   144                        	.member	fgColor,64,5,8,16
   145                        	.member	bgColor,80,5,8,16
   146                        	.member	mode,96,14,8,8
   147                        	.member	kbBuffer,104,101,8,0,16
   148                        	.member	screenBuffer,360,142,8,32
   149                        	.member	desktopMode,392,14,8,8
   150                        	.member	lastMouseButton,400,5,8,16
   151                        	.member	lastMouseX,416,5,8,16
   152                        	.member	lastMouseY,432,5,8,16
   153                        	.eos
  Sat Jul 10 2021  1:15                                                Page 4


   154                        	.stag	_fx_desktop_ctl,392,19
   155                        	.member	desktopMode,0,14,8,8
   156                        	.member	cursorCtl,8,5,8,16
   157                        	.member	cursorState,24,5,8,16
   158                        	.member	backgroundColor,40,5,8,16
   159                        	.member	foregroundColor,56,5,8,16
   160                        	.member	menuMode,72,5,8,16
   161                        	.member	lastMouseButton,88,5,8,16
   162                        	.member	lastMouseX,104,5,8,16
   163                        	.member	lastMouseY,120,5,8,16
   164                        	.member	currentDiskName,136,142,8,32
   165                        	.member	diskNodes,168,129,8,32
   166                        	.member	titleNodes,200,129,8,32
   167                        	.member	menuNodes,232,129,8,32
   168                        	.member	iconNodes,264,129,8,32
   169                        	.member	windowNodes,296,129,8,32
   170                        	.member	fontNodes,328,129,8,32
   171                        	.member	wndProc,360,138,8,32,6
   172                        	.eos
   173                        	.stag	_fx_process,800,20
   174                        	.member	cbSize,0,5,8,16
   175                        	.member	procId,16,18,8,32
   176                        	.member	parentId,48,18,8,32
   177                        	.member	ctx,80,129,8,32
   178                        	.member	userId,112,16,8,16
   179                        	.member	status,128,16,8,16
   180                        	.member	foregroundActive,144,14,8,8
   181                        	.member	tls,152,1121,8,32,8
   182                        	.member	commandLine,408,142,8,32
   183                        	.member	semaphores,440,138,8,32,6
   184                        	.member	fileHandles,472,138,8,32,6
   185                        	.member	pathList,504,138,8,32,6
   186                        	.member	resources,536,138,8,32,6
   187                        	.member	timerAware,568,14,8,8
   188                        	.member	timerTicks,576,112,8,0,2
   189                        	.member	timerTickCount,608,112,8,0,2
   190                        	.member	kernelError,640,10,8,32,8
   191                        	.member	consoleCtl,672,138,8,32,18
   192                        	.member	desktopCtl,704,138,8,32,19
   193                        	.member	execProc,736,641,8,32
   194                        	.member	startupArgs,768,129,8,32
   195                        	.eos
   196                        	.stag	_fxProcessMessage,112,21
   197                        	.member	src,0,18,8,32
   198                        	.member	dest,32,18,8,32
   199                        	.member	type,64,16,8,16
   200                        	.member	processInfo,80,138,8,32,20
   201                        	.eos
   202                        	.stag	_k_key_state,112,22
   203                        	.member	scanCode,0,14,8,8
   204                        	.member	isShifted,8,14,8,8
   205                        	.member	isAlt,16,14,8,8
   206                        	.member	isExtended,24,14,8,8
   207                        	.member	isCapsLock,32,14,8,8
   208                        	.member	isNumLock,40,14,8,8
   209                        	.member	isScrollLock,48,14,8,8
   210                        	.member	keyChar,56,16,8,16
   211                        	.member	scanTime,72,18,8,32
  Sat Jul 10 2021  1:15                                                Page 5


   212                        	.member	ledStatus,104,14,8,8
   213                        	.eos
   214                        	.stag	_fx_property,384,23
   215                        	.member	name,0,110,8,0,16
   216                        	.member	value,128,110,8,0,32
   217                        	.eos
   218                        	.utag	_24bitPointer,32,24
   219                        	.member	address,0,142,11,32
   220                        	.member	bytes,0,110,11,0,4
   221                        	.eos
   222                        	.stag	_PointStruct,32,25
   223                        	.member	x,0,5,8,16
   224                        	.member	y,16,5,8,16
   225                        	.eos
   226                        	.stag	_RectStruct,112,26
   227                        	.member	x,0,5,8,16
   228                        	.member	y,16,5,8,16
   229                        	.member	z,32,18,8,32
   230                        	.member	width,64,5,8,16
   231                        	.member	height,80,5,8,16
   232                        	.member	attr,96,5,8,16
   233                        	.eos
   234                        	.stag	fake27_,96,27
   235                        	.member	name,0,142,8,32
   236                        	.member	topLeft,32,10,8,32,25
   237                        	.member	bottomRight,64,10,8,32,25
   238                        	.eos
   239                        	.stag	fake28_,112,28
   240                        	.member	x,0,5,8,16
   241                        	.member	y,16,5,8,16
   242                        	.member	z,32,5,8,16
   243                        	.member	width,48,5,8,16
   244                        	.member	height,64,5,8,16
   245                        	.member	data,80,18,8,32
   246                        	.eos
   247                        	.stag	_k_WindowClass,272,29
   248                        	.member	cbSize,0,16,8,16
   249                        	.member	style,16,16,8,16
   250                        	.member	styleEx,32,16,8,16
   251                        	.member	pWndProc,48,654,8,32
   252                        	.member	hInstance,80,129,8,32
   253                        	.member	hIcon,112,129,8,32
   254                        	.member	hCursor,144,129,8,32
   255                        	.member	hbrBackground,176,129,8,32
   256                        	.member	lpszMenuName,208,142,8,32
   257                        	.member	lpszClassName,240,142,8,32
   258                        	.eos
   259                        	.stag	_ClickableRect,152,30
   260                        	.member	area,0,10,8,112,26
   261                        	.member	z,112,18,8,32
   262                        	.member	enabled,144,14,8,8
   263                        	.eos
   264                        	.stag	_NCClickableRect,136,31
   265                        	.member	area,0,10,8,112,26
   266                        	.member	msgType,112,16,8,16
   267                        	.member	enabled,128,14,8,8
   268                        	.eos
   269                        	.stag	_DragData,216,32
  Sat Jul 10 2021  1:15                                                Page 6


   270                        	.member	area,0,10,8,112,26
   271                        	.member	xoffset,112,5,8,16
   272                        	.member	yoffset,128,5,8,16
   273                        	.member	msgType,144,16,8,16
   274                        	.member	ncAction,160,16,8,16
   275                        	.member	isDrag,176,14,8,8
   276                        	.member	isResize,184,14,8,8
   277                        	.member	canDrag,192,14,8,8
   278                        	.member	canDrop,200,14,8,8
   279                        	.member	didDrag,208,14,8,8
   280                        	.eos
   281                        	.stag	_k_WindowStruct,3904,33
   282                        	.member	cbSize,0,16,8,16
   283                        	.member	style,16,18,8,32
   284                        	.member	styleEx,48,18,8,32
   285                        	.member	win_id,80,5,8,16
   286                        	.member	win_x,96,5,8,16
   287                        	.member	win_y,112,5,8,16
   288                        	.member	win_width,128,5,8,16
   289                        	.member	win_height,144,5,8,16
   290                        	.member	win_xoffset,160,5,8,16
   291                        	.member	win_yoffset,176,5,8,16
   292                        	.member	win_cxoffset,192,5,8,16
   293                        	.member	win_cyoffset,208,5,8,16
   294                        	.member	wndRect,224,10,8,112,26
   295                        	.member	clientRect,336,10,8,112,26
   296                        	.member	nonclientGadgets,448,106,8,0,31,16
   297                        	.member	clickable,2624,129,8,32
   298                        	.member	win_title,2656,110,8,0,32
   299                        	.member	Reserved0,2912,16,8,16
   300                        	.member	win_class,2928,110,8,0,16
   301                        	.member	win_class_name,3056,110,8,0,32
   302                        	.member	nBitmapLayer,3312,16,8,16
   303                        	.member	bgRegion,3328,129,8,32
   304                        	.member	procid,3360,18,8,32
   305                        	.member	pWndClass,3392,138,8,32,29
   306                        	.member	pParentWindow,3424,129,8,32
   307                        	.member	hMenu,3456,129,8,32
   308                        	.member	hPointer,3488,129,8,32
   309                        	.member	hBackground,3520,129,8,32
   310                        	.member	pChildWindows,3552,138,8,32,6
   311                        	.member	pChildHitList,3584,138,8,32,6
   312                        	.member	isVisible,3616,14,8,8
   313                        	.member	windowData,3624,129,8,32
   314                        	.member	clientData,3656,1121,8,32,6
   315                        	.member	isClosed,3848,14,8,8
   316                        	.member	isClosing,3856,14,8,8
   317                        	.member	isDesktop,3864,14,8,8
   318                        	.member	clickableNode,3872,138,8,32,5
   319                        	.eos
   320                        	.stag	_k_WindowStructEx,3880,34
   321                        	.member	cbSize,0,16,8,16
   322                        	.member	style,16,18,8,32
   323                        	.member	styleEx,48,18,8,32
   324                        	.member	win_id,80,5,8,16
   325                        	.member	win_x,96,5,8,16
   326                        	.member	win_y,112,5,8,16
   327                        	.member	win_width,128,5,8,16
  Sat Jul 10 2021  1:15                                                Page 7


   328                        	.member	win_height,144,5,8,16
   329                        	.member	win_xoffset,160,5,8,16
   330                        	.member	win_yoffset,176,5,8,16
   331                        	.member	win_cxoffset,192,5,8,16
   332                        	.member	win_cyoffset,208,5,8,16
   333                        	.member	wndRect,224,10,8,112,26
   334                        	.member	clientRect,336,10,8,112,26
   335                        	.member	nonclientGadgets,448,106,8,0,31,16
   336                        	.member	clickable,2624,129,8,32
   337                        	.member	win_title,2656,110,8,0,32
   338                        	.member	Reserved0,2912,16,8,16
   339                        	.member	win_class,2928,110,8,0,16
   340                        	.member	nBitmapLayer,3056,16,8,16
   341                        	.member	procid,3072,18,8,32
   342                        	.member	pWndClass,3104,138,8,32,29
   343                        	.member	pParentWindow,3136,129,8,32
   344                        	.member	hMenu,3168,129,8,32
   345                        	.member	hPointer,3200,129,8,32
   346                        	.member	hBackground,3232,129,8,32
   347                        	.member	pChildWindows,3264,138,8,32,6
   348                        	.member	pChildHitList,3296,138,8,32,6
   349                        	.member	isVisible,3328,14,8,8
   350                        	.member	windowData,3336,129,8,32
   351                        	.member	clientData,3368,1121,8,32,4
   352                        	.member	isClosed,3496,14,8,8
   353                        	.member	hWnd,3504,129,8,32
   354                        	.member	localRect,3536,10,8,112,26
   355                        	.member	globalRect,3648,10,8,112,26
   356                        	.member	clientOffsetRect,3760,10,8,112,26
   357                        	.member	isDesktop,3872,14,8,8
   358                        	.eos
   359                        	.stag	_FontMetric,32,35
   360                        	.member	width,0,5,8,16
   361                        	.member	height,16,5,8,16
   362                        	.eos
   363                        	.stag	_MenuStruct,280,36
   364                        	.member	cx,0,5,8,16
   365                        	.member	cy,16,5,8,16
   366                        	.member	width,32,5,8,16
   367                        	.member	height,48,5,8,16
   368                        	.member	fcolor,64,14,8,8
   369                        	.member	bcolor,72,14,8,8
   370                        	.member	chromeLeft,80,14,8,8
   371                        	.member	chromeRight1,88,14,8,8
   372                        	.member	chromeRight2,96,14,8,8
   373                        	.member	hFont,104,129,8,32
   374                        	.member	itemId,136,16,8,16
   375                        	.member	pCaption,152,142,8,32
   376                        	.member	subMenus,184,138,8,32,6
   377                        	.member	pBackground,216,129,8,32
   378                        	.member	hWndOwner,248,129,8,32
   379                        	.eos
   380                        	.stag	fake37_,160,37
   381                        	.member	menuId,0,16,8,16
   382                        	.member	caption,16,142,8,32
   383                        	.member	rect,48,10,8,112,26
   384                        	.eos
   385                        	.stag	fake38_,5152,38
  Sat Jul 10 2021  1:15                                                Page 8


   386                        	.member	pParent,0,138,8,32,33
   387                        	.member	rect,32,10,8,112,26
   388                        	.member	captions,144,1134,8,32,24
   389                        	.member	chrome,912,110,8,0,24
   390                        	.member	ids,1104,112,8,0,24
   391                        	.member	clickable,1488,106,8,0,30,24
   392                        	.member	selected,5136,16,8,16
   393                        	.eos
   394                        	.stag	_fx_button_t,96,39
   395                        	.member	pCaption,0,142,8,32
   396                        	.member	cCaption,32,16,8,16
   397                        	.member	data,48,129,8,32
   398                        	.member	captionPixelWidth,80,16,8,16
   399                        	.eos
   400                        	.stag	_fx_scrollbar_t,240,40
   401                        	.member	min,0,16,8,16
   402                        	.member	max,16,16,8,16
   403                        	.member	increment,32,16,8,16
   404                        	.member	stopsize,48,16,8,16
   405                        	.member	location,64,5,8,16
   406                        	.member	state,80,5,8,16
   407                        	.member	rectThumb,96,10,8,112,26
   408                        	.member	data,208,129,8,32
   409                        	.eos
   410                        	.stag	_fx_listbox_t,240,41
   411                        	.member	pos,0,5,8,16
   412                        	.member	selected,16,16,8,16
   413                        	.member	offsetX,32,5,8,16
   414                        	.member	offsetY,48,5,8,16
   415                        	.member	inc,64,5,8,16
   416                        	.member	direction,80,5,8,16
   417                        	.member	top,96,5,8,16
   418                        	.member	bottom,112,5,8,16
   419                        	.member	indexTop,128,5,8,16
   420                        	.member	indexBottom,144,5,8,16
   421                        	.member	maxItems,160,16,8,16
   422                        	.member	fontSet,176,142,8,32
   423                        	.member	data,208,129,8,32
   424                        	.eos
   425                        	.stag	_fx_textbox_t,144,42
   426                        	.member	pos,0,5,8,16
   427                        	.member	selected,16,16,8,16
   428                        	.member	offsetX,32,5,8,16
   429                        	.member	offsetY,48,5,8,16
   430                        	.member	isShifted,64,14,8,8
   431                        	.member	cursorState,72,14,8,8
   432                        	.member	fontSet,80,142,8,32
   433                        	.member	data,112,129,8,32
   434                        	.eos
   435                        	.stag	_fx_msgbox_t,144,43
   436                        	.member	pos,0,5,8,16
   437                        	.member	selected,16,16,8,16
   438                        	.member	offsetX,32,5,8,16
   439                        	.member	offsetY,48,5,8,16
   440                        	.member	isShifted,64,14,8,8
   441                        	.member	cursorState,72,14,8,8
   442                        	.member	fontSet,80,142,8,32
   443                        	.member	data,112,129,8,32
  Sat Jul 10 2021  1:15                                                Page 9


   444                        	.eos
   445                        	.stag	_fx_menuAnchor_t,272,44
   446                        	.member	pCaption,0,142,8,32
   447                        	.member	renderLayoutX,32,16,8,16
   448                        	.member	renderLayoutY,48,16,8,16
   449                        	.member	captionPixelWidth,64,16,8,16
   450                        	.member	data,80,129,8,32
   451                        	.member	droppedWindow,112,138,8,32,33
   452                        	.member	bytes,144,110,8,0,16
   453                        	.eos
   454                        	.stag	_SubMenuStruct,64,45
   455                        	.member	caption,0,142,8,32
   456                        	.member	action,32,641,8,32
   457                        	.eos
   458                        	.stag	_SubMenuListStruct,40,46
   459                        	.member	cMenus,0,14,8,8
   460                        	.member	psubmenus,8,9354,8,32,45
   461                        	.eos
   462                        	.stag	_fx_ComBuffer,2080,47
   463                        	.member	cbSize,0,16,8,16
   464                        	.member	cbBuffer,16,16,8,16
   465                        	.member	buffer,32,110,8,0,256
   466                        	.eos
   467                        	.stag	_fx_resource_header,72,48
   468                        	.member	magic,0,110,8,0,4
   469                        	.member	major,32,14,8,8
   470                        	.member	minor,40,14,8,8
   471                        	.member	type,48,14,8,8
   472                        	.member	reserved,56,14,8,8
   473                        	.member	resheaderSize,64,14,8,8
   474                        	.eos
   475                        	.stag	_fx_resource_header_font,144,49
   476                        	.member	title,0,110,8,0,16
   477                        	.member	height,128,14,8,8
   478                        	.member	width,136,14,8,8
   479                        	.eos
   480                        	.line	1010
   481                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos.h",8
   482                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxstringtable.h",0
   483                        	.line	89
   484                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos.h",9
   485                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxc256u.h",0
   486                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxtypes.h",0
   487                        	.line	1010
   488                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxc256u.h",5
   489                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fmx_vicky.h",0
   490                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxtypes.h",0
   491                        	.line	1010
   492                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fmx_vicky.h",11
  Sat Jul 10 2021  1:15                                                Page 10


   493                        	.line	72
   494                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxc256u.h",6
   495                        	.line	1960
   496                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos.h",16
   497                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxkernel.h",0
   498                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos.h",0
   499                        	.line	30
   500                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxkernel.h",5
   501                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxnode.h",0
   502                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxtypes.h",0
   503                        	.line	1010
   504                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxnode.h",11
   505                        	.line	114
   506                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxkernel.h",6
   507                        	.stag	_fx_api_call_table,8192,50
   508                        	.member	call_table,0,1121,8,32,256
   509                        	.eos
   510                        	.stag	_fx_zero_page,824,51
   511                        	.member	fxos_mouse_byte_0,0,14,8,8
   512                        	.member	fxos_mouse_byte_1,8,14,8,8
   513                        	.member	fxos_mouse_byte_2,16,14,8,8
   514                        	.member	fxos_mouse_byte_t,24,14,8,8
   515                        	.member	fxos_mouse_byte_x_l,32,14,8,8
   516                        	.member	fxos_mouse_byte_x_h,40,14,8,8
   517                        	.member	fxos_mouse_byte_y_l,48,14,8,8
   518                        	.member	fxos_mouse_byte_y_h,56,14,8,8
   519                        	.member	fxos_key_byte_0,64,14,8,8
   520                        	.member	fxos_key_byte_1,72,14,8,8
   521                        	.member	fxos_key_byte_2,80,14,8,8
   522                        	.member	fxos_mouse_ctl,88,14,8,8
   523                        	.member	fxos_mouse_index,96,14,8,8
   524                        	.member	fxos_mouse_status,104,14,8,8
   525                        	.member	fxos_mouse_dbg_1,112,18,8,32
   526                        	.member	fxos_mouse_dbg_2,144,18,8,32
   527                        	.member	fxos_mouse_dbg_3,176,18,8,32
   528                        	.member	fxos_vicky_byte_0,208,14,8,8
   529                        	.member	fxos_vicky_byte_1,216,14,8,8
   530                        	.member	fxos_vicky_byte_2,224,14,8,8
   531                        	.member	VersionMajor,232,16,8,16
   532                        	.member	VersionMinor,248,16,8,16
   533                        	.member	VersionRelease,264,16,8,16
   534                        	.member	topMemory,280,18,8,32
   535                        	.member	bottomMemory,312,18,8,32
   536                        	.member	availableMemory,344,18,8,32
   537                        	.member	availableMemoryK,376,18,8,32
   538                        	.member	availableHeapMemory,408,18,8,32
   539                        	.member	availableHeapMemoryK,440,18,8,32
   540                        	.member	fxos_console_row,472,16,8,16
   541                        	.member	fxos_console_col,488,16,8,16
  Sat Jul 10 2021  1:15                                                Page 11


   542                        	.member	executive,504,129,8,32
   543                        	.member	eventmanager,536,129,8,32
   544                        	.member	devicemanager,568,129,8,32
   545                        	.member	windowmanager,600,129,8,32
   546                        	.member	fxos_kernel_api,632,138,8,32,50
   547                        	.member	fxos_dos_api,664,138,8,32,50
   548                        	.member	fxos_gfx_api,696,138,8,32,50
   549                        	.member	fxos_gui_api,728,138,8,32,50
   550                        	.member	fxos_con_api,760,138,8,32,50
   551                        	.member	fxos_reserved_2_api,792,138,8,32,50
   552                        	.eos
   553                        	.stag	_fx_environment,96,52
   554                        	.member	variables,0,142,8,32
   555                        	.member	reserved1,32,5,8,16
   556                        	.member	reserved2,48,5,8,16
   557                        	.member	reserved3,64,5,8,16
   558                        	.member	reserved4,80,5,8,16
   559                        	.eos
   560                        	.stag	_debug_byte_bits,8,53
   561                        	.member	bit7,0,14,17,1
   562                        	.member	bit6,1,14,17,1
   563                        	.member	bit5,2,14,17,1
   564                        	.member	bit4,3,14,17,1
   565                        	.member	bit3,4,14,17,1
   566                        	.member	bit2,5,14,17,1
   567                        	.member	bit1,6,14,17,1
   568                        	.member	bit0,7,14,17,1
   569                        	.eos
   570                        	.stag	_k_segmentheader,160,54
   571                        	.member	version_major,0,14,8,8
   572                        	.member	version_minor,8,14,8,8
   573                        	.member	length,16,5,8,16
   574                        	.member	segment_start_addr,32,7,8,32
   575                        	.member	segment_end_addr,64,7,8,32
   576                        	.member	segment_size,96,7,8,32
   577                        	.member	main_entry_addr,128,7,8,32
   578                        	.eos
   579                        	.stag	_fx_device_driver,776,55
   580                        	.member	name,0,110,8,0,32
   581                        	.member	version,256,110,8,0,16
   582                        	.member	hmajor,384,110,8,0,8
   583                        	.member	hminor,448,110,8,0,8
   584                        	.member	type,512,14,8,8
   585                        	.member	designation,520,110,8,0,6
   586                        	.member	reserved_1,568,16,8,16
   587                        	.member	f_driver_irq,584,129,8,32
   588                        	.member	driver_context,616,129,8,32
   589                        	.member	f_driver_load,648,129,8,32
   590                        	.member	f_driver_read,680,129,8,32
   591                        	.member	f_driver_write,712,129,8,32
   592                        	.member	f_driver_unload,744,129,8,32
   593                        	.eos
   594                        	.stag	_fx_block_device_driver,808,56
   595                        	.member	name,0,110,8,0,32
   596                        	.member	version,256,110,8,0,16
   597                        	.member	hmajor,384,110,8,0,8
   598                        	.member	hminor,448,110,8,0,8
   599                        	.member	type,512,14,8,8
  Sat Jul 10 2021  1:15                                                Page 12


   600                        	.member	designation,520,110,8,0,6
   601                        	.member	reserved_1,568,16,8,16
   602                        	.member	f_driver_irq,584,129,8,32
   603                        	.member	driver_context,616,129,8,32
   604                        	.member	f_driver_load,648,129,8,32
   605                        	.member	f_driver_read,680,129,8,32
   606                        	.member	f_driver_write,712,129,8,32
   607                        	.member	f_driver_unload,744,129,8,32
   608                        	.member	f_driver_command,776,129,8,32
   609                        	.eos
   610                        	.line	400
   611                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos.h",22
   612                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxconsole.h",0
   613                        	.file	"G:\devtools\WDCTools\wdc\Tools\include\
                    string.h",0
   614                        	.line	134
   615                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxconsole.h",5
   616                        	.file	"G:\devtools\WDCTools\wdc\Tools\include\
                    stdlib.h",0
   617                        	.line	205
   618                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxconsole.h",6
   619                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxtypes.h",0
   620                        	.line	1010
   621                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxconsole.h",7
   622                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxc256u.h",0
   623                        	.line	1960
   624                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxconsole.h",12
   625                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxstring.h",0
   626                        	.file	"G:\devtools\WDCTools\wdc\Tools\include\
                    stdlib.h",0
   627                        	.line	205
   628                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxstring.h",5
   629                        	.file	"G:\devtools\WDCTools\wdc\Tools\include\
                    string.h",0
   630                        	.line	134
   631                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxstring.h",6
   632                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxtypes.h",0
   633                        	.line	1010
   634                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxstring.h",7
   635                        	.stag	_fx_string,64,57
   636                        	.member	size,0,16,8,16
   637                        	.member	pos,16,5,8,16
   638                        	.member	buffer,32,142,8,32
   639                        	.eos
   640                        	.line	139
  Sat Jul 10 2021  1:15                                                Page 13


   641                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxconsole.h",17
   642                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxeventmanager.h",0
   643                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos.h",0
   644                        	.line	30
   645                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxeventmanager.h",5
   646                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxexec.h",0
   647                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxtypes.h",0
   648                        	.line	1010
   649                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxexec.h",5
   650                        	.stag	_fxos_executive_vtable,128,58
   651                        	.member	Init,0,8833,8,32
   652                        	.member	Configure,32,656,8,32
   653                        	.member	Query,64,656,8,32
   654                        	.member	Uninit,96,641,8,32
   655                        	.eos
   656                        	.line	86
   657                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxeventmanager.h",6
   658                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxnode.h",0
   659                        	.line	114
   660                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxeventmanager.h",7
   661                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxconsole.h",0
   662                        	.line	208
   663                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxeventmanager.h",8
   664                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxwindowmanager.h",0
   665                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos.h",0
   666                        	.line	30
   667                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxwindowmanager.h",5
   668                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxmemorymanager.h",0
   669                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos.h",0
   670                        	.line	30
   671                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxmemorymanager.h",5
   672                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\umm_malloc_cfg.h",0
   673                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos_build_parameters.h",0
   674                        	.line	35
   675                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\umm_malloc_cfg.h",8
   676                        	.stag	UMM_HEAP_INFO_t,256,59
   677                        	.member	totalEntries,0,18,8,32
  Sat Jul 10 2021  1:15                                                Page 14


   678                        	.member	usedEntries,32,18,8,32
   679                        	.member	freeEntries,64,18,8,32
   680                        	.member	totalBlocks,96,18,8,32
   681                        	.member	usedBlocks,128,18,8,32
   682                        	.member	freeBlocks,160,18,8,32
   683                        	.member	maxFreeContiguousBlocks,192,18,8,32
   684                        	.member	blockSize,224,18,8,32
   685                        	.eos
   686                        	.line	199
   687                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxmemorymanager.h",6
   688                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\umm_malloc.h",0
   689                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxtypes.h",0
   690                        	.line	1010
   691                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\umm_malloc.h",11
   692                        	.line	24
   693                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxmemorymanager.h",7
   694                        	.stag	_fx_memory_map,2072,60
   695                        	.member	availableMemory,0,18,8,32
   696                        	.member	valid_segments,32,110,8,0,255
   697                        	.eos
   698                        	.stag	_fx_ipc_port,144,61
   699                        	.member	id,0,18,8,32
   700                        	.member	type,32,14,8,8
   701                        	.member	name,40,138,8,32,57
   702                        	.member	time,72,18,8,32
   703                        	.member	queue,104,138,8,32,7
   704                        	.member	reserved_1,136,14,8,8
   705                        	.eos
   706                        	.line	105
   707                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxwindowmanager.h",6
   708                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxeventmanager.h",0
   709                        	.line	564
   710                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxwindowmanager.h",7
   711                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxgui.h",0
   712                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxfont.h",0
   713                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxtypes.h",0
   714                        	.line	1010
   715                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxfont.h",6
   716                        	.line	74
   717                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxgui.h",5
   718                        	.stag	_click_detected,64,62
   719                        	.member	window,0,138,8,32,33
   720                        	.member	handler,32,641,8,32
   721                        	.eos
   722                        	.stag	_current_palette_map,400,63
  Sat Jul 10 2021  1:15                                                Page 15


   723                        	.member	CUR_DESKTOP,0,5,8,16
   724                        	.member	CUR_BACKGROUND,16,5,8,16
   725                        	.member	CUR_FONT,32,5,8,16
   726                        	.member	CUR_SELECTED_FONT,48,5,8,16
   727                        	.member	CUR_HIGHLIGHT_COLOR,64,5,8,16
   728                        	.member	CUR_WINDOWFRAME,80,5,8,16
   729                        	.member	CUR_WINDOWBORDER,96,5,8,16
   730                        	.member	CUR_WINDOWSHADOW,112,5,8,16
   731                        	.member	CUR_MENU,128,5,8,16
   732                        	.member	CUR_GADGET,144,5,8,16
   733                        	.member	CUR_COLOR,160,101,8,0,15
   734                        	.eos
   735                        	.line	359
   736                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxwindowmanager.h",8
   737                        	.stag	_fxos_winman_vtable,160,64
   738                        	.member	Events,0,641,8,32
   739                        	.member	ConfigureWindowManager,32,656,8,32
   740                        	.member	ProcessWindowEvent,64,8833,8,32
   741                        	.member	QueryWindowManager,96,656,8,32
   742                        	.member	DoWndProcs,128,641,8,32
   743                        	.eos
   744                        	.stag	fake65_,64,65
   745                        	.member	type,0,16,8,16
   746                        	.member	size,16,16,8,16
   747                        	.member	desktopAction,32,129,8,32
   748                        	.eos
   749                        	.stag	fake66_,96,66
   750                        	.member	type,0,16,8,16
   751                        	.member	caption,16,138,8,32,57
   752                        	.member	buttonType,48,16,8,16
   753                        	.member	x,64,5,8,16
   754                        	.member	y,80,5,8,16
   755                        	.eos
   756                        	.stag	_childMessage_t,64,67
   757                        	.member	msgType,0,16,8,16
   758                        	.member	msgData,16,129,8,32
   759                        	.member	dataSize,48,16,8,16
   760                        	.eos
   761                        	.line	581
   762                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxeventmanager.h",9
   763                        	.stag	_fx_main_loopvars,16,68
   764                        	.member	dummy,0,5,8,16
   765                        	.eos
   766                        	.stag	_fxMouseMessageData,64,69
   767                        	.member	button1,0,14,8,8
   768                        	.member	button2,8,14,8,8
   769                        	.member	button3,16,14,8,8
   770                        	.member	button4,24,14,8,8
   771                        	.member	x,32,16,8,16
   772                        	.member	y,48,16,8,16
   773                        	.eos
   774                        	.utag	marshalled_data,32,70
   775                        	.member	byteValue,0,14,11,8
   776                        	.member	verbValue,0,110,11,0,2
   777                        	.member	intValue,0,16,11,16
   778                        	.member	longValue,0,18,11,32
  Sat Jul 10 2021  1:15                                                Page 16


   779                        	.member	pointerValue,0,129,11,32
   780                        	.eos
   781                        	.stag	_fx_eventProcess,64,71
   782                        	.member	process,0,138,8,32,20
   783                        	.member	eventProc,32,641,8,32
   784                        	.eos
   785                        	.stag	_mouse_msg_state,184,72
   786                        	.member	lastEvent,0,18,8,32
   787                        	.member	buttonLeftDown,32,14,8,8
   788                        	.member	lastLeftDown,40,18,8,32
   789                        	.member	buttonRightDown,72,14,8,8
   790                        	.member	lastRightDown,80,18,8,32
   791                        	.member	buttonMiddleDown,112,14,8,8
   792                        	.member	lastMiddleDown,120,18,8,32
   793                        	.member	lastX,152,16,8,16
   794                        	.member	lastY,168,16,8,16
   795                        	.eos
   796                        	.stag	_fxos_eventmanager_vtable,192,73
   797                        	.member	EventQueue,0,138,8,32,7
   798                        	.member	Init,32,8833,8,32
   799                        	.member	Run,64,656,8,32
   800                        	.member	Configure,96,656,8,32
   801                        	.member	Query,128,656,8,32
   802                        	.member	Uninit,160,641,8,32
   803                        	.eos
   804                        	.stag	_k_clipboard_data,168,74
   805                        	.member	type,0,14,8,8
   806                        	.member	readable,8,110,8,0,16
   807                        	.member	data,136,129,8,32
   808                        	.eos
   809                        	.line	564
   810                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxconsole.h",18
   811                        	.stag	_fx_spinner_ctx,48,75
   812                        	.member	index,0,5,8,16
   813                        	.member	spinner,16,142,8,32
   814                        	.eos
   815                        	.stag	_fx_console_ctx,1144,76
   816                        	.member	lineBufferIndex,0,5,8,16
   817                        	.member	lineBuffer,16,110,8,0,128
   818                        	.member	isShifted,1040,14,8,8
   819                        	.member	userData,1048,129,8,32
   820                        	.member	screenBuffer,1080,129,8,32
   821                        	.member	Reserved1,1112,129,8,32
   822                        	.eos
   823                        	.stag	_token,64,77
   824                        	.member	type,0,5,8,16
   825                        	.member	depth,16,16,8,16
   826                        	.member	text,32,142,8,32
   827                        	.eos
   828                        	.stag	_command_args,64,78
   829                        	.member	proc,0,656,8,32
   830                        	.member	tokens,32,138,8,32,5
   831                        	.eos
   832                        	.line	208
   833                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos.h",23
   834                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
  Sat Jul 10 2021  1:15                                                Page 17


                    space\FXOSv1\src\fxstring.h",0
   835                        	.line	139
   836                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos.h",24
   837                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxnode.h",0
   838                        	.line	114
   839                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos.h",25
   840                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\ff.h",0
   841                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\ffconf.h",0
   842                        	.line	298
   843                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\ff.h",29
   844                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxtypes.h",0
   845                        	.line	1010
   846                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\ff.h",30
   847                        	.stag	fake79_,4504,79
   848                        	.member	fs_type,0,14,8,8
   849                        	.member	pdrv,8,14,8,8
   850                        	.member	n_fats,16,14,8,8
   851                        	.member	wflag,24,14,8,8
   852                        	.member	fsi_flag,32,14,8,8
   853                        	.member	id,40,5,8,16
   854                        	.member	n_rootdir,56,5,8,16
   855                        	.member	csize,72,5,8,16
   856                        	.member	lfnbuf,88,144,8,32
   857                        	.member	last_clst,120,18,8,32
   858                        	.member	free_clst,152,18,8,32
   859                        	.member	n_fatent,184,18,8,32
   860                        	.member	fsize,216,18,8,32
   861                        	.member	volbase,248,18,8,32
   862                        	.member	fatbase,280,18,8,32
   863                        	.member	dirbase,312,18,8,32
   864                        	.member	database,344,18,8,32
   865                        	.member	winsect,376,18,8,32
   866                        	.member	win,408,110,8,0,512
   867                        	.eos
   868                        	.stag	fake80_,128,80
   869                        	.member	fs,0,138,8,32,79
   870                        	.member	id,32,5,8,16
   871                        	.member	attr,48,14,8,8
   872                        	.member	stat,56,14,8,8
   873                        	.member	sclust,64,18,8,32
   874                        	.member	objsize,96,18,8,32
   875                        	.eos
   876                        	.stag	fake81_,4400,81
   877                        	.member	obj,0,10,8,128,80
   878                        	.member	flag,128,14,8,8
   879                        	.member	err,136,14,8,8
   880                        	.member	fptr,144,18,8,32
   881                        	.member	clust,176,18,8,32
   882                        	.member	sect,208,18,8,32
   883                        	.member	dir_sect,240,18,8,32
  Sat Jul 10 2021  1:15                                                Page 18


   884                        	.member	dir_ptr,272,142,8,32
   885                        	.member	buf,304,110,8,0,512
   886                        	.eos
   887                        	.stag	fake82_,416,82
   888                        	.member	obj,0,10,8,128,80
   889                        	.member	dptr,128,18,8,32
   890                        	.member	clust,160,18,8,32
   891                        	.member	sect,192,18,8,32
   892                        	.member	dir,224,142,8,32
   893                        	.member	fn,256,110,8,0,12
   894                        	.member	blk_ofs,352,18,8,32
   895                        	.member	pat,384,142,8,32
   896                        	.eos
   897                        	.stag	fake83_,2224,83
   898                        	.member	fsize,0,18,8,32
   899                        	.member	fdate,32,5,8,16
   900                        	.member	ftime,48,5,8,16
   901                        	.member	fattrib,64,14,8,8
   902                        	.member	altname,72,110,8,0,13
   903                        	.member	fname,176,110,8,0,256
   904                        	.eos
   905                        	.stag	fake84_,80,84
   906                        	.member	fmt,0,14,8,8
   907                        	.member	n_fat,8,14,8,8
   908                        	.member	align,16,16,8,16
   909                        	.member	n_root,32,16,8,16
   910                        	.member	au_size,48,18,8,32
   911                        	.eos
   912                        	.line	429
   913                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos.h",26
   914                        	.line	30
   915                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\flpydsk.c",11
   916                        ;#include "flpydsk.h"
   917                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\flpydsk.h",0
   918                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxtypes.h",0
   919                        	.line	1010
   920                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\flpydsk.h",14
   921                        	.line	68
   922                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\flpydsk.c",12
   923                        ;
   924                        ;//void floppy_init();
   925                        ;void flpydsk_send_command(uint8_t cmd);
   926                        ;void flpydsk_reset(void);
   927                        ;uint8_t flpydsk_read_status(void);
   928                        ;uint8_t flpydsk_read_data(void);
   929                        ;void flpydsk_dma_read(void);
   930                        ;void flpydsk_disable_controller(void);
   931                        ;void flpydsk_enable_controller(void);
   932                        ;
   933                        ;
   934                        ;//===============================================
                    =============================
  Sat Jul 10 2021  1:15                                                Page 19


   935                        ;//    IMPLEMENTATION PRIVATE DEFINITIONS / ENUMER
                    ATIONS / SIMPLE TYPEDEFS
   936                        ;//===============================================
                    =============================
   937                        ;
   938                        ;/*
   939                        ; **	Controller I/O Ports. Please see chapter
                     for additional ports
   940                        ; */
   941                        ;/* MSR flags */
   942                        ;#define MSR_RQM  0x80
   943                        ;#define MSR_DIO  0x40
   944                        ;#define MSR_NDMA 0x20
   945                        ;#define MSR_CB   0x10
   946                        ;
   947                        ;#define MSR_ACTD 0x08
   948                        ;#define MSR_ACTC 0x04
   949                        ;#define MSR_ACTB 0x02
   950                        ;#define MSR_ACTA 0x01
   951                        ;
   952                        ;#define MSR_OK_READ (MSR_RQM | MSR_DIO | MSR_CB)
   953                        ;
   954                        ;/* DIR flags */
   955                        ;#define DIR_DC 0x80
   956                        ;
   957                        ;
   958                        ;#define SECTOR_SIZE 512
   959                        ;#define SEC_PER_TRACK 18
   960                        ;
   961                        ;#define MS 1000
   962                        ;
   963                        ;#define FL_HLT (8*MS)
   964                        ;#define FL_SPIN_UP (400*MS)
   965                        ;#define FL_SPIN_DN (3000*MS)
   966                        ;#define FL_SEL_D (20*MS)
   967                        ;#define FL_INT_TMT (30000*MS)
   968                        ;
   969                        ;#define CMD_SPECIFY  0x03
   970                        ;#define CMD_WRITE    0x45
   971                        ;#define CMD_READ     0x46
   972                        ;#define CMD_SENSEI   0x08
   973                        ;#define CMD_READID   0x4A
   974                        ;#define CMD_RECAL    0x07
   975                        ;#define CMD_SEEK     0x0F
   976                        ;#define CMD_VERSION  0x10
   977                        ;#define CMD_CONF     0x13
   978                        ;
   979                        ;/**
   980                        ; *	Bits 0-4 of command byte. Please see cha
                    pter for additional commands
   981                        ; */
   982                        ;
   983                        ;enum FLPYDSK_CMD
   984                        ;{
   985                        ;
   986                        ;	FDC_CMD_READ_TRACK = 2,
   987                        ;	FDC_CMD_SPECIFY = 3,
   988                        ;	FDC_CMD_CHECK_STAT = 4,
  Sat Jul 10 2021  1:15                                                Page 20


   989                        ;	FDC_CMD_WRITE_SECT = 5,
   990                        ;	FDC_CMD_READ_SECT = 6,
   991                        ;	FDC_CMD_CALIBRATE = 7,
   992                        ;	FDC_CMD_CHECK_INT = 8,
   993                        ;	FDC_CMD_FORMAT_TRACK = 0xd,
   994                        ;	FDC_CMD_SEEK = 0xf
   995                        ;};
   996                        ;
   997                        ;/**
   998                        ; *	Additional command masks. Can be masked 
                    with above commands
   999                        ; */
  1000                        ;
  1001                        ;enum FLPYDSK_CMD_EXT
  1002                        ;{
  1003                        ;
  1004                        ;	FDC_CMD_EXT_SKIP = 0x20,	//00100000
  1005                        ;	FDC_CMD_EXT_DENSITY = 0x40,	//01000000
  1006                        ;	FDC_CMD_EXT_MULTITRACK = 0x80	//10000000
  1007                        ;};
  1008                        ;
  1009                        ;/*
  1010                        ; **	Digital Output Register
  1011                        ; */
  1012                        ;
  1013                        ;enum FLPYDSK_DOR_MASK
  1014                        ;{
  1015                        ;
  1016                        ;	FLPYDSK_DOR_MASK_DRIVE0 = 0,	//00000000	
                    = here for completeness sake
  1017                        ;	FLPYDSK_DOR_MASK_DRIVE1 = 1,	//00000001
  1018                        ;	FLPYDSK_DOR_MASK_DRIVE2 = 2,	//00000010
  1019                        ;	FLPYDSK_DOR_MASK_DRIVE3 = 3,	//00000011
  1020                        ;	FLPYDSK_DOR_MASK_RESET = 4,	//00000100
  1021                        ;	FLPYDSK_DOR_MASK_DMA = 8,	//00001000
  1022                        ;	FLPYDSK_DOR_MASK_DRIVE0_MOTOR = 16,	//000100
                    00
  1023                        ;	FLPYDSK_DOR_MASK_DRIVE1_MOTOR = 32,	//001000
                    00
  1024                        ;	FLPYDSK_DOR_MASK_DRIVE2_MOTOR = 64,	//010000
                    00
  1025                        ;	FLPYDSK_DOR_MASK_DRIVE3_MOTOR = 128	//100000
                    00
  1026                        ;};
  1027                        ;
  1028                        ;/**
  1029                        ; *	Main Status Register
  1030                        ; */
  1031                        ;
  1032                        ;enum FLPYDSK_MSR_MASK
  1033                        ;{
  1034                        ;
  1035                        ;	FLPYDSK_MSR_MASK_DRIVE1_POS_MODE = 1,	//000000
                    01
  1036                        ;	FLPYDSK_MSR_MASK_DRIVE2_POS_MODE = 2,	//000000
                    10
  1037                        ;	FLPYDSK_MSR_MASK_DRIVE3_POS_MODE = 4,	//000001
                    00
  Sat Jul 10 2021  1:15                                                Page 21


  1038                        ;	FLPYDSK_MSR_MASK_DRIVE4_POS_MODE = 8,	//000010
                    00
  1039                        ;	FLPYDSK_MSR_MASK_BUSY = 16,	//00010000
  1040                        ;	FLPYDSK_MSR_MASK_DMA = 32,	//00100000
  1041                        ;	FLPYDSK_MSR_MASK_DATAIO = 64, //01000000
  1042                        ;	FLPYDSK_MSR_MASK_DATAREG = 128	//10000000
  1043                        ;};
  1044                        ;
  1045                        ;/**
  1046                        ; *	Controller Status Port 0
  1047                        ; */
  1048                        ;
  1049                        ;enum FLPYDSK_ST0_MASK
  1050                        ;{
  1051                        ;
  1052                        ;	FLPYDSK_ST0_MASK_DRIVE0 = 0,		//000000
                    00	=	for completness sake
  1053                        ;	FLPYDSK_ST0_MASK_DRIVE1 = 1,		//000000
                    01
  1054                        ;	FLPYDSK_ST0_MASK_DRIVE2 = 2,		//000000
                    10
  1055                        ;	FLPYDSK_ST0_MASK_DRIVE3 = 3,		//000000
                    11
  1056                        ;	FLPYDSK_ST0_MASK_HEADACTIVE = 4,		
                    //00000100
  1057                        ;	FLPYDSK_ST0_MASK_NOTREADY = 8,		//000010
                    00
  1058                        ;	FLPYDSK_ST0_MASK_UNITCHECK = 16,		
                    //00010000
  1059                        ;	FLPYDSK_ST0_MASK_SEEKEND = 32,		//001000
                    00
  1060                        ;	FLPYDSK_ST0_MASK_INTCODE = 64		//110000
                    00
  1061                        ;};
  1062                        ;
  1063                        ;/*
  1064                        ; ** LPYDSK_ST0_MASK_INTCODE types
  1065                        ; */
  1066                        ;
  1067                        ;enum FLPYDSK_ST0_INTCODE_TYP
  1068                        ;{
  1069                        ;
  1070                        ;	FLPYDSK_ST0_TYP_NORMAL = 0,
  1071                        ;	FLPYDSK_ST0_TYP_ABNORMAL_ERR = 1,
  1072                        ;	FLPYDSK_ST0_TYP_INVALID_ERR = 2,
  1073                        ;	FLPYDSK_ST0_TYP_NOTREADY = 3
  1074                        ;};
  1075                        ;
  1076                        ;/**
  1077                        ; *	GAP 3 sizes
  1078                        ; */
  1079                        ;
  1080                        ;enum FLPYDSK_GAP3_LENGTH
  1081                        ;{
  1082                        ;
  1083                        ;	FLPYDSK_GAP3_LENGTH_STD = 42,
  1084                        ;	FLPYDSK_GAP3_LENGTH_5_14 = 32,
  1085                        ;	FLPYDSK_GAP3_LENGTH_3_5 = 27
  Sat Jul 10 2021  1:15                                                Page 22


  1086                        ;};
  1087                        ;
  1088                        ;/*
  1089                        ; **	Formula: 2^sector_number * 128, where ^ 
                    denotes "to the power of"
  1090                        ; */
  1091                        ;
  1092                        ;enum FLPYDSK_SECTOR_DTL
  1093                        ;{
  1094                        ;
  1095                        ;	FLPYDSK_SECTOR_DTL_128 = 0,
  1096                        ;	FLPYDSK_SECTOR_DTL_256 = 1,
  1097                        ;	FLPYDSK_SECTOR_DTL_512 = 2,
  1098                        ;	FLPYDSK_SECTOR_DTL_1024 = 4
  1099                        ;};
  1100                        ;
  1101                        ;/**
  1102                        ; *	Constants
  1103                        ; */
  1104                        ;
  1105                        ;//! floppy irq
  1106                        ;const int FLOPPY_IRQ = 6;
  1107                        	data
  1108                        	xdef	~~FLOPPY_IRQ
  1109                        ~~FLOPPY_IRQ:
  1110 00:0000: 06 00        	dw	$6
  1111 00:0002:              	ends
  1112                        ;
  1113                        ;//! sectors per track
  1114                        ;const int FLPY_SECTORS_PER_TRACK = 18;
  1115                        	data
  1116                        	xdef	~~FLPY_SECTORS_PER_TRACK
  1117                        ~~FLPY_SECTORS_PER_TRACK:
  1118 00:0002: 12 00        	dw	$12
  1119 00:0004:              	ends
  1120                        ;
  1121                        ;//! dma tranfer buffer starts here and ends at 0x
                    1000+64k
  1122                        ;//! You can change this as needed. It must be bel
                    ow 16MB and in idenitity mapped memory!
  1123                        ;const LPCHAR DMA_BUFFER = (LPCHAR) 0x1E1000;
  1124                        	data
  1125                        	xdef	~~DMA_BUFFER
  1126                        ~~DMA_BUFFER:
  1127 00:0004: 00 10 1E 00  	dl	$1E1000
  1128 00:0008:              	ends
  1129                        ;
  1130                        ;//===============================================
                    =============================
  1131                        ;//    IMPLEMENTATION PRIVATE CLASS PROTOTYPES / E
                    XTERNAL CLASS REFERENCES
  1132                        ;//===============================================
                    =============================
  1133                        ;//===============================================
                    =============================
  1134                        ;//    IMPLEMENTATION PRIVATE STRUCTURES / UTILITY
                     CLASSES
  1135                        ;//===============================================
  Sat Jul 10 2021  1:15                                                Page 23


                    =============================
  1136                        ;//===============================================
                    =============================
  1137                        ;//    IMPLEMENTATION REQUIRED EXTERNAL REFERENCES
                     (AVOID)
  1138                        ;//===============================================
                    =============================
  1139                        ;
  1140                        ;//! used to wait in miliseconds
  1141                        ;extern void sleep(int);
  1142                        ;
  1143                        ;//===============================================
                    =============================
  1144                        ;//    IMPLEMENTATION PRIVATE DATA
  1145                        ;//===============================================
                    =============================
  1146                        ;
  1147                        ;//! current working drive. Defaults to 0 which sh
                    ould be fine on most systems
  1148                        ;static uint8_t _CurrentDrive = 0;
  1149                        	data
  1150                        ~~_CurrentDrive:
  1151 00:0008: 00           	db	$0
  1152 00:0009:              	ends
  1153                        ;
  1154                        ;//! set when IRQ fires
  1155                        ;UCHAR _FloppyDiskIRQ = 0;
  1156                        	data
  1157                        	xdef	~~_FloppyDiskIRQ
  1158                        ~~_FloppyDiskIRQ:
  1159 00:0009: 00           	db	$0
  1160 00:000A:              	ends
  1161                        ;
  1162                        ;#pragma section CODE=FLPY,offset $5:7FFF
  1163                        FLPY	section	offset $5:7FFF
  1164 05:7FFF:              	ends
  1165                        ;//===============================================
                    =============================
  1166                        ;//    INTERFACE DATA
  1167                        ;//===============================================
                    =============================
  1168                        ;//===============================================
                    =============================
  1169                        ;//    IMPLEMENTATION PRIVATE FUNCTION PROTOTYPES
  1170                        ;//===============================================
                    =============================
  1171                        ;//===============================================
                    =============================
  1172                        ;//    IMPLEMENTATION PRIVATE FUNCTIONS
  1173                        ;//===============================================
                    =============================
  1174                        ;
  1175                        ;/**
  1176                        ; *	DMA Routines.
  1177                        ; **	The DMA (Direct Memory Access) controlle
                    r allows the FDC to send data to the DMA,
  1178                        ; **	which can put the data in memory. While 
                    the FDC can be programmed to not use DMA,
  Sat Jul 10 2021  1:15                                                Page 24


  1179                        ; **  it is not very well supported on emulators o
                    r virtual machines. Because of this, we
  1180                        ; **  will be using the DMA for data transfers. Th
                    e DMA is a complex controller, because of
  1181                        ; **  this we will cover it in the next tutorial. 
                    For now, please do not worry about the DMA
  1182                        ; **  routines to much :)
  1183                        ; */
  1184                        ;/*
  1185                        ;void flpydsk_wait_irq(void)
  1186                        ;{
  1187                        ;
  1188                        ;	 int timeout = 0x7FFF;
  1189                        ;
  1190                        ;	 k_debug_hex("flpydsk_wait_irq:enter:",(inportb(
                    FLPYDSK_MSR) & 0xC0));
  1191                        ;
  1192                        ;	 while(((inportb(FLPYDSK_MSR) & 0xC0) != 0x80) &
                    & timeout)
  1193                        ;	 {
  1194                        ;
  1195                        ;		 timeout--;
  1196                        ;	 }
  1197                        ;
  1198                        ;	 k_debug_hex("flpydsk_wait_irq:exit:",(inportb(F
                    LPYDSK_MSR) & 0xC0));
  1199                        ;
  1200                        ;}
  1201                        ;*/
  1202                        ;
  1203                        ;//! initialize DMA to use phys addr 84k-128k
  1204                        ;void flpydsk_initialize_dma(void)
  1205                        ;{
  1206                        	.line	268
  1207                        	.line	269
  1208                        	FLPY
  1209                        	xdef	~~flpydsk_initialize_dma
  1210                        	func
  1211                        	.function	269
  1212                        ~~flpydsk_initialize_dma:
  1213                        	longa	on
  1214                        	longi	on
  1215 05:7FFF: 3B           	tsc
  1216 05:8000: 38           	sec
  1217 05:8001: E9 00 00     	sbc	#L2
  1218 05:8004: 1B           	tcs
  1219 05:8005: 0B           	phd
  1220 05:8006: 5B           	tcd
  1221                        	.block	269
  1222                        ;	/*
  1223                        ;	 outportb(0x0a, 0x06);	//mask dma channel 2
  1224                        ;	 outportb(0xd8, 0xff);	//reset master flip-flop
  1225                        ;	 outportb(0x04, 0);     //address=0x1000
  1226                        ;	 outportb(0x04, 0x10);
  1227                        ;	 outportb(0xd8, 0xff);  //reset master flip-flop
  1228                        ;	 outportb(0x05, 0xff); //count to 0x23ff (number
                     of bytes in a 3.5" floppy disk track)
  1229                        ;	 outportb(0x05, 0x23);
  Sat Jul 10 2021  1:15                                                Page 25


  1230                        ;	 outportb(0x80, 0);     //external page register
                     = 0
  1231                        ;	 outportb(0x0a, 0x02);  //unmask dma channel 2
  1232                        ;	 */
  1233                        ;}
  1234                        	.line	281
  1235                        L5:
  1236 05:8007: 2B           	pld
  1237 05:8008: 3B           	tsc
  1238 05:8009: 18           	clc
  1239 05:800A: 69 00 00     	adc	#L2
  1240 05:800D: 1B           	tcs
  1241 05:800E: 6B           	rtl
  1242                        	.endblock	281
  1243             00000000   L2	equ	0
  1244             00000001   L3	equ	1
  1245 05:800F:              	ends
  1246                        	efunc
  1247                        	.endfunc	281,1,0
  1248                        	.line	281
  1249                        ;
  1250                        ;//! prepare the DMA for read transfer
  1251                        ;void flpydsk_dma_read(void)
  1252                        ;{
  1253                        	.line	284
  1254                        	.line	285
  1255                        	FLPY
  1256                        	xdef	~~flpydsk_dma_read
  1257                        	func
  1258                        	.function	285
  1259                        ~~flpydsk_dma_read:
  1260                        	longa	on
  1261                        	longi	on
  1262 05:800F: 3B           	tsc
  1263 05:8010: 38           	sec
  1264 05:8011: E9 00 00     	sbc	#L6
  1265 05:8014: 1B           	tcs
  1266 05:8015: 0B           	phd
  1267 05:8016: 5B           	tcd
  1268                        	.block	285
  1269                        ;	/*
  1270                        ;	 outportb(0x0a, 0x06); //mask dma channel 2
  1271                        ;	 outportb(0x0b, 0x56); //single transfer, addres
                    s increment, autoinit, read, channel 2
  1272                        ;	 outportb(0x0a, 0x02); //unmask dma channel 2
  1273                        ;	 */
  1274                        ;}
  1275                        	.line	291
  1276                        L9:
  1277 05:8017: 2B           	pld
  1278 05:8018: 3B           	tsc
  1279 05:8019: 18           	clc
  1280 05:801A: 69 00 00     	adc	#L6
  1281 05:801D: 1B           	tcs
  1282 05:801E: 6B           	rtl
  1283                        	.endblock	291
  1284             00000000   L6	equ	0
  1285             00000001   L7	equ	1
  Sat Jul 10 2021  1:15                                                Page 26


  1286 05:801F:              	ends
  1287                        	efunc
  1288                        	.endfunc	291,1,0
  1289                        	.line	291
  1290                        ;
  1291                        ;//! prepare the DMA for write transfer
  1292                        ;void flpydsk_dma_write(void)
  1293                        ;{
  1294                        	.line	294
  1295                        	.line	295
  1296                        	FLPY
  1297                        	xdef	~~flpydsk_dma_write
  1298                        	func
  1299                        	.function	295
  1300                        ~~flpydsk_dma_write:
  1301                        	longa	on
  1302                        	longi	on
  1303 05:801F: 3B           	tsc
  1304 05:8020: 38           	sec
  1305 05:8021: E9 00 00     	sbc	#L10
  1306 05:8024: 1B           	tcs
  1307 05:8025: 0B           	phd
  1308 05:8026: 5B           	tcd
  1309                        	.block	295
  1310                        ;	/*
  1311                        ;	 outportb(0x0a, 0x06); //mask dma channel 2
  1312                        ;	 outportb(0x0b, 0x5a); //single transfer, addres
                    s increment, autoinit, write, channel 2
  1313                        ;	 outportb(0x0a, 0x02); //unmask dma channel 2
  1314                        ;	 */
  1315                        ;}
  1316                        	.line	301
  1317                        L13:
  1318 05:8027: 2B           	pld
  1319 05:8028: 3B           	tsc
  1320 05:8029: 18           	clc
  1321 05:802A: 69 00 00     	adc	#L10
  1322 05:802D: 1B           	tcs
  1323 05:802E: 6B           	rtl
  1324                        	.endblock	301
  1325             00000000   L10	equ	0
  1326             00000001   L11	equ	1
  1327 05:802F:              	ends
  1328                        	efunc
  1329                        	.endfunc	301,1,0
  1330                        	.line	301
  1331                        ;
  1332                        ;/**
  1333                        ; *	Basic Controller I/O Routines
  1334                        ; */
  1335                        ;
  1336                        ;//! return fdc status
  1337                        ;uint8_t flpydsk_read_status(void)
  1338                        ;{
  1339                        	.line	308
  1340                        	.line	309
  1341                        	FLPY
  1342                        	xdef	~~flpydsk_read_status
  Sat Jul 10 2021  1:15                                                Page 27


  1343                        	func
  1344                        	.function	309
  1345                        ~~flpydsk_read_status:
  1346                        	longa	on
  1347                        	longi	on
  1348 05:802F: 3B           	tsc
  1349 05:8030: 38           	sec
  1350 05:8031: E9 01 00     	sbc	#L14
  1351 05:8034: 1B           	tcs
  1352 05:8035: 0B           	phd
  1353 05:8036: 5B           	tcd
  1354                        	.block	309
  1355                        ;	uint8_t status = 0;
  1356                        ;
  1357                        ;	sleep(20);
  1358             00000000   status_1	set	0
  1359                        	.sym	status,0,14,1,8
  1360 05:8037: E2 20        	sep	#$20
  1361                        	longa	off
  1362 05:8039: 64 01        	stz	<L15+status_1
  1363 05:803B: C2 20        	rep	#$20
  1364                        	longa	on
  1365                        	.line	312
  1366 05:803D: F4 14 00     	pea	#<$14
  1367 05:8040: 22 xx xx xx  	jsl	~~sleep
  1368                        ;	status = inportb(FLPYDSK_MSR);
  1369                        	.line	313
  1370 05:8044: E2 20        	sep	#$20
  1371                        	longa	off
  1372 05:8046: AF F4 13 AF  	lda	>11473908
  1373 05:804A: 85 01        	sta	<L15+status_1
  1374 05:804C: C2 20        	rep	#$20
  1375                        	longa	on
  1376                        ;	k_debug_hex("flpydsk_read_status:", status);
  1377                        	.line	314
  1378 05:804E: D4 01        	pei	<L15+status_1
  1379 05:8050: F4 xx xx     	pea	#^L1
  1380 05:8053: F4 xx xx     	pea	#<L1
  1381 05:8056: 22 xx xx xx  	jsl	~~k_debug_hex
  1382                        ;
  1383                        ;	return status;
  1384                        	.line	316
  1385 05:805A: A5 01        	lda	<L15+status_1
  1386 05:805C: 29 FF 00     	and	#$ff
  1387                        L17:
  1388 05:805F: A8           	tay
  1389 05:8060: 2B           	pld
  1390 05:8061: 3B           	tsc
  1391 05:8062: 18           	clc
  1392 05:8063: 69 01 00     	adc	#L14
  1393 05:8066: 1B           	tcs
  1394 05:8067: 98           	tya
  1395 05:8068: 6B           	rtl
  1396                        ;}
  1397                        	.line	317
  1398                        	.endblock	317
  1399             00000001   L14	equ	1
  1400             00000001   L15	equ	1
  Sat Jul 10 2021  1:15                                                Page 28


  1401 05:8069:              	ends
  1402                        	efunc
  1403                        	.endfunc	317,1,1
  1404                        	.line	317
  1405                        	data
  1406                        L1:
  1407 00:000A: 66 6C 70 79  	db	$66,$6C,$70,$79,$64,$73,$6B,$5F,$72,$65,
                    $61,$64,$5F,$73,$74
       00:000E: 64 73 6B 5F 
       00:0012: 72 65 61 64 
       00:0016: 5F 73 74 
  1408 00:0019: 61 74 75 73  	db	$61,$74,$75,$73,$3A,$00
       00:001D: 3A 00 
  1409 00:001F:              	ends
  1410                        ;
  1411                        ;//! write to the fdc dor
  1412                        ;void flpydsk_write_dor(uint8_t val)
  1413                        ;{
  1414                        	.line	320
  1415                        	.line	321
  1416                        	FLPY
  1417                        	xdef	~~flpydsk_write_dor
  1418                        	func
  1419                        	.function	321
  1420                        ~~flpydsk_write_dor:
  1421                        	longa	on
  1422                        	longi	on
  1423 05:8069: 3B           	tsc
  1424 05:806A: 38           	sec
  1425 05:806B: E9 00 00     	sbc	#L19
  1426 05:806E: 1B           	tcs
  1427 05:806F: 0B           	phd
  1428 05:8070: 5B           	tcd
  1429             00000004   val_0	set	4
  1430                        	.block	321
  1431                        ;	k_debug_hex("flpydsk_write_dor:", val);
  1432                        	.sym	val,4,14,6,8
  1433                        	.line	322
  1434 05:8071: D4 04        	pei	<L19+val_0
  1435 05:8073: F4 xx xx     	pea	#^L18
  1436 05:8076: F4 xx xx     	pea	#<L18
  1437 05:8079: 22 xx xx xx  	jsl	~~k_debug_hex
  1438                        ;	//! write the digital output register
  1439                        ;	outportb(FLPYDSK_DOR, val);
  1440                        	.line	324
  1441 05:807D: E2 20        	sep	#$20
  1442                        	longa	off
  1443 05:807F: A5 04        	lda	<L19+val_0
  1444 05:8081: 8F F2 13 AF  	sta	>11473906
  1445 05:8085: C2 20        	rep	#$20
  1446                        	longa	on
  1447                        ;
  1448                        ;	//sleep(20);
  1449                        ;}
  1450                        	.line	327
  1451                        L22:
  1452 05:8087: A5 02        	lda	<L19+2
  1453 05:8089: 85 04        	sta	<L19+2+2
  Sat Jul 10 2021  1:15                                                Page 29


  1454 05:808B: A5 01        	lda	<L19+1
  1455 05:808D: 85 03        	sta	<L19+1+2
  1456 05:808F: 2B           	pld
  1457 05:8090: 3B           	tsc
  1458 05:8091: 18           	clc
  1459 05:8092: 69 02 00     	adc	#L19+2
  1460 05:8095: 1B           	tcs
  1461 05:8096: 6B           	rtl
  1462                        	.endblock	327
  1463             00000000   L19	equ	0
  1464             00000001   L20	equ	1
  1465 05:8097:              	ends
  1466                        	efunc
  1467                        	.endfunc	327,1,0
  1468                        	.line	327
  1469                        	data
  1470                        L18:
  1471 00:001F: 66 6C 70 79  	db	$66,$6C,$70,$79,$64,$73,$6B,$5F,$77,$72,
                    $69,$74,$65,$5F,$64
       00:0023: 64 73 6B 5F 
       00:0027: 77 72 69 74 
       00:002B: 65 5F 64 
  1472 00:002E: 6F 72 3A 00  	db	$6F,$72,$3A,$00
  1473 00:0032:              	ends
  1474                        ;
  1475                        ;//! send command byte to fdc
  1476                        ;void flpydsk_send_command(uint8_t cmd)
  1477                        ;{
  1478                        	.line	330
  1479                        	.line	331
  1480                        	FLPY
  1481                        	xdef	~~flpydsk_send_command
  1482                        	func
  1483                        	.function	331
  1484                        ~~flpydsk_send_command:
  1485                        	longa	on
  1486                        	longi	on
  1487 05:8097: 3B           	tsc
  1488 05:8098: 38           	sec
  1489 05:8099: E9 02 00     	sbc	#L24
  1490 05:809C: 1B           	tcs
  1491 05:809D: 0B           	phd
  1492 05:809E: 5B           	tcd
  1493             00000004   cmd_0	set	4
  1494                        	.block	331
  1495                        ;	int i;
  1496                        ;
  1497                        ;	k_debug_hex("flpydsk_send_command:", cmd);
  1498             00000000   i_1	set	0
  1499                        	.sym	i,0,5,1,16
  1500                        	.sym	cmd,4,14,6,8
  1501                        	.line	334
  1502 05:809F: D4 06        	pei	<L24+cmd_0
  1503 05:80A1: F4 xx xx     	pea	#^L23
  1504 05:80A4: F4 xx xx     	pea	#<L23
  1505 05:80A7: 22 xx xx xx  	jsl	~~k_debug_hex
  1506                        ;
  1507                        ;	//! wait until data register is ready. We send c
  Sat Jul 10 2021  1:15                                                Page 30


                    ommands to the data register
  1508                        ;	for (i = 0; i < 500; i++)
  1509                        	.line	337
  1510 05:80AB: 64 01        	stz	<L25+i_1
  1511                        L10003:
  1512                        ;	{
  1513                        	.line	338
  1514                        ;		if (flpydsk_read_status() & FLPYDSK_MSR_
                    MASK_DATAREG)
  1515                        	.line	339
  1516                        ;		{
  1517 05:80AD: 22 2F 80 05  	jsl	~~flpydsk_read_status
  1518 05:80B1: E2 20        	sep	#$20
  1519                        	longa	off
  1520 05:80B3: 29 80        	and	#<$80
  1521 05:80B5: C2 20        	rep	#$20
  1522                        	longa	on
  1523 05:80B7: D0 03        	bne	L27
  1524 05:80B9: 82 1A 00     	brl	L10004
  1525                        L27:
  1526                        	.line	340
  1527                        ;			outportb(FLPYDSK_FIFO, cmd);
  1528                        	.line	341
  1529 05:80BC: E2 20        	sep	#$20
  1530                        	longa	off
  1531 05:80BE: A5 06        	lda	<L24+cmd_0
  1532 05:80C0: 8F F5 13 AF  	sta	>11473909
  1533 05:80C4: C2 20        	rep	#$20
  1534                        	longa	on
  1535                        ;			return;
  1536                        	.line	342
  1537                        L28:
  1538 05:80C6: A5 04        	lda	<L24+2
  1539 05:80C8: 85 06        	sta	<L24+2+2
  1540 05:80CA: A5 03        	lda	<L24+1
  1541 05:80CC: 85 05        	sta	<L24+1+2
  1542 05:80CE: 2B           	pld
  1543 05:80CF: 3B           	tsc
  1544 05:80D0: 18           	clc
  1545 05:80D1: 69 04 00     	adc	#L24+2
  1546 05:80D4: 1B           	tcs
  1547 05:80D5: 6B           	rtl
  1548                        ;		}
  1549                        	.line	343
  1550                        ;	}
  1551                        L10004:
  1552                        	.line	344
  1553                        L10001:
  1554 05:80D6: E6 01        	inc	<L25+i_1
  1555 05:80D8: 38           	sec
  1556 05:80D9: A5 01        	lda	<L25+i_1
  1557 05:80DB: E9 F4 01     	sbc	#<$1f4
  1558 05:80DE: 70 03        	bvs	L29
  1559 05:80E0: 49 00 80     	eor	#$8000
  1560                        L29:
  1561 05:80E3: 30 03        	bmi	L30
  1562 05:80E5: 82 C5 FF     	brl	L10003
  1563                        L30:
  Sat Jul 10 2021  1:15                                                Page 31


  1564                        L10002:
  1565                        ;}
  1566                        	.line	345
  1567 05:80E8: 82 DB FF     	brl	L28
  1568                        	.endblock	345
  1569             00000002   L24	equ	2
  1570             00000001   L25	equ	1
  1571 05:80EB:              	ends
  1572                        	efunc
  1573                        	.endfunc	345,1,2
  1574                        	.line	345
  1575                        	data
  1576                        L23:
  1577 00:0032: 66 6C 70 79  	db	$66,$6C,$70,$79,$64,$73,$6B,$5F,$73,$65,
                    $6E,$64,$5F,$63,$6F
       00:0036: 64 73 6B 5F 
       00:003A: 73 65 6E 64 
       00:003E: 5F 63 6F 
  1578 00:0041: 6D 6D 61 6E  	db	$6D,$6D,$61,$6E,$64,$3A,$00
       00:0045: 64 3A 00 
  1579 00:0048:              	ends
  1580                        ;
  1581                        ;//! get data from fdc
  1582                        ;BOOL flpydsk_read_byte(uint8_t *pdata)
  1583                        ;{
  1584                        	.line	348
  1585                        	.line	349
  1586                        	FLPY
  1587                        	xdef	~~flpydsk_read_byte
  1588                        	func
  1589                        	.function	349
  1590                        ~~flpydsk_read_byte:
  1591                        	longa	on
  1592                        	longi	on
  1593 05:80EB: 3B           	tsc
  1594 05:80EC: 38           	sec
  1595 05:80ED: E9 02 00     	sbc	#L32
  1596 05:80F0: 1B           	tcs
  1597 05:80F1: 0B           	phd
  1598 05:80F2: 5B           	tcd
  1599             00000004   pdata_0	set	4
  1600                        	.block	349
  1601                        ;	int i;
  1602                        ;	k_debug_string("flpydsk_read_byte\r\n");
  1603             00000000   i_1	set	0
  1604                        	.sym	i,0,5,1,16
  1605                        	.sym	pdata,4,142,6,32
  1606                        	.line	351
  1607 05:80F3: F4 xx xx     	pea	#^L31
  1608 05:80F6: F4 xx xx     	pea	#<L31
  1609 05:80F9: 22 xx xx xx  	jsl	~~k_debug_string
  1610                        ;	//! same as above function but returns data regi
                    ster for reading
  1611                        ;	for (i = 0; i < 500; i++)
  1612                        	.line	353
  1613 05:80FD: 64 01        	stz	<L33+i_1
  1614                        L10007:
  1615                        ;	{
  Sat Jul 10 2021  1:15                                                Page 32


  1616                        	.line	354
  1617                        ;		if (flpydsk_read_status() & 0xC0)
  1618                        	.line	355
  1619                        ;		{
  1620 05:80FF: 22 2F 80 05  	jsl	~~flpydsk_read_status
  1621 05:8103: E2 20        	sep	#$20
  1622                        	longa	off
  1623 05:8105: 29 C0        	and	#<$c0
  1624 05:8107: C2 20        	rep	#$20
  1625                        	longa	on
  1626 05:8109: D0 03        	bne	L35
  1627 05:810B: 82 39 00     	brl	L10008
  1628                        L35:
  1629                        	.line	356
  1630                        ;			*pdata = inportb(FLPYDSK_FIFO);
  1631                        	.line	357
  1632 05:810E: E2 20        	sep	#$20
  1633                        	longa	off
  1634 05:8110: AF F5 13 AF  	lda	>11473909
  1635 05:8114: 87 06        	sta	[<L32+pdata_0]
  1636 05:8116: C2 20        	rep	#$20
  1637                        	longa	on
  1638                        ;			k_debug_hex("flpydsk_read_byte:"
                    , *pdata);
  1639                        	.line	358
  1640 05:8118: A7 06        	lda	[<L32+pdata_0]
  1641 05:811A: 48           	pha
  1642 05:811B: F4 xx xx     	pea	#^L31+20
  1643 05:811E: F4 xx xx     	pea	#<L31+20
  1644 05:8121: 22 xx xx xx  	jsl	~~k_debug_hex
  1645                        ;			k_debug_char("flpydsk_read_char:
                    ", *pdata);
  1646                        	.line	359
  1647 05:8125: A7 06        	lda	[<L32+pdata_0]
  1648 05:8127: 48           	pha
  1649 05:8128: F4 xx xx     	pea	#^L31+39
  1650 05:812B: F4 xx xx     	pea	#<L31+39
  1651 05:812E: 22 xx xx xx  	jsl	~~k_debug_char
  1652                        ;			return TRUE;
  1653                        	.line	360
  1654 05:8132: A9 01 00     	lda	#$1
  1655                        L36:
  1656 05:8135: A8           	tay
  1657 05:8136: A5 04        	lda	<L32+2
  1658 05:8138: 85 08        	sta	<L32+2+4
  1659 05:813A: A5 03        	lda	<L32+1
  1660 05:813C: 85 07        	sta	<L32+1+4
  1661 05:813E: 2B           	pld
  1662 05:813F: 3B           	tsc
  1663 05:8140: 18           	clc
  1664 05:8141: 69 06 00     	adc	#L32+4
  1665 05:8144: 1B           	tcs
  1666 05:8145: 98           	tya
  1667 05:8146: 6B           	rtl
  1668                        ;		}
  1669                        	.line	361
  1670                        ;	}
  1671                        L10008:
  Sat Jul 10 2021  1:15                                                Page 33


  1672                        	.line	362
  1673                        L10005:
  1674 05:8147: E6 01        	inc	<L33+i_1
  1675 05:8149: 38           	sec
  1676 05:814A: A5 01        	lda	<L33+i_1
  1677 05:814C: E9 F4 01     	sbc	#<$1f4
  1678 05:814F: 70 03        	bvs	L37
  1679 05:8151: 49 00 80     	eor	#$8000
  1680                        L37:
  1681 05:8154: 30 03        	bmi	L38
  1682 05:8156: 82 A6 FF     	brl	L10007
  1683                        L38:
  1684                        L10006:
  1685                        ;	return FALSE;
  1686                        	.line	363
  1687 05:8159: A9 00 00     	lda	#$0
  1688 05:815C: 82 D6 FF     	brl	L36
  1689                        ;}
  1690                        	.line	364
  1691                        	.endblock	364
  1692             00000002   L32	equ	2
  1693             00000001   L33	equ	1
  1694 05:815F:              	ends
  1695                        	efunc
  1696                        	.endfunc	364,1,2
  1697                        	.line	364
  1698                        	data
  1699                        L31:
  1700 00:0048: 66 6C 70 79  	db	$66,$6C,$70,$79,$64,$73,$6B,$5F,$72,$65,
                    $61,$64,$5F,$62,$79
       00:004C: 64 73 6B 5F 
       00:0050: 72 65 61 64 
       00:0054: 5F 62 79 
  1701 00:0057: 74 65 0D 0A  	db	$74,$65,$0D,$0A,$00,$66,$6C,$70,$79,$64,
                    $73,$6B,$5F,$72,$65
       00:005B: 00 66 6C 70 
       00:005F: 79 64 73 6B 
       00:0063: 5F 72 65 
  1702 00:0066: 61 64 5F 62  	db	$61,$64,$5F,$62,$79,$74,$65,$3A,$00,$66,
                    $6C,$70,$79,$64,$73
       00:006A: 79 74 65 3A 
       00:006E: 00 66 6C 70 
       00:0072: 79 64 73 
  1703 00:0075: 6B 5F 72 65  	db	$6B,$5F,$72,$65,$61,$64,$5F,$63,$68,$61,
                    $72,$3A,$00
       00:0079: 61 64 5F 63 
       00:007D: 68 61 72 3A 
       00:0081: 00 
  1704 00:0082:              	ends
  1705                        ;
  1706                        ;uint8_t flpydsk_read_data(void)
  1707                        ;{
  1708                        	.line	366
  1709                        	.line	367
  1710                        	FLPY
  1711                        	xdef	~~flpydsk_read_data
  1712                        	func
  1713                        	.function	367
  Sat Jul 10 2021  1:15                                                Page 34


  1714                        ~~flpydsk_read_data:
  1715                        	longa	on
  1716                        	longi	on
  1717 05:815F: 3B           	tsc
  1718 05:8160: 38           	sec
  1719 05:8161: E9 03 00     	sbc	#L40
  1720 05:8164: 1B           	tcs
  1721 05:8165: 0B           	phd
  1722 05:8166: 5B           	tcd
  1723                        	.block	367
  1724                        ;	UCHAR d = 0;
  1725                        ;	int i;
  1726                        ;	k_debug_string("flpydsk_read_data\r\n");
  1727             00000000   d_1	set	0
  1728             00000001   i_1	set	1
  1729                        	.sym	d,0,14,1,8
  1730                        	.sym	i,1,5,1,16
  1731 05:8167: E2 20        	sep	#$20
  1732                        	longa	off
  1733 05:8169: 64 01        	stz	<L41+d_1
  1734 05:816B: C2 20        	rep	#$20
  1735                        	longa	on
  1736                        	.line	370
  1737 05:816D: F4 xx xx     	pea	#^L39
  1738 05:8170: F4 xx xx     	pea	#<L39
  1739 05:8173: 22 xx xx xx  	jsl	~~k_debug_string
  1740                        ;	//! same as above function but returns data regi
                    ster for reading
  1741                        ;	for (i = 0; i < 500; i++)
  1742                        	.line	372
  1743 05:8177: 64 02        	stz	<L41+i_1
  1744                        L10011:
  1745                        ;	{
  1746                        	.line	373
  1747                        ;		if (flpydsk_read_status() & FLPYDSK_MSR_
                    MASK_DATAREG)
  1748                        	.line	374
  1749                        ;		{
  1750 05:8179: 22 2F 80 05  	jsl	~~flpydsk_read_status
  1751 05:817D: E2 20        	sep	#$20
  1752                        	longa	off
  1753 05:817F: 29 80        	and	#<$80
  1754 05:8181: C2 20        	rep	#$20
  1755                        	longa	on
  1756 05:8183: D0 03        	bne	L43
  1757 05:8185: 82 25 00     	brl	L10012
  1758                        L43:
  1759                        	.line	375
  1760                        ;			d = inportb(FLPYDSK_FIFO);
  1761                        	.line	376
  1762 05:8188: E2 20        	sep	#$20
  1763                        	longa	off
  1764 05:818A: AF F5 13 AF  	lda	>11473909
  1765 05:818E: 85 01        	sta	<L41+d_1
  1766 05:8190: C2 20        	rep	#$20
  1767                        	longa	on
  1768                        ;			k_debug_hex("flpydsk_read_data:"
                    , d);
  Sat Jul 10 2021  1:15                                                Page 35


  1769                        	.line	377
  1770 05:8192: D4 01        	pei	<L41+d_1
  1771 05:8194: F4 xx xx     	pea	#^L39+20
  1772 05:8197: F4 xx xx     	pea	#<L39+20
  1773 05:819A: 22 xx xx xx  	jsl	~~k_debug_hex
  1774                        ;			return d;
  1775                        	.line	378
  1776 05:819E: A5 01        	lda	<L41+d_1
  1777 05:81A0: 29 FF 00     	and	#$ff
  1778                        L44:
  1779 05:81A3: A8           	tay
  1780 05:81A4: 2B           	pld
  1781 05:81A5: 3B           	tsc
  1782 05:81A6: 18           	clc
  1783 05:81A7: 69 03 00     	adc	#L40
  1784 05:81AA: 1B           	tcs
  1785 05:81AB: 98           	tya
  1786 05:81AC: 6B           	rtl
  1787                        ;		}
  1788                        	.line	379
  1789                        ;	}
  1790                        L10012:
  1791                        	.line	380
  1792                        L10009:
  1793 05:81AD: E6 02        	inc	<L41+i_1
  1794 05:81AF: 38           	sec
  1795 05:81B0: A5 02        	lda	<L41+i_1
  1796 05:81B2: E9 F4 01     	sbc	#<$1f4
  1797 05:81B5: 70 03        	bvs	L45
  1798 05:81B7: 49 00 80     	eor	#$8000
  1799                        L45:
  1800 05:81BA: 30 03        	bmi	L46
  1801 05:81BC: 82 BA FF     	brl	L10011
  1802                        L46:
  1803                        L10010:
  1804                        ;	return 0;
  1805                        	.line	381
  1806 05:81BF: A9 00 00     	lda	#$0
  1807 05:81C2: 82 DE FF     	brl	L44
  1808                        ;}
  1809                        	.line	382
  1810                        	.endblock	382
  1811             00000003   L40	equ	3
  1812             00000001   L41	equ	1
  1813 05:81C5:              	ends
  1814                        	efunc
  1815                        	.endfunc	382,1,3
  1816                        	.line	382
  1817                        	data
  1818                        L39:
  1819 00:0082: 66 6C 70 79  	db	$66,$6C,$70,$79,$64,$73,$6B,$5F,$72,$65,
                    $61,$64,$5F,$64,$61
       00:0086: 64 73 6B 5F 
       00:008A: 72 65 61 64 
       00:008E: 5F 64 61 
  1820 00:0091: 74 61 0D 0A  	db	$74,$61,$0D,$0A,$00,$66,$6C,$70,$79,$64,
                    $73,$6B,$5F,$72,$65
       00:0095: 00 66 6C 70 
  Sat Jul 10 2021  1:15                                                Page 36


       00:0099: 79 64 73 6B 
       00:009D: 5F 72 65 
  1821 00:00A0: 61 64 5F 64  	db	$61,$64,$5F,$64,$61,$74,$61,$3A,$00
       00:00A4: 61 74 61 3A 
       00:00A8: 00 
  1822 00:00A9:              	ends
  1823                        ;
  1824                        ;//! write to the configuation control register
  1825                        ;void flpydsk_write_ccr(uint8_t val)
  1826                        ;{
  1827                        	.line	385
  1828                        	.line	386
  1829                        	FLPY
  1830                        	xdef	~~flpydsk_write_ccr
  1831                        	func
  1832                        	.function	386
  1833                        ~~flpydsk_write_ccr:
  1834                        	longa	on
  1835                        	longi	on
  1836 05:81C5: 3B           	tsc
  1837 05:81C6: 38           	sec
  1838 05:81C7: E9 00 00     	sbc	#L48
  1839 05:81CA: 1B           	tcs
  1840 05:81CB: 0B           	phd
  1841 05:81CC: 5B           	tcd
  1842             00000004   val_0	set	4
  1843                        	.block	386
  1844                        ;	k_debug_string("flpydsk_write_ccr\r\n");
  1845                        	.sym	val,4,14,6,8
  1846                        	.line	387
  1847 05:81CD: F4 xx xx     	pea	#^L47
  1848 05:81D0: F4 xx xx     	pea	#<L47
  1849 05:81D3: 22 xx xx xx  	jsl	~~k_debug_string
  1850                        ;	//! write the configuation control
  1851                        ;	outportb(FLPYDSK_CTRL, val);
  1852                        	.line	389
  1853 05:81D7: E2 20        	sep	#$20
  1854                        	longa	off
  1855 05:81D9: A5 04        	lda	<L48+val_0
  1856 05:81DB: 8F F7 13 AF  	sta	>11473911
  1857 05:81DF: C2 20        	rep	#$20
  1858                        	longa	on
  1859                        ;}
  1860                        	.line	390
  1861                        L51:
  1862 05:81E1: A5 02        	lda	<L48+2
  1863 05:81E3: 85 04        	sta	<L48+2+2
  1864 05:81E5: A5 01        	lda	<L48+1
  1865 05:81E7: 85 03        	sta	<L48+1+2
  1866 05:81E9: 2B           	pld
  1867 05:81EA: 3B           	tsc
  1868 05:81EB: 18           	clc
  1869 05:81EC: 69 02 00     	adc	#L48+2
  1870 05:81EF: 1B           	tcs
  1871 05:81F0: 6B           	rtl
  1872                        	.endblock	390
  1873             00000000   L48	equ	0
  1874             00000001   L49	equ	1
  Sat Jul 10 2021  1:15                                                Page 37


  1875 05:81F1:              	ends
  1876                        	efunc
  1877                        	.endfunc	390,1,0
  1878                        	.line	390
  1879                        	data
  1880                        L47:
  1881 00:00A9: 66 6C 70 79  	db	$66,$6C,$70,$79,$64,$73,$6B,$5F,$77,$72,
                    $69,$74,$65,$5F,$63
       00:00AD: 64 73 6B 5F 
       00:00B1: 77 72 69 74 
       00:00B5: 65 5F 63 
  1882 00:00B8: 63 72 0D 0A  	db	$63,$72,$0D,$0A,$00
       00:00BC: 00 
  1883 00:00BD:              	ends
  1884                        ;
  1885                        ;/**
  1886                        ; *	Interrupt Handling Routines
  1887                        ; */
  1888                        ;
  1889                        ;//!	floppy disk irq handler
  1890                        ;void i816_flpy_irq()
  1891                        ;{
  1892                        	.line	397
  1893                        	.line	398
  1894                        	FLPY
  1895                        	xdef	~~i816_flpy_irq
  1896                        	func
  1897                        	.function	398
  1898                        ~~i816_flpy_irq:
  1899                        	longa	on
  1900                        	longi	on
  1901 05:81F1: 3B           	tsc
  1902 05:81F2: 38           	sec
  1903 05:81F3: E9 00 00     	sbc	#L53
  1904 05:81F6: 1B           	tcs
  1905 05:81F7: 0B           	phd
  1906 05:81F8: 5B           	tcd
  1907                        	.block	398
  1908                        ;	/*
  1909                        ;	 _asm add
  1910                        ;	 esp, 12
  1911                        ;	 _asm pushad
  1912                        ;	 _asm cli
  1913                        ;
  1914                        ;	 //! irq fired
  1915                        ;	 _FloppyDiskIRQ = 1;
  1916                        ;
  1917                        ;	 //! tell hal we are done
  1918                        ;	 interruptdone(FLOPPY_IRQ);
  1919                        ;
  1920                        ;	 _asm sti
  1921                        ;	 _asm popad
  1922                        ;	 _asm iretd
  1923                        ;	 */
  1924                        ;}
  1925                        	.line	415
  1926                        L56:
  1927 05:81F9: 2B           	pld
  Sat Jul 10 2021  1:15                                                Page 38


  1928 05:81FA: 3B           	tsc
  1929 05:81FB: 18           	clc
  1930 05:81FC: 69 00 00     	adc	#L53
  1931 05:81FF: 1B           	tcs
  1932 05:8200: 6B           	rtl
  1933                        	.endblock	415
  1934             00000000   L53	equ	0
  1935             00000001   L54	equ	1
  1936 05:8201:              	ends
  1937                        	efunc
  1938                        	.endfunc	415,1,0
  1939                        	.line	415
  1940                        ;
  1941                        ;/**
  1942                        ; *	Controller Command Routines
  1943                        ; */
  1944                        ;
  1945                        ;//! check interrupt status command
  1946                        ;void flpydsk_check_int(uint32_t* st0, uint32_t* c
                    yl)
  1947                        ;{
  1948                        	.line	422
  1949                        	.line	423
  1950                        	FLPY
  1951                        	xdef	~~flpydsk_check_int
  1952                        	func
  1953                        	.function	423
  1954                        ~~flpydsk_check_int:
  1955                        	longa	on
  1956                        	longi	on
  1957 05:8201: 3B           	tsc
  1958 05:8202: 38           	sec
  1959 05:8203: E9 04 00     	sbc	#L57
  1960 05:8206: 1B           	tcs
  1961 05:8207: 0B           	phd
  1962 05:8208: 5B           	tcd
  1963             00000004   st0_0	set	4
  1964             00000008   cyl_0	set	8
  1965                        	.block	423
  1966                        ;	k_debug_string("flpydsk_check_int\r\n");
  1967                        	.sym	st0,4,146,6,32
  1968                        	.sym	cyl,8,146,6,32
  1969                        	.line	424
  1970 05:8209: F4 xx xx     	pea	#^L52
  1971 05:820C: F4 xx xx     	pea	#<L52
  1972 05:820F: 22 xx xx xx  	jsl	~~k_debug_string
  1973                        ;
  1974                        ;	flpydsk_send_command(FDC_CMD_CHECK_INT);
  1975                        	.line	426
  1976 05:8213: F4 08 00     	pea	#<$8
  1977 05:8216: 22 97 80 05  	jsl	~~flpydsk_send_command
  1978                        ;
  1979                        ;	*st0 = flpydsk_read_data();
  1980                        	.line	428
  1981 05:821A: 22 5F 81 05  	jsl	~~flpydsk_read_data
  1982 05:821E: E2 20        	sep	#$20
  1983                        	longa	off
  1984 05:8220: 85 01        	sta	<R0
  Sat Jul 10 2021  1:15                                                Page 39


  1985 05:8222: C2 20        	rep	#$20
  1986                        	longa	on
  1987 05:8224: A5 01        	lda	<R0
  1988 05:8226: 29 FF 00     	and	#$ff
  1989 05:8229: 85 01        	sta	<R0
  1990 05:822B: 64 03        	stz	<R0+2
  1991 05:822D: A5 01        	lda	<R0
  1992 05:822F: 87 08        	sta	[<L57+st0_0]
  1993 05:8231: A5 03        	lda	<R0+2
  1994 05:8233: A0 02 00     	ldy	#$2
  1995 05:8236: 97 08        	sta	[<L57+st0_0],Y
  1996                        ;	*cyl = flpydsk_read_data();
  1997                        	.line	429
  1998 05:8238: 22 5F 81 05  	jsl	~~flpydsk_read_data
  1999 05:823C: E2 20        	sep	#$20
  2000                        	longa	off
  2001 05:823E: 85 01        	sta	<R0
  2002 05:8240: C2 20        	rep	#$20
  2003                        	longa	on
  2004 05:8242: A5 01        	lda	<R0
  2005 05:8244: 29 FF 00     	and	#$ff
  2006 05:8247: 85 01        	sta	<R0
  2007 05:8249: 64 03        	stz	<R0+2
  2008 05:824B: A5 01        	lda	<R0
  2009 05:824D: 87 0C        	sta	[<L57+cyl_0]
  2010 05:824F: A5 03        	lda	<R0+2
  2011 05:8251: A0 02 00     	ldy	#$2
  2012 05:8254: 97 0C        	sta	[<L57+cyl_0],Y
  2013                        ;
  2014                        ;	k_debug_long("flpydsk_check_int:st0:", *st0);
  2015                        	.line	431
  2016 05:8256: A0 02 00     	ldy	#$2
  2017 05:8259: B7 08        	lda	[<L57+st0_0],Y
  2018 05:825B: 48           	pha
  2019 05:825C: A7 08        	lda	[<L57+st0_0]
  2020 05:825E: 48           	pha
  2021 05:825F: F4 xx xx     	pea	#^L52+20
  2022 05:8262: F4 xx xx     	pea	#<L52+20
  2023 05:8265: 22 xx xx xx  	jsl	~~k_debug_long
  2024                        ;	k_debug_long("flpydsk_check_int:cyl:", *cyl);
  2025                        	.line	432
  2026 05:8269: A0 02 00     	ldy	#$2
  2027 05:826C: B7 0C        	lda	[<L57+cyl_0],Y
  2028 05:826E: 48           	pha
  2029 05:826F: A7 0C        	lda	[<L57+cyl_0]
  2030 05:8271: 48           	pha
  2031 05:8272: F4 xx xx     	pea	#^L52+43
  2032 05:8275: F4 xx xx     	pea	#<L52+43
  2033 05:8278: 22 xx xx xx  	jsl	~~k_debug_long
  2034                        ;}
  2035                        	.line	433
  2036                        L60:
  2037 05:827C: A5 06        	lda	<L57+2
  2038 05:827E: 85 0E        	sta	<L57+2+8
  2039 05:8280: A5 05        	lda	<L57+1
  2040 05:8282: 85 0D        	sta	<L57+1+8
  2041 05:8284: 2B           	pld
  2042 05:8285: 3B           	tsc
  Sat Jul 10 2021  1:15                                                Page 40


  2043 05:8286: 18           	clc
  2044 05:8287: 69 0C 00     	adc	#L57+8
  2045 05:828A: 1B           	tcs
  2046 05:828B: 6B           	rtl
  2047                        	.endblock	433
  2048             00000004   L57	equ	4
  2049             00000005   L58	equ	5
  2050 05:828C:              	ends
  2051                        	efunc
  2052                        	.endfunc	433,5,4
  2053                        	.line	433
  2054                        	data
  2055                        L52:
  2056 00:00BD: 66 6C 70 79  	db	$66,$6C,$70,$79,$64,$73,$6B,$5F,$63,$68,
                    $65,$63,$6B,$5F,$69
       00:00C1: 64 73 6B 5F 
       00:00C5: 63 68 65 63 
       00:00C9: 6B 5F 69 
  2057 00:00CC: 6E 74 0D 0A  	db	$6E,$74,$0D,$0A,$00,$66,$6C,$70,$79,$64,
                    $73,$6B,$5F,$63,$68
       00:00D0: 00 66 6C 70 
       00:00D4: 79 64 73 6B 
       00:00D8: 5F 63 68 
  2058 00:00DB: 65 63 6B 5F  	db	$65,$63,$6B,$5F,$69,$6E,$74,$3A,$73,$74,
                    $30,$3A,$00,$66,$6C
       00:00DF: 69 6E 74 3A 
       00:00E3: 73 74 30 3A 
       00:00E7: 00 66 6C 
  2059 00:00EA: 70 79 64 73  	db	$70,$79,$64,$73,$6B,$5F,$63,$68,$65,$63,
                    $6B,$5F,$69,$6E,$74
       00:00EE: 6B 5F 63 68 
       00:00F2: 65 63 6B 5F 
       00:00F6: 69 6E 74 
  2060 00:00F9: 3A 63 79 6C  	db	$3A,$63,$79,$6C,$3A,$00
       00:00FD: 3A 00 
  2061 00:00FF:              	ends
  2062                        ;
  2063                        ;//! turns the current floppy drives motor on/off
  2064                        ;void flpydsk_control_motor(BOOL b)
  2065                        ;{
  2066                        	.line	436
  2067                        	.line	437
  2068                        	FLPY
  2069                        	xdef	~~flpydsk_control_motor
  2070                        	func
  2071                        	.function	437
  2072                        ~~flpydsk_control_motor:
  2073                        	longa	on
  2074                        	longi	on
  2075 05:828C: 3B           	tsc
  2076 05:828D: 38           	sec
  2077 05:828E: E9 0C 00     	sbc	#L62
  2078 05:8291: 1B           	tcs
  2079 05:8292: 0B           	phd
  2080 05:8293: 5B           	tcd
  2081             00000004   b_0	set	4
  2082                        	.block	437
  2083                        ;	uint32_t motor = 0;
  Sat Jul 10 2021  1:15                                                Page 41


  2084                        ;	//! sanity check: invalid drive
  2085                        ;	if (_CurrentDrive > 3)
  2086             00000000   motor_1	set	0
  2087                        	.sym	motor,0,18,1,32
  2088                        	.sym	b,4,14,6,8
  2089 05:8294: 64 09        	stz	<L63+motor_1
  2090 05:8296: 64 0B        	stz	<L63+motor_1+2
  2091                        	.line	440
  2092                        ;		return;
  2093 05:8298: E2 20        	sep	#$20
  2094                        	longa	off
  2095 05:829A: A9 03        	lda	#$3
  2096 05:829C: CD xx xx     	cmp	|~~_CurrentDrive
  2097 05:829F: C2 20        	rep	#$20
  2098                        	longa	on
  2099 05:82A1: 90 03        	bcc	L65
  2100 05:82A3: 82 10 00     	brl	L10013
  2101                        L65:
  2102                        	.line	441
  2103                        L66:
  2104 05:82A6: A5 0E        	lda	<L62+2
  2105 05:82A8: 85 10        	sta	<L62+2+2
  2106 05:82AA: A5 0D        	lda	<L62+1
  2107 05:82AC: 85 0F        	sta	<L62+1+2
  2108 05:82AE: 2B           	pld
  2109 05:82AF: 3B           	tsc
  2110 05:82B0: 18           	clc
  2111 05:82B1: 69 0E 00     	adc	#L62+2
  2112 05:82B4: 1B           	tcs
  2113 05:82B5: 6B           	rtl
  2114                        ;
  2115                        ;	k_debug_string("flpydsk_control_motor\r\n");
  2116                        L10013:
  2117                        	.line	443
  2118 05:82B6: F4 xx xx     	pea	#^L61
  2119 05:82B9: F4 xx xx     	pea	#<L61
  2120 05:82BC: 22 xx xx xx  	jsl	~~k_debug_string
  2121                        ;
  2122                        ;	//! select the correct mask based on current dri
                    ve
  2123                        ;	switch (_CurrentDrive)
  2124                        	.line	446
  2125 05:82C0: AD xx xx     	lda	|~~_CurrentDrive
  2126 05:82C3: 29 FF 00     	and	#$ff
  2127 05:82C6: 82 34 00     	brl	L10014
  2128                        ;	{
  2129                        	.line	447
  2130                        ;	case 0:
  2131                        	.line	448
  2132                        L10016:
  2133                        ;		motor = FLPYDSK_DOR_MASK_DRIVE0_MOTOR;
  2134                        	.line	449
  2135 05:82C9: A9 10 00     	lda	#$10
  2136 05:82CC: 85 09        	sta	<L63+motor_1
  2137 05:82CE: A9 00 00     	lda	#$0
  2138 05:82D1: 85 0B        	sta	<L63+motor_1+2
  2139                        ;		break;
  2140                        	.line	450
  Sat Jul 10 2021  1:15                                                Page 42


  2141 05:82D3: 82 39 00     	brl	L10015
  2142                        ;	case 1:
  2143                        	.line	451
  2144                        L10017:
  2145                        ;		motor = FLPYDSK_DOR_MASK_DRIVE1_MOTOR;
  2146                        	.line	452
  2147 05:82D6: A9 20 00     	lda	#$20
  2148 05:82D9: 85 09        	sta	<L63+motor_1
  2149 05:82DB: A9 00 00     	lda	#$0
  2150 05:82DE: 85 0B        	sta	<L63+motor_1+2
  2151                        ;		break;
  2152                        	.line	453
  2153 05:82E0: 82 2C 00     	brl	L10015
  2154                        ;	case 2:
  2155                        	.line	454
  2156                        L10018:
  2157                        ;		motor = FLPYDSK_DOR_MASK_DRIVE2_MOTOR;
  2158                        	.line	455
  2159 05:82E3: A9 40 00     	lda	#$40
  2160 05:82E6: 85 09        	sta	<L63+motor_1
  2161 05:82E8: A9 00 00     	lda	#$0
  2162 05:82EB: 85 0B        	sta	<L63+motor_1+2
  2163                        ;		break;
  2164                        	.line	456
  2165 05:82ED: 82 1F 00     	brl	L10015
  2166                        ;	case 3:
  2167                        	.line	457
  2168                        L10019:
  2169                        ;		motor = FLPYDSK_DOR_MASK_DRIVE3_MOTOR;
  2170                        	.line	458
  2171 05:82F0: A9 80 00     	lda	#$80
  2172 05:82F3: 85 09        	sta	<L63+motor_1
  2173 05:82F5: A9 00 00     	lda	#$0
  2174 05:82F8: 85 0B        	sta	<L63+motor_1+2
  2175                        ;		break;
  2176                        	.line	459
  2177 05:82FA: 82 12 00     	brl	L10015
  2178                        ;	}
  2179                        	.line	460
  2180                        L10014:
  2181                        	xref	~~~fsw
  2182 05:82FD: 22 xx xx xx  	jsl	~~~fsw
  2183 05:8301: 00 00        	dw	0
  2184 05:8303: 04 00        	dw	4
  2185 05:8305: 0E 83        	dw	L10015-1
  2186 05:8307: C8 82        	dw	L10016-1
  2187 05:8309: D5 82        	dw	L10017-1
  2188 05:830B: E2 82        	dw	L10018-1
  2189 05:830D: EF 82        	dw	L10019-1
  2190                        L10015:
  2191                        ;
  2192                        ;	//! turn on or off the motor of that drive
  2193                        ;	if (b)
  2194                        	.line	463
  2195                        ;		//flpydsk_write_dor(_CurrentDrive | moto
                    r | FLPYDSK_DOR_MASK_RESET | FLPYDSK_DOR_MASK_DMA);
  2196                        ;		flpydsk_write_dor(_CurrentDrive | motor 
                    | FLPYDSK_DOR_MASK_RESET);
  Sat Jul 10 2021  1:15                                                Page 43


  2197 05:830F: A5 10        	lda	<L62+b_0
  2198 05:8311: 29 FF 00     	and	#$ff
  2199 05:8314: D0 03        	bne	L67
  2200 05:8316: 82 2A 00     	brl	L10020
  2201                        L67:
  2202                        	.line	465
  2203 05:8319: AD xx xx     	lda	|~~_CurrentDrive
  2204 05:831C: 29 FF 00     	and	#$ff
  2205 05:831F: 85 01        	sta	<R0
  2206 05:8321: 64 03        	stz	<R0+2
  2207 05:8323: A5 09        	lda	<L63+motor_1
  2208 05:8325: 05 01        	ora	<R0
  2209 05:8327: 85 05        	sta	<R1
  2210 05:8329: A5 0B        	lda	<L63+motor_1+2
  2211 05:832B: 05 03        	ora	<R0+2
  2212 05:832D: 85 07        	sta	<R1+2
  2213 05:832F: A5 05        	lda	<R1
  2214 05:8331: 09 04 00     	ora	#<$4
  2215 05:8334: 85 01        	sta	<R0
  2216 05:8336: A5 07        	lda	<R1+2
  2217 05:8338: 85 03        	sta	<R0+2
  2218 05:833A: D4 01        	pei	<R0
  2219 05:833C: 22 69 80 05  	jsl	~~flpydsk_write_dor
  2220                        ;	else
  2221 05:8340: 82 07 00     	brl	L10021
  2222                        L10020:
  2223                        ;		flpydsk_write_dor(FLPYDSK_DOR_MASK_RESET
                    );
  2224                        	.line	467
  2225 05:8343: F4 04 00     	pea	#<$4
  2226 05:8346: 22 69 80 05  	jsl	~~flpydsk_write_dor
  2227                        L10021:
  2228                        ;
  2229                        ;	//! in all cases; wait a little bit for the moto
                    r to spin up/turn off
  2230                        ;	k_debug_string("flpydsk_control_motor sleeping\r
                    \n");
  2231                        	.line	470
  2232 05:834A: F4 xx xx     	pea	#^L61+24
  2233 05:834D: F4 xx xx     	pea	#<L61+24
  2234 05:8350: 22 xx xx xx  	jsl	~~k_debug_string
  2235                        ;	sleep(20);
  2236                        	.line	471
  2237 05:8354: F4 14 00     	pea	#<$14
  2238 05:8357: 22 xx xx xx  	jsl	~~sleep
  2239                        ;}
  2240                        	.line	472
  2241 05:835B: 82 48 FF     	brl	L66
  2242                        	.endblock	472
  2243             0000000C   L62	equ	12
  2244             00000009   L63	equ	9
  2245 05:835E:              	ends
  2246                        	efunc
  2247                        	.endfunc	472,9,12
  2248                        	.line	472
  2249                        	data
  2250                        L61:
  2251 00:00FF: 66 6C 70 79  	db	$66,$6C,$70,$79,$64,$73,$6B,$5F,$63,$6F,
  Sat Jul 10 2021  1:15                                                Page 44


                    $6E,$74,$72,$6F,$6C
       00:0103: 64 73 6B 5F 
       00:0107: 63 6F 6E 74 
       00:010B: 72 6F 6C 
  2252 00:010E: 5F 6D 6F 74  	db	$5F,$6D,$6F,$74,$6F,$72,$0D,$0A,$00,$66,
                    $6C,$70,$79,$64,$73
       00:0112: 6F 72 0D 0A 
       00:0116: 00 66 6C 70 
       00:011A: 79 64 73 
  2253 00:011D: 6B 5F 63 6F  	db	$6B,$5F,$63,$6F,$6E,$74,$72,$6F,$6C,$5F,
                    $6D,$6F,$74,$6F,$72
       00:0121: 6E 74 72 6F 
       00:0125: 6C 5F 6D 6F 
       00:0129: 74 6F 72 
  2254 00:012C: 20 73 6C 65  	db	$20,$73,$6C,$65,$65,$70,$69,$6E,$67,$0D,
                    $0A,$00
       00:0130: 65 70 69 6E 
       00:0134: 67 0D 0A 00 
  2255 00:0138:              	ends
  2256                        ;
  2257                        ;//! configure drive flpydsk_drive_data(3, 16, 240
                    , FALSE);
  2258                        ;void flpydsk_drive_data(uint32_t stepr, uint32_t 
                    loadt, uint32_t unloadt,BOOL dma)
  2259                        ;{
  2260                        	.line	475
  2261                        	.line	476
  2262                        	FLPY
  2263                        	xdef	~~flpydsk_drive_data
  2264                        	func
  2265                        	.function	476
  2266                        ~~flpydsk_drive_data:
  2267                        	longa	on
  2268                        	longi	on
  2269 05:835E: 3B           	tsc
  2270 05:835F: 38           	sec
  2271 05:8360: E9 10 00     	sbc	#L69
  2272 05:8363: 1B           	tcs
  2273 05:8364: 0B           	phd
  2274 05:8365: 5B           	tcd
  2275             00000004   stepr_0	set	4
  2276             00000008   loadt_0	set	8
  2277             0000000C   unloadt_0	set	12
  2278             00000010   dma_0	set	16
  2279                        	.block	476
  2280                        ;
  2281                        ;	uint32_t data = 0;
  2282                        ;
  2283                        ;	k_debug_string("flpydsk_drive_data\r\n");
  2284             00000000   data_1	set	0
  2285                        	.sym	data,0,18,1,32
  2286                        	.sym	stepr,4,18,6,32
  2287                        	.sym	loadt,8,18,6,32
  2288                        	.sym	unloadt,12,18,6,32
  2289                        	.sym	dma,16,14,6,8
  2290 05:8366: 64 0D        	stz	<L70+data_1
  2291 05:8368: 64 0F        	stz	<L70+data_1+2
  2292                        	.line	480
  Sat Jul 10 2021  1:15                                                Page 45


  2293 05:836A: F4 xx xx     	pea	#^L68
  2294 05:836D: F4 xx xx     	pea	#<L68
  2295 05:8370: 22 xx xx xx  	jsl	~~k_debug_string
  2296                        ;
  2297                        ;	//! send command
  2298                        ;	flpydsk_send_command(FDC_CMD_SPECIFY);
  2299                        	.line	483
  2300 05:8374: F4 03 00     	pea	#<$3
  2301 05:8377: 22 97 80 05  	jsl	~~flpydsk_send_command
  2302                        ;	data = ((stepr & 0xf) << 4) | (unloadt & 0xf);
  2303                        	.line	484
  2304 05:837B: A5 14        	lda	<L69+stepr_0
  2305 05:837D: 29 0F 00     	and	#<$f
  2306 05:8380: 85 05        	sta	<R1
  2307 05:8382: 64 07        	stz	<R1+2
  2308 05:8384: D4 07        	pei	<R1+2
  2309 05:8386: D4 05        	pei	<R1
  2310 05:8388: A9 04 00     	lda	#$4
  2311                        	xref	~~~lasl
  2312 05:838B: 22 xx xx xx  	jsl	~~~lasl
  2313 05:838F: 85 01        	sta	<R0
  2314 05:8391: 86 03        	stx	<R0+2
  2315 05:8393: A5 1C        	lda	<L69+unloadt_0
  2316 05:8395: 29 0F 00     	and	#<$f
  2317 05:8398: 85 09        	sta	<R2
  2318 05:839A: 64 0B        	stz	<R2+2
  2319 05:839C: A5 09        	lda	<R2
  2320 05:839E: 05 01        	ora	<R0
  2321 05:83A0: 85 0D        	sta	<L70+data_1
  2322 05:83A2: A5 0B        	lda	<R2+2
  2323 05:83A4: 05 03        	ora	<R0+2
  2324 05:83A6: 85 0F        	sta	<L70+data_1+2
  2325                        ;	flpydsk_send_command(data);
  2326                        	.line	485
  2327 05:83A8: D4 0D        	pei	<L70+data_1
  2328 05:83AA: 22 97 80 05  	jsl	~~flpydsk_send_command
  2329                        ;	data = (loadt) << 1 | (dma == FALSE) ? 0 : 1;
  2330                        	.line	486
  2331 05:83AE: A5 18        	lda	<L69+loadt_0
  2332 05:83B0: 85 01        	sta	<R0
  2333 05:83B2: A5 1A        	lda	<L69+loadt_0+2
  2334 05:83B4: 85 03        	sta	<R0+2
  2335 05:83B6: 06 01        	asl	<R0
  2336 05:83B8: 26 03        	rol	<R0+2
  2337 05:83BA: 64 05        	stz	<R1
  2338 05:83BC: A5 20        	lda	<L69+dma_0
  2339 05:83BE: 29 FF 00     	and	#$ff
  2340 05:83C1: F0 03        	beq	L74
  2341 05:83C3: 82 02 00     	brl	L73
  2342                        L74:
  2343 05:83C6: E6 05        	inc	<R1
  2344                        L73:
  2345 05:83C8: A0 00 00     	ldy	#$0
  2346 05:83CB: A5 05        	lda	<R1
  2347 05:83CD: 10 01        	bpl	L75
  2348 05:83CF: 88           	dey
  2349                        L75:
  2350 05:83D0: 85 05        	sta	<R1
  Sat Jul 10 2021  1:15                                                Page 46


  2351 05:83D2: 84 07        	sty	<R1+2
  2352 05:83D4: A5 05        	lda	<R1
  2353 05:83D6: 05 01        	ora	<R0
  2354 05:83D8: 85 09        	sta	<R2
  2355 05:83DA: A5 07        	lda	<R1+2
  2356 05:83DC: 05 03        	ora	<R0+2
  2357 05:83DE: 85 0B        	sta	<R2+2
  2358 05:83E0: A5 09        	lda	<R2
  2359 05:83E2: 05 0B        	ora	<R2+2
  2360 05:83E4: D0 03        	bne	L76
  2361 05:83E6: 82 05 00     	brl	L72
  2362                        L76:
  2363 05:83E9: A9 00 00     	lda	#$0
  2364 05:83EC: 80 03        	bra	L77
  2365                        L72:
  2366 05:83EE: A9 01 00     	lda	#$1
  2367                        L77:
  2368 05:83F1: 85 01        	sta	<R0
  2369 05:83F3: A0 00 00     	ldy	#$0
  2370 05:83F6: A5 01        	lda	<R0
  2371 05:83F8: 10 01        	bpl	L78
  2372 05:83FA: 88           	dey
  2373                        L78:
  2374 05:83FB: 85 0D        	sta	<L70+data_1
  2375 05:83FD: 84 0F        	sty	<L70+data_1+2
  2376                        ;	flpydsk_send_command(data);
  2377                        	.line	487
  2378 05:83FF: D4 0D        	pei	<L70+data_1
  2379 05:8401: 22 97 80 05  	jsl	~~flpydsk_send_command
  2380                        ;}
  2381                        	.line	488
  2382                        L79:
  2383 05:8405: A5 12        	lda	<L69+2
  2384 05:8407: 85 20        	sta	<L69+2+14
  2385 05:8409: A5 11        	lda	<L69+1
  2386 05:840B: 85 1F        	sta	<L69+1+14
  2387 05:840D: 2B           	pld
  2388 05:840E: 3B           	tsc
  2389 05:840F: 18           	clc
  2390 05:8410: 69 1E 00     	adc	#L69+14
  2391 05:8413: 1B           	tcs
  2392 05:8414: 6B           	rtl
  2393                        	.endblock	488
  2394             00000010   L69	equ	16
  2395             0000000D   L70	equ	13
  2396 05:8415:              	ends
  2397                        	efunc
  2398                        	.endfunc	488,13,16
  2399                        	.line	488
  2400                        	data
  2401                        L68:
  2402 00:0138: 66 6C 70 79  	db	$66,$6C,$70,$79,$64,$73,$6B,$5F,$64,$72,
                    $69,$76,$65,$5F,$64
       00:013C: 64 73 6B 5F 
       00:0140: 64 72 69 76 
       00:0144: 65 5F 64 
  2403 00:0147: 61 74 61 0D  	db	$61,$74,$61,$0D,$0A,$00
       00:014B: 0A 00 
  Sat Jul 10 2021  1:15                                                Page 47


  2404 00:014D:              	ends
  2405                        ;
  2406                        ;//! calibrates the drive
  2407                        ;int flpydsk_calibrate(uint32_t drive)
  2408                        ;{
  2409                        	.line	491
  2410                        	.line	492
  2411                        	FLPY
  2412                        	xdef	~~flpydsk_calibrate
  2413                        	func
  2414                        	.function	492
  2415                        ~~flpydsk_calibrate:
  2416                        	longa	on
  2417                        	longi	on
  2418 05:8415: 3B           	tsc
  2419 05:8416: 38           	sec
  2420 05:8417: E9 0A 00     	sbc	#L81
  2421 05:841A: 1B           	tcs
  2422 05:841B: 0B           	phd
  2423 05:841C: 5B           	tcd
  2424             00000004   drive_0	set	4
  2425                        	.block	492
  2426                        ;	int i;
  2427                        ;	uint32_t st0, cyl;
  2428                        ;
  2429                        ;	k_debug_string("flpydsk_calibrate\r\n");
  2430             00000000   i_1	set	0
  2431             00000002   st0_1	set	2
  2432             00000006   cyl_1	set	6
  2433                        	.sym	i,0,5,1,16
  2434                        	.sym	st0,2,18,1,32
  2435                        	.sym	cyl,6,18,1,32
  2436                        	.sym	drive,4,18,6,32
  2437                        	.line	496
  2438 05:841D: F4 xx xx     	pea	#^L80
  2439 05:8420: F4 xx xx     	pea	#<L80
  2440 05:8423: 22 xx xx xx  	jsl	~~k_debug_string
  2441                        ;
  2442                        ;	if (drive >= 4)
  2443                        	.line	498
  2444                        ;		return -2;
  2445 05:8427: A5 0E        	lda	<L81+drive_0
  2446 05:8429: C9 04 00     	cmp	#<$4
  2447 05:842C: A5 10        	lda	<L81+drive_0+2
  2448 05:842E: E9 00 00     	sbc	#^$4
  2449 05:8431: B0 03        	bcs	L84
  2450 05:8433: 82 15 00     	brl	L10022
  2451                        L84:
  2452                        	.line	499
  2453 05:8436: A9 FE FF     	lda	#$fffe
  2454                        L85:
  2455 05:8439: A8           	tay
  2456 05:843A: A5 0C        	lda	<L81+2
  2457 05:843C: 85 10        	sta	<L81+2+4
  2458 05:843E: A5 0B        	lda	<L81+1
  2459 05:8440: 85 0F        	sta	<L81+1+4
  2460 05:8442: 2B           	pld
  2461 05:8443: 3B           	tsc
  Sat Jul 10 2021  1:15                                                Page 48


  2462 05:8444: 18           	clc
  2463 05:8445: 69 0E 00     	adc	#L81+4
  2464 05:8448: 1B           	tcs
  2465 05:8449: 98           	tya
  2466 05:844A: 6B           	rtl
  2467                        ;
  2468                        ;	//! turn on the motor
  2469                        ;	flpydsk_control_motor(TRUE);
  2470                        L10022:
  2471                        	.line	502
  2472 05:844B: F4 01 00     	pea	#<$1
  2473 05:844E: 22 8C 82 05  	jsl	~~flpydsk_control_motor
  2474                        ;
  2475                        ;	for (i = 0; i < 100; i++)
  2476                        	.line	504
  2477 05:8452: 64 01        	stz	<L82+i_1
  2478                        L10025:
  2479                        ;	{
  2480                        	.line	505
  2481                        ;
  2482                        ;		//! send command
  2483                        ;		flpydsk_send_command(FDC_CMD_CALIBRATE);
  2484                        	.line	508
  2485 05:8454: F4 07 00     	pea	#<$7
  2486 05:8457: 22 97 80 05  	jsl	~~flpydsk_send_command
  2487                        ;		flpydsk_send_command(drive);
  2488                        	.line	509
  2489 05:845B: D4 0E        	pei	<L81+drive_0
  2490 05:845D: 22 97 80 05  	jsl	~~flpydsk_send_command
  2491                        ;		flpydsk_wait_irq();
  2492                        	.line	510
  2493                        L10026:
  2494 05:8461: AD xx xx     	lda	|~~_FloppyDiskIRQ
  2495 05:8464: 29 FF 00     	and	#$ff
  2496 05:8467: F0 03        	beq	L86
  2497 05:8469: 82 03 00     	brl	L10027
  2498                        L86:
  2499                        	.line	510
  2500 05:846C: 82 F2 FF     	brl	L10026
  2501                        L10027:
  2502                        	.line	510
  2503 05:846F: E2 20        	sep	#$20
  2504                        	longa	off
  2505 05:8471: 9C xx xx     	stz	|~~_FloppyDiskIRQ
  2506 05:8474: C2 20        	rep	#$20
  2507                        	longa	on
  2508                        	.line	510
  2509                        ;		flpydsk_check_int(&st0, &cyl);
  2510                        	.line	511
  2511 05:8476: F4 00 00     	pea	#0
  2512 05:8479: 18           	clc
  2513 05:847A: 7B           	tdc
  2514 05:847B: 69 07 00     	adc	#<L82+cyl_1
  2515 05:847E: 48           	pha
  2516 05:847F: F4 00 00     	pea	#0
  2517 05:8482: 18           	clc
  2518 05:8483: 7B           	tdc
  2519 05:8484: 69 03 00     	adc	#<L82+st0_1
  Sat Jul 10 2021  1:15                                                Page 49


  2520 05:8487: 48           	pha
  2521 05:8488: 22 01 82 05  	jsl	~~flpydsk_check_int
  2522                        ;
  2523                        ;		//! did we fine cylinder 0? if so, we ar
                    e done
  2524                        ;		if (!cyl)
  2525                        	.line	514
  2526                        ;		{
  2527 05:848C: A5 07        	lda	<L82+cyl_1
  2528 05:848E: 05 09        	ora	<L82+cyl_1+2
  2529 05:8490: F0 03        	beq	L87
  2530 05:8492: 82 1B 00     	brl	L10028
  2531                        L87:
  2532                        	.line	515
  2533                        ;
  2534                        ;			k_debug_long("flpydsk_calibrate:
                    cy:", cyl);
  2535                        	.line	517
  2536 05:8495: D4 09        	pei	<L82+cyl_1+2
  2537 05:8497: D4 07        	pei	<L82+cyl_1
  2538 05:8499: F4 xx xx     	pea	#^L80+20
  2539 05:849C: F4 xx xx     	pea	#<L80+20
  2540 05:849F: 22 xx xx xx  	jsl	~~k_debug_long
  2541                        ;			flpydsk_control_motor(FALSE);
  2542                        	.line	518
  2543 05:84A3: F4 00 00     	pea	#<$0
  2544 05:84A6: 22 8C 82 05  	jsl	~~flpydsk_control_motor
  2545                        ;			return 0;
  2546                        	.line	519
  2547 05:84AA: A9 00 00     	lda	#$0
  2548 05:84AD: 82 89 FF     	brl	L85
  2549                        ;		}
  2550                        	.line	520
  2551                        ;	}
  2552                        L10028:
  2553                        	.line	521
  2554                        L10023:
  2555 05:84B0: E6 01        	inc	<L82+i_1
  2556 05:84B2: 38           	sec
  2557 05:84B3: A5 01        	lda	<L82+i_1
  2558 05:84B5: E9 64 00     	sbc	#<$64
  2559 05:84B8: 70 03        	bvs	L88
  2560 05:84BA: 49 00 80     	eor	#$8000
  2561                        L88:
  2562 05:84BD: 30 03        	bmi	L89
  2563 05:84BF: 82 92 FF     	brl	L10025
  2564                        L89:
  2565                        L10024:
  2566                        ;
  2567                        ;	flpydsk_control_motor(FALSE);
  2568                        	.line	523
  2569 05:84C2: F4 00 00     	pea	#<$0
  2570 05:84C5: 22 8C 82 05  	jsl	~~flpydsk_control_motor
  2571                        ;	return -1;
  2572                        	.line	524
  2573 05:84C9: A9 FF FF     	lda	#$ffff
  2574 05:84CC: 82 6A FF     	brl	L85
  2575                        ;}
  Sat Jul 10 2021  1:15                                                Page 50


  2576                        	.line	525
  2577                        	.endblock	525
  2578             0000000A   L81	equ	10
  2579             00000001   L82	equ	1
  2580 05:84CF:              	ends
  2581                        	efunc
  2582                        	.endfunc	525,1,10
  2583                        	.line	525
  2584                        	data
  2585                        L80:
  2586 00:014D: 66 6C 70 79  	db	$66,$6C,$70,$79,$64,$73,$6B,$5F,$63,$61,
                    $6C,$69,$62,$72,$61
       00:0151: 64 73 6B 5F 
       00:0155: 63 61 6C 69 
       00:0159: 62 72 61 
  2587 00:015C: 74 65 0D 0A  	db	$74,$65,$0D,$0A,$00,$66,$6C,$70,$79,$64,
                    $73,$6B,$5F,$63,$61
       00:0160: 00 66 6C 70 
       00:0164: 79 64 73 6B 
       00:0168: 5F 63 61 
  2588 00:016B: 6C 69 62 72  	db	$6C,$69,$62,$72,$61,$74,$65,$3A,$63,$79,
                    $3A,$00
       00:016F: 61 74 65 3A 
       00:0173: 63 79 3A 00 
  2589 00:0177:              	ends
  2590                        ;
  2591                        ;//! disable controller
  2592                        ;void flpydsk_disable_controller()
  2593                        ;{
  2594                        	.line	528
  2595                        	.line	529
  2596                        	FLPY
  2597                        	xdef	~~flpydsk_disable_controller
  2598                        	func
  2599                        	.function	529
  2600                        ~~flpydsk_disable_controller:
  2601                        	longa	on
  2602                        	longi	on
  2603 05:84CF: 3B           	tsc
  2604 05:84D0: 38           	sec
  2605 05:84D1: E9 00 00     	sbc	#L91
  2606 05:84D4: 1B           	tcs
  2607 05:84D5: 0B           	phd
  2608 05:84D6: 5B           	tcd
  2609                        	.block	529
  2610                        ;	k_debug_string("flpydsk_disable_controller\r\n")
                    ;
  2611                        	.line	530
  2612 05:84D7: F4 xx xx     	pea	#^L90
  2613 05:84DA: F4 xx xx     	pea	#<L90
  2614 05:84DD: 22 xx xx xx  	jsl	~~k_debug_string
  2615                        ;	flpydsk_write_dor(0);
  2616                        	.line	531
  2617 05:84E1: F4 00 00     	pea	#<$0
  2618 05:84E4: 22 69 80 05  	jsl	~~flpydsk_write_dor
  2619                        ;}
  2620                        	.line	532
  2621                        L94:
  Sat Jul 10 2021  1:15                                                Page 51


  2622 05:84E8: 2B           	pld
  2623 05:84E9: 3B           	tsc
  2624 05:84EA: 18           	clc
  2625 05:84EB: 69 00 00     	adc	#L91
  2626 05:84EE: 1B           	tcs
  2627 05:84EF: 6B           	rtl
  2628                        	.endblock	532
  2629             00000000   L91	equ	0
  2630             00000001   L92	equ	1
  2631 05:84F0:              	ends
  2632                        	efunc
  2633                        	.endfunc	532,1,0
  2634                        	.line	532
  2635                        	data
  2636                        L90:
  2637 00:0177: 66 6C 70 79  	db	$66,$6C,$70,$79,$64,$73,$6B,$5F,$64,$69,
                    $73,$61,$62,$6C,$65
       00:017B: 64 73 6B 5F 
       00:017F: 64 69 73 61 
       00:0183: 62 6C 65 
  2638 00:0186: 5F 63 6F 6E  	db	$5F,$63,$6F,$6E,$74,$72,$6F,$6C,$6C,$65,
                    $72,$0D,$0A,$00
       00:018A: 74 72 6F 6C 
       00:018E: 6C 65 72 0D 
       00:0192: 0A 00 
  2639 00:0194:              	ends
  2640                        ;
  2641                        ;//! enable controller
  2642                        ;void flpydsk_enable_controller()
  2643                        ;{
  2644                        	.line	535
  2645                        	.line	536
  2646                        	FLPY
  2647                        	xdef	~~flpydsk_enable_controller
  2648                        	func
  2649                        	.function	536
  2650                        ~~flpydsk_enable_controller:
  2651                        	longa	on
  2652                        	longi	on
  2653 05:84F0: 3B           	tsc
  2654 05:84F1: 38           	sec
  2655 05:84F2: E9 00 00     	sbc	#L96
  2656 05:84F5: 1B           	tcs
  2657 05:84F6: 0B           	phd
  2658 05:84F7: 5B           	tcd
  2659                        	.block	536
  2660                        ;	k_debug_string("flpydsk_enable_controller\r\n");
  2661                        	.line	537
  2662 05:84F8: F4 xx xx     	pea	#^L95
  2663 05:84FB: F4 xx xx     	pea	#<L95
  2664 05:84FE: 22 xx xx xx  	jsl	~~k_debug_string
  2665                        ;	flpydsk_write_dor(FLPYDSK_DOR_MASK_RESET | FLPYD
                    SK_DOR_MASK_DMA);
  2666                        	.line	538
  2667 05:8502: F4 0C 00     	pea	#<$c
  2668 05:8505: 22 69 80 05  	jsl	~~flpydsk_write_dor
  2669                        ;	//flpydsk_write_dor(FLPYDSK_DOR_MASK_RESET);
  2670                        ;}
  Sat Jul 10 2021  1:15                                                Page 52


  2671                        	.line	540
  2672                        L99:
  2673 05:8509: 2B           	pld
  2674 05:850A: 3B           	tsc
  2675 05:850B: 18           	clc
  2676 05:850C: 69 00 00     	adc	#L96
  2677 05:850F: 1B           	tcs
  2678 05:8510: 6B           	rtl
  2679                        	.endblock	540
  2680             00000000   L96	equ	0
  2681             00000001   L97	equ	1
  2682 05:8511:              	ends
  2683                        	efunc
  2684                        	.endfunc	540,1,0
  2685                        	.line	540
  2686                        	data
  2687                        L95:
  2688 00:0194: 66 6C 70 79  	db	$66,$6C,$70,$79,$64,$73,$6B,$5F,$65,$6E,
                    $61,$62,$6C,$65,$5F
       00:0198: 64 73 6B 5F 
       00:019C: 65 6E 61 62 
       00:01A0: 6C 65 5F 
  2689 00:01A3: 63 6F 6E 74  	db	$63,$6F,$6E,$74,$72,$6F,$6C,$6C,$65,$72,
                    $0D,$0A,$00
       00:01A7: 72 6F 6C 6C 
       00:01AB: 65 72 0D 0A 
       00:01AF: 00 
  2690 00:01B0:              	ends
  2691                        ;
  2692                        ;//! reset controller
  2693                        ;void flpydsk_reset(void)
  2694                        ;{
  2695                        	.line	543
  2696                        	.line	544
  2697                        	FLPY
  2698                        	xdef	~~flpydsk_reset
  2699                        	func
  2700                        	.function	544
  2701                        ~~flpydsk_reset:
  2702                        	longa	on
  2703                        	longi	on
  2704 05:8511: 3B           	tsc
  2705 05:8512: 38           	sec
  2706 05:8513: E9 0E 00     	sbc	#L101
  2707 05:8516: 1B           	tcs
  2708 05:8517: 0B           	phd
  2709 05:8518: 5B           	tcd
  2710                        	.block	544
  2711                        ;	int i;
  2712                        ;	uint32_t st0, cyl;
  2713                        ;
  2714                        ;	k_debug_string("flpydsk_reset\r\n");
  2715             00000000   i_1	set	0
  2716             00000002   st0_1	set	2
  2717             00000006   cyl_1	set	6
  2718                        	.sym	i,0,5,1,16
  2719                        	.sym	st0,2,18,1,32
  2720                        	.sym	cyl,6,18,1,32
  Sat Jul 10 2021  1:15                                                Page 53


  2721                        	.line	548
  2722 05:8519: F4 xx xx     	pea	#^L100
  2723 05:851C: F4 xx xx     	pea	#<L100
  2724 05:851F: 22 xx xx xx  	jsl	~~k_debug_string
  2725                        ;
  2726                        ;	//! reset the controller
  2727                        ;	flpydsk_disable_controller();
  2728                        	.line	551
  2729 05:8523: 22 CF 84 05  	jsl	~~flpydsk_disable_controller
  2730                        ;	flpydsk_enable_controller();
  2731                        	.line	552
  2732 05:8527: 22 F0 84 05  	jsl	~~flpydsk_enable_controller
  2733                        ;	flpydsk_wait_irq();
  2734                        	.line	553
  2735                        L10029:
  2736 05:852B: AD xx xx     	lda	|~~_FloppyDiskIRQ
  2737 05:852E: 29 FF 00     	and	#$ff
  2738 05:8531: F0 03        	beq	L104
  2739 05:8533: 82 03 00     	brl	L10030
  2740                        L104:
  2741                        	.line	553
  2742 05:8536: 82 F2 FF     	brl	L10029
  2743                        L10030:
  2744                        	.line	553
  2745 05:8539: E2 20        	sep	#$20
  2746                        	longa	off
  2747 05:853B: 9C xx xx     	stz	|~~_FloppyDiskIRQ
  2748 05:853E: C2 20        	rep	#$20
  2749                        	longa	on
  2750                        	.line	553
  2751                        ;
  2752                        ;	//! send CHECK_INT/SENSE INTERRUPT command to al
                    l drives
  2753                        ;	for (i = 0; i < 4; i++)
  2754                        	.line	556
  2755 05:8540: 64 05        	stz	<L102+i_1
  2756                        L10033:
  2757                        ;		flpydsk_check_int(&st0, &cyl);
  2758                        	.line	557
  2759 05:8542: F4 00 00     	pea	#0
  2760 05:8545: 18           	clc
  2761 05:8546: 7B           	tdc
  2762 05:8547: 69 0B 00     	adc	#<L102+cyl_1
  2763 05:854A: 48           	pha
  2764 05:854B: F4 00 00     	pea	#0
  2765 05:854E: 18           	clc
  2766 05:854F: 7B           	tdc
  2767 05:8550: 69 07 00     	adc	#<L102+st0_1
  2768 05:8553: 48           	pha
  2769 05:8554: 22 01 82 05  	jsl	~~flpydsk_check_int
  2770                        L10031:
  2771 05:8558: E6 05        	inc	<L102+i_1
  2772 05:855A: A5 05        	lda	<L102+i_1
  2773 05:855C: 30 06        	bmi	L105
  2774 05:855E: 3A           	dea
  2775 05:855F: 3A           	dea
  2776 05:8560: 3A           	dea
  2777 05:8561: 3A           	dea
  Sat Jul 10 2021  1:15                                                Page 54


  2778 05:8562: 10 03        	bpl	L106
  2779                        L105:
  2780 05:8564: 82 DB FF     	brl	L10033
  2781                        L106:
  2782                        L10032:
  2783                        ;
  2784                        ;	//! transfer speed 500kb/s
  2785                        ;	flpydsk_write_ccr(0);
  2786                        	.line	560
  2787 05:8567: F4 00 00     	pea	#<$0
  2788 05:856A: 22 C5 81 05  	jsl	~~flpydsk_write_ccr
  2789                        ;
  2790                        ;	//! pass mechanical drive info. steprate=3ms, un
                    load time=240ms, load time=16ms
  2791                        ;	flpydsk_drive_data(3, 16, 240, FALSE);
  2792                        	.line	563
  2793 05:856E: F4 00 00     	pea	#<$0
  2794 05:8571: F4 00 00     	pea	#^$f0
  2795 05:8574: F4 F0 00     	pea	#<$f0
  2796 05:8577: F4 00 00     	pea	#^$10
  2797 05:857A: F4 10 00     	pea	#<$10
  2798 05:857D: F4 00 00     	pea	#^$3
  2799 05:8580: F4 03 00     	pea	#<$3
  2800 05:8583: 22 5E 83 05  	jsl	~~flpydsk_drive_data
  2801                        ;
  2802                        ;	//! calibrate the disk
  2803                        ;	i = flpydsk_calibrate(_CurrentDrive);
  2804                        	.line	566
  2805 05:8587: AD xx xx     	lda	|~~_CurrentDrive
  2806 05:858A: 29 FF 00     	and	#$ff
  2807 05:858D: 85 01        	sta	<R0
  2808 05:858F: 64 03        	stz	<R0+2
  2809 05:8591: D4 03        	pei	<R0+2
  2810 05:8593: D4 01        	pei	<R0
  2811 05:8595: 22 15 84 05  	jsl	~~flpydsk_calibrate
  2812 05:8599: 85 05        	sta	<L102+i_1
  2813                        ;	k_debug_integer("flpydsk_calibrate:", i);
  2814                        	.line	567
  2815 05:859B: D4 05        	pei	<L102+i_1
  2816 05:859D: F4 xx xx     	pea	#^L100+16
  2817 05:85A0: F4 xx xx     	pea	#<L100+16
  2818 05:85A3: 22 xx xx xx  	jsl	~~k_debug_integer
  2819                        ;}
  2820                        	.line	568
  2821                        L107:
  2822 05:85A7: 2B           	pld
  2823 05:85A8: 3B           	tsc
  2824 05:85A9: 18           	clc
  2825 05:85AA: 69 0E 00     	adc	#L101
  2826 05:85AD: 1B           	tcs
  2827 05:85AE: 6B           	rtl
  2828                        	.endblock	568
  2829             0000000E   L101	equ	14
  2830             00000005   L102	equ	5
  2831 05:85AF:              	ends
  2832                        	efunc
  2833                        	.endfunc	568,5,14
  2834                        	.line	568
  Sat Jul 10 2021  1:15                                                Page 55


  2835                        	data
  2836                        L100:
  2837 00:01B0: 66 6C 70 79  	db	$66,$6C,$70,$79,$64,$73,$6B,$5F,$72,$65,
                    $73,$65,$74,$0D,$0A
       00:01B4: 64 73 6B 5F 
       00:01B8: 72 65 73 65 
       00:01BC: 74 0D 0A 
  2838 00:01BF: 00 66 6C 70  	db	$00,$66,$6C,$70,$79,$64,$73,$6B,$5F,$63,
                    $61,$6C,$69,$62,$72
       00:01C3: 79 64 73 6B 
       00:01C7: 5F 63 61 6C 
       00:01CB: 69 62 72 
  2839 00:01CE: 61 74 65 3A  	db	$61,$74,$65,$3A,$00
       00:01D2: 00 
  2840 00:01D3:              	ends
  2841                        ;
  2842                        ;//! read a sector
  2843                        ;void flpydsk_read_sector_imp(uint8_t head, uint8_
                    t track, uint8_t sector)
  2844                        ;{
  2845                        	.line	571
  2846                        	.line	572
  2847                        	FLPY
  2848                        	xdef	~~flpydsk_read_sector_imp
  2849                        	func
  2850                        	.function	572
  2851                        ~~flpydsk_read_sector_imp:
  2852                        	longa	on
  2853                        	longi	on
  2854 05:85AF: 3B           	tsc
  2855 05:85B0: 38           	sec
  2856 05:85B1: E9 12 00     	sbc	#L109
  2857 05:85B4: 1B           	tcs
  2858 05:85B5: 0B           	phd
  2859 05:85B6: 5B           	tcd
  2860             00000004   head_0	set	4
  2861             00000006   track_0	set	6
  2862             00000008   sector_0	set	8
  2863                        	.block	572
  2864                        ;	int j;
  2865                        ;	uint32_t st0, cyl;
  2866                        ;
  2867                        ;	k_debug_integer("flpydsk_read_sector_imp:", sect
                    or);
  2868             00000000   j_1	set	0
  2869             00000002   st0_1	set	2
  2870             00000006   cyl_1	set	6
  2871                        	.sym	j,0,5,1,16
  2872                        	.sym	st0,2,18,1,32
  2873                        	.sym	cyl,6,18,1,32
  2874                        	.sym	head,4,14,6,8
  2875                        	.sym	track,6,14,6,8
  2876                        	.sym	sector,8,14,6,8
  2877                        	.line	576
  2878 05:85B7: A5 1A        	lda	<L109+sector_0
  2879 05:85B9: 29 FF 00     	and	#$ff
  2880 05:85BC: 48           	pha
  2881 05:85BD: F4 xx xx     	pea	#^L108
  Sat Jul 10 2021  1:15                                                Page 56


  2882 05:85C0: F4 xx xx     	pea	#<L108
  2883 05:85C3: 22 xx xx xx  	jsl	~~k_debug_integer
  2884                        ;
  2885                        ;	//! set the DMA for read transfer
  2886                        ;	flpydsk_dma_read();
  2887                        	.line	579
  2888 05:85C7: 22 0F 80 05  	jsl	~~flpydsk_dma_read
  2889                        ;
  2890                        ;	//! read in a sector
  2891                        ;	flpydsk_send_command(
  2892                        	.line	582
  2893                        ;			FDC_CMD_READ_SECT | FDC_CMD_EXT_
                    MULTITRACK | FDC_CMD_EXT_SKIP
  2894                        ;					| FDC_CMD_EXT_DE
                    NSITY);
  2895 05:85CB: F4 E6 00     	pea	#<$e6
  2896 05:85CE: 22 97 80 05  	jsl	~~flpydsk_send_command
  2897                        ;	flpydsk_send_command(head << 2 | _CurrentDrive);
  2898                        	.line	585
  2899 05:85D2: A5 16        	lda	<L109+head_0
  2900 05:85D4: 29 FF 00     	and	#$ff
  2901 05:85D7: 85 05        	sta	<R1
  2902 05:85D9: A5 05        	lda	<R1
  2903 05:85DB: 0A           	asl	A
  2904 05:85DC: 0A           	asl	A
  2905 05:85DD: 85 01        	sta	<R0
  2906 05:85DF: AD xx xx     	lda	|~~_CurrentDrive
  2907 05:85E2: 29 FF 00     	and	#$ff
  2908 05:85E5: 85 05        	sta	<R1
  2909 05:85E7: A5 05        	lda	<R1
  2910 05:85E9: 05 01        	ora	<R0
  2911 05:85EB: 48           	pha
  2912 05:85EC: 22 97 80 05  	jsl	~~flpydsk_send_command
  2913                        ;	flpydsk_send_command(track);
  2914                        	.line	586
  2915 05:85F0: D4 18        	pei	<L109+track_0
  2916 05:85F2: 22 97 80 05  	jsl	~~flpydsk_send_command
  2917                        ;	flpydsk_send_command(head);
  2918                        	.line	587
  2919 05:85F6: D4 16        	pei	<L109+head_0
  2920 05:85F8: 22 97 80 05  	jsl	~~flpydsk_send_command
  2921                        ;	flpydsk_send_command(sector);
  2922                        	.line	588
  2923 05:85FC: D4 1A        	pei	<L109+sector_0
  2924 05:85FE: 22 97 80 05  	jsl	~~flpydsk_send_command
  2925                        ;	flpydsk_send_command(FLPYDSK_SECTOR_DTL_512);
  2926                        	.line	589
  2927 05:8602: F4 02 00     	pea	#<$2
  2928 05:8605: 22 97 80 05  	jsl	~~flpydsk_send_command
  2929                        ;	flpydsk_send_command(((sector + 1) >= FLPY_SECTO
                    RS_PER_TRACK) ? FLPY_SECTORS_PER_TRACK : sector + 1);
  2930                        	.line	590
  2931 05:8609: A5 1A        	lda	<L109+sector_0
  2932 05:860B: 29 FF 00     	and	#$ff
  2933 05:860E: 85 01        	sta	<R0
  2934 05:8610: A5 01        	lda	<R0
  2935 05:8612: 1A           	ina
  2936 05:8613: 85 05        	sta	<R1
  Sat Jul 10 2021  1:15                                                Page 57


  2937 05:8615: 38           	sec
  2938 05:8616: A5 05        	lda	<R1
  2939 05:8618: E9 12 00     	sbc	#<$12
  2940 05:861B: 70 03        	bvs	L113
  2941 05:861D: 49 00 80     	eor	#$8000
  2942                        L113:
  2943 05:8620: 30 03        	bmi	L114
  2944 05:8622: 82 09 00     	brl	L112
  2945                        L114:
  2946 05:8625: A9 00 00     	lda	#$0
  2947 05:8628: AA           	tax
  2948 05:8629: A9 12 00     	lda	#$12
  2949 05:862C: 80 1C        	bra	L115
  2950                        L112:
  2951 05:862E: A5 1A        	lda	<L109+sector_0
  2952 05:8630: 29 FF 00     	and	#$ff
  2953 05:8633: 85 01        	sta	<R0
  2954 05:8635: A5 01        	lda	<R0
  2955 05:8637: 1A           	ina
  2956 05:8638: 85 05        	sta	<R1
  2957 05:863A: A0 00 00     	ldy	#$0
  2958 05:863D: A5 05        	lda	<R1
  2959 05:863F: 10 01        	bpl	L116
  2960 05:8641: 88           	dey
  2961                        L116:
  2962 05:8642: 85 01        	sta	<R0
  2963 05:8644: 84 03        	sty	<R0+2
  2964 05:8646: A6 03        	ldx	<R0+2
  2965 05:8648: A5 01        	lda	<R0
  2966                        L115:
  2967 05:864A: 85 01        	sta	<R0
  2968 05:864C: 86 03        	stx	<R0+2
  2969 05:864E: D4 01        	pei	<R0
  2970 05:8650: 22 97 80 05  	jsl	~~flpydsk_send_command
  2971                        ;	flpydsk_send_command(FLPYDSK_GAP3_LENGTH_3_5);
  2972                        	.line	591
  2973 05:8654: F4 1B 00     	pea	#<$1b
  2974 05:8657: 22 97 80 05  	jsl	~~flpydsk_send_command
  2975                        ;	flpydsk_send_command(0xff);
  2976                        	.line	592
  2977 05:865B: F4 FF 00     	pea	#<$ff
  2978 05:865E: 22 97 80 05  	jsl	~~flpydsk_send_command
  2979                        ;
  2980                        ;	//! wait for irq
  2981                        ;	flpydsk_wait_irq();
  2982                        	.line	595
  2983                        L10034:
  2984 05:8662: AD xx xx     	lda	|~~_FloppyDiskIRQ
  2985 05:8665: 29 FF 00     	and	#$ff
  2986 05:8668: F0 03        	beq	L117
  2987 05:866A: 82 03 00     	brl	L10035
  2988                        L117:
  2989                        	.line	595
  2990 05:866D: 82 F2 FF     	brl	L10034
  2991                        L10035:
  2992                        	.line	595
  2993 05:8670: E2 20        	sep	#$20
  2994                        	longa	off
  Sat Jul 10 2021  1:15                                                Page 58


  2995 05:8672: 9C xx xx     	stz	|~~_FloppyDiskIRQ
  2996 05:8675: C2 20        	rep	#$20
  2997                        	longa	on
  2998                        	.line	595
  2999                        ;
  3000                        ;	//! read status info
  3001                        ;	for (j = 0; j < 7; j++)
  3002                        	.line	598
  3003 05:8677: 64 09        	stz	<L110+j_1
  3004                        L10038:
  3005                        ;		flpydsk_read_data();
  3006                        	.line	599
  3007 05:8679: 22 5F 81 05  	jsl	~~flpydsk_read_data
  3008                        L10036:
  3009 05:867D: E6 09        	inc	<L110+j_1
  3010 05:867F: 38           	sec
  3011 05:8680: A5 09        	lda	<L110+j_1
  3012 05:8682: E9 07 00     	sbc	#<$7
  3013 05:8685: 70 03        	bvs	L118
  3014 05:8687: 49 00 80     	eor	#$8000
  3015                        L118:
  3016 05:868A: 30 03        	bmi	L119
  3017 05:868C: 82 EA FF     	brl	L10038
  3018                        L119:
  3019                        L10037:
  3020                        ;
  3021                        ;	//! let FDC know we handled interrupt
  3022                        ;	flpydsk_check_int(&st0, &cyl);
  3023                        	.line	602
  3024 05:868F: F4 00 00     	pea	#0
  3025 05:8692: 18           	clc
  3026 05:8693: 7B           	tdc
  3027 05:8694: 69 0F 00     	adc	#<L110+cyl_1
  3028 05:8697: 48           	pha
  3029 05:8698: F4 00 00     	pea	#0
  3030 05:869B: 18           	clc
  3031 05:869C: 7B           	tdc
  3032 05:869D: 69 0B 00     	adc	#<L110+st0_1
  3033 05:86A0: 48           	pha
  3034 05:86A1: 22 01 82 05  	jsl	~~flpydsk_check_int
  3035                        ;}
  3036                        	.line	603
  3037                        L120:
  3038 05:86A5: A5 14        	lda	<L109+2
  3039 05:86A7: 85 1A        	sta	<L109+2+6
  3040 05:86A9: A5 13        	lda	<L109+1
  3041 05:86AB: 85 19        	sta	<L109+1+6
  3042 05:86AD: 2B           	pld
  3043 05:86AE: 3B           	tsc
  3044 05:86AF: 18           	clc
  3045 05:86B0: 69 18 00     	adc	#L109+6
  3046 05:86B3: 1B           	tcs
  3047 05:86B4: 6B           	rtl
  3048                        	.endblock	603
  3049             00000012   L109	equ	18
  3050             00000009   L110	equ	9
  3051 05:86B5:              	ends
  3052                        	efunc
  Sat Jul 10 2021  1:15                                                Page 59


  3053                        	.endfunc	603,9,18
  3054                        	.line	603
  3055                        	data
  3056                        L108:
  3057 00:01D3: 66 6C 70 79  	db	$66,$6C,$70,$79,$64,$73,$6B,$5F,$72,$65,
                    $61,$64,$5F,$73,$65
       00:01D7: 64 73 6B 5F 
       00:01DB: 72 65 61 64 
       00:01DF: 5F 73 65 
  3058 00:01E2: 63 74 6F 72  	db	$63,$74,$6F,$72,$5F,$69,$6D,$70,$3A,$00
       00:01E6: 5F 69 6D 70 
       00:01EA: 3A 00 
  3059 00:01EC:              	ends
  3060                        ;
  3061                        ;//! read a sector
  3062                        ;void flpydsk_read_sector_imp2(uint8_t head, uint8
                    _t track, uint8_t sector)
  3063                        ;{
  3064                        	.line	606
  3065                        	.line	607
  3066                        	FLPY
  3067                        	xdef	~~flpydsk_read_sector_imp2
  3068                        	func
  3069                        	.function	607
  3070                        ~~flpydsk_read_sector_imp2:
  3071                        	longa	on
  3072                        	longi	on
  3073 05:86B5: 3B           	tsc
  3074 05:86B6: 38           	sec
  3075 05:86B7: E9 13 00     	sbc	#L122
  3076 05:86BA: 1B           	tcs
  3077 05:86BB: 0B           	phd
  3078 05:86BC: 5B           	tcd
  3079             00000004   head_0	set	4
  3080             00000006   track_0	set	6
  3081             00000008   sector_0	set	8
  3082                        	.block	607
  3083                        ;	int j;
  3084                        ;	UCHAR data;
  3085                        ;	uint32_t st0, cyl;
  3086                        ;
  3087                        ;	k_debug_integer("flpydsk_read_sector_imp2:", sec
                    tor);
  3088             00000000   j_1	set	0
  3089             00000002   data_1	set	2
  3090             00000003   st0_1	set	3
  3091             00000007   cyl_1	set	7
  3092                        	.sym	j,0,5,1,16
  3093                        	.sym	data,2,14,1,8
  3094                        	.sym	st0,3,18,1,32
  3095                        	.sym	cyl,7,18,1,32
  3096                        	.sym	head,4,14,6,8
  3097                        	.sym	track,6,14,6,8
  3098                        	.sym	sector,8,14,6,8
  3099                        	.line	612
  3100 05:86BD: A5 1B        	lda	<L122+sector_0
  3101 05:86BF: 29 FF 00     	and	#$ff
  3102 05:86C2: 48           	pha
  Sat Jul 10 2021  1:15                                                Page 60


  3103 05:86C3: F4 xx xx     	pea	#^L121
  3104 05:86C6: F4 xx xx     	pea	#<L121
  3105 05:86C9: 22 xx xx xx  	jsl	~~k_debug_integer
  3106                        ;
  3107                        ;	//! set the DMA for read transfer
  3108                        ;	flpydsk_dma_read();
  3109                        	.line	615
  3110 05:86CD: 22 0F 80 05  	jsl	~~flpydsk_dma_read
  3111                        ;
  3112                        ;	//! read in a sector
  3113                        ;	flpydsk_send_command(
  3114                        	.line	618
  3115                        ;			FDC_CMD_READ_SECT | FDC_CMD_EXT_
                    MULTITRACK | FDC_CMD_EXT_SKIP
  3116                        ;					| FDC_CMD_EXT_DE
                    NSITY);
  3117 05:86D1: F4 E6 00     	pea	#<$e6
  3118 05:86D4: 22 97 80 05  	jsl	~~flpydsk_send_command
  3119                        ;	flpydsk_send_command(head << 2 | _CurrentDrive);
  3120                        	.line	621
  3121 05:86D8: A5 17        	lda	<L122+head_0
  3122 05:86DA: 29 FF 00     	and	#$ff
  3123 05:86DD: 85 05        	sta	<R1
  3124 05:86DF: A5 05        	lda	<R1
  3125 05:86E1: 0A           	asl	A
  3126 05:86E2: 0A           	asl	A
  3127 05:86E3: 85 01        	sta	<R0
  3128 05:86E5: AD xx xx     	lda	|~~_CurrentDrive
  3129 05:86E8: 29 FF 00     	and	#$ff
  3130 05:86EB: 85 05        	sta	<R1
  3131 05:86ED: A5 05        	lda	<R1
  3132 05:86EF: 05 01        	ora	<R0
  3133 05:86F1: 48           	pha
  3134 05:86F2: 22 97 80 05  	jsl	~~flpydsk_send_command
  3135                        ;	flpydsk_send_command(track);
  3136                        	.line	622
  3137 05:86F6: D4 19        	pei	<L122+track_0
  3138 05:86F8: 22 97 80 05  	jsl	~~flpydsk_send_command
  3139                        ;	flpydsk_send_command(head);
  3140                        	.line	623
  3141 05:86FC: D4 17        	pei	<L122+head_0
  3142 05:86FE: 22 97 80 05  	jsl	~~flpydsk_send_command
  3143                        ;	flpydsk_send_command(sector);
  3144                        	.line	624
  3145 05:8702: D4 1B        	pei	<L122+sector_0
  3146 05:8704: 22 97 80 05  	jsl	~~flpydsk_send_command
  3147                        ;	flpydsk_send_command(FLPYDSK_SECTOR_DTL_512);
  3148                        	.line	625
  3149 05:8708: F4 02 00     	pea	#<$2
  3150 05:870B: 22 97 80 05  	jsl	~~flpydsk_send_command
  3151                        ;	flpydsk_send_command(
  3152                        	.line	626
  3153                        ;			((sector + 1) >= FLPY_SECTORS_PE
                    R_TRACK) ?
  3154                        ;					FLPY_SECTORS_PER
                    _TRACK : sector + 1);
  3155 05:870F: A5 1B        	lda	<L122+sector_0
  3156 05:8711: 29 FF 00     	and	#$ff
  Sat Jul 10 2021  1:15                                                Page 61


  3157 05:8714: 85 01        	sta	<R0
  3158 05:8716: A5 01        	lda	<R0
  3159 05:8718: 1A           	ina
  3160 05:8719: 85 05        	sta	<R1
  3161 05:871B: 38           	sec
  3162 05:871C: A5 05        	lda	<R1
  3163 05:871E: E9 12 00     	sbc	#<$12
  3164 05:8721: 70 03        	bvs	L126
  3165 05:8723: 49 00 80     	eor	#$8000
  3166                        L126:
  3167 05:8726: 30 03        	bmi	L127
  3168 05:8728: 82 09 00     	brl	L125
  3169                        L127:
  3170 05:872B: A9 00 00     	lda	#$0
  3171 05:872E: AA           	tax
  3172 05:872F: A9 12 00     	lda	#$12
  3173 05:8732: 80 1C        	bra	L128
  3174                        L125:
  3175 05:8734: A5 1B        	lda	<L122+sector_0
  3176 05:8736: 29 FF 00     	and	#$ff
  3177 05:8739: 85 01        	sta	<R0
  3178 05:873B: A5 01        	lda	<R0
  3179 05:873D: 1A           	ina
  3180 05:873E: 85 05        	sta	<R1
  3181 05:8740: A0 00 00     	ldy	#$0
  3182 05:8743: A5 05        	lda	<R1
  3183 05:8745: 10 01        	bpl	L129
  3184 05:8747: 88           	dey
  3185                        L129:
  3186 05:8748: 85 01        	sta	<R0
  3187 05:874A: 84 03        	sty	<R0+2
  3188 05:874C: A6 03        	ldx	<R0+2
  3189 05:874E: A5 01        	lda	<R0
  3190                        L128:
  3191 05:8750: 85 01        	sta	<R0
  3192 05:8752: 86 03        	stx	<R0+2
  3193 05:8754: D4 01        	pei	<R0
  3194 05:8756: 22 97 80 05  	jsl	~~flpydsk_send_command
  3195                        ;	flpydsk_send_command(FLPYDSK_GAP3_LENGTH_3_5);
  3196                        	.line	629
  3197 05:875A: F4 1B 00     	pea	#<$1b
  3198 05:875D: 22 97 80 05  	jsl	~~flpydsk_send_command
  3199                        ;	flpydsk_send_command(0xff);
  3200                        	.line	630
  3201 05:8761: F4 FF 00     	pea	#<$ff
  3202 05:8764: 22 97 80 05  	jsl	~~flpydsk_send_command
  3203                        ;
  3204                        ;	//! wait for irq
  3205                        ;	flpydsk_wait_irq();
  3206                        	.line	633
  3207                        L10039:
  3208 05:8768: AD xx xx     	lda	|~~_FloppyDiskIRQ
  3209 05:876B: 29 FF 00     	and	#$ff
  3210 05:876E: F0 03        	beq	L130
  3211 05:8770: 82 03 00     	brl	L10040
  3212                        L130:
  3213                        	.line	633
  3214 05:8773: 82 F2 FF     	brl	L10039
  Sat Jul 10 2021  1:15                                                Page 62


  3215                        L10040:
  3216                        	.line	633
  3217 05:8776: E2 20        	sep	#$20
  3218                        	longa	off
  3219 05:8778: 9C xx xx     	stz	|~~_FloppyDiskIRQ
  3220 05:877B: C2 20        	rep	#$20
  3221                        	longa	on
  3222                        	.line	633
  3223                        ;
  3224                        ;	//! read status info
  3225                        ;	for (j = 0; j < 7; j++)
  3226                        	.line	636
  3227 05:877D: 64 09        	stz	<L123+j_1
  3228                        L10043:
  3229                        ;		flpydsk_read_data();
  3230                        	.line	637
  3231 05:877F: 22 5F 81 05  	jsl	~~flpydsk_read_data
  3232                        L10041:
  3233 05:8783: E6 09        	inc	<L123+j_1
  3234 05:8785: 38           	sec
  3235 05:8786: A5 09        	lda	<L123+j_1
  3236 05:8788: E9 07 00     	sbc	#<$7
  3237 05:878B: 70 03        	bvs	L131
  3238 05:878D: 49 00 80     	eor	#$8000
  3239                        L131:
  3240 05:8790: 30 03        	bmi	L132
  3241 05:8792: 82 EA FF     	brl	L10043
  3242                        L132:
  3243                        L10042:
  3244                        ;
  3245                        ;	/*
  3246                        ;	while (flpydsk_read_byte(&data))
  3247                        ;	{
  3248                        ;		k_debug_hex("flpydsk_read_sector_imp2:da
                    ta:", data);
  3249                        ;	}
  3250                        ;	*/
  3251                        ;	//! let FDC know we handled interrupt
  3252                        ;	flpydsk_check_int(&st0, &cyl);
  3253                        	.line	646
  3254 05:8795: F4 00 00     	pea	#0
  3255 05:8798: 18           	clc
  3256 05:8799: 7B           	tdc
  3257 05:879A: 69 10 00     	adc	#<L123+cyl_1
  3258 05:879D: 48           	pha
  3259 05:879E: F4 00 00     	pea	#0
  3260 05:87A1: 18           	clc
  3261 05:87A2: 7B           	tdc
  3262 05:87A3: 69 0C 00     	adc	#<L123+st0_1
  3263 05:87A6: 48           	pha
  3264 05:87A7: 22 01 82 05  	jsl	~~flpydsk_check_int
  3265                        ;}
  3266                        	.line	647
  3267                        L133:
  3268 05:87AB: A5 15        	lda	<L122+2
  3269 05:87AD: 85 1B        	sta	<L122+2+6
  3270 05:87AF: A5 14        	lda	<L122+1
  3271 05:87B1: 85 1A        	sta	<L122+1+6
  Sat Jul 10 2021  1:15                                                Page 63


  3272 05:87B3: 2B           	pld
  3273 05:87B4: 3B           	tsc
  3274 05:87B5: 18           	clc
  3275 05:87B6: 69 19 00     	adc	#L122+6
  3276 05:87B9: 1B           	tcs
  3277 05:87BA: 6B           	rtl
  3278                        	.endblock	647
  3279             00000013   L122	equ	19
  3280             00000009   L123	equ	9
  3281 05:87BB:              	ends
  3282                        	efunc
  3283                        	.endfunc	647,9,19
  3284                        	.line	647
  3285                        	data
  3286                        L121:
  3287 00:01EC: 66 6C 70 79  	db	$66,$6C,$70,$79,$64,$73,$6B,$5F,$72,$65,
                    $61,$64,$5F,$73,$65
       00:01F0: 64 73 6B 5F 
       00:01F4: 72 65 61 64 
       00:01F8: 5F 73 65 
  3288 00:01FB: 63 74 6F 72  	db	$63,$74,$6F,$72,$5F,$69,$6D,$70,$32,$3A,
                    $00
       00:01FF: 5F 69 6D 70 
       00:0203: 32 3A 00 
  3289 00:0206:              	ends
  3290                        ;
  3291                        ;//! seek to given track/cylinder
  3292                        ;int flpydsk_seek(uint32_t cyl, uint32_t head)
  3293                        ;{
  3294                        	.line	650
  3295                        	.line	651
  3296                        	FLPY
  3297                        	xdef	~~flpydsk_seek
  3298                        	func
  3299                        	.function	651
  3300                        ~~flpydsk_seek:
  3301                        	longa	on
  3302                        	longi	on
  3303 05:87BB: 3B           	tsc
  3304 05:87BC: 38           	sec
  3305 05:87BD: E9 16 00     	sbc	#L135
  3306 05:87C0: 1B           	tcs
  3307 05:87C1: 0B           	phd
  3308 05:87C2: 5B           	tcd
  3309             00000004   cyl_0	set	4
  3310             00000008   head_0	set	8
  3311                        	.block	651
  3312                        ;	int i;
  3313                        ;	uint32_t st0, cyl0;
  3314                        ;
  3315                        ;	k_debug_long("flpydsk_seek:cyl:", cyl);
  3316             00000000   i_1	set	0
  3317             00000002   st0_1	set	2
  3318             00000006   cyl0_1	set	6
  3319                        	.sym	i,0,5,1,16
  3320                        	.sym	st0,2,18,1,32
  3321                        	.sym	cyl0,6,18,1,32
  3322                        	.sym	cyl,4,18,6,32
  Sat Jul 10 2021  1:15                                                Page 64


  3323                        	.sym	head,8,18,6,32
  3324                        	.line	655
  3325 05:87C3: D4 1C        	pei	<L135+cyl_0+2
  3326 05:87C5: D4 1A        	pei	<L135+cyl_0
  3327 05:87C7: F4 xx xx     	pea	#^L134
  3328 05:87CA: F4 xx xx     	pea	#<L134
  3329 05:87CD: 22 xx xx xx  	jsl	~~k_debug_long
  3330                        ;	k_debug_long("flpydsk_seek:head:", head);
  3331                        	.line	656
  3332 05:87D1: D4 20        	pei	<L135+head_0+2
  3333 05:87D3: D4 1E        	pei	<L135+head_0
  3334 05:87D5: F4 xx xx     	pea	#^L134+18
  3335 05:87D8: F4 xx xx     	pea	#<L134+18
  3336 05:87DB: 22 xx xx xx  	jsl	~~k_debug_long
  3337                        ;
  3338                        ;	if (_CurrentDrive >= 4)
  3339                        	.line	658
  3340                        ;		return -1;
  3341 05:87DF: E2 20        	sep	#$20
  3342                        	longa	off
  3343 05:87E1: AD xx xx     	lda	|~~_CurrentDrive
  3344 05:87E4: C9 04        	cmp	#<$4
  3345 05:87E6: C2 20        	rep	#$20
  3346                        	longa	on
  3347 05:87E8: B0 03        	bcs	L138
  3348 05:87EA: 82 15 00     	brl	L10044
  3349                        L138:
  3350                        	.line	659
  3351 05:87ED: A9 FF FF     	lda	#$ffff
  3352                        L139:
  3353 05:87F0: A8           	tay
  3354 05:87F1: A5 18        	lda	<L135+2
  3355 05:87F3: 85 20        	sta	<L135+2+8
  3356 05:87F5: A5 17        	lda	<L135+1
  3357 05:87F7: 85 1F        	sta	<L135+1+8
  3358 05:87F9: 2B           	pld
  3359 05:87FA: 3B           	tsc
  3360 05:87FB: 18           	clc
  3361 05:87FC: 69 1E 00     	adc	#L135+8
  3362 05:87FF: 1B           	tcs
  3363 05:8800: 98           	tya
  3364 05:8801: 6B           	rtl
  3365                        ;
  3366                        ;	for (i = 0; i < 10; i++)
  3367                        L10044:
  3368                        	.line	661
  3369 05:8802: 64 0D        	stz	<L136+i_1
  3370                        L10047:
  3371                        ;	{
  3372                        	.line	662
  3373                        ;
  3374                        ;		//! send the command
  3375                        ;		flpydsk_send_command(FDC_CMD_SEEK);
  3376                        	.line	665
  3377 05:8804: F4 0F 00     	pea	#<$f
  3378 05:8807: 22 97 80 05  	jsl	~~flpydsk_send_command
  3379                        ;		flpydsk_send_command((head) << 2 | _Curr
                    entDrive);
  Sat Jul 10 2021  1:15                                                Page 65


  3380                        	.line	666
  3381 05:880B: A5 1E        	lda	<L135+head_0
  3382 05:880D: 85 01        	sta	<R0
  3383 05:880F: A5 20        	lda	<L135+head_0+2
  3384 05:8811: 85 03        	sta	<R0+2
  3385 05:8813: 06 01        	asl	<R0
  3386 05:8815: 26 03        	rol	<R0+2
  3387 05:8817: 06 01        	asl	<R0
  3388 05:8819: 26 03        	rol	<R0+2
  3389 05:881B: AD xx xx     	lda	|~~_CurrentDrive
  3390 05:881E: 29 FF 00     	and	#$ff
  3391 05:8821: 85 05        	sta	<R1
  3392 05:8823: 64 07        	stz	<R1+2
  3393 05:8825: A5 05        	lda	<R1
  3394 05:8827: 05 01        	ora	<R0
  3395 05:8829: 85 09        	sta	<R2
  3396 05:882B: A5 07        	lda	<R1+2
  3397 05:882D: 05 03        	ora	<R0+2
  3398 05:882F: 85 0B        	sta	<R2+2
  3399 05:8831: D4 09        	pei	<R2
  3400 05:8833: 22 97 80 05  	jsl	~~flpydsk_send_command
  3401                        ;		flpydsk_send_command(cyl);
  3402                        	.line	667
  3403 05:8837: D4 1A        	pei	<L135+cyl_0
  3404 05:8839: 22 97 80 05  	jsl	~~flpydsk_send_command
  3405                        ;
  3406                        ;		//! wait for the results phase IRQ
  3407                        ;		flpydsk_wait_irq();
  3408                        	.line	670
  3409                        L10048:
  3410 05:883D: AD xx xx     	lda	|~~_FloppyDiskIRQ
  3411 05:8840: 29 FF 00     	and	#$ff
  3412 05:8843: F0 03        	beq	L140
  3413 05:8845: 82 03 00     	brl	L10049
  3414                        L140:
  3415                        	.line	670
  3416 05:8848: 82 F2 FF     	brl	L10048
  3417                        L10049:
  3418                        	.line	670
  3419 05:884B: E2 20        	sep	#$20
  3420                        	longa	off
  3421 05:884D: 9C xx xx     	stz	|~~_FloppyDiskIRQ
  3422 05:8850: C2 20        	rep	#$20
  3423                        	longa	on
  3424                        	.line	670
  3425                        ;		flpydsk_check_int(&st0, &cyl0);
  3426                        	.line	671
  3427 05:8852: F4 00 00     	pea	#0
  3428 05:8855: 18           	clc
  3429 05:8856: 7B           	tdc
  3430 05:8857: 69 13 00     	adc	#<L136+cyl0_1
  3431 05:885A: 48           	pha
  3432 05:885B: F4 00 00     	pea	#0
  3433 05:885E: 18           	clc
  3434 05:885F: 7B           	tdc
  3435 05:8860: 69 0F 00     	adc	#<L136+st0_1
  3436 05:8863: 48           	pha
  3437 05:8864: 22 01 82 05  	jsl	~~flpydsk_check_int
  Sat Jul 10 2021  1:15                                                Page 66


  3438                        ;
  3439                        ;		//! found the cylinder?
  3440                        ;		if (cyl0 == cyl)
  3441                        	.line	674
  3442                        ;			return 0;
  3443 05:8868: A5 13        	lda	<L136+cyl0_1
  3444 05:886A: C5 1A        	cmp	<L135+cyl_0
  3445 05:886C: D0 04        	bne	L141
  3446 05:886E: A5 15        	lda	<L136+cyl0_1+2
  3447 05:8870: C5 1C        	cmp	<L135+cyl_0+2
  3448                        L141:
  3449 05:8872: F0 03        	beq	L142
  3450 05:8874: 82 06 00     	brl	L10050
  3451                        L142:
  3452                        	.line	675
  3453 05:8877: A9 00 00     	lda	#$0
  3454 05:887A: 82 73 FF     	brl	L139
  3455                        ;	}
  3456                        L10050:
  3457                        	.line	676
  3458                        L10045:
  3459 05:887D: E6 0D        	inc	<L136+i_1
  3460 05:887F: 38           	sec
  3461 05:8880: A5 0D        	lda	<L136+i_1
  3462 05:8882: E9 0A 00     	sbc	#<$a
  3463 05:8885: 70 03        	bvs	L143
  3464 05:8887: 49 00 80     	eor	#$8000
  3465                        L143:
  3466 05:888A: 30 03        	bmi	L144
  3467 05:888C: 82 75 FF     	brl	L10047
  3468                        L144:
  3469                        L10046:
  3470                        ;
  3471                        ;	return -1;
  3472                        	.line	678
  3473 05:888F: A9 FF FF     	lda	#$ffff
  3474 05:8892: 82 5B FF     	brl	L139
  3475                        ;}
  3476                        	.line	679
  3477                        	.endblock	679
  3478             00000016   L135	equ	22
  3479             0000000D   L136	equ	13
  3480 05:8895:              	ends
  3481                        	efunc
  3482                        	.endfunc	679,13,22
  3483                        	.line	679
  3484                        	data
  3485                        L134:
  3486 00:0206: 66 6C 70 79  	db	$66,$6C,$70,$79,$64,$73,$6B,$5F,$73,$65,
                    $65,$6B,$3A,$63,$79
       00:020A: 64 73 6B 5F 
       00:020E: 73 65 65 6B 
       00:0212: 3A 63 79 
  3487 00:0215: 6C 3A 00 66  	db	$6C,$3A,$00,$66,$6C,$70,$79,$64,$73,$6B,
                    $5F,$73,$65,$65,$6B
       00:0219: 6C 70 79 64 
       00:021D: 73 6B 5F 73 
       00:0221: 65 65 6B 
  Sat Jul 10 2021  1:15                                                Page 67


  3488 00:0224: 3A 68 65 61  	db	$3A,$68,$65,$61,$64,$3A,$00
       00:0228: 64 3A 00 
  3489 00:022B:              	ends
  3490                        ;
  3491                        ;//===============================================
                    =============================
  3492                        ;//    INTERFACE FUNCTIONS
  3493                        ;//===============================================
                    =============================
  3494                        ;
  3495                        ;//! convert LBA to CHS
  3496                        ;void flpydsk_lba_to_chs(int lba, int *head, int *
                    track, int *sector)
  3497                        ;{
  3498                        	.line	686
  3499                        	.line	687
  3500                        	FLPY
  3501                        	xdef	~~flpydsk_lba_to_chs
  3502                        	func
  3503                        	.function	687
  3504                        ~~flpydsk_lba_to_chs:
  3505                        	longa	on
  3506                        	longi	on
  3507 05:8895: 3B           	tsc
  3508 05:8896: 38           	sec
  3509 05:8897: E9 04 00     	sbc	#L146
  3510 05:889A: 1B           	tcs
  3511 05:889B: 0B           	phd
  3512 05:889C: 5B           	tcd
  3513             00000004   lba_0	set	4
  3514             00000006   head_0	set	6
  3515             0000000A   track_0	set	10
  3516             0000000E   sector_0	set	14
  3517                        	.block	687
  3518                        ;
  3519                        ;	*head = (lba % (FLPY_SECTORS_PER_TRACK * 2)) / (
                    FLPY_SECTORS_PER_TRACK);
  3520                        	.sym	lba,4,5,6,16
  3521                        	.sym	head,6,133,6,32
  3522                        	.sym	track,10,133,6,32
  3523                        	.sym	sector,14,133,6,32
  3524                        	.line	689
  3525 05:889D: A0 00 00     	ldy	#$0
  3526 05:88A0: A5 08        	lda	<L146+lba_0
  3527 05:88A2: 10 01        	bpl	L149
  3528 05:88A4: 88           	dey
  3529                        L149:
  3530 05:88A5: 85 01        	sta	<R0
  3531 05:88A7: 84 03        	sty	<R0+2
  3532 05:88A9: F4 00 00     	pea	#^$24
  3533 05:88AC: F4 24 00     	pea	#<$24
  3534 05:88AF: D4 03        	pei	<R0+2
  3535 05:88B1: D4 01        	pei	<R0
  3536                        	xref	~~~lmod
  3537 05:88B3: 22 xx xx xx  	jsl	~~~lmod
  3538 05:88B7: 85 01        	sta	<R0
  3539 05:88B9: 86 03        	stx	<R0+2
  3540 05:88BB: F4 00 00     	pea	#^$12
  Sat Jul 10 2021  1:15                                                Page 68


  3541 05:88BE: F4 12 00     	pea	#<$12
  3542 05:88C1: D4 03        	pei	<R0+2
  3543 05:88C3: D4 01        	pei	<R0
  3544                        	xref	~~~ldiv
  3545 05:88C5: 22 xx xx xx  	jsl	~~~ldiv
  3546 05:88C9: 85 01        	sta	<R0
  3547 05:88CB: 86 03        	stx	<R0+2
  3548 05:88CD: A5 01        	lda	<R0
  3549 05:88CF: 87 0A        	sta	[<L146+head_0]
  3550                        ;	*track = lba / (FLPY_SECTORS_PER_TRACK * 2);
  3551                        	.line	690
  3552 05:88D1: A0 00 00     	ldy	#$0
  3553 05:88D4: A5 08        	lda	<L146+lba_0
  3554 05:88D6: 10 01        	bpl	L150
  3555 05:88D8: 88           	dey
  3556                        L150:
  3557 05:88D9: 85 01        	sta	<R0
  3558 05:88DB: 84 03        	sty	<R0+2
  3559 05:88DD: F4 00 00     	pea	#^$24
  3560 05:88E0: F4 24 00     	pea	#<$24
  3561 05:88E3: D4 03        	pei	<R0+2
  3562 05:88E5: D4 01        	pei	<R0
  3563                        	xref	~~~ldiv
  3564 05:88E7: 22 xx xx xx  	jsl	~~~ldiv
  3565 05:88EB: 85 01        	sta	<R0
  3566 05:88ED: 86 03        	stx	<R0+2
  3567 05:88EF: A5 01        	lda	<R0
  3568 05:88F1: 87 0E        	sta	[<L146+track_0]
  3569                        ;	*sector = lba % FLPY_SECTORS_PER_TRACK + 1;
  3570                        	.line	691
  3571 05:88F3: A5 08        	lda	<L146+lba_0
  3572 05:88F5: A2 12 00     	ldx	#<$12
  3573                        	xref	~~~mod
  3574 05:88F8: 22 xx xx xx  	jsl	~~~mod
  3575 05:88FC: 85 01        	sta	<R0
  3576 05:88FE: A5 01        	lda	<R0
  3577 05:8900: 1A           	ina
  3578 05:8901: 87 12        	sta	[<L146+sector_0]
  3579                        ;}
  3580                        	.line	692
  3581                        L151:
  3582 05:8903: A5 06        	lda	<L146+2
  3583 05:8905: 85 14        	sta	<L146+2+14
  3584 05:8907: A5 05        	lda	<L146+1
  3585 05:8909: 85 13        	sta	<L146+1+14
  3586 05:890B: 2B           	pld
  3587 05:890C: 3B           	tsc
  3588 05:890D: 18           	clc
  3589 05:890E: 69 12 00     	adc	#L146+14
  3590 05:8911: 1B           	tcs
  3591 05:8912: 6B           	rtl
  3592                        	.endblock	692
  3593             00000004   L146	equ	4
  3594             00000005   L147	equ	5
  3595 05:8913:              	ends
  3596                        	efunc
  3597                        	.endfunc	692,5,4
  3598                        	.line	692
  Sat Jul 10 2021  1:15                                                Page 69


  3599                        ;
  3600                        ;//! install floppy driver
  3601                        ;void flpydsk_install(int irq)
  3602                        ;{
  3603                        	.line	695
  3604                        	.line	696
  3605                        	FLPY
  3606                        	xdef	~~flpydsk_install
  3607                        	func
  3608                        	.function	696
  3609                        ~~flpydsk_install:
  3610                        	longa	on
  3611                        	longi	on
  3612 05:8913: 3B           	tsc
  3613 05:8914: 38           	sec
  3614 05:8915: E9 00 00     	sbc	#L152
  3615 05:8918: 1B           	tcs
  3616 05:8919: 0B           	phd
  3617 05:891A: 5B           	tcd
  3618             00000004   irq_0	set	4
  3619                        	.block	696
  3620                        ;
  3621                        ;	//! install irq handler
  3622                        ;	//setvect(irq, i816_flpy_irq);
  3623                        ;
  3624                        ;	//! initialize the DMA for FDC
  3625                        ;	flpydsk_initialize_dma();
  3626                        	.sym	irq,4,5,6,16
  3627                        	.line	702
  3628 05:891B: 22 FF 7F 05  	jsl	~~flpydsk_initialize_dma
  3629                        ;
  3630                        ;	//! reset the fdc
  3631                        ;	flpydsk_reset();
  3632                        	.line	705
  3633 05:891F: 22 11 85 05  	jsl	~~flpydsk_reset
  3634                        ;
  3635                        ;	//flpydsk_control_motor(TRUE);
  3636                        ;
  3637                        ;	//! set drive information
  3638                        ;	flpydsk_drive_data(13, 1, 0xf, TRUE);
  3639                        	.line	710
  3640 05:8923: F4 01 00     	pea	#<$1
  3641 05:8926: F4 00 00     	pea	#^$f
  3642 05:8929: F4 0F 00     	pea	#<$f
  3643 05:892C: F4 00 00     	pea	#^$1
  3644 05:892F: F4 01 00     	pea	#<$1
  3645 05:8932: F4 00 00     	pea	#^$d
  3646 05:8935: F4 0D 00     	pea	#<$d
  3647 05:8938: 22 5E 83 05  	jsl	~~flpydsk_drive_data
  3648                        ;}
  3649                        	.line	711
  3650                        L155:
  3651 05:893C: A5 02        	lda	<L152+2
  3652 05:893E: 85 04        	sta	<L152+2+2
  3653 05:8940: A5 01        	lda	<L152+1
  3654 05:8942: 85 03        	sta	<L152+1+2
  3655 05:8944: 2B           	pld
  3656 05:8945: 3B           	tsc
  Sat Jul 10 2021  1:15                                                Page 70


  3657 05:8946: 18           	clc
  3658 05:8947: 69 02 00     	adc	#L152+2
  3659 05:894A: 1B           	tcs
  3660 05:894B: 6B           	rtl
  3661                        	.endblock	711
  3662             00000000   L152	equ	0
  3663             00000001   L153	equ	1
  3664 05:894C:              	ends
  3665                        	efunc
  3666                        	.endfunc	711,1,0
  3667                        	.line	711
  3668                        ;
  3669                        ;//! set current working drive
  3670                        ;void flpydsk_set_working_drive(uint8_t drive)
  3671                        ;{
  3672                        	.line	714
  3673                        	.line	715
  3674                        	FLPY
  3675                        	xdef	~~flpydsk_set_working_drive
  3676                        	func
  3677                        	.function	715
  3678                        ~~flpydsk_set_working_drive:
  3679                        	longa	on
  3680                        	longi	on
  3681 05:894C: 3B           	tsc
  3682 05:894D: 38           	sec
  3683 05:894E: E9 00 00     	sbc	#L156
  3684 05:8951: 1B           	tcs
  3685 05:8952: 0B           	phd
  3686 05:8953: 5B           	tcd
  3687             00000004   drive_0	set	4
  3688                        	.block	715
  3689                        ;	if (drive < 4)
  3690                        	.sym	drive,4,14,6,8
  3691                        	.line	716
  3692                        ;		_CurrentDrive = drive;
  3693 05:8954: E2 20        	sep	#$20
  3694                        	longa	off
  3695 05:8956: A5 04        	lda	<L156+drive_0
  3696 05:8958: C9 04        	cmp	#<$4
  3697 05:895A: C2 20        	rep	#$20
  3698                        	longa	on
  3699 05:895C: 90 03        	bcc	L159
  3700 05:895E: 82 09 00     	brl	L10051
  3701                        L159:
  3702                        	.line	717
  3703 05:8961: E2 20        	sep	#$20
  3704                        	longa	off
  3705 05:8963: A5 04        	lda	<L156+drive_0
  3706 05:8965: 8D xx xx     	sta	|~~_CurrentDrive
  3707 05:8968: C2 20        	rep	#$20
  3708                        	longa	on
  3709                        ;}
  3710                        L10051:
  3711                        	.line	718
  3712                        L160:
  3713 05:896A: A5 02        	lda	<L156+2
  3714 05:896C: 85 04        	sta	<L156+2+2
  Sat Jul 10 2021  1:15                                                Page 71


  3715 05:896E: A5 01        	lda	<L156+1
  3716 05:8970: 85 03        	sta	<L156+1+2
  3717 05:8972: 2B           	pld
  3718 05:8973: 3B           	tsc
  3719 05:8974: 18           	clc
  3720 05:8975: 69 02 00     	adc	#L156+2
  3721 05:8978: 1B           	tcs
  3722 05:8979: 6B           	rtl
  3723                        	.endblock	718
  3724             00000000   L156	equ	0
  3725             00000001   L157	equ	1
  3726 05:897A:              	ends
  3727                        	efunc
  3728                        	.endfunc	718,1,0
  3729                        	.line	718
  3730                        ;
  3731                        ;//! get current working drive
  3732                        ;uint8_t flpydsk_get_working_drive()
  3733                        ;{
  3734                        	.line	721
  3735                        	.line	722
  3736                        	FLPY
  3737                        	xdef	~~flpydsk_get_working_drive
  3738                        	func
  3739                        	.function	722
  3740                        ~~flpydsk_get_working_drive:
  3741                        	longa	on
  3742                        	longi	on
  3743 05:897A: 3B           	tsc
  3744 05:897B: 38           	sec
  3745 05:897C: E9 00 00     	sbc	#L161
  3746 05:897F: 1B           	tcs
  3747 05:8980: 0B           	phd
  3748 05:8981: 5B           	tcd
  3749                        	.block	722
  3750                        ;
  3751                        ;	return _CurrentDrive;
  3752                        	.line	724
  3753 05:8982: AD xx xx     	lda	|~~_CurrentDrive
  3754 05:8985: 29 FF 00     	and	#$ff
  3755                        L164:
  3756 05:8988: A8           	tay
  3757 05:8989: 2B           	pld
  3758 05:898A: 3B           	tsc
  3759 05:898B: 18           	clc
  3760 05:898C: 69 00 00     	adc	#L161
  3761 05:898F: 1B           	tcs
  3762 05:8990: 98           	tya
  3763 05:8991: 6B           	rtl
  3764                        ;}
  3765                        	.line	725
  3766                        	.endblock	725
  3767             00000000   L161	equ	0
  3768             00000001   L162	equ	1
  3769 05:8992:              	ends
  3770                        	efunc
  3771                        	.endfunc	725,1,0
  3772                        	.line	725
  Sat Jul 10 2021  1:15                                                Page 72


  3773                        ;
  3774                        ;//! read a sector
  3775                        ;uint8_t* flpydsk_read_sector(int sectorLBA)
  3776                        ;{
  3777                        	.line	728
  3778                        	.line	729
  3779                        	FLPY
  3780                        	xdef	~~flpydsk_read_sector
  3781                        	func
  3782                        	.function	729
  3783                        ~~flpydsk_read_sector:
  3784                        	longa	on
  3785                        	longi	on
  3786 05:8992: 3B           	tsc
  3787 05:8993: 38           	sec
  3788 05:8994: E9 0E 00     	sbc	#L165
  3789 05:8997: 1B           	tcs
  3790 05:8998: 0B           	phd
  3791 05:8999: 5B           	tcd
  3792             00000004   sectorLBA_0	set	4
  3793                        	.block	729
  3794                        ;	int head = 0, track = 0, sector = 1;
  3795                        ;
  3796                        ;	k_debug_long("flpydsk_read_sector:sectorLBA:", s
                    ectorLBA);
  3797             00000000   head_1	set	0
  3798             00000002   track_1	set	2
  3799             00000004   sector_1	set	4
  3800                        	.sym	head,0,5,1,16
  3801                        	.sym	track,2,5,1,16
  3802                        	.sym	sector,4,5,1,16
  3803                        	.sym	sectorLBA,4,5,6,16
  3804 05:899A: 64 09        	stz	<L166+head_1
  3805 05:899C: 64 0B        	stz	<L166+track_1
  3806 05:899E: A9 01 00     	lda	#$1
  3807 05:89A1: 85 0D        	sta	<L166+sector_1
  3808                        	.line	732
  3809 05:89A3: A0 00 00     	ldy	#$0
  3810 05:89A6: A5 12        	lda	<L165+sectorLBA_0
  3811 05:89A8: 10 01        	bpl	L168
  3812 05:89AA: 88           	dey
  3813                        L168:
  3814 05:89AB: 85 01        	sta	<R0
  3815 05:89AD: 84 03        	sty	<R0+2
  3816 05:89AF: D4 03        	pei	<R0+2
  3817 05:89B1: D4 01        	pei	<R0
  3818 05:89B3: F4 xx xx     	pea	#^L145
  3819 05:89B6: F4 xx xx     	pea	#<L145
  3820 05:89B9: 22 xx xx xx  	jsl	~~k_debug_long
  3821                        ;
  3822                        ;	if (_CurrentDrive >= 4)
  3823                        	.line	734
  3824                        ;		return 0;
  3825 05:89BD: E2 20        	sep	#$20
  3826                        	longa	off
  3827 05:89BF: AD xx xx     	lda	|~~_CurrentDrive
  3828 05:89C2: C9 04        	cmp	#<$4
  3829 05:89C4: C2 20        	rep	#$20
  Sat Jul 10 2021  1:15                                                Page 73


  3830                        	longa	on
  3831 05:89C6: B0 03        	bcs	L169
  3832 05:89C8: 82 19 00     	brl	L10052
  3833                        L169:
  3834                        	.line	735
  3835 05:89CB: A9 00 00     	lda	#$0
  3836 05:89CE: AA           	tax
  3837 05:89CF: A9 00 00     	lda	#$0
  3838                        L170:
  3839 05:89D2: A8           	tay
  3840 05:89D3: A5 10        	lda	<L165+2
  3841 05:89D5: 85 12        	sta	<L165+2+2
  3842 05:89D7: A5 0F        	lda	<L165+1
  3843 05:89D9: 85 11        	sta	<L165+1+2
  3844 05:89DB: 2B           	pld
  3845 05:89DC: 3B           	tsc
  3846 05:89DD: 18           	clc
  3847 05:89DE: 69 10 00     	adc	#L165+2
  3848 05:89E1: 1B           	tcs
  3849 05:89E2: 98           	tya
  3850 05:89E3: 6B           	rtl
  3851                        ;
  3852                        ;	//! convert LBA sector to CHS
  3853                        ;
  3854                        ;	flpydsk_lba_to_chs(sectorLBA, &head, &track, &se
                    ctor);
  3855                        L10052:
  3856                        	.line	739
  3857 05:89E4: F4 00 00     	pea	#0
  3858 05:89E7: 18           	clc
  3859 05:89E8: 7B           	tdc
  3860 05:89E9: 69 0D 00     	adc	#<L166+sector_1
  3861 05:89EC: 48           	pha
  3862 05:89ED: F4 00 00     	pea	#0
  3863 05:89F0: 18           	clc
  3864 05:89F1: 7B           	tdc
  3865 05:89F2: 69 0B 00     	adc	#<L166+track_1
  3866 05:89F5: 48           	pha
  3867 05:89F6: F4 00 00     	pea	#0
  3868 05:89F9: 18           	clc
  3869 05:89FA: 7B           	tdc
  3870 05:89FB: 69 09 00     	adc	#<L166+head_1
  3871 05:89FE: 48           	pha
  3872 05:89FF: D4 12        	pei	<L165+sectorLBA_0
  3873 05:8A01: 22 95 88 05  	jsl	~~flpydsk_lba_to_chs
  3874                        ;
  3875                        ;	//! turn motor on and seek to track
  3876                        ;	flpydsk_control_motor(TRUE);
  3877                        	.line	742
  3878 05:8A05: F4 01 00     	pea	#<$1
  3879 05:8A08: 22 8C 82 05  	jsl	~~flpydsk_control_motor
  3880                        ;	if (flpydsk_seek(track, head) != 0)
  3881                        	.line	743
  3882                        ;	{
  3883 05:8A0C: A0 00 00     	ldy	#$0
  3884 05:8A0F: A5 09        	lda	<L166+head_1
  3885 05:8A11: 10 01        	bpl	L171
  3886 05:8A13: 88           	dey
  Sat Jul 10 2021  1:15                                                Page 74


  3887                        L171:
  3888 05:8A14: 85 01        	sta	<R0
  3889 05:8A16: 84 03        	sty	<R0+2
  3890 05:8A18: D4 03        	pei	<R0+2
  3891 05:8A1A: D4 01        	pei	<R0
  3892 05:8A1C: A0 00 00     	ldy	#$0
  3893 05:8A1F: A5 0B        	lda	<L166+track_1
  3894 05:8A21: 10 01        	bpl	L172
  3895 05:8A23: 88           	dey
  3896                        L172:
  3897 05:8A24: 85 05        	sta	<R1
  3898 05:8A26: 84 07        	sty	<R1+2
  3899 05:8A28: D4 07        	pei	<R1+2
  3900 05:8A2A: D4 05        	pei	<R1
  3901 05:8A2C: 22 BB 87 05  	jsl	~~flpydsk_seek
  3902 05:8A30: AA           	tax
  3903 05:8A31: D0 03        	bne	L173
  3904 05:8A33: 82 21 00     	brl	L10053
  3905                        L173:
  3906                        	.line	744
  3907                        ;		flpydsk_control_motor(FALSE);
  3908                        	.line	745
  3909 05:8A36: F4 00 00     	pea	#<$0
  3910 05:8A39: 22 8C 82 05  	jsl	~~flpydsk_control_motor
  3911                        ;		k_debug_long("flpydsk_read_sector:sector
                    LBA:exit:", 0);
  3912                        	.line	746
  3913 05:8A3D: F4 00 00     	pea	#^$0
  3914 05:8A40: F4 00 00     	pea	#<$0
  3915 05:8A43: F4 xx xx     	pea	#^L145+31
  3916 05:8A46: F4 xx xx     	pea	#<L145+31
  3917 05:8A49: 22 xx xx xx  	jsl	~~k_debug_long
  3918                        ;		return 0;
  3919                        	.line	747
  3920 05:8A4D: A9 00 00     	lda	#$0
  3921 05:8A50: AA           	tax
  3922 05:8A51: A9 00 00     	lda	#$0
  3923 05:8A54: 82 7B FF     	brl	L170
  3924                        ;	}
  3925                        	.line	748
  3926                        ;	//! read sector and turn motor off
  3927                        ;	flpydsk_read_sector_imp2(head, track, sector);
  3928                        L10053:
  3929                        	.line	750
  3930 05:8A57: D4 0D        	pei	<L166+sector_1
  3931 05:8A59: D4 0B        	pei	<L166+track_1
  3932 05:8A5B: D4 09        	pei	<L166+head_1
  3933 05:8A5D: 22 B5 86 05  	jsl	~~flpydsk_read_sector_imp2
  3934                        ;	flpydsk_control_motor(FALSE);
  3935                        	.line	751
  3936 05:8A61: F4 00 00     	pea	#<$0
  3937 05:8A64: 22 8C 82 05  	jsl	~~flpydsk_control_motor
  3938                        ;
  3939                        ;	//! warning: this is a bit hackish
  3940                        ;	return (uint8_t*) DMA_BUFFER;
  3941                        	.line	754
  3942 05:8A68: AE xx xx     	ldx	|~~DMA_BUFFER+2
  3943 05:8A6B: AD xx xx     	lda	|~~DMA_BUFFER
  Sat Jul 10 2021  1:15                                                Page 75


  3944 05:8A6E: 82 61 FF     	brl	L170
  3945                        ;}
  3946                        	.line	755
  3947                        	.endblock	755
  3948             0000000E   L165	equ	14
  3949             00000009   L166	equ	9
  3950 05:8A71:              	ends
  3951                        	efunc
  3952                        	.endfunc	755,9,14
  3953                        	.line	755
  3954                        	data
  3955                        L145:
  3956 00:022B: 66 6C 70 79  	db	$66,$6C,$70,$79,$64,$73,$6B,$5F,$72,$65,
                    $61,$64,$5F,$73,$65
       00:022F: 64 73 6B 5F 
       00:0233: 72 65 61 64 
       00:0237: 5F 73 65 
  3957 00:023A: 63 74 6F 72  	db	$63,$74,$6F,$72,$3A,$73,$65,$63,$74,$6F,
                    $72,$4C,$42,$41,$3A
       00:023E: 3A 73 65 63 
       00:0242: 74 6F 72 4C 
       00:0246: 42 41 3A 
  3958 00:0249: 00 66 6C 70  	db	$00,$66,$6C,$70,$79,$64,$73,$6B,$5F,$72,
                    $65,$61,$64,$5F,$73
       00:024D: 79 64 73 6B 
       00:0251: 5F 72 65 61 
       00:0255: 64 5F 73 
  3959 00:0258: 65 63 74 6F  	db	$65,$63,$74,$6F,$72,$3A,$73,$65,$63,$74,
                    $6F,$72,$4C,$42,$41
       00:025C: 72 3A 73 65 
       00:0260: 63 74 6F 72 
       00:0264: 4C 42 41 
  3960 00:0267: 3A 65 78 69  	db	$3A,$65,$78,$69,$74,$3A,$00
       00:026B: 74 3A 00 
  3961 00:026E:              	ends
  3962                        ;
  3963                        ;
  3964                        ;//===============================================
                    =============================
  3965                        ;//    INTERFACE CLASS BODIES
  3966                        ;//===============================================
                    =============================
  3967                        ;//***********************************************
                    *****************************
  3968                        ;//**
  3969                        ;//**    END[flpydsk.cpp]
  3970                        ;//**
  3971                        ;//***********************************************
                    *****************************
  3972                        ;
  3973                        	.line	765
  3974                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\flpydsk.c",728
  3975                        	xref	~~k_debug_hex
  3976                        	xref	~~k_debug_long
  3977                        	xref	~~k_debug_integer
  3978                        	xref	~~k_debug_char
  3979                        	xref	~~k_debug_string
  Sat Jul 10 2021  1:15                                                Page 76


  3980                        	xref	~~sleep
  3981                        	.sym	~~flpydsk_seek,~~flpydsk_seek,69,2,0
  3982                        	.sym	~~flpydsk_read_sector_imp2,~~flpydsk_rea
                    d_sector_imp2,65,2,0
  3983                        	.sym	~~flpydsk_read_sector_imp,~~flpydsk_read
                    _sector_imp,65,2,0
  3984                        	.sym	~~flpydsk_calibrate,~~flpydsk_calibrate,
                    69,2,0
  3985                        	.sym	~~flpydsk_drive_data,~~flpydsk_drive_dat
                    a,65,2,0
  3986                        	.sym	~~flpydsk_control_motor,~~flpydsk_contro
                    l_motor,65,2,0
  3987                        	.sym	~~flpydsk_check_int,~~flpydsk_check_int,
                    65,2,0
  3988                        	.sym	~~i816_flpy_irq,~~i816_flpy_irq,65,2,0
  3989                        	.sym	~~flpydsk_write_ccr,~~flpydsk_write_ccr,
                    65,2,0
  3990                        	.sym	~~flpydsk_read_byte,~~flpydsk_read_byte,
                    78,2,0
  3991                        	.sym	~~flpydsk_write_dor,~~flpydsk_write_dor,
                    65,2,0
  3992                        	.sym	~~flpydsk_dma_write,~~flpydsk_dma_write,
                    65,2,0
  3993                        	.sym	~~flpydsk_initialize_dma,~~flpydsk_initi
                    alize_dma,65,2,0
  3994                        	.sym	~~_CurrentDrive,~~_CurrentDrive,14,3,8
  3995                        	.sym	~~DMA_BUFFER,~~DMA_BUFFER,142,2,32
  3996                        	.sym	~~FLPY_SECTORS_PER_TRACK,~~FLPY_SECTORS_
                    PER_TRACK,5,2,16
  3997                        	.sym	~~FLOPPY_IRQ,~~FLOPPY_IRQ,5,2,16
  3998                        	.sym	~~flpydsk_enable_controller,~~flpydsk_en
                    able_controller,65,2,0
  3999                        	.sym	~~flpydsk_disable_controller,~~flpydsk_d
                    isable_controller,65,2,0
  4000                        	.sym	~~flpydsk_dma_read,~~flpydsk_dma_read,65
                    ,2,0
  4001                        	.sym	~~flpydsk_read_data,~~flpydsk_read_data,
                    78,2,0
  4002                        	.sym	~~flpydsk_read_status,~~flpydsk_read_sta
                    tus,78,2,0
  4003                        	.sym	~~flpydsk_reset,~~flpydsk_reset,65,2,0
  4004                        	.sym	~~flpydsk_send_command,~~flpydsk_send_co
                    mmand,65,2,0
  4005                        	.sym	~~flpydsk_lba_to_chs,~~flpydsk_lba_to_ch
                    s,65,2,0
  4006                        	.sym	~~flpydsk_read_sector,~~flpydsk_read_sec
                    tor,1102,2,32
  4007                        	.sym	~~flpydsk_get_working_drive,~~flpydsk_ge
                    t_working_drive,78,2,0
  4008                        	.sym	~~flpydsk_set_working_drive,~~flpydsk_se
                    t_working_drive,65,2,0
  4009                        	.sym	~~flpydsk_install,~~flpydsk_install,65,2
                    ,0
  4010                        	.sym	~~_FloppyDiskIRQ,~~_FloppyDiskIRQ,14,2,8
  4011                        	.sym	FRESULT,0,5,14,16
  4012                        	.sym	MKFS_PARM,0,10,14,80,84
  4013                        	.sym	FILINFO,0,10,14,2224,83
  4014                        	.sym	DIR,0,10,14,416,82
  Sat Jul 10 2021  1:15                                                Page 77


  4015                        	.sym	FIL,0,10,14,4400,81
  4016                        	.sym	FFOBJID,0,10,14,128,80
  4017                        	.sym	FATFS,0,10,14,4504,79
  4018                        	.sym	LBA_t,0,18,14,32
  4019                        	.sym	FSIZE_t,0,18,14,32
  4020                        	.sym	TCHAR,0,14,14,8
  4021                        	.sym	PCOMMANDARGS,0,138,14,32,78
  4022                        	.sym	COMMANDARGS,0,10,14,64,78
  4023                        	.sym	PTOKENIZESTATE,0,133,14,32
  4024                        	.sym	TOKENIZESTATE,0,5,14,16
  4025                        	.sym	PTOKEN,0,138,14,32,77
  4026                        	.sym	TOKEN,0,10,14,64,77
  4027                        	.sym	PTOKENTYPE,0,133,14,32
  4028                        	.sym	TOKENTYPE,0,5,14,16
  4029                        	.sym	FXCommandHandler,0,656,14,32
  4030                        	.sym	PCONSOLECTX,0,138,14,32,76
  4031                        	.sym	CONSOLECTX,0,10,14,1144,76
  4032                        	.sym	PSPINNERCTX,0,138,14,32,75
  4033                        	.sym	SPINNERCTX,0,10,14,48,75
  4034                        	.sym	HCLIP,0,138,14,32,74
  4035                        	.sym	PCLIPBOARD_DATA,0,138,14,32,74
  4036                        	.sym	CLIPBOARD_DATA,0,10,14,168,74
  4037                        	.sym	PEVENTMANAGER,0,138,14,32,73
  4038                        	.sym	EVENTMANAGER,0,10,14,192,73
  4039                        	.sym	EV_RUN,0,656,14,32
  4040                        	.sym	EV_QUERY_METRIC,0,656,14,32
  4041                        	.sym	EV_CONFIGURE,0,656,14,32
  4042                        	.sym	EV_UNINIT,0,641,14,32
  4043                        	.sym	EV_INIT,0,8833,14,32
  4044                        	.sym	PMOUSE_MSG_STATE,0,138,14,32,72
  4045                        	.sym	MOUSE_MSG_STATE,0,10,14,184,72
  4046                        	.sym	PFXEVENTPROCESS,0,138,14,32,71
  4047                        	.sym	FXEVENTPROCESS,0,10,14,64,71
  4048                        	.sym	PMARSHALDATA,0,139,14,32,70
  4049                        	.sym	MARSHALDATA,0,11,14,32,70
  4050                        	.sym	FXIDLEPROCESS,0,641,14,32
  4051                        	.sym	FXEventProc,0,641,14,32
  4052                        	.sym	PMOUSEMSGDATA,0,138,14,32,69
  4053                        	.sym	MOUSEMSGDATA,0,10,14,64,69
  4054                        	.sym	MSGIRQ,0,5,14,16
  4055                        	.sym	MAINLOOPARGS,0,10,14,16,68
  4056                        	.sym	PEACHCHILD_MSG,0,138,14,32,67
  4057                        	.sym	EACHCHILD_MSG,0,10,14,64,67
  4058                        	.sym	PMSGBOX_DATA,0,138,14,32,66
  4059                        	.sym	MSGBOX_DATA,0,10,14,96,66
  4060                        	.sym	PDESKTOP_DATA,0,138,14,32,65
  4061                        	.sym	DESKTOP_DATA,0,10,14,64,65
  4062                        	.sym	PWINDOWMANAGER,0,138,14,32,64
  4063                        	.sym	WINDOWMANAGER,0,10,14,160,64
  4064                        	.sym	WM_DOPROCS,0,641,14,32
  4065                        	.sym	WM_QUERY_METRIC,0,656,14,32
  4066                        	.sym	WM_CONFIGURE,0,656,14,32
  4067                        	.sym	WM_HANDLE_EVENT,0,8833,14,32
  4068                        	.sym	WM_EVENTS,0,641,14,32
  4069                        	.sym	PCUR_PALETTE_MAP,0,138,14,32,63
  4070                        	.sym	CUR_PALETTE_MAP,0,10,14,400,63
  4071                        	.sym	PCLICKDETECTED,0,138,14,32,62
  4072                        	.sym	CLICKDETECTED,0,10,14,64,62
  Sat Jul 10 2021  1:15                                                Page 78


  4073                        	.sym	OBJECTCLICKED,0,641,14,32
  4074                        	.sym	PIPCPORT,0,138,14,32,61
  4075                        	.sym	IPCPORT,0,10,14,144,61
  4076                        	.sym	MemoryCallback,0,641,14,32
  4077                        	.sym	PFXMEMORYMAP,0,138,14,32,60
  4078                        	.sym	FXMEMORYMAP,0,10,14,2072,60
  4079                        	.sym	UMM_HEAP_INFO,0,10,14,256,59
  4080                        	.sym	PEXECUTIVE,0,138,14,32,58
  4081                        	.sym	EXECUTIVE,0,10,14,128,58
  4082                        	.sym	EX_QUERY_METRIC,0,656,14,32
  4083                        	.sym	EX_CONFIGURE,0,656,14,32
  4084                        	.sym	EX_UNINIT,0,641,14,32
  4085                        	.sym	EX_INIT,0,8833,14,32
  4086                        	.sym	PFXSTRING,0,138,14,32,57
  4087                        	.sym	FXSTRING,0,10,14,64,57
  4088                        	.sym	DEVICEDRIVER_COMMAND,0,656,14,32
  4089                        	.sym	DEVICEDRIVER_UNLOAD,0,654,14,32
  4090                        	.sym	DEVICEDRIVER_WRITE,0,656,14,32
  4091                        	.sym	DEVICEDRIVER_READ,0,656,14,32
  4092                        	.sym	DEVICEDRIVER_LOAD,0,654,14,32
  4093                        	.sym	DEVICEDRIVER_IRQ,0,654,14,32
  4094                        	.sym	PFX_BLOCK_DEVICE_DRIVER,0,138,14,32,56
  4095                        	.sym	FX_BLOCK_DEVICE_DRIVER,0,10,14,808,56
  4096                        	.sym	GETDRIVERDEF,0,8842,14,32,55
  4097                        	.sym	PFX_DEVICE_DRIVER,0,138,14,32,55
  4098                        	.sym	FX_DEVICE_DRIVER,0,10,14,776,55
  4099                        	.sym	~~k_debug_hex,~~k_debug_hex,65,18,0
  4100                        	.sym	~~k_debug_long,~~k_debug_long,65,18,0
  4101                        	.sym	~~k_debug_integer,~~k_debug_integer,65,1
                    8,0
  4102                        	.sym	~~k_debug_char,~~k_debug_char,65,18,0
  4103                        	.sym	~~k_debug_string,~~k_debug_string,65,18,
                    0
  4104                        	.sym	~~sleep,~~sleep,65,18,0
  4105                        	.sym	PSEGMENTHEADER,0,138,14,32,54
  4106                        	.sym	SEGMENTHEADER,0,10,14,160,54
  4107                        	.sym	PDEBUGBYTEBITS,0,138,14,32,53
  4108                        	.sym	DEBUGBYTEBITS,0,10,14,8,53
  4109                        	.sym	PFXENVIRONMENT,0,138,14,32,52
  4110                        	.sym	FXENVIRONMENT,0,10,14,96,52
  4111                        	.sym	PFXZEROPAGE,0,138,14,32,51
  4112                        	.sym	FXZEROPAGE,0,10,14,824,51
  4113                        	.sym	KERNELTRAPCALL,0,641,14,32
  4114                        	.sym	PFXKERNEL_API_CALLTABLE,0,138,14,32,50
  4115                        	.sym	FXKERNEL_API_CALLTABLE,0,10,14,8192,50
  4116                        	.sym	FOREACHNODEUNTIL,0,654,14,32
  4117                        	.sym	FOREACHNODE,0,641,14,32
  4118                        	.sym	PFXRFHEADER_FONT,0,138,14,32,49
  4119                        	.sym	FXRFHEADER_FONT,0,10,14,144,49
  4120                        	.sym	PFXRFHEADER,0,138,14,32,48
  4121                        	.sym	FXRFHEADER,0,10,14,72,48
  4122                        	.sym	PFXCOMBUFFER,0,138,14,32,47
  4123                        	.sym	FXCOMBUFFER,0,10,14,2080,47
  4124                        	.sym	PSUBMENULIST,0,138,14,32,46
  4125                        	.sym	SUBMENULIST,0,10,14,40,46
  4126                        	.sym	HSUBMENU,0,7,14,32
  4127                        	.sym	PSUBMENU,0,138,14,32,45
  4128                        	.sym	SUBMENU,0,10,14,64,45
  Sat Jul 10 2021  1:15                                                Page 79


  4129                        	.sym	MenuAction,0,641,14,32
  4130                        	.sym	PMENUANCHOR,0,138,14,32,44
  4131                        	.sym	MENUANCHOR,0,10,14,272,44
  4132                        	.sym	PMSGBOX,0,138,14,32,43
  4133                        	.sym	MSGBOX,0,10,14,144,43
  4134                        	.sym	PTEXTBOX,0,138,14,32,42
  4135                        	.sym	TEXTBOX,0,10,14,144,42
  4136                        	.sym	PLISTBOX,0,138,14,32,41
  4137                        	.sym	LISTBOX,0,10,14,240,41
  4138                        	.sym	PSCROLLBAR,0,138,14,32,40
  4139                        	.sym	SCROLLBAR,0,10,14,240,40
  4140                        	.sym	PBUTTON,0,138,14,32,39
  4141                        	.sym	BUTTON,0,10,14,96,39
  4142                        	.sym	PMENUDROPDOWNDATA,0,138,14,32,38
  4143                        	.sym	MENUDROPDOWNDATA,0,10,14,5152,38
  4144                        	.sym	PMENUTAG,0,138,14,32,37
  4145                        	.sym	MENUTAG,0,10,14,160,37
  4146                        	.sym	PMENU,0,138,14,32,36
  4147                        	.sym	MENU,0,10,14,280,36
  4148                        	.sym	HMENURESOURCE,0,129,14,32
  4149                        	.sym	FONTMETRIC,0,10,14,32,35
  4150                        	.sym	TITLE,0,142,14,32
  4151                        	.sym	PHANDLE,0,1153,14,32
  4152                        	.sym	HANDLE,0,129,14,32
  4153                        	.sym	PWINDOWEX,0,138,14,32,34
  4154                        	.sym	WINDOWEX,0,10,14,3880,34
  4155                        	.sym	PWINDOW,0,138,14,32,33
  4156                        	.sym	WINDOW,0,10,14,3904,33
  4157                        	.sym	PDRAGDATA,0,138,14,32,32
  4158                        	.sym	DRAGDATA,0,10,14,216,32
  4159                        	.sym	PNCCLICKABLE,0,138,14,32,31
  4160                        	.sym	NCCLICKABLE,0,10,14,136,31
  4161                        	.sym	HCLICKABLE,0,7,14,32
  4162                        	.sym	PCLICKABLE,0,138,14,32,30
  4163                        	.sym	CLICKABLE,0,10,14,152,30
  4164                        	.sym	PWNDCLASS,0,138,14,32,29
  4165                        	.sym	WNDCLASS,0,10,14,272,29
  4166                        	.sym	HBRUSH,0,129,14,32
  4167                        	.sym	HCURSOR,0,129,14,32
  4168                        	.sym	HICON,0,129,14,32
  4169                        	.sym	HINSTANCE,0,129,14,32
  4170                        	.sym	FXWndProc,0,654,14,32
  4171                        	.sym	PDRECT,0,138,14,32,28
  4172                        	.sym	DRECT,0,10,14,112,28
  4173                        	.sym	PRECTP,0,138,14,32,27
  4174                        	.sym	RECTP,0,10,14,96,27
  4175                        	.sym	PRECT,0,138,14,32,26
  4176                        	.sym	RECT,0,10,14,112,26
  4177                        	.sym	PPOINT,0,138,14,32,25
  4178                        	.sym	POINT,0,10,14,32,25
  4179                        	.sym	PFXPROPERTY,0,138,14,32,23
  4180                        	.sym	FXPROPERTY,0,10,14,384,23
  4181                        	.sym	PKEYSTATE,0,138,14,32,22
  4182                        	.sym	KEYSTATE,0,10,14,112,22
  4183                        	.sym	SCANCODE,0,14,14,8
  4184                        	.sym	KEYCODE,0,16,14,16
  4185                        	.sym	PFXPROCESSMESSAGE,0,138,14,32,21
  4186                        	.sym	FXPROCESSMESSAGE,0,10,14,112,21
  Sat Jul 10 2021  1:15                                                Page 80


  4187                        	.sym	PFXPROCESS,0,138,14,32,20
  4188                        	.sym	FXPROCESS,0,10,14,800,20
  4189                        	.sym	PDESKTOP_CONTROL,0,138,14,32,19
  4190                        	.sym	DESKTOP_CONTROL,0,10,14,392,19
  4191                        	.sym	PCONSOLE_CONTROL,0,138,14,32,18
  4192                        	.sym	CONSOLE_CONTROL,0,10,14,448,18
  4193                        	.sym	FXProcessProc,0,641,14,32
  4194                        	.sym	PFXCMDMESSAGE,0,138,14,32,17
  4195                        	.sym	FXCMDMESSAGE,0,10,14,304,17
  4196                        	.sym	PFXOSMESSAGE,0,138,14,32,16
  4197                        	.sym	FXOSMESSAGE,0,10,14,304,16
  4198                        	.sym	PINT_REGS,0,138,14,32,15
  4199                        	.sym	INT_REGS,0,10,14,104,15
  4200                        	.sym	TASK_STACK,0,10,14,32,14
  4201                        	.sym	TASK,0,10,14,48,13
  4202                        	.sym	PIRQDATA,0,138,14,32,12
  4203                        	.sym	IRQDATA,0,10,14,48,12
  4204                        	.sym	HMENU,0,129,14,32
  4205                        	.sym	HWND,0,129,14,32
  4206                        	.sym	MSGDATA,0,14,14,8
  4207                        	.sym	MSGDEST,0,18,14,32
  4208                        	.sym	MSGSRC,0,18,14,32
  4209                        	.sym	MSGTYPE,0,16,14,16
  4210                        	.sym	PROCESS_RESOURCE_LIST,0,138,14,32,6
  4211                        	.sym	PROCESS_TLS_LIST,0,138,14,32,6
  4212                        	.sym	SEMAPHORE_LIST,0,138,14,32,6
  4213                        	.sym	FILE_BLOCK_LIST,0,138,14,32,6
  4214                        	.sym	FILE_PATH_LIST,0,138,14,32,6
  4215                        	.sym	PROCEDURE_LIST,0,138,14,32,6
  4216                        	.sym	FILE_HANDLE,0,138,14,32,11
  4217                        	.sym	FILE_BLOCK,0,10,14,552,11
  4218                        	.sym	SEMAPHORE,0,10,14,16,10
  4219                        	.sym	PPROCESS_SIGNAL,0,138,14,32,9
  4220                        	.sym	PROCESS_SIGNAL,0,10,14,16,9
  4221                        	.sym	KRESULT,0,18,14,32
  4222                        	.sym	PKERNEL_ERROR,0,138,14,32,8
  4223                        	.sym	KERNEL_ERROR,0,10,14,32,8
  4224                        	.sym	PROCESS_STATUS,0,16,14,16
  4225                        	.sym	FILE_PATH_NAME,0,142,14,32
  4226                        	.sym	PROCESS_RESOURCE,0,129,14,32
  4227                        	.sym	PROCESS_TLS,0,129,14,32
  4228                        	.sym	PROCESS_CTX,0,129,14,32
  4229                        	.sym	USERID,0,16,14,16
  4230                        	.sym	PROCESS_ID,0,18,14,32
  4231                        	.sym	PROCESS_BANK,0,14,14,8
  4232                        	.sym	PFXQUEUE,0,138,14,32,7
  4233                        	.sym	FXQUEUE,0,10,14,80,7
  4234                        	.sym	PFXNODELIST,0,138,14,32,6
  4235                        	.sym	FXNODELIST,0,10,14,96,6
  4236                        	.sym	NodeListDeallocator,0,641,14,32
  4237                        	.sym	PFXNODE,0,138,14,32,5
  4238                        	.sym	FXNODE,0,10,14,384,5
  4239                        	.sym	PBYTEBITS,0,138,14,32,4
  4240                        	.sym	BYTEBITS,0,10,14,8,4
  4241                        	.sym	HRESULT,0,18,14,32
  4242                        	.sym	LPWCHAR,0,144,14,32
  4243                        	.sym	WCHAR,0,16,14,16
  4244                        	.sym	HCOLOR,0,129,14,32
  Sat Jul 10 2021  1:15                                                Page 81


  4245                        	.sym	HFONT,0,129,14,32
  4246                        	.sym	HDC,0,129,14,32
  4247                        	.sym	HPOINTER,0,129,14,32
  4248                        	.sym	uint32_t,0,18,14,32
  4249                        	.sym	uint8_t,0,14,14,8
  4250                        	.sym	LPBOOL,0,142,14,32
  4251                        	.sym	BOOL,0,14,14,8
  4252                        	.sym	DWORD,0,18,14,32
  4253                        	.sym	ULONG,0,18,14,32
  4254                        	.sym	LPLONG,0,135,14,32
  4255                        	.sym	LONG,0,7,14,32
  4256                        	.sym	PUINT,0,144,14,32
  4257                        	.sym	USHORT,0,16,14,16
  4258                        	.sym	UINT,0,16,14,16
  4259                        	.sym	INT,0,5,14,16
  4260                        	.sym	WORD,0,5,14,16
  4261                        	.sym	PBYTE,0,142,14,32
  4262                        	.sym	BYTE,0,14,14,8
  4263                        	.sym	IOPORT,0,142,14,32
  4264                        	.sym	PUCHAR,0,142,14,32
  4265                        	.sym	UCHAR,0,14,14,8
  4266                        	.sym	LPWCSTR,0,142,14,32
  4267                        	.sym	LPCSTR,0,142,14,32
  4268                        	.sym	LPSTR,0,142,14,32
  4269                        	.sym	LPCHAR,0,142,14,32
  4270                        	.sym	CHAR,0,14,14,8
  4271                        	.sym	LPVOID,0,129,14,32
  4272                        	.sym	VOID,0,1,14,32
  4273                        	.sym	Boolean_T,0,5,14,16
  4274                        	.sym	ldiv_t,0,10,14,64,2
  4275                        	.sym	div_t,0,10,14,32,1
  4276                        	.sym	wctype_t,0,16,14,16
  4277                        	.sym	wint_t,0,16,14,16
  4278                        	.sym	wchar_t,0,14,14,8
  4279                        	.sym	ptrdiff_t,0,7,14,32
  4280                        	.sym	size_t,0,16,14,16
  4281                        	end


      Lines assembled: 4281
      Errors: 0
