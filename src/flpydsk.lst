  Thu Jul 29 2021 11:48                                                Page 1


                     ***************************************
                     **      WDC 65C816 Macro Assembler   **
                     **                                   **
                     **     Version 3.49.1- Feb  6 2006    **
                     ***************************************

     1                        ;:ts=8
     2             00000001   R0	equ	1
     3             00000005   R1	equ	5
     4             00000009   R2	equ	9
     5             0000000D   R3	equ	13
     6                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\flpydsk.c",0
     7                        ;//***********************************************
                    *****************************
     8                        ;//**
     9                        ;//**    flpydsk.cpp
    10                        ;//**		-Floppy Disk driver
    11                        ;//**
    12                        ;//***********************************************
                    *****************************
    13                        ;//===============================================
                    =============================
    14                        ;//    IMPLEMENTATION HEADERS
    15                        ;//===============================================
                    =============================
    16                        ;
    17                        ;#include "fxos.h"
    18                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxos.h",0
    19                        	.file	"G:\devtools\WDCTools\wdc\Tools\include\
                    stdlib.h",0
    20                        	.file	"G:\devtools\WDCTools\wdc\Tools\include\
                    stddef.h",0
    21                        	.line	88
    22                        	.file	"G:\devtools\WDCTools\wdc\Tools\include\
                    stdlib.h",43
    23                        	.stag	fake1_,32,1
    24                        	.member	quot,0,5,8,16
    25                        	.member	rem,16,5,8,16
    26                        	.eos
    27                        	.stag	fake2_,64,2
    28                        	.member	quot,0,7,8,32
    29                        	.member	rem,32,7,8,32
    30                        	.eos
    31                        	.stag	int_sqrt,32,3
    32                        	.member	sqrt,0,16,8,16
    33                        	.member	frac,16,16,8,16
    34                        	.eos
    35                        	.line	205
    36                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxos.h",4
    37                        	.file	"G:\devtools\WDCTools\wdc\Tools\include\
                    string.h",0
    38                        	.line	134
    39                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxos.h",5
    40                        	.file	"G:\devtools\WDCTools\wdc\Tools\include\
  Thu Jul 29 2021 11:48                                                Page 2


                    ctype.h",0
    41                        	.line	103
    42                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxos.h",6
    43                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxtypes.h",0
    44                        	.stag	_fx_bytebits,8,4
    45                        	.member	b7,0,14,17,1
    46                        	.member	b6,1,14,17,1
    47                        	.member	b5,2,14,17,1
    48                        	.member	b4,3,14,17,1
    49                        	.member	b3,4,14,17,1
    50                        	.member	b2,5,14,17,1
    51                        	.member	b1,6,14,17,1
    52                        	.member	b0,7,14,17,1
    53                        	.eos
    54                        	.stag	_fx_node,384,5
    55                        	.member	type,0,14,8,8
    56                        	.member	Reserved0,8,14,8,8
    57                        	.member	data,16,129,8,32
    58                        	.member	last,48,138,8,32,5
    59                        	.member	next,80,138,8,32,5
    60                        	.member	name,112,110,8,0,32
    61                        	.member	Reserved1,368,16,8,16
    62                        	.eos
    63                        	.stag	_fx_nodelist,96,6
    64                        	.member	listhead,0,138,8,32,5
    65                        	.member	listData,32,129,8,32
    66                        	.member	deallocator,64,641,8,32
    67                        	.eos
    68                        	.stag	_fx_queue,80,7
    69                        	.member	count,0,5,8,16
    70                        	.member	front,16,138,8,32,5
    71                        	.member	rear,48,138,8,32,5
    72                        	.eos
    73                        	.stag	fake8_,32,8
    74                        	.member	subsystem,0,14,8,8
    75                        	.member	level,8,14,8,8
    76                        	.member	error,16,16,8,16
    77                        	.eos
    78                        	.stag	_fx_process_signal,16,9
    79                        	.member	cbSize,0,16,8,16
    80                        	.eos
    81                        	.stag	_fx_semaphore,16,10
    82                        	.member	reserved,0,5,8,16
    83                        	.eos
    84                        	.stag	_fx_fileBlock,552,11
    85                        	.member	openCount,0,16,8,16
    86                        	.member	lockCount,16,16,8,16
    87                        	.member	dirty,32,14,8,8
    88                        	.member	fileBuffer,40,110,8,0,64
    89                        	.eos
    90                        	.stag	_fx_irq_data,48,12
    91                        	.member	line,0,5,8,16
    92                        	.member	keycode,16,142,8,32
    93                        	.eos
    94                        	.stag	_task,48,13
    95                        	.member	SPL,0,14,8,8
  Thu Jul 29 2021 11:48                                                Page 3


    96                        	.member	SPH,8,14,8,8
    97                        	.member	pstack,16,142,8,32
    98                        	.eos
    99                        	.stag	_task_stack,32,14
   100                        	.member	SS,0,142,8,32
   101                        	.eos
   102                        	.stag	int_regs,104,15
   103                        	.member	PB,0,14,8,8
   104                        	.member	PH,8,14,8,8
   105                        	.member	PL,16,14,8,8
   106                        	.member	PP,24,14,8,8
   107                        	.member	DB,32,14,8,8
   108                        	.member	DH,40,14,8,8
   109                        	.member	DL,48,14,8,8
   110                        	.member	AH,56,14,8,8
   111                        	.member	AL,64,14,8,8
   112                        	.member	XH,72,14,8,8
   113                        	.member	XL,80,14,8,8
   114                        	.member	YH,88,14,8,8
   115                        	.member	YL,96,14,8,8
   116                        	.eos
   117                        	.stag	_fx_eventMessage,312,16
   118                        	.member	src,0,18,8,32
   119                        	.member	dest,32,18,8,32
   120                        	.member	type,64,16,8,16
   121                        	.member	hwnd,80,129,8,32
   122                        	.member	pheap,112,129,8,32
   123                        	.member	msgTime,144,18,8,32
   124                        	.member	data,176,110,8,0,16
   125                        	.member	attr,304,14,8,8
   126                        	.eos
   127                        	.stag	_fx_cmdMessage,312,17
   128                        	.member	src,0,18,8,32
   129                        	.member	dest,32,18,8,32
   130                        	.member	type,64,16,8,16
   131                        	.member	hwnd,80,129,8,32
   132                        	.member	pheap,112,129,8,32
   133                        	.member	msgTime,144,18,8,32
   134                        	.member	cmdCId,176,16,8,16
   135                        	.member	cmdMId,192,16,8,16
   136                        	.member	parameter1,208,18,8,32
   137                        	.member	parameter2,240,18,8,32
   138                        	.member	parameter3,272,18,8,32
   139                        	.member	attr,304,14,8,8
   140                        	.eos
   141                        	.stag	_fx_console_ctl,448,18
   142                        	.member	maxCols,0,5,8,16
   143                        	.member	maxRows,16,5,8,16
   144                        	.member	curX,32,5,8,16
   145                        	.member	curY,48,5,8,16
   146                        	.member	fgColor,64,5,8,16
   147                        	.member	bgColor,80,5,8,16
   148                        	.member	mode,96,14,8,8
   149                        	.member	kbBuffer,104,101,8,0,16
   150                        	.member	screenBuffer,360,142,8,32
   151                        	.member	desktopMode,392,14,8,8
   152                        	.member	lastMouseButton,400,5,8,16
   153                        	.member	lastMouseX,416,5,8,16
  Thu Jul 29 2021 11:48                                                Page 4


   154                        	.member	lastMouseY,432,5,8,16
   155                        	.eos
   156                        	.stag	_fx_desktop_ctl,392,19
   157                        	.member	desktopMode,0,14,8,8
   158                        	.member	cursorCtl,8,5,8,16
   159                        	.member	cursorState,24,5,8,16
   160                        	.member	backgroundColor,40,5,8,16
   161                        	.member	foregroundColor,56,5,8,16
   162                        	.member	menuMode,72,5,8,16
   163                        	.member	lastMouseButton,88,5,8,16
   164                        	.member	lastMouseX,104,5,8,16
   165                        	.member	lastMouseY,120,5,8,16
   166                        	.member	currentDiskName,136,142,8,32
   167                        	.member	diskNodes,168,129,8,32
   168                        	.member	titleNodes,200,129,8,32
   169                        	.member	menuNodes,232,129,8,32
   170                        	.member	iconNodes,264,129,8,32
   171                        	.member	windowNodes,296,129,8,32
   172                        	.member	fontNodes,328,129,8,32
   173                        	.member	wndProc,360,138,8,32,6
   174                        	.eos
   175                        	.stag	_fx_process,800,20
   176                        	.member	cbSize,0,5,8,16
   177                        	.member	procId,16,18,8,32
   178                        	.member	parentId,48,18,8,32
   179                        	.member	ctx,80,129,8,32
   180                        	.member	userId,112,16,8,16
   181                        	.member	status,128,16,8,16
   182                        	.member	foregroundActive,144,14,8,8
   183                        	.member	tls,152,1121,8,32,8
   184                        	.member	commandLine,408,142,8,32
   185                        	.member	semaphores,440,138,8,32,6
   186                        	.member	fileHandles,472,138,8,32,6
   187                        	.member	pathList,504,138,8,32,6
   188                        	.member	resources,536,138,8,32,6
   189                        	.member	timerAware,568,14,8,8
   190                        	.member	timerTicks,576,112,8,0,2
   191                        	.member	timerTickCount,608,112,8,0,2
   192                        	.member	kernelError,640,10,8,32,8
   193                        	.member	consoleCtl,672,138,8,32,18
   194                        	.member	desktopCtl,704,138,8,32,19
   195                        	.member	execProc,736,641,8,32
   196                        	.member	startupArgs,768,129,8,32
   197                        	.eos
   198                        	.stag	_fxProcessMessage,112,21
   199                        	.member	src,0,18,8,32
   200                        	.member	dest,32,18,8,32
   201                        	.member	type,64,16,8,16
   202                        	.member	processInfo,80,138,8,32,20
   203                        	.eos
   204                        	.stag	_k_key_state,112,22
   205                        	.member	scanCode,0,14,8,8
   206                        	.member	isShifted,8,14,8,8
   207                        	.member	isAlt,16,14,8,8
   208                        	.member	isExtended,24,14,8,8
   209                        	.member	isCapsLock,32,14,8,8
   210                        	.member	isNumLock,40,14,8,8
   211                        	.member	isScrollLock,48,14,8,8
  Thu Jul 29 2021 11:48                                                Page 5


   212                        	.member	keyChar,56,16,8,16
   213                        	.member	scanTime,72,18,8,32
   214                        	.member	ledStatus,104,14,8,8
   215                        	.eos
   216                        	.stag	_fx_property,384,23
   217                        	.member	name,0,110,8,0,16
   218                        	.member	value,128,110,8,0,32
   219                        	.eos
   220                        	.utag	_24bitPointer,32,24
   221                        	.member	address,0,142,11,32
   222                        	.member	bytes,0,110,11,0,4
   223                        	.eos
   224                        	.stag	_PointStruct,32,25
   225                        	.member	x,0,5,8,16
   226                        	.member	y,16,5,8,16
   227                        	.eos
   228                        	.stag	_RectStruct,112,26
   229                        	.member	x,0,5,8,16
   230                        	.member	y,16,5,8,16
   231                        	.member	z,32,18,8,32
   232                        	.member	width,64,5,8,16
   233                        	.member	height,80,5,8,16
   234                        	.member	attr,96,5,8,16
   235                        	.eos
   236                        	.stag	fake27_,96,27
   237                        	.member	name,0,142,8,32
   238                        	.member	topLeft,32,10,8,32,25
   239                        	.member	bottomRight,64,10,8,32,25
   240                        	.eos
   241                        	.stag	fake28_,112,28
   242                        	.member	x,0,5,8,16
   243                        	.member	y,16,5,8,16
   244                        	.member	z,32,5,8,16
   245                        	.member	width,48,5,8,16
   246                        	.member	height,64,5,8,16
   247                        	.member	data,80,18,8,32
   248                        	.eos
   249                        	.stag	_k_WindowClass,272,29
   250                        	.member	cbSize,0,16,8,16
   251                        	.member	style,16,16,8,16
   252                        	.member	styleEx,32,16,8,16
   253                        	.member	pWndProc,48,654,8,32
   254                        	.member	hInstance,80,129,8,32
   255                        	.member	hIcon,112,129,8,32
   256                        	.member	hCursor,144,129,8,32
   257                        	.member	hbrBackground,176,129,8,32
   258                        	.member	lpszMenuName,208,142,8,32
   259                        	.member	lpszClassName,240,142,8,32
   260                        	.eos
   261                        	.stag	_ClickableRect,152,30
   262                        	.member	area,0,10,8,112,26
   263                        	.member	z,112,18,8,32
   264                        	.member	enabled,144,14,8,8
   265                        	.eos
   266                        	.stag	_NCClickableRect,136,31
   267                        	.member	area,0,10,8,112,26
   268                        	.member	msgType,112,16,8,16
   269                        	.member	enabled,128,14,8,8
  Thu Jul 29 2021 11:48                                                Page 6


   270                        	.eos
   271                        	.stag	_DragData,216,32
   272                        	.member	area,0,10,8,112,26
   273                        	.member	xoffset,112,5,8,16
   274                        	.member	yoffset,128,5,8,16
   275                        	.member	msgType,144,16,8,16
   276                        	.member	ncAction,160,16,8,16
   277                        	.member	isDrag,176,14,8,8
   278                        	.member	isResize,184,14,8,8
   279                        	.member	canDrag,192,14,8,8
   280                        	.member	canDrop,200,14,8,8
   281                        	.member	didDrag,208,14,8,8
   282                        	.eos
   283                        	.stag	_k_WindowStruct,3904,33
   284                        	.member	cbSize,0,16,8,16
   285                        	.member	style,16,18,8,32
   286                        	.member	styleEx,48,18,8,32
   287                        	.member	win_id,80,5,8,16
   288                        	.member	win_x,96,5,8,16
   289                        	.member	win_y,112,5,8,16
   290                        	.member	win_width,128,5,8,16
   291                        	.member	win_height,144,5,8,16
   292                        	.member	win_xoffset,160,5,8,16
   293                        	.member	win_yoffset,176,5,8,16
   294                        	.member	win_cxoffset,192,5,8,16
   295                        	.member	win_cyoffset,208,5,8,16
   296                        	.member	wndRect,224,10,8,112,26
   297                        	.member	clientRect,336,10,8,112,26
   298                        	.member	nonclientGadgets,448,106,8,0,31,16
   299                        	.member	clickable,2624,129,8,32
   300                        	.member	win_title,2656,110,8,0,32
   301                        	.member	Reserved0,2912,16,8,16
   302                        	.member	win_class,2928,110,8,0,16
   303                        	.member	win_class_name,3056,110,8,0,32
   304                        	.member	nBitmapLayer,3312,16,8,16
   305                        	.member	bgRegion,3328,129,8,32
   306                        	.member	procid,3360,18,8,32
   307                        	.member	pWndClass,3392,138,8,32,29
   308                        	.member	pParentWindow,3424,129,8,32
   309                        	.member	hMenu,3456,129,8,32
   310                        	.member	hPointer,3488,129,8,32
   311                        	.member	hBackground,3520,129,8,32
   312                        	.member	pChildWindows,3552,138,8,32,6
   313                        	.member	pChildHitList,3584,138,8,32,6
   314                        	.member	isVisible,3616,14,8,8
   315                        	.member	windowData,3624,129,8,32
   316                        	.member	clientData,3656,1121,8,32,6
   317                        	.member	isClosed,3848,14,8,8
   318                        	.member	isClosing,3856,14,8,8
   319                        	.member	isDesktop,3864,14,8,8
   320                        	.member	clickableNode,3872,138,8,32,5
   321                        	.eos
   322                        	.stag	_k_WindowStructEx,3880,34
   323                        	.member	cbSize,0,16,8,16
   324                        	.member	style,16,18,8,32
   325                        	.member	styleEx,48,18,8,32
   326                        	.member	win_id,80,5,8,16
   327                        	.member	win_x,96,5,8,16
  Thu Jul 29 2021 11:48                                                Page 7


   328                        	.member	win_y,112,5,8,16
   329                        	.member	win_width,128,5,8,16
   330                        	.member	win_height,144,5,8,16
   331                        	.member	win_xoffset,160,5,8,16
   332                        	.member	win_yoffset,176,5,8,16
   333                        	.member	win_cxoffset,192,5,8,16
   334                        	.member	win_cyoffset,208,5,8,16
   335                        	.member	wndRect,224,10,8,112,26
   336                        	.member	clientRect,336,10,8,112,26
   337                        	.member	nonclientGadgets,448,106,8,0,31,16
   338                        	.member	clickable,2624,129,8,32
   339                        	.member	win_title,2656,110,8,0,32
   340                        	.member	Reserved0,2912,16,8,16
   341                        	.member	win_class,2928,110,8,0,16
   342                        	.member	nBitmapLayer,3056,16,8,16
   343                        	.member	procid,3072,18,8,32
   344                        	.member	pWndClass,3104,138,8,32,29
   345                        	.member	pParentWindow,3136,129,8,32
   346                        	.member	hMenu,3168,129,8,32
   347                        	.member	hPointer,3200,129,8,32
   348                        	.member	hBackground,3232,129,8,32
   349                        	.member	pChildWindows,3264,138,8,32,6
   350                        	.member	pChildHitList,3296,138,8,32,6
   351                        	.member	isVisible,3328,14,8,8
   352                        	.member	windowData,3336,129,8,32
   353                        	.member	clientData,3368,1121,8,32,4
   354                        	.member	isClosed,3496,14,8,8
   355                        	.member	hWnd,3504,129,8,32
   356                        	.member	localRect,3536,10,8,112,26
   357                        	.member	globalRect,3648,10,8,112,26
   358                        	.member	clientOffsetRect,3760,10,8,112,26
   359                        	.member	isDesktop,3872,14,8,8
   360                        	.eos
   361                        	.stag	_FontMetric,32,35
   362                        	.member	width,0,5,8,16
   363                        	.member	height,16,5,8,16
   364                        	.eos
   365                        	.stag	_MenuStruct,280,36
   366                        	.member	cx,0,5,8,16
   367                        	.member	cy,16,5,8,16
   368                        	.member	width,32,5,8,16
   369                        	.member	height,48,5,8,16
   370                        	.member	fcolor,64,14,8,8
   371                        	.member	bcolor,72,14,8,8
   372                        	.member	chromeLeft,80,14,8,8
   373                        	.member	chromeRight1,88,14,8,8
   374                        	.member	chromeRight2,96,14,8,8
   375                        	.member	hFont,104,129,8,32
   376                        	.member	itemId,136,16,8,16
   377                        	.member	pCaption,152,142,8,32
   378                        	.member	subMenus,184,138,8,32,6
   379                        	.member	pBackground,216,129,8,32
   380                        	.member	hWndOwner,248,129,8,32
   381                        	.eos
   382                        	.stag	fake37_,160,37
   383                        	.member	menuId,0,16,8,16
   384                        	.member	caption,16,142,8,32
   385                        	.member	rect,48,10,8,112,26
  Thu Jul 29 2021 11:48                                                Page 8


   386                        	.eos
   387                        	.stag	fake38_,5152,38
   388                        	.member	pParent,0,138,8,32,33
   389                        	.member	rect,32,10,8,112,26
   390                        	.member	captions,144,1134,8,32,24
   391                        	.member	chrome,912,110,8,0,24
   392                        	.member	ids,1104,112,8,0,24
   393                        	.member	clickable,1488,106,8,0,30,24
   394                        	.member	selected,5136,16,8,16
   395                        	.eos
   396                        	.stag	_fx_button_t,96,39
   397                        	.member	pCaption,0,142,8,32
   398                        	.member	cCaption,32,16,8,16
   399                        	.member	data,48,129,8,32
   400                        	.member	captionPixelWidth,80,16,8,16
   401                        	.eos
   402                        	.stag	_fx_scrollbar_t,240,40
   403                        	.member	min,0,16,8,16
   404                        	.member	max,16,16,8,16
   405                        	.member	increment,32,16,8,16
   406                        	.member	stopsize,48,16,8,16
   407                        	.member	location,64,5,8,16
   408                        	.member	state,80,5,8,16
   409                        	.member	rectThumb,96,10,8,112,26
   410                        	.member	data,208,129,8,32
   411                        	.eos
   412                        	.stag	_fx_listbox_t,240,41
   413                        	.member	pos,0,5,8,16
   414                        	.member	selected,16,16,8,16
   415                        	.member	offsetX,32,5,8,16
   416                        	.member	offsetY,48,5,8,16
   417                        	.member	inc,64,5,8,16
   418                        	.member	direction,80,5,8,16
   419                        	.member	top,96,5,8,16
   420                        	.member	bottom,112,5,8,16
   421                        	.member	indexTop,128,5,8,16
   422                        	.member	indexBottom,144,5,8,16
   423                        	.member	maxItems,160,16,8,16
   424                        	.member	fontSet,176,142,8,32
   425                        	.member	data,208,129,8,32
   426                        	.eos
   427                        	.stag	_fx_textbox_t,144,42
   428                        	.member	pos,0,5,8,16
   429                        	.member	selected,16,16,8,16
   430                        	.member	offsetX,32,5,8,16
   431                        	.member	offsetY,48,5,8,16
   432                        	.member	isShifted,64,14,8,8
   433                        	.member	cursorState,72,14,8,8
   434                        	.member	fontSet,80,142,8,32
   435                        	.member	data,112,129,8,32
   436                        	.eos
   437                        	.stag	_fx_msgbox_t,144,43
   438                        	.member	pos,0,5,8,16
   439                        	.member	selected,16,16,8,16
   440                        	.member	offsetX,32,5,8,16
   441                        	.member	offsetY,48,5,8,16
   442                        	.member	isShifted,64,14,8,8
   443                        	.member	cursorState,72,14,8,8
  Thu Jul 29 2021 11:48                                                Page 9


   444                        	.member	fontSet,80,142,8,32
   445                        	.member	data,112,129,8,32
   446                        	.eos
   447                        	.stag	_fx_menuAnchor_t,272,44
   448                        	.member	pCaption,0,142,8,32
   449                        	.member	renderLayoutX,32,16,8,16
   450                        	.member	renderLayoutY,48,16,8,16
   451                        	.member	captionPixelWidth,64,16,8,16
   452                        	.member	data,80,129,8,32
   453                        	.member	droppedWindow,112,138,8,32,33
   454                        	.member	bytes,144,110,8,0,16
   455                        	.eos
   456                        	.stag	_SubMenuStruct,64,45
   457                        	.member	caption,0,142,8,32
   458                        	.member	action,32,641,8,32
   459                        	.eos
   460                        	.stag	_SubMenuListStruct,40,46
   461                        	.member	cMenus,0,14,8,8
   462                        	.member	psubmenus,8,9354,8,32,45
   463                        	.eos
   464                        	.stag	_fx_ComBuffer,2080,47
   465                        	.member	cbSize,0,16,8,16
   466                        	.member	cbBuffer,16,16,8,16
   467                        	.member	buffer,32,110,8,0,256
   468                        	.eos
   469                        	.stag	_fx_resource_header,72,48
   470                        	.member	magic,0,110,8,0,4
   471                        	.member	major,32,14,8,8
   472                        	.member	minor,40,14,8,8
   473                        	.member	type,48,14,8,8
   474                        	.member	reserved,56,14,8,8
   475                        	.member	resheaderSize,64,14,8,8
   476                        	.eos
   477                        	.stag	_fx_resource_header_font,144,49
   478                        	.member	title,0,110,8,0,16
   479                        	.member	height,128,14,8,8
   480                        	.member	width,136,14,8,8
   481                        	.eos
   482                        	.stag	_fx_resource_string,32,50
   483                        	.member	locale,0,110,8,0,2
   484                        	.member	entries,16,16,8,16
   485                        	.eos
   486                        	.stag	_fx_resource_string_entry,40,51
   487                        	.member	index,0,16,8,16
   488                        	.member	length,16,16,8,16
   489                        	.member	data,32,14,8,8
   490                        	.eos
   491                        	.line	1064
   492                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxos.h",8
   493                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxstringtable.h",0
   494                        	.line	90
   495                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxos.h",9
   496                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxc256u.h",0
   497                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
  Thu Jul 29 2021 11:48                                                Page 10


                    space\FXOS-Beta\src\fxtypes.h",0
   498                        	.line	1064
   499                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxc256u.h",5
   500                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fmx_vicky.h",0
   501                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxtypes.h",0
   502                        	.line	1064
   503                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fmx_vicky.h",11
   504                        	.line	72
   505                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxc256u.h",6
   506                        	.line	1960
   507                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxos.h",16
   508                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxkernel.h",0
   509                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxos.h",0
   510                        	.line	30
   511                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxkernel.h",5
   512                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxnode.h",0
   513                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxtypes.h",0
   514                        	.line	1064
   515                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxnode.h",11
   516                        	.line	118
   517                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxkernel.h",6
   518                        	.stag	_fx_api_call_table,8192,52
   519                        	.member	call_table,0,1121,8,32,256
   520                        	.eos
   521                        	.stag	_fx_zero_page_irq_data,32,53
   522                        	.member	data,0,110,8,0,4
   523                        	.eos
   524                        	.stag	_fx_zero_page,720,54
   525                        	.member	fxos_mouse_byte_0,0,14,8,8
   526                        	.member	fxos_mouse_byte_1,8,14,8,8
   527                        	.member	fxos_mouse_byte_2,16,14,8,8
   528                        	.member	fxos_mouse_byte_t,24,14,8,8
   529                        	.member	fxos_mouse_byte_x_l,32,14,8,8
   530                        	.member	fxos_mouse_byte_x_h,40,14,8,8
   531                        	.member	fxos_mouse_byte_y_l,48,14,8,8
   532                        	.member	fxos_mouse_byte_y_h,56,14,8,8
   533                        	.member	fxos_key_byte_0,64,14,8,8
   534                        	.member	fxos_key_byte_1,72,14,8,8
   535                        	.member	fxos_key_byte_2,80,14,8,8
   536                        	.member	fxos_mouse_ctl,88,14,8,8
   537                        	.member	fxos_mouse_index,96,14,8,8
   538                        	.member	fxos_mouse_status,104,14,8,8
   539                        	.member	Endianness,112,16,8,16
   540                        	.member	VersionMajor,128,16,8,16
   541                        	.member	VersionMinor,144,16,8,16
  Thu Jul 29 2021 11:48                                                Page 11


   542                        	.member	VersionRelease,160,16,8,16
   543                        	.member	topMemory,176,18,8,32
   544                        	.member	bottomMemory,208,18,8,32
   545                        	.member	availableMemory,240,18,8,32
   546                        	.member	availableMemoryK,272,18,8,32
   547                        	.member	availableHeapMemory,304,18,8,32
   548                        	.member	availableHeapMemoryK,336,18,8,32
   549                        	.member	fxos_console_row,368,16,8,16
   550                        	.member	fxos_console_col,384,16,8,16
   551                        	.member	executive,400,129,8,32
   552                        	.member	eventmanager,432,129,8,32
   553                        	.member	devicemanager,464,129,8,32
   554                        	.member	windowmanager,496,129,8,32
   555                        	.member	fxos_kernel_api,528,138,8,32,52
   556                        	.member	fxos_dos_api,560,138,8,32,52
   557                        	.member	fxos_gfx_api,592,138,8,32,52
   558                        	.member	fxos_gui_api,624,138,8,32,52
   559                        	.member	fxos_con_api,656,138,8,32,52
   560                        	.member	fxos_reserved_2_api,688,138,8,32,52
   561                        	.eos
   562                        	.stag	_fx_environment,96,55
   563                        	.member	variables,0,142,8,32
   564                        	.member	reserved1,32,5,8,16
   565                        	.member	reserved2,48,5,8,16
   566                        	.member	reserved3,64,5,8,16
   567                        	.member	reserved4,80,5,8,16
   568                        	.eos
   569                        	.stag	_debug_byte_bits,8,56
   570                        	.member	bit7,0,14,17,1
   571                        	.member	bit6,1,14,17,1
   572                        	.member	bit5,2,14,17,1
   573                        	.member	bit4,3,14,17,1
   574                        	.member	bit3,4,14,17,1
   575                        	.member	bit2,5,14,17,1
   576                        	.member	bit1,6,14,17,1
   577                        	.member	bit0,7,14,17,1
   578                        	.eos
   579                        	.stag	_k_segmentheader,160,57
   580                        	.member	version_major,0,14,8,8
   581                        	.member	version_minor,8,14,8,8
   582                        	.member	length,16,5,8,16
   583                        	.member	segment_start_addr,32,7,8,32
   584                        	.member	segment_end_addr,64,7,8,32
   585                        	.member	segment_size,96,7,8,32
   586                        	.member	main_entry_addr,128,7,8,32
   587                        	.eos
   588                        	.stag	_fx_device_driver,776,58
   589                        	.member	name,0,110,8,0,32
   590                        	.member	version,256,110,8,0,16
   591                        	.member	hmajor,384,110,8,0,8
   592                        	.member	hminor,448,110,8,0,8
   593                        	.member	type,512,14,8,8
   594                        	.member	designation,520,110,8,0,6
   595                        	.member	irq_ctl,568,16,8,16
   596                        	.member	f_driver_irq,584,129,8,32
   597                        	.member	driver_context,616,129,8,32
   598                        	.member	f_driver_load,648,129,8,32
   599                        	.member	f_driver_read,680,129,8,32
  Thu Jul 29 2021 11:48                                                Page 12


   600                        	.member	f_driver_write,712,129,8,32
   601                        	.member	f_driver_unload,744,129,8,32
   602                        	.eos
   603                        	.stag	_fx_block_device_driver,808,59
   604                        	.member	name,0,110,8,0,32
   605                        	.member	version,256,110,8,0,16
   606                        	.member	hmajor,384,110,8,0,8
   607                        	.member	hminor,448,110,8,0,8
   608                        	.member	type,512,14,8,8
   609                        	.member	designation,520,110,8,0,6
   610                        	.member	irq_ctl,568,16,8,16
   611                        	.member	f_driver_irq,584,129,8,32
   612                        	.member	driver_context,616,129,8,32
   613                        	.member	f_driver_load,648,129,8,32
   614                        	.member	f_driver_read,680,129,8,32
   615                        	.member	f_driver_write,712,129,8,32
   616                        	.member	f_driver_unload,744,129,8,32
   617                        	.member	f_driver_command,776,129,8,32
   618                        	.eos
   619                        	.stag	_k_irq_chain,128,60
   620                        	.member	handlers,0,5217,8,32,4
   621                        	.eos
   622                        	.line	473
   623                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxos.h",22
   624                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxconsole.h",0
   625                        	.file	"G:\devtools\WDCTools\wdc\Tools\include\
                    string.h",0
   626                        	.line	134
   627                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxconsole.h",5
   628                        	.file	"G:\devtools\WDCTools\wdc\Tools\include\
                    stdlib.h",0
   629                        	.line	205
   630                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxconsole.h",6
   631                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxtypes.h",0
   632                        	.line	1064
   633                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxconsole.h",7
   634                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxc256u.h",0
   635                        	.line	1960
   636                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxconsole.h",12
   637                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxstring.h",0
   638                        	.file	"G:\devtools\WDCTools\wdc\Tools\include\
                    stdlib.h",0
   639                        	.line	205
   640                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxstring.h",5
   641                        	.file	"G:\devtools\WDCTools\wdc\Tools\include\
                    string.h",0
   642                        	.line	134
   643                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
  Thu Jul 29 2021 11:48                                                Page 13


                    space\FXOS-Beta\src\fxstring.h",6
   644                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxtypes.h",0
   645                        	.line	1064
   646                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxstring.h",7
   647                        	.stag	_fx_string,64,61
   648                        	.member	size,0,16,8,16
   649                        	.member	pos,16,5,8,16
   650                        	.member	buffer,32,142,8,32
   651                        	.eos
   652                        	.line	139
   653                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxconsole.h",17
   654                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxeventmanager.h",0
   655                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxos.h",0
   656                        	.line	30
   657                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxeventmanager.h",5
   658                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxexec.h",0
   659                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxtypes.h",0
   660                        	.line	1064
   661                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxexec.h",5
   662                        	.stag	_fxos_executive_vtable,128,62
   663                        	.member	Init,0,8833,8,32
   664                        	.member	Configure,32,656,8,32
   665                        	.member	Query,64,656,8,32
   666                        	.member	Uninit,96,641,8,32
   667                        	.eos
   668                        	.line	86
   669                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxeventmanager.h",6
   670                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxnode.h",0
   671                        	.line	118
   672                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxeventmanager.h",7
   673                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxconsole.h",0
   674                        	.line	208
   675                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxeventmanager.h",8
   676                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxwindowmanager.h",0
   677                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxos.h",0
   678                        	.line	30
   679                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxwindowmanager.h",5
   680                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxmemorymanager.h",0
   681                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxos.h",0
  Thu Jul 29 2021 11:48                                                Page 14


   682                        	.line	30
   683                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxmemorymanager.h",5
   684                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\umm_malloc_cfg.h",0
   685                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxos_build_parameters.h",0
   686                        	.line	35
   687                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\umm_malloc_cfg.h",8
   688                        	.stag	UMM_HEAP_INFO_t,256,63
   689                        	.member	totalEntries,0,18,8,32
   690                        	.member	usedEntries,32,18,8,32
   691                        	.member	freeEntries,64,18,8,32
   692                        	.member	totalBlocks,96,18,8,32
   693                        	.member	usedBlocks,128,18,8,32
   694                        	.member	freeBlocks,160,18,8,32
   695                        	.member	maxFreeContiguousBlocks,192,18,8,32
   696                        	.member	blockSize,224,18,8,32
   697                        	.eos
   698                        	.line	199
   699                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxmemorymanager.h",6
   700                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\umm_malloc.h",0
   701                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxtypes.h",0
   702                        	.line	1064
   703                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\umm_malloc.h",11
   704                        	.line	24
   705                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxmemorymanager.h",7
   706                        	.stag	_fx_memory_map,2072,64
   707                        	.member	availableMemory,0,18,8,32
   708                        	.member	valid_segments,32,110,8,0,255
   709                        	.eos
   710                        	.stag	_fx_ipc_port,144,65
   711                        	.member	id,0,18,8,32
   712                        	.member	type,32,14,8,8
   713                        	.member	name,40,138,8,32,61
   714                        	.member	time,72,18,8,32
   715                        	.member	queue,104,138,8,32,7
   716                        	.member	reserved_1,136,14,8,8
   717                        	.eos
   718                        	.stag	_k_mem_alloc_header,80,66
   719                        	.member	user,0,14,8,8
   720                        	.member	attr,8,14,8,8
   721                        	.member	size,16,18,8,32
   722                        	.member	virtual,48,129,8,32
   723                        	.eos
   724                        	.line	129
   725                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxwindowmanager.h",6
   726                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxeventmanager.h",0
   727                        	.line	565
   728                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
  Thu Jul 29 2021 11:48                                                Page 15


                    space\FXOS-Beta\src\fxwindowmanager.h",7
   729                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxgfx.h",0
   730                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxfont.h",0
   731                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxtypes.h",0
   732                        	.line	1064
   733                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxfont.h",6
   734                        	.line	74
   735                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxgfx.h",5
   736                        	.stag	_click_detected,64,67
   737                        	.member	window,0,138,8,32,33
   738                        	.member	handler,32,641,8,32
   739                        	.eos
   740                        	.stag	_current_palette_map,400,68
   741                        	.member	CUR_DESKTOP,0,5,8,16
   742                        	.member	CUR_BACKGROUND,16,5,8,16
   743                        	.member	CUR_FONT,32,5,8,16
   744                        	.member	CUR_SELECTED_FONT,48,5,8,16
   745                        	.member	CUR_HIGHLIGHT_COLOR,64,5,8,16
   746                        	.member	CUR_WINDOWFRAME,80,5,8,16
   747                        	.member	CUR_WINDOWBORDER,96,5,8,16
   748                        	.member	CUR_WINDOWSHADOW,112,5,8,16
   749                        	.member	CUR_MENU,128,5,8,16
   750                        	.member	CUR_GADGET,144,5,8,16
   751                        	.member	CUR_COLOR,160,101,8,0,15
   752                        	.eos
   753                        	.line	359
   754                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxwindowmanager.h",8
   755                        	.stag	_fxos_winman_vtable,160,69
   756                        	.member	Events,0,641,8,32
   757                        	.member	ConfigureWindowManager,32,656,8,32
   758                        	.member	ProcessWindowEvent,64,8833,8,32
   759                        	.member	QueryWindowManager,96,656,8,32
   760                        	.member	DoWndProcs,128,641,8,32
   761                        	.eos
   762                        	.stag	fake70_,64,70
   763                        	.member	type,0,16,8,16
   764                        	.member	size,16,16,8,16
   765                        	.member	desktopAction,32,129,8,32
   766                        	.eos
   767                        	.stag	fake71_,96,71
   768                        	.member	type,0,16,8,16
   769                        	.member	caption,16,138,8,32,61
   770                        	.member	buttonType,48,16,8,16
   771                        	.member	x,64,5,8,16
   772                        	.member	y,80,5,8,16
   773                        	.eos
   774                        	.stag	_childMessage_t,64,72
   775                        	.member	msgType,0,16,8,16
   776                        	.member	msgData,16,129,8,32
   777                        	.member	dataSize,48,16,8,16
   778                        	.eos
   779                        	.line	591
  Thu Jul 29 2021 11:48                                                Page 16


   780                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxeventmanager.h",9
   781                        	.stag	_fx_main_loopvars,16,73
   782                        	.member	dummy,0,5,8,16
   783                        	.eos
   784                        	.stag	_fxMouseMessageData,64,74
   785                        	.member	button1,0,14,8,8
   786                        	.member	button2,8,14,8,8
   787                        	.member	button3,16,14,8,8
   788                        	.member	button4,24,14,8,8
   789                        	.member	x,32,16,8,16
   790                        	.member	y,48,16,8,16
   791                        	.eos
   792                        	.utag	marshalled_data,32,75
   793                        	.member	byteValue,0,14,11,8
   794                        	.member	verbValue,0,110,11,0,2
   795                        	.member	intValue,0,16,11,16
   796                        	.member	longValue,0,18,11,32
   797                        	.member	pointerValue,0,129,11,32
   798                        	.eos
   799                        	.stag	_fx_eventProcess,64,76
   800                        	.member	process,0,138,8,32,20
   801                        	.member	eventProc,32,641,8,32
   802                        	.eos
   803                        	.stag	_mouse_msg_state,184,77
   804                        	.member	lastEvent,0,18,8,32
   805                        	.member	buttonLeftDown,32,14,8,8
   806                        	.member	lastLeftDown,40,18,8,32
   807                        	.member	buttonRightDown,72,14,8,8
   808                        	.member	lastRightDown,80,18,8,32
   809                        	.member	buttonMiddleDown,112,14,8,8
   810                        	.member	lastMiddleDown,120,18,8,32
   811                        	.member	lastX,152,16,8,16
   812                        	.member	lastY,168,16,8,16
   813                        	.eos
   814                        	.stag	_fxos_eventmanager_vtable,192,78
   815                        	.member	EventQueue,0,138,8,32,7
   816                        	.member	Init,32,8833,8,32
   817                        	.member	Run,64,656,8,32
   818                        	.member	Configure,96,656,8,32
   819                        	.member	Query,128,656,8,32
   820                        	.member	Uninit,160,641,8,32
   821                        	.eos
   822                        	.stag	_k_clipboard_data,168,79
   823                        	.member	type,0,14,8,8
   824                        	.member	readable,8,110,8,0,16
   825                        	.member	data,136,129,8,32
   826                        	.eos
   827                        	.line	565
   828                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxconsole.h",18
   829                        	.stag	_fx_spinner_ctx,48,80
   830                        	.member	index,0,5,8,16
   831                        	.member	spinner,16,142,8,32
   832                        	.eos
   833                        	.stag	_fx_console_ctx,1144,81
   834                        	.member	lineBufferIndex,0,5,8,16
   835                        	.member	lineBuffer,16,110,8,0,128
  Thu Jul 29 2021 11:48                                                Page 17


   836                        	.member	isShifted,1040,14,8,8
   837                        	.member	userData,1048,129,8,32
   838                        	.member	screenBuffer,1080,129,8,32
   839                        	.member	Reserved1,1112,129,8,32
   840                        	.eos
   841                        	.stag	_token,64,82
   842                        	.member	type,0,5,8,16
   843                        	.member	depth,16,16,8,16
   844                        	.member	text,32,142,8,32
   845                        	.eos
   846                        	.stag	_command_args,64,83
   847                        	.member	proc,0,656,8,32
   848                        	.member	tokens,32,138,8,32,5
   849                        	.eos
   850                        	.line	208
   851                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxos.h",23
   852                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxstring.h",0
   853                        	.line	139
   854                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxos.h",24
   855                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxnode.h",0
   856                        	.line	118
   857                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxos.h",25
   858                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\ff.h",0
   859                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\ffconf.h",0
   860                        	.line	298
   861                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\ff.h",29
   862                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxtypes.h",0
   863                        	.line	1064
   864                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\ff.h",30
   865                        	.stag	fake84_,4504,84
   866                        	.member	fs_type,0,14,8,8
   867                        	.member	pdrv,8,14,8,8
   868                        	.member	n_fats,16,14,8,8
   869                        	.member	wflag,24,14,8,8
   870                        	.member	fsi_flag,32,14,8,8
   871                        	.member	id,40,5,8,16
   872                        	.member	n_rootdir,56,5,8,16
   873                        	.member	csize,72,5,8,16
   874                        	.member	lfnbuf,88,144,8,32
   875                        	.member	last_clst,120,18,8,32
   876                        	.member	free_clst,152,18,8,32
   877                        	.member	n_fatent,184,18,8,32
   878                        	.member	fsize,216,18,8,32
   879                        	.member	volbase,248,18,8,32
   880                        	.member	fatbase,280,18,8,32
   881                        	.member	dirbase,312,18,8,32
   882                        	.member	database,344,18,8,32
   883                        	.member	winsect,376,18,8,32
  Thu Jul 29 2021 11:48                                                Page 18


   884                        	.member	win,408,110,8,0,512
   885                        	.eos
   886                        	.stag	fake85_,128,85
   887                        	.member	fs,0,138,8,32,84
   888                        	.member	id,32,5,8,16
   889                        	.member	attr,48,14,8,8
   890                        	.member	stat,56,14,8,8
   891                        	.member	sclust,64,18,8,32
   892                        	.member	objsize,96,18,8,32
   893                        	.eos
   894                        	.stag	fake86_,4400,86
   895                        	.member	obj,0,10,8,128,85
   896                        	.member	flag,128,14,8,8
   897                        	.member	err,136,14,8,8
   898                        	.member	fptr,144,18,8,32
   899                        	.member	clust,176,18,8,32
   900                        	.member	sect,208,18,8,32
   901                        	.member	dir_sect,240,18,8,32
   902                        	.member	dir_ptr,272,142,8,32
   903                        	.member	buf,304,110,8,0,512
   904                        	.eos
   905                        	.stag	fake87_,416,87
   906                        	.member	obj,0,10,8,128,85
   907                        	.member	dptr,128,18,8,32
   908                        	.member	clust,160,18,8,32
   909                        	.member	sect,192,18,8,32
   910                        	.member	dir,224,142,8,32
   911                        	.member	fn,256,110,8,0,12
   912                        	.member	blk_ofs,352,18,8,32
   913                        	.member	pat,384,142,8,32
   914                        	.eos
   915                        	.stag	fake88_,2224,88
   916                        	.member	fsize,0,18,8,32
   917                        	.member	fdate,32,5,8,16
   918                        	.member	ftime,48,5,8,16
   919                        	.member	fattrib,64,14,8,8
   920                        	.member	altname,72,110,8,0,13
   921                        	.member	fname,176,110,8,0,256
   922                        	.eos
   923                        	.stag	fake89_,80,89
   924                        	.member	fmt,0,14,8,8
   925                        	.member	n_fat,8,14,8,8
   926                        	.member	align,16,16,8,16
   927                        	.member	n_root,32,16,8,16
   928                        	.member	au_size,48,18,8,32
   929                        	.eos
   930                        	.line	429
   931                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxos.h",26
   932                        	.line	30
   933                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\flpydsk.c",11
   934                        ;#include "flpydsk.h"
   935                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\flpydsk.h",0
   936                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxtypes.h",0
   937                        	.line	1064
  Thu Jul 29 2021 11:48                                                Page 19


   938                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\flpydsk.h",14
   939                        	.line	68
   940                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\flpydsk.c",12
   941                        ;
   942                        ;//void floppy_init();
   943                        ;void flpydsk_send_command(uint8_t cmd);
   944                        ;void flpydsk_reset(void);
   945                        ;uint8_t flpydsk_read_status(void);
   946                        ;uint8_t flpydsk_read_data(void);
   947                        ;void flpydsk_dma_read(void);
   948                        ;void flpydsk_disable_controller(void);
   949                        ;void flpydsk_enable_controller(void);
   950                        ;
   951                        ;
   952                        ;//===============================================
                    =============================
   953                        ;//    IMPLEMENTATION PRIVATE DEFINITIONS / ENUMER
                    ATIONS / SIMPLE TYPEDEFS
   954                        ;//===============================================
                    =============================
   955                        ;
   956                        ;/*
   957                        ; **	Controller I/O Ports. Please see chapter
                     for additional ports
   958                        ; */
   959                        ;/* MSR flags */
   960                        ;#define MSR_RQM  0x80
   961                        ;#define MSR_DIO  0x40
   962                        ;#define MSR_NDMA 0x20
   963                        ;#define MSR_CB   0x10
   964                        ;
   965                        ;#define MSR_ACTD 0x08
   966                        ;#define MSR_ACTC 0x04
   967                        ;#define MSR_ACTB 0x02
   968                        ;#define MSR_ACTA 0x01
   969                        ;
   970                        ;#define MSR_OK_READ (MSR_RQM | MSR_DIO | MSR_CB)
   971                        ;
   972                        ;/* DIR flags */
   973                        ;#define DIR_DC 0x80
   974                        ;
   975                        ;
   976                        ;#define SECTOR_SIZE 512
   977                        ;#define SEC_PER_TRACK 18
   978                        ;
   979                        ;#define MS 1000
   980                        ;
   981                        ;#define FL_HLT (8*MS)
   982                        ;#define FL_SPIN_UP (400*MS)
   983                        ;#define FL_SPIN_DN (3000*MS)
   984                        ;#define FL_SEL_D (20*MS)
   985                        ;#define FL_INT_TMT (30000*MS)
   986                        ;
   987                        ;#define CMD_SPECIFY  0x03
   988                        ;#define CMD_WRITE    0x45
   989                        ;#define CMD_READ     0x46
  Thu Jul 29 2021 11:48                                                Page 20


   990                        ;#define CMD_SENSEI   0x08
   991                        ;#define CMD_READID   0x4A
   992                        ;#define CMD_RECAL    0x07
   993                        ;#define CMD_SEEK     0x0F
   994                        ;#define CMD_VERSION  0x10
   995                        ;#define CMD_CONF     0x13
   996                        ;
   997                        ;/**
   998                        ; *	Bits 0-4 of command byte. Please see cha
                    pter for additional commands
   999                        ; */
  1000                        ;
  1001                        ;enum FLPYDSK_CMD
  1002                        ;{
  1003                        ;
  1004                        ;	FDC_CMD_READ_TRACK = 2,
  1005                        ;	FDC_CMD_SPECIFY = 3,
  1006                        ;	FDC_CMD_CHECK_STAT = 4,
  1007                        ;	FDC_CMD_WRITE_SECT = 5,
  1008                        ;	FDC_CMD_READ_SECT = 6,
  1009                        ;	FDC_CMD_CALIBRATE = 7,
  1010                        ;	FDC_CMD_CHECK_INT = 8,
  1011                        ;	FDC_CMD_FORMAT_TRACK = 0xd,
  1012                        ;	FDC_CMD_SEEK = 0xf
  1013                        ;};
  1014                        ;
  1015                        ;/**
  1016                        ; *	Additional command masks. Can be masked 
                    with above commands
  1017                        ; */
  1018                        ;
  1019                        ;enum FLPYDSK_CMD_EXT
  1020                        ;{
  1021                        ;
  1022                        ;	FDC_CMD_EXT_SKIP = 0x20,	//00100000
  1023                        ;	FDC_CMD_EXT_DENSITY = 0x40,	//01000000
  1024                        ;	FDC_CMD_EXT_MULTITRACK = 0x80	//10000000
  1025                        ;};
  1026                        ;
  1027                        ;/*
  1028                        ; **	Digital Output Register
  1029                        ; */
  1030                        ;
  1031                        ;enum FLPYDSK_DOR_MASK
  1032                        ;{
  1033                        ;
  1034                        ;	FLPYDSK_DOR_MASK_DRIVE0 = 0,	//00000000	
                    = here for completeness sake
  1035                        ;	FLPYDSK_DOR_MASK_DRIVE1 = 1,	//00000001
  1036                        ;	FLPYDSK_DOR_MASK_DRIVE2 = 2,	//00000010
  1037                        ;	FLPYDSK_DOR_MASK_DRIVE3 = 3,	//00000011
  1038                        ;	FLPYDSK_DOR_MASK_RESET = 4,	//00000100
  1039                        ;	FLPYDSK_DOR_MASK_DMA = 8,	//00001000
  1040                        ;	FLPYDSK_DOR_MASK_DRIVE0_MOTOR = 16,	//000100
                    00
  1041                        ;	FLPYDSK_DOR_MASK_DRIVE1_MOTOR = 32,	//001000
                    00
  1042                        ;	FLPYDSK_DOR_MASK_DRIVE2_MOTOR = 64,	//010000
  Thu Jul 29 2021 11:48                                                Page 21


                    00
  1043                        ;	FLPYDSK_DOR_MASK_DRIVE3_MOTOR = 128	//100000
                    00
  1044                        ;};
  1045                        ;
  1046                        ;/**
  1047                        ; *	Main Status Register
  1048                        ; */
  1049                        ;
  1050                        ;enum FLPYDSK_MSR_MASK
  1051                        ;{
  1052                        ;
  1053                        ;	FLPYDSK_MSR_MASK_DRIVE1_POS_MODE = 1,	//000000
                    01
  1054                        ;	FLPYDSK_MSR_MASK_DRIVE2_POS_MODE = 2,	//000000
                    10
  1055                        ;	FLPYDSK_MSR_MASK_DRIVE3_POS_MODE = 4,	//000001
                    00
  1056                        ;	FLPYDSK_MSR_MASK_DRIVE4_POS_MODE = 8,	//000010
                    00
  1057                        ;	FLPYDSK_MSR_MASK_BUSY = 16,	//00010000
  1058                        ;	FLPYDSK_MSR_MASK_DMA = 32,	//00100000
  1059                        ;	FLPYDSK_MSR_MASK_DATAIO = 64, //01000000
  1060                        ;	FLPYDSK_MSR_MASK_DATAREG = 128	//10000000
  1061                        ;};
  1062                        ;
  1063                        ;/**
  1064                        ; *	Controller Status Port 0
  1065                        ; */
  1066                        ;
  1067                        ;enum FLPYDSK_ST0_MASK
  1068                        ;{
  1069                        ;
  1070                        ;	FLPYDSK_ST0_MASK_DRIVE0 = 0,		//000000
                    00	=	for completness sake
  1071                        ;	FLPYDSK_ST0_MASK_DRIVE1 = 1,		//000000
                    01
  1072                        ;	FLPYDSK_ST0_MASK_DRIVE2 = 2,		//000000
                    10
  1073                        ;	FLPYDSK_ST0_MASK_DRIVE3 = 3,		//000000
                    11
  1074                        ;	FLPYDSK_ST0_MASK_HEADACTIVE = 4,		
                    //00000100
  1075                        ;	FLPYDSK_ST0_MASK_NOTREADY = 8,		//000010
                    00
  1076                        ;	FLPYDSK_ST0_MASK_UNITCHECK = 16,		
                    //00010000
  1077                        ;	FLPYDSK_ST0_MASK_SEEKEND = 32,		//001000
                    00
  1078                        ;	FLPYDSK_ST0_MASK_INTCODE = 64		//110000
                    00
  1079                        ;};
  1080                        ;
  1081                        ;/*
  1082                        ; ** LPYDSK_ST0_MASK_INTCODE types
  1083                        ; */
  1084                        ;
  1085                        ;enum FLPYDSK_ST0_INTCODE_TYP
  Thu Jul 29 2021 11:48                                                Page 22


  1086                        ;{
  1087                        ;
  1088                        ;	FLPYDSK_ST0_TYP_NORMAL = 0,
  1089                        ;	FLPYDSK_ST0_TYP_ABNORMAL_ERR = 1,
  1090                        ;	FLPYDSK_ST0_TYP_INVALID_ERR = 2,
  1091                        ;	FLPYDSK_ST0_TYP_NOTREADY = 3
  1092                        ;};
  1093                        ;
  1094                        ;/**
  1095                        ; *	GAP 3 sizes
  1096                        ; */
  1097                        ;
  1098                        ;enum FLPYDSK_GAP3_LENGTH
  1099                        ;{
  1100                        ;
  1101                        ;	FLPYDSK_GAP3_LENGTH_STD = 42,
  1102                        ;	FLPYDSK_GAP3_LENGTH_5_14 = 32,
  1103                        ;	FLPYDSK_GAP3_LENGTH_3_5 = 27
  1104                        ;};
  1105                        ;
  1106                        ;/*
  1107                        ; **	Formula: 2^sector_number * 128, where ^ 
                    denotes "to the power of"
  1108                        ; */
  1109                        ;
  1110                        ;enum FLPYDSK_SECTOR_DTL
  1111                        ;{
  1112                        ;
  1113                        ;	FLPYDSK_SECTOR_DTL_128 = 0,
  1114                        ;	FLPYDSK_SECTOR_DTL_256 = 1,
  1115                        ;	FLPYDSK_SECTOR_DTL_512 = 2,
  1116                        ;	FLPYDSK_SECTOR_DTL_1024 = 4
  1117                        ;};
  1118                        ;
  1119                        ;/**
  1120                        ; *	Constants
  1121                        ; */
  1122                        ;
  1123                        ;//! floppy irq
  1124                        ;const int FLOPPY_IRQ = 6;
  1125                        	data
  1126                        	xdef	~~FLOPPY_IRQ
  1127                        ~~FLOPPY_IRQ:
  1128 00:0000: 06 00        	dw	$6
  1129 00:0002:              	ends
  1130                        ;
  1131                        ;//! sectors per track
  1132                        ;const int FLPY_SECTORS_PER_TRACK = 18;
  1133                        	data
  1134                        	xdef	~~FLPY_SECTORS_PER_TRACK
  1135                        ~~FLPY_SECTORS_PER_TRACK:
  1136 00:0002: 12 00        	dw	$12
  1137 00:0004:              	ends
  1138                        ;
  1139                        ;//! dma tranfer buffer starts here and ends at 0x
                    1000+64k
  1140                        ;//! You can change this as needed. It must be bel
                    ow 16MB and in idenitity mapped memory!
  Thu Jul 29 2021 11:48                                                Page 23


  1141                        ;const LPCHAR DMA_BUFFER = (LPCHAR) 0x1E1000;
  1142                        	data
  1143                        	xdef	~~DMA_BUFFER
  1144                        ~~DMA_BUFFER:
  1145 00:0004: 00 10 1E 00  	dl	$1E1000
  1146 00:0008:              	ends
  1147                        ;
  1148                        ;//===============================================
                    =============================
  1149                        ;//    IMPLEMENTATION PRIVATE CLASS PROTOTYPES / E
                    XTERNAL CLASS REFERENCES
  1150                        ;//===============================================
                    =============================
  1151                        ;//===============================================
                    =============================
  1152                        ;//    IMPLEMENTATION PRIVATE STRUCTURES / UTILITY
                     CLASSES
  1153                        ;//===============================================
                    =============================
  1154                        ;//===============================================
                    =============================
  1155                        ;//    IMPLEMENTATION REQUIRED EXTERNAL REFERENCES
                     (AVOID)
  1156                        ;//===============================================
                    =============================
  1157                        ;
  1158                        ;//! used to wait in miliseconds
  1159                        ;extern void sleep(int);
  1160                        ;
  1161                        ;//===============================================
                    =============================
  1162                        ;//    IMPLEMENTATION PRIVATE DATA
  1163                        ;//===============================================
                    =============================
  1164                        ;
  1165                        ;//! current working drive. Defaults to 0 which sh
                    ould be fine on most systems
  1166                        ;static uint8_t _CurrentDrive = 0;
  1167                        	data
  1168                        ~~_CurrentDrive:
  1169 00:0008: 00           	db	$0
  1170 00:0009:              	ends
  1171                        ;
  1172                        ;//! set when IRQ fires
  1173                        ;UCHAR _FloppyDiskIRQ = 0;
  1174                        	data
  1175                        	xdef	~~_FloppyDiskIRQ
  1176                        ~~_FloppyDiskIRQ:
  1177 00:0009: 00           	db	$0
  1178 00:000A:              	ends
  1179                        ;
  1180                        ;#pragma section CODE=FLPY,offset $5:7FFF
  1181                        FLPY	section	offset $5:7FFF
  1182 05:7FFF:              	ends
  1183                        ;//===============================================
                    =============================
  1184                        ;//    INTERFACE DATA
  1185                        ;//===============================================
  Thu Jul 29 2021 11:48                                                Page 24


                    =============================
  1186                        ;//===============================================
                    =============================
  1187                        ;//    IMPLEMENTATION PRIVATE FUNCTION PROTOTYPES
  1188                        ;//===============================================
                    =============================
  1189                        ;//===============================================
                    =============================
  1190                        ;//    IMPLEMENTATION PRIVATE FUNCTIONS
  1191                        ;//===============================================
                    =============================
  1192                        ;
  1193                        ;/**
  1194                        ; *	DMA Routines.
  1195                        ; **	The DMA (Direct Memory Access) controlle
                    r allows the FDC to send data to the DMA,
  1196                        ; **	which can put the data in memory. While 
                    the FDC can be programmed to not use DMA,
  1197                        ; **  it is not very well supported on emulators o
                    r virtual machines. Because of this, we
  1198                        ; **  will be using the DMA for data transfers. Th
                    e DMA is a complex controller, because of
  1199                        ; **  this we will cover it in the next tutorial. 
                    For now, please do not worry about the DMA
  1200                        ; **  routines to much :)
  1201                        ; */
  1202                        ;/*
  1203                        ;void flpydsk_wait_irq(void)
  1204                        ;{
  1205                        ;
  1206                        ;	 int timeout = 0x7FFF;
  1207                        ;
  1208                        ;	 k_debug_hex("flpydsk_wait_irq:enter:",(inportb(
                    FLPYDSK_MSR) & 0xC0));
  1209                        ;
  1210                        ;	 while(((inportb(FLPYDSK_MSR) & 0xC0) != 0x80) &
                    & timeout)
  1211                        ;	 {
  1212                        ;
  1213                        ;		 timeout--;
  1214                        ;	 }
  1215                        ;
  1216                        ;	 k_debug_hex("flpydsk_wait_irq:exit:",(inportb(F
                    LPYDSK_MSR) & 0xC0));
  1217                        ;
  1218                        ;}
  1219                        ;*/
  1220                        ;
  1221                        ;//! initialize DMA to use phys addr 84k-128k
  1222                        ;void flpydsk_initialize_dma(void)
  1223                        ;{
  1224                        	.line	268
  1225                        	.line	269
  1226                        	FLPY
  1227                        	xdef	~~flpydsk_initialize_dma
  1228                        	func
  1229                        	.function	269
  1230                        ~~flpydsk_initialize_dma:
  Thu Jul 29 2021 11:48                                                Page 25


  1231                        	longa	on
  1232                        	longi	on
  1233 05:7FFF: 3B           	tsc
  1234 05:8000: 38           	sec
  1235 05:8001: E9 00 00     	sbc	#L2
  1236 05:8004: 1B           	tcs
  1237 05:8005: 0B           	phd
  1238 05:8006: 5B           	tcd
  1239                        	.block	269
  1240                        ;	/*
  1241                        ;	 outportb(0x0a, 0x06);	//mask dma channel 2
  1242                        ;	 outportb(0xd8, 0xff);	//reset master flip-flop
  1243                        ;	 outportb(0x04, 0);     //address=0x1000
  1244                        ;	 outportb(0x04, 0x10);
  1245                        ;	 outportb(0xd8, 0xff);  //reset master flip-flop
  1246                        ;	 outportb(0x05, 0xff); //count to 0x23ff (number
                     of bytes in a 3.5" floppy disk track)
  1247                        ;	 outportb(0x05, 0x23);
  1248                        ;	 outportb(0x80, 0);     //external page register
                     = 0
  1249                        ;	 outportb(0x0a, 0x02);  //unmask dma channel 2
  1250                        ;	 */
  1251                        ;}
  1252                        	.line	281
  1253                        L5:
  1254 05:8007: 2B           	pld
  1255 05:8008: 3B           	tsc
  1256 05:8009: 18           	clc
  1257 05:800A: 69 00 00     	adc	#L2
  1258 05:800D: 1B           	tcs
  1259 05:800E: 6B           	rtl
  1260                        	.endblock	281
  1261             00000000   L2	equ	0
  1262             00000001   L3	equ	1
  1263 05:800F:              	ends
  1264                        	efunc
  1265                        	.endfunc	281,1,0
  1266                        	.line	281
  1267                        ;
  1268                        ;//! prepare the DMA for read transfer
  1269                        ;void flpydsk_dma_read(void)
  1270                        ;{
  1271                        	.line	284
  1272                        	.line	285
  1273                        	FLPY
  1274                        	xdef	~~flpydsk_dma_read
  1275                        	func
  1276                        	.function	285
  1277                        ~~flpydsk_dma_read:
  1278                        	longa	on
  1279                        	longi	on
  1280 05:800F: 3B           	tsc
  1281 05:8010: 38           	sec
  1282 05:8011: E9 00 00     	sbc	#L6
  1283 05:8014: 1B           	tcs
  1284 05:8015: 0B           	phd
  1285 05:8016: 5B           	tcd
  1286                        	.block	285
  Thu Jul 29 2021 11:48                                                Page 26


  1287                        ;	/*
  1288                        ;	 outportb(0x0a, 0x06); //mask dma channel 2
  1289                        ;	 outportb(0x0b, 0x56); //single transfer, addres
                    s increment, autoinit, read, channel 2
  1290                        ;	 outportb(0x0a, 0x02); //unmask dma channel 2
  1291                        ;	 */
  1292                        ;}
  1293                        	.line	291
  1294                        L9:
  1295 05:8017: 2B           	pld
  1296 05:8018: 3B           	tsc
  1297 05:8019: 18           	clc
  1298 05:801A: 69 00 00     	adc	#L6
  1299 05:801D: 1B           	tcs
  1300 05:801E: 6B           	rtl
  1301                        	.endblock	291
  1302             00000000   L6	equ	0
  1303             00000001   L7	equ	1
  1304 05:801F:              	ends
  1305                        	efunc
  1306                        	.endfunc	291,1,0
  1307                        	.line	291
  1308                        ;
  1309                        ;//! prepare the DMA for write transfer
  1310                        ;void flpydsk_dma_write(void)
  1311                        ;{
  1312                        	.line	294
  1313                        	.line	295
  1314                        	FLPY
  1315                        	xdef	~~flpydsk_dma_write
  1316                        	func
  1317                        	.function	295
  1318                        ~~flpydsk_dma_write:
  1319                        	longa	on
  1320                        	longi	on
  1321 05:801F: 3B           	tsc
  1322 05:8020: 38           	sec
  1323 05:8021: E9 00 00     	sbc	#L10
  1324 05:8024: 1B           	tcs
  1325 05:8025: 0B           	phd
  1326 05:8026: 5B           	tcd
  1327                        	.block	295
  1328                        ;	/*
  1329                        ;	 outportb(0x0a, 0x06); //mask dma channel 2
  1330                        ;	 outportb(0x0b, 0x5a); //single transfer, addres
                    s increment, autoinit, write, channel 2
  1331                        ;	 outportb(0x0a, 0x02); //unmask dma channel 2
  1332                        ;	 */
  1333                        ;}
  1334                        	.line	301
  1335                        L13:
  1336 05:8027: 2B           	pld
  1337 05:8028: 3B           	tsc
  1338 05:8029: 18           	clc
  1339 05:802A: 69 00 00     	adc	#L10
  1340 05:802D: 1B           	tcs
  1341 05:802E: 6B           	rtl
  1342                        	.endblock	301
  Thu Jul 29 2021 11:48                                                Page 27


  1343             00000000   L10	equ	0
  1344             00000001   L11	equ	1
  1345 05:802F:              	ends
  1346                        	efunc
  1347                        	.endfunc	301,1,0
  1348                        	.line	301
  1349                        ;
  1350                        ;/**
  1351                        ; *	Basic Controller I/O Routines
  1352                        ; */
  1353                        ;
  1354                        ;//! return fdc status
  1355                        ;uint8_t flpydsk_read_status(void)
  1356                        ;{
  1357                        	.line	308
  1358                        	.line	309
  1359                        	FLPY
  1360                        	xdef	~~flpydsk_read_status
  1361                        	func
  1362                        	.function	309
  1363                        ~~flpydsk_read_status:
  1364                        	longa	on
  1365                        	longi	on
  1366 05:802F: 3B           	tsc
  1367 05:8030: 38           	sec
  1368 05:8031: E9 01 00     	sbc	#L14
  1369 05:8034: 1B           	tcs
  1370 05:8035: 0B           	phd
  1371 05:8036: 5B           	tcd
  1372                        	.block	309
  1373                        ;	uint8_t status = 0;
  1374                        ;
  1375                        ;	sleep(20);
  1376             00000000   status_1	set	0
  1377                        	.sym	status,0,14,1,8
  1378 05:8037: E2 20        	sep	#$20
  1379                        	longa	off
  1380 05:8039: 64 01        	stz	<L15+status_1
  1381 05:803B: C2 20        	rep	#$20
  1382                        	longa	on
  1383                        	.line	312
  1384 05:803D: F4 14 00     	pea	#<$14
  1385 05:8040: 22 xx xx xx  	jsl	~~sleep
  1386                        ;	status = inportb(FLPYDSK_MSR);
  1387                        	.line	313
  1388 05:8044: E2 20        	sep	#$20
  1389                        	longa	off
  1390 05:8046: AF F4 13 AF  	lda	>11473908
  1391 05:804A: 85 01        	sta	<L15+status_1
  1392 05:804C: C2 20        	rep	#$20
  1393                        	longa	on
  1394                        ;	k_debug_hex("flpydsk_read_status:", status);
  1395                        	.line	314
  1396 05:804E: D4 01        	pei	<L15+status_1
  1397 05:8050: F4 xx xx     	pea	#^L1
  1398 05:8053: F4 xx xx     	pea	#<L1
  1399 05:8056: 22 xx xx xx  	jsl	~~k_debug_hex
  1400                        ;
  Thu Jul 29 2021 11:48                                                Page 28


  1401                        ;	return status;
  1402                        	.line	316
  1403 05:805A: A5 01        	lda	<L15+status_1
  1404 05:805C: 29 FF 00     	and	#$ff
  1405                        L17:
  1406 05:805F: A8           	tay
  1407 05:8060: 2B           	pld
  1408 05:8061: 3B           	tsc
  1409 05:8062: 18           	clc
  1410 05:8063: 69 01 00     	adc	#L14
  1411 05:8066: 1B           	tcs
  1412 05:8067: 98           	tya
  1413 05:8068: 6B           	rtl
  1414                        ;}
  1415                        	.line	317
  1416                        	.endblock	317
  1417             00000001   L14	equ	1
  1418             00000001   L15	equ	1
  1419 05:8069:              	ends
  1420                        	efunc
  1421                        	.endfunc	317,1,1
  1422                        	.line	317
  1423                        	data
  1424                        L1:
  1425 00:000A: 66 6C 70 79  	db	$66,$6C,$70,$79,$64,$73,$6B,$5F,$72,$65,
                    $61,$64,$5F,$73,$74
       00:000E: 64 73 6B 5F 
       00:0012: 72 65 61 64 
       00:0016: 5F 73 74 
  1426 00:0019: 61 74 75 73  	db	$61,$74,$75,$73,$3A,$00
       00:001D: 3A 00 
  1427 00:001F:              	ends
  1428                        ;
  1429                        ;//! write to the fdc dor
  1430                        ;void flpydsk_write_dor(uint8_t val)
  1431                        ;{
  1432                        	.line	320
  1433                        	.line	321
  1434                        	FLPY
  1435                        	xdef	~~flpydsk_write_dor
  1436                        	func
  1437                        	.function	321
  1438                        ~~flpydsk_write_dor:
  1439                        	longa	on
  1440                        	longi	on
  1441 05:8069: 3B           	tsc
  1442 05:806A: 38           	sec
  1443 05:806B: E9 00 00     	sbc	#L19
  1444 05:806E: 1B           	tcs
  1445 05:806F: 0B           	phd
  1446 05:8070: 5B           	tcd
  1447             00000004   val_0	set	4
  1448                        	.block	321
  1449                        ;	k_debug_hex("flpydsk_write_dor:", val);
  1450                        	.sym	val,4,14,6,8
  1451                        	.line	322
  1452 05:8071: D4 04        	pei	<L19+val_0
  1453 05:8073: F4 xx xx     	pea	#^L18
  Thu Jul 29 2021 11:48                                                Page 29


  1454 05:8076: F4 xx xx     	pea	#<L18
  1455 05:8079: 22 xx xx xx  	jsl	~~k_debug_hex
  1456                        ;	//! write the digital output register
  1457                        ;	outportb(FLPYDSK_DOR, val);
  1458                        	.line	324
  1459 05:807D: E2 20        	sep	#$20
  1460                        	longa	off
  1461 05:807F: A5 04        	lda	<L19+val_0
  1462 05:8081: 8F F2 13 AF  	sta	>11473906
  1463 05:8085: C2 20        	rep	#$20
  1464                        	longa	on
  1465                        ;
  1466                        ;	//sleep(20);
  1467                        ;}
  1468                        	.line	327
  1469                        L22:
  1470 05:8087: A5 02        	lda	<L19+2
  1471 05:8089: 85 04        	sta	<L19+2+2
  1472 05:808B: A5 01        	lda	<L19+1
  1473 05:808D: 85 03        	sta	<L19+1+2
  1474 05:808F: 2B           	pld
  1475 05:8090: 3B           	tsc
  1476 05:8091: 18           	clc
  1477 05:8092: 69 02 00     	adc	#L19+2
  1478 05:8095: 1B           	tcs
  1479 05:8096: 6B           	rtl
  1480                        	.endblock	327
  1481             00000000   L19	equ	0
  1482             00000001   L20	equ	1
  1483 05:8097:              	ends
  1484                        	efunc
  1485                        	.endfunc	327,1,0
  1486                        	.line	327
  1487                        	data
  1488                        L18:
  1489 00:001F: 66 6C 70 79  	db	$66,$6C,$70,$79,$64,$73,$6B,$5F,$77,$72,
                    $69,$74,$65,$5F,$64
       00:0023: 64 73 6B 5F 
       00:0027: 77 72 69 74 
       00:002B: 65 5F 64 
  1490 00:002E: 6F 72 3A 00  	db	$6F,$72,$3A,$00
  1491 00:0032:              	ends
  1492                        ;
  1493                        ;//! send command byte to fdc
  1494                        ;void flpydsk_send_command(uint8_t cmd)
  1495                        ;{
  1496                        	.line	330
  1497                        	.line	331
  1498                        	FLPY
  1499                        	xdef	~~flpydsk_send_command
  1500                        	func
  1501                        	.function	331
  1502                        ~~flpydsk_send_command:
  1503                        	longa	on
  1504                        	longi	on
  1505 05:8097: 3B           	tsc
  1506 05:8098: 38           	sec
  1507 05:8099: E9 02 00     	sbc	#L24
  Thu Jul 29 2021 11:48                                                Page 30


  1508 05:809C: 1B           	tcs
  1509 05:809D: 0B           	phd
  1510 05:809E: 5B           	tcd
  1511             00000004   cmd_0	set	4
  1512                        	.block	331
  1513                        ;	int i;
  1514                        ;
  1515                        ;	k_debug_hex("flpydsk_send_command:", cmd);
  1516             00000000   i_1	set	0
  1517                        	.sym	i,0,5,1,16
  1518                        	.sym	cmd,4,14,6,8
  1519                        	.line	334
  1520 05:809F: D4 06        	pei	<L24+cmd_0
  1521 05:80A1: F4 xx xx     	pea	#^L23
  1522 05:80A4: F4 xx xx     	pea	#<L23
  1523 05:80A7: 22 xx xx xx  	jsl	~~k_debug_hex
  1524                        ;
  1525                        ;	//! wait until data register is ready. We send c
                    ommands to the data register
  1526                        ;	for (i = 0; i < 500; i++)
  1527                        	.line	337
  1528 05:80AB: 64 01        	stz	<L25+i_1
  1529                        L10003:
  1530                        ;	{
  1531                        	.line	338
  1532                        ;		if (flpydsk_read_status() & FLPYDSK_MSR_
                    MASK_DATAREG)
  1533                        	.line	339
  1534                        ;		{
  1535 05:80AD: 22 2F 80 05  	jsl	~~flpydsk_read_status
  1536 05:80B1: E2 20        	sep	#$20
  1537                        	longa	off
  1538 05:80B3: 29 80        	and	#<$80
  1539 05:80B5: C2 20        	rep	#$20
  1540                        	longa	on
  1541 05:80B7: D0 03        	bne	L27
  1542 05:80B9: 82 1A 00     	brl	L10004
  1543                        L27:
  1544                        	.line	340
  1545                        ;			outportb(FLPYDSK_FIFO, cmd);
  1546                        	.line	341
  1547 05:80BC: E2 20        	sep	#$20
  1548                        	longa	off
  1549 05:80BE: A5 06        	lda	<L24+cmd_0
  1550 05:80C0: 8F F5 13 AF  	sta	>11473909
  1551 05:80C4: C2 20        	rep	#$20
  1552                        	longa	on
  1553                        ;			return;
  1554                        	.line	342
  1555                        L28:
  1556 05:80C6: A5 04        	lda	<L24+2
  1557 05:80C8: 85 06        	sta	<L24+2+2
  1558 05:80CA: A5 03        	lda	<L24+1
  1559 05:80CC: 85 05        	sta	<L24+1+2
  1560 05:80CE: 2B           	pld
  1561 05:80CF: 3B           	tsc
  1562 05:80D0: 18           	clc
  1563 05:80D1: 69 04 00     	adc	#L24+2
  Thu Jul 29 2021 11:48                                                Page 31


  1564 05:80D4: 1B           	tcs
  1565 05:80D5: 6B           	rtl
  1566                        ;		}
  1567                        	.line	343
  1568                        ;	}
  1569                        L10004:
  1570                        	.line	344
  1571                        L10001:
  1572 05:80D6: E6 01        	inc	<L25+i_1
  1573 05:80D8: 38           	sec
  1574 05:80D9: A5 01        	lda	<L25+i_1
  1575 05:80DB: E9 F4 01     	sbc	#<$1f4
  1576 05:80DE: 70 03        	bvs	L29
  1577 05:80E0: 49 00 80     	eor	#$8000
  1578                        L29:
  1579 05:80E3: 30 03        	bmi	L30
  1580 05:80E5: 82 C5 FF     	brl	L10003
  1581                        L30:
  1582                        L10002:
  1583                        ;}
  1584                        	.line	345
  1585 05:80E8: 82 DB FF     	brl	L28
  1586                        	.endblock	345
  1587             00000002   L24	equ	2
  1588             00000001   L25	equ	1
  1589 05:80EB:              	ends
  1590                        	efunc
  1591                        	.endfunc	345,1,2
  1592                        	.line	345
  1593                        	data
  1594                        L23:
  1595 00:0032: 66 6C 70 79  	db	$66,$6C,$70,$79,$64,$73,$6B,$5F,$73,$65,
                    $6E,$64,$5F,$63,$6F
       00:0036: 64 73 6B 5F 
       00:003A: 73 65 6E 64 
       00:003E: 5F 63 6F 
  1596 00:0041: 6D 6D 61 6E  	db	$6D,$6D,$61,$6E,$64,$3A,$00
       00:0045: 64 3A 00 
  1597 00:0048:              	ends
  1598                        ;
  1599                        ;//! get data from fdc
  1600                        ;BOOL flpydsk_read_byte(uint8_t *pdata)
  1601                        ;{
  1602                        	.line	348
  1603                        	.line	349
  1604                        	FLPY
  1605                        	xdef	~~flpydsk_read_byte
  1606                        	func
  1607                        	.function	349
  1608                        ~~flpydsk_read_byte:
  1609                        	longa	on
  1610                        	longi	on
  1611 05:80EB: 3B           	tsc
  1612 05:80EC: 38           	sec
  1613 05:80ED: E9 02 00     	sbc	#L32
  1614 05:80F0: 1B           	tcs
  1615 05:80F1: 0B           	phd
  1616 05:80F2: 5B           	tcd
  Thu Jul 29 2021 11:48                                                Page 32


  1617             00000004   pdata_0	set	4
  1618                        	.block	349
  1619                        ;	int i;
  1620                        ;	k_debug_string("flpydsk_read_byte\r\n");
  1621             00000000   i_1	set	0
  1622                        	.sym	i,0,5,1,16
  1623                        	.sym	pdata,4,142,6,32
  1624                        	.line	351
  1625 05:80F3: F4 xx xx     	pea	#^L31
  1626 05:80F6: F4 xx xx     	pea	#<L31
  1627 05:80F9: 22 xx xx xx  	jsl	~~k_debug_string
  1628                        ;	//! same as above function but returns data regi
                    ster for reading
  1629                        ;	for (i = 0; i < 500; i++)
  1630                        	.line	353
  1631 05:80FD: 64 01        	stz	<L33+i_1
  1632                        L10007:
  1633                        ;	{
  1634                        	.line	354
  1635                        ;		if (flpydsk_read_status() & 0xC0)
  1636                        	.line	355
  1637                        ;		{
  1638 05:80FF: 22 2F 80 05  	jsl	~~flpydsk_read_status
  1639 05:8103: E2 20        	sep	#$20
  1640                        	longa	off
  1641 05:8105: 29 C0        	and	#<$c0
  1642 05:8107: C2 20        	rep	#$20
  1643                        	longa	on
  1644 05:8109: D0 03        	bne	L35
  1645 05:810B: 82 39 00     	brl	L10008
  1646                        L35:
  1647                        	.line	356
  1648                        ;			*pdata = inportb(FLPYDSK_FIFO);
  1649                        	.line	357
  1650 05:810E: E2 20        	sep	#$20
  1651                        	longa	off
  1652 05:8110: AF F5 13 AF  	lda	>11473909
  1653 05:8114: 87 06        	sta	[<L32+pdata_0]
  1654 05:8116: C2 20        	rep	#$20
  1655                        	longa	on
  1656                        ;			k_debug_hex("flpydsk_read_byte:"
                    , *pdata);
  1657                        	.line	358
  1658 05:8118: A7 06        	lda	[<L32+pdata_0]
  1659 05:811A: 48           	pha
  1660 05:811B: F4 xx xx     	pea	#^L31+20
  1661 05:811E: F4 xx xx     	pea	#<L31+20
  1662 05:8121: 22 xx xx xx  	jsl	~~k_debug_hex
  1663                        ;			k_debug_char("flpydsk_read_char:
                    ", *pdata);
  1664                        	.line	359
  1665 05:8125: A7 06        	lda	[<L32+pdata_0]
  1666 05:8127: 48           	pha
  1667 05:8128: F4 xx xx     	pea	#^L31+39
  1668 05:812B: F4 xx xx     	pea	#<L31+39
  1669 05:812E: 22 xx xx xx  	jsl	~~k_debug_char
  1670                        ;			return TRUE;
  1671                        	.line	360
  Thu Jul 29 2021 11:48                                                Page 33


  1672 05:8132: A9 01 00     	lda	#$1
  1673                        L36:
  1674 05:8135: A8           	tay
  1675 05:8136: A5 04        	lda	<L32+2
  1676 05:8138: 85 08        	sta	<L32+2+4
  1677 05:813A: A5 03        	lda	<L32+1
  1678 05:813C: 85 07        	sta	<L32+1+4
  1679 05:813E: 2B           	pld
  1680 05:813F: 3B           	tsc
  1681 05:8140: 18           	clc
  1682 05:8141: 69 06 00     	adc	#L32+4
  1683 05:8144: 1B           	tcs
  1684 05:8145: 98           	tya
  1685 05:8146: 6B           	rtl
  1686                        ;		}
  1687                        	.line	361
  1688                        ;	}
  1689                        L10008:
  1690                        	.line	362
  1691                        L10005:
  1692 05:8147: E6 01        	inc	<L33+i_1
  1693 05:8149: 38           	sec
  1694 05:814A: A5 01        	lda	<L33+i_1
  1695 05:814C: E9 F4 01     	sbc	#<$1f4
  1696 05:814F: 70 03        	bvs	L37
  1697 05:8151: 49 00 80     	eor	#$8000
  1698                        L37:
  1699 05:8154: 30 03        	bmi	L38
  1700 05:8156: 82 A6 FF     	brl	L10007
  1701                        L38:
  1702                        L10006:
  1703                        ;	return FALSE;
  1704                        	.line	363
  1705 05:8159: A9 00 00     	lda	#$0
  1706 05:815C: 82 D6 FF     	brl	L36
  1707                        ;}
  1708                        	.line	364
  1709                        	.endblock	364
  1710             00000002   L32	equ	2
  1711             00000001   L33	equ	1
  1712 05:815F:              	ends
  1713                        	efunc
  1714                        	.endfunc	364,1,2
  1715                        	.line	364
  1716                        	data
  1717                        L31:
  1718 00:0048: 66 6C 70 79  	db	$66,$6C,$70,$79,$64,$73,$6B,$5F,$72,$65,
                    $61,$64,$5F,$62,$79
       00:004C: 64 73 6B 5F 
       00:0050: 72 65 61 64 
       00:0054: 5F 62 79 
  1719 00:0057: 74 65 0D 0A  	db	$74,$65,$0D,$0A,$00,$66,$6C,$70,$79,$64,
                    $73,$6B,$5F,$72,$65
       00:005B: 00 66 6C 70 
       00:005F: 79 64 73 6B 
       00:0063: 5F 72 65 
  1720 00:0066: 61 64 5F 62  	db	$61,$64,$5F,$62,$79,$74,$65,$3A,$00,$66,
                    $6C,$70,$79,$64,$73
  Thu Jul 29 2021 11:48                                                Page 34


       00:006A: 79 74 65 3A 
       00:006E: 00 66 6C 70 
       00:0072: 79 64 73 
  1721 00:0075: 6B 5F 72 65  	db	$6B,$5F,$72,$65,$61,$64,$5F,$63,$68,$61,
                    $72,$3A,$00
       00:0079: 61 64 5F 63 
       00:007D: 68 61 72 3A 
       00:0081: 00 
  1722 00:0082:              	ends
  1723                        ;
  1724                        ;uint8_t flpydsk_read_data(void)
  1725                        ;{
  1726                        	.line	366
  1727                        	.line	367
  1728                        	FLPY
  1729                        	xdef	~~flpydsk_read_data
  1730                        	func
  1731                        	.function	367
  1732                        ~~flpydsk_read_data:
  1733                        	longa	on
  1734                        	longi	on
  1735 05:815F: 3B           	tsc
  1736 05:8160: 38           	sec
  1737 05:8161: E9 03 00     	sbc	#L40
  1738 05:8164: 1B           	tcs
  1739 05:8165: 0B           	phd
  1740 05:8166: 5B           	tcd
  1741                        	.block	367
  1742                        ;	UCHAR d = 0;
  1743                        ;	int i;
  1744                        ;	k_debug_string("flpydsk_read_data\r\n");
  1745             00000000   d_1	set	0
  1746             00000001   i_1	set	1
  1747                        	.sym	d,0,14,1,8
  1748                        	.sym	i,1,5,1,16
  1749 05:8167: E2 20        	sep	#$20
  1750                        	longa	off
  1751 05:8169: 64 01        	stz	<L41+d_1
  1752 05:816B: C2 20        	rep	#$20
  1753                        	longa	on
  1754                        	.line	370
  1755 05:816D: F4 xx xx     	pea	#^L39
  1756 05:8170: F4 xx xx     	pea	#<L39
  1757 05:8173: 22 xx xx xx  	jsl	~~k_debug_string
  1758                        ;	//! same as above function but returns data regi
                    ster for reading
  1759                        ;	for (i = 0; i < 500; i++)
  1760                        	.line	372
  1761 05:8177: 64 02        	stz	<L41+i_1
  1762                        L10011:
  1763                        ;	{
  1764                        	.line	373
  1765                        ;		if (flpydsk_read_status() & FLPYDSK_MSR_
                    MASK_DATAREG)
  1766                        	.line	374
  1767                        ;		{
  1768 05:8179: 22 2F 80 05  	jsl	~~flpydsk_read_status
  1769 05:817D: E2 20        	sep	#$20
  Thu Jul 29 2021 11:48                                                Page 35


  1770                        	longa	off
  1771 05:817F: 29 80        	and	#<$80
  1772 05:8181: C2 20        	rep	#$20
  1773                        	longa	on
  1774 05:8183: D0 03        	bne	L43
  1775 05:8185: 82 25 00     	brl	L10012
  1776                        L43:
  1777                        	.line	375
  1778                        ;			d = inportb(FLPYDSK_FIFO);
  1779                        	.line	376
  1780 05:8188: E2 20        	sep	#$20
  1781                        	longa	off
  1782 05:818A: AF F5 13 AF  	lda	>11473909
  1783 05:818E: 85 01        	sta	<L41+d_1
  1784 05:8190: C2 20        	rep	#$20
  1785                        	longa	on
  1786                        ;			k_debug_hex("flpydsk_read_data:"
                    , d);
  1787                        	.line	377
  1788 05:8192: D4 01        	pei	<L41+d_1
  1789 05:8194: F4 xx xx     	pea	#^L39+20
  1790 05:8197: F4 xx xx     	pea	#<L39+20
  1791 05:819A: 22 xx xx xx  	jsl	~~k_debug_hex
  1792                        ;			return d;
  1793                        	.line	378
  1794 05:819E: A5 01        	lda	<L41+d_1
  1795 05:81A0: 29 FF 00     	and	#$ff
  1796                        L44:
  1797 05:81A3: A8           	tay
  1798 05:81A4: 2B           	pld
  1799 05:81A5: 3B           	tsc
  1800 05:81A6: 18           	clc
  1801 05:81A7: 69 03 00     	adc	#L40
  1802 05:81AA: 1B           	tcs
  1803 05:81AB: 98           	tya
  1804 05:81AC: 6B           	rtl
  1805                        ;		}
  1806                        	.line	379
  1807                        ;	}
  1808                        L10012:
  1809                        	.line	380
  1810                        L10009:
  1811 05:81AD: E6 02        	inc	<L41+i_1
  1812 05:81AF: 38           	sec
  1813 05:81B0: A5 02        	lda	<L41+i_1
  1814 05:81B2: E9 F4 01     	sbc	#<$1f4
  1815 05:81B5: 70 03        	bvs	L45
  1816 05:81B7: 49 00 80     	eor	#$8000
  1817                        L45:
  1818 05:81BA: 30 03        	bmi	L46
  1819 05:81BC: 82 BA FF     	brl	L10011
  1820                        L46:
  1821                        L10010:
  1822                        ;	return 0;
  1823                        	.line	381
  1824 05:81BF: A9 00 00     	lda	#$0
  1825 05:81C2: 82 DE FF     	brl	L44
  1826                        ;}
  Thu Jul 29 2021 11:48                                                Page 36


  1827                        	.line	382
  1828                        	.endblock	382
  1829             00000003   L40	equ	3
  1830             00000001   L41	equ	1
  1831 05:81C5:              	ends
  1832                        	efunc
  1833                        	.endfunc	382,1,3
  1834                        	.line	382
  1835                        	data
  1836                        L39:
  1837 00:0082: 66 6C 70 79  	db	$66,$6C,$70,$79,$64,$73,$6B,$5F,$72,$65,
                    $61,$64,$5F,$64,$61
       00:0086: 64 73 6B 5F 
       00:008A: 72 65 61 64 
       00:008E: 5F 64 61 
  1838 00:0091: 74 61 0D 0A  	db	$74,$61,$0D,$0A,$00,$66,$6C,$70,$79,$64,
                    $73,$6B,$5F,$72,$65
       00:0095: 00 66 6C 70 
       00:0099: 79 64 73 6B 
       00:009D: 5F 72 65 
  1839 00:00A0: 61 64 5F 64  	db	$61,$64,$5F,$64,$61,$74,$61,$3A,$00
       00:00A4: 61 74 61 3A 
       00:00A8: 00 
  1840 00:00A9:              	ends
  1841                        ;
  1842                        ;//! write to the configuation control register
  1843                        ;void flpydsk_write_ccr(uint8_t val)
  1844                        ;{
  1845                        	.line	385
  1846                        	.line	386
  1847                        	FLPY
  1848                        	xdef	~~flpydsk_write_ccr
  1849                        	func
  1850                        	.function	386
  1851                        ~~flpydsk_write_ccr:
  1852                        	longa	on
  1853                        	longi	on
  1854 05:81C5: 3B           	tsc
  1855 05:81C6: 38           	sec
  1856 05:81C7: E9 00 00     	sbc	#L48
  1857 05:81CA: 1B           	tcs
  1858 05:81CB: 0B           	phd
  1859 05:81CC: 5B           	tcd
  1860             00000004   val_0	set	4
  1861                        	.block	386
  1862                        ;	k_debug_string("flpydsk_write_ccr\r\n");
  1863                        	.sym	val,4,14,6,8
  1864                        	.line	387
  1865 05:81CD: F4 xx xx     	pea	#^L47
  1866 05:81D0: F4 xx xx     	pea	#<L47
  1867 05:81D3: 22 xx xx xx  	jsl	~~k_debug_string
  1868                        ;	//! write the configuation control
  1869                        ;	outportb(FLPYDSK_CTRL, val);
  1870                        	.line	389
  1871 05:81D7: E2 20        	sep	#$20
  1872                        	longa	off
  1873 05:81D9: A5 04        	lda	<L48+val_0
  1874 05:81DB: 8F F7 13 AF  	sta	>11473911
  Thu Jul 29 2021 11:48                                                Page 37


  1875 05:81DF: C2 20        	rep	#$20
  1876                        	longa	on
  1877                        ;}
  1878                        	.line	390
  1879                        L51:
  1880 05:81E1: A5 02        	lda	<L48+2
  1881 05:81E3: 85 04        	sta	<L48+2+2
  1882 05:81E5: A5 01        	lda	<L48+1
  1883 05:81E7: 85 03        	sta	<L48+1+2
  1884 05:81E9: 2B           	pld
  1885 05:81EA: 3B           	tsc
  1886 05:81EB: 18           	clc
  1887 05:81EC: 69 02 00     	adc	#L48+2
  1888 05:81EF: 1B           	tcs
  1889 05:81F0: 6B           	rtl
  1890                        	.endblock	390
  1891             00000000   L48	equ	0
  1892             00000001   L49	equ	1
  1893 05:81F1:              	ends
  1894                        	efunc
  1895                        	.endfunc	390,1,0
  1896                        	.line	390
  1897                        	data
  1898                        L47:
  1899 00:00A9: 66 6C 70 79  	db	$66,$6C,$70,$79,$64,$73,$6B,$5F,$77,$72,
                    $69,$74,$65,$5F,$63
       00:00AD: 64 73 6B 5F 
       00:00B1: 77 72 69 74 
       00:00B5: 65 5F 63 
  1900 00:00B8: 63 72 0D 0A  	db	$63,$72,$0D,$0A,$00
       00:00BC: 00 
  1901 00:00BD:              	ends
  1902                        ;
  1903                        ;/**
  1904                        ; *	Interrupt Handling Routines
  1905                        ; */
  1906                        ;
  1907                        ;//!	floppy disk irq handler
  1908                        ;void i816_flpy_irq()
  1909                        ;{
  1910                        	.line	397
  1911                        	.line	398
  1912                        	FLPY
  1913                        	xdef	~~i816_flpy_irq
  1914                        	func
  1915                        	.function	398
  1916                        ~~i816_flpy_irq:
  1917                        	longa	on
  1918                        	longi	on
  1919 05:81F1: 3B           	tsc
  1920 05:81F2: 38           	sec
  1921 05:81F3: E9 00 00     	sbc	#L53
  1922 05:81F6: 1B           	tcs
  1923 05:81F7: 0B           	phd
  1924 05:81F8: 5B           	tcd
  1925                        	.block	398
  1926                        ;	/*
  1927                        ;	 _asm add
  Thu Jul 29 2021 11:48                                                Page 38


  1928                        ;	 esp, 12
  1929                        ;	 _asm pushad
  1930                        ;	 _asm cli
  1931                        ;
  1932                        ;	 //! irq fired
  1933                        ;	 _FloppyDiskIRQ = 1;
  1934                        ;
  1935                        ;	 //! tell hal we are done
  1936                        ;	 interruptdone(FLOPPY_IRQ);
  1937                        ;
  1938                        ;	 _asm sti
  1939                        ;	 _asm popad
  1940                        ;	 _asm iretd
  1941                        ;	 */
  1942                        ;}
  1943                        	.line	415
  1944                        L56:
  1945 05:81F9: 2B           	pld
  1946 05:81FA: 3B           	tsc
  1947 05:81FB: 18           	clc
  1948 05:81FC: 69 00 00     	adc	#L53
  1949 05:81FF: 1B           	tcs
  1950 05:8200: 6B           	rtl
  1951                        	.endblock	415
  1952             00000000   L53	equ	0
  1953             00000001   L54	equ	1
  1954 05:8201:              	ends
  1955                        	efunc
  1956                        	.endfunc	415,1,0
  1957                        	.line	415
  1958                        ;
  1959                        ;/**
  1960                        ; *	Controller Command Routines
  1961                        ; */
  1962                        ;
  1963                        ;//! check interrupt status command
  1964                        ;void flpydsk_check_int(uint32_t* st0, uint32_t* c
                    yl)
  1965                        ;{
  1966                        	.line	422
  1967                        	.line	423
  1968                        	FLPY
  1969                        	xdef	~~flpydsk_check_int
  1970                        	func
  1971                        	.function	423
  1972                        ~~flpydsk_check_int:
  1973                        	longa	on
  1974                        	longi	on
  1975 05:8201: 3B           	tsc
  1976 05:8202: 38           	sec
  1977 05:8203: E9 04 00     	sbc	#L57
  1978 05:8206: 1B           	tcs
  1979 05:8207: 0B           	phd
  1980 05:8208: 5B           	tcd
  1981             00000004   st0_0	set	4
  1982             00000008   cyl_0	set	8
  1983                        	.block	423
  1984                        ;	k_debug_string("flpydsk_check_int\r\n");
  Thu Jul 29 2021 11:48                                                Page 39


  1985                        	.sym	st0,4,146,6,32
  1986                        	.sym	cyl,8,146,6,32
  1987                        	.line	424
  1988 05:8209: F4 xx xx     	pea	#^L52
  1989 05:820C: F4 xx xx     	pea	#<L52
  1990 05:820F: 22 xx xx xx  	jsl	~~k_debug_string
  1991                        ;
  1992                        ;	flpydsk_send_command(FDC_CMD_CHECK_INT);
  1993                        	.line	426
  1994 05:8213: F4 08 00     	pea	#<$8
  1995 05:8216: 22 97 80 05  	jsl	~~flpydsk_send_command
  1996                        ;
  1997                        ;	*st0 = flpydsk_read_data();
  1998                        	.line	428
  1999 05:821A: 22 5F 81 05  	jsl	~~flpydsk_read_data
  2000 05:821E: E2 20        	sep	#$20
  2001                        	longa	off
  2002 05:8220: 85 01        	sta	<R0
  2003 05:8222: C2 20        	rep	#$20
  2004                        	longa	on
  2005 05:8224: A5 01        	lda	<R0
  2006 05:8226: 29 FF 00     	and	#$ff
  2007 05:8229: 85 01        	sta	<R0
  2008 05:822B: 64 03        	stz	<R0+2
  2009 05:822D: A5 01        	lda	<R0
  2010 05:822F: 87 08        	sta	[<L57+st0_0]
  2011 05:8231: A5 03        	lda	<R0+2
  2012 05:8233: A0 02 00     	ldy	#$2
  2013 05:8236: 97 08        	sta	[<L57+st0_0],Y
  2014                        ;	*cyl = flpydsk_read_data();
  2015                        	.line	429
  2016 05:8238: 22 5F 81 05  	jsl	~~flpydsk_read_data
  2017 05:823C: E2 20        	sep	#$20
  2018                        	longa	off
  2019 05:823E: 85 01        	sta	<R0
  2020 05:8240: C2 20        	rep	#$20
  2021                        	longa	on
  2022 05:8242: A5 01        	lda	<R0
  2023 05:8244: 29 FF 00     	and	#$ff
  2024 05:8247: 85 01        	sta	<R0
  2025 05:8249: 64 03        	stz	<R0+2
  2026 05:824B: A5 01        	lda	<R0
  2027 05:824D: 87 0C        	sta	[<L57+cyl_0]
  2028 05:824F: A5 03        	lda	<R0+2
  2029 05:8251: A0 02 00     	ldy	#$2
  2030 05:8254: 97 0C        	sta	[<L57+cyl_0],Y
  2031                        ;
  2032                        ;	k_debug_long("flpydsk_check_int:st0:", *st0);
  2033                        	.line	431
  2034 05:8256: A0 02 00     	ldy	#$2
  2035 05:8259: B7 08        	lda	[<L57+st0_0],Y
  2036 05:825B: 48           	pha
  2037 05:825C: A7 08        	lda	[<L57+st0_0]
  2038 05:825E: 48           	pha
  2039 05:825F: F4 xx xx     	pea	#^L52+20
  2040 05:8262: F4 xx xx     	pea	#<L52+20
  2041 05:8265: 22 xx xx xx  	jsl	~~k_debug_long
  2042                        ;	k_debug_long("flpydsk_check_int:cyl:", *cyl);
  Thu Jul 29 2021 11:48                                                Page 40


  2043                        	.line	432
  2044 05:8269: A0 02 00     	ldy	#$2
  2045 05:826C: B7 0C        	lda	[<L57+cyl_0],Y
  2046 05:826E: 48           	pha
  2047 05:826F: A7 0C        	lda	[<L57+cyl_0]
  2048 05:8271: 48           	pha
  2049 05:8272: F4 xx xx     	pea	#^L52+43
  2050 05:8275: F4 xx xx     	pea	#<L52+43
  2051 05:8278: 22 xx xx xx  	jsl	~~k_debug_long
  2052                        ;}
  2053                        	.line	433
  2054                        L60:
  2055 05:827C: A5 06        	lda	<L57+2
  2056 05:827E: 85 0E        	sta	<L57+2+8
  2057 05:8280: A5 05        	lda	<L57+1
  2058 05:8282: 85 0D        	sta	<L57+1+8
  2059 05:8284: 2B           	pld
  2060 05:8285: 3B           	tsc
  2061 05:8286: 18           	clc
  2062 05:8287: 69 0C 00     	adc	#L57+8
  2063 05:828A: 1B           	tcs
  2064 05:828B: 6B           	rtl
  2065                        	.endblock	433
  2066             00000004   L57	equ	4
  2067             00000005   L58	equ	5
  2068 05:828C:              	ends
  2069                        	efunc
  2070                        	.endfunc	433,5,4
  2071                        	.line	433
  2072                        	data
  2073                        L52:
  2074 00:00BD: 66 6C 70 79  	db	$66,$6C,$70,$79,$64,$73,$6B,$5F,$63,$68,
                    $65,$63,$6B,$5F,$69
       00:00C1: 64 73 6B 5F 
       00:00C5: 63 68 65 63 
       00:00C9: 6B 5F 69 
  2075 00:00CC: 6E 74 0D 0A  	db	$6E,$74,$0D,$0A,$00,$66,$6C,$70,$79,$64,
                    $73,$6B,$5F,$63,$68
       00:00D0: 00 66 6C 70 
       00:00D4: 79 64 73 6B 
       00:00D8: 5F 63 68 
  2076 00:00DB: 65 63 6B 5F  	db	$65,$63,$6B,$5F,$69,$6E,$74,$3A,$73,$74,
                    $30,$3A,$00,$66,$6C
       00:00DF: 69 6E 74 3A 
       00:00E3: 73 74 30 3A 
       00:00E7: 00 66 6C 
  2077 00:00EA: 70 79 64 73  	db	$70,$79,$64,$73,$6B,$5F,$63,$68,$65,$63,
                    $6B,$5F,$69,$6E,$74
       00:00EE: 6B 5F 63 68 
       00:00F2: 65 63 6B 5F 
       00:00F6: 69 6E 74 
  2078 00:00F9: 3A 63 79 6C  	db	$3A,$63,$79,$6C,$3A,$00
       00:00FD: 3A 00 
  2079 00:00FF:              	ends
  2080                        ;
  2081                        ;//! turns the current floppy drives motor on/off
  2082                        ;void flpydsk_control_motor(BOOL b)
  2083                        ;{
  Thu Jul 29 2021 11:48                                                Page 41


  2084                        	.line	436
  2085                        	.line	437
  2086                        	FLPY
  2087                        	xdef	~~flpydsk_control_motor
  2088                        	func
  2089                        	.function	437
  2090                        ~~flpydsk_control_motor:
  2091                        	longa	on
  2092                        	longi	on
  2093 05:828C: 3B           	tsc
  2094 05:828D: 38           	sec
  2095 05:828E: E9 0C 00     	sbc	#L62
  2096 05:8291: 1B           	tcs
  2097 05:8292: 0B           	phd
  2098 05:8293: 5B           	tcd
  2099             00000004   b_0	set	4
  2100                        	.block	437
  2101                        ;	uint32_t motor = 0;
  2102                        ;	//! sanity check: invalid drive
  2103                        ;	if (_CurrentDrive > 3)
  2104             00000000   motor_1	set	0
  2105                        	.sym	motor,0,18,1,32
  2106                        	.sym	b,4,14,6,8
  2107 05:8294: 64 09        	stz	<L63+motor_1
  2108 05:8296: 64 0B        	stz	<L63+motor_1+2
  2109                        	.line	440
  2110                        ;		return;
  2111 05:8298: E2 20        	sep	#$20
  2112                        	longa	off
  2113 05:829A: A9 03        	lda	#$3
  2114 05:829C: CD xx xx     	cmp	|~~_CurrentDrive
  2115 05:829F: C2 20        	rep	#$20
  2116                        	longa	on
  2117 05:82A1: 90 03        	bcc	L65
  2118 05:82A3: 82 10 00     	brl	L10013
  2119                        L65:
  2120                        	.line	441
  2121                        L66:
  2122 05:82A6: A5 0E        	lda	<L62+2
  2123 05:82A8: 85 10        	sta	<L62+2+2
  2124 05:82AA: A5 0D        	lda	<L62+1
  2125 05:82AC: 85 0F        	sta	<L62+1+2
  2126 05:82AE: 2B           	pld
  2127 05:82AF: 3B           	tsc
  2128 05:82B0: 18           	clc
  2129 05:82B1: 69 0E 00     	adc	#L62+2
  2130 05:82B4: 1B           	tcs
  2131 05:82B5: 6B           	rtl
  2132                        ;
  2133                        ;	k_debug_string("flpydsk_control_motor\r\n");
  2134                        L10013:
  2135                        	.line	443
  2136 05:82B6: F4 xx xx     	pea	#^L61
  2137 05:82B9: F4 xx xx     	pea	#<L61
  2138 05:82BC: 22 xx xx xx  	jsl	~~k_debug_string
  2139                        ;
  2140                        ;	//! select the correct mask based on current dri
                    ve
  Thu Jul 29 2021 11:48                                                Page 42


  2141                        ;	switch (_CurrentDrive)
  2142                        	.line	446
  2143 05:82C0: AD xx xx     	lda	|~~_CurrentDrive
  2144 05:82C3: 29 FF 00     	and	#$ff
  2145 05:82C6: 82 34 00     	brl	L10014
  2146                        ;	{
  2147                        	.line	447
  2148                        ;	case 0:
  2149                        	.line	448
  2150                        L10016:
  2151                        ;		motor = FLPYDSK_DOR_MASK_DRIVE0_MOTOR;
  2152                        	.line	449
  2153 05:82C9: A9 10 00     	lda	#$10
  2154 05:82CC: 85 09        	sta	<L63+motor_1
  2155 05:82CE: A9 00 00     	lda	#$0
  2156 05:82D1: 85 0B        	sta	<L63+motor_1+2
  2157                        ;		break;
  2158                        	.line	450
  2159 05:82D3: 82 39 00     	brl	L10015
  2160                        ;	case 1:
  2161                        	.line	451
  2162                        L10017:
  2163                        ;		motor = FLPYDSK_DOR_MASK_DRIVE1_MOTOR;
  2164                        	.line	452
  2165 05:82D6: A9 20 00     	lda	#$20
  2166 05:82D9: 85 09        	sta	<L63+motor_1
  2167 05:82DB: A9 00 00     	lda	#$0
  2168 05:82DE: 85 0B        	sta	<L63+motor_1+2
  2169                        ;		break;
  2170                        	.line	453
  2171 05:82E0: 82 2C 00     	brl	L10015
  2172                        ;	case 2:
  2173                        	.line	454
  2174                        L10018:
  2175                        ;		motor = FLPYDSK_DOR_MASK_DRIVE2_MOTOR;
  2176                        	.line	455
  2177 05:82E3: A9 40 00     	lda	#$40
  2178 05:82E6: 85 09        	sta	<L63+motor_1
  2179 05:82E8: A9 00 00     	lda	#$0
  2180 05:82EB: 85 0B        	sta	<L63+motor_1+2
  2181                        ;		break;
  2182                        	.line	456
  2183 05:82ED: 82 1F 00     	brl	L10015
  2184                        ;	case 3:
  2185                        	.line	457
  2186                        L10019:
  2187                        ;		motor = FLPYDSK_DOR_MASK_DRIVE3_MOTOR;
  2188                        	.line	458
  2189 05:82F0: A9 80 00     	lda	#$80
  2190 05:82F3: 85 09        	sta	<L63+motor_1
  2191 05:82F5: A9 00 00     	lda	#$0
  2192 05:82F8: 85 0B        	sta	<L63+motor_1+2
  2193                        ;		break;
  2194                        	.line	459
  2195 05:82FA: 82 12 00     	brl	L10015
  2196                        ;	}
  2197                        	.line	460
  2198                        L10014:
  Thu Jul 29 2021 11:48                                                Page 43


  2199                        	xref	~~~fsw
  2200 05:82FD: 22 xx xx xx  	jsl	~~~fsw
  2201 05:8301: 00 00        	dw	0
  2202 05:8303: 04 00        	dw	4
  2203 05:8305: 0E 83        	dw	L10015-1
  2204 05:8307: C8 82        	dw	L10016-1
  2205 05:8309: D5 82        	dw	L10017-1
  2206 05:830B: E2 82        	dw	L10018-1
  2207 05:830D: EF 82        	dw	L10019-1
  2208                        L10015:
  2209                        ;
  2210                        ;	//! turn on or off the motor of that drive
  2211                        ;	if (b)
  2212                        	.line	463
  2213                        ;		//flpydsk_write_dor(_CurrentDrive | moto
                    r | FLPYDSK_DOR_MASK_RESET | FLPYDSK_DOR_MASK_DMA);
  2214                        ;		flpydsk_write_dor(_CurrentDrive | motor 
                    | FLPYDSK_DOR_MASK_RESET);
  2215 05:830F: A5 10        	lda	<L62+b_0
  2216 05:8311: 29 FF 00     	and	#$ff
  2217 05:8314: D0 03        	bne	L67
  2218 05:8316: 82 2A 00     	brl	L10020
  2219                        L67:
  2220                        	.line	465
  2221 05:8319: AD xx xx     	lda	|~~_CurrentDrive
  2222 05:831C: 29 FF 00     	and	#$ff
  2223 05:831F: 85 01        	sta	<R0
  2224 05:8321: 64 03        	stz	<R0+2
  2225 05:8323: A5 09        	lda	<L63+motor_1
  2226 05:8325: 05 01        	ora	<R0
  2227 05:8327: 85 05        	sta	<R1
  2228 05:8329: A5 0B        	lda	<L63+motor_1+2
  2229 05:832B: 05 03        	ora	<R0+2
  2230 05:832D: 85 07        	sta	<R1+2
  2231 05:832F: A5 05        	lda	<R1
  2232 05:8331: 09 04 00     	ora	#<$4
  2233 05:8334: 85 01        	sta	<R0
  2234 05:8336: A5 07        	lda	<R1+2
  2235 05:8338: 85 03        	sta	<R0+2
  2236 05:833A: D4 01        	pei	<R0
  2237 05:833C: 22 69 80 05  	jsl	~~flpydsk_write_dor
  2238                        ;	else
  2239 05:8340: 82 07 00     	brl	L10021
  2240                        L10020:
  2241                        ;		flpydsk_write_dor(FLPYDSK_DOR_MASK_RESET
                    );
  2242                        	.line	467
  2243 05:8343: F4 04 00     	pea	#<$4
  2244 05:8346: 22 69 80 05  	jsl	~~flpydsk_write_dor
  2245                        L10021:
  2246                        ;
  2247                        ;	//! in all cases; wait a little bit for the moto
                    r to spin up/turn off
  2248                        ;	k_debug_string("flpydsk_control_motor sleeping\r
                    \n");
  2249                        	.line	470
  2250 05:834A: F4 xx xx     	pea	#^L61+24
  2251 05:834D: F4 xx xx     	pea	#<L61+24
  Thu Jul 29 2021 11:48                                                Page 44


  2252 05:8350: 22 xx xx xx  	jsl	~~k_debug_string
  2253                        ;	sleep(20);
  2254                        	.line	471
  2255 05:8354: F4 14 00     	pea	#<$14
  2256 05:8357: 22 xx xx xx  	jsl	~~sleep
  2257                        ;}
  2258                        	.line	472
  2259 05:835B: 82 48 FF     	brl	L66
  2260                        	.endblock	472
  2261             0000000C   L62	equ	12
  2262             00000009   L63	equ	9
  2263 05:835E:              	ends
  2264                        	efunc
  2265                        	.endfunc	472,9,12
  2266                        	.line	472
  2267                        	data
  2268                        L61:
  2269 00:00FF: 66 6C 70 79  	db	$66,$6C,$70,$79,$64,$73,$6B,$5F,$63,$6F,
                    $6E,$74,$72,$6F,$6C
       00:0103: 64 73 6B 5F 
       00:0107: 63 6F 6E 74 
       00:010B: 72 6F 6C 
  2270 00:010E: 5F 6D 6F 74  	db	$5F,$6D,$6F,$74,$6F,$72,$0D,$0A,$00,$66,
                    $6C,$70,$79,$64,$73
       00:0112: 6F 72 0D 0A 
       00:0116: 00 66 6C 70 
       00:011A: 79 64 73 
  2271 00:011D: 6B 5F 63 6F  	db	$6B,$5F,$63,$6F,$6E,$74,$72,$6F,$6C,$5F,
                    $6D,$6F,$74,$6F,$72
       00:0121: 6E 74 72 6F 
       00:0125: 6C 5F 6D 6F 
       00:0129: 74 6F 72 
  2272 00:012C: 20 73 6C 65  	db	$20,$73,$6C,$65,$65,$70,$69,$6E,$67,$0D,
                    $0A,$00
       00:0130: 65 70 69 6E 
       00:0134: 67 0D 0A 00 
  2273 00:0138:              	ends
  2274                        ;
  2275                        ;//! configure drive flpydsk_drive_data(3, 16, 240
                    , FALSE);
  2276                        ;void flpydsk_drive_data(uint32_t stepr, uint32_t 
                    loadt, uint32_t unloadt,BOOL dma)
  2277                        ;{
  2278                        	.line	475
  2279                        	.line	476
  2280                        	FLPY
  2281                        	xdef	~~flpydsk_drive_data
  2282                        	func
  2283                        	.function	476
  2284                        ~~flpydsk_drive_data:
  2285                        	longa	on
  2286                        	longi	on
  2287 05:835E: 3B           	tsc
  2288 05:835F: 38           	sec
  2289 05:8360: E9 10 00     	sbc	#L69
  2290 05:8363: 1B           	tcs
  2291 05:8364: 0B           	phd
  2292 05:8365: 5B           	tcd
  Thu Jul 29 2021 11:48                                                Page 45


  2293             00000004   stepr_0	set	4
  2294             00000008   loadt_0	set	8
  2295             0000000C   unloadt_0	set	12
  2296             00000010   dma_0	set	16
  2297                        	.block	476
  2298                        ;
  2299                        ;	uint32_t data = 0;
  2300                        ;
  2301                        ;	k_debug_string("flpydsk_drive_data\r\n");
  2302             00000000   data_1	set	0
  2303                        	.sym	data,0,18,1,32
  2304                        	.sym	stepr,4,18,6,32
  2305                        	.sym	loadt,8,18,6,32
  2306                        	.sym	unloadt,12,18,6,32
  2307                        	.sym	dma,16,14,6,8
  2308 05:8366: 64 0D        	stz	<L70+data_1
  2309 05:8368: 64 0F        	stz	<L70+data_1+2
  2310                        	.line	480
  2311 05:836A: F4 xx xx     	pea	#^L68
  2312 05:836D: F4 xx xx     	pea	#<L68
  2313 05:8370: 22 xx xx xx  	jsl	~~k_debug_string
  2314                        ;
  2315                        ;	//! send command
  2316                        ;	flpydsk_send_command(FDC_CMD_SPECIFY);
  2317                        	.line	483
  2318 05:8374: F4 03 00     	pea	#<$3
  2319 05:8377: 22 97 80 05  	jsl	~~flpydsk_send_command
  2320                        ;	data = ((stepr & 0xf) << 4) | (unloadt & 0xf);
  2321                        	.line	484
  2322 05:837B: A5 14        	lda	<L69+stepr_0
  2323 05:837D: 29 0F 00     	and	#<$f
  2324 05:8380: 85 05        	sta	<R1
  2325 05:8382: 64 07        	stz	<R1+2
  2326 05:8384: D4 07        	pei	<R1+2
  2327 05:8386: D4 05        	pei	<R1
  2328 05:8388: A9 04 00     	lda	#$4
  2329                        	xref	~~~lasl
  2330 05:838B: 22 xx xx xx  	jsl	~~~lasl
  2331 05:838F: 85 01        	sta	<R0
  2332 05:8391: 86 03        	stx	<R0+2
  2333 05:8393: A5 1C        	lda	<L69+unloadt_0
  2334 05:8395: 29 0F 00     	and	#<$f
  2335 05:8398: 85 09        	sta	<R2
  2336 05:839A: 64 0B        	stz	<R2+2
  2337 05:839C: A5 09        	lda	<R2
  2338 05:839E: 05 01        	ora	<R0
  2339 05:83A0: 85 0D        	sta	<L70+data_1
  2340 05:83A2: A5 0B        	lda	<R2+2
  2341 05:83A4: 05 03        	ora	<R0+2
  2342 05:83A6: 85 0F        	sta	<L70+data_1+2
  2343                        ;	flpydsk_send_command(data);
  2344                        	.line	485
  2345 05:83A8: D4 0D        	pei	<L70+data_1
  2346 05:83AA: 22 97 80 05  	jsl	~~flpydsk_send_command
  2347                        ;	data = (loadt) << 1 | (dma == FALSE) ? 0 : 1;
  2348                        	.line	486
  2349 05:83AE: A5 18        	lda	<L69+loadt_0
  2350 05:83B0: 85 01        	sta	<R0
  Thu Jul 29 2021 11:48                                                Page 46


  2351 05:83B2: A5 1A        	lda	<L69+loadt_0+2
  2352 05:83B4: 85 03        	sta	<R0+2
  2353 05:83B6: 06 01        	asl	<R0
  2354 05:83B8: 26 03        	rol	<R0+2
  2355 05:83BA: 64 05        	stz	<R1
  2356 05:83BC: A5 20        	lda	<L69+dma_0
  2357 05:83BE: 29 FF 00     	and	#$ff
  2358 05:83C1: F0 03        	beq	L74
  2359 05:83C3: 82 02 00     	brl	L73
  2360                        L74:
  2361 05:83C6: E6 05        	inc	<R1
  2362                        L73:
  2363 05:83C8: A0 00 00     	ldy	#$0
  2364 05:83CB: A5 05        	lda	<R1
  2365 05:83CD: 10 01        	bpl	L75
  2366 05:83CF: 88           	dey
  2367                        L75:
  2368 05:83D0: 85 05        	sta	<R1
  2369 05:83D2: 84 07        	sty	<R1+2
  2370 05:83D4: A5 05        	lda	<R1
  2371 05:83D6: 05 01        	ora	<R0
  2372 05:83D8: 85 09        	sta	<R2
  2373 05:83DA: A5 07        	lda	<R1+2
  2374 05:83DC: 05 03        	ora	<R0+2
  2375 05:83DE: 85 0B        	sta	<R2+2
  2376 05:83E0: A5 09        	lda	<R2
  2377 05:83E2: 05 0B        	ora	<R2+2
  2378 05:83E4: D0 03        	bne	L76
  2379 05:83E6: 82 05 00     	brl	L72
  2380                        L76:
  2381 05:83E9: A9 00 00     	lda	#$0
  2382 05:83EC: 80 03        	bra	L77
  2383                        L72:
  2384 05:83EE: A9 01 00     	lda	#$1
  2385                        L77:
  2386 05:83F1: 85 01        	sta	<R0
  2387 05:83F3: A0 00 00     	ldy	#$0
  2388 05:83F6: A5 01        	lda	<R0
  2389 05:83F8: 10 01        	bpl	L78
  2390 05:83FA: 88           	dey
  2391                        L78:
  2392 05:83FB: 85 0D        	sta	<L70+data_1
  2393 05:83FD: 84 0F        	sty	<L70+data_1+2
  2394                        ;	flpydsk_send_command(data);
  2395                        	.line	487
  2396 05:83FF: D4 0D        	pei	<L70+data_1
  2397 05:8401: 22 97 80 05  	jsl	~~flpydsk_send_command
  2398                        ;}
  2399                        	.line	488
  2400                        L79:
  2401 05:8405: A5 12        	lda	<L69+2
  2402 05:8407: 85 20        	sta	<L69+2+14
  2403 05:8409: A5 11        	lda	<L69+1
  2404 05:840B: 85 1F        	sta	<L69+1+14
  2405 05:840D: 2B           	pld
  2406 05:840E: 3B           	tsc
  2407 05:840F: 18           	clc
  2408 05:8410: 69 1E 00     	adc	#L69+14
  Thu Jul 29 2021 11:48                                                Page 47


  2409 05:8413: 1B           	tcs
  2410 05:8414: 6B           	rtl
  2411                        	.endblock	488
  2412             00000010   L69	equ	16
  2413             0000000D   L70	equ	13
  2414 05:8415:              	ends
  2415                        	efunc
  2416                        	.endfunc	488,13,16
  2417                        	.line	488
  2418                        	data
  2419                        L68:
  2420 00:0138: 66 6C 70 79  	db	$66,$6C,$70,$79,$64,$73,$6B,$5F,$64,$72,
                    $69,$76,$65,$5F,$64
       00:013C: 64 73 6B 5F 
       00:0140: 64 72 69 76 
       00:0144: 65 5F 64 
  2421 00:0147: 61 74 61 0D  	db	$61,$74,$61,$0D,$0A,$00
       00:014B: 0A 00 
  2422 00:014D:              	ends
  2423                        ;
  2424                        ;//! calibrates the drive
  2425                        ;int flpydsk_calibrate(uint32_t drive)
  2426                        ;{
  2427                        	.line	491
  2428                        	.line	492
  2429                        	FLPY
  2430                        	xdef	~~flpydsk_calibrate
  2431                        	func
  2432                        	.function	492
  2433                        ~~flpydsk_calibrate:
  2434                        	longa	on
  2435                        	longi	on
  2436 05:8415: 3B           	tsc
  2437 05:8416: 38           	sec
  2438 05:8417: E9 0A 00     	sbc	#L81
  2439 05:841A: 1B           	tcs
  2440 05:841B: 0B           	phd
  2441 05:841C: 5B           	tcd
  2442             00000004   drive_0	set	4
  2443                        	.block	492
  2444                        ;	int i;
  2445                        ;	uint32_t st0, cyl;
  2446                        ;
  2447                        ;	k_debug_string("flpydsk_calibrate\r\n");
  2448             00000000   i_1	set	0
  2449             00000002   st0_1	set	2
  2450             00000006   cyl_1	set	6
  2451                        	.sym	i,0,5,1,16
  2452                        	.sym	st0,2,18,1,32
  2453                        	.sym	cyl,6,18,1,32
  2454                        	.sym	drive,4,18,6,32
  2455                        	.line	496
  2456 05:841D: F4 xx xx     	pea	#^L80
  2457 05:8420: F4 xx xx     	pea	#<L80
  2458 05:8423: 22 xx xx xx  	jsl	~~k_debug_string
  2459                        ;
  2460                        ;	if (drive >= 4)
  2461                        	.line	498
  Thu Jul 29 2021 11:48                                                Page 48


  2462                        ;		return -2;
  2463 05:8427: A5 0E        	lda	<L81+drive_0
  2464 05:8429: C9 04 00     	cmp	#<$4
  2465 05:842C: A5 10        	lda	<L81+drive_0+2
  2466 05:842E: E9 00 00     	sbc	#^$4
  2467 05:8431: B0 03        	bcs	L84
  2468 05:8433: 82 15 00     	brl	L10022
  2469                        L84:
  2470                        	.line	499
  2471 05:8436: A9 FE FF     	lda	#$fffe
  2472                        L85:
  2473 05:8439: A8           	tay
  2474 05:843A: A5 0C        	lda	<L81+2
  2475 05:843C: 85 10        	sta	<L81+2+4
  2476 05:843E: A5 0B        	lda	<L81+1
  2477 05:8440: 85 0F        	sta	<L81+1+4
  2478 05:8442: 2B           	pld
  2479 05:8443: 3B           	tsc
  2480 05:8444: 18           	clc
  2481 05:8445: 69 0E 00     	adc	#L81+4
  2482 05:8448: 1B           	tcs
  2483 05:8449: 98           	tya
  2484 05:844A: 6B           	rtl
  2485                        ;
  2486                        ;	//! turn on the motor
  2487                        ;	flpydsk_control_motor(TRUE);
  2488                        L10022:
  2489                        	.line	502
  2490 05:844B: F4 01 00     	pea	#<$1
  2491 05:844E: 22 8C 82 05  	jsl	~~flpydsk_control_motor
  2492                        ;
  2493                        ;	for (i = 0; i < 100; i++)
  2494                        	.line	504
  2495 05:8452: 64 01        	stz	<L82+i_1
  2496                        L10025:
  2497                        ;	{
  2498                        	.line	505
  2499                        ;
  2500                        ;		//! send command
  2501                        ;		flpydsk_send_command(FDC_CMD_CALIBRATE);
  2502                        	.line	508
  2503 05:8454: F4 07 00     	pea	#<$7
  2504 05:8457: 22 97 80 05  	jsl	~~flpydsk_send_command
  2505                        ;		flpydsk_send_command(drive);
  2506                        	.line	509
  2507 05:845B: D4 0E        	pei	<L81+drive_0
  2508 05:845D: 22 97 80 05  	jsl	~~flpydsk_send_command
  2509                        ;		flpydsk_wait_irq();
  2510                        	.line	510
  2511                        L10026:
  2512 05:8461: AD xx xx     	lda	|~~_FloppyDiskIRQ
  2513 05:8464: 29 FF 00     	and	#$ff
  2514 05:8467: F0 03        	beq	L86
  2515 05:8469: 82 03 00     	brl	L10027
  2516                        L86:
  2517                        	.line	510
  2518 05:846C: 82 F2 FF     	brl	L10026
  2519                        L10027:
  Thu Jul 29 2021 11:48                                                Page 49


  2520                        	.line	510
  2521 05:846F: E2 20        	sep	#$20
  2522                        	longa	off
  2523 05:8471: 9C xx xx     	stz	|~~_FloppyDiskIRQ
  2524 05:8474: C2 20        	rep	#$20
  2525                        	longa	on
  2526                        	.line	510
  2527                        ;		flpydsk_check_int(&st0, &cyl);
  2528                        	.line	511
  2529 05:8476: F4 00 00     	pea	#0
  2530 05:8479: 18           	clc
  2531 05:847A: 7B           	tdc
  2532 05:847B: 69 07 00     	adc	#<L82+cyl_1
  2533 05:847E: 48           	pha
  2534 05:847F: F4 00 00     	pea	#0
  2535 05:8482: 18           	clc
  2536 05:8483: 7B           	tdc
  2537 05:8484: 69 03 00     	adc	#<L82+st0_1
  2538 05:8487: 48           	pha
  2539 05:8488: 22 01 82 05  	jsl	~~flpydsk_check_int
  2540                        ;
  2541                        ;		//! did we fine cylinder 0? if so, we ar
                    e done
  2542                        ;		if (!cyl)
  2543                        	.line	514
  2544                        ;		{
  2545 05:848C: A5 07        	lda	<L82+cyl_1
  2546 05:848E: 05 09        	ora	<L82+cyl_1+2
  2547 05:8490: F0 03        	beq	L87
  2548 05:8492: 82 1B 00     	brl	L10028
  2549                        L87:
  2550                        	.line	515
  2551                        ;
  2552                        ;			k_debug_long("flpydsk_calibrate:
                    cy:", cyl);
  2553                        	.line	517
  2554 05:8495: D4 09        	pei	<L82+cyl_1+2
  2555 05:8497: D4 07        	pei	<L82+cyl_1
  2556 05:8499: F4 xx xx     	pea	#^L80+20
  2557 05:849C: F4 xx xx     	pea	#<L80+20
  2558 05:849F: 22 xx xx xx  	jsl	~~k_debug_long
  2559                        ;			flpydsk_control_motor(FALSE);
  2560                        	.line	518
  2561 05:84A3: F4 00 00     	pea	#<$0
  2562 05:84A6: 22 8C 82 05  	jsl	~~flpydsk_control_motor
  2563                        ;			return 0;
  2564                        	.line	519
  2565 05:84AA: A9 00 00     	lda	#$0
  2566 05:84AD: 82 89 FF     	brl	L85
  2567                        ;		}
  2568                        	.line	520
  2569                        ;	}
  2570                        L10028:
  2571                        	.line	521
  2572                        L10023:
  2573 05:84B0: E6 01        	inc	<L82+i_1
  2574 05:84B2: 38           	sec
  2575 05:84B3: A5 01        	lda	<L82+i_1
  Thu Jul 29 2021 11:48                                                Page 50


  2576 05:84B5: E9 64 00     	sbc	#<$64
  2577 05:84B8: 70 03        	bvs	L88
  2578 05:84BA: 49 00 80     	eor	#$8000
  2579                        L88:
  2580 05:84BD: 30 03        	bmi	L89
  2581 05:84BF: 82 92 FF     	brl	L10025
  2582                        L89:
  2583                        L10024:
  2584                        ;
  2585                        ;	flpydsk_control_motor(FALSE);
  2586                        	.line	523
  2587 05:84C2: F4 00 00     	pea	#<$0
  2588 05:84C5: 22 8C 82 05  	jsl	~~flpydsk_control_motor
  2589                        ;	return -1;
  2590                        	.line	524
  2591 05:84C9: A9 FF FF     	lda	#$ffff
  2592 05:84CC: 82 6A FF     	brl	L85
  2593                        ;}
  2594                        	.line	525
  2595                        	.endblock	525
  2596             0000000A   L81	equ	10
  2597             00000001   L82	equ	1
  2598 05:84CF:              	ends
  2599                        	efunc
  2600                        	.endfunc	525,1,10
  2601                        	.line	525
  2602                        	data
  2603                        L80:
  2604 00:014D: 66 6C 70 79  	db	$66,$6C,$70,$79,$64,$73,$6B,$5F,$63,$61,
                    $6C,$69,$62,$72,$61
       00:0151: 64 73 6B 5F 
       00:0155: 63 61 6C 69 
       00:0159: 62 72 61 
  2605 00:015C: 74 65 0D 0A  	db	$74,$65,$0D,$0A,$00,$66,$6C,$70,$79,$64,
                    $73,$6B,$5F,$63,$61
       00:0160: 00 66 6C 70 
       00:0164: 79 64 73 6B 
       00:0168: 5F 63 61 
  2606 00:016B: 6C 69 62 72  	db	$6C,$69,$62,$72,$61,$74,$65,$3A,$63,$79,
                    $3A,$00
       00:016F: 61 74 65 3A 
       00:0173: 63 79 3A 00 
  2607 00:0177:              	ends
  2608                        ;
  2609                        ;//! disable controller
  2610                        ;void flpydsk_disable_controller()
  2611                        ;{
  2612                        	.line	528
  2613                        	.line	529
  2614                        	FLPY
  2615                        	xdef	~~flpydsk_disable_controller
  2616                        	func
  2617                        	.function	529
  2618                        ~~flpydsk_disable_controller:
  2619                        	longa	on
  2620                        	longi	on
  2621 05:84CF: 3B           	tsc
  2622 05:84D0: 38           	sec
  Thu Jul 29 2021 11:48                                                Page 51


  2623 05:84D1: E9 00 00     	sbc	#L91
  2624 05:84D4: 1B           	tcs
  2625 05:84D5: 0B           	phd
  2626 05:84D6: 5B           	tcd
  2627                        	.block	529
  2628                        ;	k_debug_string("flpydsk_disable_controller\r\n")
                    ;
  2629                        	.line	530
  2630 05:84D7: F4 xx xx     	pea	#^L90
  2631 05:84DA: F4 xx xx     	pea	#<L90
  2632 05:84DD: 22 xx xx xx  	jsl	~~k_debug_string
  2633                        ;	flpydsk_write_dor(0);
  2634                        	.line	531
  2635 05:84E1: F4 00 00     	pea	#<$0
  2636 05:84E4: 22 69 80 05  	jsl	~~flpydsk_write_dor
  2637                        ;}
  2638                        	.line	532
  2639                        L94:
  2640 05:84E8: 2B           	pld
  2641 05:84E9: 3B           	tsc
  2642 05:84EA: 18           	clc
  2643 05:84EB: 69 00 00     	adc	#L91
  2644 05:84EE: 1B           	tcs
  2645 05:84EF: 6B           	rtl
  2646                        	.endblock	532
  2647             00000000   L91	equ	0
  2648             00000001   L92	equ	1
  2649 05:84F0:              	ends
  2650                        	efunc
  2651                        	.endfunc	532,1,0
  2652                        	.line	532
  2653                        	data
  2654                        L90:
  2655 00:0177: 66 6C 70 79  	db	$66,$6C,$70,$79,$64,$73,$6B,$5F,$64,$69,
                    $73,$61,$62,$6C,$65
       00:017B: 64 73 6B 5F 
       00:017F: 64 69 73 61 
       00:0183: 62 6C 65 
  2656 00:0186: 5F 63 6F 6E  	db	$5F,$63,$6F,$6E,$74,$72,$6F,$6C,$6C,$65,
                    $72,$0D,$0A,$00
       00:018A: 74 72 6F 6C 
       00:018E: 6C 65 72 0D 
       00:0192: 0A 00 
  2657 00:0194:              	ends
  2658                        ;
  2659                        ;//! enable controller
  2660                        ;void flpydsk_enable_controller()
  2661                        ;{
  2662                        	.line	535
  2663                        	.line	536
  2664                        	FLPY
  2665                        	xdef	~~flpydsk_enable_controller
  2666                        	func
  2667                        	.function	536
  2668                        ~~flpydsk_enable_controller:
  2669                        	longa	on
  2670                        	longi	on
  2671 05:84F0: 3B           	tsc
  Thu Jul 29 2021 11:48                                                Page 52


  2672 05:84F1: 38           	sec
  2673 05:84F2: E9 00 00     	sbc	#L96
  2674 05:84F5: 1B           	tcs
  2675 05:84F6: 0B           	phd
  2676 05:84F7: 5B           	tcd
  2677                        	.block	536
  2678                        ;	k_debug_string("flpydsk_enable_controller\r\n");
  2679                        	.line	537
  2680 05:84F8: F4 xx xx     	pea	#^L95
  2681 05:84FB: F4 xx xx     	pea	#<L95
  2682 05:84FE: 22 xx xx xx  	jsl	~~k_debug_string
  2683                        ;	flpydsk_write_dor(FLPYDSK_DOR_MASK_RESET | FLPYD
                    SK_DOR_MASK_DMA);
  2684                        	.line	538
  2685 05:8502: F4 0C 00     	pea	#<$c
  2686 05:8505: 22 69 80 05  	jsl	~~flpydsk_write_dor
  2687                        ;	//flpydsk_write_dor(FLPYDSK_DOR_MASK_RESET);
  2688                        ;}
  2689                        	.line	540
  2690                        L99:
  2691 05:8509: 2B           	pld
  2692 05:850A: 3B           	tsc
  2693 05:850B: 18           	clc
  2694 05:850C: 69 00 00     	adc	#L96
  2695 05:850F: 1B           	tcs
  2696 05:8510: 6B           	rtl
  2697                        	.endblock	540
  2698             00000000   L96	equ	0
  2699             00000001   L97	equ	1
  2700 05:8511:              	ends
  2701                        	efunc
  2702                        	.endfunc	540,1,0
  2703                        	.line	540
  2704                        	data
  2705                        L95:
  2706 00:0194: 66 6C 70 79  	db	$66,$6C,$70,$79,$64,$73,$6B,$5F,$65,$6E,
                    $61,$62,$6C,$65,$5F
       00:0198: 64 73 6B 5F 
       00:019C: 65 6E 61 62 
       00:01A0: 6C 65 5F 
  2707 00:01A3: 63 6F 6E 74  	db	$63,$6F,$6E,$74,$72,$6F,$6C,$6C,$65,$72,
                    $0D,$0A,$00
       00:01A7: 72 6F 6C 6C 
       00:01AB: 65 72 0D 0A 
       00:01AF: 00 
  2708 00:01B0:              	ends
  2709                        ;
  2710                        ;//! reset controller
  2711                        ;void flpydsk_reset(void)
  2712                        ;{
  2713                        	.line	543
  2714                        	.line	544
  2715                        	FLPY
  2716                        	xdef	~~flpydsk_reset
  2717                        	func
  2718                        	.function	544
  2719                        ~~flpydsk_reset:
  2720                        	longa	on
  Thu Jul 29 2021 11:48                                                Page 53


  2721                        	longi	on
  2722 05:8511: 3B           	tsc
  2723 05:8512: 38           	sec
  2724 05:8513: E9 0E 00     	sbc	#L101
  2725 05:8516: 1B           	tcs
  2726 05:8517: 0B           	phd
  2727 05:8518: 5B           	tcd
  2728                        	.block	544
  2729                        ;	int i;
  2730                        ;	uint32_t st0, cyl;
  2731                        ;
  2732                        ;	k_debug_string("flpydsk_reset\r\n");
  2733             00000000   i_1	set	0
  2734             00000002   st0_1	set	2
  2735             00000006   cyl_1	set	6
  2736                        	.sym	i,0,5,1,16
  2737                        	.sym	st0,2,18,1,32
  2738                        	.sym	cyl,6,18,1,32
  2739                        	.line	548
  2740 05:8519: F4 xx xx     	pea	#^L100
  2741 05:851C: F4 xx xx     	pea	#<L100
  2742 05:851F: 22 xx xx xx  	jsl	~~k_debug_string
  2743                        ;
  2744                        ;	//! reset the controller
  2745                        ;	flpydsk_disable_controller();
  2746                        	.line	551
  2747 05:8523: 22 CF 84 05  	jsl	~~flpydsk_disable_controller
  2748                        ;	flpydsk_enable_controller();
  2749                        	.line	552
  2750 05:8527: 22 F0 84 05  	jsl	~~flpydsk_enable_controller
  2751                        ;	flpydsk_wait_irq();
  2752                        	.line	553
  2753                        L10029:
  2754 05:852B: AD xx xx     	lda	|~~_FloppyDiskIRQ
  2755 05:852E: 29 FF 00     	and	#$ff
  2756 05:8531: F0 03        	beq	L104
  2757 05:8533: 82 03 00     	brl	L10030
  2758                        L104:
  2759                        	.line	553
  2760 05:8536: 82 F2 FF     	brl	L10029
  2761                        L10030:
  2762                        	.line	553
  2763 05:8539: E2 20        	sep	#$20
  2764                        	longa	off
  2765 05:853B: 9C xx xx     	stz	|~~_FloppyDiskIRQ
  2766 05:853E: C2 20        	rep	#$20
  2767                        	longa	on
  2768                        	.line	553
  2769                        ;
  2770                        ;	//! send CHECK_INT/SENSE INTERRUPT command to al
                    l drives
  2771                        ;	for (i = 0; i < 4; i++)
  2772                        	.line	556
  2773 05:8540: 64 05        	stz	<L102+i_1
  2774                        L10033:
  2775                        ;		flpydsk_check_int(&st0, &cyl);
  2776                        	.line	557
  2777 05:8542: F4 00 00     	pea	#0
  Thu Jul 29 2021 11:48                                                Page 54


  2778 05:8545: 18           	clc
  2779 05:8546: 7B           	tdc
  2780 05:8547: 69 0B 00     	adc	#<L102+cyl_1
  2781 05:854A: 48           	pha
  2782 05:854B: F4 00 00     	pea	#0
  2783 05:854E: 18           	clc
  2784 05:854F: 7B           	tdc
  2785 05:8550: 69 07 00     	adc	#<L102+st0_1
  2786 05:8553: 48           	pha
  2787 05:8554: 22 01 82 05  	jsl	~~flpydsk_check_int
  2788                        L10031:
  2789 05:8558: E6 05        	inc	<L102+i_1
  2790 05:855A: A5 05        	lda	<L102+i_1
  2791 05:855C: 30 06        	bmi	L105
  2792 05:855E: 3A           	dea
  2793 05:855F: 3A           	dea
  2794 05:8560: 3A           	dea
  2795 05:8561: 3A           	dea
  2796 05:8562: 10 03        	bpl	L106
  2797                        L105:
  2798 05:8564: 82 DB FF     	brl	L10033
  2799                        L106:
  2800                        L10032:
  2801                        ;
  2802                        ;	//! transfer speed 500kb/s
  2803                        ;	flpydsk_write_ccr(0);
  2804                        	.line	560
  2805 05:8567: F4 00 00     	pea	#<$0
  2806 05:856A: 22 C5 81 05  	jsl	~~flpydsk_write_ccr
  2807                        ;
  2808                        ;	//! pass mechanical drive info. steprate=3ms, un
                    load time=240ms, load time=16ms
  2809                        ;	flpydsk_drive_data(3, 16, 240, FALSE);
  2810                        	.line	563
  2811 05:856E: F4 00 00     	pea	#<$0
  2812 05:8571: F4 00 00     	pea	#^$f0
  2813 05:8574: F4 F0 00     	pea	#<$f0
  2814 05:8577: F4 00 00     	pea	#^$10
  2815 05:857A: F4 10 00     	pea	#<$10
  2816 05:857D: F4 00 00     	pea	#^$3
  2817 05:8580: F4 03 00     	pea	#<$3
  2818 05:8583: 22 5E 83 05  	jsl	~~flpydsk_drive_data
  2819                        ;
  2820                        ;	//! calibrate the disk
  2821                        ;	i = flpydsk_calibrate(_CurrentDrive);
  2822                        	.line	566
  2823 05:8587: AD xx xx     	lda	|~~_CurrentDrive
  2824 05:858A: 29 FF 00     	and	#$ff
  2825 05:858D: 85 01        	sta	<R0
  2826 05:858F: 64 03        	stz	<R0+2
  2827 05:8591: D4 03        	pei	<R0+2
  2828 05:8593: D4 01        	pei	<R0
  2829 05:8595: 22 15 84 05  	jsl	~~flpydsk_calibrate
  2830 05:8599: 85 05        	sta	<L102+i_1
  2831                        ;	k_debug_integer("flpydsk_calibrate:", i);
  2832                        	.line	567
  2833 05:859B: D4 05        	pei	<L102+i_1
  2834 05:859D: F4 xx xx     	pea	#^L100+16
  Thu Jul 29 2021 11:48                                                Page 55


  2835 05:85A0: F4 xx xx     	pea	#<L100+16
  2836 05:85A3: 22 xx xx xx  	jsl	~~k_debug_integer
  2837                        ;}
  2838                        	.line	568
  2839                        L107:
  2840 05:85A7: 2B           	pld
  2841 05:85A8: 3B           	tsc
  2842 05:85A9: 18           	clc
  2843 05:85AA: 69 0E 00     	adc	#L101
  2844 05:85AD: 1B           	tcs
  2845 05:85AE: 6B           	rtl
  2846                        	.endblock	568
  2847             0000000E   L101	equ	14
  2848             00000005   L102	equ	5
  2849 05:85AF:              	ends
  2850                        	efunc
  2851                        	.endfunc	568,5,14
  2852                        	.line	568
  2853                        	data
  2854                        L100:
  2855 00:01B0: 66 6C 70 79  	db	$66,$6C,$70,$79,$64,$73,$6B,$5F,$72,$65,
                    $73,$65,$74,$0D,$0A
       00:01B4: 64 73 6B 5F 
       00:01B8: 72 65 73 65 
       00:01BC: 74 0D 0A 
  2856 00:01BF: 00 66 6C 70  	db	$00,$66,$6C,$70,$79,$64,$73,$6B,$5F,$63,
                    $61,$6C,$69,$62,$72
       00:01C3: 79 64 73 6B 
       00:01C7: 5F 63 61 6C 
       00:01CB: 69 62 72 
  2857 00:01CE: 61 74 65 3A  	db	$61,$74,$65,$3A,$00
       00:01D2: 00 
  2858 00:01D3:              	ends
  2859                        ;
  2860                        ;//! read a sector
  2861                        ;void flpydsk_read_sector_imp(uint8_t head, uint8_
                    t track, uint8_t sector)
  2862                        ;{
  2863                        	.line	571
  2864                        	.line	572
  2865                        	FLPY
  2866                        	xdef	~~flpydsk_read_sector_imp
  2867                        	func
  2868                        	.function	572
  2869                        ~~flpydsk_read_sector_imp:
  2870                        	longa	on
  2871                        	longi	on
  2872 05:85AF: 3B           	tsc
  2873 05:85B0: 38           	sec
  2874 05:85B1: E9 12 00     	sbc	#L109
  2875 05:85B4: 1B           	tcs
  2876 05:85B5: 0B           	phd
  2877 05:85B6: 5B           	tcd
  2878             00000004   head_0	set	4
  2879             00000006   track_0	set	6
  2880             00000008   sector_0	set	8
  2881                        	.block	572
  2882                        ;	int j;
  Thu Jul 29 2021 11:48                                                Page 56


  2883                        ;	uint32_t st0, cyl;
  2884                        ;
  2885                        ;	k_debug_integer("flpydsk_read_sector_imp:", sect
                    or);
  2886             00000000   j_1	set	0
  2887             00000002   st0_1	set	2
  2888             00000006   cyl_1	set	6
  2889                        	.sym	j,0,5,1,16
  2890                        	.sym	st0,2,18,1,32
  2891                        	.sym	cyl,6,18,1,32
  2892                        	.sym	head,4,14,6,8
  2893                        	.sym	track,6,14,6,8
  2894                        	.sym	sector,8,14,6,8
  2895                        	.line	576
  2896 05:85B7: A5 1A        	lda	<L109+sector_0
  2897 05:85B9: 29 FF 00     	and	#$ff
  2898 05:85BC: 48           	pha
  2899 05:85BD: F4 xx xx     	pea	#^L108
  2900 05:85C0: F4 xx xx     	pea	#<L108
  2901 05:85C3: 22 xx xx xx  	jsl	~~k_debug_integer
  2902                        ;
  2903                        ;	//! set the DMA for read transfer
  2904                        ;	flpydsk_dma_read();
  2905                        	.line	579
  2906 05:85C7: 22 0F 80 05  	jsl	~~flpydsk_dma_read
  2907                        ;
  2908                        ;	//! read in a sector
  2909                        ;	flpydsk_send_command(
  2910                        	.line	582
  2911                        ;			FDC_CMD_READ_SECT | FDC_CMD_EXT_
                    MULTITRACK | FDC_CMD_EXT_SKIP
  2912                        ;					| FDC_CMD_EXT_DE
                    NSITY);
  2913 05:85CB: F4 E6 00     	pea	#<$e6
  2914 05:85CE: 22 97 80 05  	jsl	~~flpydsk_send_command
  2915                        ;	flpydsk_send_command(head << 2 | _CurrentDrive);
  2916                        	.line	585
  2917 05:85D2: A5 16        	lda	<L109+head_0
  2918 05:85D4: 29 FF 00     	and	#$ff
  2919 05:85D7: 85 05        	sta	<R1
  2920 05:85D9: A5 05        	lda	<R1
  2921 05:85DB: 0A           	asl	A
  2922 05:85DC: 0A           	asl	A
  2923 05:85DD: 85 01        	sta	<R0
  2924 05:85DF: AD xx xx     	lda	|~~_CurrentDrive
  2925 05:85E2: 29 FF 00     	and	#$ff
  2926 05:85E5: 85 05        	sta	<R1
  2927 05:85E7: A5 05        	lda	<R1
  2928 05:85E9: 05 01        	ora	<R0
  2929 05:85EB: 48           	pha
  2930 05:85EC: 22 97 80 05  	jsl	~~flpydsk_send_command
  2931                        ;	flpydsk_send_command(track);
  2932                        	.line	586
  2933 05:85F0: D4 18        	pei	<L109+track_0
  2934 05:85F2: 22 97 80 05  	jsl	~~flpydsk_send_command
  2935                        ;	flpydsk_send_command(head);
  2936                        	.line	587
  2937 05:85F6: D4 16        	pei	<L109+head_0
  Thu Jul 29 2021 11:48                                                Page 57


  2938 05:85F8: 22 97 80 05  	jsl	~~flpydsk_send_command
  2939                        ;	flpydsk_send_command(sector);
  2940                        	.line	588
  2941 05:85FC: D4 1A        	pei	<L109+sector_0
  2942 05:85FE: 22 97 80 05  	jsl	~~flpydsk_send_command
  2943                        ;	flpydsk_send_command(FLPYDSK_SECTOR_DTL_512);
  2944                        	.line	589
  2945 05:8602: F4 02 00     	pea	#<$2
  2946 05:8605: 22 97 80 05  	jsl	~~flpydsk_send_command
  2947                        ;	flpydsk_send_command(((sector + 1) >= FLPY_SECTO
                    RS_PER_TRACK) ? FLPY_SECTORS_PER_TRACK : sector + 1);
  2948                        	.line	590
  2949 05:8609: A5 1A        	lda	<L109+sector_0
  2950 05:860B: 29 FF 00     	and	#$ff
  2951 05:860E: 85 01        	sta	<R0
  2952 05:8610: A5 01        	lda	<R0
  2953 05:8612: 1A           	ina
  2954 05:8613: 85 05        	sta	<R1
  2955 05:8615: 38           	sec
  2956 05:8616: A5 05        	lda	<R1
  2957 05:8618: E9 12 00     	sbc	#<$12
  2958 05:861B: 70 03        	bvs	L113
  2959 05:861D: 49 00 80     	eor	#$8000
  2960                        L113:
  2961 05:8620: 30 03        	bmi	L114
  2962 05:8622: 82 09 00     	brl	L112
  2963                        L114:
  2964 05:8625: A9 00 00     	lda	#$0
  2965 05:8628: AA           	tax
  2966 05:8629: A9 12 00     	lda	#$12
  2967 05:862C: 80 1C        	bra	L115
  2968                        L112:
  2969 05:862E: A5 1A        	lda	<L109+sector_0
  2970 05:8630: 29 FF 00     	and	#$ff
  2971 05:8633: 85 01        	sta	<R0
  2972 05:8635: A5 01        	lda	<R0
  2973 05:8637: 1A           	ina
  2974 05:8638: 85 05        	sta	<R1
  2975 05:863A: A0 00 00     	ldy	#$0
  2976 05:863D: A5 05        	lda	<R1
  2977 05:863F: 10 01        	bpl	L116
  2978 05:8641: 88           	dey
  2979                        L116:
  2980 05:8642: 85 01        	sta	<R0
  2981 05:8644: 84 03        	sty	<R0+2
  2982 05:8646: A6 03        	ldx	<R0+2
  2983 05:8648: A5 01        	lda	<R0
  2984                        L115:
  2985 05:864A: 85 01        	sta	<R0
  2986 05:864C: 86 03        	stx	<R0+2
  2987 05:864E: D4 01        	pei	<R0
  2988 05:8650: 22 97 80 05  	jsl	~~flpydsk_send_command
  2989                        ;	flpydsk_send_command(FLPYDSK_GAP3_LENGTH_3_5);
  2990                        	.line	591
  2991 05:8654: F4 1B 00     	pea	#<$1b
  2992 05:8657: 22 97 80 05  	jsl	~~flpydsk_send_command
  2993                        ;	flpydsk_send_command(0xff);
  2994                        	.line	592
  Thu Jul 29 2021 11:48                                                Page 58


  2995 05:865B: F4 FF 00     	pea	#<$ff
  2996 05:865E: 22 97 80 05  	jsl	~~flpydsk_send_command
  2997                        ;
  2998                        ;	//! wait for irq
  2999                        ;	flpydsk_wait_irq();
  3000                        	.line	595
  3001                        L10034:
  3002 05:8662: AD xx xx     	lda	|~~_FloppyDiskIRQ
  3003 05:8665: 29 FF 00     	and	#$ff
  3004 05:8668: F0 03        	beq	L117
  3005 05:866A: 82 03 00     	brl	L10035
  3006                        L117:
  3007                        	.line	595
  3008 05:866D: 82 F2 FF     	brl	L10034
  3009                        L10035:
  3010                        	.line	595
  3011 05:8670: E2 20        	sep	#$20
  3012                        	longa	off
  3013 05:8672: 9C xx xx     	stz	|~~_FloppyDiskIRQ
  3014 05:8675: C2 20        	rep	#$20
  3015                        	longa	on
  3016                        	.line	595
  3017                        ;
  3018                        ;	//! read status info
  3019                        ;	for (j = 0; j < 7; j++)
  3020                        	.line	598
  3021 05:8677: 64 09        	stz	<L110+j_1
  3022                        L10038:
  3023                        ;		flpydsk_read_data();
  3024                        	.line	599
  3025 05:8679: 22 5F 81 05  	jsl	~~flpydsk_read_data
  3026                        L10036:
  3027 05:867D: E6 09        	inc	<L110+j_1
  3028 05:867F: 38           	sec
  3029 05:8680: A5 09        	lda	<L110+j_1
  3030 05:8682: E9 07 00     	sbc	#<$7
  3031 05:8685: 70 03        	bvs	L118
  3032 05:8687: 49 00 80     	eor	#$8000
  3033                        L118:
  3034 05:868A: 30 03        	bmi	L119
  3035 05:868C: 82 EA FF     	brl	L10038
  3036                        L119:
  3037                        L10037:
  3038                        ;
  3039                        ;	//! let FDC know we handled interrupt
  3040                        ;	flpydsk_check_int(&st0, &cyl);
  3041                        	.line	602
  3042 05:868F: F4 00 00     	pea	#0
  3043 05:8692: 18           	clc
  3044 05:8693: 7B           	tdc
  3045 05:8694: 69 0F 00     	adc	#<L110+cyl_1
  3046 05:8697: 48           	pha
  3047 05:8698: F4 00 00     	pea	#0
  3048 05:869B: 18           	clc
  3049 05:869C: 7B           	tdc
  3050 05:869D: 69 0B 00     	adc	#<L110+st0_1
  3051 05:86A0: 48           	pha
  3052 05:86A1: 22 01 82 05  	jsl	~~flpydsk_check_int
  Thu Jul 29 2021 11:48                                                Page 59


  3053                        ;}
  3054                        	.line	603
  3055                        L120:
  3056 05:86A5: A5 14        	lda	<L109+2
  3057 05:86A7: 85 1A        	sta	<L109+2+6
  3058 05:86A9: A5 13        	lda	<L109+1
  3059 05:86AB: 85 19        	sta	<L109+1+6
  3060 05:86AD: 2B           	pld
  3061 05:86AE: 3B           	tsc
  3062 05:86AF: 18           	clc
  3063 05:86B0: 69 18 00     	adc	#L109+6
  3064 05:86B3: 1B           	tcs
  3065 05:86B4: 6B           	rtl
  3066                        	.endblock	603
  3067             00000012   L109	equ	18
  3068             00000009   L110	equ	9
  3069 05:86B5:              	ends
  3070                        	efunc
  3071                        	.endfunc	603,9,18
  3072                        	.line	603
  3073                        	data
  3074                        L108:
  3075 00:01D3: 66 6C 70 79  	db	$66,$6C,$70,$79,$64,$73,$6B,$5F,$72,$65,
                    $61,$64,$5F,$73,$65
       00:01D7: 64 73 6B 5F 
       00:01DB: 72 65 61 64 
       00:01DF: 5F 73 65 
  3076 00:01E2: 63 74 6F 72  	db	$63,$74,$6F,$72,$5F,$69,$6D,$70,$3A,$00
       00:01E6: 5F 69 6D 70 
       00:01EA: 3A 00 
  3077 00:01EC:              	ends
  3078                        ;
  3079                        ;//! read a sector
  3080                        ;void flpydsk_read_sector_imp2(uint8_t head, uint8
                    _t track, uint8_t sector)
  3081                        ;{
  3082                        	.line	606
  3083                        	.line	607
  3084                        	FLPY
  3085                        	xdef	~~flpydsk_read_sector_imp2
  3086                        	func
  3087                        	.function	607
  3088                        ~~flpydsk_read_sector_imp2:
  3089                        	longa	on
  3090                        	longi	on
  3091 05:86B5: 3B           	tsc
  3092 05:86B6: 38           	sec
  3093 05:86B7: E9 13 00     	sbc	#L122
  3094 05:86BA: 1B           	tcs
  3095 05:86BB: 0B           	phd
  3096 05:86BC: 5B           	tcd
  3097             00000004   head_0	set	4
  3098             00000006   track_0	set	6
  3099             00000008   sector_0	set	8
  3100                        	.block	607
  3101                        ;	int j;
  3102                        ;	UCHAR data;
  3103                        ;	uint32_t st0, cyl;
  Thu Jul 29 2021 11:48                                                Page 60


  3104                        ;
  3105                        ;	k_debug_integer("flpydsk_read_sector_imp2:", sec
                    tor);
  3106             00000000   j_1	set	0
  3107             00000002   data_1	set	2
  3108             00000003   st0_1	set	3
  3109             00000007   cyl_1	set	7
  3110                        	.sym	j,0,5,1,16
  3111                        	.sym	data,2,14,1,8
  3112                        	.sym	st0,3,18,1,32
  3113                        	.sym	cyl,7,18,1,32
  3114                        	.sym	head,4,14,6,8
  3115                        	.sym	track,6,14,6,8
  3116                        	.sym	sector,8,14,6,8
  3117                        	.line	612
  3118 05:86BD: A5 1B        	lda	<L122+sector_0
  3119 05:86BF: 29 FF 00     	and	#$ff
  3120 05:86C2: 48           	pha
  3121 05:86C3: F4 xx xx     	pea	#^L121
  3122 05:86C6: F4 xx xx     	pea	#<L121
  3123 05:86C9: 22 xx xx xx  	jsl	~~k_debug_integer
  3124                        ;
  3125                        ;	//! set the DMA for read transfer
  3126                        ;	flpydsk_dma_read();
  3127                        	.line	615
  3128 05:86CD: 22 0F 80 05  	jsl	~~flpydsk_dma_read
  3129                        ;
  3130                        ;	//! read in a sector
  3131                        ;	flpydsk_send_command(
  3132                        	.line	618
  3133                        ;			FDC_CMD_READ_SECT | FDC_CMD_EXT_
                    MULTITRACK | FDC_CMD_EXT_SKIP
  3134                        ;					| FDC_CMD_EXT_DE
                    NSITY);
  3135 05:86D1: F4 E6 00     	pea	#<$e6
  3136 05:86D4: 22 97 80 05  	jsl	~~flpydsk_send_command
  3137                        ;	flpydsk_send_command(head << 2 | _CurrentDrive);
  3138                        	.line	621
  3139 05:86D8: A5 17        	lda	<L122+head_0
  3140 05:86DA: 29 FF 00     	and	#$ff
  3141 05:86DD: 85 05        	sta	<R1
  3142 05:86DF: A5 05        	lda	<R1
  3143 05:86E1: 0A           	asl	A
  3144 05:86E2: 0A           	asl	A
  3145 05:86E3: 85 01        	sta	<R0
  3146 05:86E5: AD xx xx     	lda	|~~_CurrentDrive
  3147 05:86E8: 29 FF 00     	and	#$ff
  3148 05:86EB: 85 05        	sta	<R1
  3149 05:86ED: A5 05        	lda	<R1
  3150 05:86EF: 05 01        	ora	<R0
  3151 05:86F1: 48           	pha
  3152 05:86F2: 22 97 80 05  	jsl	~~flpydsk_send_command
  3153                        ;	flpydsk_send_command(track);
  3154                        	.line	622
  3155 05:86F6: D4 19        	pei	<L122+track_0
  3156 05:86F8: 22 97 80 05  	jsl	~~flpydsk_send_command
  3157                        ;	flpydsk_send_command(head);
  3158                        	.line	623
  Thu Jul 29 2021 11:48                                                Page 61


  3159 05:86FC: D4 17        	pei	<L122+head_0
  3160 05:86FE: 22 97 80 05  	jsl	~~flpydsk_send_command
  3161                        ;	flpydsk_send_command(sector);
  3162                        	.line	624
  3163 05:8702: D4 1B        	pei	<L122+sector_0
  3164 05:8704: 22 97 80 05  	jsl	~~flpydsk_send_command
  3165                        ;	flpydsk_send_command(FLPYDSK_SECTOR_DTL_512);
  3166                        	.line	625
  3167 05:8708: F4 02 00     	pea	#<$2
  3168 05:870B: 22 97 80 05  	jsl	~~flpydsk_send_command
  3169                        ;	flpydsk_send_command(
  3170                        	.line	626
  3171                        ;			((sector + 1) >= FLPY_SECTORS_PE
                    R_TRACK) ?
  3172                        ;					FLPY_SECTORS_PER
                    _TRACK : sector + 1);
  3173 05:870F: A5 1B        	lda	<L122+sector_0
  3174 05:8711: 29 FF 00     	and	#$ff
  3175 05:8714: 85 01        	sta	<R0
  3176 05:8716: A5 01        	lda	<R0
  3177 05:8718: 1A           	ina
  3178 05:8719: 85 05        	sta	<R1
  3179 05:871B: 38           	sec
  3180 05:871C: A5 05        	lda	<R1
  3181 05:871E: E9 12 00     	sbc	#<$12
  3182 05:8721: 70 03        	bvs	L126
  3183 05:8723: 49 00 80     	eor	#$8000
  3184                        L126:
  3185 05:8726: 30 03        	bmi	L127
  3186 05:8728: 82 09 00     	brl	L125
  3187                        L127:
  3188 05:872B: A9 00 00     	lda	#$0
  3189 05:872E: AA           	tax
  3190 05:872F: A9 12 00     	lda	#$12
  3191 05:8732: 80 1C        	bra	L128
  3192                        L125:
  3193 05:8734: A5 1B        	lda	<L122+sector_0
  3194 05:8736: 29 FF 00     	and	#$ff
  3195 05:8739: 85 01        	sta	<R0
  3196 05:873B: A5 01        	lda	<R0
  3197 05:873D: 1A           	ina
  3198 05:873E: 85 05        	sta	<R1
  3199 05:8740: A0 00 00     	ldy	#$0
  3200 05:8743: A5 05        	lda	<R1
  3201 05:8745: 10 01        	bpl	L129
  3202 05:8747: 88           	dey
  3203                        L129:
  3204 05:8748: 85 01        	sta	<R0
  3205 05:874A: 84 03        	sty	<R0+2
  3206 05:874C: A6 03        	ldx	<R0+2
  3207 05:874E: A5 01        	lda	<R0
  3208                        L128:
  3209 05:8750: 85 01        	sta	<R0
  3210 05:8752: 86 03        	stx	<R0+2
  3211 05:8754: D4 01        	pei	<R0
  3212 05:8756: 22 97 80 05  	jsl	~~flpydsk_send_command
  3213                        ;	flpydsk_send_command(FLPYDSK_GAP3_LENGTH_3_5);
  3214                        	.line	629
  Thu Jul 29 2021 11:48                                                Page 62


  3215 05:875A: F4 1B 00     	pea	#<$1b
  3216 05:875D: 22 97 80 05  	jsl	~~flpydsk_send_command
  3217                        ;	flpydsk_send_command(0xff);
  3218                        	.line	630
  3219 05:8761: F4 FF 00     	pea	#<$ff
  3220 05:8764: 22 97 80 05  	jsl	~~flpydsk_send_command
  3221                        ;
  3222                        ;	//! wait for irq
  3223                        ;	flpydsk_wait_irq();
  3224                        	.line	633
  3225                        L10039:
  3226 05:8768: AD xx xx     	lda	|~~_FloppyDiskIRQ
  3227 05:876B: 29 FF 00     	and	#$ff
  3228 05:876E: F0 03        	beq	L130
  3229 05:8770: 82 03 00     	brl	L10040
  3230                        L130:
  3231                        	.line	633
  3232 05:8773: 82 F2 FF     	brl	L10039
  3233                        L10040:
  3234                        	.line	633
  3235 05:8776: E2 20        	sep	#$20
  3236                        	longa	off
  3237 05:8778: 9C xx xx     	stz	|~~_FloppyDiskIRQ
  3238 05:877B: C2 20        	rep	#$20
  3239                        	longa	on
  3240                        	.line	633
  3241                        ;
  3242                        ;	//! read status info
  3243                        ;	for (j = 0; j < 7; j++)
  3244                        	.line	636
  3245 05:877D: 64 09        	stz	<L123+j_1
  3246                        L10043:
  3247                        ;		flpydsk_read_data();
  3248                        	.line	637
  3249 05:877F: 22 5F 81 05  	jsl	~~flpydsk_read_data
  3250                        L10041:
  3251 05:8783: E6 09        	inc	<L123+j_1
  3252 05:8785: 38           	sec
  3253 05:8786: A5 09        	lda	<L123+j_1
  3254 05:8788: E9 07 00     	sbc	#<$7
  3255 05:878B: 70 03        	bvs	L131
  3256 05:878D: 49 00 80     	eor	#$8000
  3257                        L131:
  3258 05:8790: 30 03        	bmi	L132
  3259 05:8792: 82 EA FF     	brl	L10043
  3260                        L132:
  3261                        L10042:
  3262                        ;
  3263                        ;	/*
  3264                        ;	while (flpydsk_read_byte(&data))
  3265                        ;	{
  3266                        ;		k_debug_hex("flpydsk_read_sector_imp2:da
                    ta:", data);
  3267                        ;	}
  3268                        ;	*/
  3269                        ;	//! let FDC know we handled interrupt
  3270                        ;	flpydsk_check_int(&st0, &cyl);
  3271                        	.line	646
  Thu Jul 29 2021 11:48                                                Page 63


  3272 05:8795: F4 00 00     	pea	#0
  3273 05:8798: 18           	clc
  3274 05:8799: 7B           	tdc
  3275 05:879A: 69 10 00     	adc	#<L123+cyl_1
  3276 05:879D: 48           	pha
  3277 05:879E: F4 00 00     	pea	#0
  3278 05:87A1: 18           	clc
  3279 05:87A2: 7B           	tdc
  3280 05:87A3: 69 0C 00     	adc	#<L123+st0_1
  3281 05:87A6: 48           	pha
  3282 05:87A7: 22 01 82 05  	jsl	~~flpydsk_check_int
  3283                        ;}
  3284                        	.line	647
  3285                        L133:
  3286 05:87AB: A5 15        	lda	<L122+2
  3287 05:87AD: 85 1B        	sta	<L122+2+6
  3288 05:87AF: A5 14        	lda	<L122+1
  3289 05:87B1: 85 1A        	sta	<L122+1+6
  3290 05:87B3: 2B           	pld
  3291 05:87B4: 3B           	tsc
  3292 05:87B5: 18           	clc
  3293 05:87B6: 69 19 00     	adc	#L122+6
  3294 05:87B9: 1B           	tcs
  3295 05:87BA: 6B           	rtl
  3296                        	.endblock	647
  3297             00000013   L122	equ	19
  3298             00000009   L123	equ	9
  3299 05:87BB:              	ends
  3300                        	efunc
  3301                        	.endfunc	647,9,19
  3302                        	.line	647
  3303                        	data
  3304                        L121:
  3305 00:01EC: 66 6C 70 79  	db	$66,$6C,$70,$79,$64,$73,$6B,$5F,$72,$65,
                    $61,$64,$5F,$73,$65
       00:01F0: 64 73 6B 5F 
       00:01F4: 72 65 61 64 
       00:01F8: 5F 73 65 
  3306 00:01FB: 63 74 6F 72  	db	$63,$74,$6F,$72,$5F,$69,$6D,$70,$32,$3A,
                    $00
       00:01FF: 5F 69 6D 70 
       00:0203: 32 3A 00 
  3307 00:0206:              	ends
  3308                        ;
  3309                        ;//! seek to given track/cylinder
  3310                        ;int flpydsk_seek(uint32_t cyl, uint32_t head)
  3311                        ;{
  3312                        	.line	650
  3313                        	.line	651
  3314                        	FLPY
  3315                        	xdef	~~flpydsk_seek
  3316                        	func
  3317                        	.function	651
  3318                        ~~flpydsk_seek:
  3319                        	longa	on
  3320                        	longi	on
  3321 05:87BB: 3B           	tsc
  3322 05:87BC: 38           	sec
  Thu Jul 29 2021 11:48                                                Page 64


  3323 05:87BD: E9 16 00     	sbc	#L135
  3324 05:87C0: 1B           	tcs
  3325 05:87C1: 0B           	phd
  3326 05:87C2: 5B           	tcd
  3327             00000004   cyl_0	set	4
  3328             00000008   head_0	set	8
  3329                        	.block	651
  3330                        ;	int i;
  3331                        ;	uint32_t st0, cyl0;
  3332                        ;
  3333                        ;	k_debug_long("flpydsk_seek:cyl:", cyl);
  3334             00000000   i_1	set	0
  3335             00000002   st0_1	set	2
  3336             00000006   cyl0_1	set	6
  3337                        	.sym	i,0,5,1,16
  3338                        	.sym	st0,2,18,1,32
  3339                        	.sym	cyl0,6,18,1,32
  3340                        	.sym	cyl,4,18,6,32
  3341                        	.sym	head,8,18,6,32
  3342                        	.line	655
  3343 05:87C3: D4 1C        	pei	<L135+cyl_0+2
  3344 05:87C5: D4 1A        	pei	<L135+cyl_0
  3345 05:87C7: F4 xx xx     	pea	#^L134
  3346 05:87CA: F4 xx xx     	pea	#<L134
  3347 05:87CD: 22 xx xx xx  	jsl	~~k_debug_long
  3348                        ;	k_debug_long("flpydsk_seek:head:", head);
  3349                        	.line	656
  3350 05:87D1: D4 20        	pei	<L135+head_0+2
  3351 05:87D3: D4 1E        	pei	<L135+head_0
  3352 05:87D5: F4 xx xx     	pea	#^L134+18
  3353 05:87D8: F4 xx xx     	pea	#<L134+18
  3354 05:87DB: 22 xx xx xx  	jsl	~~k_debug_long
  3355                        ;
  3356                        ;	if (_CurrentDrive >= 4)
  3357                        	.line	658
  3358                        ;		return -1;
  3359 05:87DF: E2 20        	sep	#$20
  3360                        	longa	off
  3361 05:87E1: AD xx xx     	lda	|~~_CurrentDrive
  3362 05:87E4: C9 04        	cmp	#<$4
  3363 05:87E6: C2 20        	rep	#$20
  3364                        	longa	on
  3365 05:87E8: B0 03        	bcs	L138
  3366 05:87EA: 82 15 00     	brl	L10044
  3367                        L138:
  3368                        	.line	659
  3369 05:87ED: A9 FF FF     	lda	#$ffff
  3370                        L139:
  3371 05:87F0: A8           	tay
  3372 05:87F1: A5 18        	lda	<L135+2
  3373 05:87F3: 85 20        	sta	<L135+2+8
  3374 05:87F5: A5 17        	lda	<L135+1
  3375 05:87F7: 85 1F        	sta	<L135+1+8
  3376 05:87F9: 2B           	pld
  3377 05:87FA: 3B           	tsc
  3378 05:87FB: 18           	clc
  3379 05:87FC: 69 1E 00     	adc	#L135+8
  3380 05:87FF: 1B           	tcs
  Thu Jul 29 2021 11:48                                                Page 65


  3381 05:8800: 98           	tya
  3382 05:8801: 6B           	rtl
  3383                        ;
  3384                        ;	for (i = 0; i < 10; i++)
  3385                        L10044:
  3386                        	.line	661
  3387 05:8802: 64 0D        	stz	<L136+i_1
  3388                        L10047:
  3389                        ;	{
  3390                        	.line	662
  3391                        ;
  3392                        ;		//! send the command
  3393                        ;		flpydsk_send_command(FDC_CMD_SEEK);
  3394                        	.line	665
  3395 05:8804: F4 0F 00     	pea	#<$f
  3396 05:8807: 22 97 80 05  	jsl	~~flpydsk_send_command
  3397                        ;		flpydsk_send_command((head) << 2 | _Curr
                    entDrive);
  3398                        	.line	666
  3399 05:880B: A5 1E        	lda	<L135+head_0
  3400 05:880D: 85 01        	sta	<R0
  3401 05:880F: A5 20        	lda	<L135+head_0+2
  3402 05:8811: 85 03        	sta	<R0+2
  3403 05:8813: 06 01        	asl	<R0
  3404 05:8815: 26 03        	rol	<R0+2
  3405 05:8817: 06 01        	asl	<R0
  3406 05:8819: 26 03        	rol	<R0+2
  3407 05:881B: AD xx xx     	lda	|~~_CurrentDrive
  3408 05:881E: 29 FF 00     	and	#$ff
  3409 05:8821: 85 05        	sta	<R1
  3410 05:8823: 64 07        	stz	<R1+2
  3411 05:8825: A5 05        	lda	<R1
  3412 05:8827: 05 01        	ora	<R0
  3413 05:8829: 85 09        	sta	<R2
  3414 05:882B: A5 07        	lda	<R1+2
  3415 05:882D: 05 03        	ora	<R0+2
  3416 05:882F: 85 0B        	sta	<R2+2
  3417 05:8831: D4 09        	pei	<R2
  3418 05:8833: 22 97 80 05  	jsl	~~flpydsk_send_command
  3419                        ;		flpydsk_send_command(cyl);
  3420                        	.line	667
  3421 05:8837: D4 1A        	pei	<L135+cyl_0
  3422 05:8839: 22 97 80 05  	jsl	~~flpydsk_send_command
  3423                        ;
  3424                        ;		//! wait for the results phase IRQ
  3425                        ;		flpydsk_wait_irq();
  3426                        	.line	670
  3427                        L10048:
  3428 05:883D: AD xx xx     	lda	|~~_FloppyDiskIRQ
  3429 05:8840: 29 FF 00     	and	#$ff
  3430 05:8843: F0 03        	beq	L140
  3431 05:8845: 82 03 00     	brl	L10049
  3432                        L140:
  3433                        	.line	670
  3434 05:8848: 82 F2 FF     	brl	L10048
  3435                        L10049:
  3436                        	.line	670
  3437 05:884B: E2 20        	sep	#$20
  Thu Jul 29 2021 11:48                                                Page 66


  3438                        	longa	off
  3439 05:884D: 9C xx xx     	stz	|~~_FloppyDiskIRQ
  3440 05:8850: C2 20        	rep	#$20
  3441                        	longa	on
  3442                        	.line	670
  3443                        ;		flpydsk_check_int(&st0, &cyl0);
  3444                        	.line	671
  3445 05:8852: F4 00 00     	pea	#0
  3446 05:8855: 18           	clc
  3447 05:8856: 7B           	tdc
  3448 05:8857: 69 13 00     	adc	#<L136+cyl0_1
  3449 05:885A: 48           	pha
  3450 05:885B: F4 00 00     	pea	#0
  3451 05:885E: 18           	clc
  3452 05:885F: 7B           	tdc
  3453 05:8860: 69 0F 00     	adc	#<L136+st0_1
  3454 05:8863: 48           	pha
  3455 05:8864: 22 01 82 05  	jsl	~~flpydsk_check_int
  3456                        ;
  3457                        ;		//! found the cylinder?
  3458                        ;		if (cyl0 == cyl)
  3459                        	.line	674
  3460                        ;			return 0;
  3461 05:8868: A5 13        	lda	<L136+cyl0_1
  3462 05:886A: C5 1A        	cmp	<L135+cyl_0
  3463 05:886C: D0 04        	bne	L141
  3464 05:886E: A5 15        	lda	<L136+cyl0_1+2
  3465 05:8870: C5 1C        	cmp	<L135+cyl_0+2
  3466                        L141:
  3467 05:8872: F0 03        	beq	L142
  3468 05:8874: 82 06 00     	brl	L10050
  3469                        L142:
  3470                        	.line	675
  3471 05:8877: A9 00 00     	lda	#$0
  3472 05:887A: 82 73 FF     	brl	L139
  3473                        ;	}
  3474                        L10050:
  3475                        	.line	676
  3476                        L10045:
  3477 05:887D: E6 0D        	inc	<L136+i_1
  3478 05:887F: 38           	sec
  3479 05:8880: A5 0D        	lda	<L136+i_1
  3480 05:8882: E9 0A 00     	sbc	#<$a
  3481 05:8885: 70 03        	bvs	L143
  3482 05:8887: 49 00 80     	eor	#$8000
  3483                        L143:
  3484 05:888A: 30 03        	bmi	L144
  3485 05:888C: 82 75 FF     	brl	L10047
  3486                        L144:
  3487                        L10046:
  3488                        ;
  3489                        ;	return -1;
  3490                        	.line	678
  3491 05:888F: A9 FF FF     	lda	#$ffff
  3492 05:8892: 82 5B FF     	brl	L139
  3493                        ;}
  3494                        	.line	679
  3495                        	.endblock	679
  Thu Jul 29 2021 11:48                                                Page 67


  3496             00000016   L135	equ	22
  3497             0000000D   L136	equ	13
  3498 05:8895:              	ends
  3499                        	efunc
  3500                        	.endfunc	679,13,22
  3501                        	.line	679
  3502                        	data
  3503                        L134:
  3504 00:0206: 66 6C 70 79  	db	$66,$6C,$70,$79,$64,$73,$6B,$5F,$73,$65,
                    $65,$6B,$3A,$63,$79
       00:020A: 64 73 6B 5F 
       00:020E: 73 65 65 6B 
       00:0212: 3A 63 79 
  3505 00:0215: 6C 3A 00 66  	db	$6C,$3A,$00,$66,$6C,$70,$79,$64,$73,$6B,
                    $5F,$73,$65,$65,$6B
       00:0219: 6C 70 79 64 
       00:021D: 73 6B 5F 73 
       00:0221: 65 65 6B 
  3506 00:0224: 3A 68 65 61  	db	$3A,$68,$65,$61,$64,$3A,$00
       00:0228: 64 3A 00 
  3507 00:022B:              	ends
  3508                        ;
  3509                        ;//===============================================
                    =============================
  3510                        ;//    INTERFACE FUNCTIONS
  3511                        ;//===============================================
                    =============================
  3512                        ;
  3513                        ;//! convert LBA to CHS
  3514                        ;void flpydsk_lba_to_chs(int lba, int *head, int *
                    track, int *sector)
  3515                        ;{
  3516                        	.line	686
  3517                        	.line	687
  3518                        	FLPY
  3519                        	xdef	~~flpydsk_lba_to_chs
  3520                        	func
  3521                        	.function	687
  3522                        ~~flpydsk_lba_to_chs:
  3523                        	longa	on
  3524                        	longi	on
  3525 05:8895: 3B           	tsc
  3526 05:8896: 38           	sec
  3527 05:8897: E9 04 00     	sbc	#L146
  3528 05:889A: 1B           	tcs
  3529 05:889B: 0B           	phd
  3530 05:889C: 5B           	tcd
  3531             00000004   lba_0	set	4
  3532             00000006   head_0	set	6
  3533             0000000A   track_0	set	10
  3534             0000000E   sector_0	set	14
  3535                        	.block	687
  3536                        ;
  3537                        ;	*head = (lba % (FLPY_SECTORS_PER_TRACK * 2)) / (
                    FLPY_SECTORS_PER_TRACK);
  3538                        	.sym	lba,4,5,6,16
  3539                        	.sym	head,6,133,6,32
  3540                        	.sym	track,10,133,6,32
  Thu Jul 29 2021 11:48                                                Page 68


  3541                        	.sym	sector,14,133,6,32
  3542                        	.line	689
  3543 05:889D: A0 00 00     	ldy	#$0
  3544 05:88A0: A5 08        	lda	<L146+lba_0
  3545 05:88A2: 10 01        	bpl	L149
  3546 05:88A4: 88           	dey
  3547                        L149:
  3548 05:88A5: 85 01        	sta	<R0
  3549 05:88A7: 84 03        	sty	<R0+2
  3550 05:88A9: F4 00 00     	pea	#^$24
  3551 05:88AC: F4 24 00     	pea	#<$24
  3552 05:88AF: D4 03        	pei	<R0+2
  3553 05:88B1: D4 01        	pei	<R0
  3554                        	xref	~~~lmod
  3555 05:88B3: 22 xx xx xx  	jsl	~~~lmod
  3556 05:88B7: 85 01        	sta	<R0
  3557 05:88B9: 86 03        	stx	<R0+2
  3558 05:88BB: F4 00 00     	pea	#^$12
  3559 05:88BE: F4 12 00     	pea	#<$12
  3560 05:88C1: D4 03        	pei	<R0+2
  3561 05:88C3: D4 01        	pei	<R0
  3562                        	xref	~~~ldiv
  3563 05:88C5: 22 xx xx xx  	jsl	~~~ldiv
  3564 05:88C9: 85 01        	sta	<R0
  3565 05:88CB: 86 03        	stx	<R0+2
  3566 05:88CD: A5 01        	lda	<R0
  3567 05:88CF: 87 0A        	sta	[<L146+head_0]
  3568                        ;	*track = lba / (FLPY_SECTORS_PER_TRACK * 2);
  3569                        	.line	690
  3570 05:88D1: A0 00 00     	ldy	#$0
  3571 05:88D4: A5 08        	lda	<L146+lba_0
  3572 05:88D6: 10 01        	bpl	L150
  3573 05:88D8: 88           	dey
  3574                        L150:
  3575 05:88D9: 85 01        	sta	<R0
  3576 05:88DB: 84 03        	sty	<R0+2
  3577 05:88DD: F4 00 00     	pea	#^$24
  3578 05:88E0: F4 24 00     	pea	#<$24
  3579 05:88E3: D4 03        	pei	<R0+2
  3580 05:88E5: D4 01        	pei	<R0
  3581                        	xref	~~~ldiv
  3582 05:88E7: 22 xx xx xx  	jsl	~~~ldiv
  3583 05:88EB: 85 01        	sta	<R0
  3584 05:88ED: 86 03        	stx	<R0+2
  3585 05:88EF: A5 01        	lda	<R0
  3586 05:88F1: 87 0E        	sta	[<L146+track_0]
  3587                        ;	*sector = lba % FLPY_SECTORS_PER_TRACK + 1;
  3588                        	.line	691
  3589 05:88F3: A5 08        	lda	<L146+lba_0
  3590 05:88F5: A2 12 00     	ldx	#<$12
  3591                        	xref	~~~mod
  3592 05:88F8: 22 xx xx xx  	jsl	~~~mod
  3593 05:88FC: 85 01        	sta	<R0
  3594 05:88FE: A5 01        	lda	<R0
  3595 05:8900: 1A           	ina
  3596 05:8901: 87 12        	sta	[<L146+sector_0]
  3597                        ;}
  3598                        	.line	692
  Thu Jul 29 2021 11:48                                                Page 69


  3599                        L151:
  3600 05:8903: A5 06        	lda	<L146+2
  3601 05:8905: 85 14        	sta	<L146+2+14
  3602 05:8907: A5 05        	lda	<L146+1
  3603 05:8909: 85 13        	sta	<L146+1+14
  3604 05:890B: 2B           	pld
  3605 05:890C: 3B           	tsc
  3606 05:890D: 18           	clc
  3607 05:890E: 69 12 00     	adc	#L146+14
  3608 05:8911: 1B           	tcs
  3609 05:8912: 6B           	rtl
  3610                        	.endblock	692
  3611             00000004   L146	equ	4
  3612             00000005   L147	equ	5
  3613 05:8913:              	ends
  3614                        	efunc
  3615                        	.endfunc	692,5,4
  3616                        	.line	692
  3617                        ;
  3618                        ;//! install floppy driver
  3619                        ;void flpydsk_install(int irq)
  3620                        ;{
  3621                        	.line	695
  3622                        	.line	696
  3623                        	FLPY
  3624                        	xdef	~~flpydsk_install
  3625                        	func
  3626                        	.function	696
  3627                        ~~flpydsk_install:
  3628                        	longa	on
  3629                        	longi	on
  3630 05:8913: 3B           	tsc
  3631 05:8914: 38           	sec
  3632 05:8915: E9 00 00     	sbc	#L152
  3633 05:8918: 1B           	tcs
  3634 05:8919: 0B           	phd
  3635 05:891A: 5B           	tcd
  3636             00000004   irq_0	set	4
  3637                        	.block	696
  3638                        ;
  3639                        ;	//! install irq handler
  3640                        ;	//setvect(irq, i816_flpy_irq);
  3641                        ;
  3642                        ;	//! initialize the DMA for FDC
  3643                        ;	flpydsk_initialize_dma();
  3644                        	.sym	irq,4,5,6,16
  3645                        	.line	702
  3646 05:891B: 22 FF 7F 05  	jsl	~~flpydsk_initialize_dma
  3647                        ;
  3648                        ;	//! reset the fdc
  3649                        ;	flpydsk_reset();
  3650                        	.line	705
  3651 05:891F: 22 11 85 05  	jsl	~~flpydsk_reset
  3652                        ;
  3653                        ;	//flpydsk_control_motor(TRUE);
  3654                        ;
  3655                        ;	//! set drive information
  3656                        ;	flpydsk_drive_data(13, 1, 0xf, TRUE);
  Thu Jul 29 2021 11:48                                                Page 70


  3657                        	.line	710
  3658 05:8923: F4 01 00     	pea	#<$1
  3659 05:8926: F4 00 00     	pea	#^$f
  3660 05:8929: F4 0F 00     	pea	#<$f
  3661 05:892C: F4 00 00     	pea	#^$1
  3662 05:892F: F4 01 00     	pea	#<$1
  3663 05:8932: F4 00 00     	pea	#^$d
  3664 05:8935: F4 0D 00     	pea	#<$d
  3665 05:8938: 22 5E 83 05  	jsl	~~flpydsk_drive_data
  3666                        ;}
  3667                        	.line	711
  3668                        L155:
  3669 05:893C: A5 02        	lda	<L152+2
  3670 05:893E: 85 04        	sta	<L152+2+2
  3671 05:8940: A5 01        	lda	<L152+1
  3672 05:8942: 85 03        	sta	<L152+1+2
  3673 05:8944: 2B           	pld
  3674 05:8945: 3B           	tsc
  3675 05:8946: 18           	clc
  3676 05:8947: 69 02 00     	adc	#L152+2
  3677 05:894A: 1B           	tcs
  3678 05:894B: 6B           	rtl
  3679                        	.endblock	711
  3680             00000000   L152	equ	0
  3681             00000001   L153	equ	1
  3682 05:894C:              	ends
  3683                        	efunc
  3684                        	.endfunc	711,1,0
  3685                        	.line	711
  3686                        ;
  3687                        ;//! set current working drive
  3688                        ;void flpydsk_set_working_drive(uint8_t drive)
  3689                        ;{
  3690                        	.line	714
  3691                        	.line	715
  3692                        	FLPY
  3693                        	xdef	~~flpydsk_set_working_drive
  3694                        	func
  3695                        	.function	715
  3696                        ~~flpydsk_set_working_drive:
  3697                        	longa	on
  3698                        	longi	on
  3699 05:894C: 3B           	tsc
  3700 05:894D: 38           	sec
  3701 05:894E: E9 00 00     	sbc	#L156
  3702 05:8951: 1B           	tcs
  3703 05:8952: 0B           	phd
  3704 05:8953: 5B           	tcd
  3705             00000004   drive_0	set	4
  3706                        	.block	715
  3707                        ;	if (drive < 4)
  3708                        	.sym	drive,4,14,6,8
  3709                        	.line	716
  3710                        ;		_CurrentDrive = drive;
  3711 05:8954: E2 20        	sep	#$20
  3712                        	longa	off
  3713 05:8956: A5 04        	lda	<L156+drive_0
  3714 05:8958: C9 04        	cmp	#<$4
  Thu Jul 29 2021 11:48                                                Page 71


  3715 05:895A: C2 20        	rep	#$20
  3716                        	longa	on
  3717 05:895C: 90 03        	bcc	L159
  3718 05:895E: 82 09 00     	brl	L10051
  3719                        L159:
  3720                        	.line	717
  3721 05:8961: E2 20        	sep	#$20
  3722                        	longa	off
  3723 05:8963: A5 04        	lda	<L156+drive_0
  3724 05:8965: 8D xx xx     	sta	|~~_CurrentDrive
  3725 05:8968: C2 20        	rep	#$20
  3726                        	longa	on
  3727                        ;}
  3728                        L10051:
  3729                        	.line	718
  3730                        L160:
  3731 05:896A: A5 02        	lda	<L156+2
  3732 05:896C: 85 04        	sta	<L156+2+2
  3733 05:896E: A5 01        	lda	<L156+1
  3734 05:8970: 85 03        	sta	<L156+1+2
  3735 05:8972: 2B           	pld
  3736 05:8973: 3B           	tsc
  3737 05:8974: 18           	clc
  3738 05:8975: 69 02 00     	adc	#L156+2
  3739 05:8978: 1B           	tcs
  3740 05:8979: 6B           	rtl
  3741                        	.endblock	718
  3742             00000000   L156	equ	0
  3743             00000001   L157	equ	1
  3744 05:897A:              	ends
  3745                        	efunc
  3746                        	.endfunc	718,1,0
  3747                        	.line	718
  3748                        ;
  3749                        ;//! get current working drive
  3750                        ;uint8_t flpydsk_get_working_drive()
  3751                        ;{
  3752                        	.line	721
  3753                        	.line	722
  3754                        	FLPY
  3755                        	xdef	~~flpydsk_get_working_drive
  3756                        	func
  3757                        	.function	722
  3758                        ~~flpydsk_get_working_drive:
  3759                        	longa	on
  3760                        	longi	on
  3761 05:897A: 3B           	tsc
  3762 05:897B: 38           	sec
  3763 05:897C: E9 00 00     	sbc	#L161
  3764 05:897F: 1B           	tcs
  3765 05:8980: 0B           	phd
  3766 05:8981: 5B           	tcd
  3767                        	.block	722
  3768                        ;
  3769                        ;	return _CurrentDrive;
  3770                        	.line	724
  3771 05:8982: AD xx xx     	lda	|~~_CurrentDrive
  3772 05:8985: 29 FF 00     	and	#$ff
  Thu Jul 29 2021 11:48                                                Page 72


  3773                        L164:
  3774 05:8988: A8           	tay
  3775 05:8989: 2B           	pld
  3776 05:898A: 3B           	tsc
  3777 05:898B: 18           	clc
  3778 05:898C: 69 00 00     	adc	#L161
  3779 05:898F: 1B           	tcs
  3780 05:8990: 98           	tya
  3781 05:8991: 6B           	rtl
  3782                        ;}
  3783                        	.line	725
  3784                        	.endblock	725
  3785             00000000   L161	equ	0
  3786             00000001   L162	equ	1
  3787 05:8992:              	ends
  3788                        	efunc
  3789                        	.endfunc	725,1,0
  3790                        	.line	725
  3791                        ;
  3792                        ;//! read a sector
  3793                        ;uint8_t* flpydsk_read_sector(int sectorLBA)
  3794                        ;{
  3795                        	.line	728
  3796                        	.line	729
  3797                        	FLPY
  3798                        	xdef	~~flpydsk_read_sector
  3799                        	func
  3800                        	.function	729
  3801                        ~~flpydsk_read_sector:
  3802                        	longa	on
  3803                        	longi	on
  3804 05:8992: 3B           	tsc
  3805 05:8993: 38           	sec
  3806 05:8994: E9 0E 00     	sbc	#L165
  3807 05:8997: 1B           	tcs
  3808 05:8998: 0B           	phd
  3809 05:8999: 5B           	tcd
  3810             00000004   sectorLBA_0	set	4
  3811                        	.block	729
  3812                        ;	int head = 0, track = 0, sector = 1;
  3813                        ;
  3814                        ;	k_debug_long("flpydsk_read_sector:sectorLBA:", s
                    ectorLBA);
  3815             00000000   head_1	set	0
  3816             00000002   track_1	set	2
  3817             00000004   sector_1	set	4
  3818                        	.sym	head,0,5,1,16
  3819                        	.sym	track,2,5,1,16
  3820                        	.sym	sector,4,5,1,16
  3821                        	.sym	sectorLBA,4,5,6,16
  3822 05:899A: 64 09        	stz	<L166+head_1
  3823 05:899C: 64 0B        	stz	<L166+track_1
  3824 05:899E: A9 01 00     	lda	#$1
  3825 05:89A1: 85 0D        	sta	<L166+sector_1
  3826                        	.line	732
  3827 05:89A3: A0 00 00     	ldy	#$0
  3828 05:89A6: A5 12        	lda	<L165+sectorLBA_0
  3829 05:89A8: 10 01        	bpl	L168
  Thu Jul 29 2021 11:48                                                Page 73


  3830 05:89AA: 88           	dey
  3831                        L168:
  3832 05:89AB: 85 01        	sta	<R0
  3833 05:89AD: 84 03        	sty	<R0+2
  3834 05:89AF: D4 03        	pei	<R0+2
  3835 05:89B1: D4 01        	pei	<R0
  3836 05:89B3: F4 xx xx     	pea	#^L145
  3837 05:89B6: F4 xx xx     	pea	#<L145
  3838 05:89B9: 22 xx xx xx  	jsl	~~k_debug_long
  3839                        ;
  3840                        ;	if (_CurrentDrive >= 4)
  3841                        	.line	734
  3842                        ;		return 0;
  3843 05:89BD: E2 20        	sep	#$20
  3844                        	longa	off
  3845 05:89BF: AD xx xx     	lda	|~~_CurrentDrive
  3846 05:89C2: C9 04        	cmp	#<$4
  3847 05:89C4: C2 20        	rep	#$20
  3848                        	longa	on
  3849 05:89C6: B0 03        	bcs	L169
  3850 05:89C8: 82 19 00     	brl	L10052
  3851                        L169:
  3852                        	.line	735
  3853 05:89CB: A9 00 00     	lda	#$0
  3854 05:89CE: AA           	tax
  3855 05:89CF: A9 00 00     	lda	#$0
  3856                        L170:
  3857 05:89D2: A8           	tay
  3858 05:89D3: A5 10        	lda	<L165+2
  3859 05:89D5: 85 12        	sta	<L165+2+2
  3860 05:89D7: A5 0F        	lda	<L165+1
  3861 05:89D9: 85 11        	sta	<L165+1+2
  3862 05:89DB: 2B           	pld
  3863 05:89DC: 3B           	tsc
  3864 05:89DD: 18           	clc
  3865 05:89DE: 69 10 00     	adc	#L165+2
  3866 05:89E1: 1B           	tcs
  3867 05:89E2: 98           	tya
  3868 05:89E3: 6B           	rtl
  3869                        ;
  3870                        ;	//! convert LBA sector to CHS
  3871                        ;
  3872                        ;	flpydsk_lba_to_chs(sectorLBA, &head, &track, &se
                    ctor);
  3873                        L10052:
  3874                        	.line	739
  3875 05:89E4: F4 00 00     	pea	#0
  3876 05:89E7: 18           	clc
  3877 05:89E8: 7B           	tdc
  3878 05:89E9: 69 0D 00     	adc	#<L166+sector_1
  3879 05:89EC: 48           	pha
  3880 05:89ED: F4 00 00     	pea	#0
  3881 05:89F0: 18           	clc
  3882 05:89F1: 7B           	tdc
  3883 05:89F2: 69 0B 00     	adc	#<L166+track_1
  3884 05:89F5: 48           	pha
  3885 05:89F6: F4 00 00     	pea	#0
  3886 05:89F9: 18           	clc
  Thu Jul 29 2021 11:48                                                Page 74


  3887 05:89FA: 7B           	tdc
  3888 05:89FB: 69 09 00     	adc	#<L166+head_1
  3889 05:89FE: 48           	pha
  3890 05:89FF: D4 12        	pei	<L165+sectorLBA_0
  3891 05:8A01: 22 95 88 05  	jsl	~~flpydsk_lba_to_chs
  3892                        ;
  3893                        ;	//! turn motor on and seek to track
  3894                        ;	flpydsk_control_motor(TRUE);
  3895                        	.line	742
  3896 05:8A05: F4 01 00     	pea	#<$1
  3897 05:8A08: 22 8C 82 05  	jsl	~~flpydsk_control_motor
  3898                        ;	if (flpydsk_seek(track, head) != 0)
  3899                        	.line	743
  3900                        ;	{
  3901 05:8A0C: A0 00 00     	ldy	#$0
  3902 05:8A0F: A5 09        	lda	<L166+head_1
  3903 05:8A11: 10 01        	bpl	L171
  3904 05:8A13: 88           	dey
  3905                        L171:
  3906 05:8A14: 85 01        	sta	<R0
  3907 05:8A16: 84 03        	sty	<R0+2
  3908 05:8A18: D4 03        	pei	<R0+2
  3909 05:8A1A: D4 01        	pei	<R0
  3910 05:8A1C: A0 00 00     	ldy	#$0
  3911 05:8A1F: A5 0B        	lda	<L166+track_1
  3912 05:8A21: 10 01        	bpl	L172
  3913 05:8A23: 88           	dey
  3914                        L172:
  3915 05:8A24: 85 05        	sta	<R1
  3916 05:8A26: 84 07        	sty	<R1+2
  3917 05:8A28: D4 07        	pei	<R1+2
  3918 05:8A2A: D4 05        	pei	<R1
  3919 05:8A2C: 22 BB 87 05  	jsl	~~flpydsk_seek
  3920 05:8A30: AA           	tax
  3921 05:8A31: D0 03        	bne	L173
  3922 05:8A33: 82 21 00     	brl	L10053
  3923                        L173:
  3924                        	.line	744
  3925                        ;		flpydsk_control_motor(FALSE);
  3926                        	.line	745
  3927 05:8A36: F4 00 00     	pea	#<$0
  3928 05:8A39: 22 8C 82 05  	jsl	~~flpydsk_control_motor
  3929                        ;		k_debug_long("flpydsk_read_sector:sector
                    LBA:exit:", 0);
  3930                        	.line	746
  3931 05:8A3D: F4 00 00     	pea	#^$0
  3932 05:8A40: F4 00 00     	pea	#<$0
  3933 05:8A43: F4 xx xx     	pea	#^L145+31
  3934 05:8A46: F4 xx xx     	pea	#<L145+31
  3935 05:8A49: 22 xx xx xx  	jsl	~~k_debug_long
  3936                        ;		return 0;
  3937                        	.line	747
  3938 05:8A4D: A9 00 00     	lda	#$0
  3939 05:8A50: AA           	tax
  3940 05:8A51: A9 00 00     	lda	#$0
  3941 05:8A54: 82 7B FF     	brl	L170
  3942                        ;	}
  3943                        	.line	748
  Thu Jul 29 2021 11:48                                                Page 75


  3944                        ;	//! read sector and turn motor off
  3945                        ;	flpydsk_read_sector_imp2(head, track, sector);
  3946                        L10053:
  3947                        	.line	750
  3948 05:8A57: D4 0D        	pei	<L166+sector_1
  3949 05:8A59: D4 0B        	pei	<L166+track_1
  3950 05:8A5B: D4 09        	pei	<L166+head_1
  3951 05:8A5D: 22 B5 86 05  	jsl	~~flpydsk_read_sector_imp2
  3952                        ;	flpydsk_control_motor(FALSE);
  3953                        	.line	751
  3954 05:8A61: F4 00 00     	pea	#<$0
  3955 05:8A64: 22 8C 82 05  	jsl	~~flpydsk_control_motor
  3956                        ;
  3957                        ;	//! warning: this is a bit hackish
  3958                        ;	return (uint8_t*) DMA_BUFFER;
  3959                        	.line	754
  3960 05:8A68: AE xx xx     	ldx	|~~DMA_BUFFER+2
  3961 05:8A6B: AD xx xx     	lda	|~~DMA_BUFFER
  3962 05:8A6E: 82 61 FF     	brl	L170
  3963                        ;}
  3964                        	.line	755
  3965                        	.endblock	755
  3966             0000000E   L165	equ	14
  3967             00000009   L166	equ	9
  3968 05:8A71:              	ends
  3969                        	efunc
  3970                        	.endfunc	755,9,14
  3971                        	.line	755
  3972                        	data
  3973                        L145:
  3974 00:022B: 66 6C 70 79  	db	$66,$6C,$70,$79,$64,$73,$6B,$5F,$72,$65,
                    $61,$64,$5F,$73,$65
       00:022F: 64 73 6B 5F 
       00:0233: 72 65 61 64 
       00:0237: 5F 73 65 
  3975 00:023A: 63 74 6F 72  	db	$63,$74,$6F,$72,$3A,$73,$65,$63,$74,$6F,
                    $72,$4C,$42,$41,$3A
       00:023E: 3A 73 65 63 
       00:0242: 74 6F 72 4C 
       00:0246: 42 41 3A 
  3976 00:0249: 00 66 6C 70  	db	$00,$66,$6C,$70,$79,$64,$73,$6B,$5F,$72,
                    $65,$61,$64,$5F,$73
       00:024D: 79 64 73 6B 
       00:0251: 5F 72 65 61 
       00:0255: 64 5F 73 
  3977 00:0258: 65 63 74 6F  	db	$65,$63,$74,$6F,$72,$3A,$73,$65,$63,$74,
                    $6F,$72,$4C,$42,$41
       00:025C: 72 3A 73 65 
       00:0260: 63 74 6F 72 
       00:0264: 4C 42 41 
  3978 00:0267: 3A 65 78 69  	db	$3A,$65,$78,$69,$74,$3A,$00
       00:026B: 74 3A 00 
  3979 00:026E:              	ends
  3980                        ;
  3981                        ;
  3982                        ;//===============================================
                    =============================
  3983                        ;//    INTERFACE CLASS BODIES
  Thu Jul 29 2021 11:48                                                Page 76


  3984                        ;//===============================================
                    =============================
  3985                        ;//***********************************************
                    *****************************
  3986                        ;//**
  3987                        ;//**    END[flpydsk.cpp]
  3988                        ;//**
  3989                        ;//***********************************************
                    *****************************
  3990                        ;
  3991                        	.line	765
  3992                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\flpydsk.c",728
  3993                        	xref	~~k_debug_hex
  3994                        	xref	~~k_debug_long
  3995                        	xref	~~k_debug_integer
  3996                        	xref	~~k_debug_char
  3997                        	xref	~~k_debug_string
  3998                        	xref	~~sleep
  3999                        	.sym	~~flpydsk_seek,~~flpydsk_seek,69,2,0
  4000                        	.sym	~~flpydsk_read_sector_imp2,~~flpydsk_rea
                    d_sector_imp2,65,2,0
  4001                        	.sym	~~flpydsk_read_sector_imp,~~flpydsk_read
                    _sector_imp,65,2,0
  4002                        	.sym	~~flpydsk_calibrate,~~flpydsk_calibrate,
                    69,2,0
  4003                        	.sym	~~flpydsk_drive_data,~~flpydsk_drive_dat
                    a,65,2,0
  4004                        	.sym	~~flpydsk_control_motor,~~flpydsk_contro
                    l_motor,65,2,0
  4005                        	.sym	~~flpydsk_check_int,~~flpydsk_check_int,
                    65,2,0
  4006                        	.sym	~~i816_flpy_irq,~~i816_flpy_irq,65,2,0
  4007                        	.sym	~~flpydsk_write_ccr,~~flpydsk_write_ccr,
                    65,2,0
  4008                        	.sym	~~flpydsk_read_byte,~~flpydsk_read_byte,
                    78,2,0
  4009                        	.sym	~~flpydsk_write_dor,~~flpydsk_write_dor,
                    65,2,0
  4010                        	.sym	~~flpydsk_dma_write,~~flpydsk_dma_write,
                    65,2,0
  4011                        	.sym	~~flpydsk_initialize_dma,~~flpydsk_initi
                    alize_dma,65,2,0
  4012                        	.sym	~~_CurrentDrive,~~_CurrentDrive,14,3,8
  4013                        	.sym	~~DMA_BUFFER,~~DMA_BUFFER,142,2,32
  4014                        	.sym	~~FLPY_SECTORS_PER_TRACK,~~FLPY_SECTORS_
                    PER_TRACK,5,2,16
  4015                        	.sym	~~FLOPPY_IRQ,~~FLOPPY_IRQ,5,2,16
  4016                        	.sym	~~flpydsk_enable_controller,~~flpydsk_en
                    able_controller,65,2,0
  4017                        	.sym	~~flpydsk_disable_controller,~~flpydsk_d
                    isable_controller,65,2,0
  4018                        	.sym	~~flpydsk_dma_read,~~flpydsk_dma_read,65
                    ,2,0
  4019                        	.sym	~~flpydsk_read_data,~~flpydsk_read_data,
                    78,2,0
  4020                        	.sym	~~flpydsk_read_status,~~flpydsk_read_sta
                    tus,78,2,0
  Thu Jul 29 2021 11:48                                                Page 77


  4021                        	.sym	~~flpydsk_reset,~~flpydsk_reset,65,2,0
  4022                        	.sym	~~flpydsk_send_command,~~flpydsk_send_co
                    mmand,65,2,0
  4023                        	.sym	~~flpydsk_lba_to_chs,~~flpydsk_lba_to_ch
                    s,65,2,0
  4024                        	.sym	~~flpydsk_read_sector,~~flpydsk_read_sec
                    tor,1102,2,32
  4025                        	.sym	~~flpydsk_get_working_drive,~~flpydsk_ge
                    t_working_drive,78,2,0
  4026                        	.sym	~~flpydsk_set_working_drive,~~flpydsk_se
                    t_working_drive,65,2,0
  4027                        	.sym	~~flpydsk_install,~~flpydsk_install,65,2
                    ,0
  4028                        	.sym	~~_FloppyDiskIRQ,~~_FloppyDiskIRQ,14,2,8
  4029                        	.sym	FRESULT,0,5,14,16
  4030                        	.sym	MKFS_PARM,0,10,14,80,89
  4031                        	.sym	FILINFO,0,10,14,2224,88
  4032                        	.sym	DIR,0,10,14,416,87
  4033                        	.sym	FIL,0,10,14,4400,86
  4034                        	.sym	FFOBJID,0,10,14,128,85
  4035                        	.sym	FATFS,0,10,14,4504,84
  4036                        	.sym	LBA_t,0,18,14,32
  4037                        	.sym	FSIZE_t,0,18,14,32
  4038                        	.sym	TCHAR,0,14,14,8
  4039                        	.sym	PCOMMANDARGS,0,138,14,32,83
  4040                        	.sym	COMMANDARGS,0,10,14,64,83
  4041                        	.sym	PTOKENIZESTATE,0,133,14,32
  4042                        	.sym	TOKENIZESTATE,0,5,14,16
  4043                        	.sym	PTOKEN,0,138,14,32,82
  4044                        	.sym	TOKEN,0,10,14,64,82
  4045                        	.sym	PTOKENTYPE,0,133,14,32
  4046                        	.sym	TOKENTYPE,0,5,14,16
  4047                        	.sym	FXCommandHandler,0,656,14,32
  4048                        	.sym	PCONSOLECTX,0,138,14,32,81
  4049                        	.sym	CONSOLECTX,0,10,14,1144,81
  4050                        	.sym	PSPINNERCTX,0,138,14,32,80
  4051                        	.sym	SPINNERCTX,0,10,14,48,80
  4052                        	.sym	HCLIP,0,138,14,32,79
  4053                        	.sym	PCLIPBOARD_DATA,0,138,14,32,79
  4054                        	.sym	CLIPBOARD_DATA,0,10,14,168,79
  4055                        	.sym	PEVENTMANAGER,0,138,14,32,78
  4056                        	.sym	EVENTMANAGER,0,10,14,192,78
  4057                        	.sym	EV_RUN,0,656,14,32
  4058                        	.sym	EV_QUERY_METRIC,0,656,14,32
  4059                        	.sym	EV_CONFIGURE,0,656,14,32
  4060                        	.sym	EV_UNINIT,0,641,14,32
  4061                        	.sym	EV_INIT,0,8833,14,32
  4062                        	.sym	PMOUSE_MSG_STATE,0,138,14,32,77
  4063                        	.sym	MOUSE_MSG_STATE,0,10,14,184,77
  4064                        	.sym	PFXEVENTPROCESS,0,138,14,32,76
  4065                        	.sym	FXEVENTPROCESS,0,10,14,64,76
  4066                        	.sym	PMARSHALDATA,0,139,14,32,75
  4067                        	.sym	MARSHALDATA,0,11,14,32,75
  4068                        	.sym	FXIDLEPROCESS,0,641,14,32
  4069                        	.sym	FXEventProc,0,641,14,32
  4070                        	.sym	PMOUSEMSGDATA,0,138,14,32,74
  4071                        	.sym	MOUSEMSGDATA,0,10,14,64,74
  4072                        	.sym	MSGIRQ,0,5,14,16
  Thu Jul 29 2021 11:48                                                Page 78


  4073                        	.sym	MAINLOOPARGS,0,10,14,16,73
  4074                        	.sym	PEACHCHILD_MSG,0,138,14,32,72
  4075                        	.sym	EACHCHILD_MSG,0,10,14,64,72
  4076                        	.sym	PMSGBOX_DATA,0,138,14,32,71
  4077                        	.sym	MSGBOX_DATA,0,10,14,96,71
  4078                        	.sym	PDESKTOP_DATA,0,138,14,32,70
  4079                        	.sym	DESKTOP_DATA,0,10,14,64,70
  4080                        	.sym	PWINDOWMANAGER,0,138,14,32,69
  4081                        	.sym	WINDOWMANAGER,0,10,14,160,69
  4082                        	.sym	WM_DOPROCS,0,641,14,32
  4083                        	.sym	WM_QUERY_METRIC,0,656,14,32
  4084                        	.sym	WM_CONFIGURE,0,656,14,32
  4085                        	.sym	WM_HANDLE_EVENT,0,8833,14,32
  4086                        	.sym	WM_EVENTS,0,641,14,32
  4087                        	.sym	PCUR_PALETTE_MAP,0,138,14,32,68
  4088                        	.sym	CUR_PALETTE_MAP,0,10,14,400,68
  4089                        	.sym	PCLICKDETECTED,0,138,14,32,67
  4090                        	.sym	CLICKDETECTED,0,10,14,64,67
  4091                        	.sym	OBJECTCLICKED,0,641,14,32
  4092                        	.sym	PALLOCATIONHEADER,0,138,14,32,66
  4093                        	.sym	ALLOCATIONHEADER,0,10,14,80,66
  4094                        	.sym	PIPCPORT,0,138,14,32,65
  4095                        	.sym	IPCPORT,0,10,14,144,65
  4096                        	.sym	MemoryCallback,0,641,14,32
  4097                        	.sym	PFXMEMORYMAP,0,138,14,32,64
  4098                        	.sym	FXMEMORYMAP,0,10,14,2072,64
  4099                        	.sym	UMM_HEAP_INFO,0,10,14,256,63
  4100                        	.sym	PEXECUTIVE,0,138,14,32,62
  4101                        	.sym	EXECUTIVE,0,10,14,128,62
  4102                        	.sym	EX_QUERY_METRIC,0,656,14,32
  4103                        	.sym	EX_CONFIGURE,0,656,14,32
  4104                        	.sym	EX_UNINIT,0,641,14,32
  4105                        	.sym	EX_INIT,0,8833,14,32
  4106                        	.sym	PFXSTRING,0,138,14,32,61
  4107                        	.sym	FXSTRING,0,10,14,64,61
  4108                        	.sym	PIRQCHAIN,0,138,14,32,60
  4109                        	.sym	IRQCHAIN,0,10,14,128,60
  4110                        	.sym	DEVICEDRIVER_COMMAND,0,656,14,32
  4111                        	.sym	DEVICEDRIVER_UNLOAD,0,654,14,32
  4112                        	.sym	DEVICEDRIVER_WRITE,0,656,14,32
  4113                        	.sym	DEVICEDRIVER_READ,0,656,14,32
  4114                        	.sym	DEVICEDRIVER_LOAD,0,654,14,32
  4115                        	.sym	DEVICEDRIVER_IRQ,0,641,14,32
  4116                        	.sym	PFX_BLOCK_DEVICE_DRIVER,0,138,14,32,59
  4117                        	.sym	FX_BLOCK_DEVICE_DRIVER,0,10,14,808,59
  4118                        	.sym	GETDRIVERDEF,0,8842,14,32,58
  4119                        	.sym	PFX_DEVICE_DRIVER,0,138,14,32,58
  4120                        	.sym	FX_DEVICE_DRIVER,0,10,14,776,58
  4121                        	.sym	~~k_debug_hex,~~k_debug_hex,65,18,0
  4122                        	.sym	~~k_debug_long,~~k_debug_long,65,18,0
  4123                        	.sym	~~k_debug_integer,~~k_debug_integer,65,1
                    8,0
  4124                        	.sym	~~k_debug_char,~~k_debug_char,65,18,0
  4125                        	.sym	~~k_debug_string,~~k_debug_string,65,18,
                    0
  4126                        	.sym	~~sleep,~~sleep,65,18,0
  4127                        	.sym	PSEGMENTHEADER,0,138,14,32,57
  4128                        	.sym	SEGMENTHEADER,0,10,14,160,57
  Thu Jul 29 2021 11:48                                                Page 79


  4129                        	.sym	PDEBUGBYTEBITS,0,138,14,32,56
  4130                        	.sym	DEBUGBYTEBITS,0,10,14,8,56
  4131                        	.sym	PFXENVIRONMENT,0,138,14,32,55
  4132                        	.sym	FXENVIRONMENT,0,10,14,96,55
  4133                        	.sym	PFXZEROPAGE,0,138,14,32,54
  4134                        	.sym	FXZEROPAGE,0,10,14,720,54
  4135                        	.sym	IRQBUFFER,0,10,14,32,53
  4136                        	.sym	KERNELTRAPCALL,0,641,14,32
  4137                        	.sym	PFXKERNEL_API_CALLTABLE,0,138,14,32,52
  4138                        	.sym	FXKERNEL_API_CALLTABLE,0,10,14,8192,52
  4139                        	.sym	FOREACHNODEUNTIL,0,654,14,32
  4140                        	.sym	FOREACHNODE,0,641,14,32
  4141                        	.sym	PFXRFHEADER_STRING_ENTRY,0,138,14,32,51
  4142                        	.sym	FXRFHEADER_STRING_ENTRY,0,10,14,40,51
  4143                        	.sym	PFXRFHEADER_STRING,0,138,14,32,50
  4144                        	.sym	FXRFHEADER_STRING,0,10,14,32,50
  4145                        	.sym	PFXRFHEADER_FONT,0,138,14,32,49
  4146                        	.sym	FXRFHEADER_FONT,0,10,14,144,49
  4147                        	.sym	PFXRFHEADER,0,138,14,32,48
  4148                        	.sym	FXRFHEADER,0,10,14,72,48
  4149                        	.sym	PFXCOMBUFFER,0,138,14,32,47
  4150                        	.sym	FXCOMBUFFER,0,10,14,2080,47
  4151                        	.sym	PSUBMENULIST,0,138,14,32,46
  4152                        	.sym	SUBMENULIST,0,10,14,40,46
  4153                        	.sym	HSUBMENU,0,7,14,32
  4154                        	.sym	PSUBMENU,0,138,14,32,45
  4155                        	.sym	SUBMENU,0,10,14,64,45
  4156                        	.sym	MenuAction,0,641,14,32
  4157                        	.sym	PMENUANCHOR,0,138,14,32,44
  4158                        	.sym	MENUANCHOR,0,10,14,272,44
  4159                        	.sym	PMSGBOX,0,138,14,32,43
  4160                        	.sym	MSGBOX,0,10,14,144,43
  4161                        	.sym	PTEXTBOX,0,138,14,32,42
  4162                        	.sym	TEXTBOX,0,10,14,144,42
  4163                        	.sym	PLISTBOX,0,138,14,32,41
  4164                        	.sym	LISTBOX,0,10,14,240,41
  4165                        	.sym	PSCROLLBAR,0,138,14,32,40
  4166                        	.sym	SCROLLBAR,0,10,14,240,40
  4167                        	.sym	PBUTTON,0,138,14,32,39
  4168                        	.sym	BUTTON,0,10,14,96,39
  4169                        	.sym	PMENUDROPDOWNDATA,0,138,14,32,38
  4170                        	.sym	MENUDROPDOWNDATA,0,10,14,5152,38
  4171                        	.sym	PMENUTAG,0,138,14,32,37
  4172                        	.sym	MENUTAG,0,10,14,160,37
  4173                        	.sym	PMENU,0,138,14,32,36
  4174                        	.sym	MENU,0,10,14,280,36
  4175                        	.sym	HMENURESOURCE,0,129,14,32
  4176                        	.sym	FONTMETRIC,0,10,14,32,35
  4177                        	.sym	TITLE,0,142,14,32
  4178                        	.sym	PHANDLE,0,1153,14,32
  4179                        	.sym	HANDLE,0,129,14,32
  4180                        	.sym	PWINDOWEX,0,138,14,32,34
  4181                        	.sym	WINDOWEX,0,10,14,3880,34
  4182                        	.sym	PWINDOW,0,138,14,32,33
  4183                        	.sym	WINDOW,0,10,14,3904,33
  4184                        	.sym	PDRAGDATA,0,138,14,32,32
  4185                        	.sym	DRAGDATA,0,10,14,216,32
  4186                        	.sym	PNCCLICKABLE,0,138,14,32,31
  Thu Jul 29 2021 11:48                                                Page 80


  4187                        	.sym	NCCLICKABLE,0,10,14,136,31
  4188                        	.sym	HCLICKABLE,0,7,14,32
  4189                        	.sym	PCLICKABLE,0,138,14,32,30
  4190                        	.sym	CLICKABLE,0,10,14,152,30
  4191                        	.sym	PWNDCLASS,0,138,14,32,29
  4192                        	.sym	WNDCLASS,0,10,14,272,29
  4193                        	.sym	HBRUSH,0,129,14,32
  4194                        	.sym	HCURSOR,0,129,14,32
  4195                        	.sym	HICON,0,129,14,32
  4196                        	.sym	HINSTANCE,0,129,14,32
  4197                        	.sym	FXWndProc,0,654,14,32
  4198                        	.sym	PDRECT,0,138,14,32,28
  4199                        	.sym	DRECT,0,10,14,112,28
  4200                        	.sym	PRECTP,0,138,14,32,27
  4201                        	.sym	RECTP,0,10,14,96,27
  4202                        	.sym	PRECT,0,138,14,32,26
  4203                        	.sym	RECT,0,10,14,112,26
  4204                        	.sym	PPOINT,0,138,14,32,25
  4205                        	.sym	POINT,0,10,14,32,25
  4206                        	.sym	PFXPROPERTY,0,138,14,32,23
  4207                        	.sym	FXPROPERTY,0,10,14,384,23
  4208                        	.sym	PKEYSTATE,0,138,14,32,22
  4209                        	.sym	KEYSTATE,0,10,14,112,22
  4210                        	.sym	SCANCODE,0,14,14,8
  4211                        	.sym	KEYCODE,0,16,14,16
  4212                        	.sym	PFXPROCESSMESSAGE,0,138,14,32,21
  4213                        	.sym	FXPROCESSMESSAGE,0,10,14,112,21
  4214                        	.sym	PFXPROCESS,0,138,14,32,20
  4215                        	.sym	FXPROCESS,0,10,14,800,20
  4216                        	.sym	PDESKTOP_CONTROL,0,138,14,32,19
  4217                        	.sym	DESKTOP_CONTROL,0,10,14,392,19
  4218                        	.sym	PCONSOLE_CONTROL,0,138,14,32,18
  4219                        	.sym	CONSOLE_CONTROL,0,10,14,448,18
  4220                        	.sym	FXProcessProc,0,641,14,32
  4221                        	.sym	PFXCMDMESSAGE,0,138,14,32,17
  4222                        	.sym	FXCMDMESSAGE,0,10,14,312,17
  4223                        	.sym	PFXOSMESSAGE,0,138,14,32,16
  4224                        	.sym	FXOSMESSAGE,0,10,14,312,16
  4225                        	.sym	PINT_REGS,0,138,14,32,15
  4226                        	.sym	INT_REGS,0,10,14,104,15
  4227                        	.sym	TASK_STACK,0,10,14,32,14
  4228                        	.sym	TASK,0,10,14,48,13
  4229                        	.sym	PIRQDATA,0,138,14,32,12
  4230                        	.sym	IRQDATA,0,10,14,48,12
  4231                        	.sym	HMENU,0,129,14,32
  4232                        	.sym	HWND,0,129,14,32
  4233                        	.sym	MSGDATA,0,14,14,8
  4234                        	.sym	MSGDEST,0,18,14,32
  4235                        	.sym	MSGSRC,0,18,14,32
  4236                        	.sym	MSGTYPE,0,16,14,16
  4237                        	.sym	PROCESS_RESOURCE_LIST,0,138,14,32,6
  4238                        	.sym	PROCESS_TLS_LIST,0,138,14,32,6
  4239                        	.sym	SEMAPHORE_LIST,0,138,14,32,6
  4240                        	.sym	FILE_BLOCK_LIST,0,138,14,32,6
  4241                        	.sym	FILE_PATH_LIST,0,138,14,32,6
  4242                        	.sym	PROCEDURE_LIST,0,138,14,32,6
  4243                        	.sym	FILE_HANDLE,0,138,14,32,11
  4244                        	.sym	FILE_BLOCK,0,10,14,552,11
  Thu Jul 29 2021 11:48                                                Page 81


  4245                        	.sym	SEMAPHORE,0,10,14,16,10
  4246                        	.sym	PPROCESS_SIGNAL,0,138,14,32,9
  4247                        	.sym	PROCESS_SIGNAL,0,10,14,16,9
  4248                        	.sym	KRESULT,0,18,14,32
  4249                        	.sym	PKERNEL_ERROR,0,138,14,32,8
  4250                        	.sym	KERNEL_ERROR,0,10,14,32,8
  4251                        	.sym	PROCESS_STATUS,0,16,14,16
  4252                        	.sym	FILE_PATH_NAME,0,142,14,32
  4253                        	.sym	PROCESS_RESOURCE,0,129,14,32
  4254                        	.sym	PROCESS_TLS,0,129,14,32
  4255                        	.sym	PROCESS_CTX,0,129,14,32
  4256                        	.sym	USERID,0,16,14,16
  4257                        	.sym	PROCESS_ID,0,18,14,32
  4258                        	.sym	PROCESS_BANK,0,14,14,8
  4259                        	.sym	PFXQUEUE,0,138,14,32,7
  4260                        	.sym	FXQUEUE,0,10,14,80,7
  4261                        	.sym	PFXNODELIST,0,138,14,32,6
  4262                        	.sym	FXNODELIST,0,10,14,96,6
  4263                        	.sym	NodeListDeallocator,0,641,14,32
  4264                        	.sym	PFXNODE,0,138,14,32,5
  4265                        	.sym	FXNODE,0,10,14,384,5
  4266                        	.sym	PBYTEBITS,0,138,14,32,4
  4267                        	.sym	BYTEBITS,0,10,14,8,4
  4268                        	.sym	HRESULT,0,18,14,32
  4269                        	.sym	LPWCHAR,0,144,14,32
  4270                        	.sym	WCHAR,0,16,14,16
  4271                        	.sym	HSTRINGTABLE,0,129,14,32
  4272                        	.sym	HCOLOR,0,129,14,32
  4273                        	.sym	HFONT,0,129,14,32
  4274                        	.sym	HDC,0,129,14,32
  4275                        	.sym	HPOINTER,0,129,14,32
  4276                        	.sym	uint32_t,0,18,14,32
  4277                        	.sym	uint8_t,0,14,14,8
  4278                        	.sym	LPBOOL,0,142,14,32
  4279                        	.sym	BOOL,0,14,14,8
  4280                        	.sym	DWORD,0,18,14,32
  4281                        	.sym	ULONG,0,18,14,32
  4282                        	.sym	LPLONG,0,135,14,32
  4283                        	.sym	LONG,0,7,14,32
  4284                        	.sym	PUINT,0,144,14,32
  4285                        	.sym	USHORT,0,16,14,16
  4286                        	.sym	UINT,0,16,14,16
  4287                        	.sym	INT,0,5,14,16
  4288                        	.sym	WORD,0,5,14,16
  4289                        	.sym	PBYTE,0,142,14,32
  4290                        	.sym	BYTE,0,14,14,8
  4291                        	.sym	IOPORT,0,142,14,32
  4292                        	.sym	PUCHAR,0,142,14,32
  4293                        	.sym	UCHAR,0,14,14,8
  4294                        	.sym	LPWCSTR,0,142,14,32
  4295                        	.sym	LPCSTR,0,142,14,32
  4296                        	.sym	LPSTR,0,142,14,32
  4297                        	.sym	LPCHAR,0,142,14,32
  4298                        	.sym	CHAR,0,14,14,8
  4299                        	.sym	PUINT_32,0,146,14,32
  4300                        	.sym	UINT_32,0,18,14,32
  4301                        	.sym	PUINT_16,0,144,14,32
  4302                        	.sym	UINT_16,0,16,14,16
  Thu Jul 29 2021 11:48                                                Page 82


  4303                        	.sym	PUINT_8,0,142,14,32
  4304                        	.sym	UINT_8,0,14,14,8
  4305                        	.sym	LPVOID,0,129,14,32
  4306                        	.sym	VOID,0,1,14,32
  4307                        	.sym	Boolean_T,0,5,14,16
  4308                        	.sym	ldiv_t,0,10,14,64,2
  4309                        	.sym	div_t,0,10,14,32,1
  4310                        	.sym	wctype_t,0,16,14,16
  4311                        	.sym	wint_t,0,16,14,16
  4312                        	.sym	wchar_t,0,14,14,8
  4313                        	.sym	ptrdiff_t,0,7,14,32
  4314                        	.sym	size_t,0,16,14,16
  4315                        	end


      Lines assembled: 4315
      Errors: 0
