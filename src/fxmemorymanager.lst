  Mon Sep 27 2021  9:39                                                Page 1


                     ***************************************
                     **      WDC 65C816 Macro Assembler   **
                     **                                   **
                     **     Version 1.00- Aug 10 2021    **
                     ***************************************

     1                        ;:ts=8
     2             00000001   R0	equ	1
     3             00000005   R1	equ	5
     4             00000009   R2	equ	9
     5             0000000D   R3	equ	13
     6                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxmemorymanager.c",0
     7                        ;
     8                        ;#include "fxkernel.h"
     9                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxkernel.h",0
    10                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxos.h",0
    11                        	.file	"G:\devtools\WDCTools\wdc\Tools\include\
                    stdlib.h",0
    12                        	.file	"G:\devtools\WDCTools\wdc\Tools\include\
                    stddef.h",0
    13                        	.line	88
    14                        	.file	"G:\devtools\WDCTools\wdc\Tools\include\
                    stdlib.h",43
    15                        	.stag	fake1_,32,1
    16                        	.member	quot,0,5,8,16
    17                        	.member	rem,16,5,8,16
    18                        	.eos
    19                        	.stag	fake2_,64,2
    20                        	.member	quot,0,7,8,32
    21                        	.member	rem,32,7,8,32
    22                        	.eos
    23                        	.stag	int_sqrt,32,3
    24                        	.member	sqrt,0,16,8,16
    25                        	.member	frac,16,16,8,16
    26                        	.eos
    27                        	.line	205
    28                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxos.h",4
    29                        	.file	"G:\devtools\WDCTools\wdc\Tools\include\
                    string.h",0
    30                        	.line	134
    31                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxos.h",5
    32                        	.file	"G:\devtools\WDCTools\wdc\Tools\include\
                    ctype.h",0
    33                        	.line	103
    34                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxos.h",6
    35                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxtypes.h",0
    36                        	.stag	_fx_bytebits,8,4
    37                        	.member	b7,0,14,17,1
    38                        	.member	b6,1,14,17,1
    39                        	.member	b5,2,14,17,1
    40                        	.member	b4,3,14,17,1
  Mon Sep 27 2021  9:39                                                Page 2


    41                        	.member	b3,4,14,17,1
    42                        	.member	b2,5,14,17,1
    43                        	.member	b1,6,14,17,1
    44                        	.member	b0,7,14,17,1
    45                        	.eos
    46                        	.stag	_fx_node,384,5
    47                        	.member	type,0,14,8,8
    48                        	.member	Reserved0,8,14,8,8
    49                        	.member	data,16,129,8,32
    50                        	.member	last,48,138,8,32,5
    51                        	.member	next,80,138,8,32,5
    52                        	.member	name,112,110,8,0,32
    53                        	.member	Reserved1,368,16,8,16
    54                        	.eos
    55                        	.stag	_fx_nodelist,96,6
    56                        	.member	listhead,0,138,8,32,5
    57                        	.member	listData,32,129,8,32
    58                        	.member	deallocator,64,641,8,32
    59                        	.eos
    60                        	.stag	_fx_queue,80,7
    61                        	.member	count,0,5,8,16
    62                        	.member	front,16,138,8,32,5
    63                        	.member	rear,48,138,8,32,5
    64                        	.eos
    65                        	.stag	fake8_,32,8
    66                        	.member	subsystem,0,14,8,8
    67                        	.member	level,8,14,8,8
    68                        	.member	error,16,16,8,16
    69                        	.eos
    70                        	.stag	_fx_process_signal,16,9
    71                        	.member	cbSize,0,16,8,16
    72                        	.eos
    73                        	.stag	_fx_semaphore,16,10
    74                        	.member	reserved,0,5,8,16
    75                        	.eos
    76                        	.stag	_fx_fileBlock,552,11
    77                        	.member	openCount,0,16,8,16
    78                        	.member	lockCount,16,16,8,16
    79                        	.member	dirty,32,14,8,8
    80                        	.member	fileBuffer,40,110,8,0,64
    81                        	.eos
    82                        	.stag	_fx_irq_data,48,12
    83                        	.member	line,0,5,8,16
    84                        	.member	keycode,16,142,8,32
    85                        	.eos
    86                        	.stag	_task,48,13
    87                        	.member	SPL,0,14,8,8
    88                        	.member	SPH,8,14,8,8
    89                        	.member	pstack,16,142,8,32
    90                        	.eos
    91                        	.stag	_task_stack,32,14
    92                        	.member	SS,0,142,8,32
    93                        	.eos
    94                        	.stag	int_regs,104,15
    95                        	.member	PB,0,14,8,8
    96                        	.member	PH,8,14,8,8
    97                        	.member	PL,16,14,8,8
    98                        	.member	PP,24,14,8,8
  Mon Sep 27 2021  9:39                                                Page 3


    99                        	.member	DB,32,14,8,8
   100                        	.member	DH,40,14,8,8
   101                        	.member	DL,48,14,8,8
   102                        	.member	AH,56,14,8,8
   103                        	.member	AL,64,14,8,8
   104                        	.member	XH,72,14,8,8
   105                        	.member	XL,80,14,8,8
   106                        	.member	YH,88,14,8,8
   107                        	.member	YL,96,14,8,8
   108                        	.eos
   109                        	.stag	_fx_eventMessage,312,16
   110                        	.member	src,0,18,8,32
   111                        	.member	dest,32,18,8,32
   112                        	.member	type,64,16,8,16
   113                        	.member	hwnd,80,129,8,32
   114                        	.member	pheap,112,129,8,32
   115                        	.member	msgTime,144,18,8,32
   116                        	.member	data,176,110,8,0,16
   117                        	.member	attr,304,14,8,8
   118                        	.eos
   119                        	.stag	_fx_cmdMessage,312,17
   120                        	.member	src,0,18,8,32
   121                        	.member	dest,32,18,8,32
   122                        	.member	type,64,16,8,16
   123                        	.member	hwnd,80,129,8,32
   124                        	.member	pheap,112,129,8,32
   125                        	.member	msgTime,144,18,8,32
   126                        	.member	cmdCId,176,16,8,16
   127                        	.member	cmdMId,192,16,8,16
   128                        	.member	parameter1,208,18,8,32
   129                        	.member	parameter2,240,18,8,32
   130                        	.member	parameter3,272,18,8,32
   131                        	.member	attr,304,14,8,8
   132                        	.eos
   133                        	.stag	_fx_console_ctl,448,18
   134                        	.member	maxCols,0,5,8,16
   135                        	.member	maxRows,16,5,8,16
   136                        	.member	curX,32,5,8,16
   137                        	.member	curY,48,5,8,16
   138                        	.member	fgColor,64,5,8,16
   139                        	.member	bgColor,80,5,8,16
   140                        	.member	mode,96,14,8,8
   141                        	.member	kbBuffer,104,101,8,0,16
   142                        	.member	screenBuffer,360,142,8,32
   143                        	.member	desktopMode,392,14,8,8
   144                        	.member	lastMouseButton,400,5,8,16
   145                        	.member	lastMouseX,416,5,8,16
   146                        	.member	lastMouseY,432,5,8,16
   147                        	.eos
   148                        	.stag	_fx_desktop_ctl,392,19
   149                        	.member	desktopMode,0,14,8,8
   150                        	.member	cursorCtl,8,5,8,16
   151                        	.member	cursorState,24,5,8,16
   152                        	.member	backgroundColor,40,5,8,16
   153                        	.member	foregroundColor,56,5,8,16
   154                        	.member	menuMode,72,5,8,16
   155                        	.member	lastMouseButton,88,5,8,16
   156                        	.member	lastMouseX,104,5,8,16
  Mon Sep 27 2021  9:39                                                Page 4


   157                        	.member	lastMouseY,120,5,8,16
   158                        	.member	currentDiskName,136,142,8,32
   159                        	.member	diskNodes,168,129,8,32
   160                        	.member	titleNodes,200,129,8,32
   161                        	.member	menuNodes,232,129,8,32
   162                        	.member	iconNodes,264,129,8,32
   163                        	.member	windowNodes,296,129,8,32
   164                        	.member	fontNodes,328,129,8,32
   165                        	.member	wndProc,360,138,8,32,6
   166                        	.eos
   167                        	.stag	_fx_process,800,20
   168                        	.member	cbSize,0,5,8,16
   169                        	.member	procId,16,18,8,32
   170                        	.member	parentId,48,18,8,32
   171                        	.member	ctx,80,129,8,32
   172                        	.member	userId,112,16,8,16
   173                        	.member	status,128,16,8,16
   174                        	.member	foregroundActive,144,14,8,8
   175                        	.member	tls,152,1121,8,32,8
   176                        	.member	commandLine,408,142,8,32
   177                        	.member	semaphores,440,138,8,32,6
   178                        	.member	fileHandles,472,138,8,32,6
   179                        	.member	pathList,504,138,8,32,6
   180                        	.member	resources,536,138,8,32,6
   181                        	.member	timerAware,568,14,8,8
   182                        	.member	timerTicks,576,112,8,0,2
   183                        	.member	timerTickCount,608,112,8,0,2
   184                        	.member	kernelError,640,10,8,32,8
   185                        	.member	consoleCtl,672,138,8,32,18
   186                        	.member	desktopCtl,704,138,8,32,19
   187                        	.member	execProc,736,641,8,32
   188                        	.member	startupArgs,768,129,8,32
   189                        	.eos
   190                        	.stag	_fxProcessMessage,112,21
   191                        	.member	src,0,18,8,32
   192                        	.member	dest,32,18,8,32
   193                        	.member	type,64,16,8,16
   194                        	.member	processInfo,80,138,8,32,20
   195                        	.eos
   196                        	.stag	_k_key_state,112,22
   197                        	.member	scanCode,0,14,8,8
   198                        	.member	isShifted,8,14,8,8
   199                        	.member	isAlt,16,14,8,8
   200                        	.member	isExtended,24,14,8,8
   201                        	.member	isCapsLock,32,14,8,8
   202                        	.member	isNumLock,40,14,8,8
   203                        	.member	isScrollLock,48,14,8,8
   204                        	.member	keyChar,56,16,8,16
   205                        	.member	scanTime,72,18,8,32
   206                        	.member	ledStatus,104,14,8,8
   207                        	.eos
   208                        	.stag	_fx_property,384,23
   209                        	.member	name,0,110,8,0,16
   210                        	.member	value,128,110,8,0,32
   211                        	.eos
   212                        	.utag	_24bitPointer,32,24
   213                        	.member	address,0,142,11,32
   214                        	.member	bytes,0,110,11,0,4
  Mon Sep 27 2021  9:39                                                Page 5


   215                        	.eos
   216                        	.stag	_PointStruct,32,25
   217                        	.member	x,0,5,8,16
   218                        	.member	y,16,5,8,16
   219                        	.eos
   220                        	.stag	_RectStruct,112,26
   221                        	.member	x,0,5,8,16
   222                        	.member	y,16,5,8,16
   223                        	.member	z,32,18,8,32
   224                        	.member	width,64,5,8,16
   225                        	.member	height,80,5,8,16
   226                        	.member	attr,96,5,8,16
   227                        	.eos
   228                        	.stag	fake27_,96,27
   229                        	.member	name,0,142,8,32
   230                        	.member	topLeft,32,10,8,32,25
   231                        	.member	bottomRight,64,10,8,32,25
   232                        	.eos
   233                        	.stag	fake28_,112,28
   234                        	.member	x,0,5,8,16
   235                        	.member	y,16,5,8,16
   236                        	.member	z,32,5,8,16
   237                        	.member	width,48,5,8,16
   238                        	.member	height,64,5,8,16
   239                        	.member	data,80,18,8,32
   240                        	.eos
   241                        	.stag	_k_WindowClass,272,29
   242                        	.member	cbSize,0,16,8,16
   243                        	.member	style,16,16,8,16
   244                        	.member	styleEx,32,16,8,16
   245                        	.member	pWndProc,48,654,8,32
   246                        	.member	hInstance,80,129,8,32
   247                        	.member	hIcon,112,129,8,32
   248                        	.member	hCursor,144,129,8,32
   249                        	.member	hbrBackground,176,129,8,32
   250                        	.member	lpszMenuName,208,142,8,32
   251                        	.member	lpszClassName,240,142,8,32
   252                        	.eos
   253                        	.stag	_ClickableRect,152,30
   254                        	.member	area,0,10,8,112,26
   255                        	.member	z,112,18,8,32
   256                        	.member	enabled,144,14,8,8
   257                        	.eos
   258                        	.stag	_NCClickableRect,136,31
   259                        	.member	area,0,10,8,112,26
   260                        	.member	msgType,112,16,8,16
   261                        	.member	enabled,128,14,8,8
   262                        	.eos
   263                        	.stag	_DragData,216,32
   264                        	.member	area,0,10,8,112,26
   265                        	.member	xoffset,112,5,8,16
   266                        	.member	yoffset,128,5,8,16
   267                        	.member	msgType,144,16,8,16
   268                        	.member	ncAction,160,16,8,16
   269                        	.member	isDrag,176,14,8,8
   270                        	.member	isResize,184,14,8,8
   271                        	.member	canDrag,192,14,8,8
   272                        	.member	canDrop,200,14,8,8
  Mon Sep 27 2021  9:39                                                Page 6


   273                        	.member	didDrag,208,14,8,8
   274                        	.eos
   275                        	.stag	_k_WindowStruct,3904,33
   276                        	.member	cbSize,0,16,8,16
   277                        	.member	style,16,18,8,32
   278                        	.member	styleEx,48,18,8,32
   279                        	.member	win_id,80,5,8,16
   280                        	.member	win_x,96,5,8,16
   281                        	.member	win_y,112,5,8,16
   282                        	.member	win_width,128,5,8,16
   283                        	.member	win_height,144,5,8,16
   284                        	.member	win_xoffset,160,5,8,16
   285                        	.member	win_yoffset,176,5,8,16
   286                        	.member	win_cxoffset,192,5,8,16
   287                        	.member	win_cyoffset,208,5,8,16
   288                        	.member	wndRect,224,10,8,112,26
   289                        	.member	clientRect,336,10,8,112,26
   290                        	.member	nonclientGadgets,448,106,8,0,31,16
   291                        	.member	clickable,2624,129,8,32
   292                        	.member	win_title,2656,110,8,0,32
   293                        	.member	Reserved0,2912,16,8,16
   294                        	.member	win_class,2928,110,8,0,16
   295                        	.member	win_class_name,3056,110,8,0,32
   296                        	.member	nBitmapLayer,3312,16,8,16
   297                        	.member	bgRegion,3328,129,8,32
   298                        	.member	procid,3360,18,8,32
   299                        	.member	pWndClass,3392,138,8,32,29
   300                        	.member	pParentWindow,3424,129,8,32
   301                        	.member	hMenu,3456,129,8,32
   302                        	.member	hPointer,3488,129,8,32
   303                        	.member	hBackground,3520,129,8,32
   304                        	.member	pChildWindows,3552,138,8,32,6
   305                        	.member	pChildHitList,3584,138,8,32,6
   306                        	.member	isVisible,3616,14,8,8
   307                        	.member	windowData,3624,129,8,32
   308                        	.member	clientData,3656,1121,8,32,6
   309                        	.member	isClosed,3848,14,8,8
   310                        	.member	isClosing,3856,14,8,8
   311                        	.member	isDesktop,3864,14,8,8
   312                        	.member	clickableNode,3872,138,8,32,5
   313                        	.eos
   314                        	.stag	_k_WindowStructEx,3880,34
   315                        	.member	cbSize,0,16,8,16
   316                        	.member	style,16,18,8,32
   317                        	.member	styleEx,48,18,8,32
   318                        	.member	win_id,80,5,8,16
   319                        	.member	win_x,96,5,8,16
   320                        	.member	win_y,112,5,8,16
   321                        	.member	win_width,128,5,8,16
   322                        	.member	win_height,144,5,8,16
   323                        	.member	win_xoffset,160,5,8,16
   324                        	.member	win_yoffset,176,5,8,16
   325                        	.member	win_cxoffset,192,5,8,16
   326                        	.member	win_cyoffset,208,5,8,16
   327                        	.member	wndRect,224,10,8,112,26
   328                        	.member	clientRect,336,10,8,112,26
   329                        	.member	nonclientGadgets,448,106,8,0,31,16
   330                        	.member	clickable,2624,129,8,32
  Mon Sep 27 2021  9:39                                                Page 7


   331                        	.member	win_title,2656,110,8,0,32
   332                        	.member	Reserved0,2912,16,8,16
   333                        	.member	win_class,2928,110,8,0,16
   334                        	.member	nBitmapLayer,3056,16,8,16
   335                        	.member	procid,3072,18,8,32
   336                        	.member	pWndClass,3104,138,8,32,29
   337                        	.member	pParentWindow,3136,129,8,32
   338                        	.member	hMenu,3168,129,8,32
   339                        	.member	hPointer,3200,129,8,32
   340                        	.member	hBackground,3232,129,8,32
   341                        	.member	pChildWindows,3264,138,8,32,6
   342                        	.member	pChildHitList,3296,138,8,32,6
   343                        	.member	isVisible,3328,14,8,8
   344                        	.member	windowData,3336,129,8,32
   345                        	.member	clientData,3368,1121,8,32,4
   346                        	.member	isClosed,3496,14,8,8
   347                        	.member	hWnd,3504,129,8,32
   348                        	.member	localRect,3536,10,8,112,26
   349                        	.member	globalRect,3648,10,8,112,26
   350                        	.member	clientOffsetRect,3760,10,8,112,26
   351                        	.member	isDesktop,3872,14,8,8
   352                        	.eos
   353                        	.stag	_FontMetric,32,35
   354                        	.member	width,0,5,8,16
   355                        	.member	height,16,5,8,16
   356                        	.eos
   357                        	.stag	_MenuStruct,280,36
   358                        	.member	cx,0,5,8,16
   359                        	.member	cy,16,5,8,16
   360                        	.member	width,32,5,8,16
   361                        	.member	height,48,5,8,16
   362                        	.member	fcolor,64,14,8,8
   363                        	.member	bcolor,72,14,8,8
   364                        	.member	chromeLeft,80,14,8,8
   365                        	.member	chromeRight1,88,14,8,8
   366                        	.member	chromeRight2,96,14,8,8
   367                        	.member	hFont,104,129,8,32
   368                        	.member	itemId,136,16,8,16
   369                        	.member	pCaption,152,142,8,32
   370                        	.member	subMenus,184,138,8,32,6
   371                        	.member	pBackground,216,129,8,32
   372                        	.member	hWndOwner,248,129,8,32
   373                        	.eos
   374                        	.stag	fake37_,160,37
   375                        	.member	menuId,0,16,8,16
   376                        	.member	caption,16,142,8,32
   377                        	.member	rect,48,10,8,112,26
   378                        	.eos
   379                        	.stag	fake38_,5152,38
   380                        	.member	pParent,0,138,8,32,33
   381                        	.member	rect,32,10,8,112,26
   382                        	.member	captions,144,1134,8,32,24
   383                        	.member	chrome,912,110,8,0,24
   384                        	.member	ids,1104,112,8,0,24
   385                        	.member	clickable,1488,106,8,0,30,24
   386                        	.member	selected,5136,16,8,16
   387                        	.eos
   388                        	.stag	_fx_button_t,96,39
  Mon Sep 27 2021  9:39                                                Page 8


   389                        	.member	pCaption,0,142,8,32
   390                        	.member	cCaption,32,16,8,16
   391                        	.member	data,48,129,8,32
   392                        	.member	captionPixelWidth,80,16,8,16
   393                        	.eos
   394                        	.stag	_fx_scrollbar_t,240,40
   395                        	.member	min,0,16,8,16
   396                        	.member	max,16,16,8,16
   397                        	.member	increment,32,16,8,16
   398                        	.member	stopsize,48,16,8,16
   399                        	.member	location,64,5,8,16
   400                        	.member	state,80,5,8,16
   401                        	.member	rectThumb,96,10,8,112,26
   402                        	.member	data,208,129,8,32
   403                        	.eos
   404                        	.stag	_fx_listbox_t,240,41
   405                        	.member	pos,0,5,8,16
   406                        	.member	selected,16,16,8,16
   407                        	.member	offsetX,32,5,8,16
   408                        	.member	offsetY,48,5,8,16
   409                        	.member	inc,64,5,8,16
   410                        	.member	direction,80,5,8,16
   411                        	.member	top,96,5,8,16
   412                        	.member	bottom,112,5,8,16
   413                        	.member	indexTop,128,5,8,16
   414                        	.member	indexBottom,144,5,8,16
   415                        	.member	maxItems,160,16,8,16
   416                        	.member	fontSet,176,142,8,32
   417                        	.member	data,208,129,8,32
   418                        	.eos
   419                        	.stag	_fx_textbox_t,144,42
   420                        	.member	pos,0,5,8,16
   421                        	.member	selected,16,16,8,16
   422                        	.member	offsetX,32,5,8,16
   423                        	.member	offsetY,48,5,8,16
   424                        	.member	isShifted,64,14,8,8
   425                        	.member	cursorState,72,14,8,8
   426                        	.member	fontSet,80,142,8,32
   427                        	.member	data,112,129,8,32
   428                        	.eos
   429                        	.stag	_fx_msgbox_t,144,43
   430                        	.member	pos,0,5,8,16
   431                        	.member	selected,16,16,8,16
   432                        	.member	offsetX,32,5,8,16
   433                        	.member	offsetY,48,5,8,16
   434                        	.member	isShifted,64,14,8,8
   435                        	.member	cursorState,72,14,8,8
   436                        	.member	fontSet,80,142,8,32
   437                        	.member	data,112,129,8,32
   438                        	.eos
   439                        	.stag	_fx_menuAnchor_t,272,44
   440                        	.member	pCaption,0,142,8,32
   441                        	.member	renderLayoutX,32,16,8,16
   442                        	.member	renderLayoutY,48,16,8,16
   443                        	.member	captionPixelWidth,64,16,8,16
   444                        	.member	data,80,129,8,32
   445                        	.member	droppedWindow,112,138,8,32,33
   446                        	.member	bytes,144,110,8,0,16
  Mon Sep 27 2021  9:39                                                Page 9


   447                        	.eos
   448                        	.stag	_SubMenuStruct,64,45
   449                        	.member	caption,0,142,8,32
   450                        	.member	action,32,641,8,32
   451                        	.eos
   452                        	.stag	_SubMenuListStruct,40,46
   453                        	.member	cMenus,0,14,8,8
   454                        	.member	psubmenus,8,9354,8,32,45
   455                        	.eos
   456                        	.stag	_fx_ComBuffer,2080,47
   457                        	.member	cbSize,0,16,8,16
   458                        	.member	cbBuffer,16,16,8,16
   459                        	.member	buffer,32,110,8,0,256
   460                        	.eos
   461                        	.stag	_fx_resource_header,72,48
   462                        	.member	magic,0,110,8,0,4
   463                        	.member	major,32,14,8,8
   464                        	.member	minor,40,14,8,8
   465                        	.member	type,48,14,8,8
   466                        	.member	reserved,56,14,8,8
   467                        	.member	resheaderSize,64,14,8,8
   468                        	.eos
   469                        	.stag	_fx_resource_header_font,144,49
   470                        	.member	title,0,110,8,0,16
   471                        	.member	height,128,14,8,8
   472                        	.member	width,136,14,8,8
   473                        	.eos
   474                        	.stag	_fx_resource_string,32,50
   475                        	.member	locale,0,110,8,0,2
   476                        	.member	entries,16,16,8,16
   477                        	.eos
   478                        	.stag	_fx_resource_string_entry,40,51
   479                        	.member	index,0,16,8,16
   480                        	.member	length,16,16,8,16
   481                        	.member	data,32,14,8,8
   482                        	.eos
   483                        	.line	1064
   484                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxos.h",8
   485                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxstringtable.h",0
   486                        	.line	90
   487                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxos.h",9
   488                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxc256u.h",0
   489                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxtypes.h",0
   490                        	.line	1064
   491                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxc256u.h",5
   492                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fmx_vicky.h",0
   493                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxtypes.h",0
   494                        	.line	1064
   495                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fmx_vicky.h",11
  Mon Sep 27 2021  9:39                                                Page 10


   496                        	.line	72
   497                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxc256u.h",6
   498                        	.line	1963
   499                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxos.h",16
   500                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxkernel.h",0
   501                        	.line	475
   502                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxos.h",22
   503                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxconsole.h",0
   504                        	.file	"G:\devtools\WDCTools\wdc\Tools\include\
                    string.h",0
   505                        	.line	134
   506                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxconsole.h",5
   507                        	.file	"G:\devtools\WDCTools\wdc\Tools\include\
                    stdlib.h",0
   508                        	.line	205
   509                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxconsole.h",6
   510                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxtypes.h",0
   511                        	.line	1064
   512                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxconsole.h",7
   513                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxc256u.h",0
   514                        	.line	1963
   515                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxconsole.h",12
   516                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxstring.h",0
   517                        	.file	"G:\devtools\WDCTools\wdc\Tools\include\
                    stdlib.h",0
   518                        	.line	205
   519                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxstring.h",5
   520                        	.file	"G:\devtools\WDCTools\wdc\Tools\include\
                    string.h",0
   521                        	.line	134
   522                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxstring.h",6
   523                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxtypes.h",0
   524                        	.line	1064
   525                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxstring.h",7
   526                        	.stag	_fx_string,64,52
   527                        	.member	size,0,16,8,16
   528                        	.member	pos,16,5,8,16
   529                        	.member	buffer,32,142,8,32
   530                        	.eos
   531                        	.line	141
   532                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxconsole.h",17
  Mon Sep 27 2021  9:39                                                Page 11


   533                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxeventmanager.h",0
   534                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxos.h",0
   535                        	.line	30
   536                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxeventmanager.h",5
   537                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxexec.h",0
   538                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxtypes.h",0
   539                        	.line	1064
   540                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxexec.h",5
   541                        	.stag	_fxos_executive_vtable,128,53
   542                        	.member	Init,0,8833,8,32
   543                        	.member	Configure,32,656,8,32
   544                        	.member	Query,64,656,8,32
   545                        	.member	Uninit,96,641,8,32
   546                        	.eos
   547                        	.line	86
   548                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxeventmanager.h",6
   549                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxnode.h",0
   550                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxtypes.h",0
   551                        	.line	1064
   552                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxnode.h",11
   553                        	.line	118
   554                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxeventmanager.h",7
   555                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxconsole.h",0
   556                        	.line	208
   557                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxeventmanager.h",8
   558                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxwindowmanager.h",0
   559                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxos.h",0
   560                        	.line	30
   561                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxwindowmanager.h",5
   562                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxmemorymanager.h",0
   563                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxos.h",0
   564                        	.line	30
   565                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxmemorymanager.h",5
   566                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\umm_malloc_cfg.h",0
   567                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxos_build_parameters.h",0
   568                        	.line	35
   569                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
  Mon Sep 27 2021  9:39                                                Page 12


                    space\FXOS-Beta\src\umm_malloc_cfg.h",8
   570                        	.stag	UMM_HEAP_INFO_t,256,54
   571                        	.member	totalEntries,0,18,8,32
   572                        	.member	usedEntries,32,18,8,32
   573                        	.member	freeEntries,64,18,8,32
   574                        	.member	totalBlocks,96,18,8,32
   575                        	.member	usedBlocks,128,18,8,32
   576                        	.member	freeBlocks,160,18,8,32
   577                        	.member	maxFreeContiguousBlocks,192,18,8,32
   578                        	.member	blockSize,224,18,8,32
   579                        	.eos
   580                        	.line	199
   581                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxmemorymanager.h",6
   582                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\umm_malloc.h",0
   583                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxtypes.h",0
   584                        	.line	1064
   585                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\umm_malloc.h",11
   586                        	.line	24
   587                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxmemorymanager.h",7
   588                        	.stag	_fx_memory_map,2072,55
   589                        	.member	availableMemory,0,18,8,32
   590                        	.member	valid_segments,32,110,8,0,255
   591                        	.eos
   592                        	.stag	_fx_ipc_port,144,56
   593                        	.member	id,0,18,8,32
   594                        	.member	type,32,14,8,8
   595                        	.member	name,40,138,8,32,52
   596                        	.member	time,72,18,8,32
   597                        	.member	queue,104,138,8,32,7
   598                        	.member	reserved_1,136,14,8,8
   599                        	.eos
   600                        	.stag	_k_mem_alloc_header,80,57
   601                        	.member	user,0,14,8,8
   602                        	.member	attr,8,14,8,8
   603                        	.member	size,16,18,8,32
   604                        	.member	virtual,48,129,8,32
   605                        	.eos
   606                        	.line	129
   607                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxwindowmanager.h",6
   608                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxeventmanager.h",0
   609                        	.line	572
   610                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxwindowmanager.h",7
   611                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxgfx.h",0
   612                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxfont.h",0
   613                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxtypes.h",0
   614                        	.line	1064
   615                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
  Mon Sep 27 2021  9:39                                                Page 13


                    space\FXOS-Beta\src\fxfont.h",6
   616                        	.line	74
   617                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxgfx.h",5
   618                        	.stag	_click_detected,64,58
   619                        	.member	window,0,138,8,32,33
   620                        	.member	handler,32,641,8,32
   621                        	.eos
   622                        	.stag	_current_palette_map,400,59
   623                        	.member	CUR_DESKTOP,0,5,8,16
   624                        	.member	CUR_BACKGROUND,16,5,8,16
   625                        	.member	CUR_FONT,32,5,8,16
   626                        	.member	CUR_SELECTED_FONT,48,5,8,16
   627                        	.member	CUR_HIGHLIGHT_COLOR,64,5,8,16
   628                        	.member	CUR_WINDOWFRAME,80,5,8,16
   629                        	.member	CUR_WINDOWBORDER,96,5,8,16
   630                        	.member	CUR_WINDOWSHADOW,112,5,8,16
   631                        	.member	CUR_MENU,128,5,8,16
   632                        	.member	CUR_GADGET,144,5,8,16
   633                        	.member	CUR_COLOR,160,101,8,0,15
   634                        	.eos
   635                        	.line	370
   636                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxwindowmanager.h",8
   637                        	.stag	_fxos_winman_vtable,160,60
   638                        	.member	Events,0,641,8,32
   639                        	.member	ConfigureWindowManager,32,656,8,32
   640                        	.member	ProcessWindowEvent,64,8833,8,32
   641                        	.member	QueryWindowManager,96,656,8,32
   642                        	.member	DoWndProcs,128,641,8,32
   643                        	.eos
   644                        	.stag	fake61_,64,61
   645                        	.member	type,0,16,8,16
   646                        	.member	size,16,16,8,16
   647                        	.member	desktopAction,32,129,8,32
   648                        	.eos
   649                        	.stag	fake62_,96,62
   650                        	.member	type,0,16,8,16
   651                        	.member	caption,16,138,8,32,52
   652                        	.member	buttonType,48,16,8,16
   653                        	.member	x,64,5,8,16
   654                        	.member	y,80,5,8,16
   655                        	.eos
   656                        	.stag	_childMessage_t,64,63
   657                        	.member	msgType,0,16,8,16
   658                        	.member	msgData,16,129,8,32
   659                        	.member	dataSize,48,16,8,16
   660                        	.eos
   661                        	.line	594
   662                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxeventmanager.h",9
   663                        	.stag	_fx_main_loopvars,16,64
   664                        	.member	dummy,0,5,8,16
   665                        	.eos
   666                        	.stag	_fxMouseMessageData,64,65
   667                        	.member	button1,0,14,8,8
   668                        	.member	button2,8,14,8,8
   669                        	.member	button3,16,14,8,8
  Mon Sep 27 2021  9:39                                                Page 14


   670                        	.member	button4,24,14,8,8
   671                        	.member	x,32,16,8,16
   672                        	.member	y,48,16,8,16
   673                        	.eos
   674                        	.utag	marshalled_data,32,66
   675                        	.member	byteValue,0,14,11,8
   676                        	.member	verbValue,0,110,11,0,2
   677                        	.member	intValue,0,16,11,16
   678                        	.member	longValue,0,18,11,32
   679                        	.member	pointerValue,0,129,11,32
   680                        	.eos
   681                        	.stag	_fx_eventProcess,64,67
   682                        	.member	process,0,138,8,32,20
   683                        	.member	eventProc,32,641,8,32
   684                        	.eos
   685                        	.stag	_mouse_msg_state,184,68
   686                        	.member	lastEvent,0,18,8,32
   687                        	.member	buttonLeftDown,32,14,8,8
   688                        	.member	lastLeftDown,40,18,8,32
   689                        	.member	buttonRightDown,72,14,8,8
   690                        	.member	lastRightDown,80,18,8,32
   691                        	.member	buttonMiddleDown,112,14,8,8
   692                        	.member	lastMiddleDown,120,18,8,32
   693                        	.member	lastX,152,16,8,16
   694                        	.member	lastY,168,16,8,16
   695                        	.eos
   696                        	.stag	_fxos_eventmanager_vtable,192,69
   697                        	.member	EventQueue,0,138,8,32,7
   698                        	.member	Init,32,8833,8,32
   699                        	.member	Run,64,656,8,32
   700                        	.member	Configure,96,656,8,32
   701                        	.member	Query,128,656,8,32
   702                        	.member	Uninit,160,641,8,32
   703                        	.eos
   704                        	.stag	_k_clipboard_data,168,70
   705                        	.member	type,0,14,8,8
   706                        	.member	readable,8,110,8,0,16
   707                        	.member	data,136,129,8,32
   708                        	.eos
   709                        	.line	572
   710                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxconsole.h",18
   711                        	.stag	_fx_spinner_ctx,48,71
   712                        	.member	index,0,5,8,16
   713                        	.member	spinner,16,142,8,32
   714                        	.eos
   715                        	.stag	_fx_console_ctx,1144,72
   716                        	.member	lineBufferIndex,0,5,8,16
   717                        	.member	lineBuffer,16,110,8,0,128
   718                        	.member	isShifted,1040,14,8,8
   719                        	.member	userData,1048,129,8,32
   720                        	.member	screenBuffer,1080,129,8,32
   721                        	.member	Reserved1,1112,129,8,32
   722                        	.eos
   723                        	.stag	_token,64,73
   724                        	.member	type,0,5,8,16
   725                        	.member	depth,16,16,8,16
   726                        	.member	text,32,142,8,32
  Mon Sep 27 2021  9:39                                                Page 15


   727                        	.eos
   728                        	.stag	_command_args,64,74
   729                        	.member	proc,0,656,8,32
   730                        	.member	tokens,32,138,8,32,5
   731                        	.eos
   732                        	.line	208
   733                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxos.h",23
   734                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxstring.h",0
   735                        	.line	141
   736                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxos.h",24
   737                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxnode.h",0
   738                        	.line	118
   739                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxos.h",25
   740                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\ff/ff.h",0
   741                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\ff/ffconf.h",0
   742                        	.line	298
   743                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\ff/ff.h",29
   744                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxtypes.h",0
   745                        	.line	1064
   746                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\ff/ff.h",30
   747                        	.stag	fake75_,4504,75
   748                        	.member	fs_type,0,14,8,8
   749                        	.member	pdrv,8,14,8,8
   750                        	.member	n_fats,16,14,8,8
   751                        	.member	wflag,24,14,8,8
   752                        	.member	fsi_flag,32,14,8,8
   753                        	.member	id,40,5,8,16
   754                        	.member	n_rootdir,56,5,8,16
   755                        	.member	csize,72,5,8,16
   756                        	.member	lfnbuf,88,144,8,32
   757                        	.member	last_clst,120,18,8,32
   758                        	.member	free_clst,152,18,8,32
   759                        	.member	n_fatent,184,18,8,32
   760                        	.member	fsize,216,18,8,32
   761                        	.member	volbase,248,18,8,32
   762                        	.member	fatbase,280,18,8,32
   763                        	.member	dirbase,312,18,8,32
   764                        	.member	database,344,18,8,32
   765                        	.member	winsect,376,18,8,32
   766                        	.member	win,408,110,8,0,512
   767                        	.eos
   768                        	.stag	fake76_,128,76
   769                        	.member	fs,0,138,8,32,75
   770                        	.member	id,32,5,8,16
   771                        	.member	attr,48,14,8,8
   772                        	.member	stat,56,14,8,8
   773                        	.member	sclust,64,18,8,32
   774                        	.member	objsize,96,18,8,32
  Mon Sep 27 2021  9:39                                                Page 16


   775                        	.eos
   776                        	.stag	fake77_,4400,77
   777                        	.member	obj,0,10,8,128,76
   778                        	.member	flag,128,14,8,8
   779                        	.member	err,136,14,8,8
   780                        	.member	fptr,144,18,8,32
   781                        	.member	clust,176,18,8,32
   782                        	.member	sect,208,18,8,32
   783                        	.member	dir_sect,240,18,8,32
   784                        	.member	dir_ptr,272,142,8,32
   785                        	.member	buf,304,110,8,0,512
   786                        	.eos
   787                        	.stag	fake78_,416,78
   788                        	.member	obj,0,10,8,128,76
   789                        	.member	dptr,128,18,8,32
   790                        	.member	clust,160,18,8,32
   791                        	.member	sect,192,18,8,32
   792                        	.member	dir,224,142,8,32
   793                        	.member	fn,256,110,8,0,12
   794                        	.member	blk_ofs,352,18,8,32
   795                        	.member	pat,384,142,8,32
   796                        	.eos
   797                        	.stag	fake79_,2224,79
   798                        	.member	fsize,0,18,8,32
   799                        	.member	fdate,32,5,8,16
   800                        	.member	ftime,48,5,8,16
   801                        	.member	fattrib,64,14,8,8
   802                        	.member	altname,72,110,8,0,13
   803                        	.member	fname,176,110,8,0,256
   804                        	.eos
   805                        	.stag	fake80_,80,80
   806                        	.member	fmt,0,14,8,8
   807                        	.member	n_fat,8,14,8,8
   808                        	.member	align,16,16,8,16
   809                        	.member	n_root,32,16,8,16
   810                        	.member	au_size,48,18,8,32
   811                        	.eos
   812                        	.line	429
   813                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxos.h",26
   814                        	.line	30
   815                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxkernel.h",5
   816                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxnode.h",0
   817                        	.line	118
   818                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxkernel.h",6
   819                        	.stag	_fx_api_call_table,8192,81
   820                        	.member	call_table,0,1121,8,32,256
   821                        	.eos
   822                        	.stag	_fx_zero_page_irq_data,32,82
   823                        	.member	data,0,110,8,0,4
   824                        	.eos
   825                        	.stag	_fx_zero_page,720,83
   826                        	.member	fxos_mouse_byte_0,0,14,8,8
   827                        	.member	fxos_mouse_byte_1,8,14,8,8
   828                        	.member	fxos_mouse_byte_2,16,14,8,8
  Mon Sep 27 2021  9:39                                                Page 17


   829                        	.member	fxos_mouse_byte_t,24,14,8,8
   830                        	.member	fxos_mouse_byte_x_l,32,14,8,8
   831                        	.member	fxos_mouse_byte_x_h,40,14,8,8
   832                        	.member	fxos_mouse_byte_y_l,48,14,8,8
   833                        	.member	fxos_mouse_byte_y_h,56,14,8,8
   834                        	.member	fxos_key_byte_0,64,14,8,8
   835                        	.member	fxos_key_byte_1,72,14,8,8
   836                        	.member	fxos_key_byte_2,80,14,8,8
   837                        	.member	fxos_mouse_ctl,88,14,8,8
   838                        	.member	fxos_mouse_index,96,14,8,8
   839                        	.member	fxos_mouse_status,104,14,8,8
   840                        	.member	Endianness,112,16,8,16
   841                        	.member	VersionMajor,128,16,8,16
   842                        	.member	VersionMinor,144,16,8,16
   843                        	.member	VersionRelease,160,16,8,16
   844                        	.member	topMemory,176,18,8,32
   845                        	.member	bottomMemory,208,18,8,32
   846                        	.member	availableMemory,240,18,8,32
   847                        	.member	availableMemoryK,272,18,8,32
   848                        	.member	availableHeapMemory,304,18,8,32
   849                        	.member	availableHeapMemoryK,336,18,8,32
   850                        	.member	fxos_console_row,368,16,8,16
   851                        	.member	fxos_console_col,384,16,8,16
   852                        	.member	executive,400,129,8,32
   853                        	.member	eventmanager,432,129,8,32
   854                        	.member	devicemanager,464,129,8,32
   855                        	.member	windowmanager,496,129,8,32
   856                        	.member	fxos_kernel_api,528,138,8,32,81
   857                        	.member	fxos_dos_api,560,138,8,32,81
   858                        	.member	fxos_gfx_api,592,138,8,32,81
   859                        	.member	fxos_gui_api,624,138,8,32,81
   860                        	.member	fxos_con_api,656,138,8,32,81
   861                        	.member	fxos_reserved_2_api,688,138,8,32,81
   862                        	.eos
   863                        	.stag	_fx_environment,96,84
   864                        	.member	variables,0,142,8,32
   865                        	.member	reserved1,32,5,8,16
   866                        	.member	reserved2,48,5,8,16
   867                        	.member	reserved3,64,5,8,16
   868                        	.member	reserved4,80,5,8,16
   869                        	.eos
   870                        	.stag	_debug_byte_bits,8,85
   871                        	.member	bit7,0,14,17,1
   872                        	.member	bit6,1,14,17,1
   873                        	.member	bit5,2,14,17,1
   874                        	.member	bit4,3,14,17,1
   875                        	.member	bit3,4,14,17,1
   876                        	.member	bit2,5,14,17,1
   877                        	.member	bit1,6,14,17,1
   878                        	.member	bit0,7,14,17,1
   879                        	.eos
   880                        	.stag	_k_segmentheader,160,86
   881                        	.member	version_major,0,14,8,8
   882                        	.member	version_minor,8,14,8,8
   883                        	.member	length,16,5,8,16
   884                        	.member	segment_start_addr,32,7,8,32
   885                        	.member	segment_end_addr,64,7,8,32
   886                        	.member	segment_size,96,7,8,32
  Mon Sep 27 2021  9:39                                                Page 18


   887                        	.member	main_entry_addr,128,7,8,32
   888                        	.eos
   889                        	.stag	_fx_device_driver,776,87
   890                        	.member	name,0,110,8,0,32
   891                        	.member	version,256,110,8,0,16
   892                        	.member	hmajor,384,110,8,0,8
   893                        	.member	hminor,448,110,8,0,8
   894                        	.member	type,512,14,8,8
   895                        	.member	designation,520,110,8,0,6
   896                        	.member	irq_ctl,568,16,8,16
   897                        	.member	f_driver_irq,584,129,8,32
   898                        	.member	driver_context,616,129,8,32
   899                        	.member	f_driver_load,648,129,8,32
   900                        	.member	f_driver_read,680,129,8,32
   901                        	.member	f_driver_write,712,129,8,32
   902                        	.member	f_driver_unload,744,129,8,32
   903                        	.eos
   904                        	.stag	_fx_block_device_driver,808,88
   905                        	.member	name,0,110,8,0,32
   906                        	.member	version,256,110,8,0,16
   907                        	.member	hmajor,384,110,8,0,8
   908                        	.member	hminor,448,110,8,0,8
   909                        	.member	type,512,14,8,8
   910                        	.member	designation,520,110,8,0,6
   911                        	.member	irq_ctl,568,16,8,16
   912                        	.member	f_driver_irq,584,129,8,32
   913                        	.member	driver_context,616,129,8,32
   914                        	.member	f_driver_load,648,129,8,32
   915                        	.member	f_driver_read,680,129,8,32
   916                        	.member	f_driver_write,712,129,8,32
   917                        	.member	f_driver_unload,744,129,8,32
   918                        	.member	f_driver_command,776,129,8,32
   919                        	.eos
   920                        	.stag	_k_irq_chain,128,89
   921                        	.member	handlers,0,5217,8,32,4
   922                        	.eos
   923                        	.line	475
   924                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxmemorymanager.c",2
   925                        ;#include "fxmemorymanager.h"
   926                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxmemorymanager.h",0
   927                        	.line	129
   928                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxmemorymanager.c",3
   929                        ;#include "fxos_build_parameters.h"
   930                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxos_build_parameters.h",0
   931                        	.line	35
   932                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxmemorymanager.c",4
   933                        ;
   934                        ;static ULONG THIS_MODULE = 0xB0000000;
   935                        	data
   936                        ~~THIS_MODULE:
   937 00:0000: 00 00 00 B0  	dl	$B0000000
   938 00:0004:              	ends
   939                        ;
  Mon Sep 27 2021  9:39                                                Page 19


   940                        ;//LPVOID heap_start = (LPVOID)(0x040000);
   941                        ;//LPVOID heap_end   = (LPVOID)(0x03FFFF);
   942                        ;
   943                        ;LPVOID heap_start = (LPVOID)FXOS_BUILD_NEAR_HEAP_
                    ADDR;
   944                        	data
   945                        	xdef	~~heap_start
   946                        ~~heap_start:
   947 00:0004: 00 00 02 00  	dl	$20000
   948 00:0008:              	ends
   949                        ;LPVOID heap_end   = (LPVOID)FXOS_BUILD_NEAR_HEAP_
                    TOP;
   950                        	data
   951                        	xdef	~~heap_end
   952                        ~~heap_end:
   953 00:0008: FF FF 02 00  	dl	$2FFFF
   954 00:000C:              	ends
   955                        ;
   956                        ;ULONG _current_allocation = 0L;
   957                        	data
   958                        	xdef	~~_current_allocation
   959                        ~~_current_allocation:
   960 00:000C: 00 00 00 00  	dl	$0
   961 00:0010:              	ends
   962                        ;
   963                        ;#define IPC_PORT_DEBUG		(0)
   964                        ;#define IPC_PORT_BROADCAST  (1)
   965                        ;#define IPC_PORT_KEYBOARD   (2)
   966                        ;#define IPC_PORT_MOUSE      (3)
   967                        ;#define IPC_PORT_CLIPBOARD  (4)
   968                        ;#define IPC_PORT_DEBUG_HD   (5)
   969                        ;#define IPC_PORT_PROC       (7)
   970                        ;
   971                        ;PIPCPORT 	_ipc_global_ports[8] = {NULL,NUL
                    L,NULL,NULL,NULL,NULL,NULL,NULL};
   972                        	data
   973                        	xdef	~~_ipc_global_ports
   974                        ~~_ipc_global_ports:
   975 00:0010: 00 00 00 00  	dl	$0,$0,$0,$0,$0,$0,$0,$0
       00:0014: 00 00 00 00 
       00:0018: 00 00 00 00 
       00:001C: 00 00 00 00 
       00:0020: 00 00 00 00 
       00:0024: 00 00 00 00 
       00:0028: 00 00 00 00 
       00:002C: 00 00 00 00 
   976 00:0030:              	ends
   977                        ;PFXNODELIST _ipc_ports = NULL;
   978                        	data
   979                        	xdef	~~_ipc_ports
   980                        ~~_ipc_ports:
   981 00:0030: 00 00 00 00  	dl	$0
   982 00:0034:              	ends
   983                        ;
   984                        ;#pragma section CODE=MEMMAN,offset $5:D000
   985                        MEMMAN	section	offset $5:D000
   986 05:D000:              	ends
   987                        ;
  Mon Sep 27 2021  9:39                                                Page 20


   988                        ;
   989                        ;ULONG  k_heap_integrity_check(void)
   990                        ;{
   991                        	.line	30
   992                        	.line	31
   993                        	MEMMAN
   994                        	xdef	~~k_heap_integrity_check
   995                        	func
   996                        	.function	31
   997                        ~~k_heap_integrity_check:
   998                        	longa	on
   999                        	longi	on
  1000 05:D000: 3B           	tsc
  1001 05:D001: 38           	sec
  1002 05:D002: E9 14 00     	sbc	#L2
  1003 05:D005: 1B           	tcs
  1004 05:D006: 0B           	phd
  1005 05:D007: 5B           	tcd
  1006                        	.block	31
  1007                        ;	LPVOID pAddress = NULL;
  1008                        ;	UMM_HEAP_INFO *pheapInfo = NULL;
  1009                        ;
  1010                        ;	k_lock_irq();
  1011             00000000   pAddress_1	set	0
  1012             00000004   pheapInfo_1	set	4
  1013                        	.sym	pAddress,0,129,1,32
  1014                        	.sym	pheapInfo,4,138,1,32,54
  1015 05:D008: 64 0D        	stz	<L3+pAddress_1
  1016 05:D00A: 64 0F        	stz	<L3+pAddress_1+2
  1017 05:D00C: 64 11        	stz	<L3+pheapInfo_1
  1018 05:D00E: 64 13        	stz	<L3+pheapInfo_1+2
  1019                        	.line	35
  1020 05:D010: 22 xx xx xx  	jsl	~~k_lock_irq
  1021                        ;
  1022                        ;	if(!umm_integrity_check(&pAddress))
  1023                        	.line	37
  1024                        ;		k_exec_throw_exception(k_heap_integrity_
                    check,(ULONG)pAddress," Memory Fault: Heap corruption detect
                    ed.",-1);
  1025 05:D014: F4 00 00     	pea	#0
  1026 05:D017: 18           	clc
  1027 05:D018: 7B           	tdc
  1028 05:D019: 69 0D 00     	adc	#<L3+pAddress_1
  1029 05:D01C: 48           	pha
  1030 05:D01D: 22 xx xx xx  	jsl	~~umm_integrity_check
  1031 05:D021: AA           	tax
  1032 05:D022: F0 03        	beq	L5
  1033 05:D024: 82 17 00     	brl	L10001
  1034                        L5:
  1035                        	.line	38
  1036 05:D027: F4 FF FF     	pea	#<$ffffffff
  1037 05:D02A: F4 xx xx     	pea	#^L1
  1038 05:D02D: F4 xx xx     	pea	#<L1
  1039 05:D030: D4 0F        	pei	<L3+pAddress_1+2
  1040 05:D032: D4 0D        	pei	<L3+pAddress_1
  1041 05:D034: F4 05 00     	pea	#^~~k_heap_integrity_check
  1042 05:D037: F4 00 D0     	pea	#<~~k_heap_integrity_check
  1043 05:D03A: 22 xx xx xx  	jsl	~~k_exec_throw_exception
  Mon Sep 27 2021  9:39                                                Page 21


  1044                        ;
  1045                        ;	pheapInfo = umm_info(NULL,0);
  1046                        L10001:
  1047                        	.line	40
  1048 05:D03E: F4 00 00     	pea	#<$0
  1049 05:D041: F4 00 00     	pea	#^$0
  1050 05:D044: F4 00 00     	pea	#<$0
  1051 05:D047: 22 xx xx xx  	jsl	~~umm_info
  1052 05:D04B: 85 11        	sta	<L3+pheapInfo_1
  1053 05:D04D: 86 13        	stx	<L3+pheapInfo_1+2
  1054                        ;
  1055                        ;	/*
  1056                        ;	k_debug_integer("heap:blockSize:",pheapInfo->blo
                    ckSize);
  1057                        ;	k_debug_integer("heap:freeBlocks:",pheapInfo->fr
                    eeBlocks);
  1058                        ;	k_debug_integer("heap:maxFreeContiguousBlocks:",
                    pheapInfo->freeEntries);
  1059                        ;	k_debug_integer("heap:totalBlocks:",pheapInfo->t
                    otalBlocks);
  1060                        ;	k_debug_integer("heap:usedBlocks:",pheapInfo->us
                    edBlocks);
  1061                        ;	*/
  1062                        ;
  1063                        ;	k_getZeroPage()->availableHeapMemory = (pheapInf
                    o->freeBlocks * pheapInfo->blockSize);
  1064                        	.line	50
  1065 05:D04F: 22 xx xx xx  	jsl	~~k_getZeroPage
  1066 05:D053: 85 01        	sta	<R0
  1067 05:D055: 86 03        	stx	<R0+2
  1068 05:D057: A0 1E 00     	ldy	#$1e
  1069 05:D05A: B7 11        	lda	[<L3+pheapInfo_1],Y
  1070 05:D05C: 48           	pha
  1071 05:D05D: A0 1C 00     	ldy	#$1c
  1072 05:D060: B7 11        	lda	[<L3+pheapInfo_1],Y
  1073 05:D062: 48           	pha
  1074 05:D063: A0 16 00     	ldy	#$16
  1075 05:D066: B7 11        	lda	[<L3+pheapInfo_1],Y
  1076 05:D068: 48           	pha
  1077 05:D069: A0 14 00     	ldy	#$14
  1078 05:D06C: B7 11        	lda	[<L3+pheapInfo_1],Y
  1079 05:D06E: 48           	pha
  1080                        	xref	~~~lmul
  1081 05:D06F: 22 xx xx xx  	jsl	~~~lmul
  1082 05:D073: 85 05        	sta	<R1
  1083 05:D075: 86 07        	stx	<R1+2
  1084 05:D077: A5 05        	lda	<R1
  1085 05:D079: A0 26 00     	ldy	#$26
  1086 05:D07C: 97 01        	sta	[<R0],Y
  1087 05:D07E: A5 07        	lda	<R1+2
  1088 05:D080: A0 28 00     	ldy	#$28
  1089 05:D083: 97 01        	sta	[<R0],Y
  1090                        ;	k_getZeroPage()->availableHeapMemoryK = k_getZer
                    oPage()->availableHeapMemory/1024;
  1091                        	.line	51
  1092 05:D085: 22 xx xx xx  	jsl	~~k_getZeroPage
  1093 05:D089: 85 01        	sta	<R0
  1094 05:D08B: 86 03        	stx	<R0+2
  Mon Sep 27 2021  9:39                                                Page 22


  1095 05:D08D: 22 xx xx xx  	jsl	~~k_getZeroPage
  1096 05:D091: 85 09        	sta	<R2
  1097 05:D093: 86 0B        	stx	<R2+2
  1098 05:D095: A0 28 00     	ldy	#$28
  1099 05:D098: B7 09        	lda	[<R2],Y
  1100 05:D09A: 48           	pha
  1101 05:D09B: A0 26 00     	ldy	#$26
  1102 05:D09E: B7 09        	lda	[<R2],Y
  1103 05:D0A0: 48           	pha
  1104 05:D0A1: A9 0A 00     	lda	#$a
  1105                        	xref	~~~llsr
  1106 05:D0A4: 22 xx xx xx  	jsl	~~~llsr
  1107 05:D0A8: 85 05        	sta	<R1
  1108 05:D0AA: 86 07        	stx	<R1+2
  1109 05:D0AC: A5 05        	lda	<R1
  1110 05:D0AE: A0 2A 00     	ldy	#$2a
  1111 05:D0B1: 97 01        	sta	[<R0],Y
  1112 05:D0B3: A5 07        	lda	<R1+2
  1113 05:D0B5: A0 2C 00     	ldy	#$2c
  1114 05:D0B8: 97 01        	sta	[<R0],Y
  1115                        ;
  1116                        ;	//k_debug_long("heap:availableHeapMemory:", k_ge
                    tZeroPage()->availableHeapMemory);
  1117                        ;
  1118                        ;	k_unlock_irq();
  1119                        	.line	55
  1120 05:D0BA: 22 xx xx xx  	jsl	~~k_unlock_irq
  1121                        ;
  1122                        ;	return (pheapInfo->freeBlocks * pheapInfo->block
                    Size);
  1123                        	.line	57
  1124 05:D0BE: A0 1E 00     	ldy	#$1e
  1125 05:D0C1: B7 11        	lda	[<L3+pheapInfo_1],Y
  1126 05:D0C3: 48           	pha
  1127 05:D0C4: A0 1C 00     	ldy	#$1c
  1128 05:D0C7: B7 11        	lda	[<L3+pheapInfo_1],Y
  1129 05:D0C9: 48           	pha
  1130 05:D0CA: A0 16 00     	ldy	#$16
  1131 05:D0CD: B7 11        	lda	[<L3+pheapInfo_1],Y
  1132 05:D0CF: 48           	pha
  1133 05:D0D0: A0 14 00     	ldy	#$14
  1134 05:D0D3: B7 11        	lda	[<L3+pheapInfo_1],Y
  1135 05:D0D5: 48           	pha
  1136                        	xref	~~~lmul
  1137 05:D0D6: 22 xx xx xx  	jsl	~~~lmul
  1138 05:D0DA: 85 01        	sta	<R0
  1139 05:D0DC: 86 03        	stx	<R0+2
  1140 05:D0DE: A6 03        	ldx	<R0+2
  1141 05:D0E0: A5 01        	lda	<R0
  1142                        L6:
  1143 05:D0E2: A8           	tay
  1144 05:D0E3: 2B           	pld
  1145 05:D0E4: 3B           	tsc
  1146 05:D0E5: 18           	clc
  1147 05:D0E6: 69 14 00     	adc	#L2
  1148 05:D0E9: 1B           	tcs
  1149 05:D0EA: 98           	tya
  1150 05:D0EB: 6B           	rtl
  Mon Sep 27 2021  9:39                                                Page 23


  1151                        ;}
  1152                        	.line	58
  1153                        	.endblock	58
  1154             00000014   L2	equ	20
  1155             0000000D   L3	equ	13
  1156 05:D0EC:              	ends
  1157                        	efunc
  1158                        	.endfunc	58,13,20
  1159                        	.line	58
  1160                        	data
  1161                        L1:
  1162 00:0034: 20 4D 65 6D  	db	$20,$4D,$65,$6D,$6F,$72,$79,$20,$46,$61,
                    $75,$6C,$74,$3A,$20
       00:0038: 6F 72 79 20 
       00:003C: 46 61 75 6C 
       00:0040: 74 3A 20 
  1163 00:0043: 48 65 61 70  	db	$48,$65,$61,$70,$20,$63,$6F,$72,$72,$75,
                    $70,$74,$69,$6F,$6E
       00:0047: 20 63 6F 72 
       00:004B: 72 75 70 74 
       00:004F: 69 6F 6E 
  1164 00:0052: 20 64 65 74  	db	$20,$64,$65,$74,$65,$63,$74,$65,$64,$2E,
                    $00
       00:0056: 65 63 74 65 
       00:005A: 64 2E 00 
  1165 00:005D:              	ends
  1166                        ;
  1167                        ;
  1168                        ;ULONG k_check_system_memory(MemoryCallback callba
                    ck)
  1169                        ;{
  1170                        	.line	61
  1171                        	.line	62
  1172                        	MEMMAN
  1173                        	xdef	~~k_check_system_memory
  1174                        	func
  1175                        	.function	62
  1176                        ~~k_check_system_memory:
  1177                        	longa	on
  1178                        	longi	on
  1179 05:D0EC: 3B           	tsc
  1180 05:D0ED: 38           	sec
  1181 05:D0EE: E9 14 00     	sbc	#L8
  1182 05:D0F1: 1B           	tcs
  1183 05:D0F2: 0B           	phd
  1184 05:D0F3: 5B           	tcd
  1185             00000004   callback_0	set	4
  1186                        	.block	62
  1187                        ;	ULONG size = MEM_SYSTEM_MIN; // first three segm
                    ents that got us here
  1188                        ;	ULONG bank = 0;
  1189                        ;	ULONG offset  = 0;
  1190                        ;	ULONG block = 0;
  1191                        ;	
  1192                        ;	//umm_integrity_check();
  1193                        ;
  1194                        ;	for(bank = MEM_USER_FLOOR;bank < MEM_USER_CEILIN
                    G;bank+=0x010000)
  Mon Sep 27 2021  9:39                                                Page 24


  1195             00000000   size_1	set	0
  1196             00000004   bank_1	set	4
  1197             00000008   offset_1	set	8
  1198             0000000C   block_1	set	12
  1199                        	.sym	size,0,18,1,32
  1200                        	.sym	bank,4,18,1,32
  1201                        	.sym	offset,8,18,1,32
  1202                        	.sym	block,12,18,1,32
  1203                        	.sym	callback,4,641,6,32
  1204 05:D0F4: A9 00 00     	lda	#$0
  1205 05:D0F7: 85 05        	sta	<L9+size_1
  1206 05:D0F9: A9 0B 00     	lda	#$b
  1207 05:D0FC: 85 07        	sta	<L9+size_1+2
  1208 05:D0FE: 64 09        	stz	<L9+bank_1
  1209 05:D100: 64 0B        	stz	<L9+bank_1+2
  1210 05:D102: 64 0D        	stz	<L9+offset_1
  1211 05:D104: 64 0F        	stz	<L9+offset_1+2
  1212 05:D106: 64 11        	stz	<L9+block_1
  1213 05:D108: 64 13        	stz	<L9+block_1+2
  1214                        	.line	70
  1215 05:D10A: A9 00 00     	lda	#$0
  1216 05:D10D: 85 09        	sta	<L9+bank_1
  1217 05:D10F: A9 19 00     	lda	#$19
  1218 05:D112: 85 0B        	sta	<L9+bank_1+2
  1219                        L10004:
  1220                        ;	{
  1221                        	.line	71
  1222                        ;		block = 0;
  1223                        	.line	72
  1224 05:D114: 64 11        	stz	<L9+block_1
  1225 05:D116: 64 13        	stz	<L9+block_1+2
  1226                        ;		//k_debug_hex("Checking Segment: 0x",(UC
                    HAR)(segment >> 16));
  1227                        ;		for(offset = 0x0000;offset < 0xFFFF;offs
                    et++)
  1228                        	.line	74
  1229 05:D118: 64 0D        	stz	<L9+offset_1
  1230 05:D11A: 64 0F        	stz	<L9+offset_1+2
  1231                        L10007:
  1232                        ;		{
  1233                        	.line	75
  1234                        ;			*((unsigned char FAR*)(bank + of
                    fset)) = 0;
  1235                        	.line	76
  1236 05:D11C: 18           	clc
  1237 05:D11D: A5 09        	lda	<L9+bank_1
  1238 05:D11F: 65 0D        	adc	<L9+offset_1
  1239 05:D121: 85 01        	sta	<R0
  1240 05:D123: A5 0B        	lda	<L9+bank_1+2
  1241 05:D125: 65 0F        	adc	<L9+offset_1+2
  1242 05:D127: 85 03        	sta	<R0+2
  1243 05:D129: E2 20        	sep	#$20
  1244                        	longa	off
  1245 05:D12B: A9 00        	lda	#$0
  1246 05:D12D: 87 01        	sta	[<R0]
  1247 05:D12F: C2 20        	rep	#$20
  1248                        	longa	on
  1249                        ;			*((unsigned char FAR*)(bank + of
  Mon Sep 27 2021  9:39                                                Page 25


                    fset)) = 1;
  1250                        	.line	77
  1251 05:D131: 18           	clc
  1252 05:D132: A5 09        	lda	<L9+bank_1
  1253 05:D134: 65 0D        	adc	<L9+offset_1
  1254 05:D136: 85 01        	sta	<R0
  1255 05:D138: A5 0B        	lda	<L9+bank_1+2
  1256 05:D13A: 65 0F        	adc	<L9+offset_1+2
  1257 05:D13C: 85 03        	sta	<R0+2
  1258 05:D13E: E2 20        	sep	#$20
  1259                        	longa	off
  1260 05:D140: A9 01        	lda	#$1
  1261 05:D142: 87 01        	sta	[<R0]
  1262 05:D144: C2 20        	rep	#$20
  1263                        	longa	on
  1264                        ;			if(*((unsigned char FAR*)(bank +
                     offset)) == 1)
  1265                        	.line	78
  1266                        ;			{
  1267 05:D146: 18           	clc
  1268 05:D147: A5 09        	lda	<L9+bank_1
  1269 05:D149: 65 0D        	adc	<L9+offset_1
  1270 05:D14B: 85 01        	sta	<R0
  1271 05:D14D: A5 0B        	lda	<L9+bank_1+2
  1272 05:D14F: 65 0F        	adc	<L9+offset_1+2
  1273 05:D151: 85 03        	sta	<R0+2
  1274 05:D153: E2 20        	sep	#$20
  1275                        	longa	off
  1276 05:D155: A7 01        	lda	[<R0]
  1277 05:D157: C9 01        	cmp	#<$1
  1278 05:D159: C2 20        	rep	#$20
  1279                        	longa	on
  1280 05:D15B: F0 03        	beq	L11
  1281 05:D15D: 82 1B 00     	brl	L10008
  1282                        L11:
  1283                        	.line	79
  1284                        ;				//size++;
  1285                        ;				block++;
  1286                        	.line	81
  1287 05:D160: E6 11        	inc	<L9+block_1
  1288 05:D162: D0 02        	bne	L12
  1289 05:D164: E6 13        	inc	<L9+block_1+2
  1290                        L12:
  1291                        ;				*((unsigned char FAR*)(b
                    ank + offset)) = 0;
  1292                        	.line	82
  1293 05:D166: 18           	clc
  1294 05:D167: A5 09        	lda	<L9+bank_1
  1295 05:D169: 65 0D        	adc	<L9+offset_1
  1296 05:D16B: 85 01        	sta	<R0
  1297 05:D16D: A5 0B        	lda	<L9+bank_1+2
  1298 05:D16F: 65 0F        	adc	<L9+offset_1+2
  1299 05:D171: 85 03        	sta	<R0+2
  1300 05:D173: E2 20        	sep	#$20
  1301                        	longa	off
  1302 05:D175: A9 00        	lda	#$0
  1303 05:D177: 87 01        	sta	[<R0]
  1304 05:D179: C2 20        	rep	#$20
  Mon Sep 27 2021  9:39                                                Page 26


  1305                        	longa	on
  1306                        ;			}
  1307                        	.line	83
  1308                        ;		}
  1309                        L10008:
  1310                        	.line	84
  1311                        L10005:
  1312 05:D17B: E6 0D        	inc	<L9+offset_1
  1313 05:D17D: D0 02        	bne	L13
  1314 05:D17F: E6 0F        	inc	<L9+offset_1+2
  1315                        L13:
  1316 05:D181: A5 0D        	lda	<L9+offset_1
  1317 05:D183: C9 FF FF     	cmp	#<$ffff
  1318 05:D186: A5 0F        	lda	<L9+offset_1+2
  1319 05:D188: E9 00 00     	sbc	#^$ffff
  1320 05:D18B: B0 03        	bcs	L14
  1321 05:D18D: 82 8C FF     	brl	L10007
  1322                        L14:
  1323                        L10006:
  1324                        ;		//k_debug_long("Block:",block);
  1325                        ;		size+=block;
  1326                        	.line	86
  1327 05:D190: 18           	clc
  1328 05:D191: A5 05        	lda	<L9+size_1
  1329 05:D193: 65 11        	adc	<L9+block_1
  1330 05:D195: 85 05        	sta	<L9+size_1
  1331 05:D197: A5 07        	lda	<L9+size_1+2
  1332 05:D199: 65 13        	adc	<L9+block_1+2
  1333 05:D19B: 85 07        	sta	<L9+size_1+2
  1334                        ;
  1335                        ;		if(callback!=NULL)
  1336                        	.line	88
  1337                        ;		{
  1338 05:D19D: A5 18        	lda	<L8+callback_0
  1339 05:D19F: 05 1A        	ora	<L8+callback_0+2
  1340 05:D1A1: D0 03        	bne	L15
  1341 05:D1A3: 82 21 00     	brl	L10009
  1342                        L15:
  1343                        	.line	89
  1344                        ;			callback((UCHAR)(bank >> 16),blo
                    ck,size);
  1345                        	.line	90
  1346 05:D1A6: D4 07        	pei	<L9+size_1+2
  1347 05:D1A8: D4 05        	pei	<L9+size_1
  1348 05:D1AA: D4 13        	pei	<L9+block_1+2
  1349 05:D1AC: D4 11        	pei	<L9+block_1
  1350 05:D1AE: D4 0B        	pei	<L9+bank_1+2
  1351 05:D1B0: D4 09        	pei	<L9+bank_1
  1352 05:D1B2: A9 10 00     	lda	#$10
  1353                        	xref	~~~llsr
  1354 05:D1B5: 22 xx xx xx  	jsl	~~~llsr
  1355 05:D1B9: 85 01        	sta	<R0
  1356 05:D1BB: 86 03        	stx	<R0+2
  1357 05:D1BD: D4 01        	pei	<R0
  1358 05:D1BF: A6 1A        	ldx	<L8+callback_0+2
  1359 05:D1C1: A5 18        	lda	<L8+callback_0
  1360                        	xref	~~~lcal
  1361 05:D1C3: 22 xx xx xx  	jsl	~~~lcal
  Mon Sep 27 2021  9:39                                                Page 27


  1362                        ;		}
  1363                        	.line	91
  1364                        ;
  1365                        ;	}
  1366                        L10009:
  1367                        	.line	93
  1368                        L10002:
  1369 05:D1C7: 18           	clc
  1370 05:D1C8: A9 00 00     	lda	#$0
  1371 05:D1CB: 65 09        	adc	<L9+bank_1
  1372 05:D1CD: 85 09        	sta	<L9+bank_1
  1373 05:D1CF: A9 01 00     	lda	#$1
  1374 05:D1D2: 65 0B        	adc	<L9+bank_1+2
  1375 05:D1D4: 85 0B        	sta	<L9+bank_1+2
  1376 05:D1D6: A5 09        	lda	<L9+bank_1
  1377 05:D1D8: C9 00 00     	cmp	#<$af0000
  1378 05:D1DB: A5 0B        	lda	<L9+bank_1+2
  1379 05:D1DD: E9 AF 00     	sbc	#^$af0000
  1380 05:D1E0: B0 03        	bcs	L16
  1381 05:D1E2: 82 2F FF     	brl	L10004
  1382                        L16:
  1383                        L10003:
  1384                        ;
  1385                        ;	k_debug_long("Total Memory:",size);
  1386                        	.line	95
  1387 05:D1E5: D4 07        	pei	<L9+size_1+2
  1388 05:D1E7: D4 05        	pei	<L9+size_1
  1389 05:D1E9: F4 xx xx     	pea	#^L7
  1390 05:D1EC: F4 xx xx     	pea	#<L7
  1391 05:D1EF: 22 xx xx xx  	jsl	~~k_debug_long
  1392                        ;
  1393                        ;	return size;
  1394                        	.line	97
  1395 05:D1F3: A6 07        	ldx	<L9+size_1+2
  1396 05:D1F5: A5 05        	lda	<L9+size_1
  1397                        L17:
  1398 05:D1F7: A8           	tay
  1399 05:D1F8: A5 16        	lda	<L8+2
  1400 05:D1FA: 85 1A        	sta	<L8+2+4
  1401 05:D1FC: A5 15        	lda	<L8+1
  1402 05:D1FE: 85 19        	sta	<L8+1+4
  1403 05:D200: 2B           	pld
  1404 05:D201: 3B           	tsc
  1405 05:D202: 18           	clc
  1406 05:D203: 69 18 00     	adc	#L8+4
  1407 05:D206: 1B           	tcs
  1408 05:D207: 98           	tya
  1409 05:D208: 6B           	rtl
  1410                        ;}
  1411                        	.line	98
  1412                        	.endblock	98
  1413             00000014   L8	equ	20
  1414             00000005   L9	equ	5
  1415 05:D209:              	ends
  1416                        	efunc
  1417                        	.endfunc	98,5,20
  1418                        	.line	98
  1419                        	data
  Mon Sep 27 2021  9:39                                                Page 28


  1420                        L7:
  1421 00:005D: 54 6F 74 61  	db	$54,$6F,$74,$61,$6C,$20,$4D,$65,$6D,$6F,
                    $72,$79,$3A,$00
       00:0061: 6C 20 4D 65 
       00:0065: 6D 6F 72 79 
       00:0069: 3A 00 
  1422 00:006B:              	ends
  1423                        ;
  1424                        ;ULONG k_fcheck_system_memory(MemoryCallback callb
                    ack)
  1425                        ;{
  1426                        	.line	100
  1427                        	.line	101
  1428                        	MEMMAN
  1429                        	xdef	~~k_fcheck_system_memory
  1430                        	func
  1431                        	.function	101
  1432                        ~~k_fcheck_system_memory:
  1433                        	longa	on
  1434                        	longi	on
  1435 05:D209: 3B           	tsc
  1436 05:D20A: 38           	sec
  1437 05:D20B: E9 14 00     	sbc	#L19
  1438 05:D20E: 1B           	tcs
  1439 05:D20F: 0B           	phd
  1440 05:D210: 5B           	tcd
  1441             00000004   callback_0	set	4
  1442                        	.block	101
  1443                        ;	ULONG size = MEM_SYSTEM_MIN; // top of OS
  1444                        ;	ULONG segment = 0;
  1445                        ;	ULONG offset  = 0;
  1446                        ;	ULONG block = 0;
  1447                        ;
  1448                        ;	//umm_integrity_check();
  1449                        ;
  1450                        ;	for(segment = MEM_USER_FLOOR;segment < MEM_USER_
                    CEILING;segment+=0x010000)
  1451             00000000   size_1	set	0
  1452             00000004   segment_1	set	4
  1453             00000008   offset_1	set	8
  1454             0000000C   block_1	set	12
  1455                        	.sym	size,0,18,1,32
  1456                        	.sym	segment,4,18,1,32
  1457                        	.sym	offset,8,18,1,32
  1458                        	.sym	block,12,18,1,32
  1459                        	.sym	callback,4,641,6,32
  1460 05:D211: A9 00 00     	lda	#$0
  1461 05:D214: 85 05        	sta	<L20+size_1
  1462 05:D216: A9 0B 00     	lda	#$b
  1463 05:D219: 85 07        	sta	<L20+size_1+2
  1464 05:D21B: 64 09        	stz	<L20+segment_1
  1465 05:D21D: 64 0B        	stz	<L20+segment_1+2
  1466 05:D21F: 64 0D        	stz	<L20+offset_1
  1467 05:D221: 64 0F        	stz	<L20+offset_1+2
  1468 05:D223: 64 11        	stz	<L20+block_1
  1469 05:D225: 64 13        	stz	<L20+block_1+2
  1470                        	.line	109
  1471 05:D227: A9 00 00     	lda	#$0
  Mon Sep 27 2021  9:39                                                Page 29


  1472 05:D22A: 85 09        	sta	<L20+segment_1
  1473 05:D22C: A9 19 00     	lda	#$19
  1474 05:D22F: 85 0B        	sta	<L20+segment_1+2
  1475                        L10012:
  1476                        ;	{
  1477                        	.line	110
  1478                        ;		block = 0;
  1479                        	.line	111
  1480 05:D231: 64 11        	stz	<L20+block_1
  1481 05:D233: 64 13        	stz	<L20+block_1+2
  1482                        ;		//k_debug_hex("Checking Segment: 0x",(UC
                    HAR)(segment >> 16));
  1483                        ;		for(offset = 0x0000;offset < 0x01FF;offs
                    et++)
  1484                        	.line	113
  1485 05:D235: 64 0D        	stz	<L20+offset_1
  1486 05:D237: 64 0F        	stz	<L20+offset_1+2
  1487                        L10015:
  1488                        ;		{
  1489                        	.line	114
  1490                        ;			*((unsigned char FAR*)(segment +
                     offset)) = 0;
  1491                        	.line	115
  1492 05:D239: 18           	clc
  1493 05:D23A: A5 09        	lda	<L20+segment_1
  1494 05:D23C: 65 0D        	adc	<L20+offset_1
  1495 05:D23E: 85 01        	sta	<R0
  1496 05:D240: A5 0B        	lda	<L20+segment_1+2
  1497 05:D242: 65 0F        	adc	<L20+offset_1+2
  1498 05:D244: 85 03        	sta	<R0+2
  1499 05:D246: E2 20        	sep	#$20
  1500                        	longa	off
  1501 05:D248: A9 00        	lda	#$0
  1502 05:D24A: 87 01        	sta	[<R0]
  1503 05:D24C: C2 20        	rep	#$20
  1504                        	longa	on
  1505                        ;			*((unsigned char FAR*)(segment +
                     offset)) = 1;
  1506                        	.line	116
  1507 05:D24E: 18           	clc
  1508 05:D24F: A5 09        	lda	<L20+segment_1
  1509 05:D251: 65 0D        	adc	<L20+offset_1
  1510 05:D253: 85 01        	sta	<R0
  1511 05:D255: A5 0B        	lda	<L20+segment_1+2
  1512 05:D257: 65 0F        	adc	<L20+offset_1+2
  1513 05:D259: 85 03        	sta	<R0+2
  1514 05:D25B: E2 20        	sep	#$20
  1515                        	longa	off
  1516 05:D25D: A9 01        	lda	#$1
  1517 05:D25F: 87 01        	sta	[<R0]
  1518 05:D261: C2 20        	rep	#$20
  1519                        	longa	on
  1520                        ;			if(*((unsigned char FAR*)(segmen
                    t + offset)) == 1)
  1521                        	.line	117
  1522                        ;			{
  1523 05:D263: 18           	clc
  1524 05:D264: A5 09        	lda	<L20+segment_1
  Mon Sep 27 2021  9:39                                                Page 30


  1525 05:D266: 65 0D        	adc	<L20+offset_1
  1526 05:D268: 85 01        	sta	<R0
  1527 05:D26A: A5 0B        	lda	<L20+segment_1+2
  1528 05:D26C: 65 0F        	adc	<L20+offset_1+2
  1529 05:D26E: 85 03        	sta	<R0+2
  1530 05:D270: E2 20        	sep	#$20
  1531                        	longa	off
  1532 05:D272: A7 01        	lda	[<R0]
  1533 05:D274: C9 01        	cmp	#<$1
  1534 05:D276: C2 20        	rep	#$20
  1535                        	longa	on
  1536 05:D278: F0 03        	beq	L22
  1537 05:D27A: 82 1B 00     	brl	L10016
  1538                        L22:
  1539                        	.line	118
  1540                        ;				block++;
  1541                        	.line	119
  1542 05:D27D: E6 11        	inc	<L20+block_1
  1543 05:D27F: D0 02        	bne	L23
  1544 05:D281: E6 13        	inc	<L20+block_1+2
  1545                        L23:
  1546                        ;				*((unsigned char FAR*)(s
                    egment + offset)) = 0;
  1547                        	.line	120
  1548 05:D283: 18           	clc
  1549 05:D284: A5 09        	lda	<L20+segment_1
  1550 05:D286: 65 0D        	adc	<L20+offset_1
  1551 05:D288: 85 01        	sta	<R0
  1552 05:D28A: A5 0B        	lda	<L20+segment_1+2
  1553 05:D28C: 65 0F        	adc	<L20+offset_1+2
  1554 05:D28E: 85 03        	sta	<R0+2
  1555 05:D290: E2 20        	sep	#$20
  1556                        	longa	off
  1557 05:D292: A9 00        	lda	#$0
  1558 05:D294: 87 01        	sta	[<R0]
  1559 05:D296: C2 20        	rep	#$20
  1560                        	longa	on
  1561                        ;			}
  1562                        	.line	121
  1563                        ;		}
  1564                        L10016:
  1565                        	.line	122
  1566                        L10013:
  1567 05:D298: E6 0D        	inc	<L20+offset_1
  1568 05:D29A: D0 02        	bne	L24
  1569 05:D29C: E6 0F        	inc	<L20+offset_1+2
  1570                        L24:
  1571 05:D29E: A5 0D        	lda	<L20+offset_1
  1572 05:D2A0: C9 FF 01     	cmp	#<$1ff
  1573 05:D2A3: A5 0F        	lda	<L20+offset_1+2
  1574 05:D2A5: E9 00 00     	sbc	#^$1ff
  1575 05:D2A8: B0 03        	bcs	L25
  1576 05:D2AA: 82 8C FF     	brl	L10015
  1577                        L25:
  1578                        L10014:
  1579                        ;		if(block > 0)
  1580                        	.line	123
  1581                        ;			block = 0xFFFF;
  Mon Sep 27 2021  9:39                                                Page 31


  1582 05:D2AD: A9 00 00     	lda	#$0
  1583 05:D2B0: C5 11        	cmp	<L20+block_1
  1584 05:D2B2: A9 00 00     	lda	#$0
  1585 05:D2B5: E5 13        	sbc	<L20+block_1+2
  1586 05:D2B7: 90 03        	bcc	L26
  1587 05:D2B9: 82 0A 00     	brl	L10017
  1588                        L26:
  1589                        	.line	124
  1590 05:D2BC: A9 FF FF     	lda	#$ffff
  1591 05:D2BF: 85 11        	sta	<L20+block_1
  1592 05:D2C1: A9 00 00     	lda	#$0
  1593 05:D2C4: 85 13        	sta	<L20+block_1+2
  1594                        ;
  1595                        ;		//k_debug_long("Block:",block);
  1596                        ;		size+=block;
  1597                        L10017:
  1598                        	.line	127
  1599 05:D2C6: 18           	clc
  1600 05:D2C7: A5 05        	lda	<L20+size_1
  1601 05:D2C9: 65 11        	adc	<L20+block_1
  1602 05:D2CB: 85 05        	sta	<L20+size_1
  1603 05:D2CD: A5 07        	lda	<L20+size_1+2
  1604 05:D2CF: 65 13        	adc	<L20+block_1+2
  1605 05:D2D1: 85 07        	sta	<L20+size_1+2
  1606                        ;
  1607                        ;		if(callback!=NULL)
  1608                        	.line	129
  1609                        ;		{
  1610 05:D2D3: A5 18        	lda	<L19+callback_0
  1611 05:D2D5: 05 1A        	ora	<L19+callback_0+2
  1612 05:D2D7: D0 03        	bne	L27
  1613 05:D2D9: 82 21 00     	brl	L10018
  1614                        L27:
  1615                        	.line	130
  1616                        ;			callback((UCHAR)(segment >> 16),
                    block,size);
  1617                        	.line	131
  1618 05:D2DC: D4 07        	pei	<L20+size_1+2
  1619 05:D2DE: D4 05        	pei	<L20+size_1
  1620 05:D2E0: D4 13        	pei	<L20+block_1+2
  1621 05:D2E2: D4 11        	pei	<L20+block_1
  1622 05:D2E4: D4 0B        	pei	<L20+segment_1+2
  1623 05:D2E6: D4 09        	pei	<L20+segment_1
  1624 05:D2E8: A9 10 00     	lda	#$10
  1625                        	xref	~~~llsr
  1626 05:D2EB: 22 xx xx xx  	jsl	~~~llsr
  1627 05:D2EF: 85 01        	sta	<R0
  1628 05:D2F1: 86 03        	stx	<R0+2
  1629 05:D2F3: D4 01        	pei	<R0
  1630 05:D2F5: A6 1A        	ldx	<L19+callback_0+2
  1631 05:D2F7: A5 18        	lda	<L19+callback_0
  1632                        	xref	~~~lcal
  1633 05:D2F9: 22 xx xx xx  	jsl	~~~lcal
  1634                        ;		}
  1635                        	.line	132
  1636                        ;
  1637                        ;	}
  1638                        L10018:
  Mon Sep 27 2021  9:39                                                Page 32


  1639                        	.line	134
  1640                        L10010:
  1641 05:D2FD: 18           	clc
  1642 05:D2FE: A9 00 00     	lda	#$0
  1643 05:D301: 65 09        	adc	<L20+segment_1
  1644 05:D303: 85 09        	sta	<L20+segment_1
  1645 05:D305: A9 01 00     	lda	#$1
  1646 05:D308: 65 0B        	adc	<L20+segment_1+2
  1647 05:D30A: 85 0B        	sta	<L20+segment_1+2
  1648 05:D30C: A5 09        	lda	<L20+segment_1
  1649 05:D30E: C9 00 00     	cmp	#<$af0000
  1650 05:D311: A5 0B        	lda	<L20+segment_1+2
  1651 05:D313: E9 AF 00     	sbc	#^$af0000
  1652 05:D316: B0 03        	bcs	L28
  1653 05:D318: 82 16 FF     	brl	L10012
  1654                        L28:
  1655                        L10011:
  1656                        ;
  1657                        ;	k_debug_long("Total Memory:",size);
  1658                        	.line	136
  1659 05:D31B: D4 07        	pei	<L20+size_1+2
  1660 05:D31D: D4 05        	pei	<L20+size_1
  1661 05:D31F: F4 xx xx     	pea	#^L18
  1662 05:D322: F4 xx xx     	pea	#<L18
  1663 05:D325: 22 xx xx xx  	jsl	~~k_debug_long
  1664                        ;
  1665                        ;	return size;
  1666                        	.line	138
  1667 05:D329: A6 07        	ldx	<L20+size_1+2
  1668 05:D32B: A5 05        	lda	<L20+size_1
  1669                        L29:
  1670 05:D32D: A8           	tay
  1671 05:D32E: A5 16        	lda	<L19+2
  1672 05:D330: 85 1A        	sta	<L19+2+4
  1673 05:D332: A5 15        	lda	<L19+1
  1674 05:D334: 85 19        	sta	<L19+1+4
  1675 05:D336: 2B           	pld
  1676 05:D337: 3B           	tsc
  1677 05:D338: 18           	clc
  1678 05:D339: 69 18 00     	adc	#L19+4
  1679 05:D33C: 1B           	tcs
  1680 05:D33D: 98           	tya
  1681 05:D33E: 6B           	rtl
  1682                        ;}
  1683                        	.line	139
  1684                        	.endblock	139
  1685             00000014   L19	equ	20
  1686             00000005   L20	equ	5
  1687 05:D33F:              	ends
  1688                        	efunc
  1689                        	.endfunc	139,5,20
  1690                        	.line	139
  1691                        	data
  1692                        L18:
  1693 00:006B: 54 6F 74 61  	db	$54,$6F,$74,$61,$6C,$20,$4D,$65,$6D,$6F,
                    $72,$79,$3A,$00
       00:006F: 6C 20 4D 65 
       00:0073: 6D 6F 72 79 
  Mon Sep 27 2021  9:39                                                Page 33


       00:0077: 3A 00 
  1694 00:0079:              	ends
  1695                        ;
  1696                        ;LPVOID k_mem_object_copy(LPVOID object,UINT size)
  1697                        ;{
  1698                        	.line	141
  1699                        	.line	142
  1700                        	MEMMAN
  1701                        	xdef	~~k_mem_object_copy
  1702                        	func
  1703                        	.function	142
  1704                        ~~k_mem_object_copy:
  1705                        	longa	on
  1706                        	longi	on
  1707 05:D33F: 3B           	tsc
  1708 05:D340: 38           	sec
  1709 05:D341: E9 08 00     	sbc	#L31
  1710 05:D344: 1B           	tcs
  1711 05:D345: 0B           	phd
  1712 05:D346: 5B           	tcd
  1713             00000004   object_0	set	4
  1714             00000008   size_0	set	8
  1715                        	.block	142
  1716                        ;	LPVOID pnew = k_mem_allocate_heap(size);
  1717                        ;
  1718                        ;	memcpy(pnew,object,size);
  1719             00000000   pnew_1	set	0
  1720                        	.sym	pnew,0,129,1,32
  1721                        	.sym	object,4,129,6,32
  1722                        	.sym	size,8,16,6,16
  1723 05:D347: A5 10        	lda	<L31+size_0
  1724 05:D349: 85 01        	sta	<R0
  1725 05:D34B: 64 03        	stz	<R0+2
  1726 05:D34D: D4 03        	pei	<R0+2
  1727 05:D34F: D4 01        	pei	<R0
  1728 05:D351: 22 87 D4 05  	jsl	~~k_mem_allocate_heap
  1729 05:D355: 85 05        	sta	<L32+pnew_1
  1730 05:D357: 86 07        	stx	<L32+pnew_1+2
  1731                        	.line	145
  1732 05:D359: D4 10        	pei	<L31+size_0
  1733 05:D35B: D4 0E        	pei	<L31+object_0+2
  1734 05:D35D: D4 0C        	pei	<L31+object_0
  1735 05:D35F: D4 07        	pei	<L32+pnew_1+2
  1736 05:D361: D4 05        	pei	<L32+pnew_1
  1737 05:D363: 22 xx xx xx  	jsl	~~memcpy
  1738                        ;
  1739                        ;	return pnew;
  1740                        	.line	147
  1741 05:D367: A6 07        	ldx	<L32+pnew_1+2
  1742 05:D369: A5 05        	lda	<L32+pnew_1
  1743                        L34:
  1744 05:D36B: A8           	tay
  1745 05:D36C: A5 0A        	lda	<L31+2
  1746 05:D36E: 85 10        	sta	<L31+2+6
  1747 05:D370: A5 09        	lda	<L31+1
  1748 05:D372: 85 0F        	sta	<L31+1+6
  1749 05:D374: 2B           	pld
  1750 05:D375: 3B           	tsc
  Mon Sep 27 2021  9:39                                                Page 34


  1751 05:D376: 18           	clc
  1752 05:D377: 69 0E 00     	adc	#L31+6
  1753 05:D37A: 1B           	tcs
  1754 05:D37B: 98           	tya
  1755 05:D37C: 6B           	rtl
  1756                        ;}
  1757                        	.line	148
  1758                        	.endblock	148
  1759             00000008   L31	equ	8
  1760             00000005   L32	equ	5
  1761 05:D37D:              	ends
  1762                        	efunc
  1763                        	.endfunc	148,5,8
  1764                        	.line	148
  1765                        ;
  1766                        ;HANDLE k_mem_allocate_dynamic_heap(UINT size)
  1767                        ;{
  1768                        	.line	150
  1769                        	.line	151
  1770                        	MEMMAN
  1771                        	xdef	~~k_mem_allocate_dynamic_heap
  1772                        	func
  1773                        	.function	151
  1774                        ~~k_mem_allocate_dynamic_heap:
  1775                        	longa	on
  1776                        	longi	on
  1777 05:D37D: 3B           	tsc
  1778 05:D37E: 38           	sec
  1779 05:D37F: E9 00 00     	sbc	#L35
  1780 05:D382: 1B           	tcs
  1781 05:D383: 0B           	phd
  1782 05:D384: 5B           	tcd
  1783             00000004   size_0	set	4
  1784                        	.block	151
  1785                        ;	return NULL;
  1786                        	.sym	size,4,16,6,16
  1787                        	.line	152
  1788 05:D385: A9 00 00     	lda	#$0
  1789 05:D388: AA           	tax
  1790 05:D389: A9 00 00     	lda	#$0
  1791                        L38:
  1792 05:D38C: A8           	tay
  1793 05:D38D: A5 02        	lda	<L35+2
  1794 05:D38F: 85 04        	sta	<L35+2+2
  1795 05:D391: A5 01        	lda	<L35+1
  1796 05:D393: 85 03        	sta	<L35+1+2
  1797 05:D395: 2B           	pld
  1798 05:D396: 3B           	tsc
  1799 05:D397: 18           	clc
  1800 05:D398: 69 02 00     	adc	#L35+2
  1801 05:D39B: 1B           	tcs
  1802 05:D39C: 98           	tya
  1803 05:D39D: 6B           	rtl
  1804                        ;}
  1805                        	.line	153
  1806                        	.endblock	153
  1807             00000000   L35	equ	0
  1808             00000001   L36	equ	1
  Mon Sep 27 2021  9:39                                                Page 35


  1809 05:D39E:              	ends
  1810                        	efunc
  1811                        	.endfunc	153,1,0
  1812                        	.line	153
  1813                        ;
  1814                        ;VOID k_mem_deallocate_dynamic_heap(HANDLE handle)
  1815                        ;{
  1816                        	.line	155
  1817                        	.line	156
  1818                        	MEMMAN
  1819                        	xdef	~~k_mem_deallocate_dynamic_heap
  1820                        	func
  1821                        	.function	156
  1822                        ~~k_mem_deallocate_dynamic_heap:
  1823                        	longa	on
  1824                        	longi	on
  1825 05:D39E: 3B           	tsc
  1826 05:D39F: 38           	sec
  1827 05:D3A0: E9 00 00     	sbc	#L39
  1828 05:D3A3: 1B           	tcs
  1829 05:D3A4: 0B           	phd
  1830 05:D3A5: 5B           	tcd
  1831             00000004   handle_0	set	4
  1832                        	.block	156
  1833                        ;
  1834                        ;}
  1835                        	.sym	handle,4,129,6,32
  1836                        	.line	158
  1837                        L42:
  1838 05:D3A6: A5 02        	lda	<L39+2
  1839 05:D3A8: 85 06        	sta	<L39+2+4
  1840 05:D3AA: A5 01        	lda	<L39+1
  1841 05:D3AC: 85 05        	sta	<L39+1+4
  1842 05:D3AE: 2B           	pld
  1843 05:D3AF: 3B           	tsc
  1844 05:D3B0: 18           	clc
  1845 05:D3B1: 69 04 00     	adc	#L39+4
  1846 05:D3B4: 1B           	tcs
  1847 05:D3B5: 6B           	rtl
  1848                        	.endblock	158
  1849             00000000   L39	equ	0
  1850             00000001   L40	equ	1
  1851 05:D3B6:              	ends
  1852                        	efunc
  1853                        	.endfunc	158,1,0
  1854                        	.line	158
  1855                        ;
  1856                        ;LPVOID k_mem_lock_handle(HANDLE handle)
  1857                        ;{
  1858                        	.line	160
  1859                        	.line	161
  1860                        	MEMMAN
  1861                        	xdef	~~k_mem_lock_handle
  1862                        	func
  1863                        	.function	161
  1864                        ~~k_mem_lock_handle:
  1865                        	longa	on
  1866                        	longi	on
  Mon Sep 27 2021  9:39                                                Page 36


  1867 05:D3B6: 3B           	tsc
  1868 05:D3B7: 38           	sec
  1869 05:D3B8: E9 00 00     	sbc	#L43
  1870 05:D3BB: 1B           	tcs
  1871 05:D3BC: 0B           	phd
  1872 05:D3BD: 5B           	tcd
  1873             00000004   handle_0	set	4
  1874                        	.block	161
  1875                        ;	return NULL;
  1876                        	.sym	handle,4,129,6,32
  1877                        	.line	162
  1878 05:D3BE: A9 00 00     	lda	#$0
  1879 05:D3C1: AA           	tax
  1880 05:D3C2: A9 00 00     	lda	#$0
  1881                        L46:
  1882 05:D3C5: A8           	tay
  1883 05:D3C6: A5 02        	lda	<L43+2
  1884 05:D3C8: 85 06        	sta	<L43+2+4
  1885 05:D3CA: A5 01        	lda	<L43+1
  1886 05:D3CC: 85 05        	sta	<L43+1+4
  1887 05:D3CE: 2B           	pld
  1888 05:D3CF: 3B           	tsc
  1889 05:D3D0: 18           	clc
  1890 05:D3D1: 69 04 00     	adc	#L43+4
  1891 05:D3D4: 1B           	tcs
  1892 05:D3D5: 98           	tya
  1893 05:D3D6: 6B           	rtl
  1894                        ;}
  1895                        	.line	163
  1896                        	.endblock	163
  1897             00000000   L43	equ	0
  1898             00000001   L44	equ	1
  1899 05:D3D7:              	ends
  1900                        	efunc
  1901                        	.endfunc	163,1,0
  1902                        	.line	163
  1903                        ;
  1904                        ;VOID k_mem_unlock_handle(HANDLE handle)
  1905                        ;{
  1906                        	.line	165
  1907                        	.line	166
  1908                        	MEMMAN
  1909                        	xdef	~~k_mem_unlock_handle
  1910                        	func
  1911                        	.function	166
  1912                        ~~k_mem_unlock_handle:
  1913                        	longa	on
  1914                        	longi	on
  1915 05:D3D7: 3B           	tsc
  1916 05:D3D8: 38           	sec
  1917 05:D3D9: E9 00 00     	sbc	#L47
  1918 05:D3DC: 1B           	tcs
  1919 05:D3DD: 0B           	phd
  1920 05:D3DE: 5B           	tcd
  1921             00000004   handle_0	set	4
  1922                        	.block	166
  1923                        ;
  1924                        ;}
  Mon Sep 27 2021  9:39                                                Page 37


  1925                        	.sym	handle,4,129,6,32
  1926                        	.line	168
  1927                        L50:
  1928 05:D3DF: A5 02        	lda	<L47+2
  1929 05:D3E1: 85 06        	sta	<L47+2+4
  1930 05:D3E3: A5 01        	lda	<L47+1
  1931 05:D3E5: 85 05        	sta	<L47+1+4
  1932 05:D3E7: 2B           	pld
  1933 05:D3E8: 3B           	tsc
  1934 05:D3E9: 18           	clc
  1935 05:D3EA: 69 04 00     	adc	#L47+4
  1936 05:D3ED: 1B           	tcs
  1937 05:D3EE: 6B           	rtl
  1938                        	.endblock	168
  1939             00000000   L47	equ	0
  1940             00000001   L48	equ	1
  1941 05:D3EF:              	ends
  1942                        	efunc
  1943                        	.endfunc	168,1,0
  1944                        	.line	168
  1945                        ;
  1946                        ;HANDLE k_mem_load_segment(HANDLE handle)
  1947                        ;{
  1948                        	.line	170
  1949                        	.line	171
  1950                        	MEMMAN
  1951                        	xdef	~~k_mem_load_segment
  1952                        	func
  1953                        	.function	171
  1954                        ~~k_mem_load_segment:
  1955                        	longa	on
  1956                        	longi	on
  1957 05:D3EF: 3B           	tsc
  1958 05:D3F0: 38           	sec
  1959 05:D3F1: E9 00 00     	sbc	#L51
  1960 05:D3F4: 1B           	tcs
  1961 05:D3F5: 0B           	phd
  1962 05:D3F6: 5B           	tcd
  1963             00000004   handle_0	set	4
  1964                        	.block	171
  1965                        ;	return NULL;
  1966                        	.sym	handle,4,129,6,32
  1967                        	.line	172
  1968 05:D3F7: A9 00 00     	lda	#$0
  1969 05:D3FA: AA           	tax
  1970 05:D3FB: A9 00 00     	lda	#$0
  1971                        L54:
  1972 05:D3FE: A8           	tay
  1973 05:D3FF: A5 02        	lda	<L51+2
  1974 05:D401: 85 06        	sta	<L51+2+4
  1975 05:D403: A5 01        	lda	<L51+1
  1976 05:D405: 85 05        	sta	<L51+1+4
  1977 05:D407: 2B           	pld
  1978 05:D408: 3B           	tsc
  1979 05:D409: 18           	clc
  1980 05:D40A: 69 04 00     	adc	#L51+4
  1981 05:D40D: 1B           	tcs
  1982 05:D40E: 98           	tya
  Mon Sep 27 2021  9:39                                                Page 38


  1983 05:D40F: 6B           	rtl
  1984                        ;}
  1985                        	.line	173
  1986                        	.endblock	173
  1987             00000000   L51	equ	0
  1988             00000001   L52	equ	1
  1989 05:D410:              	ends
  1990                        	efunc
  1991                        	.endfunc	173,1,0
  1992                        	.line	173
  1993                        ;LPVOID k_mem_lock_segment(HANDLE handle)
  1994                        ;{
  1995                        	.line	174
  1996                        	.line	175
  1997                        	MEMMAN
  1998                        	xdef	~~k_mem_lock_segment
  1999                        	func
  2000                        	.function	175
  2001                        ~~k_mem_lock_segment:
  2002                        	longa	on
  2003                        	longi	on
  2004 05:D410: 3B           	tsc
  2005 05:D411: 38           	sec
  2006 05:D412: E9 00 00     	sbc	#L55
  2007 05:D415: 1B           	tcs
  2008 05:D416: 0B           	phd
  2009 05:D417: 5B           	tcd
  2010             00000004   handle_0	set	4
  2011                        	.block	175
  2012                        ;	return NULL;
  2013                        	.sym	handle,4,129,6,32
  2014                        	.line	176
  2015 05:D418: A9 00 00     	lda	#$0
  2016 05:D41B: AA           	tax
  2017 05:D41C: A9 00 00     	lda	#$0
  2018                        L58:
  2019 05:D41F: A8           	tay
  2020 05:D420: A5 02        	lda	<L55+2
  2021 05:D422: 85 06        	sta	<L55+2+4
  2022 05:D424: A5 01        	lda	<L55+1
  2023 05:D426: 85 05        	sta	<L55+1+4
  2024 05:D428: 2B           	pld
  2025 05:D429: 3B           	tsc
  2026 05:D42A: 18           	clc
  2027 05:D42B: 69 04 00     	adc	#L55+4
  2028 05:D42E: 1B           	tcs
  2029 05:D42F: 98           	tya
  2030 05:D430: 6B           	rtl
  2031                        ;}
  2032                        	.line	177
  2033                        	.endblock	177
  2034             00000000   L55	equ	0
  2035             00000001   L56	equ	1
  2036 05:D431:              	ends
  2037                        	efunc
  2038                        	.endfunc	177,1,0
  2039                        	.line	177
  2040                        ;BOOL k_mem_unlock_segment(HANDLE handle)
  Mon Sep 27 2021  9:39                                                Page 39


  2041                        ;{
  2042                        	.line	178
  2043                        	.line	179
  2044                        	MEMMAN
  2045                        	xdef	~~k_mem_unlock_segment
  2046                        	func
  2047                        	.function	179
  2048                        ~~k_mem_unlock_segment:
  2049                        	longa	on
  2050                        	longi	on
  2051 05:D431: 3B           	tsc
  2052 05:D432: 38           	sec
  2053 05:D433: E9 00 00     	sbc	#L59
  2054 05:D436: 1B           	tcs
  2055 05:D437: 0B           	phd
  2056 05:D438: 5B           	tcd
  2057             00000004   handle_0	set	4
  2058                        	.block	179
  2059                        ;	return FALSE;
  2060                        	.sym	handle,4,129,6,32
  2061                        	.line	180
  2062 05:D439: A9 00 00     	lda	#$0
  2063                        L62:
  2064 05:D43C: A8           	tay
  2065 05:D43D: A5 02        	lda	<L59+2
  2066 05:D43F: 85 06        	sta	<L59+2+4
  2067 05:D441: A5 01        	lda	<L59+1
  2068 05:D443: 85 05        	sta	<L59+1+4
  2069 05:D445: 2B           	pld
  2070 05:D446: 3B           	tsc
  2071 05:D447: 18           	clc
  2072 05:D448: 69 04 00     	adc	#L59+4
  2073 05:D44B: 1B           	tcs
  2074 05:D44C: 98           	tya
  2075 05:D44D: 6B           	rtl
  2076                        ;}
  2077                        	.line	181
  2078                        	.endblock	181
  2079             00000000   L59	equ	0
  2080             00000001   L60	equ	1
  2081 05:D44E:              	ends
  2082                        	efunc
  2083                        	.endfunc	181,1,0
  2084                        	.line	181
  2085                        ;
  2086                        ;VOID k_mem_unload_segment(LPVOID segment)
  2087                        ;{
  2088                        	.line	183
  2089                        	.line	184
  2090                        	MEMMAN
  2091                        	xdef	~~k_mem_unload_segment
  2092                        	func
  2093                        	.function	184
  2094                        ~~k_mem_unload_segment:
  2095                        	longa	on
  2096                        	longi	on
  2097 05:D44E: 3B           	tsc
  2098 05:D44F: 38           	sec
  Mon Sep 27 2021  9:39                                                Page 40


  2099 05:D450: E9 00 00     	sbc	#L63
  2100 05:D453: 1B           	tcs
  2101 05:D454: 0B           	phd
  2102 05:D455: 5B           	tcd
  2103             00000004   segment_0	set	4
  2104                        	.block	184
  2105                        ;	return ;
  2106                        	.sym	segment,4,129,6,32
  2107                        	.line	185
  2108                        L66:
  2109 05:D456: A5 02        	lda	<L63+2
  2110 05:D458: 85 06        	sta	<L63+2+4
  2111 05:D45A: A5 01        	lda	<L63+1
  2112 05:D45C: 85 05        	sta	<L63+1+4
  2113 05:D45E: 2B           	pld
  2114 05:D45F: 3B           	tsc
  2115 05:D460: 18           	clc
  2116 05:D461: 69 04 00     	adc	#L63+4
  2117 05:D464: 1B           	tcs
  2118 05:D465: 6B           	rtl
  2119                        ;}
  2120                        	.line	186
  2121                        	.endblock	186
  2122             00000000   L63	equ	0
  2123             00000001   L64	equ	1
  2124 05:D466:              	ends
  2125                        	efunc
  2126                        	.endfunc	186,1,0
  2127                        	.line	186
  2128                        ;
  2129                        ;LPVOID k_mem_get_segment_info(HANDLE handle)
  2130                        ;{
  2131                        	.line	188
  2132                        	.line	189
  2133                        	MEMMAN
  2134                        	xdef	~~k_mem_get_segment_info
  2135                        	func
  2136                        	.function	189
  2137                        ~~k_mem_get_segment_info:
  2138                        	longa	on
  2139                        	longi	on
  2140 05:D466: 3B           	tsc
  2141 05:D467: 38           	sec
  2142 05:D468: E9 00 00     	sbc	#L67
  2143 05:D46B: 1B           	tcs
  2144 05:D46C: 0B           	phd
  2145 05:D46D: 5B           	tcd
  2146             00000004   handle_0	set	4
  2147                        	.block	189
  2148                        ;	return NULL;
  2149                        	.sym	handle,4,129,6,32
  2150                        	.line	190
  2151 05:D46E: A9 00 00     	lda	#$0
  2152 05:D471: AA           	tax
  2153 05:D472: A9 00 00     	lda	#$0
  2154                        L70:
  2155 05:D475: A8           	tay
  2156 05:D476: A5 02        	lda	<L67+2
  Mon Sep 27 2021  9:39                                                Page 41


  2157 05:D478: 85 06        	sta	<L67+2+4
  2158 05:D47A: A5 01        	lda	<L67+1
  2159 05:D47C: 85 05        	sta	<L67+1+4
  2160 05:D47E: 2B           	pld
  2161 05:D47F: 3B           	tsc
  2162 05:D480: 18           	clc
  2163 05:D481: 69 04 00     	adc	#L67+4
  2164 05:D484: 1B           	tcs
  2165 05:D485: 98           	tya
  2166 05:D486: 6B           	rtl
  2167                        ;}
  2168                        	.line	191
  2169                        	.endblock	191
  2170             00000000   L67	equ	0
  2171             00000001   L68	equ	1
  2172 05:D487:              	ends
  2173                        	efunc
  2174                        	.endfunc	191,1,0
  2175                        	.line	191
  2176                        ;
  2177                        ;LPVOID k_mem_allocate_heap(ULONG size)
  2178                        ;{
  2179                        	.line	193
  2180                        	.line	194
  2181                        	MEMMAN
  2182                        	xdef	~~k_mem_allocate_heap
  2183                        	func
  2184                        	.function	194
  2185                        ~~k_mem_allocate_heap:
  2186                        	longa	on
  2187                        	longi	on
  2188 05:D487: 3B           	tsc
  2189 05:D488: 38           	sec
  2190 05:D489: E9 0A 00     	sbc	#L71
  2191 05:D48C: 1B           	tcs
  2192 05:D48D: 0B           	phd
  2193 05:D48E: 5B           	tcd
  2194             00000004   size_0	set	4
  2195                        	.block	194
  2196                        ;	int i = 0;
  2197                        ;	LPVOID p = NULL;
  2198                        ;
  2199                        ;
  2200                        ;	//if(size == 48)
  2201                        ;		//k_debug_long("**** k_mem_allocate_heap
                    :size:",size);
  2202                        ;
  2203                        ;	if(size)
  2204             00000000   i_1	set	0
  2205             00000002   p_1	set	2
  2206                        	.sym	i,0,5,1,16
  2207                        	.sym	p,2,129,1,32
  2208                        	.sym	size,4,18,6,32
  2209 05:D48F: 64 05        	stz	<L72+i_1
  2210 05:D491: 64 07        	stz	<L72+p_1
  2211 05:D493: 64 09        	stz	<L72+p_1+2
  2212                        	.line	202
  2213                        ;	{
  Mon Sep 27 2021  9:39                                                Page 42


  2214 05:D495: A5 0E        	lda	<L71+size_0
  2215 05:D497: 05 10        	ora	<L71+size_0+2
  2216 05:D499: D0 03        	bne	L74
  2217 05:D49B: 82 74 00     	brl	L10019
  2218                        L74:
  2219                        	.line	203
  2220                        ;		_current_allocation+=size;
  2221                        	.line	204
  2222 05:D49E: 18           	clc
  2223 05:D49F: AD xx xx     	lda	|~~_current_allocation
  2224 05:D4A2: 65 0E        	adc	<L71+size_0
  2225 05:D4A4: 8D xx xx     	sta	|~~_current_allocation
  2226 05:D4A7: AD xx xx     	lda	|~~_current_allocation+2
  2227 05:D4AA: 65 10        	adc	<L71+size_0+2
  2228 05:D4AC: 8D xx xx     	sta	|~~_current_allocation+2
  2229                        ;		//k_debug_long("    pool:",_current_allo
                    cation);
  2230                        ;
  2231                        ;		/*
  2232                        ;		if(size == 4)
  2233                        ;		{
  2234                        ;			k_debug_integer("**** k_mem_allo
                    cate_heap::possible wrong size allocation ****",size);
  2235                        ;		}
  2236                        ;		*/
  2237                        ;		k_lock_irq();
  2238                        	.line	213
  2239 05:D4AF: 22 xx xx xx  	jsl	~~k_lock_irq
  2240                        ;		/*
  2241                        ;		p = umm_malloc((size_t)(size+sizeof(UINT
                    )));
  2242                        ;		*((UINT*)p) = size;
  2243                        ;		((LPSTR)p)+=sizeof(UINT);
  2244                        ;		*/
  2245                        ;		p = umm_malloc((ULONG)(size+sizeof(ALLOC
                    ATIONHEADER)));
  2246                        	.line	219
  2247 05:D4B3: 18           	clc
  2248 05:D4B4: A9 0A 00     	lda	#$a
  2249 05:D4B7: 65 0E        	adc	<L71+size_0
  2250 05:D4B9: 85 01        	sta	<R0
  2251 05:D4BB: A9 00 00     	lda	#$0
  2252 05:D4BE: 65 10        	adc	<L71+size_0+2
  2253 05:D4C0: 85 03        	sta	<R0+2
  2254 05:D4C2: D4 03        	pei	<R0+2
  2255 05:D4C4: D4 01        	pei	<R0
  2256 05:D4C6: 22 xx xx xx  	jsl	~~umm_malloc
  2257 05:D4CA: 85 07        	sta	<L72+p_1
  2258 05:D4CC: 86 09        	stx	<L72+p_1+2
  2259                        ;		//k_debug_pointer("k_mem_allocate_heap:b
                    lock:",p);
  2260                        ;
  2261                        ;		((PALLOCATIONHEADER)p)->user 	= 0xFF;
  2262                        	.line	222
  2263 05:D4CE: E2 20        	sep	#$20
  2264                        	longa	off
  2265 05:D4D0: A9 FF        	lda	#$ff
  2266 05:D4D2: 87 07        	sta	[<L72+p_1]
  Mon Sep 27 2021  9:39                                                Page 43


  2267 05:D4D4: C2 20        	rep	#$20
  2268                        	longa	on
  2269                        ;		((PALLOCATIONHEADER)p)->attr 	= MEM_AT
                    TR_LOCKED;
  2270                        	.line	223
  2271 05:D4D6: E2 20        	sep	#$20
  2272                        	longa	off
  2273 05:D4D8: A9 01        	lda	#$1
  2274 05:D4DA: A0 01 00     	ldy	#$1
  2275 05:D4DD: 97 07        	sta	[<L72+p_1],Y
  2276 05:D4DF: C2 20        	rep	#$20
  2277                        	longa	on
  2278                        ;		((PALLOCATIONHEADER)p)->virtual = NULL;
  2279                        	.line	224
  2280 05:D4E1: A9 00 00     	lda	#$0
  2281 05:D4E4: A0 06 00     	ldy	#$6
  2282 05:D4E7: 97 07        	sta	[<L72+p_1],Y
  2283 05:D4E9: A9 00 00     	lda	#$0
  2284 05:D4EC: A0 08 00     	ldy	#$8
  2285 05:D4EF: 97 07        	sta	[<L72+p_1],Y
  2286                        ;		((PALLOCATIONHEADER)p)->size    = (ULONG
                    )size;
  2287                        	.line	225
  2288 05:D4F1: A5 0E        	lda	<L71+size_0
  2289 05:D4F3: A0 02 00     	ldy	#$2
  2290 05:D4F6: 97 07        	sta	[<L72+p_1],Y
  2291 05:D4F8: A5 10        	lda	<L71+size_0+2
  2292 05:D4FA: A0 04 00     	ldy	#$4
  2293 05:D4FD: 97 07        	sta	[<L72+p_1],Y
  2294                        ;
  2295                        ;		((LPSTR)p)+=sizeof(ALLOCATIONHEADER);
  2296                        	.line	227
  2297 05:D4FF: 18           	clc
  2298 05:D500: A9 0A 00     	lda	#$a
  2299 05:D503: 65 07        	adc	<L72+p_1
  2300 05:D505: 85 07        	sta	<L72+p_1
  2301 05:D507: 90 02        	bcc	L75
  2302 05:D509: E6 09        	inc	<L72+p_1+2
  2303                        L75:
  2304                        ;
  2305                        ;
  2306                        ;		k_unlock_irq();
  2307                        	.line	230
  2308 05:D50B: 22 xx xx xx  	jsl	~~k_unlock_irq
  2309                        ;		//p = umm_poison_malloc((size_t)size);
  2310                        ;		//k_debug_pointer("k_mem_allocate_heap:"
                    ,p);
  2311                        ;	}
  2312                        	.line	233
  2313                        ;	else
  2314 05:D50F: 82 1D 00     	brl	L10020
  2315                        L10019:
  2316                        ;	{
  2317                        	.line	235
  2318                        ;		k_heap_integrity_check();
  2319                        	.line	236
  2320 05:D512: 22 00 D0 05  	jsl	~~k_heap_integrity_check
  2321                        ;		k_exec_throw_exception(k_mem_allocate_he
  Mon Sep 27 2021  9:39                                                Page 44


                    ap,0x00010002,"Memory allocation of size zero",-1);
  2322                        	.line	237
  2323 05:D516: F4 FF FF     	pea	#<$ffffffff
  2324 05:D519: F4 xx xx     	pea	#^L30
  2325 05:D51C: F4 xx xx     	pea	#<L30
  2326 05:D51F: F4 01 00     	pea	#^$10002
  2327 05:D522: F4 02 00     	pea	#<$10002
  2328 05:D525: F4 05 00     	pea	#^~~k_mem_allocate_heap
  2329 05:D528: F4 87 D4     	pea	#<~~k_mem_allocate_heap
  2330 05:D52B: 22 xx xx xx  	jsl	~~k_exec_throw_exception
  2331                        ;	}
  2332                        	.line	238
  2333                        L10020:
  2334                        ;	if(!p)
  2335                        	.line	239
  2336                        ;	{
  2337 05:D52F: A5 07        	lda	<L72+p_1
  2338 05:D531: 05 09        	ora	<L72+p_1+2
  2339 05:D533: F0 03        	beq	L76
  2340 05:D535: 82 1A 00     	brl	L10021
  2341                        L76:
  2342                        	.line	240
  2343                        ;		k_debug_pointer("k_mem_allocate_heap::ex
                    it:",p);
  2344                        	.line	241
  2345 05:D538: D4 09        	pei	<L72+p_1+2
  2346 05:D53A: D4 07        	pei	<L72+p_1
  2347 05:D53C: F4 xx xx     	pea	#^L30+31
  2348 05:D53F: F4 xx xx     	pea	#<L30+31
  2349 05:D542: 22 xx xx xx  	jsl	~~k_debug_pointer
  2350                        ;		k_debug_integer("k_mem_allocate_heap::si
                    ze:",size);
  2351                        	.line	242
  2352 05:D546: D4 0E        	pei	<L71+size_0
  2353 05:D548: F4 xx xx     	pea	#^L30+58
  2354 05:D54B: F4 xx xx     	pea	#<L30+58
  2355 05:D54E: 22 xx xx xx  	jsl	~~k_debug_integer
  2356                        ;	}
  2357                        	.line	243
  2358                        ;
  2359                        ;	//umm_integrity_check();
  2360                        ;	/*
  2361                        ;	for(i=0;i<size;i++)
  2362                        ;	{
  2363                        ;		((LPCHAR)p)[i] = 0;
  2364                        ;	}
  2365                        ;	*/
  2366                        ;	return p;
  2367                        L10021:
  2368                        	.line	252
  2369 05:D552: A6 09        	ldx	<L72+p_1+2
  2370 05:D554: A5 07        	lda	<L72+p_1
  2371                        L77:
  2372 05:D556: A8           	tay
  2373 05:D557: A5 0C        	lda	<L71+2
  2374 05:D559: 85 10        	sta	<L71+2+4
  2375 05:D55B: A5 0B        	lda	<L71+1
  2376 05:D55D: 85 0F        	sta	<L71+1+4
  Mon Sep 27 2021  9:39                                                Page 45


  2377 05:D55F: 2B           	pld
  2378 05:D560: 3B           	tsc
  2379 05:D561: 18           	clc
  2380 05:D562: 69 0E 00     	adc	#L71+4
  2381 05:D565: 1B           	tcs
  2382 05:D566: 98           	tya
  2383 05:D567: 6B           	rtl
  2384                        ;}
  2385                        	.line	253
  2386                        	.endblock	253
  2387             0000000A   L71	equ	10
  2388             00000005   L72	equ	5
  2389 05:D568:              	ends
  2390                        	efunc
  2391                        	.endfunc	253,5,10
  2392                        	.line	253
  2393                        	data
  2394                        L30:
  2395 00:0079: 4D 65 6D 6F  	db	$4D,$65,$6D,$6F,$72,$79,$20,$61,$6C,$6C,
                    $6F,$63,$61,$74,$69
       00:007D: 72 79 20 61 
       00:0081: 6C 6C 6F 63 
       00:0085: 61 74 69 
  2396 00:0088: 6F 6E 20 6F  	db	$6F,$6E,$20,$6F,$66,$20,$73,$69,$7A,$65,
                    $20,$7A,$65,$72,$6F
       00:008C: 66 20 73 69 
       00:0090: 7A 65 20 7A 
       00:0094: 65 72 6F 
  2397 00:0097: 00 6B 5F 6D  	db	$00,$6B,$5F,$6D,$65,$6D,$5F,$61,$6C,$6C,
                    $6F,$63,$61,$74,$65
       00:009B: 65 6D 5F 61 
       00:009F: 6C 6C 6F 63 
       00:00A3: 61 74 65 
  2398 00:00A6: 5F 68 65 61  	db	$5F,$68,$65,$61,$70,$3A,$3A,$65,$78,$69,
                    $74,$3A,$00,$6B,$5F
       00:00AA: 70 3A 3A 65 
       00:00AE: 78 69 74 3A 
       00:00B2: 00 6B 5F 
  2399 00:00B5: 6D 65 6D 5F  	db	$6D,$65,$6D,$5F,$61,$6C,$6C,$6F,$63,$61,
                    $74,$65,$5F,$68,$65
       00:00B9: 61 6C 6C 6F 
       00:00BD: 63 61 74 65 
       00:00C1: 5F 68 65 
  2400 00:00C4: 61 70 3A 3A  	db	$61,$70,$3A,$3A,$73,$69,$7A,$65,$3A,$00
       00:00C8: 73 69 7A 65 
       00:00CC: 3A 00 
  2401 00:00CE:              	ends
  2402                        ;
  2403                        ;VOID k_mem_deallocate_heap(LPVOID lpBuffer)
  2404                        ;{
  2405                        	.line	255
  2406                        	.line	256
  2407                        	MEMMAN
  2408                        	xdef	~~k_mem_deallocate_heap
  2409                        	func
  2410                        	.function	256
  2411                        ~~k_mem_deallocate_heap:
  2412                        	longa	on
  Mon Sep 27 2021  9:39                                                Page 46


  2413                        	longi	on
  2414 05:D568: 3B           	tsc
  2415 05:D569: 38           	sec
  2416 05:D56A: E9 08 00     	sbc	#L79
  2417 05:D56D: 1B           	tcs
  2418 05:D56E: 0B           	phd
  2419 05:D56F: 5B           	tcd
  2420             00000004   lpBuffer_0	set	4
  2421                        	.block	256
  2422                        ;	ULONG size = 0;
  2423                        ;
  2424                        ;	//k_debug_pointer("k_mem_deallocate_heap:",lpBuf
                    fer);
  2425                        ;	if(lpBuffer!=NULL)
  2426             00000000   size_1	set	0
  2427                        	.sym	size,0,18,1,32
  2428                        	.sym	lpBuffer,4,129,6,32
  2429 05:D570: 64 05        	stz	<L80+size_1
  2430 05:D572: 64 07        	stz	<L80+size_1+2
  2431                        	.line	260
  2432                        ;	{
  2433 05:D574: A5 0C        	lda	<L79+lpBuffer_0
  2434 05:D576: 05 0E        	ora	<L79+lpBuffer_0+2
  2435 05:D578: D0 03        	bne	L82
  2436 05:D57A: 82 49 00     	brl	L10022
  2437                        L82:
  2438                        	.line	261
  2439                        ;		k_lock_irq();
  2440                        	.line	262
  2441 05:D57D: 22 xx xx xx  	jsl	~~k_lock_irq
  2442                        ;
  2443                        ;		lpBuffer = (LPVOID)(((ULONG)lpBuffer) - 
                    sizeof(ALLOCATIONHEADER));
  2444                        	.line	264
  2445 05:D581: 18           	clc
  2446 05:D582: A9 F6 FF     	lda	#$fff6
  2447 05:D585: 65 0C        	adc	<L79+lpBuffer_0
  2448 05:D587: 85 01        	sta	<R0
  2449 05:D589: A9 FF FF     	lda	#$ffff
  2450 05:D58C: 65 0E        	adc	<L79+lpBuffer_0+2
  2451 05:D58E: 85 03        	sta	<R0+2
  2452 05:D590: A5 01        	lda	<R0
  2453 05:D592: 85 0C        	sta	<L79+lpBuffer_0
  2454 05:D594: A5 03        	lda	<R0+2
  2455 05:D596: 85 0E        	sta	<L79+lpBuffer_0+2
  2456                        ;		size = ((PALLOCATIONHEADER)lpBuffer)->si
                    ze;
  2457                        	.line	265
  2458 05:D598: A0 02 00     	ldy	#$2
  2459 05:D59B: B7 0C        	lda	[<L79+lpBuffer_0],Y
  2460 05:D59D: 85 05        	sta	<L80+size_1
  2461 05:D59F: A0 04 00     	ldy	#$4
  2462 05:D5A2: B7 0C        	lda	[<L79+lpBuffer_0],Y
  2463 05:D5A4: 85 07        	sta	<L80+size_1+2
  2464                        ;		//k_debug_long("k_mem_deallocate_heap:si
                    ze:",size);
  2465                        ;		_current_allocation-=size;
  2466                        	.line	267
  Mon Sep 27 2021  9:39                                                Page 47


  2467 05:D5A6: 38           	sec
  2468 05:D5A7: AD xx xx     	lda	|~~_current_allocation
  2469 05:D5AA: E5 05        	sbc	<L80+size_1
  2470 05:D5AC: 8D xx xx     	sta	|~~_current_allocation
  2471 05:D5AF: AD xx xx     	lda	|~~_current_allocation+2
  2472 05:D5B2: E5 07        	sbc	<L80+size_1+2
  2473 05:D5B4: 8D xx xx     	sta	|~~_current_allocation+2
  2474                        ;		//k_debug_long("deallocate:", size );
  2475                        ;		//k_debug_long("    pool:",_current_allo
                    cation);
  2476                        ;		/*
  2477                        ;		lpBuffer = (LPVOID)(((ULONG)lpBuffer) - 
                    sizeof(UINT));
  2478                        ;		size = *((UINT*)lpBuffer);
  2479                        ;		k_debug_integer("deallocate:", size );
  2480                        ;		_current_allocation-=size;
  2481                        ;		k_debug_long("    pool:",_current_alloca
                    tion);
  2482                        ;		*/
  2483                        ;		umm_free(lpBuffer);
  2484                        	.line	277
  2485 05:D5B7: D4 0E        	pei	<L79+lpBuffer_0+2
  2486 05:D5B9: D4 0C        	pei	<L79+lpBuffer_0
  2487 05:D5BB: 22 xx xx xx  	jsl	~~umm_free
  2488                        ;
  2489                        ;		k_unlock_irq();
  2490                        	.line	279
  2491 05:D5BF: 22 xx xx xx  	jsl	~~k_unlock_irq
  2492                        ;		//umm_poison_free(lpBuffer);
  2493                        ;	}
  2494                        	.line	281
  2495                        ;	else
  2496 05:D5C3: 82 19 00     	brl	L10023
  2497                        L10022:
  2498                        ;		k_exec_throw_exception(k_mem_deallocate_
                    heap,0x00010001,"Memory deallocation of NULL reference",-1);
  2499                        	.line	283
  2500 05:D5C6: F4 FF FF     	pea	#<$ffffffff
  2501 05:D5C9: F4 xx xx     	pea	#^L78
  2502 05:D5CC: F4 xx xx     	pea	#<L78
  2503 05:D5CF: F4 01 00     	pea	#^$10001
  2504 05:D5D2: F4 01 00     	pea	#<$10001
  2505 05:D5D5: F4 05 00     	pea	#^~~k_mem_deallocate_heap
  2506 05:D5D8: F4 68 D5     	pea	#<~~k_mem_deallocate_heap
  2507 05:D5DB: 22 xx xx xx  	jsl	~~k_exec_throw_exception
  2508                        L10023:
  2509                        ;
  2510                        ;}
  2511                        	.line	285
  2512                        L83:
  2513 05:D5DF: A5 0A        	lda	<L79+2
  2514 05:D5E1: 85 0E        	sta	<L79+2+4
  2515 05:D5E3: A5 09        	lda	<L79+1
  2516 05:D5E5: 85 0D        	sta	<L79+1+4
  2517 05:D5E7: 2B           	pld
  2518 05:D5E8: 3B           	tsc
  2519 05:D5E9: 18           	clc
  2520 05:D5EA: 69 0C 00     	adc	#L79+4
  Mon Sep 27 2021  9:39                                                Page 48


  2521 05:D5ED: 1B           	tcs
  2522 05:D5EE: 6B           	rtl
  2523                        	.endblock	285
  2524             00000008   L79	equ	8
  2525             00000005   L80	equ	5
  2526 05:D5EF:              	ends
  2527                        	efunc
  2528                        	.endfunc	285,5,8
  2529                        	.line	285
  2530                        	data
  2531                        L78:
  2532 00:00CE: 4D 65 6D 6F  	db	$4D,$65,$6D,$6F,$72,$79,$20,$64,$65,$61,
                    $6C,$6C,$6F,$63,$61
       00:00D2: 72 79 20 64 
       00:00D6: 65 61 6C 6C 
       00:00DA: 6F 63 61 
  2533 00:00DD: 74 69 6F 6E  	db	$74,$69,$6F,$6E,$20,$6F,$66,$20,$4E,$55,
                    $4C,$4C,$20,$72,$65
       00:00E1: 20 6F 66 20 
       00:00E5: 4E 55 4C 4C 
       00:00E9: 20 72 65 
  2534 00:00EC: 66 65 72 65  	db	$66,$65,$72,$65,$6E,$63,$65,$00
       00:00F0: 6E 63 65 00 
  2535 00:00F4:              	ends
  2536                        ;
  2537                        ;LPVOID k_calloc(UINT num,UINT bytes)
  2538                        ;{
  2539                        	.line	287
  2540                        	.line	288
  2541                        	MEMMAN
  2542                        	xdef	~~k_calloc
  2543                        	func
  2544                        	.function	288
  2545                        ~~k_calloc:
  2546                        	longa	on
  2547                        	longi	on
  2548 05:D5EF: 3B           	tsc
  2549 05:D5F0: 38           	sec
  2550 05:D5F1: E9 08 00     	sbc	#L85
  2551 05:D5F4: 1B           	tcs
  2552 05:D5F5: 0B           	phd
  2553 05:D5F6: 5B           	tcd
  2554             00000004   num_0	set	4
  2555             00000006   bytes_0	set	6
  2556                        	.block	288
  2557                        ;	return k_mem_allocate_heap(num * bytes);
  2558                        	.sym	num,4,16,6,16
  2559                        	.sym	bytes,6,16,6,16
  2560                        	.line	289
  2561 05:D5F7: A5 0C        	lda	<L85+num_0
  2562 05:D5F9: A6 0E        	ldx	<L85+bytes_0
  2563                        	xref	~~~mul
  2564 05:D5FB: 22 xx xx xx  	jsl	~~~mul
  2565 05:D5FF: 85 01        	sta	<R0
  2566 05:D601: A5 01        	lda	<R0
  2567 05:D603: 85 01        	sta	<R0
  2568 05:D605: 64 03        	stz	<R0+2
  2569 05:D607: D4 03        	pei	<R0+2
  Mon Sep 27 2021  9:39                                                Page 49


  2570 05:D609: D4 01        	pei	<R0
  2571 05:D60B: 22 87 D4 05  	jsl	~~k_mem_allocate_heap
  2572 05:D60F: 85 05        	sta	<R1
  2573 05:D611: 86 07        	stx	<R1+2
  2574 05:D613: A6 07        	ldx	<R1+2
  2575 05:D615: A5 05        	lda	<R1
  2576                        L88:
  2577 05:D617: A8           	tay
  2578 05:D618: A5 0A        	lda	<L85+2
  2579 05:D61A: 85 0E        	sta	<L85+2+4
  2580 05:D61C: A5 09        	lda	<L85+1
  2581 05:D61E: 85 0D        	sta	<L85+1+4
  2582 05:D620: 2B           	pld
  2583 05:D621: 3B           	tsc
  2584 05:D622: 18           	clc
  2585 05:D623: 69 0C 00     	adc	#L85+4
  2586 05:D626: 1B           	tcs
  2587 05:D627: 98           	tya
  2588 05:D628: 6B           	rtl
  2589                        ;}
  2590                        	.line	290
  2591                        	.endblock	290
  2592             00000008   L85	equ	8
  2593             00000009   L86	equ	9
  2594 05:D629:              	ends
  2595                        	efunc
  2596                        	.endfunc	290,9,8
  2597                        	.line	290
  2598                        ;
  2599                        ;VOID k_free(LPVOID ptr)
  2600                        ;{
  2601                        	.line	292
  2602                        	.line	293
  2603                        	MEMMAN
  2604                        	xdef	~~k_free
  2605                        	func
  2606                        	.function	293
  2607                        ~~k_free:
  2608                        	longa	on
  2609                        	longi	on
  2610 05:D629: 3B           	tsc
  2611 05:D62A: 38           	sec
  2612 05:D62B: E9 00 00     	sbc	#L89
  2613 05:D62E: 1B           	tcs
  2614 05:D62F: 0B           	phd
  2615 05:D630: 5B           	tcd
  2616             00000004   ptr_0	set	4
  2617                        	.block	293
  2618                        ;	k_mem_deallocate_heap(ptr);
  2619                        	.sym	ptr,4,129,6,32
  2620                        	.line	294
  2621 05:D631: D4 06        	pei	<L89+ptr_0+2
  2622 05:D633: D4 04        	pei	<L89+ptr_0
  2623 05:D635: 22 68 D5 05  	jsl	~~k_mem_deallocate_heap
  2624                        ;}
  2625                        	.line	295
  2626                        L92:
  2627 05:D639: A5 02        	lda	<L89+2
  Mon Sep 27 2021  9:39                                                Page 50


  2628 05:D63B: 85 06        	sta	<L89+2+4
  2629 05:D63D: A5 01        	lda	<L89+1
  2630 05:D63F: 85 05        	sta	<L89+1+4
  2631 05:D641: 2B           	pld
  2632 05:D642: 3B           	tsc
  2633 05:D643: 18           	clc
  2634 05:D644: 69 04 00     	adc	#L89+4
  2635 05:D647: 1B           	tcs
  2636 05:D648: 6B           	rtl
  2637                        	.endblock	295
  2638             00000000   L89	equ	0
  2639             00000001   L90	equ	1
  2640 05:D649:              	ends
  2641                        	efunc
  2642                        	.endfunc	295,1,0
  2643                        	.line	295
  2644                        ;
  2645                        ;PIPCPORT k_get_ipc_port(LPCSTR portName)
  2646                        ;{
  2647                        	.line	297
  2648                        	.line	298
  2649                        	MEMMAN
  2650                        	xdef	~~k_get_ipc_port
  2651                        	func
  2652                        	.function	298
  2653                        ~~k_get_ipc_port:
  2654                        	longa	on
  2655                        	longi	on
  2656 05:D649: 3B           	tsc
  2657 05:D64A: 38           	sec
  2658 05:D64B: E9 11 00     	sbc	#L93
  2659 05:D64E: 1B           	tcs
  2660 05:D64F: 0B           	phd
  2661 05:D650: 5B           	tcd
  2662             00000004   portName_0	set	4
  2663                        	.block	298
  2664                        ;	PIPCPORT p = NULL;
  2665                        ;	PFXNODE node = NULL;
  2666                        ;
  2667                        ;	BYTE type = 0;
  2668                        ;	//k_debug_strings("k_get_ipc_port::enter:",(LPST
                    R)portName);
  2669                        ;
  2670                        ;	if(portName!=NULL && portName[0] == '@')
  2671             00000000   p_1	set	0
  2672             00000004   node_1	set	4
  2673             00000008   type_1	set	8
  2674                        	.sym	p,0,138,1,32,56
  2675                        	.sym	node,4,138,1,32,5
  2676                        	.sym	type,8,14,1,8
  2677                        	.sym	portName,4,142,6,32
  2678 05:D651: 64 09        	stz	<L94+p_1
  2679 05:D653: 64 0B        	stz	<L94+p_1+2
  2680 05:D655: 64 0D        	stz	<L94+node_1
  2681 05:D657: 64 0F        	stz	<L94+node_1+2
  2682 05:D659: E2 20        	sep	#$20
  2683                        	longa	off
  2684 05:D65B: 64 11        	stz	<L94+type_1
  Mon Sep 27 2021  9:39                                                Page 51


  2685 05:D65D: C2 20        	rep	#$20
  2686                        	longa	on
  2687                        	.line	305
  2688                        ;	{
  2689 05:D65F: A5 15        	lda	<L93+portName_0
  2690 05:D661: 05 17        	ora	<L93+portName_0+2
  2691 05:D663: D0 03        	bne	L96
  2692 05:D665: 82 56 01     	brl	L10024
  2693                        L96:
  2694 05:D668: E2 20        	sep	#$20
  2695                        	longa	off
  2696 05:D66A: A7 15        	lda	[<L93+portName_0]
  2697 05:D66C: C9 40        	cmp	#<$40
  2698 05:D66E: C2 20        	rep	#$20
  2699                        	longa	on
  2700 05:D670: F0 03        	beq	L97
  2701 05:D672: 82 49 01     	brl	L10024
  2702                        L97:
  2703                        	.line	306
  2704                        ;		//k_debug_string("k_get_ipc_port::system
                    (@)\r\n");
  2705                        ;		if(strcmp(portName,IPC_SYS_DEBUG) == 0)
  2706                        	.line	308
  2707                        ;		{
  2708 05:D675: F4 xx xx     	pea	#^L84
  2709 05:D678: F4 xx xx     	pea	#<L84
  2710 05:D67B: D4 17        	pei	<L93+portName_0+2
  2711 05:D67D: D4 15        	pei	<L93+portName_0
  2712 05:D67F: 22 xx xx xx  	jsl	~~strcmp
  2713 05:D683: AA           	tax
  2714 05:D684: F0 03        	beq	L98
  2715 05:D686: 82 09 00     	brl	L10025
  2716                        L98:
  2717                        	.line	309
  2718                        ;			type = IPC_PORT_DEBUG;
  2719                        	.line	310
  2720 05:D689: E2 20        	sep	#$20
  2721                        	longa	off
  2722 05:D68B: 64 11        	stz	<L94+type_1
  2723 05:D68D: C2 20        	rep	#$20
  2724                        	longa	on
  2725                        ;		}
  2726                        	.line	311
  2727                        ;		else if(strcmp(portName,IPC_SYS_DEBUG_HD
                    ) == 0)
  2728 05:D68F: 82 98 00     	brl	L10026
  2729                        L10025:
  2730                        	.line	312
  2731                        ;		{
  2732 05:D692: F4 xx xx     	pea	#^L84+7
  2733 05:D695: F4 xx xx     	pea	#<L84+7
  2734 05:D698: D4 17        	pei	<L93+portName_0+2
  2735 05:D69A: D4 15        	pei	<L93+portName_0
  2736 05:D69C: 22 xx xx xx  	jsl	~~strcmp
  2737 05:D6A0: AA           	tax
  2738 05:D6A1: F0 03        	beq	L99
  2739 05:D6A3: 82 0B 00     	brl	L10027
  2740                        L99:
  Mon Sep 27 2021  9:39                                                Page 52


  2741                        	.line	313
  2742                        ;			type = IPC_PORT_DEBUG_HD;
  2743                        	.line	314
  2744 05:D6A6: E2 20        	sep	#$20
  2745                        	longa	off
  2746 05:D6A8: A9 05        	lda	#$5
  2747 05:D6AA: 85 11        	sta	<L94+type_1
  2748 05:D6AC: C2 20        	rep	#$20
  2749                        	longa	on
  2750                        ;		}
  2751                        	.line	315
  2752                        ;		else if(strcmp(portName,IPC_SYS_KEYBOARD
                    ) == 0)
  2753 05:D6AE: 82 79 00     	brl	L10028
  2754                        L10027:
  2755                        	.line	316
  2756                        ;		{
  2757 05:D6B1: F4 xx xx     	pea	#^L84+16
  2758 05:D6B4: F4 xx xx     	pea	#<L84+16
  2759 05:D6B7: D4 17        	pei	<L93+portName_0+2
  2760 05:D6B9: D4 15        	pei	<L93+portName_0
  2761 05:D6BB: 22 xx xx xx  	jsl	~~strcmp
  2762 05:D6BF: AA           	tax
  2763 05:D6C0: F0 03        	beq	L100
  2764 05:D6C2: 82 0B 00     	brl	L10029
  2765                        L100:
  2766                        	.line	317
  2767                        ;			type = IPC_PORT_KEYBOARD;
  2768                        	.line	318
  2769 05:D6C5: E2 20        	sep	#$20
  2770                        	longa	off
  2771 05:D6C7: A9 02        	lda	#$2
  2772 05:D6C9: 85 11        	sta	<L94+type_1
  2773 05:D6CB: C2 20        	rep	#$20
  2774                        	longa	on
  2775                        ;		}
  2776                        	.line	319
  2777                        ;		else if(strcmp(portName,IPC_SYS_MOUSE) =
                    = 0)
  2778 05:D6CD: 82 5A 00     	brl	L10030
  2779                        L10029:
  2780                        	.line	320
  2781                        ;		{
  2782 05:D6D0: F4 xx xx     	pea	#^L84+26
  2783 05:D6D3: F4 xx xx     	pea	#<L84+26
  2784 05:D6D6: D4 17        	pei	<L93+portName_0+2
  2785 05:D6D8: D4 15        	pei	<L93+portName_0
  2786 05:D6DA: 22 xx xx xx  	jsl	~~strcmp
  2787 05:D6DE: AA           	tax
  2788 05:D6DF: F0 03        	beq	L101
  2789 05:D6E1: 82 0B 00     	brl	L10031
  2790                        L101:
  2791                        	.line	321
  2792                        ;			type = IPC_PORT_MOUSE;
  2793                        	.line	322
  2794 05:D6E4: E2 20        	sep	#$20
  2795                        	longa	off
  2796 05:D6E6: A9 03        	lda	#$3
  Mon Sep 27 2021  9:39                                                Page 53


  2797 05:D6E8: 85 11        	sta	<L94+type_1
  2798 05:D6EA: C2 20        	rep	#$20
  2799                        	longa	on
  2800                        ;		}
  2801                        	.line	323
  2802                        ;		else if(strcmp(portName,IPC_SYS_CLIPBOAR
                    D) == 0)
  2803 05:D6EC: 82 3B 00     	brl	L10032
  2804                        L10031:
  2805                        	.line	324
  2806                        ;		{
  2807 05:D6EF: F4 xx xx     	pea	#^L84+33
  2808 05:D6F2: F4 xx xx     	pea	#<L84+33
  2809 05:D6F5: D4 17        	pei	<L93+portName_0+2
  2810 05:D6F7: D4 15        	pei	<L93+portName_0
  2811 05:D6F9: 22 xx xx xx  	jsl	~~strcmp
  2812 05:D6FD: AA           	tax
  2813 05:D6FE: F0 03        	beq	L102
  2814 05:D700: 82 0B 00     	brl	L10033
  2815                        L102:
  2816                        	.line	325
  2817                        ;			type = IPC_PORT_CLIPBOARD;
  2818                        	.line	326
  2819 05:D703: E2 20        	sep	#$20
  2820                        	longa	off
  2821 05:D705: A9 04        	lda	#$4
  2822 05:D707: 85 11        	sta	<L94+type_1
  2823 05:D709: C2 20        	rep	#$20
  2824                        	longa	on
  2825                        ;		}
  2826                        	.line	327
  2827                        ;		else if(strcmp(portName,IPC_SYS_ASYNCPRO
                    C) == 0)
  2828 05:D70B: 82 1C 00     	brl	L10034
  2829                        L10033:
  2830                        	.line	328
  2831                        ;		{
  2832 05:D70E: F4 xx xx     	pea	#^L84+44
  2833 05:D711: F4 xx xx     	pea	#<L84+44
  2834 05:D714: D4 17        	pei	<L93+portName_0+2
  2835 05:D716: D4 15        	pei	<L93+portName_0
  2836 05:D718: 22 xx xx xx  	jsl	~~strcmp
  2837 05:D71C: AA           	tax
  2838 05:D71D: F0 03        	beq	L103
  2839 05:D71F: 82 08 00     	brl	L10035
  2840                        L103:
  2841                        	.line	329
  2842                        ;			type = IPC_PORT_PROC;
  2843                        	.line	330
  2844 05:D722: E2 20        	sep	#$20
  2845                        	longa	off
  2846 05:D724: A9 07        	lda	#$7
  2847 05:D726: 85 11        	sta	<L94+type_1
  2848 05:D728: C2 20        	rep	#$20
  2849                        	longa	on
  2850                        ;		}
  2851                        	.line	331
  2852                        ;
  Mon Sep 27 2021  9:39                                                Page 54


  2853                        ;		if(_ipc_global_ports[type] == NULL)
  2854                        L10035:
  2855                        L10034:
  2856                        L10032:
  2857                        L10030:
  2858                        L10028:
  2859                        L10026:
  2860                        	.line	333
  2861                        ;		{
  2862 05:D72A: A5 11        	lda	<L94+type_1
  2863 05:D72C: 29 FF 00     	and	#$ff
  2864 05:D72F: 85 05        	sta	<R1
  2865 05:D731: A5 05        	lda	<R1
  2866 05:D733: 0A           	asl	A
  2867 05:D734: 0A           	asl	A
  2868 05:D735: 85 01        	sta	<R0
  2869 05:D737: 18           	clc
  2870 05:D738: A9 xx xx     	lda	#<~~_ipc_global_ports
  2871 05:D73B: 65 01        	adc	<R0
  2872 05:D73D: 85 05        	sta	<R1
  2873 05:D73F: B2 05        	lda	(<R1)
  2874 05:D741: A0 02 00     	ldy	#$2
  2875 05:D744: 11 05        	ora	(<R1),Y
  2876 05:D746: F0 03        	beq	L104
  2877 05:D748: 82 2F 00     	brl	L10036
  2878                        L104:
  2879                        	.line	334
  2880                        ;			//k_debug_strings("k_get_ipc_por
                    t::system:allocate:",(LPSTR)portName);
  2881                        ;			_ipc_global_ports[type] = k_open
                    _ipc_port(portName,0xFF);
  2882                        	.line	336
  2883 05:D74B: A5 11        	lda	<L94+type_1
  2884 05:D74D: 29 FF 00     	and	#$ff
  2885 05:D750: 85 05        	sta	<R1
  2886 05:D752: A5 05        	lda	<R1
  2887 05:D754: 0A           	asl	A
  2888 05:D755: 0A           	asl	A
  2889 05:D756: 85 01        	sta	<R0
  2890 05:D758: 18           	clc
  2891 05:D759: A9 xx xx     	lda	#<~~_ipc_global_ports
  2892 05:D75C: 65 01        	adc	<R0
  2893 05:D75E: 85 05        	sta	<R1
  2894 05:D760: F4 FF 00     	pea	#<$ff
  2895 05:D763: D4 17        	pei	<L93+portName_0+2
  2896 05:D765: D4 15        	pei	<L93+portName_0
  2897 05:D767: 22 FF D7 05  	jsl	~~k_open_ipc_port
  2898 05:D76B: 85 01        	sta	<R0
  2899 05:D76D: 86 03        	stx	<R0+2
  2900 05:D76F: A5 01        	lda	<R0
  2901 05:D771: 92 05        	sta	(<R1)
  2902 05:D773: A5 03        	lda	<R0+2
  2903 05:D775: A0 02 00     	ldy	#$2
  2904 05:D778: 91 05        	sta	(<R1),Y
  2905                        ;		}
  2906                        	.line	337
  2907                        ;
  2908                        ;		if(_ipc_global_ports[type] != NULL)
  Mon Sep 27 2021  9:39                                                Page 55


  2909                        L10036:
  2910                        	.line	339
  2911                        ;		{
  2912 05:D77A: A5 11        	lda	<L94+type_1
  2913 05:D77C: 29 FF 00     	and	#$ff
  2914 05:D77F: 85 05        	sta	<R1
  2915 05:D781: A5 05        	lda	<R1
  2916 05:D783: 0A           	asl	A
  2917 05:D784: 0A           	asl	A
  2918 05:D785: 85 01        	sta	<R0
  2919 05:D787: 18           	clc
  2920 05:D788: A9 xx xx     	lda	#<~~_ipc_global_ports
  2921 05:D78B: 65 01        	adc	<R0
  2922 05:D78D: 85 05        	sta	<R1
  2923 05:D78F: B2 05        	lda	(<R1)
  2924 05:D791: A0 02 00     	ldy	#$2
  2925 05:D794: 11 05        	ora	(<R1),Y
  2926 05:D796: D0 03        	bne	L105
  2927 05:D798: 82 20 00     	brl	L10037
  2928                        L105:
  2929                        	.line	340
  2930                        ;			//k_debug_strings("k_get_ipc_por
                    t::system(@):found:",(LPSTR)portName);
  2931                        ;			p = _ipc_global_ports[type];
  2932                        	.line	342
  2933 05:D79B: A5 11        	lda	<L94+type_1
  2934 05:D79D: 29 FF 00     	and	#$ff
  2935 05:D7A0: 85 05        	sta	<R1
  2936 05:D7A2: A5 05        	lda	<R1
  2937 05:D7A4: 0A           	asl	A
  2938 05:D7A5: 0A           	asl	A
  2939 05:D7A6: 85 01        	sta	<R0
  2940 05:D7A8: 18           	clc
  2941 05:D7A9: A9 xx xx     	lda	#<~~_ipc_global_ports
  2942 05:D7AC: 65 01        	adc	<R0
  2943 05:D7AE: 85 05        	sta	<R1
  2944 05:D7B0: B2 05        	lda	(<R1)
  2945 05:D7B2: 85 09        	sta	<L94+p_1
  2946 05:D7B4: A0 02 00     	ldy	#$2
  2947 05:D7B7: B1 05        	lda	(<R1),Y
  2948 05:D7B9: 85 0B        	sta	<L94+p_1+2
  2949                        ;		}
  2950                        	.line	343
  2951                        ;	}
  2952                        L10037:
  2953                        	.line	344
  2954                        ;	else
  2955 05:D7BB: 82 2B 00     	brl	L10038
  2956                        L10024:
  2957                        ;	{
  2958                        	.line	346
  2959                        ;		//k_debug_strings("k_get_ipc_port::user:
                    ",(LPCHAR)portName);
  2960                        ;		node = k_nodelist_searchByName(_ipc_port
                    s,portName);
  2961                        	.line	348
  2962 05:D7BE: D4 17        	pei	<L93+portName_0+2
  2963 05:D7C0: D4 15        	pei	<L93+portName_0
  Mon Sep 27 2021  9:39                                                Page 56


  2964 05:D7C2: AD xx xx     	lda	|~~_ipc_ports+2
  2965 05:D7C5: 48           	pha
  2966 05:D7C6: AD xx xx     	lda	|~~_ipc_ports
  2967 05:D7C9: 48           	pha
  2968 05:D7CA: 22 xx xx xx  	jsl	~~k_nodelist_searchByName
  2969 05:D7CE: 85 0D        	sta	<L94+node_1
  2970 05:D7D0: 86 0F        	stx	<L94+node_1+2
  2971                        ;		if(node!=NULL)
  2972                        	.line	349
  2973                        ;		{
  2974 05:D7D2: A5 0D        	lda	<L94+node_1
  2975 05:D7D4: 05 0F        	ora	<L94+node_1+2
  2976 05:D7D6: D0 03        	bne	L106
  2977 05:D7D8: 82 0E 00     	brl	L10039
  2978                        L106:
  2979                        	.line	350
  2980                        ;			p = (PIPCPORT)node->data;
  2981                        	.line	351
  2982 05:D7DB: A0 02 00     	ldy	#$2
  2983 05:D7DE: B7 0D        	lda	[<L94+node_1],Y
  2984 05:D7E0: 85 09        	sta	<L94+p_1
  2985 05:D7E2: A0 04 00     	ldy	#$4
  2986 05:D7E5: B7 0D        	lda	[<L94+node_1],Y
  2987 05:D7E7: 85 0B        	sta	<L94+p_1+2
  2988                        ;		}
  2989                        	.line	352
  2990                        ;	}
  2991                        L10039:
  2992                        	.line	353
  2993                        L10038:
  2994                        ;
  2995                        ;	//k_debug_pointer("k_get_ipc_port::exit:",p);
  2996                        ;
  2997                        ;	return p;
  2998                        	.line	357
  2999 05:D7E9: A6 0B        	ldx	<L94+p_1+2
  3000 05:D7EB: A5 09        	lda	<L94+p_1
  3001                        L107:
  3002 05:D7ED: A8           	tay
  3003 05:D7EE: A5 13        	lda	<L93+2
  3004 05:D7F0: 85 17        	sta	<L93+2+4
  3005 05:D7F2: A5 12        	lda	<L93+1
  3006 05:D7F4: 85 16        	sta	<L93+1+4
  3007 05:D7F6: 2B           	pld
  3008 05:D7F7: 3B           	tsc
  3009 05:D7F8: 18           	clc
  3010 05:D7F9: 69 15 00     	adc	#L93+4
  3011 05:D7FC: 1B           	tcs
  3012 05:D7FD: 98           	tya
  3013 05:D7FE: 6B           	rtl
  3014                        ;}
  3015                        	.line	358
  3016                        	.endblock	358
  3017             00000011   L93	equ	17
  3018             00000009   L94	equ	9
  3019 05:D7FF:              	ends
  3020                        	efunc
  3021                        	.endfunc	358,9,17
  Mon Sep 27 2021  9:39                                                Page 57


  3022                        	.line	358
  3023                        	data
  3024                        L84:
  3025 00:00F4: 40 64 65 62  	db	$40,$64,$65,$62,$75,$67,$00,$40,$64,$65,
                    $62,$75,$67,$68,$64
       00:00F8: 75 67 00 40 
       00:00FC: 64 65 62 75 
       00:0100: 67 68 64 
  3026 00:0103: 00 40 6B 65  	db	$00,$40,$6B,$65,$79,$62,$6F,$61,$72,$64,
                    $00,$40,$6D,$6F,$75
       00:0107: 79 62 6F 61 
       00:010B: 72 64 00 40 
       00:010F: 6D 6F 75 
  3027 00:0112: 73 65 00 40  	db	$73,$65,$00,$40,$63,$6C,$69,$70,$62,$6F,
                    $61,$72,$64,$00,$40
       00:0116: 63 6C 69 70 
       00:011A: 62 6F 61 72 
       00:011E: 64 00 40 
  3028 00:0121: 70 72 6F 63  	db	$70,$72,$6F,$63,$00
       00:0125: 00 
  3029 00:0126:              	ends
  3030                        ;
  3031                        ;PIPCPORT k_open_ipc_port(LPCSTR portName,BYTE typ
                    e)
  3032                        ;{
  3033                        	.line	360
  3034                        	.line	361
  3035                        	MEMMAN
  3036                        	xdef	~~k_open_ipc_port
  3037                        	func
  3038                        	.function	361
  3039                        ~~k_open_ipc_port:
  3040                        	longa	on
  3041                        	longi	on
  3042 05:D7FF: 3B           	tsc
  3043 05:D800: 38           	sec
  3044 05:D801: E9 08 00     	sbc	#L109
  3045 05:D804: 1B           	tcs
  3046 05:D805: 0B           	phd
  3047 05:D806: 5B           	tcd
  3048             00000004   portName_0	set	4
  3049             00000008   type_0	set	8
  3050                        	.block	361
  3051                        ;	PIPCPORT port = NULL;
  3052                        ;
  3053                        ;	//k_debug_string("k_open_ipc_port::enter...\r\n"
                    );
  3054                        ;
  3055                        ;	if(portName!=NULL)
  3056             00000000   port_1	set	0
  3057                        	.sym	port,0,138,1,32,56
  3058                        	.sym	portName,4,142,6,32
  3059                        	.sym	type,8,14,6,8
  3060 05:D807: 64 05        	stz	<L110+port_1
  3061 05:D809: 64 07        	stz	<L110+port_1+2
  3062                        	.line	366
  3063                        ;	{
  3064 05:D80B: A5 0C        	lda	<L109+portName_0
  Mon Sep 27 2021  9:39                                                Page 58


  3065 05:D80D: 05 0E        	ora	<L109+portName_0+2
  3066 05:D80F: D0 03        	bne	L112
  3067 05:D811: 82 20 01     	brl	L10040
  3068                        L112:
  3069                        	.line	367
  3070                        ;		if(portName[0]=='@' && type!=0xFF)
  3071                        	.line	368
  3072                        ;			return NULL;
  3073 05:D814: E2 20        	sep	#$20
  3074                        	longa	off
  3075 05:D816: A7 0C        	lda	[<L109+portName_0]
  3076 05:D818: C9 40        	cmp	#<$40
  3077 05:D81A: C2 20        	rep	#$20
  3078                        	longa	on
  3079 05:D81C: F0 03        	beq	L113
  3080 05:D81E: 82 26 00     	brl	L10041
  3081                        L113:
  3082 05:D821: E2 20        	sep	#$20
  3083                        	longa	off
  3084 05:D823: A5 10        	lda	<L109+type_0
  3085 05:D825: C9 FF        	cmp	#<$ff
  3086 05:D827: C2 20        	rep	#$20
  3087                        	longa	on
  3088 05:D829: D0 03        	bne	L114
  3089 05:D82B: 82 19 00     	brl	L10041
  3090                        L114:
  3091                        	.line	369
  3092 05:D82E: A9 00 00     	lda	#$0
  3093 05:D831: AA           	tax
  3094 05:D832: A9 00 00     	lda	#$0
  3095                        L115:
  3096 05:D835: A8           	tay
  3097 05:D836: A5 0A        	lda	<L109+2
  3098 05:D838: 85 10        	sta	<L109+2+6
  3099 05:D83A: A5 09        	lda	<L109+1
  3100 05:D83C: 85 0F        	sta	<L109+1+6
  3101 05:D83E: 2B           	pld
  3102 05:D83F: 3B           	tsc
  3103 05:D840: 18           	clc
  3104 05:D841: 69 0E 00     	adc	#L109+6
  3105 05:D844: 1B           	tcs
  3106 05:D845: 98           	tya
  3107 05:D846: 6B           	rtl
  3108                        ;
  3109                        ;		//k_debug_strings("k_open_ipc_port::name
                    :",(LPCHAR)portName);
  3110                        ;
  3111                        ;		port = k_mem_allocate_heap(sizeof(IPCPOR
                    T));
  3112                        L10041:
  3113                        	.line	373
  3114 05:D847: F4 00 00     	pea	#^$12
  3115 05:D84A: F4 12 00     	pea	#<$12
  3116 05:D84D: 22 87 D4 05  	jsl	~~k_mem_allocate_heap
  3117 05:D851: 85 05        	sta	<L110+port_1
  3118 05:D853: 86 07        	stx	<L110+port_1+2
  3119                        ;		if(port!=NULL)
  3120                        	.line	374
  Mon Sep 27 2021  9:39                                                Page 59


  3121                        ;		{
  3122 05:D855: A5 05        	lda	<L110+port_1
  3123 05:D857: 05 07        	ora	<L110+port_1+2
  3124 05:D859: D0 03        	bne	L116
  3125 05:D85B: 82 D6 00     	brl	L10042
  3126                        L116:
  3127                        	.line	375
  3128                        ;			port->id = (ULONG)port;
  3129                        	.line	376
  3130 05:D85E: A5 05        	lda	<L110+port_1
  3131 05:D860: 87 05        	sta	[<L110+port_1]
  3132 05:D862: A5 07        	lda	<L110+port_1+2
  3133 05:D864: A0 02 00     	ldy	#$2
  3134 05:D867: 97 05        	sta	[<L110+port_1],Y
  3135                        ;			port->type = type;
  3136                        	.line	377
  3137 05:D869: E2 20        	sep	#$20
  3138                        	longa	off
  3139 05:D86B: A5 10        	lda	<L109+type_0
  3140 05:D86D: A0 04 00     	ldy	#$4
  3141 05:D870: 97 05        	sta	[<L110+port_1],Y
  3142 05:D872: C2 20        	rep	#$20
  3143                        	longa	on
  3144                        ;			port->name = k_fxstring_new((LPC
                    HAR)portName,32);
  3145                        	.line	378
  3146 05:D874: F4 20 00     	pea	#<$20
  3147 05:D877: D4 0E        	pei	<L109+portName_0+2
  3148 05:D879: D4 0C        	pei	<L109+portName_0
  3149 05:D87B: 22 xx xx xx  	jsl	~~k_fxstring_new
  3150 05:D87F: 85 01        	sta	<R0
  3151 05:D881: 86 03        	stx	<R0+2
  3152 05:D883: A5 01        	lda	<R0
  3153 05:D885: A0 05 00     	ldy	#$5
  3154 05:D888: 97 05        	sta	[<L110+port_1],Y
  3155 05:D88A: A5 03        	lda	<R0+2
  3156 05:D88C: A0 07 00     	ldy	#$7
  3157 05:D88F: 97 05        	sta	[<L110+port_1],Y
  3158                        ;			port->queue = k_mem_allocate_hea
                    p(sizeof(FXQUEUE));
  3159                        	.line	379
  3160 05:D891: F4 00 00     	pea	#^$a
  3161 05:D894: F4 0A 00     	pea	#<$a
  3162 05:D897: 22 87 D4 05  	jsl	~~k_mem_allocate_heap
  3163 05:D89B: 85 01        	sta	<R0
  3164 05:D89D: 86 03        	stx	<R0+2
  3165 05:D89F: A5 01        	lda	<R0
  3166 05:D8A1: A0 0D 00     	ldy	#$d
  3167 05:D8A4: 97 05        	sta	[<L110+port_1],Y
  3168 05:D8A6: A5 03        	lda	<R0+2
  3169 05:D8A8: A0 0F 00     	ldy	#$f
  3170 05:D8AB: 97 05        	sta	[<L110+port_1],Y
  3171                        ;			if(port->queue!=NULL)
  3172                        	.line	380
  3173                        ;			{
  3174 05:D8AD: A0 0D 00     	ldy	#$d
  3175 05:D8B0: B7 05        	lda	[<L110+port_1],Y
  3176 05:D8B2: A0 0F 00     	ldy	#$f
  Mon Sep 27 2021  9:39                                                Page 60


  3177 05:D8B5: 17 05        	ora	[<L110+port_1],Y
  3178 05:D8B7: D0 03        	bne	L117
  3179 05:D8B9: 82 10 00     	brl	L10043
  3180                        L117:
  3181                        	.line	381
  3182                        ;				k_initialize(port->queue
                    );
  3183                        	.line	382
  3184 05:D8BC: A0 0F 00     	ldy	#$f
  3185 05:D8BF: B7 05        	lda	[<L110+port_1],Y
  3186 05:D8C1: 48           	pha
  3187 05:D8C2: A0 0D 00     	ldy	#$d
  3188 05:D8C5: B7 05        	lda	[<L110+port_1],Y
  3189 05:D8C7: 48           	pha
  3190 05:D8C8: 22 xx xx xx  	jsl	~~k_initialize
  3191                        ;			}
  3192                        	.line	383
  3193                        ;
  3194                        ;			if(_ipc_ports == NULL)
  3195                        L10043:
  3196                        	.line	385
  3197                        ;			{
  3198 05:D8CC: AD xx xx     	lda	|~~_ipc_ports
  3199 05:D8CF: 0D xx xx     	ora	|~~_ipc_ports+2
  3200 05:D8D2: F0 03        	beq	L118
  3201 05:D8D4: 82 16 00     	brl	L10044
  3202                        L118:
  3203                        	.line	386
  3204                        ;				//k_debug_strings("k_ope
                    n_ipc_port::create:","_k_ipc_system_list");
  3205                        ;				_ipc_ports = k_nodelist_
                    allocate_list("_k_ipc_system_list",NULL);
  3206                        	.line	388
  3207 05:D8D7: F4 00 00     	pea	#^$0
  3208 05:D8DA: F4 00 00     	pea	#<$0
  3209 05:D8DD: F4 xx xx     	pea	#^L108
  3210 05:D8E0: F4 xx xx     	pea	#<L108
  3211 05:D8E3: 22 xx xx xx  	jsl	~~k_nodelist_allocate_list
  3212 05:D8E7: 8D xx xx     	sta	|~~_ipc_ports
  3213 05:D8EA: 8E xx xx     	stx	|~~_ipc_ports+2
  3214                        ;			}
  3215                        	.line	389
  3216                        ;
  3217                        ;			if(_ipc_ports!=NULL)
  3218                        L10044:
  3219                        	.line	391
  3220                        ;			{
  3221 05:D8ED: AD xx xx     	lda	|~~_ipc_ports
  3222 05:D8F0: 0D xx xx     	ora	|~~_ipc_ports+2
  3223 05:D8F3: D0 03        	bne	L119
  3224 05:D8F5: 82 3C 00     	brl	L10045
  3225                        L119:
  3226                        	.line	392
  3227                        ;				if(k_enter_critical_sect
                    ion())
  3228                        	.line	393
  3229                        ;				{
  3230 05:D8F8: 22 xx xx xx  	jsl	~~k_enter_critical_section
  Mon Sep 27 2021  9:39                                                Page 61


  3231 05:D8FC: 29 FF 00     	and	#$ff
  3232 05:D8FF: D0 03        	bne	L120
  3233 05:D901: 82 30 00     	brl	L10046
  3234                        L120:
  3235                        	.line	394
  3236                        ;					k_nodelist_addto
                    list(_ipc_ports,type,port->name->buffer,port);
  3237                        	.line	395
  3238 05:D904: D4 07        	pei	<L110+port_1+2
  3239 05:D906: D4 05        	pei	<L110+port_1
  3240 05:D908: A0 05 00     	ldy	#$5
  3241 05:D90B: B7 05        	lda	[<L110+port_1],Y
  3242 05:D90D: 85 01        	sta	<R0
  3243 05:D90F: A0 07 00     	ldy	#$7
  3244 05:D912: B7 05        	lda	[<L110+port_1],Y
  3245 05:D914: 85 03        	sta	<R0+2
  3246 05:D916: A0 06 00     	ldy	#$6
  3247 05:D919: B7 01        	lda	[<R0],Y
  3248 05:D91B: 48           	pha
  3249 05:D91C: A0 04 00     	ldy	#$4
  3250 05:D91F: B7 01        	lda	[<R0],Y
  3251 05:D921: 48           	pha
  3252 05:D922: D4 10        	pei	<L109+type_0
  3253 05:D924: AD xx xx     	lda	|~~_ipc_ports+2
  3254 05:D927: 48           	pha
  3255 05:D928: AD xx xx     	lda	|~~_ipc_ports
  3256 05:D92B: 48           	pha
  3257 05:D92C: 22 xx xx xx  	jsl	~~k_nodelist_addtolist
  3258                        ;
  3259                        ;					k_exit_critical_
                    section();
  3260                        	.line	397
  3261 05:D930: 22 xx xx xx  	jsl	~~k_exit_critical_section
  3262                        ;				}
  3263                        	.line	398
  3264                        ;			}
  3265                        L10046:
  3266                        	.line	399
  3267                        ;
  3268                        ;		}
  3269                        L10045:
  3270                        	.line	401
  3271                        ;	}
  3272                        L10042:
  3273                        	.line	402
  3274                        ;
  3275                        ;	//k_debug_string("k_open_ipc_port::exit...\r\n")
                    ;
  3276                        ;
  3277                        ;	return port;
  3278                        L10040:
  3279                        	.line	406
  3280 05:D934: A6 07        	ldx	<L110+port_1+2
  3281 05:D936: A5 05        	lda	<L110+port_1
  3282 05:D938: 82 FA FE     	brl	L115
  3283                        ;}
  3284                        	.line	407
  3285                        	.endblock	407
  Mon Sep 27 2021  9:39                                                Page 62


  3286             00000008   L109	equ	8
  3287             00000005   L110	equ	5
  3288 05:D93B:              	ends
  3289                        	efunc
  3290                        	.endfunc	407,5,8
  3291                        	.line	407
  3292                        	data
  3293                        L108:
  3294 00:0126: 5F 6B 5F 69  	db	$5F,$6B,$5F,$69,$70,$63,$5F,$73,$79,$73,
                    $74,$65,$6D,$5F,$6C
       00:012A: 70 63 5F 73 
       00:012E: 79 73 74 65 
       00:0132: 6D 5F 6C 
  3295 00:0135: 69 73 74 00  	db	$69,$73,$74,$00
  3296 00:0139:              	ends
  3297                        ;
  3298                        ;VOID k_close_ipc_port(PIPCPORT port)
  3299                        ;{
  3300                        	.line	409
  3301                        	.line	410
  3302                        	MEMMAN
  3303                        	xdef	~~k_close_ipc_port
  3304                        	func
  3305                        	.function	410
  3306                        ~~k_close_ipc_port:
  3307                        	longa	on
  3308                        	longi	on
  3309 05:D93B: 3B           	tsc
  3310 05:D93C: 38           	sec
  3311 05:D93D: E9 0C 00     	sbc	#L122
  3312 05:D940: 1B           	tcs
  3313 05:D941: 0B           	phd
  3314 05:D942: 5B           	tcd
  3315             00000004   port_0	set	4
  3316                        	.block	410
  3317                        ;	PFXNODE node = NULL;
  3318                        ;
  3319                        ;	//k_debug_string("k_close_ipc_port::enter...\r\n
                    ");
  3320                        ;
  3321                        ;	if(port!=NULL && (port->id == (ULONG)port) && po
                    rt->name->buffer[0]!='@')
  3322             00000000   node_1	set	0
  3323                        	.sym	node,0,138,1,32,5
  3324                        	.sym	port,4,138,6,32,56
  3325 05:D943: 64 09        	stz	<L123+node_1
  3326 05:D945: 64 0B        	stz	<L123+node_1+2
  3327                        	.line	415
  3328                        ;	{
  3329 05:D947: A5 10        	lda	<L122+port_0
  3330 05:D949: 05 12        	ora	<L122+port_0+2
  3331 05:D94B: D0 03        	bne	L125
  3332 05:D94D: 82 F0 00     	brl	L10047
  3333                        L125:
  3334 05:D950: A5 10        	lda	<L122+port_0
  3335 05:D952: C7 10        	cmp	[<L122+port_0]
  3336 05:D954: D0 07        	bne	L126
  3337 05:D956: A5 12        	lda	<L122+port_0+2
  Mon Sep 27 2021  9:39                                                Page 63


  3338 05:D958: A0 02 00     	ldy	#$2
  3339 05:D95B: D7 10        	cmp	[<L122+port_0],Y
  3340                        L126:
  3341 05:D95D: F0 03        	beq	L127
  3342 05:D95F: 82 DE 00     	brl	L10047
  3343                        L127:
  3344 05:D962: A0 05 00     	ldy	#$5
  3345 05:D965: B7 10        	lda	[<L122+port_0],Y
  3346 05:D967: 85 01        	sta	<R0
  3347 05:D969: A0 07 00     	ldy	#$7
  3348 05:D96C: B7 10        	lda	[<L122+port_0],Y
  3349 05:D96E: 85 03        	sta	<R0+2
  3350 05:D970: A0 04 00     	ldy	#$4
  3351 05:D973: B7 01        	lda	[<R0],Y
  3352 05:D975: 85 05        	sta	<R1
  3353 05:D977: A0 06 00     	ldy	#$6
  3354 05:D97A: B7 01        	lda	[<R0],Y
  3355 05:D97C: 85 07        	sta	<R1+2
  3356 05:D97E: E2 20        	sep	#$20
  3357                        	longa	off
  3358 05:D980: A7 05        	lda	[<R1]
  3359 05:D982: C9 40        	cmp	#<$40
  3360 05:D984: C2 20        	rep	#$20
  3361                        	longa	on
  3362 05:D986: D0 03        	bne	L128
  3363 05:D988: 82 B5 00     	brl	L10047
  3364                        L128:
  3365                        	.line	416
  3366                        ;		//k_debug_strings("k_close_ipc_port::nam
                    e:",port->name->buffer);
  3367                        ;
  3368                        ;		if(_ipc_ports!=NULL)
  3369                        	.line	419
  3370                        ;		{
  3371 05:D98B: AD xx xx     	lda	|~~_ipc_ports
  3372 05:D98E: 0D xx xx     	ora	|~~_ipc_ports+2
  3373 05:D991: D0 03        	bne	L129
  3374 05:D993: 82 AA 00     	brl	L10048
  3375                        L129:
  3376                        	.line	420
  3377                        ;			node = k_nodelist_searchByName(_
                    ipc_ports,(LPSTR)port->name->buffer);
  3378                        	.line	421
  3379 05:D996: A0 05 00     	ldy	#$5
  3380 05:D999: B7 10        	lda	[<L122+port_0],Y
  3381 05:D99B: 85 01        	sta	<R0
  3382 05:D99D: A0 07 00     	ldy	#$7
  3383 05:D9A0: B7 10        	lda	[<L122+port_0],Y
  3384 05:D9A2: 85 03        	sta	<R0+2
  3385 05:D9A4: A0 06 00     	ldy	#$6
  3386 05:D9A7: B7 01        	lda	[<R0],Y
  3387 05:D9A9: 48           	pha
  3388 05:D9AA: A0 04 00     	ldy	#$4
  3389 05:D9AD: B7 01        	lda	[<R0],Y
  3390 05:D9AF: 48           	pha
  3391 05:D9B0: AD xx xx     	lda	|~~_ipc_ports+2
  3392 05:D9B3: 48           	pha
  3393 05:D9B4: AD xx xx     	lda	|~~_ipc_ports
  Mon Sep 27 2021  9:39                                                Page 64


  3394 05:D9B7: 48           	pha
  3395 05:D9B8: 22 xx xx xx  	jsl	~~k_nodelist_searchByName
  3396 05:D9BC: 85 09        	sta	<L123+node_1
  3397 05:D9BE: 86 0B        	stx	<L123+node_1+2
  3398                        ;			if(node!=NULL)
  3399                        	.line	422
  3400                        ;			{
  3401 05:D9C0: A5 09        	lda	<L123+node_1
  3402 05:D9C2: 05 0B        	ora	<L123+node_1+2
  3403 05:D9C4: D0 03        	bne	L130
  3404 05:D9C6: 82 77 00     	brl	L10049
  3405                        L130:
  3406                        	.line	423
  3407                        ;				k_mem_deallocate_heap( (
                    (PIPCPORT)node->data)->queue);
  3408                        	.line	424
  3409 05:D9C9: A0 02 00     	ldy	#$2
  3410 05:D9CC: B7 09        	lda	[<L123+node_1],Y
  3411 05:D9CE: 85 01        	sta	<R0
  3412 05:D9D0: A0 04 00     	ldy	#$4
  3413 05:D9D3: B7 09        	lda	[<L123+node_1],Y
  3414 05:D9D5: 85 03        	sta	<R0+2
  3415 05:D9D7: A0 0F 00     	ldy	#$f
  3416 05:D9DA: B7 01        	lda	[<R0],Y
  3417 05:D9DC: 48           	pha
  3418 05:D9DD: A0 0D 00     	ldy	#$d
  3419 05:D9E0: B7 01        	lda	[<R0],Y
  3420 05:D9E2: 48           	pha
  3421 05:D9E3: 22 68 D5 05  	jsl	~~k_mem_deallocate_heap
  3422                        ;				k_fxstring_free(((PIPCPO
                    RT)node->data)->name);
  3423                        	.line	425
  3424 05:D9E7: A0 02 00     	ldy	#$2
  3425 05:D9EA: B7 09        	lda	[<L123+node_1],Y
  3426 05:D9EC: 85 01        	sta	<R0
  3427 05:D9EE: A0 04 00     	ldy	#$4
  3428 05:D9F1: B7 09        	lda	[<L123+node_1],Y
  3429 05:D9F3: 85 03        	sta	<R0+2
  3430 05:D9F5: A0 07 00     	ldy	#$7
  3431 05:D9F8: B7 01        	lda	[<R0],Y
  3432 05:D9FA: 48           	pha
  3433 05:D9FB: A0 05 00     	ldy	#$5
  3434 05:D9FE: B7 01        	lda	[<R0],Y
  3435 05:DA00: 48           	pha
  3436 05:DA01: 22 xx xx xx  	jsl	~~k_fxstring_free
  3437                        ;
  3438                        ;				((PIPCPORT)node->data)->
                    id = 0L;
  3439                        	.line	427
  3440 05:DA05: A0 02 00     	ldy	#$2
  3441 05:DA08: B7 09        	lda	[<L123+node_1],Y
  3442 05:DA0A: 85 01        	sta	<R0
  3443 05:DA0C: A0 04 00     	ldy	#$4
  3444 05:DA0F: B7 09        	lda	[<L123+node_1],Y
  3445 05:DA11: 85 03        	sta	<R0+2
  3446 05:DA13: A9 00 00     	lda	#$0
  3447 05:DA16: 87 01        	sta	[<R0]
  3448 05:DA18: A9 00 00     	lda	#$0
  Mon Sep 27 2021  9:39                                                Page 65


  3449 05:DA1B: A0 02 00     	ldy	#$2
  3450 05:DA1E: 97 01        	sta	[<R0],Y
  3451                        ;
  3452                        ;				k_mem_deallocate_heap(no
                    de->data);
  3453                        	.line	429
  3454 05:DA20: A0 04 00     	ldy	#$4
  3455 05:DA23: B7 09        	lda	[<L123+node_1],Y
  3456 05:DA25: 48           	pha
  3457 05:DA26: A0 02 00     	ldy	#$2
  3458 05:DA29: B7 09        	lda	[<L123+node_1],Y
  3459 05:DA2B: 48           	pha
  3460 05:DA2C: 22 68 D5 05  	jsl	~~k_mem_deallocate_heap
  3461                        ;
  3462                        ;				k_nodelist_removefromlis
                    t(_ipc_ports,node);
  3463                        	.line	431
  3464 05:DA30: D4 0B        	pei	<L123+node_1+2
  3465 05:DA32: D4 09        	pei	<L123+node_1
  3466 05:DA34: AD xx xx     	lda	|~~_ipc_ports+2
  3467 05:DA37: 48           	pha
  3468 05:DA38: AD xx xx     	lda	|~~_ipc_ports
  3469 05:DA3B: 48           	pha
  3470 05:DA3C: 22 xx xx xx  	jsl	~~k_nodelist_removefromlist
  3471                        ;			}
  3472                        	.line	432
  3473                        ;		}
  3474                        L10049:
  3475                        	.line	433
  3476                        ;	}
  3477                        L10048:
  3478                        	.line	434
  3479                        ;
  3480                        ;	//k_debug_string("k_close_ipc_port::exit...\r\n"
                    );
  3481                        ;}
  3482                        L10047:
  3483                        	.line	437
  3484                        L131:
  3485 05:DA40: A5 0E        	lda	<L122+2
  3486 05:DA42: 85 12        	sta	<L122+2+4
  3487 05:DA44: A5 0D        	lda	<L122+1
  3488 05:DA46: 85 11        	sta	<L122+1+4
  3489 05:DA48: 2B           	pld
  3490 05:DA49: 3B           	tsc
  3491 05:DA4A: 18           	clc
  3492 05:DA4B: 69 10 00     	adc	#L122+4
  3493 05:DA4E: 1B           	tcs
  3494 05:DA4F: 6B           	rtl
  3495                        	.endblock	437
  3496             0000000C   L122	equ	12
  3497             00000009   L123	equ	9
  3498 05:DA50:              	ends
  3499                        	efunc
  3500                        	.endfunc	437,9,12
  3501                        	.line	437
  3502                        ;
  3503                        ;LPVOID k_read_ipc_port(PIPCPORT port)
  Mon Sep 27 2021  9:39                                                Page 66


  3504                        ;{
  3505                        	.line	439
  3506                        	.line	440
  3507                        	MEMMAN
  3508                        	xdef	~~k_read_ipc_port
  3509                        	func
  3510                        	.function	440
  3511                        ~~k_read_ipc_port:
  3512                        	longa	on
  3513                        	longi	on
  3514 05:DA50: 3B           	tsc
  3515 05:DA51: 38           	sec
  3516 05:DA52: E9 04 00     	sbc	#L132
  3517 05:DA55: 1B           	tcs
  3518 05:DA56: 0B           	phd
  3519 05:DA57: 5B           	tcd
  3520             00000004   port_0	set	4
  3521                        	.block	440
  3522                        ;	LPVOID data = NULL;
  3523                        ;
  3524                        ;	//k_debug_string("k_read_ipc_port::enter...\r\n"
                    );
  3525                        ;	if(port!=NULL && (port->id == (ULONG)port))
  3526             00000000   data_1	set	0
  3527                        	.sym	data,0,129,1,32
  3528                        	.sym	port,4,138,6,32,56
  3529 05:DA58: 64 01        	stz	<L133+data_1
  3530 05:DA5A: 64 03        	stz	<L133+data_1+2
  3531                        	.line	444
  3532                        ;	{
  3533 05:DA5C: A5 08        	lda	<L132+port_0
  3534 05:DA5E: 05 0A        	ora	<L132+port_0+2
  3535 05:DA60: D0 03        	bne	L135
  3536 05:DA62: 82 26 00     	brl	L10050
  3537                        L135:
  3538 05:DA65: A5 08        	lda	<L132+port_0
  3539 05:DA67: C7 08        	cmp	[<L132+port_0]
  3540 05:DA69: D0 07        	bne	L136
  3541 05:DA6B: A5 0A        	lda	<L132+port_0+2
  3542 05:DA6D: A0 02 00     	ldy	#$2
  3543 05:DA70: D7 08        	cmp	[<L132+port_0],Y
  3544                        L136:
  3545 05:DA72: F0 03        	beq	L137
  3546 05:DA74: 82 14 00     	brl	L10050
  3547                        L137:
  3548                        	.line	445
  3549                        ;		data = k_dequeue(port->queue);
  3550                        	.line	446
  3551 05:DA77: A0 0F 00     	ldy	#$f
  3552 05:DA7A: B7 08        	lda	[<L132+port_0],Y
  3553 05:DA7C: 48           	pha
  3554 05:DA7D: A0 0D 00     	ldy	#$d
  3555 05:DA80: B7 08        	lda	[<L132+port_0],Y
  3556 05:DA82: 48           	pha
  3557 05:DA83: 22 xx xx xx  	jsl	~~k_dequeue
  3558 05:DA87: 85 01        	sta	<L133+data_1
  3559 05:DA89: 86 03        	stx	<L133+data_1+2
  3560                        ;	}
  Mon Sep 27 2021  9:39                                                Page 67


  3561                        	.line	447
  3562                        ;	//k_debug_string("k_read_ipc_port::exit...\r\n")
                    ;
  3563                        ;
  3564                        ;	return data;
  3565                        L10050:
  3566                        	.line	450
  3567 05:DA8B: A6 03        	ldx	<L133+data_1+2
  3568 05:DA8D: A5 01        	lda	<L133+data_1
  3569                        L138:
  3570 05:DA8F: A8           	tay
  3571 05:DA90: A5 06        	lda	<L132+2
  3572 05:DA92: 85 0A        	sta	<L132+2+4
  3573 05:DA94: A5 05        	lda	<L132+1
  3574 05:DA96: 85 09        	sta	<L132+1+4
  3575 05:DA98: 2B           	pld
  3576 05:DA99: 3B           	tsc
  3577 05:DA9A: 18           	clc
  3578 05:DA9B: 69 08 00     	adc	#L132+4
  3579 05:DA9E: 1B           	tcs
  3580 05:DA9F: 98           	tya
  3581 05:DAA0: 6B           	rtl
  3582                        ;}
  3583                        	.line	451
  3584                        	.endblock	451
  3585             00000004   L132	equ	4
  3586             00000001   L133	equ	1
  3587 05:DAA1:              	ends
  3588                        	efunc
  3589                        	.endfunc	451,1,4
  3590                        	.line	451
  3591                        ;
  3592                        ;
  3593                        ;LPVOID k_peek_ipc_port(PIPCPORT port)
  3594                        ;{
  3595                        	.line	454
  3596                        	.line	455
  3597                        	MEMMAN
  3598                        	xdef	~~k_peek_ipc_port
  3599                        	func
  3600                        	.function	455
  3601                        ~~k_peek_ipc_port:
  3602                        	longa	on
  3603                        	longi	on
  3604 05:DAA1: 3B           	tsc
  3605 05:DAA2: 38           	sec
  3606 05:DAA3: E9 00 00     	sbc	#L139
  3607 05:DAA6: 1B           	tcs
  3608 05:DAA7: 0B           	phd
  3609 05:DAA8: 5B           	tcd
  3610             00000004   port_0	set	4
  3611                        	.block	455
  3612                        ;	return NULL;
  3613                        	.sym	port,4,138,6,32,56
  3614                        	.line	456
  3615 05:DAA9: A9 00 00     	lda	#$0
  3616 05:DAAC: AA           	tax
  3617 05:DAAD: A9 00 00     	lda	#$0
  Mon Sep 27 2021  9:39                                                Page 68


  3618                        L142:
  3619 05:DAB0: A8           	tay
  3620 05:DAB1: A5 02        	lda	<L139+2
  3621 05:DAB3: 85 06        	sta	<L139+2+4
  3622 05:DAB5: A5 01        	lda	<L139+1
  3623 05:DAB7: 85 05        	sta	<L139+1+4
  3624 05:DAB9: 2B           	pld
  3625 05:DABA: 3B           	tsc
  3626 05:DABB: 18           	clc
  3627 05:DABC: 69 04 00     	adc	#L139+4
  3628 05:DABF: 1B           	tcs
  3629 05:DAC0: 98           	tya
  3630 05:DAC1: 6B           	rtl
  3631                        ;}
  3632                        	.line	457
  3633                        	.endblock	457
  3634             00000000   L139	equ	0
  3635             00000001   L140	equ	1
  3636 05:DAC2:              	ends
  3637                        	efunc
  3638                        	.endfunc	457,1,0
  3639                        	.line	457
  3640                        ;
  3641                        ;UINT k_write_ipc_port(PIPCPORT port,LPVOID data,U
                    INT size)
  3642                        ;{
  3643                        	.line	459
  3644                        	.line	460
  3645                        	MEMMAN
  3646                        	xdef	~~k_write_ipc_port
  3647                        	func
  3648                        	.function	460
  3649                        ~~k_write_ipc_port:
  3650                        	longa	on
  3651                        	longi	on
  3652 05:DAC2: 3B           	tsc
  3653 05:DAC3: 38           	sec
  3654 05:DAC4: E9 00 00     	sbc	#L143
  3655 05:DAC7: 1B           	tcs
  3656 05:DAC8: 0B           	phd
  3657 05:DAC9: 5B           	tcd
  3658             00000004   port_0	set	4
  3659             00000008   data_0	set	8
  3660             0000000C   size_0	set	12
  3661                        	.block	460
  3662                        ;	//k_debug_string("k_write_ipc_port::enter...\r\n
                    ");
  3663                        ;	if(port!=NULL && (port->id == (ULONG)port))
  3664                        	.sym	port,4,138,6,32,56
  3665                        	.sym	data,8,129,6,32
  3666                        	.sym	size,12,16,6,16
  3667                        	.line	462
  3668                        ;	{
  3669 05:DACA: A5 04        	lda	<L143+port_0
  3670 05:DACC: 05 06        	ora	<L143+port_0+2
  3671 05:DACE: D0 03        	bne	L146
  3672 05:DAD0: 82 26 00     	brl	L10051
  3673                        L146:
  Mon Sep 27 2021  9:39                                                Page 69


  3674 05:DAD3: A5 04        	lda	<L143+port_0
  3675 05:DAD5: C7 04        	cmp	[<L143+port_0]
  3676 05:DAD7: D0 07        	bne	L147
  3677 05:DAD9: A5 06        	lda	<L143+port_0+2
  3678 05:DADB: A0 02 00     	ldy	#$2
  3679 05:DADE: D7 04        	cmp	[<L143+port_0],Y
  3680                        L147:
  3681 05:DAE0: F0 03        	beq	L148
  3682 05:DAE2: 82 14 00     	brl	L10051
  3683                        L148:
  3684                        	.line	463
  3685                        ;		k_enqueue(port->queue,data);
  3686                        	.line	464
  3687 05:DAE5: D4 0A        	pei	<L143+data_0+2
  3688 05:DAE7: D4 08        	pei	<L143+data_0
  3689 05:DAE9: A0 0F 00     	ldy	#$f
  3690 05:DAEC: B7 04        	lda	[<L143+port_0],Y
  3691 05:DAEE: 48           	pha
  3692 05:DAEF: A0 0D 00     	ldy	#$d
  3693 05:DAF2: B7 04        	lda	[<L143+port_0],Y
  3694 05:DAF4: 48           	pha
  3695 05:DAF5: 22 xx xx xx  	jsl	~~k_enqueue
  3696                        ;	}
  3697                        	.line	465
  3698                        ;	//k_debug_string("k_write_ipc_port::exit...\r\n"
                    );
  3699                        ;	return size;
  3700                        L10051:
  3701                        	.line	467
  3702 05:DAF9: A5 0C        	lda	<L143+size_0
  3703                        L149:
  3704 05:DAFB: A8           	tay
  3705 05:DAFC: A5 02        	lda	<L143+2
  3706 05:DAFE: 85 0C        	sta	<L143+2+10
  3707 05:DB00: A5 01        	lda	<L143+1
  3708 05:DB02: 85 0B        	sta	<L143+1+10
  3709 05:DB04: 2B           	pld
  3710 05:DB05: 3B           	tsc
  3711 05:DB06: 18           	clc
  3712 05:DB07: 69 0A 00     	adc	#L143+10
  3713 05:DB0A: 1B           	tcs
  3714 05:DB0B: 98           	tya
  3715 05:DB0C: 6B           	rtl
  3716                        ;}
  3717                        	.line	468
  3718                        	.endblock	468
  3719             00000000   L143	equ	0
  3720             00000001   L144	equ	1
  3721 05:DB0D:              	ends
  3722                        	efunc
  3723                        	.endfunc	468,1,0
  3724                        	.line	468
  3725                        ;
  3726                        ;void k_ipc_marshal_byte(PIPCPORT port,BYTE data)
  3727                        ;{
  3728                        	.line	470
  3729                        	.line	471
  3730                        	MEMMAN
  Mon Sep 27 2021  9:39                                                Page 70


  3731                        	xdef	~~k_ipc_marshal_byte
  3732                        	func
  3733                        	.function	471
  3734                        ~~k_ipc_marshal_byte:
  3735                        	longa	on
  3736                        	longi	on
  3737 05:DB0D: 3B           	tsc
  3738 05:DB0E: 38           	sec
  3739 05:DB0F: E9 04 00     	sbc	#L150
  3740 05:DB12: 1B           	tcs
  3741 05:DB13: 0B           	phd
  3742 05:DB14: 5B           	tcd
  3743             00000004   port_0	set	4
  3744             00000008   data_0	set	8
  3745                        	.block	471
  3746                        ;	PMARSHALDATA pm = NULL;
  3747                        ;
  3748                        ;	pm = k_mem_allocate_heap(sizeof(MARSHALDATA));
  3749             00000000   pm_1	set	0
  3750                        	.sym	pm,0,139,1,32,66
  3751                        	.sym	port,4,138,6,32,56
  3752                        	.sym	data,8,14,6,8
  3753 05:DB15: 64 01        	stz	<L151+pm_1
  3754 05:DB17: 64 03        	stz	<L151+pm_1+2
  3755                        	.line	474
  3756 05:DB19: F4 00 00     	pea	#^$4
  3757 05:DB1C: F4 04 00     	pea	#<$4
  3758 05:DB1F: 22 87 D4 05  	jsl	~~k_mem_allocate_heap
  3759 05:DB23: 85 01        	sta	<L151+pm_1
  3760 05:DB25: 86 03        	stx	<L151+pm_1+2
  3761                        ;	pm->byteValue = data;
  3762                        	.line	475
  3763 05:DB27: E2 20        	sep	#$20
  3764                        	longa	off
  3765 05:DB29: A5 0C        	lda	<L150+data_0
  3766 05:DB2B: 87 01        	sta	[<L151+pm_1]
  3767 05:DB2D: C2 20        	rep	#$20
  3768                        	longa	on
  3769                        ;	k_write_ipc_port(port,pm,0);
  3770                        	.line	476
  3771 05:DB2F: F4 00 00     	pea	#<$0
  3772 05:DB32: D4 03        	pei	<L151+pm_1+2
  3773 05:DB34: D4 01        	pei	<L151+pm_1
  3774 05:DB36: D4 0A        	pei	<L150+port_0+2
  3775 05:DB38: D4 08        	pei	<L150+port_0
  3776 05:DB3A: 22 C2 DA 05  	jsl	~~k_write_ipc_port
  3777                        ;}
  3778                        	.line	477
  3779                        L153:
  3780 05:DB3E: A5 06        	lda	<L150+2
  3781 05:DB40: 85 0C        	sta	<L150+2+6
  3782 05:DB42: A5 05        	lda	<L150+1
  3783 05:DB44: 85 0B        	sta	<L150+1+6
  3784 05:DB46: 2B           	pld
  3785 05:DB47: 3B           	tsc
  3786 05:DB48: 18           	clc
  3787 05:DB49: 69 0A 00     	adc	#L150+6
  3788 05:DB4C: 1B           	tcs
  Mon Sep 27 2021  9:39                                                Page 71


  3789 05:DB4D: 6B           	rtl
  3790                        	.endblock	477
  3791             00000004   L150	equ	4
  3792             00000001   L151	equ	1
  3793 05:DB4E:              	ends
  3794                        	efunc
  3795                        	.endfunc	477,1,4
  3796                        	.line	477
  3797                        ;
  3798                        ;void k_ipc_marshal_verb(PIPCPORT port,BYTE data1,
                    BYTE data2)
  3799                        ;{
  3800                        	.line	479
  3801                        	.line	480
  3802                        	MEMMAN
  3803                        	xdef	~~k_ipc_marshal_verb
  3804                        	func
  3805                        	.function	480
  3806                        ~~k_ipc_marshal_verb:
  3807                        	longa	on
  3808                        	longi	on
  3809 05:DB4E: 3B           	tsc
  3810 05:DB4F: 38           	sec
  3811 05:DB50: E9 04 00     	sbc	#L154
  3812 05:DB53: 1B           	tcs
  3813 05:DB54: 0B           	phd
  3814 05:DB55: 5B           	tcd
  3815             00000004   port_0	set	4
  3816             00000008   data1_0	set	8
  3817             0000000A   data2_0	set	10
  3818                        	.block	480
  3819                        ;	PMARSHALDATA pm = NULL;
  3820                        ;
  3821                        ;	pm = k_mem_allocate_heap(sizeof(MARSHALDATA));
  3822             00000000   pm_1	set	0
  3823                        	.sym	pm,0,139,1,32,66
  3824                        	.sym	port,4,138,6,32,56
  3825                        	.sym	data1,8,14,6,8
  3826                        	.sym	data2,10,14,6,8
  3827 05:DB56: 64 01        	stz	<L155+pm_1
  3828 05:DB58: 64 03        	stz	<L155+pm_1+2
  3829                        	.line	483
  3830 05:DB5A: F4 00 00     	pea	#^$4
  3831 05:DB5D: F4 04 00     	pea	#<$4
  3832 05:DB60: 22 87 D4 05  	jsl	~~k_mem_allocate_heap
  3833 05:DB64: 85 01        	sta	<L155+pm_1
  3834 05:DB66: 86 03        	stx	<L155+pm_1+2
  3835                        ;	pm->verbValue[0] = data1;
  3836                        	.line	484
  3837 05:DB68: E2 20        	sep	#$20
  3838                        	longa	off
  3839 05:DB6A: A5 0C        	lda	<L154+data1_0
  3840 05:DB6C: 87 01        	sta	[<L155+pm_1]
  3841 05:DB6E: C2 20        	rep	#$20
  3842                        	longa	on
  3843                        ;	pm->verbValue[1] = data2;
  3844                        	.line	485
  3845 05:DB70: E2 20        	sep	#$20
  Mon Sep 27 2021  9:39                                                Page 72


  3846                        	longa	off
  3847 05:DB72: A5 0E        	lda	<L154+data2_0
  3848 05:DB74: A0 01 00     	ldy	#$1
  3849 05:DB77: 97 01        	sta	[<L155+pm_1],Y
  3850 05:DB79: C2 20        	rep	#$20
  3851                        	longa	on
  3852                        ;	k_write_ipc_port(port,pm,0);
  3853                        	.line	486
  3854 05:DB7B: F4 00 00     	pea	#<$0
  3855 05:DB7E: D4 03        	pei	<L155+pm_1+2
  3856 05:DB80: D4 01        	pei	<L155+pm_1
  3857 05:DB82: D4 0A        	pei	<L154+port_0+2
  3858 05:DB84: D4 08        	pei	<L154+port_0
  3859 05:DB86: 22 C2 DA 05  	jsl	~~k_write_ipc_port
  3860                        ;}
  3861                        	.line	487
  3862                        L157:
  3863 05:DB8A: A5 06        	lda	<L154+2
  3864 05:DB8C: 85 0E        	sta	<L154+2+8
  3865 05:DB8E: A5 05        	lda	<L154+1
  3866 05:DB90: 85 0D        	sta	<L154+1+8
  3867 05:DB92: 2B           	pld
  3868 05:DB93: 3B           	tsc
  3869 05:DB94: 18           	clc
  3870 05:DB95: 69 0C 00     	adc	#L154+8
  3871 05:DB98: 1B           	tcs
  3872 05:DB99: 6B           	rtl
  3873                        	.endblock	487
  3874             00000004   L154	equ	4
  3875             00000001   L155	equ	1
  3876 05:DB9A:              	ends
  3877                        	efunc
  3878                        	.endfunc	487,1,4
  3879                        	.line	487
  3880                        ;
  3881                        ;void k_ipc_marshal_int(PIPCPORT port,UINT data)
  3882                        ;{
  3883                        	.line	489
  3884                        	.line	490
  3885                        	MEMMAN
  3886                        	xdef	~~k_ipc_marshal_int
  3887                        	func
  3888                        	.function	490
  3889                        ~~k_ipc_marshal_int:
  3890                        	longa	on
  3891                        	longi	on
  3892 05:DB9A: 3B           	tsc
  3893 05:DB9B: 38           	sec
  3894 05:DB9C: E9 04 00     	sbc	#L158
  3895 05:DB9F: 1B           	tcs
  3896 05:DBA0: 0B           	phd
  3897 05:DBA1: 5B           	tcd
  3898             00000004   port_0	set	4
  3899             00000008   data_0	set	8
  3900                        	.block	490
  3901                        ;	PMARSHALDATA pm = NULL;
  3902                        ;
  3903                        ;	pm = k_mem_allocate_heap(sizeof(MARSHALDATA));
  Mon Sep 27 2021  9:39                                                Page 73


  3904             00000000   pm_1	set	0
  3905                        	.sym	pm,0,139,1,32,66
  3906                        	.sym	port,4,138,6,32,56
  3907                        	.sym	data,8,16,6,16
  3908 05:DBA2: 64 01        	stz	<L159+pm_1
  3909 05:DBA4: 64 03        	stz	<L159+pm_1+2
  3910                        	.line	493
  3911 05:DBA6: F4 00 00     	pea	#^$4
  3912 05:DBA9: F4 04 00     	pea	#<$4
  3913 05:DBAC: 22 87 D4 05  	jsl	~~k_mem_allocate_heap
  3914 05:DBB0: 85 01        	sta	<L159+pm_1
  3915 05:DBB2: 86 03        	stx	<L159+pm_1+2
  3916                        ;	pm->intValue = data;
  3917                        	.line	494
  3918 05:DBB4: A5 0C        	lda	<L158+data_0
  3919 05:DBB6: 87 01        	sta	[<L159+pm_1]
  3920                        ;	k_write_ipc_port(port,pm,0);
  3921                        	.line	495
  3922 05:DBB8: F4 00 00     	pea	#<$0
  3923 05:DBBB: D4 03        	pei	<L159+pm_1+2
  3924 05:DBBD: D4 01        	pei	<L159+pm_1
  3925 05:DBBF: D4 0A        	pei	<L158+port_0+2
  3926 05:DBC1: D4 08        	pei	<L158+port_0
  3927 05:DBC3: 22 C2 DA 05  	jsl	~~k_write_ipc_port
  3928                        ;}
  3929                        	.line	496
  3930                        L161:
  3931 05:DBC7: A5 06        	lda	<L158+2
  3932 05:DBC9: 85 0C        	sta	<L158+2+6
  3933 05:DBCB: A5 05        	lda	<L158+1
  3934 05:DBCD: 85 0B        	sta	<L158+1+6
  3935 05:DBCF: 2B           	pld
  3936 05:DBD0: 3B           	tsc
  3937 05:DBD1: 18           	clc
  3938 05:DBD2: 69 0A 00     	adc	#L158+6
  3939 05:DBD5: 1B           	tcs
  3940 05:DBD6: 6B           	rtl
  3941                        	.endblock	496
  3942             00000004   L158	equ	4
  3943             00000001   L159	equ	1
  3944 05:DBD7:              	ends
  3945                        	efunc
  3946                        	.endfunc	496,1,4
  3947                        	.line	496
  3948                        ;
  3949                        ;void k_ipc_marshal_long(PIPCPORT port,ULONG data)
  3950                        ;{
  3951                        	.line	498
  3952                        	.line	499
  3953                        	MEMMAN
  3954                        	xdef	~~k_ipc_marshal_long
  3955                        	func
  3956                        	.function	499
  3957                        ~~k_ipc_marshal_long:
  3958                        	longa	on
  3959                        	longi	on
  3960 05:DBD7: 3B           	tsc
  3961 05:DBD8: 38           	sec
  Mon Sep 27 2021  9:39                                                Page 74


  3962 05:DBD9: E9 04 00     	sbc	#L162
  3963 05:DBDC: 1B           	tcs
  3964 05:DBDD: 0B           	phd
  3965 05:DBDE: 5B           	tcd
  3966             00000004   port_0	set	4
  3967             00000008   data_0	set	8
  3968                        	.block	499
  3969                        ;	PMARSHALDATA pm = NULL;
  3970                        ;
  3971                        ;	pm = k_mem_allocate_heap(sizeof(MARSHALDATA));
  3972             00000000   pm_1	set	0
  3973                        	.sym	pm,0,139,1,32,66
  3974                        	.sym	port,4,138,6,32,56
  3975                        	.sym	data,8,18,6,32
  3976 05:DBDF: 64 01        	stz	<L163+pm_1
  3977 05:DBE1: 64 03        	stz	<L163+pm_1+2
  3978                        	.line	502
  3979 05:DBE3: F4 00 00     	pea	#^$4
  3980 05:DBE6: F4 04 00     	pea	#<$4
  3981 05:DBE9: 22 87 D4 05  	jsl	~~k_mem_allocate_heap
  3982 05:DBED: 85 01        	sta	<L163+pm_1
  3983 05:DBEF: 86 03        	stx	<L163+pm_1+2
  3984                        ;	pm->longValue = data;
  3985                        	.line	503
  3986 05:DBF1: A5 0C        	lda	<L162+data_0
  3987 05:DBF3: 87 01        	sta	[<L163+pm_1]
  3988 05:DBF5: A5 0E        	lda	<L162+data_0+2
  3989 05:DBF7: A0 02 00     	ldy	#$2
  3990 05:DBFA: 97 01        	sta	[<L163+pm_1],Y
  3991                        ;	k_write_ipc_port(port,pm,0);
  3992                        	.line	504
  3993 05:DBFC: F4 00 00     	pea	#<$0
  3994 05:DBFF: D4 03        	pei	<L163+pm_1+2
  3995 05:DC01: D4 01        	pei	<L163+pm_1
  3996 05:DC03: D4 0A        	pei	<L162+port_0+2
  3997 05:DC05: D4 08        	pei	<L162+port_0
  3998 05:DC07: 22 C2 DA 05  	jsl	~~k_write_ipc_port
  3999                        ;}
  4000                        	.line	505
  4001                        L165:
  4002 05:DC0B: A5 06        	lda	<L162+2
  4003 05:DC0D: 85 0E        	sta	<L162+2+8
  4004 05:DC0F: A5 05        	lda	<L162+1
  4005 05:DC11: 85 0D        	sta	<L162+1+8
  4006 05:DC13: 2B           	pld
  4007 05:DC14: 3B           	tsc
  4008 05:DC15: 18           	clc
  4009 05:DC16: 69 0C 00     	adc	#L162+8
  4010 05:DC19: 1B           	tcs
  4011 05:DC1A: 6B           	rtl
  4012                        	.endblock	505
  4013             00000004   L162	equ	4
  4014             00000001   L163	equ	1
  4015 05:DC1B:              	ends
  4016                        	efunc
  4017                        	.endfunc	505,1,4
  4018                        	.line	505
  4019                        ;
  Mon Sep 27 2021  9:39                                                Page 75


  4020                        ;HANDLE k_mem_change_block_attr(LPVOID memBlock, U
                    INT attr)
  4021                        ;{
  4022                        	.line	507
  4023                        	.line	508
  4024                        	MEMMAN
  4025                        	xdef	~~k_mem_change_block_attr
  4026                        	func
  4027                        	.function	508
  4028                        ~~k_mem_change_block_attr:
  4029                        	longa	on
  4030                        	longi	on
  4031 05:DC1B: 3B           	tsc
  4032 05:DC1C: 38           	sec
  4033 05:DC1D: E9 00 00     	sbc	#L166
  4034 05:DC20: 1B           	tcs
  4035 05:DC21: 0B           	phd
  4036 05:DC22: 5B           	tcd
  4037             00000004   memBlock_0	set	4
  4038             00000008   attr_0	set	8
  4039                        	.block	508
  4040                        ;	return NULL;
  4041                        	.sym	memBlock,4,129,6,32
  4042                        	.sym	attr,8,16,6,16
  4043                        	.line	509
  4044 05:DC23: A9 00 00     	lda	#$0
  4045 05:DC26: AA           	tax
  4046 05:DC27: A9 00 00     	lda	#$0
  4047                        L169:
  4048 05:DC2A: A8           	tay
  4049 05:DC2B: A5 02        	lda	<L166+2
  4050 05:DC2D: 85 08        	sta	<L166+2+6
  4051 05:DC2F: A5 01        	lda	<L166+1
  4052 05:DC31: 85 07        	sta	<L166+1+6
  4053 05:DC33: 2B           	pld
  4054 05:DC34: 3B           	tsc
  4055 05:DC35: 18           	clc
  4056 05:DC36: 69 06 00     	adc	#L166+6
  4057 05:DC39: 1B           	tcs
  4058 05:DC3A: 98           	tya
  4059 05:DC3B: 6B           	rtl
  4060                        ;}
  4061                        	.line	510
  4062                        	.endblock	510
  4063             00000000   L166	equ	0
  4064             00000001   L167	equ	1
  4065 05:DC3C:              	ends
  4066                        	efunc
  4067                        	.endfunc	510,1,0
  4068                        	.line	510
  4069                        ;
  4070                        ;PALLOCATIONHEADER k_mem_get_block_attr(LPVOID mem
                    Block)
  4071                        ;{
  4072                        	.line	512
  4073                        	.line	513
  4074                        	MEMMAN
  4075                        	xdef	~~k_mem_get_block_attr
  Mon Sep 27 2021  9:39                                                Page 76


  4076                        	func
  4077                        	.function	513
  4078                        ~~k_mem_get_block_attr:
  4079                        	longa	on
  4080                        	longi	on
  4081 05:DC3C: 3B           	tsc
  4082 05:DC3D: 38           	sec
  4083 05:DC3E: E9 00 00     	sbc	#L170
  4084 05:DC41: 1B           	tcs
  4085 05:DC42: 0B           	phd
  4086 05:DC43: 5B           	tcd
  4087             00000004   memBlock_0	set	4
  4088                        	.block	513
  4089                        ;	return NULL;
  4090                        	.sym	memBlock,4,129,6,32
  4091                        	.line	514
  4092 05:DC44: A9 00 00     	lda	#$0
  4093 05:DC47: AA           	tax
  4094 05:DC48: A9 00 00     	lda	#$0
  4095                        L173:
  4096 05:DC4B: A8           	tay
  4097 05:DC4C: A5 02        	lda	<L170+2
  4098 05:DC4E: 85 06        	sta	<L170+2+4
  4099 05:DC50: A5 01        	lda	<L170+1
  4100 05:DC52: 85 05        	sta	<L170+1+4
  4101 05:DC54: 2B           	pld
  4102 05:DC55: 3B           	tsc
  4103 05:DC56: 18           	clc
  4104 05:DC57: 69 04 00     	adc	#L170+4
  4105 05:DC5A: 1B           	tcs
  4106 05:DC5B: 98           	tya
  4107 05:DC5C: 6B           	rtl
  4108                        ;}
  4109                        	.line	515
  4110                        	.endblock	515
  4111             00000000   L170	equ	0
  4112             00000001   L171	equ	1
  4113 05:DC5D:              	ends
  4114                        	efunc
  4115                        	.endfunc	515,1,0
  4116                        	.line	515
  4117                        ;
  4118                        ;HANDLE k_mem_change_block_virtual(LPVOID memBlock
                    , UINT attr)
  4119                        ;{
  4120                        	.line	517
  4121                        	.line	518
  4122                        	MEMMAN
  4123                        	xdef	~~k_mem_change_block_virtual
  4124                        	func
  4125                        	.function	518
  4126                        ~~k_mem_change_block_virtual:
  4127                        	longa	on
  4128                        	longi	on
  4129 05:DC5D: 3B           	tsc
  4130 05:DC5E: 38           	sec
  4131 05:DC5F: E9 00 00     	sbc	#L174
  4132 05:DC62: 1B           	tcs
  Mon Sep 27 2021  9:39                                                Page 77


  4133 05:DC63: 0B           	phd
  4134 05:DC64: 5B           	tcd
  4135             00000004   memBlock_0	set	4
  4136             00000008   attr_0	set	8
  4137                        	.block	518
  4138                        ;
  4139                        ;	return NULL;
  4140                        	.sym	memBlock,4,129,6,32
  4141                        	.sym	attr,8,16,6,16
  4142                        	.line	520
  4143 05:DC65: A9 00 00     	lda	#$0
  4144 05:DC68: AA           	tax
  4145 05:DC69: A9 00 00     	lda	#$0
  4146                        L177:
  4147 05:DC6C: A8           	tay
  4148 05:DC6D: A5 02        	lda	<L174+2
  4149 05:DC6F: 85 08        	sta	<L174+2+6
  4150 05:DC71: A5 01        	lda	<L174+1
  4151 05:DC73: 85 07        	sta	<L174+1+6
  4152 05:DC75: 2B           	pld
  4153 05:DC76: 3B           	tsc
  4154 05:DC77: 18           	clc
  4155 05:DC78: 69 06 00     	adc	#L174+6
  4156 05:DC7B: 1B           	tcs
  4157 05:DC7C: 98           	tya
  4158 05:DC7D: 6B           	rtl
  4159                        ;
  4160                        ;}
  4161                        	.line	522
  4162                        	.endblock	522
  4163             00000000   L174	equ	0
  4164             00000001   L175	equ	1
  4165 05:DC7E:              	ends
  4166                        	efunc
  4167                        	.endfunc	522,1,0
  4168                        	.line	522
  4169                        ;
  4170                        ;BOOL k_mem_change_block_user(LPVOID memBlock,UINT
                     userId)
  4171                        ;{
  4172                        	.line	524
  4173                        	.line	525
  4174                        	MEMMAN
  4175                        	xdef	~~k_mem_change_block_user
  4176                        	func
  4177                        	.function	525
  4178                        ~~k_mem_change_block_user:
  4179                        	longa	on
  4180                        	longi	on
  4181 05:DC7E: 3B           	tsc
  4182 05:DC7F: 38           	sec
  4183 05:DC80: E9 00 00     	sbc	#L178
  4184 05:DC83: 1B           	tcs
  4185 05:DC84: 0B           	phd
  4186 05:DC85: 5B           	tcd
  4187             00000004   memBlock_0	set	4
  4188             00000008   userId_0	set	8
  4189                        	.block	525
  Mon Sep 27 2021  9:39                                                Page 78


  4190                        ;	return FALSE;
  4191                        	.sym	memBlock,4,129,6,32
  4192                        	.sym	userId,8,16,6,16
  4193                        	.line	526
  4194 05:DC86: A9 00 00     	lda	#$0
  4195                        L181:
  4196 05:DC89: A8           	tay
  4197 05:DC8A: A5 02        	lda	<L178+2
  4198 05:DC8C: 85 08        	sta	<L178+2+6
  4199 05:DC8E: A5 01        	lda	<L178+1
  4200 05:DC90: 85 07        	sta	<L178+1+6
  4201 05:DC92: 2B           	pld
  4202 05:DC93: 3B           	tsc
  4203 05:DC94: 18           	clc
  4204 05:DC95: 69 06 00     	adc	#L178+6
  4205 05:DC98: 1B           	tcs
  4206 05:DC99: 98           	tya
  4207 05:DC9A: 6B           	rtl
  4208                        ;}
  4209                        	.line	527
  4210                        	.endblock	527
  4211             00000000   L178	equ	0
  4212             00000001   L179	equ	1
  4213 05:DC9B:              	ends
  4214                        	efunc
  4215                        	.endfunc	527,1,0
  4216                        	.line	527
  4217                        ;
  4218                        	.line	527
  4219                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxmemorymanager.c",524
  4220                        	xref	~~k_exec_throw_exception
  4221                        	xref	~~k_exit_critical_section
  4222                        	xref	~~k_enter_critical_section
  4223                        	xref	~~k_debug_long
  4224                        	xref	~~k_debug_integer
  4225                        	xref	~~k_debug_pointer
  4226                        	xref	~~k_unlock_irq
  4227                        	xref	~~k_lock_irq
  4228                        	xref	~~k_getZeroPage
  4229                        	xref	~~umm_free
  4230                        	xref	~~umm_malloc
  4231                        	xref	~~umm_integrity_check
  4232                        	xref	~~umm_info
  4233                        	xref	~~k_nodelist_removefromlist
  4234                        	xref	~~k_nodelist_searchByName
  4235                        	xref	~~k_nodelist_addtolist
  4236                        	xref	~~k_nodelist_allocate_list
  4237                        	xref	~~k_dequeue
  4238                        	xref	~~k_enqueue
  4239                        	xref	~~k_initialize
  4240                        	xref	~~k_fxstring_free
  4241                        	xref	~~k_fxstring_new
  4242                        	xref	~~strcmp
  4243                        	xref	~~memcpy
  4244                        	.sym	~~_ipc_ports,~~_ipc_ports,138,2,32,6
  4245                        	.sym	~~_ipc_global_ports,~~_ipc_global_ports,
                    1130,2,32,56,8
  Mon Sep 27 2021  9:39                                                Page 79


  4246                        	.sym	~~_current_allocation,~~_current_allocat
                    ion,18,2,32
  4247                        	.sym	~~heap_end,~~heap_end,129,2,32
  4248                        	.sym	~~heap_start,~~heap_start,129,2,32
  4249                        	.sym	~~THIS_MODULE,~~THIS_MODULE,18,3,32
  4250                        	.sym	~~k_exec_throw_exception,~~k_exec_throw_
                    exception,65,18,0
  4251                        	.sym	PIRQCHAIN,0,138,14,32,89
  4252                        	.sym	IRQCHAIN,0,10,14,128,89
  4253                        	.sym	DEVICEDRIVER_COMMAND,0,654,14,32
  4254                        	.sym	DEVICEDRIVER_UNLOAD,0,654,14,32
  4255                        	.sym	DEVICEDRIVER_WRITE,0,654,14,32
  4256                        	.sym	DEVICEDRIVER_READ,0,654,14,32
  4257                        	.sym	DEVICEDRIVER_LOAD,0,654,14,32
  4258                        	.sym	DEVICEDRIVER_IRQ,0,641,14,32
  4259                        	.sym	PFX_BLOCK_DEVICE_DRIVER,0,138,14,32,88
  4260                        	.sym	FX_BLOCK_DEVICE_DRIVER,0,10,14,808,88
  4261                        	.sym	GETDRIVERDEF,0,8842,14,32,87
  4262                        	.sym	PFX_DEVICE_DRIVER,0,138,14,32,87
  4263                        	.sym	FX_DEVICE_DRIVER,0,10,14,776,87
  4264                        	.sym	~~k_exit_critical_section,~~k_exit_criti
                    cal_section,65,18,0
  4265                        	.sym	~~k_enter_critical_section,~~k_enter_cri
                    tical_section,78,18,0
  4266                        	.sym	~~k_debug_long,~~k_debug_long,65,18,0
  4267                        	.sym	~~k_debug_integer,~~k_debug_integer,65,1
                    8,0
  4268                        	.sym	~~k_debug_pointer,~~k_debug_pointer,65,1
                    8,0
  4269                        	.sym	~~k_unlock_irq,~~k_unlock_irq,80,18,0
  4270                        	.sym	~~k_lock_irq,~~k_lock_irq,80,18,0
  4271                        	.sym	PSEGMENTHEADER,0,138,14,32,86
  4272                        	.sym	SEGMENTHEADER,0,10,14,160,86
  4273                        	.sym	~~k_getZeroPage,~~k_getZeroPage,1098,18,
                    32,83
  4274                        	.sym	PDEBUGBYTEBITS,0,138,14,32,85
  4275                        	.sym	DEBUGBYTEBITS,0,10,14,8,85
  4276                        	.sym	PFXENVIRONMENT,0,138,14,32,84
  4277                        	.sym	FXENVIRONMENT,0,10,14,96,84
  4278                        	.sym	PFXZEROPAGE,0,138,14,32,83
  4279                        	.sym	FXZEROPAGE,0,10,14,720,83
  4280                        	.sym	IRQBUFFER,0,10,14,32,82
  4281                        	.sym	KERNELTRAPCALL,0,641,14,32
  4282                        	.sym	PFXKERNEL_API_CALLTABLE,0,138,14,32,81
  4283                        	.sym	FXKERNEL_API_CALLTABLE,0,10,14,8192,81
  4284                        	.sym	FRESULT,0,5,14,16
  4285                        	.sym	MKFS_PARM,0,10,14,80,80
  4286                        	.sym	FILINFO,0,10,14,2224,79
  4287                        	.sym	DIR,0,10,14,416,78
  4288                        	.sym	FIL,0,10,14,4400,77
  4289                        	.sym	FFOBJID,0,10,14,128,76
  4290                        	.sym	FATFS,0,10,14,4504,75
  4291                        	.sym	LBA_t,0,18,14,32
  4292                        	.sym	FSIZE_t,0,18,14,32
  4293                        	.sym	TCHAR,0,14,14,8
  4294                        	.sym	PCOMMANDARGS,0,138,14,32,74
  4295                        	.sym	COMMANDARGS,0,10,14,64,74
  4296                        	.sym	PTOKENIZESTATE,0,133,14,32
  Mon Sep 27 2021  9:39                                                Page 80


  4297                        	.sym	TOKENIZESTATE,0,5,14,16
  4298                        	.sym	PTOKEN,0,138,14,32,73
  4299                        	.sym	TOKEN,0,10,14,64,73
  4300                        	.sym	PTOKENTYPE,0,133,14,32
  4301                        	.sym	TOKENTYPE,0,5,14,16
  4302                        	.sym	FXCommandHandler,0,656,14,32
  4303                        	.sym	PCONSOLECTX,0,138,14,32,72
  4304                        	.sym	CONSOLECTX,0,10,14,1144,72
  4305                        	.sym	PSPINNERCTX,0,138,14,32,71
  4306                        	.sym	SPINNERCTX,0,10,14,48,71
  4307                        	.sym	HCLIP,0,138,14,32,70
  4308                        	.sym	PCLIPBOARD_DATA,0,138,14,32,70
  4309                        	.sym	CLIPBOARD_DATA,0,10,14,168,70
  4310                        	.sym	PEVENTMANAGER,0,138,14,32,69
  4311                        	.sym	EVENTMANAGER,0,10,14,192,69
  4312                        	.sym	EV_RUN,0,656,14,32
  4313                        	.sym	EV_QUERY_METRIC,0,656,14,32
  4314                        	.sym	EV_CONFIGURE,0,656,14,32
  4315                        	.sym	EV_UNINIT,0,641,14,32
  4316                        	.sym	EV_INIT,0,8833,14,32
  4317                        	.sym	PMOUSE_MSG_STATE,0,138,14,32,68
  4318                        	.sym	MOUSE_MSG_STATE,0,10,14,184,68
  4319                        	.sym	PFXEVENTPROCESS,0,138,14,32,67
  4320                        	.sym	FXEVENTPROCESS,0,10,14,64,67
  4321                        	.sym	FXASYNCPROCESS,0,641,14,32
  4322                        	.sym	PMARSHALDATA,0,139,14,32,66
  4323                        	.sym	MARSHALDATA,0,11,14,32,66
  4324                        	.sym	FXIDLEPROCESS,0,641,14,32
  4325                        	.sym	FXEventProc,0,641,14,32
  4326                        	.sym	PMOUSEMSGDATA,0,138,14,32,65
  4327                        	.sym	MOUSEMSGDATA,0,10,14,64,65
  4328                        	.sym	MSGIRQ,0,5,14,16
  4329                        	.sym	MAINLOOPARGS,0,10,14,16,64
  4330                        	.sym	PEACHCHILD_MSG,0,138,14,32,63
  4331                        	.sym	EACHCHILD_MSG,0,10,14,64,63
  4332                        	.sym	PMSGBOX_DATA,0,138,14,32,62
  4333                        	.sym	MSGBOX_DATA,0,10,14,96,62
  4334                        	.sym	PDESKTOP_DATA,0,138,14,32,61
  4335                        	.sym	DESKTOP_DATA,0,10,14,64,61
  4336                        	.sym	PWINDOWMANAGER,0,138,14,32,60
  4337                        	.sym	WINDOWMANAGER,0,10,14,160,60
  4338                        	.sym	WM_DOPROCS,0,641,14,32
  4339                        	.sym	WM_QUERY_METRIC,0,656,14,32
  4340                        	.sym	WM_CONFIGURE,0,656,14,32
  4341                        	.sym	WM_HANDLE_EVENT,0,8833,14,32
  4342                        	.sym	WM_EVENTS,0,641,14,32
  4343                        	.sym	PCUR_PALETTE_MAP,0,138,14,32,59
  4344                        	.sym	CUR_PALETTE_MAP,0,10,14,400,59
  4345                        	.sym	PCLICKDETECTED,0,138,14,32,58
  4346                        	.sym	CLICKDETECTED,0,10,14,64,58
  4347                        	.sym	OBJECTCLICKED,0,641,14,32
  4348                        	.sym	~~k_mem_change_block_user,~~k_mem_change
                    _block_user,78,2,0
  4349                        	.sym	~~k_mem_change_block_virtual,~~k_mem_cha
                    nge_block_virtual,1089,2,32
  4350                        	.sym	~~k_mem_get_block_attr,~~k_mem_get_block
                    _attr,1098,2,32,57
  4351                        	.sym	~~k_mem_change_block_attr,~~k_mem_change
  Mon Sep 27 2021  9:39                                                Page 81


                    _block_attr,1089,2,32
  4352                        	.sym	PALLOCATIONHEADER,0,138,14,32,57
  4353                        	.sym	ALLOCATIONHEADER,0,10,14,80,57
  4354                        	.sym	~~k_ipc_marshal_long,~~k_ipc_marshal_lon
                    g,65,2,0
  4355                        	.sym	~~k_ipc_marshal_int,~~k_ipc_marshal_int,
                    65,2,0
  4356                        	.sym	~~k_ipc_marshal_verb,~~k_ipc_marshal_ver
                    b,65,2,0
  4357                        	.sym	~~k_ipc_marshal_byte,~~k_ipc_marshal_byt
                    e,65,2,0
  4358                        	.sym	~~k_write_ipc_port,~~k_write_ipc_port,80
                    ,2,0
  4359                        	.sym	~~k_peek_ipc_port,~~k_peek_ipc_port,1089
                    ,2,32
  4360                        	.sym	~~k_read_ipc_port,~~k_read_ipc_port,1089
                    ,2,32
  4361                        	.sym	~~k_close_ipc_port,~~k_close_ipc_port,65
                    ,2,0
  4362                        	.sym	~~k_get_ipc_port,~~k_get_ipc_port,1098,2
                    ,32,56
  4363                        	.sym	~~k_open_ipc_port,~~k_open_ipc_port,1098
                    ,2,32,56
  4364                        	.sym	PIPCPORT,0,138,14,32,56
  4365                        	.sym	IPCPORT,0,10,14,144,56
  4366                        	.sym	~~k_mem_get_segment_info,~~k_mem_get_seg
                    ment_info,1089,2,32
  4367                        	.sym	~~k_mem_unload_segment,~~k_mem_unload_se
                    gment,65,2,0
  4368                        	.sym	~~k_mem_unlock_segment,~~k_mem_unlock_se
                    gment,78,2,0
  4369                        	.sym	~~k_mem_lock_segment,~~k_mem_lock_segmen
                    t,1089,2,32
  4370                        	.sym	~~k_mem_load_segment,~~k_mem_load_segmen
                    t,1089,2,32
  4371                        	.sym	~~k_free,~~k_free,65,2,0
  4372                        	.sym	~~k_calloc,~~k_calloc,1089,2,32
  4373                        	.sym	~~k_mem_deallocate_heap,~~k_mem_dealloca
                    te_heap,65,2,0
  4374                        	.sym	~~k_mem_allocate_heap,~~k_mem_allocate_h
                    eap,1089,2,32
  4375                        	.sym	~~k_mem_unlock_handle,~~k_mem_unlock_han
                    dle,65,2,0
  4376                        	.sym	~~k_mem_lock_handle,~~k_mem_lock_handle,
                    1089,2,32
  4377                        	.sym	~~k_mem_deallocate_dynamic_heap,~~k_mem_
                    deallocate_dynamic_heap,65,2,0
  4378                        	.sym	~~k_mem_allocate_dynamic_heap,~~k_mem_al
                    locate_dynamic_heap,1089,2,32
  4379                        	.sym	~~k_fcheck_system_memory,~~k_fcheck_syst
                    em_memory,82,2,0
  4380                        	.sym	~~k_check_system_memory,~~k_check_system
                    _memory,82,2,0
  4381                        	.sym	~~k_mem_object_copy,~~k_mem_object_copy,
                    1089,2,32
  4382                        	.sym	~~k_heap_integrity_check,~~k_heap_integr
                    ity_check,82,2,0
  4383                        	.sym	MemoryCallback,0,641,14,32
  Mon Sep 27 2021  9:39                                                Page 82


  4384                        	.sym	PFXMEMORYMAP,0,138,14,32,55
  4385                        	.sym	FXMEMORYMAP,0,10,14,2072,55
  4386                        	.sym	~~umm_free,~~umm_free,65,18,0
  4387                        	.sym	~~umm_malloc,~~umm_malloc,1089,18,32
  4388                        	.sym	~~umm_integrity_check,~~umm_integrity_ch
                    eck,69,18,0
  4389                        	.sym	~~umm_info,~~umm_info,1089,18,32
  4390                        	.sym	UMM_HEAP_INFO,0,10,14,256,54
  4391                        	.sym	FOREACHNODEUNTIL,0,654,14,32
  4392                        	.sym	FOREACHNODE,0,641,14,32
  4393                        	.sym	~~k_nodelist_removefromlist,~~k_nodelist
                    _removefromlist,1098,18,32,5
  4394                        	.sym	~~k_nodelist_searchByName,~~k_nodelist_s
                    earchByName,1098,18,32,5
  4395                        	.sym	~~k_nodelist_addtolist,~~k_nodelist_addt
                    olist,1098,18,32,5
  4396                        	.sym	~~k_nodelist_allocate_list,~~k_nodelist_
                    allocate_list,1098,18,32,6
  4397                        	.sym	~~k_dequeue,~~k_dequeue,1089,18,32
  4398                        	.sym	~~k_enqueue,~~k_enqueue,78,18,0
  4399                        	.sym	~~k_initialize,~~k_initialize,65,18,0
  4400                        	.sym	PEXECUTIVE,0,138,14,32,53
  4401                        	.sym	EXECUTIVE,0,10,14,128,53
  4402                        	.sym	EX_QUERY_METRIC,0,656,14,32
  4403                        	.sym	EX_CONFIGURE,0,656,14,32
  4404                        	.sym	EX_UNINIT,0,641,14,32
  4405                        	.sym	EX_INIT,0,8833,14,32
  4406                        	.sym	~~k_fxstring_free,~~k_fxstring_free,65,1
                    8,0
  4407                        	.sym	~~k_fxstring_new,~~k_fxstring_new,1098,1
                    8,32,52
  4408                        	.sym	PFXSTRING,0,138,14,32,52
  4409                        	.sym	FXSTRING,0,10,14,64,52
  4410                        	.sym	PFXRFHEADER_STRING_ENTRY,0,138,14,32,51
  4411                        	.sym	FXRFHEADER_STRING_ENTRY,0,10,14,40,51
  4412                        	.sym	PFXRFHEADER_STRING,0,138,14,32,50
  4413                        	.sym	FXRFHEADER_STRING,0,10,14,32,50
  4414                        	.sym	PFXRFHEADER_FONT,0,138,14,32,49
  4415                        	.sym	FXRFHEADER_FONT,0,10,14,144,49
  4416                        	.sym	PFXRFHEADER,0,138,14,32,48
  4417                        	.sym	FXRFHEADER,0,10,14,72,48
  4418                        	.sym	PFXCOMBUFFER,0,138,14,32,47
  4419                        	.sym	FXCOMBUFFER,0,10,14,2080,47
  4420                        	.sym	PSUBMENULIST,0,138,14,32,46
  4421                        	.sym	SUBMENULIST,0,10,14,40,46
  4422                        	.sym	HSUBMENU,0,7,14,32
  4423                        	.sym	PSUBMENU,0,138,14,32,45
  4424                        	.sym	SUBMENU,0,10,14,64,45
  4425                        	.sym	MenuAction,0,641,14,32
  4426                        	.sym	PMENUANCHOR,0,138,14,32,44
  4427                        	.sym	MENUANCHOR,0,10,14,272,44
  4428                        	.sym	PMSGBOX,0,138,14,32,43
  4429                        	.sym	MSGBOX,0,10,14,144,43
  4430                        	.sym	PTEXTBOX,0,138,14,32,42
  4431                        	.sym	TEXTBOX,0,10,14,144,42
  4432                        	.sym	PLISTBOX,0,138,14,32,41
  4433                        	.sym	LISTBOX,0,10,14,240,41
  4434                        	.sym	PSCROLLBAR,0,138,14,32,40
  Mon Sep 27 2021  9:39                                                Page 83


  4435                        	.sym	SCROLLBAR,0,10,14,240,40
  4436                        	.sym	PBUTTON,0,138,14,32,39
  4437                        	.sym	BUTTON,0,10,14,96,39
  4438                        	.sym	PMENUDROPDOWNDATA,0,138,14,32,38
  4439                        	.sym	MENUDROPDOWNDATA,0,10,14,5152,38
  4440                        	.sym	PMENUTAG,0,138,14,32,37
  4441                        	.sym	MENUTAG,0,10,14,160,37
  4442                        	.sym	PMENU,0,138,14,32,36
  4443                        	.sym	MENU,0,10,14,280,36
  4444                        	.sym	HMENURESOURCE,0,129,14,32
  4445                        	.sym	FONTMETRIC,0,10,14,32,35
  4446                        	.sym	TITLE,0,142,14,32
  4447                        	.sym	PHANDLE,0,1153,14,32
  4448                        	.sym	HANDLE,0,129,14,32
  4449                        	.sym	PWINDOWEX,0,138,14,32,34
  4450                        	.sym	WINDOWEX,0,10,14,3880,34
  4451                        	.sym	PWINDOW,0,138,14,32,33
  4452                        	.sym	WINDOW,0,10,14,3904,33
  4453                        	.sym	PDRAGDATA,0,138,14,32,32
  4454                        	.sym	DRAGDATA,0,10,14,216,32
  4455                        	.sym	PNCCLICKABLE,0,138,14,32,31
  4456                        	.sym	NCCLICKABLE,0,10,14,136,31
  4457                        	.sym	HCLICKABLE,0,7,14,32
  4458                        	.sym	PCLICKABLE,0,138,14,32,30
  4459                        	.sym	CLICKABLE,0,10,14,152,30
  4460                        	.sym	PWNDCLASS,0,138,14,32,29
  4461                        	.sym	WNDCLASS,0,10,14,272,29
  4462                        	.sym	HBRUSH,0,129,14,32
  4463                        	.sym	HCURSOR,0,129,14,32
  4464                        	.sym	HICON,0,129,14,32
  4465                        	.sym	HINSTANCE,0,129,14,32
  4466                        	.sym	FXWndProc,0,654,14,32
  4467                        	.sym	PDRECT,0,138,14,32,28
  4468                        	.sym	DRECT,0,10,14,112,28
  4469                        	.sym	PRECTP,0,138,14,32,27
  4470                        	.sym	RECTP,0,10,14,96,27
  4471                        	.sym	PRECT,0,138,14,32,26
  4472                        	.sym	RECT,0,10,14,112,26
  4473                        	.sym	PPOINT,0,138,14,32,25
  4474                        	.sym	POINT,0,10,14,32,25
  4475                        	.sym	PFXPROPERTY,0,138,14,32,23
  4476                        	.sym	FXPROPERTY,0,10,14,384,23
  4477                        	.sym	PKEYSTATE,0,138,14,32,22
  4478                        	.sym	KEYSTATE,0,10,14,112,22
  4479                        	.sym	SCANCODE,0,14,14,8
  4480                        	.sym	KEYCODE,0,16,14,16
  4481                        	.sym	PFXPROCESSMESSAGE,0,138,14,32,21
  4482                        	.sym	FXPROCESSMESSAGE,0,10,14,112,21
  4483                        	.sym	PFXPROCESS,0,138,14,32,20
  4484                        	.sym	FXPROCESS,0,10,14,800,20
  4485                        	.sym	PDESKTOP_CONTROL,0,138,14,32,19
  4486                        	.sym	DESKTOP_CONTROL,0,10,14,392,19
  4487                        	.sym	PCONSOLE_CONTROL,0,138,14,32,18
  4488                        	.sym	CONSOLE_CONTROL,0,10,14,448,18
  4489                        	.sym	FXProcessProc,0,641,14,32
  4490                        	.sym	PFXCMDMESSAGE,0,138,14,32,17
  4491                        	.sym	FXCMDMESSAGE,0,10,14,312,17
  4492                        	.sym	PFXOSMESSAGE,0,138,14,32,16
  Mon Sep 27 2021  9:39                                                Page 84


  4493                        	.sym	FXOSMESSAGE,0,10,14,312,16
  4494                        	.sym	PINT_REGS,0,138,14,32,15
  4495                        	.sym	INT_REGS,0,10,14,104,15
  4496                        	.sym	TASK_STACK,0,10,14,32,14
  4497                        	.sym	TASK,0,10,14,48,13
  4498                        	.sym	PIRQDATA,0,138,14,32,12
  4499                        	.sym	IRQDATA,0,10,14,48,12
  4500                        	.sym	HMENU,0,129,14,32
  4501                        	.sym	HWND,0,129,14,32
  4502                        	.sym	MSGDATA,0,14,14,8
  4503                        	.sym	MSGDEST,0,18,14,32
  4504                        	.sym	MSGSRC,0,18,14,32
  4505                        	.sym	MSGTYPE,0,16,14,16
  4506                        	.sym	PROCESS_RESOURCE_LIST,0,138,14,32,6
  4507                        	.sym	PROCESS_TLS_LIST,0,138,14,32,6
  4508                        	.sym	SEMAPHORE_LIST,0,138,14,32,6
  4509                        	.sym	FILE_BLOCK_LIST,0,138,14,32,6
  4510                        	.sym	FILE_PATH_LIST,0,138,14,32,6
  4511                        	.sym	PROCEDURE_LIST,0,138,14,32,6
  4512                        	.sym	FILE_HANDLE,0,138,14,32,11
  4513                        	.sym	FILE_BLOCK,0,10,14,552,11
  4514                        	.sym	SEMAPHORE,0,10,14,16,10
  4515                        	.sym	PPROCESS_SIGNAL,0,138,14,32,9
  4516                        	.sym	PROCESS_SIGNAL,0,10,14,16,9
  4517                        	.sym	KRESULT,0,18,14,32
  4518                        	.sym	PKERNEL_ERROR,0,138,14,32,8
  4519                        	.sym	KERNEL_ERROR,0,10,14,32,8
  4520                        	.sym	PROCESS_STATUS,0,16,14,16
  4521                        	.sym	FILE_PATH_NAME,0,142,14,32
  4522                        	.sym	PROCESS_RESOURCE,0,129,14,32
  4523                        	.sym	PROCESS_TLS,0,129,14,32
  4524                        	.sym	PROCESS_CTX,0,129,14,32
  4525                        	.sym	USERID,0,16,14,16
  4526                        	.sym	PROCESS_ID,0,18,14,32
  4527                        	.sym	PROCESS_BANK,0,14,14,8
  4528                        	.sym	PFXQUEUE,0,138,14,32,7
  4529                        	.sym	FXQUEUE,0,10,14,80,7
  4530                        	.sym	PFXNODELIST,0,138,14,32,6
  4531                        	.sym	FXNODELIST,0,10,14,96,6
  4532                        	.sym	NodeListDeallocator,0,641,14,32
  4533                        	.sym	PFXNODE,0,138,14,32,5
  4534                        	.sym	FXNODE,0,10,14,384,5
  4535                        	.sym	PBYTEBITS,0,138,14,32,4
  4536                        	.sym	BYTEBITS,0,10,14,8,4
  4537                        	.sym	HRESULT,0,18,14,32
  4538                        	.sym	LPWCHAR,0,144,14,32
  4539                        	.sym	WCHAR,0,16,14,16
  4540                        	.sym	HSTRINGTABLE,0,129,14,32
  4541                        	.sym	HCOLOR,0,129,14,32
  4542                        	.sym	HFONT,0,129,14,32
  4543                        	.sym	HDC,0,129,14,32
  4544                        	.sym	HPOINTER,0,129,14,32
  4545                        	.sym	uint32_t,0,18,14,32
  4546                        	.sym	uint8_t,0,14,14,8
  4547                        	.sym	LPBOOL,0,142,14,32
  4548                        	.sym	BOOL,0,14,14,8
  4549                        	.sym	DWORD,0,18,14,32
  4550                        	.sym	ULONG,0,18,14,32
  Mon Sep 27 2021  9:39                                                Page 85


  4551                        	.sym	LPLONG,0,135,14,32
  4552                        	.sym	LONG,0,7,14,32
  4553                        	.sym	PUINT,0,144,14,32
  4554                        	.sym	USHORT,0,16,14,16
  4555                        	.sym	UINT,0,16,14,16
  4556                        	.sym	INT,0,5,14,16
  4557                        	.sym	WORD,0,5,14,16
  4558                        	.sym	PBYTE,0,142,14,32
  4559                        	.sym	BYTE,0,14,14,8
  4560                        	.sym	IOPORT,0,142,14,32
  4561                        	.sym	PUCHAR,0,142,14,32
  4562                        	.sym	UCHAR,0,14,14,8
  4563                        	.sym	LPWCSTR,0,142,14,32
  4564                        	.sym	LPCSTR,0,142,14,32
  4565                        	.sym	LPSTR,0,142,14,32
  4566                        	.sym	LPCHAR,0,142,14,32
  4567                        	.sym	CHAR,0,14,14,8
  4568                        	.sym	PUINT_32,0,146,14,32
  4569                        	.sym	UINT_32,0,18,14,32
  4570                        	.sym	PUINT_16,0,144,14,32
  4571                        	.sym	UINT_16,0,16,14,16
  4572                        	.sym	PUINT_8,0,142,14,32
  4573                        	.sym	UINT_8,0,14,14,8
  4574                        	.sym	LPVOID,0,129,14,32
  4575                        	.sym	VOID,0,1,14,32
  4576                        	.sym	~~strcmp,~~strcmp,69,18,0
  4577                        	.sym	~~memcpy,~~memcpy,1089,18,32
  4578                        	.sym	Boolean_T,0,5,14,16
  4579                        	.sym	ldiv_t,0,10,14,64,2
  4580                        	.sym	div_t,0,10,14,32,1
  4581                        	.sym	wctype_t,0,16,14,16
  4582                        	.sym	wint_t,0,16,14,16
  4583                        	.sym	wchar_t,0,14,14,8
  4584                        	.sym	ptrdiff_t,0,7,14,32
  4585                        	.sym	size_t,0,16,14,16
  4586                        	end


      Lines assembled: 4586
      Errors: 0
