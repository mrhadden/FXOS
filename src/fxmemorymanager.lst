  Sat Jul 10 2021  1:15                                                Page 1


                     ***************************************
                     **      WDC 65C816 Macro Assembler   **
                     **                                   **
                     **     Version 3.49.1- Feb  6 2006    **
                     ***************************************

     1                        ;:ts=8
     2             00000001   R0	equ	1
     3             00000005   R1	equ	5
     4             00000009   R2	equ	9
     5             0000000D   R3	equ	13
     6                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxmemorymanager.c",0
     7                        ;
     8                        ;#include "fxmemorymanager.h"
     9                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxmemorymanager.h",0
    10                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos.h",0
    11                        	.file	"G:\devtools\WDCTools\wdc\Tools\include\
                    stdlib.h",0
    12                        	.file	"G:\devtools\WDCTools\wdc\Tools\include\
                    stddef.h",0
    13                        	.line	88
    14                        	.file	"G:\devtools\WDCTools\wdc\Tools\include\
                    stdlib.h",43
    15                        	.stag	fake1_,32,1
    16                        	.member	quot,0,5,8,16
    17                        	.member	rem,16,5,8,16
    18                        	.eos
    19                        	.stag	fake2_,64,2
    20                        	.member	quot,0,7,8,32
    21                        	.member	rem,32,7,8,32
    22                        	.eos
    23                        	.stag	int_sqrt,32,3
    24                        	.member	sqrt,0,16,8,16
    25                        	.member	frac,16,16,8,16
    26                        	.eos
    27                        	.line	205
    28                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos.h",4
    29                        	.file	"G:\devtools\WDCTools\wdc\Tools\include\
                    string.h",0
    30                        	.line	134
    31                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos.h",5
    32                        	.file	"G:\devtools\WDCTools\wdc\Tools\include\
                    ctype.h",0
    33                        	.line	103
    34                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos.h",6
    35                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxtypes.h",0
    36                        	.stag	_fx_bytebits,8,4
    37                        	.member	b7,0,14,17,1
    38                        	.member	b6,1,14,17,1
    39                        	.member	b5,2,14,17,1
    40                        	.member	b4,3,14,17,1
  Sat Jul 10 2021  1:15                                                Page 2


    41                        	.member	b3,4,14,17,1
    42                        	.member	b2,5,14,17,1
    43                        	.member	b1,6,14,17,1
    44                        	.member	b0,7,14,17,1
    45                        	.eos
    46                        	.stag	_fx_node,384,5
    47                        	.member	type,0,14,8,8
    48                        	.member	Reserved0,8,14,8,8
    49                        	.member	data,16,129,8,32
    50                        	.member	last,48,138,8,32,5
    51                        	.member	next,80,138,8,32,5
    52                        	.member	name,112,110,8,0,32
    53                        	.member	Reserved1,368,16,8,16
    54                        	.eos
    55                        	.stag	_fx_nodelist,96,6
    56                        	.member	listhead,0,138,8,32,5
    57                        	.member	listData,32,129,8,32
    58                        	.member	deallocator,64,641,8,32
    59                        	.eos
    60                        	.stag	_fx_queue,80,7
    61                        	.member	count,0,5,8,16
    62                        	.member	front,16,138,8,32,5
    63                        	.member	rear,48,138,8,32,5
    64                        	.eos
    65                        	.stag	fake8_,32,8
    66                        	.member	subsystem,0,14,8,8
    67                        	.member	level,8,14,8,8
    68                        	.member	error,16,16,8,16
    69                        	.eos
    70                        	.stag	_fx_process_signal,16,9
    71                        	.member	cbSize,0,16,8,16
    72                        	.eos
    73                        	.stag	_fx_semaphore,16,10
    74                        	.member	reserved,0,5,8,16
    75                        	.eos
    76                        	.stag	_fx_fileBlock,552,11
    77                        	.member	openCount,0,16,8,16
    78                        	.member	lockCount,16,16,8,16
    79                        	.member	dirty,32,14,8,8
    80                        	.member	fileBuffer,40,110,8,0,64
    81                        	.eos
    82                        	.stag	_fx_irq_data,48,12
    83                        	.member	line,0,5,8,16
    84                        	.member	keycode,16,142,8,32
    85                        	.eos
    86                        	.stag	_task,48,13
    87                        	.member	SPL,0,14,8,8
    88                        	.member	SPH,8,14,8,8
    89                        	.member	pstack,16,142,8,32
    90                        	.eos
    91                        	.stag	_task_stack,32,14
    92                        	.member	SS,0,142,8,32
    93                        	.eos
    94                        	.stag	int_regs,104,15
    95                        	.member	PB,0,14,8,8
    96                        	.member	PH,8,14,8,8
    97                        	.member	PL,16,14,8,8
    98                        	.member	PP,24,14,8,8
  Sat Jul 10 2021  1:15                                                Page 3


    99                        	.member	DB,32,14,8,8
   100                        	.member	DH,40,14,8,8
   101                        	.member	DL,48,14,8,8
   102                        	.member	AH,56,14,8,8
   103                        	.member	AL,64,14,8,8
   104                        	.member	XH,72,14,8,8
   105                        	.member	XL,80,14,8,8
   106                        	.member	YH,88,14,8,8
   107                        	.member	YL,96,14,8,8
   108                        	.eos
   109                        	.stag	_fx_eventMessage,304,16
   110                        	.member	src,0,18,8,32
   111                        	.member	dest,32,18,8,32
   112                        	.member	type,64,16,8,16
   113                        	.member	hwnd,80,129,8,32
   114                        	.member	pheap,112,129,8,32
   115                        	.member	msgTime,144,18,8,32
   116                        	.member	data,176,110,8,0,16
   117                        	.eos
   118                        	.stag	_fx_cmdMessage,304,17
   119                        	.member	src,0,18,8,32
   120                        	.member	dest,32,18,8,32
   121                        	.member	type,64,16,8,16
   122                        	.member	hwnd,80,129,8,32
   123                        	.member	pheap,112,129,8,32
   124                        	.member	msgTime,144,18,8,32
   125                        	.member	cmdCId,176,16,8,16
   126                        	.member	cmdMId,192,16,8,16
   127                        	.member	parameter1,208,18,8,32
   128                        	.member	parameter2,240,18,8,32
   129                        	.member	parameter3,272,18,8,32
   130                        	.eos
   131                        	.stag	_fx_console_ctl,448,18
   132                        	.member	maxCols,0,5,8,16
   133                        	.member	maxRows,16,5,8,16
   134                        	.member	curX,32,5,8,16
   135                        	.member	curY,48,5,8,16
   136                        	.member	fgColor,64,5,8,16
   137                        	.member	bgColor,80,5,8,16
   138                        	.member	mode,96,14,8,8
   139                        	.member	kbBuffer,104,101,8,0,16
   140                        	.member	screenBuffer,360,142,8,32
   141                        	.member	desktopMode,392,14,8,8
   142                        	.member	lastMouseButton,400,5,8,16
   143                        	.member	lastMouseX,416,5,8,16
   144                        	.member	lastMouseY,432,5,8,16
   145                        	.eos
   146                        	.stag	_fx_desktop_ctl,392,19
   147                        	.member	desktopMode,0,14,8,8
   148                        	.member	cursorCtl,8,5,8,16
   149                        	.member	cursorState,24,5,8,16
   150                        	.member	backgroundColor,40,5,8,16
   151                        	.member	foregroundColor,56,5,8,16
   152                        	.member	menuMode,72,5,8,16
   153                        	.member	lastMouseButton,88,5,8,16
   154                        	.member	lastMouseX,104,5,8,16
   155                        	.member	lastMouseY,120,5,8,16
   156                        	.member	currentDiskName,136,142,8,32
  Sat Jul 10 2021  1:15                                                Page 4


   157                        	.member	diskNodes,168,129,8,32
   158                        	.member	titleNodes,200,129,8,32
   159                        	.member	menuNodes,232,129,8,32
   160                        	.member	iconNodes,264,129,8,32
   161                        	.member	windowNodes,296,129,8,32
   162                        	.member	fontNodes,328,129,8,32
   163                        	.member	wndProc,360,138,8,32,6
   164                        	.eos
   165                        	.stag	_fx_process,800,20
   166                        	.member	cbSize,0,5,8,16
   167                        	.member	procId,16,18,8,32
   168                        	.member	parentId,48,18,8,32
   169                        	.member	ctx,80,129,8,32
   170                        	.member	userId,112,16,8,16
   171                        	.member	status,128,16,8,16
   172                        	.member	foregroundActive,144,14,8,8
   173                        	.member	tls,152,1121,8,32,8
   174                        	.member	commandLine,408,142,8,32
   175                        	.member	semaphores,440,138,8,32,6
   176                        	.member	fileHandles,472,138,8,32,6
   177                        	.member	pathList,504,138,8,32,6
   178                        	.member	resources,536,138,8,32,6
   179                        	.member	timerAware,568,14,8,8
   180                        	.member	timerTicks,576,112,8,0,2
   181                        	.member	timerTickCount,608,112,8,0,2
   182                        	.member	kernelError,640,10,8,32,8
   183                        	.member	consoleCtl,672,138,8,32,18
   184                        	.member	desktopCtl,704,138,8,32,19
   185                        	.member	execProc,736,641,8,32
   186                        	.member	startupArgs,768,129,8,32
   187                        	.eos
   188                        	.stag	_fxProcessMessage,112,21
   189                        	.member	src,0,18,8,32
   190                        	.member	dest,32,18,8,32
   191                        	.member	type,64,16,8,16
   192                        	.member	processInfo,80,138,8,32,20
   193                        	.eos
   194                        	.stag	_k_key_state,112,22
   195                        	.member	scanCode,0,14,8,8
   196                        	.member	isShifted,8,14,8,8
   197                        	.member	isAlt,16,14,8,8
   198                        	.member	isExtended,24,14,8,8
   199                        	.member	isCapsLock,32,14,8,8
   200                        	.member	isNumLock,40,14,8,8
   201                        	.member	isScrollLock,48,14,8,8
   202                        	.member	keyChar,56,16,8,16
   203                        	.member	scanTime,72,18,8,32
   204                        	.member	ledStatus,104,14,8,8
   205                        	.eos
   206                        	.stag	_fx_property,384,23
   207                        	.member	name,0,110,8,0,16
   208                        	.member	value,128,110,8,0,32
   209                        	.eos
   210                        	.utag	_24bitPointer,32,24
   211                        	.member	address,0,142,11,32
   212                        	.member	bytes,0,110,11,0,4
   213                        	.eos
   214                        	.stag	_PointStruct,32,25
  Sat Jul 10 2021  1:15                                                Page 5


   215                        	.member	x,0,5,8,16
   216                        	.member	y,16,5,8,16
   217                        	.eos
   218                        	.stag	_RectStruct,112,26
   219                        	.member	x,0,5,8,16
   220                        	.member	y,16,5,8,16
   221                        	.member	z,32,18,8,32
   222                        	.member	width,64,5,8,16
   223                        	.member	height,80,5,8,16
   224                        	.member	attr,96,5,8,16
   225                        	.eos
   226                        	.stag	fake27_,96,27
   227                        	.member	name,0,142,8,32
   228                        	.member	topLeft,32,10,8,32,25
   229                        	.member	bottomRight,64,10,8,32,25
   230                        	.eos
   231                        	.stag	fake28_,112,28
   232                        	.member	x,0,5,8,16
   233                        	.member	y,16,5,8,16
   234                        	.member	z,32,5,8,16
   235                        	.member	width,48,5,8,16
   236                        	.member	height,64,5,8,16
   237                        	.member	data,80,18,8,32
   238                        	.eos
   239                        	.stag	_k_WindowClass,272,29
   240                        	.member	cbSize,0,16,8,16
   241                        	.member	style,16,16,8,16
   242                        	.member	styleEx,32,16,8,16
   243                        	.member	pWndProc,48,654,8,32
   244                        	.member	hInstance,80,129,8,32
   245                        	.member	hIcon,112,129,8,32
   246                        	.member	hCursor,144,129,8,32
   247                        	.member	hbrBackground,176,129,8,32
   248                        	.member	lpszMenuName,208,142,8,32
   249                        	.member	lpszClassName,240,142,8,32
   250                        	.eos
   251                        	.stag	_ClickableRect,152,30
   252                        	.member	area,0,10,8,112,26
   253                        	.member	z,112,18,8,32
   254                        	.member	enabled,144,14,8,8
   255                        	.eos
   256                        	.stag	_NCClickableRect,136,31
   257                        	.member	area,0,10,8,112,26
   258                        	.member	msgType,112,16,8,16
   259                        	.member	enabled,128,14,8,8
   260                        	.eos
   261                        	.stag	_DragData,216,32
   262                        	.member	area,0,10,8,112,26
   263                        	.member	xoffset,112,5,8,16
   264                        	.member	yoffset,128,5,8,16
   265                        	.member	msgType,144,16,8,16
   266                        	.member	ncAction,160,16,8,16
   267                        	.member	isDrag,176,14,8,8
   268                        	.member	isResize,184,14,8,8
   269                        	.member	canDrag,192,14,8,8
   270                        	.member	canDrop,200,14,8,8
   271                        	.member	didDrag,208,14,8,8
   272                        	.eos
  Sat Jul 10 2021  1:15                                                Page 6


   273                        	.stag	_k_WindowStruct,3904,33
   274                        	.member	cbSize,0,16,8,16
   275                        	.member	style,16,18,8,32
   276                        	.member	styleEx,48,18,8,32
   277                        	.member	win_id,80,5,8,16
   278                        	.member	win_x,96,5,8,16
   279                        	.member	win_y,112,5,8,16
   280                        	.member	win_width,128,5,8,16
   281                        	.member	win_height,144,5,8,16
   282                        	.member	win_xoffset,160,5,8,16
   283                        	.member	win_yoffset,176,5,8,16
   284                        	.member	win_cxoffset,192,5,8,16
   285                        	.member	win_cyoffset,208,5,8,16
   286                        	.member	wndRect,224,10,8,112,26
   287                        	.member	clientRect,336,10,8,112,26
   288                        	.member	nonclientGadgets,448,106,8,0,31,16
   289                        	.member	clickable,2624,129,8,32
   290                        	.member	win_title,2656,110,8,0,32
   291                        	.member	Reserved0,2912,16,8,16
   292                        	.member	win_class,2928,110,8,0,16
   293                        	.member	win_class_name,3056,110,8,0,32
   294                        	.member	nBitmapLayer,3312,16,8,16
   295                        	.member	bgRegion,3328,129,8,32
   296                        	.member	procid,3360,18,8,32
   297                        	.member	pWndClass,3392,138,8,32,29
   298                        	.member	pParentWindow,3424,129,8,32
   299                        	.member	hMenu,3456,129,8,32
   300                        	.member	hPointer,3488,129,8,32
   301                        	.member	hBackground,3520,129,8,32
   302                        	.member	pChildWindows,3552,138,8,32,6
   303                        	.member	pChildHitList,3584,138,8,32,6
   304                        	.member	isVisible,3616,14,8,8
   305                        	.member	windowData,3624,129,8,32
   306                        	.member	clientData,3656,1121,8,32,6
   307                        	.member	isClosed,3848,14,8,8
   308                        	.member	isClosing,3856,14,8,8
   309                        	.member	isDesktop,3864,14,8,8
   310                        	.member	clickableNode,3872,138,8,32,5
   311                        	.eos
   312                        	.stag	_k_WindowStructEx,3880,34
   313                        	.member	cbSize,0,16,8,16
   314                        	.member	style,16,18,8,32
   315                        	.member	styleEx,48,18,8,32
   316                        	.member	win_id,80,5,8,16
   317                        	.member	win_x,96,5,8,16
   318                        	.member	win_y,112,5,8,16
   319                        	.member	win_width,128,5,8,16
   320                        	.member	win_height,144,5,8,16
   321                        	.member	win_xoffset,160,5,8,16
   322                        	.member	win_yoffset,176,5,8,16
   323                        	.member	win_cxoffset,192,5,8,16
   324                        	.member	win_cyoffset,208,5,8,16
   325                        	.member	wndRect,224,10,8,112,26
   326                        	.member	clientRect,336,10,8,112,26
   327                        	.member	nonclientGadgets,448,106,8,0,31,16
   328                        	.member	clickable,2624,129,8,32
   329                        	.member	win_title,2656,110,8,0,32
   330                        	.member	Reserved0,2912,16,8,16
  Sat Jul 10 2021  1:15                                                Page 7


   331                        	.member	win_class,2928,110,8,0,16
   332                        	.member	nBitmapLayer,3056,16,8,16
   333                        	.member	procid,3072,18,8,32
   334                        	.member	pWndClass,3104,138,8,32,29
   335                        	.member	pParentWindow,3136,129,8,32
   336                        	.member	hMenu,3168,129,8,32
   337                        	.member	hPointer,3200,129,8,32
   338                        	.member	hBackground,3232,129,8,32
   339                        	.member	pChildWindows,3264,138,8,32,6
   340                        	.member	pChildHitList,3296,138,8,32,6
   341                        	.member	isVisible,3328,14,8,8
   342                        	.member	windowData,3336,129,8,32
   343                        	.member	clientData,3368,1121,8,32,4
   344                        	.member	isClosed,3496,14,8,8
   345                        	.member	hWnd,3504,129,8,32
   346                        	.member	localRect,3536,10,8,112,26
   347                        	.member	globalRect,3648,10,8,112,26
   348                        	.member	clientOffsetRect,3760,10,8,112,26
   349                        	.member	isDesktop,3872,14,8,8
   350                        	.eos
   351                        	.stag	_FontMetric,32,35
   352                        	.member	width,0,5,8,16
   353                        	.member	height,16,5,8,16
   354                        	.eos
   355                        	.stag	_MenuStruct,280,36
   356                        	.member	cx,0,5,8,16
   357                        	.member	cy,16,5,8,16
   358                        	.member	width,32,5,8,16
   359                        	.member	height,48,5,8,16
   360                        	.member	fcolor,64,14,8,8
   361                        	.member	bcolor,72,14,8,8
   362                        	.member	chromeLeft,80,14,8,8
   363                        	.member	chromeRight1,88,14,8,8
   364                        	.member	chromeRight2,96,14,8,8
   365                        	.member	hFont,104,129,8,32
   366                        	.member	itemId,136,16,8,16
   367                        	.member	pCaption,152,142,8,32
   368                        	.member	subMenus,184,138,8,32,6
   369                        	.member	pBackground,216,129,8,32
   370                        	.member	hWndOwner,248,129,8,32
   371                        	.eos
   372                        	.stag	fake37_,160,37
   373                        	.member	menuId,0,16,8,16
   374                        	.member	caption,16,142,8,32
   375                        	.member	rect,48,10,8,112,26
   376                        	.eos
   377                        	.stag	fake38_,5152,38
   378                        	.member	pParent,0,138,8,32,33
   379                        	.member	rect,32,10,8,112,26
   380                        	.member	captions,144,1134,8,32,24
   381                        	.member	chrome,912,110,8,0,24
   382                        	.member	ids,1104,112,8,0,24
   383                        	.member	clickable,1488,106,8,0,30,24
   384                        	.member	selected,5136,16,8,16
   385                        	.eos
   386                        	.stag	_fx_button_t,96,39
   387                        	.member	pCaption,0,142,8,32
   388                        	.member	cCaption,32,16,8,16
  Sat Jul 10 2021  1:15                                                Page 8


   389                        	.member	data,48,129,8,32
   390                        	.member	captionPixelWidth,80,16,8,16
   391                        	.eos
   392                        	.stag	_fx_scrollbar_t,240,40
   393                        	.member	min,0,16,8,16
   394                        	.member	max,16,16,8,16
   395                        	.member	increment,32,16,8,16
   396                        	.member	stopsize,48,16,8,16
   397                        	.member	location,64,5,8,16
   398                        	.member	state,80,5,8,16
   399                        	.member	rectThumb,96,10,8,112,26
   400                        	.member	data,208,129,8,32
   401                        	.eos
   402                        	.stag	_fx_listbox_t,240,41
   403                        	.member	pos,0,5,8,16
   404                        	.member	selected,16,16,8,16
   405                        	.member	offsetX,32,5,8,16
   406                        	.member	offsetY,48,5,8,16
   407                        	.member	inc,64,5,8,16
   408                        	.member	direction,80,5,8,16
   409                        	.member	top,96,5,8,16
   410                        	.member	bottom,112,5,8,16
   411                        	.member	indexTop,128,5,8,16
   412                        	.member	indexBottom,144,5,8,16
   413                        	.member	maxItems,160,16,8,16
   414                        	.member	fontSet,176,142,8,32
   415                        	.member	data,208,129,8,32
   416                        	.eos
   417                        	.stag	_fx_textbox_t,144,42
   418                        	.member	pos,0,5,8,16
   419                        	.member	selected,16,16,8,16
   420                        	.member	offsetX,32,5,8,16
   421                        	.member	offsetY,48,5,8,16
   422                        	.member	isShifted,64,14,8,8
   423                        	.member	cursorState,72,14,8,8
   424                        	.member	fontSet,80,142,8,32
   425                        	.member	data,112,129,8,32
   426                        	.eos
   427                        	.stag	_fx_msgbox_t,144,43
   428                        	.member	pos,0,5,8,16
   429                        	.member	selected,16,16,8,16
   430                        	.member	offsetX,32,5,8,16
   431                        	.member	offsetY,48,5,8,16
   432                        	.member	isShifted,64,14,8,8
   433                        	.member	cursorState,72,14,8,8
   434                        	.member	fontSet,80,142,8,32
   435                        	.member	data,112,129,8,32
   436                        	.eos
   437                        	.stag	_fx_menuAnchor_t,272,44
   438                        	.member	pCaption,0,142,8,32
   439                        	.member	renderLayoutX,32,16,8,16
   440                        	.member	renderLayoutY,48,16,8,16
   441                        	.member	captionPixelWidth,64,16,8,16
   442                        	.member	data,80,129,8,32
   443                        	.member	droppedWindow,112,138,8,32,33
   444                        	.member	bytes,144,110,8,0,16
   445                        	.eos
   446                        	.stag	_SubMenuStruct,64,45
  Sat Jul 10 2021  1:15                                                Page 9


   447                        	.member	caption,0,142,8,32
   448                        	.member	action,32,641,8,32
   449                        	.eos
   450                        	.stag	_SubMenuListStruct,40,46
   451                        	.member	cMenus,0,14,8,8
   452                        	.member	psubmenus,8,9354,8,32,45
   453                        	.eos
   454                        	.stag	_fx_ComBuffer,2080,47
   455                        	.member	cbSize,0,16,8,16
   456                        	.member	cbBuffer,16,16,8,16
   457                        	.member	buffer,32,110,8,0,256
   458                        	.eos
   459                        	.stag	_fx_resource_header,72,48
   460                        	.member	magic,0,110,8,0,4
   461                        	.member	major,32,14,8,8
   462                        	.member	minor,40,14,8,8
   463                        	.member	type,48,14,8,8
   464                        	.member	reserved,56,14,8,8
   465                        	.member	resheaderSize,64,14,8,8
   466                        	.eos
   467                        	.stag	_fx_resource_header_font,144,49
   468                        	.member	title,0,110,8,0,16
   469                        	.member	height,128,14,8,8
   470                        	.member	width,136,14,8,8
   471                        	.eos
   472                        	.line	1010
   473                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos.h",8
   474                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxstringtable.h",0
   475                        	.line	89
   476                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos.h",9
   477                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxc256u.h",0
   478                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxtypes.h",0
   479                        	.line	1010
   480                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxc256u.h",5
   481                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fmx_vicky.h",0
   482                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxtypes.h",0
   483                        	.line	1010
   484                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fmx_vicky.h",11
   485                        	.line	72
   486                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxc256u.h",6
   487                        	.line	1960
   488                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos.h",16
   489                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxkernel.h",0
   490                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos.h",0
   491                        	.line	30
  Sat Jul 10 2021  1:15                                                Page 10


   492                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxkernel.h",5
   493                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxnode.h",0
   494                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxtypes.h",0
   495                        	.line	1010
   496                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxnode.h",11
   497                        	.line	114
   498                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxkernel.h",6
   499                        	.stag	_fx_api_call_table,8192,50
   500                        	.member	call_table,0,1121,8,32,256
   501                        	.eos
   502                        	.stag	_fx_zero_page,824,51
   503                        	.member	fxos_mouse_byte_0,0,14,8,8
   504                        	.member	fxos_mouse_byte_1,8,14,8,8
   505                        	.member	fxos_mouse_byte_2,16,14,8,8
   506                        	.member	fxos_mouse_byte_t,24,14,8,8
   507                        	.member	fxos_mouse_byte_x_l,32,14,8,8
   508                        	.member	fxos_mouse_byte_x_h,40,14,8,8
   509                        	.member	fxos_mouse_byte_y_l,48,14,8,8
   510                        	.member	fxos_mouse_byte_y_h,56,14,8,8
   511                        	.member	fxos_key_byte_0,64,14,8,8
   512                        	.member	fxos_key_byte_1,72,14,8,8
   513                        	.member	fxos_key_byte_2,80,14,8,8
   514                        	.member	fxos_mouse_ctl,88,14,8,8
   515                        	.member	fxos_mouse_index,96,14,8,8
   516                        	.member	fxos_mouse_status,104,14,8,8
   517                        	.member	fxos_mouse_dbg_1,112,18,8,32
   518                        	.member	fxos_mouse_dbg_2,144,18,8,32
   519                        	.member	fxos_mouse_dbg_3,176,18,8,32
   520                        	.member	fxos_vicky_byte_0,208,14,8,8
   521                        	.member	fxos_vicky_byte_1,216,14,8,8
   522                        	.member	fxos_vicky_byte_2,224,14,8,8
   523                        	.member	VersionMajor,232,16,8,16
   524                        	.member	VersionMinor,248,16,8,16
   525                        	.member	VersionRelease,264,16,8,16
   526                        	.member	topMemory,280,18,8,32
   527                        	.member	bottomMemory,312,18,8,32
   528                        	.member	availableMemory,344,18,8,32
   529                        	.member	availableMemoryK,376,18,8,32
   530                        	.member	availableHeapMemory,408,18,8,32
   531                        	.member	availableHeapMemoryK,440,18,8,32
   532                        	.member	fxos_console_row,472,16,8,16
   533                        	.member	fxos_console_col,488,16,8,16
   534                        	.member	executive,504,129,8,32
   535                        	.member	eventmanager,536,129,8,32
   536                        	.member	devicemanager,568,129,8,32
   537                        	.member	windowmanager,600,129,8,32
   538                        	.member	fxos_kernel_api,632,138,8,32,50
   539                        	.member	fxos_dos_api,664,138,8,32,50
   540                        	.member	fxos_gfx_api,696,138,8,32,50
   541                        	.member	fxos_gui_api,728,138,8,32,50
   542                        	.member	fxos_con_api,760,138,8,32,50
   543                        	.member	fxos_reserved_2_api,792,138,8,32,50
   544                        	.eos
  Sat Jul 10 2021  1:15                                                Page 11


   545                        	.stag	_fx_environment,96,52
   546                        	.member	variables,0,142,8,32
   547                        	.member	reserved1,32,5,8,16
   548                        	.member	reserved2,48,5,8,16
   549                        	.member	reserved3,64,5,8,16
   550                        	.member	reserved4,80,5,8,16
   551                        	.eos
   552                        	.stag	_debug_byte_bits,8,53
   553                        	.member	bit7,0,14,17,1
   554                        	.member	bit6,1,14,17,1
   555                        	.member	bit5,2,14,17,1
   556                        	.member	bit4,3,14,17,1
   557                        	.member	bit3,4,14,17,1
   558                        	.member	bit2,5,14,17,1
   559                        	.member	bit1,6,14,17,1
   560                        	.member	bit0,7,14,17,1
   561                        	.eos
   562                        	.stag	_k_segmentheader,160,54
   563                        	.member	version_major,0,14,8,8
   564                        	.member	version_minor,8,14,8,8
   565                        	.member	length,16,5,8,16
   566                        	.member	segment_start_addr,32,7,8,32
   567                        	.member	segment_end_addr,64,7,8,32
   568                        	.member	segment_size,96,7,8,32
   569                        	.member	main_entry_addr,128,7,8,32
   570                        	.eos
   571                        	.stag	_fx_device_driver,776,55
   572                        	.member	name,0,110,8,0,32
   573                        	.member	version,256,110,8,0,16
   574                        	.member	hmajor,384,110,8,0,8
   575                        	.member	hminor,448,110,8,0,8
   576                        	.member	type,512,14,8,8
   577                        	.member	designation,520,110,8,0,6
   578                        	.member	reserved_1,568,16,8,16
   579                        	.member	f_driver_irq,584,129,8,32
   580                        	.member	driver_context,616,129,8,32
   581                        	.member	f_driver_load,648,129,8,32
   582                        	.member	f_driver_read,680,129,8,32
   583                        	.member	f_driver_write,712,129,8,32
   584                        	.member	f_driver_unload,744,129,8,32
   585                        	.eos
   586                        	.stag	_fx_block_device_driver,808,56
   587                        	.member	name,0,110,8,0,32
   588                        	.member	version,256,110,8,0,16
   589                        	.member	hmajor,384,110,8,0,8
   590                        	.member	hminor,448,110,8,0,8
   591                        	.member	type,512,14,8,8
   592                        	.member	designation,520,110,8,0,6
   593                        	.member	reserved_1,568,16,8,16
   594                        	.member	f_driver_irq,584,129,8,32
   595                        	.member	driver_context,616,129,8,32
   596                        	.member	f_driver_load,648,129,8,32
   597                        	.member	f_driver_read,680,129,8,32
   598                        	.member	f_driver_write,712,129,8,32
   599                        	.member	f_driver_unload,744,129,8,32
   600                        	.member	f_driver_command,776,129,8,32
   601                        	.eos
   602                        	.line	400
  Sat Jul 10 2021  1:15                                                Page 12


   603                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos.h",22
   604                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxconsole.h",0
   605                        	.file	"G:\devtools\WDCTools\wdc\Tools\include\
                    string.h",0
   606                        	.line	134
   607                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxconsole.h",5
   608                        	.file	"G:\devtools\WDCTools\wdc\Tools\include\
                    stdlib.h",0
   609                        	.line	205
   610                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxconsole.h",6
   611                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxtypes.h",0
   612                        	.line	1010
   613                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxconsole.h",7
   614                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxc256u.h",0
   615                        	.line	1960
   616                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxconsole.h",12
   617                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxstring.h",0
   618                        	.file	"G:\devtools\WDCTools\wdc\Tools\include\
                    stdlib.h",0
   619                        	.line	205
   620                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxstring.h",5
   621                        	.file	"G:\devtools\WDCTools\wdc\Tools\include\
                    string.h",0
   622                        	.line	134
   623                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxstring.h",6
   624                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxtypes.h",0
   625                        	.line	1010
   626                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxstring.h",7
   627                        	.stag	_fx_string,64,57
   628                        	.member	size,0,16,8,16
   629                        	.member	pos,16,5,8,16
   630                        	.member	buffer,32,142,8,32
   631                        	.eos
   632                        	.line	139
   633                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxconsole.h",17
   634                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxeventmanager.h",0
   635                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos.h",0
   636                        	.line	30
   637                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxeventmanager.h",5
   638                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxexec.h",0
  Sat Jul 10 2021  1:15                                                Page 13


   639                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxtypes.h",0
   640                        	.line	1010
   641                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxexec.h",5
   642                        	.stag	_fxos_executive_vtable,128,58
   643                        	.member	Init,0,8833,8,32
   644                        	.member	Configure,32,656,8,32
   645                        	.member	Query,64,656,8,32
   646                        	.member	Uninit,96,641,8,32
   647                        	.eos
   648                        	.line	86
   649                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxeventmanager.h",6
   650                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxnode.h",0
   651                        	.line	114
   652                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxeventmanager.h",7
   653                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxconsole.h",0
   654                        	.line	208
   655                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxeventmanager.h",8
   656                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxwindowmanager.h",0
   657                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos.h",0
   658                        	.line	30
   659                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxwindowmanager.h",5
   660                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxmemorymanager.h",0
   661                        	.line	105
   662                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxwindowmanager.h",6
   663                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxeventmanager.h",0
   664                        	.line	564
   665                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxwindowmanager.h",7
   666                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxgui.h",0
   667                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxfont.h",0
   668                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxtypes.h",0
   669                        	.line	1010
   670                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxfont.h",6
   671                        	.line	74
   672                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxgui.h",5
   673                        	.stag	_click_detected,64,59
   674                        	.member	window,0,138,8,32,33
   675                        	.member	handler,32,641,8,32
   676                        	.eos
   677                        	.stag	_current_palette_map,400,60
  Sat Jul 10 2021  1:15                                                Page 14


   678                        	.member	CUR_DESKTOP,0,5,8,16
   679                        	.member	CUR_BACKGROUND,16,5,8,16
   680                        	.member	CUR_FONT,32,5,8,16
   681                        	.member	CUR_SELECTED_FONT,48,5,8,16
   682                        	.member	CUR_HIGHLIGHT_COLOR,64,5,8,16
   683                        	.member	CUR_WINDOWFRAME,80,5,8,16
   684                        	.member	CUR_WINDOWBORDER,96,5,8,16
   685                        	.member	CUR_WINDOWSHADOW,112,5,8,16
   686                        	.member	CUR_MENU,128,5,8,16
   687                        	.member	CUR_GADGET,144,5,8,16
   688                        	.member	CUR_COLOR,160,101,8,0,15
   689                        	.eos
   690                        	.line	359
   691                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxwindowmanager.h",8
   692                        	.stag	_fxos_winman_vtable,160,61
   693                        	.member	Events,0,641,8,32
   694                        	.member	ConfigureWindowManager,32,656,8,32
   695                        	.member	ProcessWindowEvent,64,8833,8,32
   696                        	.member	QueryWindowManager,96,656,8,32
   697                        	.member	DoWndProcs,128,641,8,32
   698                        	.eos
   699                        	.stag	fake62_,64,62
   700                        	.member	type,0,16,8,16
   701                        	.member	size,16,16,8,16
   702                        	.member	desktopAction,32,129,8,32
   703                        	.eos
   704                        	.stag	fake63_,96,63
   705                        	.member	type,0,16,8,16
   706                        	.member	caption,16,138,8,32,57
   707                        	.member	buttonType,48,16,8,16
   708                        	.member	x,64,5,8,16
   709                        	.member	y,80,5,8,16
   710                        	.eos
   711                        	.stag	_childMessage_t,64,64
   712                        	.member	msgType,0,16,8,16
   713                        	.member	msgData,16,129,8,32
   714                        	.member	dataSize,48,16,8,16
   715                        	.eos
   716                        	.line	581
   717                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxeventmanager.h",9
   718                        	.stag	_fx_main_loopvars,16,65
   719                        	.member	dummy,0,5,8,16
   720                        	.eos
   721                        	.stag	_fxMouseMessageData,64,66
   722                        	.member	button1,0,14,8,8
   723                        	.member	button2,8,14,8,8
   724                        	.member	button3,16,14,8,8
   725                        	.member	button4,24,14,8,8
   726                        	.member	x,32,16,8,16
   727                        	.member	y,48,16,8,16
   728                        	.eos
   729                        	.utag	marshalled_data,32,67
   730                        	.member	byteValue,0,14,11,8
   731                        	.member	verbValue,0,110,11,0,2
   732                        	.member	intValue,0,16,11,16
   733                        	.member	longValue,0,18,11,32
  Sat Jul 10 2021  1:15                                                Page 15


   734                        	.member	pointerValue,0,129,11,32
   735                        	.eos
   736                        	.stag	_fx_eventProcess,64,68
   737                        	.member	process,0,138,8,32,20
   738                        	.member	eventProc,32,641,8,32
   739                        	.eos
   740                        	.stag	_mouse_msg_state,184,69
   741                        	.member	lastEvent,0,18,8,32
   742                        	.member	buttonLeftDown,32,14,8,8
   743                        	.member	lastLeftDown,40,18,8,32
   744                        	.member	buttonRightDown,72,14,8,8
   745                        	.member	lastRightDown,80,18,8,32
   746                        	.member	buttonMiddleDown,112,14,8,8
   747                        	.member	lastMiddleDown,120,18,8,32
   748                        	.member	lastX,152,16,8,16
   749                        	.member	lastY,168,16,8,16
   750                        	.eos
   751                        	.stag	_fxos_eventmanager_vtable,192,70
   752                        	.member	EventQueue,0,138,8,32,7
   753                        	.member	Init,32,8833,8,32
   754                        	.member	Run,64,656,8,32
   755                        	.member	Configure,96,656,8,32
   756                        	.member	Query,128,656,8,32
   757                        	.member	Uninit,160,641,8,32
   758                        	.eos
   759                        	.stag	_k_clipboard_data,168,71
   760                        	.member	type,0,14,8,8
   761                        	.member	readable,8,110,8,0,16
   762                        	.member	data,136,129,8,32
   763                        	.eos
   764                        	.line	564
   765                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxconsole.h",18
   766                        	.stag	_fx_spinner_ctx,48,72
   767                        	.member	index,0,5,8,16
   768                        	.member	spinner,16,142,8,32
   769                        	.eos
   770                        	.stag	_fx_console_ctx,1144,73
   771                        	.member	lineBufferIndex,0,5,8,16
   772                        	.member	lineBuffer,16,110,8,0,128
   773                        	.member	isShifted,1040,14,8,8
   774                        	.member	userData,1048,129,8,32
   775                        	.member	screenBuffer,1080,129,8,32
   776                        	.member	Reserved1,1112,129,8,32
   777                        	.eos
   778                        	.stag	_token,64,74
   779                        	.member	type,0,5,8,16
   780                        	.member	depth,16,16,8,16
   781                        	.member	text,32,142,8,32
   782                        	.eos
   783                        	.stag	_command_args,64,75
   784                        	.member	proc,0,656,8,32
   785                        	.member	tokens,32,138,8,32,5
   786                        	.eos
   787                        	.line	208
   788                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos.h",23
   789                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
  Sat Jul 10 2021  1:15                                                Page 16


                    space\FXOSv1\src\fxstring.h",0
   790                        	.line	139
   791                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos.h",24
   792                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxnode.h",0
   793                        	.line	114
   794                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos.h",25
   795                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\ff.h",0
   796                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\ffconf.h",0
   797                        	.line	298
   798                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\ff.h",29
   799                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxtypes.h",0
   800                        	.line	1010
   801                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\ff.h",30
   802                        	.stag	fake76_,4504,76
   803                        	.member	fs_type,0,14,8,8
   804                        	.member	pdrv,8,14,8,8
   805                        	.member	n_fats,16,14,8,8
   806                        	.member	wflag,24,14,8,8
   807                        	.member	fsi_flag,32,14,8,8
   808                        	.member	id,40,5,8,16
   809                        	.member	n_rootdir,56,5,8,16
   810                        	.member	csize,72,5,8,16
   811                        	.member	lfnbuf,88,144,8,32
   812                        	.member	last_clst,120,18,8,32
   813                        	.member	free_clst,152,18,8,32
   814                        	.member	n_fatent,184,18,8,32
   815                        	.member	fsize,216,18,8,32
   816                        	.member	volbase,248,18,8,32
   817                        	.member	fatbase,280,18,8,32
   818                        	.member	dirbase,312,18,8,32
   819                        	.member	database,344,18,8,32
   820                        	.member	winsect,376,18,8,32
   821                        	.member	win,408,110,8,0,512
   822                        	.eos
   823                        	.stag	fake77_,128,77
   824                        	.member	fs,0,138,8,32,76
   825                        	.member	id,32,5,8,16
   826                        	.member	attr,48,14,8,8
   827                        	.member	stat,56,14,8,8
   828                        	.member	sclust,64,18,8,32
   829                        	.member	objsize,96,18,8,32
   830                        	.eos
   831                        	.stag	fake78_,4400,78
   832                        	.member	obj,0,10,8,128,77
   833                        	.member	flag,128,14,8,8
   834                        	.member	err,136,14,8,8
   835                        	.member	fptr,144,18,8,32
   836                        	.member	clust,176,18,8,32
   837                        	.member	sect,208,18,8,32
   838                        	.member	dir_sect,240,18,8,32
  Sat Jul 10 2021  1:15                                                Page 17


   839                        	.member	dir_ptr,272,142,8,32
   840                        	.member	buf,304,110,8,0,512
   841                        	.eos
   842                        	.stag	fake79_,416,79
   843                        	.member	obj,0,10,8,128,77
   844                        	.member	dptr,128,18,8,32
   845                        	.member	clust,160,18,8,32
   846                        	.member	sect,192,18,8,32
   847                        	.member	dir,224,142,8,32
   848                        	.member	fn,256,110,8,0,12
   849                        	.member	blk_ofs,352,18,8,32
   850                        	.member	pat,384,142,8,32
   851                        	.eos
   852                        	.stag	fake80_,2224,80
   853                        	.member	fsize,0,18,8,32
   854                        	.member	fdate,32,5,8,16
   855                        	.member	ftime,48,5,8,16
   856                        	.member	fattrib,64,14,8,8
   857                        	.member	altname,72,110,8,0,13
   858                        	.member	fname,176,110,8,0,256
   859                        	.eos
   860                        	.stag	fake81_,80,81
   861                        	.member	fmt,0,14,8,8
   862                        	.member	n_fat,8,14,8,8
   863                        	.member	align,16,16,8,16
   864                        	.member	n_root,32,16,8,16
   865                        	.member	au_size,48,18,8,32
   866                        	.eos
   867                        	.line	429
   868                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos.h",26
   869                        	.line	30
   870                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxmemorymanager.h",5
   871                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\umm_malloc_cfg.h",0
   872                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos_build_parameters.h",0
   873                        	.line	35
   874                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\umm_malloc_cfg.h",8
   875                        	.stag	UMM_HEAP_INFO_t,256,82
   876                        	.member	totalEntries,0,18,8,32
   877                        	.member	usedEntries,32,18,8,32
   878                        	.member	freeEntries,64,18,8,32
   879                        	.member	totalBlocks,96,18,8,32
   880                        	.member	usedBlocks,128,18,8,32
   881                        	.member	freeBlocks,160,18,8,32
   882                        	.member	maxFreeContiguousBlocks,192,18,8,32
   883                        	.member	blockSize,224,18,8,32
   884                        	.eos
   885                        	.line	199
   886                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxmemorymanager.h",6
   887                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\umm_malloc.h",0
   888                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxtypes.h",0
  Sat Jul 10 2021  1:15                                                Page 18


   889                        	.line	1010
   890                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\umm_malloc.h",11
   891                        	.line	24
   892                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxmemorymanager.h",7
   893                        	.stag	_fx_memory_map,2072,83
   894                        	.member	availableMemory,0,18,8,32
   895                        	.member	valid_segments,32,110,8,0,255
   896                        	.eos
   897                        	.stag	_fx_ipc_port,144,84
   898                        	.member	id,0,18,8,32
   899                        	.member	type,32,14,8,8
   900                        	.member	name,40,138,8,32,57
   901                        	.member	time,72,18,8,32
   902                        	.member	queue,104,138,8,32,7
   903                        	.member	reserved_1,136,14,8,8
   904                        	.eos
   905                        	.line	105
   906                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxmemorymanager.c",2
   907                        ;#include "fxos_build_parameters.h"
   908                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos_build_parameters.h",0
   909                        	.line	35
   910                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxmemorymanager.c",3
   911                        ;
   912                        ;static ULONG THIS_MODULE = 0xB0000000;
   913                        	data
   914                        ~~THIS_MODULE:
   915 00:0000: 00 00 00 B0  	dl	$B0000000
   916 00:0004:              	ends
   917                        ;
   918                        ;//LPVOID heap_start = (LPVOID)(0x040000);
   919                        ;//LPVOID heap_end   = (LPVOID)(0x03FFFF);
   920                        ;
   921                        ;LPVOID heap_start = (LPVOID)FXOS_BUILD_NEAR_HEAP_
                    ADDR;
   922                        	data
   923                        	xdef	~~heap_start
   924                        ~~heap_start:
   925 00:0004: 00 00 03 00  	dl	$30000
   926 00:0008:              	ends
   927                        ;LPVOID heap_end   = (LPVOID)FXOS_BUILD_NEAR_HEAP_
                    TOP;
   928                        	data
   929                        	xdef	~~heap_end
   930                        ~~heap_end:
   931 00:0008: FF FF 03 00  	dl	$3FFFF
   932 00:000C:              	ends
   933                        ;
   934                        ;#define IPC_PORT_DEBUG		(0)
   935                        ;#define IPC_PORT_BROADCAST  (1)
   936                        ;#define IPC_PORT_KEYBOARD   (2)
   937                        ;#define IPC_PORT_MOUSE      (3)
   938                        ;#define IPC_PORT_CLIPBOARD  (4)
   939                        ;#define IPC_PORT_DEBUG_HD   (5)
  Sat Jul 10 2021  1:15                                                Page 19


   940                        ;#define IPC_PORT_PROC       (7)
   941                        ;
   942                        ;PIPCPORT 	_ipc_global_ports[8] = {NULL,NUL
                    L,NULL,NULL,NULL,NULL,NULL,NULL};
   943                        	data
   944                        	xdef	~~_ipc_global_ports
   945                        ~~_ipc_global_ports:
   946 00:000C: 00 00 00 00  	dl	$0,$0,$0,$0,$0,$0,$0,$0
       00:0010: 00 00 00 00 
       00:0014: 00 00 00 00 
       00:0018: 00 00 00 00 
       00:001C: 00 00 00 00 
       00:0020: 00 00 00 00 
       00:0024: 00 00 00 00 
       00:0028: 00 00 00 00 
   947 00:002C:              	ends
   948                        ;PFXNODELIST _ipc_ports = NULL;
   949                        	data
   950                        	xdef	~~_ipc_ports
   951                        ~~_ipc_ports:
   952 00:002C: 00 00 00 00  	dl	$0
   953 00:0030:              	ends
   954                        ;
   955                        ;#pragma section CODE=MEMMAN,offset $5:D000
   956                        MEMMAN	section	offset $5:D000
   957 05:D000:              	ends
   958                        ;
   959                        ;
   960                        ;ULONG  k_heap_integrity_check(void)
   961                        ;{
   962                        	.line	27
   963                        	.line	28
   964                        	MEMMAN
   965                        	xdef	~~k_heap_integrity_check
   966                        	func
   967                        	.function	28
   968                        ~~k_heap_integrity_check:
   969                        	longa	on
   970                        	longi	on
   971 05:D000: 3B           	tsc
   972 05:D001: 38           	sec
   973 05:D002: E9 10 00     	sbc	#L2
   974 05:D005: 1B           	tcs
   975 05:D006: 0B           	phd
   976 05:D007: 5B           	tcd
   977                        	.block	28
   978                        ;	UMM_HEAP_INFO *pheapInfo = NULL;
   979                        ;
   980                        ;	if(!umm_integrity_check())
   981             00000000   pheapInfo_1	set	0
   982                        	.sym	pheapInfo,0,138,1,32,82
   983 05:D008: 64 0D        	stz	<L3+pheapInfo_1
   984 05:D00A: 64 0F        	stz	<L3+pheapInfo_1+2
   985                        	.line	31
   986                        ;		k_exec_throw_exception(THIS_MODULE,0xFFF
                    0000,"Memory Fault: Heap corruption detected.",-1);
   987 05:D00C: 22 xx xx xx  	jsl	~~umm_integrity_check
   988 05:D010: AA           	tax
  Sat Jul 10 2021  1:15                                                Page 20


   989 05:D011: F0 03        	beq	L5
   990 05:D013: 82 1B 00     	brl	L10001
   991                        L5:
   992                        	.line	32
   993 05:D016: F4 FF FF     	pea	#<$ffffffff
   994 05:D019: F4 xx xx     	pea	#^L1
   995 05:D01C: F4 xx xx     	pea	#<L1
   996 05:D01F: F4 FF 0F     	pea	#^$fff0000
   997 05:D022: F4 00 00     	pea	#<$fff0000
   998 05:D025: AD xx xx     	lda	|~~THIS_MODULE+2
   999 05:D028: 48           	pha
  1000 05:D029: AD xx xx     	lda	|~~THIS_MODULE
  1001 05:D02C: 48           	pha
  1002 05:D02D: 22 xx xx xx  	jsl	~~k_exec_throw_exception
  1003                        ;
  1004                        ;	pheapInfo = umm_info(NULL,0);
  1005                        L10001:
  1006                        	.line	34
  1007 05:D031: F4 00 00     	pea	#<$0
  1008 05:D034: F4 00 00     	pea	#^$0
  1009 05:D037: F4 00 00     	pea	#<$0
  1010 05:D03A: 22 xx xx xx  	jsl	~~umm_info
  1011 05:D03E: 85 0D        	sta	<L3+pheapInfo_1
  1012 05:D040: 86 0F        	stx	<L3+pheapInfo_1+2
  1013                        ;
  1014                        ;	/*
  1015                        ;	k_debug_integer("heap:blockSize:",pheapInfo->blo
                    ckSize);
  1016                        ;	k_debug_integer("heap:freeBlocks:",pheapInfo->fr
                    eeBlocks);
  1017                        ;	k_debug_integer("heap:maxFreeContiguousBlocks:",
                    pheapInfo->freeEntries);
  1018                        ;	k_debug_integer("heap:totalBlocks:",pheapInfo->t
                    otalBlocks);
  1019                        ;	k_debug_integer("heap:usedBlocks:",pheapInfo->us
                    edBlocks);
  1020                        ;	*/
  1021                        ;
  1022                        ;	k_getZeroPage()->availableHeapMemory = (pheapInf
                    o->freeBlocks * pheapInfo->blockSize);
  1023                        	.line	44
  1024 05:D042: 22 xx xx xx  	jsl	~~k_getZeroPage
  1025 05:D046: 85 01        	sta	<R0
  1026 05:D048: 86 03        	stx	<R0+2
  1027 05:D04A: A0 1E 00     	ldy	#$1e
  1028 05:D04D: B7 0D        	lda	[<L3+pheapInfo_1],Y
  1029 05:D04F: 48           	pha
  1030 05:D050: A0 1C 00     	ldy	#$1c
  1031 05:D053: B7 0D        	lda	[<L3+pheapInfo_1],Y
  1032 05:D055: 48           	pha
  1033 05:D056: A0 16 00     	ldy	#$16
  1034 05:D059: B7 0D        	lda	[<L3+pheapInfo_1],Y
  1035 05:D05B: 48           	pha
  1036 05:D05C: A0 14 00     	ldy	#$14
  1037 05:D05F: B7 0D        	lda	[<L3+pheapInfo_1],Y
  1038 05:D061: 48           	pha
  1039                        	xref	~~~lmul
  1040 05:D062: 22 xx xx xx  	jsl	~~~lmul
  Sat Jul 10 2021  1:15                                                Page 21


  1041 05:D066: 85 05        	sta	<R1
  1042 05:D068: 86 07        	stx	<R1+2
  1043 05:D06A: A5 05        	lda	<R1
  1044 05:D06C: A0 33 00     	ldy	#$33
  1045 05:D06F: 97 01        	sta	[<R0],Y
  1046 05:D071: A5 07        	lda	<R1+2
  1047 05:D073: A0 35 00     	ldy	#$35
  1048 05:D076: 97 01        	sta	[<R0],Y
  1049                        ;	k_getZeroPage()->availableHeapMemoryK = k_getZer
                    oPage()->availableHeapMemory/1024;
  1050                        	.line	45
  1051 05:D078: 22 xx xx xx  	jsl	~~k_getZeroPage
  1052 05:D07C: 85 01        	sta	<R0
  1053 05:D07E: 86 03        	stx	<R0+2
  1054 05:D080: 22 xx xx xx  	jsl	~~k_getZeroPage
  1055 05:D084: 85 09        	sta	<R2
  1056 05:D086: 86 0B        	stx	<R2+2
  1057 05:D088: A0 35 00     	ldy	#$35
  1058 05:D08B: B7 09        	lda	[<R2],Y
  1059 05:D08D: 48           	pha
  1060 05:D08E: A0 33 00     	ldy	#$33
  1061 05:D091: B7 09        	lda	[<R2],Y
  1062 05:D093: 48           	pha
  1063 05:D094: A9 0A 00     	lda	#$a
  1064                        	xref	~~~llsr
  1065 05:D097: 22 xx xx xx  	jsl	~~~llsr
  1066 05:D09B: 85 05        	sta	<R1
  1067 05:D09D: 86 07        	stx	<R1+2
  1068 05:D09F: A5 05        	lda	<R1
  1069 05:D0A1: A0 37 00     	ldy	#$37
  1070 05:D0A4: 97 01        	sta	[<R0],Y
  1071 05:D0A6: A5 07        	lda	<R1+2
  1072 05:D0A8: A0 39 00     	ldy	#$39
  1073 05:D0AB: 97 01        	sta	[<R0],Y
  1074                        ;
  1075                        ;	//k_debug_long("heap:availableHeapMemory:", k_ge
                    tZeroPage()->availableHeapMemory);
  1076                        ;
  1077                        ;	return (pheapInfo->freeBlocks * pheapInfo->block
                    Size);
  1078                        	.line	49
  1079 05:D0AD: A0 1E 00     	ldy	#$1e
  1080 05:D0B0: B7 0D        	lda	[<L3+pheapInfo_1],Y
  1081 05:D0B2: 48           	pha
  1082 05:D0B3: A0 1C 00     	ldy	#$1c
  1083 05:D0B6: B7 0D        	lda	[<L3+pheapInfo_1],Y
  1084 05:D0B8: 48           	pha
  1085 05:D0B9: A0 16 00     	ldy	#$16
  1086 05:D0BC: B7 0D        	lda	[<L3+pheapInfo_1],Y
  1087 05:D0BE: 48           	pha
  1088 05:D0BF: A0 14 00     	ldy	#$14
  1089 05:D0C2: B7 0D        	lda	[<L3+pheapInfo_1],Y
  1090 05:D0C4: 48           	pha
  1091                        	xref	~~~lmul
  1092 05:D0C5: 22 xx xx xx  	jsl	~~~lmul
  1093 05:D0C9: 85 01        	sta	<R0
  1094 05:D0CB: 86 03        	stx	<R0+2
  1095 05:D0CD: A6 03        	ldx	<R0+2
  Sat Jul 10 2021  1:15                                                Page 22


  1096 05:D0CF: A5 01        	lda	<R0
  1097                        L6:
  1098 05:D0D1: A8           	tay
  1099 05:D0D2: 2B           	pld
  1100 05:D0D3: 3B           	tsc
  1101 05:D0D4: 18           	clc
  1102 05:D0D5: 69 10 00     	adc	#L2
  1103 05:D0D8: 1B           	tcs
  1104 05:D0D9: 98           	tya
  1105 05:D0DA: 6B           	rtl
  1106                        ;}
  1107                        	.line	50
  1108                        	.endblock	50
  1109             00000010   L2	equ	16
  1110             0000000D   L3	equ	13
  1111 05:D0DB:              	ends
  1112                        	efunc
  1113                        	.endfunc	50,13,16
  1114                        	.line	50
  1115                        	data
  1116                        L1:
  1117 00:0030: 4D 65 6D 6F  	db	$4D,$65,$6D,$6F,$72,$79,$20,$46,$61,$75,
                    $6C,$74,$3A,$20,$48
       00:0034: 72 79 20 46 
       00:0038: 61 75 6C 74 
       00:003C: 3A 20 48 
  1118 00:003F: 65 61 70 20  	db	$65,$61,$70,$20,$63,$6F,$72,$72,$75,$70,
                    $74,$69,$6F,$6E,$20
       00:0043: 63 6F 72 72 
       00:0047: 75 70 74 69 
       00:004B: 6F 6E 20 
  1119 00:004E: 64 65 74 65  	db	$64,$65,$74,$65,$63,$74,$65,$64,$2E,$00
       00:0052: 63 74 65 64 
       00:0056: 2E 00 
  1120 00:0058:              	ends
  1121                        ;
  1122                        ;
  1123                        ;ULONG k_check_system_memory(MemoryCallback callba
                    ck)
  1124                        ;{
  1125                        	.line	53
  1126                        	.line	54
  1127                        	MEMMAN
  1128                        	xdef	~~k_check_system_memory
  1129                        	func
  1130                        	.function	54
  1131                        ~~k_check_system_memory:
  1132                        	longa	on
  1133                        	longi	on
  1134 05:D0DB: 3B           	tsc
  1135 05:D0DC: 38           	sec
  1136 05:D0DD: E9 14 00     	sbc	#L8
  1137 05:D0E0: 1B           	tcs
  1138 05:D0E1: 0B           	phd
  1139 05:D0E2: 5B           	tcd
  1140             00000004   callback_0	set	4
  1141                        	.block	54
  1142                        ;	ULONG size = MEM_SYSTEM_MIN; // first three segm
  Sat Jul 10 2021  1:15                                                Page 23


                    ents that got us here
  1143                        ;	ULONG bank = 0;
  1144                        ;	ULONG offset  = 0;
  1145                        ;	ULONG block = 0;
  1146                        ;	
  1147                        ;	//umm_integrity_check();
  1148                        ;
  1149                        ;	for(bank = MEM_USER_FLOOR;bank < MEM_USER_CEILIN
                    G;bank+=0x010000)
  1150             00000000   size_1	set	0
  1151             00000004   bank_1	set	4
  1152             00000008   offset_1	set	8
  1153             0000000C   block_1	set	12
  1154                        	.sym	size,0,18,1,32
  1155                        	.sym	bank,4,18,1,32
  1156                        	.sym	offset,8,18,1,32
  1157                        	.sym	block,12,18,1,32
  1158                        	.sym	callback,4,641,6,32
  1159 05:D0E3: A9 00 00     	lda	#$0
  1160 05:D0E6: 85 05        	sta	<L9+size_1
  1161 05:D0E8: A9 0B 00     	lda	#$b
  1162 05:D0EB: 85 07        	sta	<L9+size_1+2
  1163 05:D0ED: 64 09        	stz	<L9+bank_1
  1164 05:D0EF: 64 0B        	stz	<L9+bank_1+2
  1165 05:D0F1: 64 0D        	stz	<L9+offset_1
  1166 05:D0F3: 64 0F        	stz	<L9+offset_1+2
  1167 05:D0F5: 64 11        	stz	<L9+block_1
  1168 05:D0F7: 64 13        	stz	<L9+block_1+2
  1169                        	.line	62
  1170 05:D0F9: A9 00 00     	lda	#$0
  1171 05:D0FC: 85 09        	sta	<L9+bank_1
  1172 05:D0FE: A9 19 00     	lda	#$19
  1173 05:D101: 85 0B        	sta	<L9+bank_1+2
  1174                        L10004:
  1175                        ;	{
  1176                        	.line	63
  1177                        ;		block = 0;
  1178                        	.line	64
  1179 05:D103: 64 11        	stz	<L9+block_1
  1180 05:D105: 64 13        	stz	<L9+block_1+2
  1181                        ;		//k_debug_hex("Checking Segment: 0x",(UC
                    HAR)(segment >> 16));
  1182                        ;		for(offset = 0x0000;offset < 0xFFFF;offs
                    et++)
  1183                        	.line	66
  1184 05:D107: 64 0D        	stz	<L9+offset_1
  1185 05:D109: 64 0F        	stz	<L9+offset_1+2
  1186                        L10007:
  1187                        ;		{
  1188                        	.line	67
  1189                        ;			*((unsigned char FAR*)(bank + of
                    fset)) = 0;
  1190                        	.line	68
  1191 05:D10B: 18           	clc
  1192 05:D10C: A5 09        	lda	<L9+bank_1
  1193 05:D10E: 65 0D        	adc	<L9+offset_1
  1194 05:D110: 85 01        	sta	<R0
  1195 05:D112: A5 0B        	lda	<L9+bank_1+2
  Sat Jul 10 2021  1:15                                                Page 24


  1196 05:D114: 65 0F        	adc	<L9+offset_1+2
  1197 05:D116: 85 03        	sta	<R0+2
  1198 05:D118: E2 20        	sep	#$20
  1199                        	longa	off
  1200 05:D11A: A9 00        	lda	#$0
  1201 05:D11C: 87 01        	sta	[<R0]
  1202 05:D11E: C2 20        	rep	#$20
  1203                        	longa	on
  1204                        ;			*((unsigned char FAR*)(bank + of
                    fset)) = 1;
  1205                        	.line	69
  1206 05:D120: 18           	clc
  1207 05:D121: A5 09        	lda	<L9+bank_1
  1208 05:D123: 65 0D        	adc	<L9+offset_1
  1209 05:D125: 85 01        	sta	<R0
  1210 05:D127: A5 0B        	lda	<L9+bank_1+2
  1211 05:D129: 65 0F        	adc	<L9+offset_1+2
  1212 05:D12B: 85 03        	sta	<R0+2
  1213 05:D12D: E2 20        	sep	#$20
  1214                        	longa	off
  1215 05:D12F: A9 01        	lda	#$1
  1216 05:D131: 87 01        	sta	[<R0]
  1217 05:D133: C2 20        	rep	#$20
  1218                        	longa	on
  1219                        ;			if(*((unsigned char FAR*)(bank +
                     offset)) == 1)
  1220                        	.line	70
  1221                        ;			{
  1222 05:D135: 18           	clc
  1223 05:D136: A5 09        	lda	<L9+bank_1
  1224 05:D138: 65 0D        	adc	<L9+offset_1
  1225 05:D13A: 85 01        	sta	<R0
  1226 05:D13C: A5 0B        	lda	<L9+bank_1+2
  1227 05:D13E: 65 0F        	adc	<L9+offset_1+2
  1228 05:D140: 85 03        	sta	<R0+2
  1229 05:D142: E2 20        	sep	#$20
  1230                        	longa	off
  1231 05:D144: A7 01        	lda	[<R0]
  1232 05:D146: C9 01        	cmp	#<$1
  1233 05:D148: C2 20        	rep	#$20
  1234                        	longa	on
  1235 05:D14A: F0 03        	beq	L11
  1236 05:D14C: 82 1B 00     	brl	L10008
  1237                        L11:
  1238                        	.line	71
  1239                        ;				//size++;
  1240                        ;				block++;
  1241                        	.line	73
  1242 05:D14F: E6 11        	inc	<L9+block_1
  1243 05:D151: D0 02        	bne	L12
  1244 05:D153: E6 13        	inc	<L9+block_1+2
  1245                        L12:
  1246                        ;				*((unsigned char FAR*)(b
                    ank + offset)) = 0;
  1247                        	.line	74
  1248 05:D155: 18           	clc
  1249 05:D156: A5 09        	lda	<L9+bank_1
  1250 05:D158: 65 0D        	adc	<L9+offset_1
  Sat Jul 10 2021  1:15                                                Page 25


  1251 05:D15A: 85 01        	sta	<R0
  1252 05:D15C: A5 0B        	lda	<L9+bank_1+2
  1253 05:D15E: 65 0F        	adc	<L9+offset_1+2
  1254 05:D160: 85 03        	sta	<R0+2
  1255 05:D162: E2 20        	sep	#$20
  1256                        	longa	off
  1257 05:D164: A9 00        	lda	#$0
  1258 05:D166: 87 01        	sta	[<R0]
  1259 05:D168: C2 20        	rep	#$20
  1260                        	longa	on
  1261                        ;			}
  1262                        	.line	75
  1263                        ;		}
  1264                        L10008:
  1265                        	.line	76
  1266                        L10005:
  1267 05:D16A: E6 0D        	inc	<L9+offset_1
  1268 05:D16C: D0 02        	bne	L13
  1269 05:D16E: E6 0F        	inc	<L9+offset_1+2
  1270                        L13:
  1271 05:D170: A5 0D        	lda	<L9+offset_1
  1272 05:D172: C9 FF FF     	cmp	#<$ffff
  1273 05:D175: A5 0F        	lda	<L9+offset_1+2
  1274 05:D177: E9 00 00     	sbc	#^$ffff
  1275 05:D17A: B0 03        	bcs	L14
  1276 05:D17C: 82 8C FF     	brl	L10007
  1277                        L14:
  1278                        L10006:
  1279                        ;		//k_debug_long("Block:",block);
  1280                        ;		size+=block;
  1281                        	.line	78
  1282 05:D17F: 18           	clc
  1283 05:D180: A5 05        	lda	<L9+size_1
  1284 05:D182: 65 11        	adc	<L9+block_1
  1285 05:D184: 85 05        	sta	<L9+size_1
  1286 05:D186: A5 07        	lda	<L9+size_1+2
  1287 05:D188: 65 13        	adc	<L9+block_1+2
  1288 05:D18A: 85 07        	sta	<L9+size_1+2
  1289                        ;
  1290                        ;		if(callback!=NULL)
  1291                        	.line	80
  1292                        ;		{
  1293 05:D18C: A5 18        	lda	<L8+callback_0
  1294 05:D18E: 05 1A        	ora	<L8+callback_0+2
  1295 05:D190: D0 03        	bne	L15
  1296 05:D192: 82 21 00     	brl	L10009
  1297                        L15:
  1298                        	.line	81
  1299                        ;			callback((UCHAR)(bank >> 16),blo
                    ck,size);
  1300                        	.line	82
  1301 05:D195: D4 07        	pei	<L9+size_1+2
  1302 05:D197: D4 05        	pei	<L9+size_1
  1303 05:D199: D4 13        	pei	<L9+block_1+2
  1304 05:D19B: D4 11        	pei	<L9+block_1
  1305 05:D19D: D4 0B        	pei	<L9+bank_1+2
  1306 05:D19F: D4 09        	pei	<L9+bank_1
  1307 05:D1A1: A9 10 00     	lda	#$10
  Sat Jul 10 2021  1:15                                                Page 26


  1308                        	xref	~~~llsr
  1309 05:D1A4: 22 xx xx xx  	jsl	~~~llsr
  1310 05:D1A8: 85 01        	sta	<R0
  1311 05:D1AA: 86 03        	stx	<R0+2
  1312 05:D1AC: D4 01        	pei	<R0
  1313 05:D1AE: A6 1A        	ldx	<L8+callback_0+2
  1314 05:D1B0: A5 18        	lda	<L8+callback_0
  1315                        	xref	~~~lcal
  1316 05:D1B2: 22 xx xx xx  	jsl	~~~lcal
  1317                        ;		}
  1318                        	.line	83
  1319                        ;
  1320                        ;	}
  1321                        L10009:
  1322                        	.line	85
  1323                        L10002:
  1324 05:D1B6: 18           	clc
  1325 05:D1B7: A9 00 00     	lda	#$0
  1326 05:D1BA: 65 09        	adc	<L9+bank_1
  1327 05:D1BC: 85 09        	sta	<L9+bank_1
  1328 05:D1BE: A9 01 00     	lda	#$1
  1329 05:D1C1: 65 0B        	adc	<L9+bank_1+2
  1330 05:D1C3: 85 0B        	sta	<L9+bank_1+2
  1331 05:D1C5: A5 09        	lda	<L9+bank_1
  1332 05:D1C7: C9 00 00     	cmp	#<$af0000
  1333 05:D1CA: A5 0B        	lda	<L9+bank_1+2
  1334 05:D1CC: E9 AF 00     	sbc	#^$af0000
  1335 05:D1CF: B0 03        	bcs	L16
  1336 05:D1D1: 82 2F FF     	brl	L10004
  1337                        L16:
  1338                        L10003:
  1339                        ;
  1340                        ;	k_debug_long("Total Memory:",size);
  1341                        	.line	87
  1342 05:D1D4: D4 07        	pei	<L9+size_1+2
  1343 05:D1D6: D4 05        	pei	<L9+size_1
  1344 05:D1D8: F4 xx xx     	pea	#^L7
  1345 05:D1DB: F4 xx xx     	pea	#<L7
  1346 05:D1DE: 22 xx xx xx  	jsl	~~k_debug_long
  1347                        ;
  1348                        ;	return size;
  1349                        	.line	89
  1350 05:D1E2: A6 07        	ldx	<L9+size_1+2
  1351 05:D1E4: A5 05        	lda	<L9+size_1
  1352                        L17:
  1353 05:D1E6: A8           	tay
  1354 05:D1E7: A5 16        	lda	<L8+2
  1355 05:D1E9: 85 1A        	sta	<L8+2+4
  1356 05:D1EB: A5 15        	lda	<L8+1
  1357 05:D1ED: 85 19        	sta	<L8+1+4
  1358 05:D1EF: 2B           	pld
  1359 05:D1F0: 3B           	tsc
  1360 05:D1F1: 18           	clc
  1361 05:D1F2: 69 18 00     	adc	#L8+4
  1362 05:D1F5: 1B           	tcs
  1363 05:D1F6: 98           	tya
  1364 05:D1F7: 6B           	rtl
  1365                        ;}
  Sat Jul 10 2021  1:15                                                Page 27


  1366                        	.line	90
  1367                        	.endblock	90
  1368             00000014   L8	equ	20
  1369             00000005   L9	equ	5
  1370 05:D1F8:              	ends
  1371                        	efunc
  1372                        	.endfunc	90,5,20
  1373                        	.line	90
  1374                        	data
  1375                        L7:
  1376 00:0058: 54 6F 74 61  	db	$54,$6F,$74,$61,$6C,$20,$4D,$65,$6D,$6F,
                    $72,$79,$3A,$00
       00:005C: 6C 20 4D 65 
       00:0060: 6D 6F 72 79 
       00:0064: 3A 00 
  1377 00:0066:              	ends
  1378                        ;
  1379                        ;ULONG k_fcheck_system_memory(MemoryCallback callb
                    ack)
  1380                        ;{
  1381                        	.line	92
  1382                        	.line	93
  1383                        	MEMMAN
  1384                        	xdef	~~k_fcheck_system_memory
  1385                        	func
  1386                        	.function	93
  1387                        ~~k_fcheck_system_memory:
  1388                        	longa	on
  1389                        	longi	on
  1390 05:D1F8: 3B           	tsc
  1391 05:D1F9: 38           	sec
  1392 05:D1FA: E9 14 00     	sbc	#L19
  1393 05:D1FD: 1B           	tcs
  1394 05:D1FE: 0B           	phd
  1395 05:D1FF: 5B           	tcd
  1396             00000004   callback_0	set	4
  1397                        	.block	93
  1398                        ;	ULONG size = MEM_SYSTEM_MIN; // top of OS
  1399                        ;	ULONG segment = 0;
  1400                        ;	ULONG offset  = 0;
  1401                        ;	ULONG block = 0;
  1402                        ;
  1403                        ;	//umm_integrity_check();
  1404                        ;
  1405                        ;	for(segment = MEM_USER_FLOOR;segment < MEM_USER_
                    CEILING;segment+=0x010000)
  1406             00000000   size_1	set	0
  1407             00000004   segment_1	set	4
  1408             00000008   offset_1	set	8
  1409             0000000C   block_1	set	12
  1410                        	.sym	size,0,18,1,32
  1411                        	.sym	segment,4,18,1,32
  1412                        	.sym	offset,8,18,1,32
  1413                        	.sym	block,12,18,1,32
  1414                        	.sym	callback,4,641,6,32
  1415 05:D200: A9 00 00     	lda	#$0
  1416 05:D203: 85 05        	sta	<L20+size_1
  1417 05:D205: A9 0B 00     	lda	#$b
  Sat Jul 10 2021  1:15                                                Page 28


  1418 05:D208: 85 07        	sta	<L20+size_1+2
  1419 05:D20A: 64 09        	stz	<L20+segment_1
  1420 05:D20C: 64 0B        	stz	<L20+segment_1+2
  1421 05:D20E: 64 0D        	stz	<L20+offset_1
  1422 05:D210: 64 0F        	stz	<L20+offset_1+2
  1423 05:D212: 64 11        	stz	<L20+block_1
  1424 05:D214: 64 13        	stz	<L20+block_1+2
  1425                        	.line	101
  1426 05:D216: A9 00 00     	lda	#$0
  1427 05:D219: 85 09        	sta	<L20+segment_1
  1428 05:D21B: A9 19 00     	lda	#$19
  1429 05:D21E: 85 0B        	sta	<L20+segment_1+2
  1430                        L10012:
  1431                        ;	{
  1432                        	.line	102
  1433                        ;		block = 0;
  1434                        	.line	103
  1435 05:D220: 64 11        	stz	<L20+block_1
  1436 05:D222: 64 13        	stz	<L20+block_1+2
  1437                        ;		//k_debug_hex("Checking Segment: 0x",(UC
                    HAR)(segment >> 16));
  1438                        ;		for(offset = 0x0000;offset < 0x01FF;offs
                    et++)
  1439                        	.line	105
  1440 05:D224: 64 0D        	stz	<L20+offset_1
  1441 05:D226: 64 0F        	stz	<L20+offset_1+2
  1442                        L10015:
  1443                        ;		{
  1444                        	.line	106
  1445                        ;			*((unsigned char FAR*)(segment +
                     offset)) = 0;
  1446                        	.line	107
  1447 05:D228: 18           	clc
  1448 05:D229: A5 09        	lda	<L20+segment_1
  1449 05:D22B: 65 0D        	adc	<L20+offset_1
  1450 05:D22D: 85 01        	sta	<R0
  1451 05:D22F: A5 0B        	lda	<L20+segment_1+2
  1452 05:D231: 65 0F        	adc	<L20+offset_1+2
  1453 05:D233: 85 03        	sta	<R0+2
  1454 05:D235: E2 20        	sep	#$20
  1455                        	longa	off
  1456 05:D237: A9 00        	lda	#$0
  1457 05:D239: 87 01        	sta	[<R0]
  1458 05:D23B: C2 20        	rep	#$20
  1459                        	longa	on
  1460                        ;			*((unsigned char FAR*)(segment +
                     offset)) = 1;
  1461                        	.line	108
  1462 05:D23D: 18           	clc
  1463 05:D23E: A5 09        	lda	<L20+segment_1
  1464 05:D240: 65 0D        	adc	<L20+offset_1
  1465 05:D242: 85 01        	sta	<R0
  1466 05:D244: A5 0B        	lda	<L20+segment_1+2
  1467 05:D246: 65 0F        	adc	<L20+offset_1+2
  1468 05:D248: 85 03        	sta	<R0+2
  1469 05:D24A: E2 20        	sep	#$20
  1470                        	longa	off
  1471 05:D24C: A9 01        	lda	#$1
  Sat Jul 10 2021  1:15                                                Page 29


  1472 05:D24E: 87 01        	sta	[<R0]
  1473 05:D250: C2 20        	rep	#$20
  1474                        	longa	on
  1475                        ;			if(*((unsigned char FAR*)(segmen
                    t + offset)) == 1)
  1476                        	.line	109
  1477                        ;			{
  1478 05:D252: 18           	clc
  1479 05:D253: A5 09        	lda	<L20+segment_1
  1480 05:D255: 65 0D        	adc	<L20+offset_1
  1481 05:D257: 85 01        	sta	<R0
  1482 05:D259: A5 0B        	lda	<L20+segment_1+2
  1483 05:D25B: 65 0F        	adc	<L20+offset_1+2
  1484 05:D25D: 85 03        	sta	<R0+2
  1485 05:D25F: E2 20        	sep	#$20
  1486                        	longa	off
  1487 05:D261: A7 01        	lda	[<R0]
  1488 05:D263: C9 01        	cmp	#<$1
  1489 05:D265: C2 20        	rep	#$20
  1490                        	longa	on
  1491 05:D267: F0 03        	beq	L22
  1492 05:D269: 82 1B 00     	brl	L10016
  1493                        L22:
  1494                        	.line	110
  1495                        ;				block++;
  1496                        	.line	111
  1497 05:D26C: E6 11        	inc	<L20+block_1
  1498 05:D26E: D0 02        	bne	L23
  1499 05:D270: E6 13        	inc	<L20+block_1+2
  1500                        L23:
  1501                        ;				*((unsigned char FAR*)(s
                    egment + offset)) = 0;
  1502                        	.line	112
  1503 05:D272: 18           	clc
  1504 05:D273: A5 09        	lda	<L20+segment_1
  1505 05:D275: 65 0D        	adc	<L20+offset_1
  1506 05:D277: 85 01        	sta	<R0
  1507 05:D279: A5 0B        	lda	<L20+segment_1+2
  1508 05:D27B: 65 0F        	adc	<L20+offset_1+2
  1509 05:D27D: 85 03        	sta	<R0+2
  1510 05:D27F: E2 20        	sep	#$20
  1511                        	longa	off
  1512 05:D281: A9 00        	lda	#$0
  1513 05:D283: 87 01        	sta	[<R0]
  1514 05:D285: C2 20        	rep	#$20
  1515                        	longa	on
  1516                        ;			}
  1517                        	.line	113
  1518                        ;		}
  1519                        L10016:
  1520                        	.line	114
  1521                        L10013:
  1522 05:D287: E6 0D        	inc	<L20+offset_1
  1523 05:D289: D0 02        	bne	L24
  1524 05:D28B: E6 0F        	inc	<L20+offset_1+2
  1525                        L24:
  1526 05:D28D: A5 0D        	lda	<L20+offset_1
  1527 05:D28F: C9 FF 01     	cmp	#<$1ff
  Sat Jul 10 2021  1:15                                                Page 30


  1528 05:D292: A5 0F        	lda	<L20+offset_1+2
  1529 05:D294: E9 00 00     	sbc	#^$1ff
  1530 05:D297: B0 03        	bcs	L25
  1531 05:D299: 82 8C FF     	brl	L10015
  1532                        L25:
  1533                        L10014:
  1534                        ;		if(block > 0)
  1535                        	.line	115
  1536                        ;			block = 0xFFFF;
  1537 05:D29C: A9 00 00     	lda	#$0
  1538 05:D29F: C5 11        	cmp	<L20+block_1
  1539 05:D2A1: A9 00 00     	lda	#$0
  1540 05:D2A4: E5 13        	sbc	<L20+block_1+2
  1541 05:D2A6: 90 03        	bcc	L26
  1542 05:D2A8: 82 0A 00     	brl	L10017
  1543                        L26:
  1544                        	.line	116
  1545 05:D2AB: A9 FF FF     	lda	#$ffff
  1546 05:D2AE: 85 11        	sta	<L20+block_1
  1547 05:D2B0: A9 00 00     	lda	#$0
  1548 05:D2B3: 85 13        	sta	<L20+block_1+2
  1549                        ;
  1550                        ;		//k_debug_long("Block:",block);
  1551                        ;		size+=block;
  1552                        L10017:
  1553                        	.line	119
  1554 05:D2B5: 18           	clc
  1555 05:D2B6: A5 05        	lda	<L20+size_1
  1556 05:D2B8: 65 11        	adc	<L20+block_1
  1557 05:D2BA: 85 05        	sta	<L20+size_1
  1558 05:D2BC: A5 07        	lda	<L20+size_1+2
  1559 05:D2BE: 65 13        	adc	<L20+block_1+2
  1560 05:D2C0: 85 07        	sta	<L20+size_1+2
  1561                        ;
  1562                        ;		if(callback!=NULL)
  1563                        	.line	121
  1564                        ;		{
  1565 05:D2C2: A5 18        	lda	<L19+callback_0
  1566 05:D2C4: 05 1A        	ora	<L19+callback_0+2
  1567 05:D2C6: D0 03        	bne	L27
  1568 05:D2C8: 82 21 00     	brl	L10018
  1569                        L27:
  1570                        	.line	122
  1571                        ;			callback((UCHAR)(segment >> 16),
                    block,size);
  1572                        	.line	123
  1573 05:D2CB: D4 07        	pei	<L20+size_1+2
  1574 05:D2CD: D4 05        	pei	<L20+size_1
  1575 05:D2CF: D4 13        	pei	<L20+block_1+2
  1576 05:D2D1: D4 11        	pei	<L20+block_1
  1577 05:D2D3: D4 0B        	pei	<L20+segment_1+2
  1578 05:D2D5: D4 09        	pei	<L20+segment_1
  1579 05:D2D7: A9 10 00     	lda	#$10
  1580                        	xref	~~~llsr
  1581 05:D2DA: 22 xx xx xx  	jsl	~~~llsr
  1582 05:D2DE: 85 01        	sta	<R0
  1583 05:D2E0: 86 03        	stx	<R0+2
  1584 05:D2E2: D4 01        	pei	<R0
  Sat Jul 10 2021  1:15                                                Page 31


  1585 05:D2E4: A6 1A        	ldx	<L19+callback_0+2
  1586 05:D2E6: A5 18        	lda	<L19+callback_0
  1587                        	xref	~~~lcal
  1588 05:D2E8: 22 xx xx xx  	jsl	~~~lcal
  1589                        ;		}
  1590                        	.line	124
  1591                        ;
  1592                        ;	}
  1593                        L10018:
  1594                        	.line	126
  1595                        L10010:
  1596 05:D2EC: 18           	clc
  1597 05:D2ED: A9 00 00     	lda	#$0
  1598 05:D2F0: 65 09        	adc	<L20+segment_1
  1599 05:D2F2: 85 09        	sta	<L20+segment_1
  1600 05:D2F4: A9 01 00     	lda	#$1
  1601 05:D2F7: 65 0B        	adc	<L20+segment_1+2
  1602 05:D2F9: 85 0B        	sta	<L20+segment_1+2
  1603 05:D2FB: A5 09        	lda	<L20+segment_1
  1604 05:D2FD: C9 00 00     	cmp	#<$af0000
  1605 05:D300: A5 0B        	lda	<L20+segment_1+2
  1606 05:D302: E9 AF 00     	sbc	#^$af0000
  1607 05:D305: B0 03        	bcs	L28
  1608 05:D307: 82 16 FF     	brl	L10012
  1609                        L28:
  1610                        L10011:
  1611                        ;
  1612                        ;	k_debug_long("Total Memory:",size);
  1613                        	.line	128
  1614 05:D30A: D4 07        	pei	<L20+size_1+2
  1615 05:D30C: D4 05        	pei	<L20+size_1
  1616 05:D30E: F4 xx xx     	pea	#^L18
  1617 05:D311: F4 xx xx     	pea	#<L18
  1618 05:D314: 22 xx xx xx  	jsl	~~k_debug_long
  1619                        ;
  1620                        ;	return size;
  1621                        	.line	130
  1622 05:D318: A6 07        	ldx	<L20+size_1+2
  1623 05:D31A: A5 05        	lda	<L20+size_1
  1624                        L29:
  1625 05:D31C: A8           	tay
  1626 05:D31D: A5 16        	lda	<L19+2
  1627 05:D31F: 85 1A        	sta	<L19+2+4
  1628 05:D321: A5 15        	lda	<L19+1
  1629 05:D323: 85 19        	sta	<L19+1+4
  1630 05:D325: 2B           	pld
  1631 05:D326: 3B           	tsc
  1632 05:D327: 18           	clc
  1633 05:D328: 69 18 00     	adc	#L19+4
  1634 05:D32B: 1B           	tcs
  1635 05:D32C: 98           	tya
  1636 05:D32D: 6B           	rtl
  1637                        ;}
  1638                        	.line	131
  1639                        	.endblock	131
  1640             00000014   L19	equ	20
  1641             00000005   L20	equ	5
  1642 05:D32E:              	ends
  Sat Jul 10 2021  1:15                                                Page 32


  1643                        	efunc
  1644                        	.endfunc	131,5,20
  1645                        	.line	131
  1646                        	data
  1647                        L18:
  1648 00:0066: 54 6F 74 61  	db	$54,$6F,$74,$61,$6C,$20,$4D,$65,$6D,$6F,
                    $72,$79,$3A,$00
       00:006A: 6C 20 4D 65 
       00:006E: 6D 6F 72 79 
       00:0072: 3A 00 
  1649 00:0074:              	ends
  1650                        ;
  1651                        ;LPVOID k_mem_object_copy(LPVOID object,UINT size)
  1652                        ;{
  1653                        	.line	133
  1654                        	.line	134
  1655                        	MEMMAN
  1656                        	xdef	~~k_mem_object_copy
  1657                        	func
  1658                        	.function	134
  1659                        ~~k_mem_object_copy:
  1660                        	longa	on
  1661                        	longi	on
  1662 05:D32E: 3B           	tsc
  1663 05:D32F: 38           	sec
  1664 05:D330: E9 04 00     	sbc	#L31
  1665 05:D333: 1B           	tcs
  1666 05:D334: 0B           	phd
  1667 05:D335: 5B           	tcd
  1668             00000004   object_0	set	4
  1669             00000008   size_0	set	8
  1670                        	.block	134
  1671                        ;	LPVOID pnew = k_mem_allocate_heap(size);
  1672                        ;
  1673                        ;	memcpy(pnew,object,size);
  1674             00000000   pnew_1	set	0
  1675                        	.sym	pnew,0,129,1,32
  1676                        	.sym	object,4,129,6,32
  1677                        	.sym	size,8,16,6,16
  1678 05:D336: D4 0C        	pei	<L31+size_0
  1679 05:D338: 22 6E D4 05  	jsl	~~k_mem_allocate_heap
  1680 05:D33C: 85 01        	sta	<L32+pnew_1
  1681 05:D33E: 86 03        	stx	<L32+pnew_1+2
  1682                        	.line	137
  1683 05:D340: D4 0C        	pei	<L31+size_0
  1684 05:D342: D4 0A        	pei	<L31+object_0+2
  1685 05:D344: D4 08        	pei	<L31+object_0
  1686 05:D346: D4 03        	pei	<L32+pnew_1+2
  1687 05:D348: D4 01        	pei	<L32+pnew_1
  1688 05:D34A: 22 xx xx xx  	jsl	~~memcpy
  1689                        ;
  1690                        ;	return pnew;
  1691                        	.line	139
  1692 05:D34E: A6 03        	ldx	<L32+pnew_1+2
  1693 05:D350: A5 01        	lda	<L32+pnew_1
  1694                        L34:
  1695 05:D352: A8           	tay
  1696 05:D353: A5 06        	lda	<L31+2
  Sat Jul 10 2021  1:15                                                Page 33


  1697 05:D355: 85 0C        	sta	<L31+2+6
  1698 05:D357: A5 05        	lda	<L31+1
  1699 05:D359: 85 0B        	sta	<L31+1+6
  1700 05:D35B: 2B           	pld
  1701 05:D35C: 3B           	tsc
  1702 05:D35D: 18           	clc
  1703 05:D35E: 69 0A 00     	adc	#L31+6
  1704 05:D361: 1B           	tcs
  1705 05:D362: 98           	tya
  1706 05:D363: 6B           	rtl
  1707                        ;}
  1708                        	.line	140
  1709                        	.endblock	140
  1710             00000004   L31	equ	4
  1711             00000001   L32	equ	1
  1712 05:D364:              	ends
  1713                        	efunc
  1714                        	.endfunc	140,1,4
  1715                        	.line	140
  1716                        ;
  1717                        ;HANDLE k_mem_allocate_dynamic_heap(UINT size)
  1718                        ;{
  1719                        	.line	142
  1720                        	.line	143
  1721                        	MEMMAN
  1722                        	xdef	~~k_mem_allocate_dynamic_heap
  1723                        	func
  1724                        	.function	143
  1725                        ~~k_mem_allocate_dynamic_heap:
  1726                        	longa	on
  1727                        	longi	on
  1728 05:D364: 3B           	tsc
  1729 05:D365: 38           	sec
  1730 05:D366: E9 00 00     	sbc	#L35
  1731 05:D369: 1B           	tcs
  1732 05:D36A: 0B           	phd
  1733 05:D36B: 5B           	tcd
  1734             00000004   size_0	set	4
  1735                        	.block	143
  1736                        ;	return NULL;
  1737                        	.sym	size,4,16,6,16
  1738                        	.line	144
  1739 05:D36C: A9 00 00     	lda	#$0
  1740 05:D36F: AA           	tax
  1741 05:D370: A9 00 00     	lda	#$0
  1742                        L38:
  1743 05:D373: A8           	tay
  1744 05:D374: A5 02        	lda	<L35+2
  1745 05:D376: 85 04        	sta	<L35+2+2
  1746 05:D378: A5 01        	lda	<L35+1
  1747 05:D37A: 85 03        	sta	<L35+1+2
  1748 05:D37C: 2B           	pld
  1749 05:D37D: 3B           	tsc
  1750 05:D37E: 18           	clc
  1751 05:D37F: 69 02 00     	adc	#L35+2
  1752 05:D382: 1B           	tcs
  1753 05:D383: 98           	tya
  1754 05:D384: 6B           	rtl
  Sat Jul 10 2021  1:15                                                Page 34


  1755                        ;}
  1756                        	.line	145
  1757                        	.endblock	145
  1758             00000000   L35	equ	0
  1759             00000001   L36	equ	1
  1760 05:D385:              	ends
  1761                        	efunc
  1762                        	.endfunc	145,1,0
  1763                        	.line	145
  1764                        ;
  1765                        ;VOID k_mem_deallocate_dynamic_heap(HANDLE handle)
  1766                        ;{
  1767                        	.line	147
  1768                        	.line	148
  1769                        	MEMMAN
  1770                        	xdef	~~k_mem_deallocate_dynamic_heap
  1771                        	func
  1772                        	.function	148
  1773                        ~~k_mem_deallocate_dynamic_heap:
  1774                        	longa	on
  1775                        	longi	on
  1776 05:D385: 3B           	tsc
  1777 05:D386: 38           	sec
  1778 05:D387: E9 00 00     	sbc	#L39
  1779 05:D38A: 1B           	tcs
  1780 05:D38B: 0B           	phd
  1781 05:D38C: 5B           	tcd
  1782             00000004   handle_0	set	4
  1783                        	.block	148
  1784                        ;
  1785                        ;}
  1786                        	.sym	handle,4,129,6,32
  1787                        	.line	150
  1788                        L42:
  1789 05:D38D: A5 02        	lda	<L39+2
  1790 05:D38F: 85 06        	sta	<L39+2+4
  1791 05:D391: A5 01        	lda	<L39+1
  1792 05:D393: 85 05        	sta	<L39+1+4
  1793 05:D395: 2B           	pld
  1794 05:D396: 3B           	tsc
  1795 05:D397: 18           	clc
  1796 05:D398: 69 04 00     	adc	#L39+4
  1797 05:D39B: 1B           	tcs
  1798 05:D39C: 6B           	rtl
  1799                        	.endblock	150
  1800             00000000   L39	equ	0
  1801             00000001   L40	equ	1
  1802 05:D39D:              	ends
  1803                        	efunc
  1804                        	.endfunc	150,1,0
  1805                        	.line	150
  1806                        ;
  1807                        ;LPVOID k_mem_lock_handle(HANDLE handle)
  1808                        ;{
  1809                        	.line	152
  1810                        	.line	153
  1811                        	MEMMAN
  1812                        	xdef	~~k_mem_lock_handle
  Sat Jul 10 2021  1:15                                                Page 35


  1813                        	func
  1814                        	.function	153
  1815                        ~~k_mem_lock_handle:
  1816                        	longa	on
  1817                        	longi	on
  1818 05:D39D: 3B           	tsc
  1819 05:D39E: 38           	sec
  1820 05:D39F: E9 00 00     	sbc	#L43
  1821 05:D3A2: 1B           	tcs
  1822 05:D3A3: 0B           	phd
  1823 05:D3A4: 5B           	tcd
  1824             00000004   handle_0	set	4
  1825                        	.block	153
  1826                        ;	return NULL;
  1827                        	.sym	handle,4,129,6,32
  1828                        	.line	154
  1829 05:D3A5: A9 00 00     	lda	#$0
  1830 05:D3A8: AA           	tax
  1831 05:D3A9: A9 00 00     	lda	#$0
  1832                        L46:
  1833 05:D3AC: A8           	tay
  1834 05:D3AD: A5 02        	lda	<L43+2
  1835 05:D3AF: 85 06        	sta	<L43+2+4
  1836 05:D3B1: A5 01        	lda	<L43+1
  1837 05:D3B3: 85 05        	sta	<L43+1+4
  1838 05:D3B5: 2B           	pld
  1839 05:D3B6: 3B           	tsc
  1840 05:D3B7: 18           	clc
  1841 05:D3B8: 69 04 00     	adc	#L43+4
  1842 05:D3BB: 1B           	tcs
  1843 05:D3BC: 98           	tya
  1844 05:D3BD: 6B           	rtl
  1845                        ;}
  1846                        	.line	155
  1847                        	.endblock	155
  1848             00000000   L43	equ	0
  1849             00000001   L44	equ	1
  1850 05:D3BE:              	ends
  1851                        	efunc
  1852                        	.endfunc	155,1,0
  1853                        	.line	155
  1854                        ;
  1855                        ;VOID k_mem_unlock_handle(HANDLE handle)
  1856                        ;{
  1857                        	.line	157
  1858                        	.line	158
  1859                        	MEMMAN
  1860                        	xdef	~~k_mem_unlock_handle
  1861                        	func
  1862                        	.function	158
  1863                        ~~k_mem_unlock_handle:
  1864                        	longa	on
  1865                        	longi	on
  1866 05:D3BE: 3B           	tsc
  1867 05:D3BF: 38           	sec
  1868 05:D3C0: E9 00 00     	sbc	#L47
  1869 05:D3C3: 1B           	tcs
  1870 05:D3C4: 0B           	phd
  Sat Jul 10 2021  1:15                                                Page 36


  1871 05:D3C5: 5B           	tcd
  1872             00000004   handle_0	set	4
  1873                        	.block	158
  1874                        ;
  1875                        ;}
  1876                        	.sym	handle,4,129,6,32
  1877                        	.line	160
  1878                        L50:
  1879 05:D3C6: A5 02        	lda	<L47+2
  1880 05:D3C8: 85 06        	sta	<L47+2+4
  1881 05:D3CA: A5 01        	lda	<L47+1
  1882 05:D3CC: 85 05        	sta	<L47+1+4
  1883 05:D3CE: 2B           	pld
  1884 05:D3CF: 3B           	tsc
  1885 05:D3D0: 18           	clc
  1886 05:D3D1: 69 04 00     	adc	#L47+4
  1887 05:D3D4: 1B           	tcs
  1888 05:D3D5: 6B           	rtl
  1889                        	.endblock	160
  1890             00000000   L47	equ	0
  1891             00000001   L48	equ	1
  1892 05:D3D6:              	ends
  1893                        	efunc
  1894                        	.endfunc	160,1,0
  1895                        	.line	160
  1896                        ;
  1897                        ;HANDLE k_mem_load_segment(HANDLE handle)
  1898                        ;{
  1899                        	.line	162
  1900                        	.line	163
  1901                        	MEMMAN
  1902                        	xdef	~~k_mem_load_segment
  1903                        	func
  1904                        	.function	163
  1905                        ~~k_mem_load_segment:
  1906                        	longa	on
  1907                        	longi	on
  1908 05:D3D6: 3B           	tsc
  1909 05:D3D7: 38           	sec
  1910 05:D3D8: E9 00 00     	sbc	#L51
  1911 05:D3DB: 1B           	tcs
  1912 05:D3DC: 0B           	phd
  1913 05:D3DD: 5B           	tcd
  1914             00000004   handle_0	set	4
  1915                        	.block	163
  1916                        ;	return NULL;
  1917                        	.sym	handle,4,129,6,32
  1918                        	.line	164
  1919 05:D3DE: A9 00 00     	lda	#$0
  1920 05:D3E1: AA           	tax
  1921 05:D3E2: A9 00 00     	lda	#$0
  1922                        L54:
  1923 05:D3E5: A8           	tay
  1924 05:D3E6: A5 02        	lda	<L51+2
  1925 05:D3E8: 85 06        	sta	<L51+2+4
  1926 05:D3EA: A5 01        	lda	<L51+1
  1927 05:D3EC: 85 05        	sta	<L51+1+4
  1928 05:D3EE: 2B           	pld
  Sat Jul 10 2021  1:15                                                Page 37


  1929 05:D3EF: 3B           	tsc
  1930 05:D3F0: 18           	clc
  1931 05:D3F1: 69 04 00     	adc	#L51+4
  1932 05:D3F4: 1B           	tcs
  1933 05:D3F5: 98           	tya
  1934 05:D3F6: 6B           	rtl
  1935                        ;}
  1936                        	.line	165
  1937                        	.endblock	165
  1938             00000000   L51	equ	0
  1939             00000001   L52	equ	1
  1940 05:D3F7:              	ends
  1941                        	efunc
  1942                        	.endfunc	165,1,0
  1943                        	.line	165
  1944                        ;LPVOID k_mem_lock_segment(HANDLE handle)
  1945                        ;{
  1946                        	.line	166
  1947                        	.line	167
  1948                        	MEMMAN
  1949                        	xdef	~~k_mem_lock_segment
  1950                        	func
  1951                        	.function	167
  1952                        ~~k_mem_lock_segment:
  1953                        	longa	on
  1954                        	longi	on
  1955 05:D3F7: 3B           	tsc
  1956 05:D3F8: 38           	sec
  1957 05:D3F9: E9 00 00     	sbc	#L55
  1958 05:D3FC: 1B           	tcs
  1959 05:D3FD: 0B           	phd
  1960 05:D3FE: 5B           	tcd
  1961             00000004   handle_0	set	4
  1962                        	.block	167
  1963                        ;	return NULL;
  1964                        	.sym	handle,4,129,6,32
  1965                        	.line	168
  1966 05:D3FF: A9 00 00     	lda	#$0
  1967 05:D402: AA           	tax
  1968 05:D403: A9 00 00     	lda	#$0
  1969                        L58:
  1970 05:D406: A8           	tay
  1971 05:D407: A5 02        	lda	<L55+2
  1972 05:D409: 85 06        	sta	<L55+2+4
  1973 05:D40B: A5 01        	lda	<L55+1
  1974 05:D40D: 85 05        	sta	<L55+1+4
  1975 05:D40F: 2B           	pld
  1976 05:D410: 3B           	tsc
  1977 05:D411: 18           	clc
  1978 05:D412: 69 04 00     	adc	#L55+4
  1979 05:D415: 1B           	tcs
  1980 05:D416: 98           	tya
  1981 05:D417: 6B           	rtl
  1982                        ;}
  1983                        	.line	169
  1984                        	.endblock	169
  1985             00000000   L55	equ	0
  1986             00000001   L56	equ	1
  Sat Jul 10 2021  1:15                                                Page 38


  1987 05:D418:              	ends
  1988                        	efunc
  1989                        	.endfunc	169,1,0
  1990                        	.line	169
  1991                        ;BOOL k_mem_unlock_segment(HANDLE handle)
  1992                        ;{
  1993                        	.line	170
  1994                        	.line	171
  1995                        	MEMMAN
  1996                        	xdef	~~k_mem_unlock_segment
  1997                        	func
  1998                        	.function	171
  1999                        ~~k_mem_unlock_segment:
  2000                        	longa	on
  2001                        	longi	on
  2002 05:D418: 3B           	tsc
  2003 05:D419: 38           	sec
  2004 05:D41A: E9 00 00     	sbc	#L59
  2005 05:D41D: 1B           	tcs
  2006 05:D41E: 0B           	phd
  2007 05:D41F: 5B           	tcd
  2008             00000004   handle_0	set	4
  2009                        	.block	171
  2010                        ;	return FALSE;
  2011                        	.sym	handle,4,129,6,32
  2012                        	.line	172
  2013 05:D420: A9 00 00     	lda	#$0
  2014                        L62:
  2015 05:D423: A8           	tay
  2016 05:D424: A5 02        	lda	<L59+2
  2017 05:D426: 85 06        	sta	<L59+2+4
  2018 05:D428: A5 01        	lda	<L59+1
  2019 05:D42A: 85 05        	sta	<L59+1+4
  2020 05:D42C: 2B           	pld
  2021 05:D42D: 3B           	tsc
  2022 05:D42E: 18           	clc
  2023 05:D42F: 69 04 00     	adc	#L59+4
  2024 05:D432: 1B           	tcs
  2025 05:D433: 98           	tya
  2026 05:D434: 6B           	rtl
  2027                        ;}
  2028                        	.line	173
  2029                        	.endblock	173
  2030             00000000   L59	equ	0
  2031             00000001   L60	equ	1
  2032 05:D435:              	ends
  2033                        	efunc
  2034                        	.endfunc	173,1,0
  2035                        	.line	173
  2036                        ;
  2037                        ;VOID k_mem_unload_segment(LPVOID segment)
  2038                        ;{
  2039                        	.line	175
  2040                        	.line	176
  2041                        	MEMMAN
  2042                        	xdef	~~k_mem_unload_segment
  2043                        	func
  2044                        	.function	176
  Sat Jul 10 2021  1:15                                                Page 39


  2045                        ~~k_mem_unload_segment:
  2046                        	longa	on
  2047                        	longi	on
  2048 05:D435: 3B           	tsc
  2049 05:D436: 38           	sec
  2050 05:D437: E9 00 00     	sbc	#L63
  2051 05:D43A: 1B           	tcs
  2052 05:D43B: 0B           	phd
  2053 05:D43C: 5B           	tcd
  2054             00000004   segment_0	set	4
  2055                        	.block	176
  2056                        ;	return ;
  2057                        	.sym	segment,4,129,6,32
  2058                        	.line	177
  2059                        L66:
  2060 05:D43D: A5 02        	lda	<L63+2
  2061 05:D43F: 85 06        	sta	<L63+2+4
  2062 05:D441: A5 01        	lda	<L63+1
  2063 05:D443: 85 05        	sta	<L63+1+4
  2064 05:D445: 2B           	pld
  2065 05:D446: 3B           	tsc
  2066 05:D447: 18           	clc
  2067 05:D448: 69 04 00     	adc	#L63+4
  2068 05:D44B: 1B           	tcs
  2069 05:D44C: 6B           	rtl
  2070                        ;}
  2071                        	.line	178
  2072                        	.endblock	178
  2073             00000000   L63	equ	0
  2074             00000001   L64	equ	1
  2075 05:D44D:              	ends
  2076                        	efunc
  2077                        	.endfunc	178,1,0
  2078                        	.line	178
  2079                        ;
  2080                        ;LPVOID k_mem_get_segment_info(HANDLE handle)
  2081                        ;{
  2082                        	.line	180
  2083                        	.line	181
  2084                        	MEMMAN
  2085                        	xdef	~~k_mem_get_segment_info
  2086                        	func
  2087                        	.function	181
  2088                        ~~k_mem_get_segment_info:
  2089                        	longa	on
  2090                        	longi	on
  2091 05:D44D: 3B           	tsc
  2092 05:D44E: 38           	sec
  2093 05:D44F: E9 00 00     	sbc	#L67
  2094 05:D452: 1B           	tcs
  2095 05:D453: 0B           	phd
  2096 05:D454: 5B           	tcd
  2097             00000004   handle_0	set	4
  2098                        	.block	181
  2099                        ;	return NULL;
  2100                        	.sym	handle,4,129,6,32
  2101                        	.line	182
  2102 05:D455: A9 00 00     	lda	#$0
  Sat Jul 10 2021  1:15                                                Page 40


  2103 05:D458: AA           	tax
  2104 05:D459: A9 00 00     	lda	#$0
  2105                        L70:
  2106 05:D45C: A8           	tay
  2107 05:D45D: A5 02        	lda	<L67+2
  2108 05:D45F: 85 06        	sta	<L67+2+4
  2109 05:D461: A5 01        	lda	<L67+1
  2110 05:D463: 85 05        	sta	<L67+1+4
  2111 05:D465: 2B           	pld
  2112 05:D466: 3B           	tsc
  2113 05:D467: 18           	clc
  2114 05:D468: 69 04 00     	adc	#L67+4
  2115 05:D46B: 1B           	tcs
  2116 05:D46C: 98           	tya
  2117 05:D46D: 6B           	rtl
  2118                        ;}
  2119                        	.line	183
  2120                        	.endblock	183
  2121             00000000   L67	equ	0
  2122             00000001   L68	equ	1
  2123 05:D46E:              	ends
  2124                        	efunc
  2125                        	.endfunc	183,1,0
  2126                        	.line	183
  2127                        ;
  2128                        ;LPVOID k_mem_allocate_heap(UINT size)
  2129                        ;{
  2130                        	.line	185
  2131                        	.line	186
  2132                        	MEMMAN
  2133                        	xdef	~~k_mem_allocate_heap
  2134                        	func
  2135                        	.function	186
  2136                        ~~k_mem_allocate_heap:
  2137                        	longa	on
  2138                        	longi	on
  2139 05:D46E: 3B           	tsc
  2140 05:D46F: 38           	sec
  2141 05:D470: E9 0A 00     	sbc	#L71
  2142 05:D473: 1B           	tcs
  2143 05:D474: 0B           	phd
  2144 05:D475: 5B           	tcd
  2145             00000004   size_0	set	4
  2146                        	.block	186
  2147                        ;	int i = 0;
  2148                        ;	LPVOID p = NULL;
  2149                        ;
  2150                        ;	//k_debug_integer("k_mem_allocate_heap::enter:",
                    size);
  2151                        ;	if(size)
  2152             00000000   i_1	set	0
  2153             00000002   p_1	set	2
  2154                        	.sym	i,0,5,1,16
  2155                        	.sym	p,2,129,1,32
  2156                        	.sym	size,4,16,6,16
  2157 05:D476: 64 05        	stz	<L72+i_1
  2158 05:D478: 64 07        	stz	<L72+p_1
  2159 05:D47A: 64 09        	stz	<L72+p_1+2
  Sat Jul 10 2021  1:15                                                Page 41


  2160                        	.line	191
  2161                        ;	{
  2162 05:D47C: A5 0E        	lda	<L71+size_0
  2163 05:D47E: D0 03        	bne	L74
  2164 05:D480: 82 2B 00     	brl	L10019
  2165                        L74:
  2166                        	.line	192
  2167                        ;		if(size == 4)
  2168                        	.line	193
  2169                        ;		{
  2170 05:D483: A5 0E        	lda	<L71+size_0
  2171 05:D485: C9 04 00     	cmp	#<$4
  2172 05:D488: F0 03        	beq	L75
  2173 05:D48A: 82 0C 00     	brl	L10020
  2174                        L75:
  2175                        	.line	194
  2176                        ;			k_debug_integer("**** k_mem_allo
                    cate_heap::possible wrong size allocation ****",size);
  2177                        	.line	195
  2178 05:D48D: D4 0E        	pei	<L71+size_0
  2179 05:D48F: F4 xx xx     	pea	#^L30
  2180 05:D492: F4 xx xx     	pea	#<L30
  2181 05:D495: 22 xx xx xx  	jsl	~~k_debug_integer
  2182                        ;		}
  2183                        	.line	196
  2184                        ;		p = umm_malloc((size_t)size);
  2185                        L10020:
  2186                        	.line	197
  2187 05:D499: A5 0E        	lda	<L71+size_0
  2188 05:D49B: 85 01        	sta	<R0
  2189 05:D49D: 64 03        	stz	<R0+2
  2190 05:D49F: D4 03        	pei	<R0+2
  2191 05:D4A1: D4 01        	pei	<R0
  2192 05:D4A3: 22 xx xx xx  	jsl	~~umm_malloc
  2193 05:D4A7: 85 07        	sta	<L72+p_1
  2194 05:D4A9: 86 09        	stx	<L72+p_1+2
  2195                        ;		//p = umm_poison_malloc((size_t)size);
  2196                        ;	}
  2197                        	.line	199
  2198                        ;	else
  2199 05:D4AB: 82 1F 00     	brl	L10021
  2200                        L10019:
  2201                        ;	{
  2202                        	.line	201
  2203                        ;		k_heap_integrity_check();
  2204                        	.line	202
  2205 05:D4AE: 22 00 D0 05  	jsl	~~k_heap_integrity_check
  2206                        ;		k_exec_throw_exception(THIS_MODULE,0x000
                    10002,"Memory allocation of size zero",-1);
  2207                        	.line	203
  2208 05:D4B2: F4 FF FF     	pea	#<$ffffffff
  2209 05:D4B5: F4 xx xx     	pea	#^L30+62
  2210 05:D4B8: F4 xx xx     	pea	#<L30+62
  2211 05:D4BB: F4 01 00     	pea	#^$10002
  2212 05:D4BE: F4 02 00     	pea	#<$10002
  2213 05:D4C1: AD xx xx     	lda	|~~THIS_MODULE+2
  2214 05:D4C4: 48           	pha
  2215 05:D4C5: AD xx xx     	lda	|~~THIS_MODULE
  Sat Jul 10 2021  1:15                                                Page 42


  2216 05:D4C8: 48           	pha
  2217 05:D4C9: 22 xx xx xx  	jsl	~~k_exec_throw_exception
  2218                        ;	}
  2219                        	.line	204
  2220                        L10021:
  2221                        ;	if(!p)
  2222                        	.line	205
  2223                        ;		k_debug_pointer("k_mem_allocate_heap::ex
                    it:",p);
  2224 05:D4CD: A5 07        	lda	<L72+p_1
  2225 05:D4CF: 05 09        	ora	<L72+p_1+2
  2226 05:D4D1: F0 03        	beq	L76
  2227 05:D4D3: 82 0E 00     	brl	L10022
  2228                        L76:
  2229                        	.line	206
  2230 05:D4D6: D4 09        	pei	<L72+p_1+2
  2231 05:D4D8: D4 07        	pei	<L72+p_1
  2232 05:D4DA: F4 xx xx     	pea	#^L30+93
  2233 05:D4DD: F4 xx xx     	pea	#<L30+93
  2234 05:D4E0: 22 xx xx xx  	jsl	~~k_debug_pointer
  2235                        ;
  2236                        ;	//umm_integrity_check();
  2237                        ;	/*
  2238                        ;	for(i=0;i<size;i++)
  2239                        ;	{
  2240                        ;		((LPCHAR)p)[i] = 0;
  2241                        ;	}
  2242                        ;	*/
  2243                        ;	return p;
  2244                        L10022:
  2245                        	.line	215
  2246 05:D4E4: A6 09        	ldx	<L72+p_1+2
  2247 05:D4E6: A5 07        	lda	<L72+p_1
  2248                        L77:
  2249 05:D4E8: A8           	tay
  2250 05:D4E9: A5 0C        	lda	<L71+2
  2251 05:D4EB: 85 0E        	sta	<L71+2+2
  2252 05:D4ED: A5 0B        	lda	<L71+1
  2253 05:D4EF: 85 0D        	sta	<L71+1+2
  2254 05:D4F1: 2B           	pld
  2255 05:D4F2: 3B           	tsc
  2256 05:D4F3: 18           	clc
  2257 05:D4F4: 69 0C 00     	adc	#L71+2
  2258 05:D4F7: 1B           	tcs
  2259 05:D4F8: 98           	tya
  2260 05:D4F9: 6B           	rtl
  2261                        ;}
  2262                        	.line	216
  2263                        	.endblock	216
  2264             0000000A   L71	equ	10
  2265             00000005   L72	equ	5
  2266 05:D4FA:              	ends
  2267                        	efunc
  2268                        	.endfunc	216,5,10
  2269                        	.line	216
  2270                        	data
  2271                        L30:
  2272 00:0074: 2A 2A 2A 2A  	db	$2A,$2A,$2A,$2A,$20,$6B,$5F,$6D,$65,$6D,
  Sat Jul 10 2021  1:15                                                Page 43


                    $5F,$61,$6C,$6C,$6F
       00:0078: 20 6B 5F 6D 
       00:007C: 65 6D 5F 61 
       00:0080: 6C 6C 6F 
  2273 00:0083: 63 61 74 65  	db	$63,$61,$74,$65,$5F,$68,$65,$61,$70,$3A,
                    $3A,$70,$6F,$73,$73
       00:0087: 5F 68 65 61 
       00:008B: 70 3A 3A 70 
       00:008F: 6F 73 73 
  2274 00:0092: 69 62 6C 65  	db	$69,$62,$6C,$65,$20,$77,$72,$6F,$6E,$67,
                    $20,$73,$69,$7A,$65
       00:0096: 20 77 72 6F 
       00:009A: 6E 67 20 73 
       00:009E: 69 7A 65 
  2275 00:00A1: 20 61 6C 6C  	db	$20,$61,$6C,$6C,$6F,$63,$61,$74,$69,$6F,
                    $6E,$20,$2A,$2A,$2A
       00:00A5: 6F 63 61 74 
       00:00A9: 69 6F 6E 20 
       00:00AD: 2A 2A 2A 
  2276 00:00B0: 2A 00 4D 65  	db	$2A,$00,$4D,$65,$6D,$6F,$72,$79,$20,$61,
                    $6C,$6C,$6F,$63,$61
       00:00B4: 6D 6F 72 79 
       00:00B8: 20 61 6C 6C 
       00:00BC: 6F 63 61 
  2277 00:00BF: 74 69 6F 6E  	db	$74,$69,$6F,$6E,$20,$6F,$66,$20,$73,$69,
                    $7A,$65,$20,$7A,$65
       00:00C3: 20 6F 66 20 
       00:00C7: 73 69 7A 65 
       00:00CB: 20 7A 65 
  2278 00:00CE: 72 6F 00 6B  	db	$72,$6F,$00,$6B,$5F,$6D,$65,$6D,$5F,$61,
                    $6C,$6C,$6F,$63,$61
       00:00D2: 5F 6D 65 6D 
       00:00D6: 5F 61 6C 6C 
       00:00DA: 6F 63 61 
  2279 00:00DD: 74 65 5F 68  	db	$74,$65,$5F,$68,$65,$61,$70,$3A,$3A,$65,
                    $78,$69,$74,$3A,$00
       00:00E1: 65 61 70 3A 
       00:00E5: 3A 65 78 69 
       00:00E9: 74 3A 00 
  2280 00:00EC:              	ends
  2281                        ;
  2282                        ;VOID k_mem_deallocate_heap(LPVOID lpBuffer)
  2283                        ;{
  2284                        	.line	218
  2285                        	.line	219
  2286                        	MEMMAN
  2287                        	xdef	~~k_mem_deallocate_heap
  2288                        	func
  2289                        	.function	219
  2290                        ~~k_mem_deallocate_heap:
  2291                        	longa	on
  2292                        	longi	on
  2293 05:D4FA: 3B           	tsc
  2294 05:D4FB: 38           	sec
  2295 05:D4FC: E9 00 00     	sbc	#L79
  2296 05:D4FF: 1B           	tcs
  2297 05:D500: 0B           	phd
  2298 05:D501: 5B           	tcd
  Sat Jul 10 2021  1:15                                                Page 44


  2299             00000004   lpBuffer_0	set	4
  2300                        	.block	219
  2301                        ;	//k_debug_pointer("k_mem_deallocate_heap:",lpBuf
                    fer);
  2302                        ;	if(lpBuffer!=NULL)
  2303                        	.sym	lpBuffer,4,129,6,32
  2304                        	.line	221
  2305                        ;		umm_free(lpBuffer);
  2306 05:D502: A5 04        	lda	<L79+lpBuffer_0
  2307 05:D504: 05 06        	ora	<L79+lpBuffer_0+2
  2308 05:D506: D0 03        	bne	L82
  2309 05:D508: 82 0B 00     	brl	L10023
  2310                        L82:
  2311                        	.line	222
  2312 05:D50B: D4 06        	pei	<L79+lpBuffer_0+2
  2313 05:D50D: D4 04        	pei	<L79+lpBuffer_0
  2314 05:D50F: 22 xx xx xx  	jsl	~~umm_free
  2315                        ;		//umm_poison_free(lpBuffer);
  2316                        ;	else
  2317 05:D513: 82 1B 00     	brl	L10024
  2318                        L10023:
  2319                        ;		k_exec_throw_exception(THIS_MODULE,0x000
                    10001,"Memory deallocation of NULL reference",-1);
  2320                        	.line	225
  2321 05:D516: F4 FF FF     	pea	#<$ffffffff
  2322 05:D519: F4 xx xx     	pea	#^L78
  2323 05:D51C: F4 xx xx     	pea	#<L78
  2324 05:D51F: F4 01 00     	pea	#^$10001
  2325 05:D522: F4 01 00     	pea	#<$10001
  2326 05:D525: AD xx xx     	lda	|~~THIS_MODULE+2
  2327 05:D528: 48           	pha
  2328 05:D529: AD xx xx     	lda	|~~THIS_MODULE
  2329 05:D52C: 48           	pha
  2330 05:D52D: 22 xx xx xx  	jsl	~~k_exec_throw_exception
  2331                        L10024:
  2332                        ;}
  2333                        	.line	226
  2334                        L83:
  2335 05:D531: A5 02        	lda	<L79+2
  2336 05:D533: 85 06        	sta	<L79+2+4
  2337 05:D535: A5 01        	lda	<L79+1
  2338 05:D537: 85 05        	sta	<L79+1+4
  2339 05:D539: 2B           	pld
  2340 05:D53A: 3B           	tsc
  2341 05:D53B: 18           	clc
  2342 05:D53C: 69 04 00     	adc	#L79+4
  2343 05:D53F: 1B           	tcs
  2344 05:D540: 6B           	rtl
  2345                        	.endblock	226
  2346             00000000   L79	equ	0
  2347             00000001   L80	equ	1
  2348 05:D541:              	ends
  2349                        	efunc
  2350                        	.endfunc	226,1,0
  2351                        	.line	226
  2352                        	data
  2353                        L78:
  2354 00:00EC: 4D 65 6D 6F  	db	$4D,$65,$6D,$6F,$72,$79,$20,$64,$65,$61,
  Sat Jul 10 2021  1:15                                                Page 45


                    $6C,$6C,$6F,$63,$61
       00:00F0: 72 79 20 64 
       00:00F4: 65 61 6C 6C 
       00:00F8: 6F 63 61 
  2355 00:00FB: 74 69 6F 6E  	db	$74,$69,$6F,$6E,$20,$6F,$66,$20,$4E,$55,
                    $4C,$4C,$20,$72,$65
       00:00FF: 20 6F 66 20 
       00:0103: 4E 55 4C 4C 
       00:0107: 20 72 65 
  2356 00:010A: 66 65 72 65  	db	$66,$65,$72,$65,$6E,$63,$65,$00
       00:010E: 6E 63 65 00 
  2357 00:0112:              	ends
  2358                        ;
  2359                        ;LPVOID k_calloc(UINT num,UINT bytes)
  2360                        ;{
  2361                        	.line	228
  2362                        	.line	229
  2363                        	MEMMAN
  2364                        	xdef	~~k_calloc
  2365                        	func
  2366                        	.function	229
  2367                        ~~k_calloc:
  2368                        	longa	on
  2369                        	longi	on
  2370 05:D541: 3B           	tsc
  2371 05:D542: 38           	sec
  2372 05:D543: E9 04 00     	sbc	#L85
  2373 05:D546: 1B           	tcs
  2374 05:D547: 0B           	phd
  2375 05:D548: 5B           	tcd
  2376             00000004   num_0	set	4
  2377             00000006   bytes_0	set	6
  2378                        	.block	229
  2379                        ;	return k_mem_allocate_heap(num * bytes);
  2380                        	.sym	num,4,16,6,16
  2381                        	.sym	bytes,6,16,6,16
  2382                        	.line	230
  2383 05:D549: A5 08        	lda	<L85+num_0
  2384 05:D54B: A6 0A        	ldx	<L85+bytes_0
  2385                        	xref	~~~mul
  2386 05:D54D: 22 xx xx xx  	jsl	~~~mul
  2387 05:D551: 48           	pha
  2388 05:D552: 22 6E D4 05  	jsl	~~k_mem_allocate_heap
  2389 05:D556: 85 01        	sta	<R0
  2390 05:D558: 86 03        	stx	<R0+2
  2391 05:D55A: A6 03        	ldx	<R0+2
  2392 05:D55C: A5 01        	lda	<R0
  2393                        L88:
  2394 05:D55E: A8           	tay
  2395 05:D55F: A5 06        	lda	<L85+2
  2396 05:D561: 85 0A        	sta	<L85+2+4
  2397 05:D563: A5 05        	lda	<L85+1
  2398 05:D565: 85 09        	sta	<L85+1+4
  2399 05:D567: 2B           	pld
  2400 05:D568: 3B           	tsc
  2401 05:D569: 18           	clc
  2402 05:D56A: 69 08 00     	adc	#L85+4
  2403 05:D56D: 1B           	tcs
  Sat Jul 10 2021  1:15                                                Page 46


  2404 05:D56E: 98           	tya
  2405 05:D56F: 6B           	rtl
  2406                        ;}
  2407                        	.line	231
  2408                        	.endblock	231
  2409             00000004   L85	equ	4
  2410             00000005   L86	equ	5
  2411 05:D570:              	ends
  2412                        	efunc
  2413                        	.endfunc	231,5,4
  2414                        	.line	231
  2415                        ;
  2416                        ;VOID k_free(LPVOID ptr)
  2417                        ;{
  2418                        	.line	233
  2419                        	.line	234
  2420                        	MEMMAN
  2421                        	xdef	~~k_free
  2422                        	func
  2423                        	.function	234
  2424                        ~~k_free:
  2425                        	longa	on
  2426                        	longi	on
  2427 05:D570: 3B           	tsc
  2428 05:D571: 38           	sec
  2429 05:D572: E9 00 00     	sbc	#L89
  2430 05:D575: 1B           	tcs
  2431 05:D576: 0B           	phd
  2432 05:D577: 5B           	tcd
  2433             00000004   ptr_0	set	4
  2434                        	.block	234
  2435                        ;	k_mem_deallocate_heap(ptr);
  2436                        	.sym	ptr,4,129,6,32
  2437                        	.line	235
  2438 05:D578: D4 06        	pei	<L89+ptr_0+2
  2439 05:D57A: D4 04        	pei	<L89+ptr_0
  2440 05:D57C: 22 FA D4 05  	jsl	~~k_mem_deallocate_heap
  2441                        ;}
  2442                        	.line	236
  2443                        L92:
  2444 05:D580: A5 02        	lda	<L89+2
  2445 05:D582: 85 06        	sta	<L89+2+4
  2446 05:D584: A5 01        	lda	<L89+1
  2447 05:D586: 85 05        	sta	<L89+1+4
  2448 05:D588: 2B           	pld
  2449 05:D589: 3B           	tsc
  2450 05:D58A: 18           	clc
  2451 05:D58B: 69 04 00     	adc	#L89+4
  2452 05:D58E: 1B           	tcs
  2453 05:D58F: 6B           	rtl
  2454                        	.endblock	236
  2455             00000000   L89	equ	0
  2456             00000001   L90	equ	1
  2457 05:D590:              	ends
  2458                        	efunc
  2459                        	.endfunc	236,1,0
  2460                        	.line	236
  2461                        ;
  Sat Jul 10 2021  1:15                                                Page 47


  2462                        ;PIPCPORT k_get_ipc_port(LPCSTR portName)
  2463                        ;{
  2464                        	.line	238
  2465                        	.line	239
  2466                        	MEMMAN
  2467                        	xdef	~~k_get_ipc_port
  2468                        	func
  2469                        	.function	239
  2470                        ~~k_get_ipc_port:
  2471                        	longa	on
  2472                        	longi	on
  2473 05:D590: 3B           	tsc
  2474 05:D591: 38           	sec
  2475 05:D592: E9 11 00     	sbc	#L93
  2476 05:D595: 1B           	tcs
  2477 05:D596: 0B           	phd
  2478 05:D597: 5B           	tcd
  2479             00000004   portName_0	set	4
  2480                        	.block	239
  2481                        ;	PIPCPORT p = NULL;
  2482                        ;	PFXNODE node = NULL;
  2483                        ;
  2484                        ;	BYTE type = 0;
  2485                        ;	//k_debug_string("k_get_ipc_port::enter...\r\n")
                    ;
  2486                        ;
  2487                        ;	if(portName!=NULL && portName[0] == '@')
  2488             00000000   p_1	set	0
  2489             00000004   node_1	set	4
  2490             00000008   type_1	set	8
  2491                        	.sym	p,0,138,1,32,84
  2492                        	.sym	node,4,138,1,32,5
  2493                        	.sym	type,8,14,1,8
  2494                        	.sym	portName,4,142,6,32
  2495 05:D598: 64 09        	stz	<L94+p_1
  2496 05:D59A: 64 0B        	stz	<L94+p_1+2
  2497 05:D59C: 64 0D        	stz	<L94+node_1
  2498 05:D59E: 64 0F        	stz	<L94+node_1+2
  2499 05:D5A0: E2 20        	sep	#$20
  2500                        	longa	off
  2501 05:D5A2: 64 11        	stz	<L94+type_1
  2502 05:D5A4: C2 20        	rep	#$20
  2503                        	longa	on
  2504                        	.line	246
  2505                        ;	{
  2506 05:D5A6: A5 15        	lda	<L93+portName_0
  2507 05:D5A8: 05 17        	ora	<L93+portName_0+2
  2508 05:D5AA: D0 03        	bne	L96
  2509 05:D5AC: 82 37 01     	brl	L10025
  2510                        L96:
  2511 05:D5AF: E2 20        	sep	#$20
  2512                        	longa	off
  2513 05:D5B1: A7 15        	lda	[<L93+portName_0]
  2514 05:D5B3: C9 40        	cmp	#<$40
  2515 05:D5B5: C2 20        	rep	#$20
  2516                        	longa	on
  2517 05:D5B7: F0 03        	beq	L97
  2518 05:D5B9: 82 2A 01     	brl	L10025
  Sat Jul 10 2021  1:15                                                Page 48


  2519                        L97:
  2520                        	.line	247
  2521                        ;		//k_debug_string("k_get_ipc_port::system
                    (@)\r\n");
  2522                        ;		if(strcmp(portName,IPC_SYS_DEBUG) == 0)
  2523                        	.line	249
  2524                        ;		{
  2525 05:D5BC: F4 xx xx     	pea	#^L84
  2526 05:D5BF: F4 xx xx     	pea	#<L84
  2527 05:D5C2: D4 17        	pei	<L93+portName_0+2
  2528 05:D5C4: D4 15        	pei	<L93+portName_0
  2529 05:D5C6: 22 xx xx xx  	jsl	~~strcmp
  2530 05:D5CA: AA           	tax
  2531 05:D5CB: F0 03        	beq	L98
  2532 05:D5CD: 82 09 00     	brl	L10026
  2533                        L98:
  2534                        	.line	250
  2535                        ;			type = IPC_PORT_DEBUG;
  2536                        	.line	251
  2537 05:D5D0: E2 20        	sep	#$20
  2538                        	longa	off
  2539 05:D5D2: 64 11        	stz	<L94+type_1
  2540 05:D5D4: C2 20        	rep	#$20
  2541                        	longa	on
  2542                        ;		}
  2543                        	.line	252
  2544                        ;		else if(strcmp(portName,IPC_SYS_DEBUG_HD
                    ) == 0)
  2545 05:D5D6: 82 79 00     	brl	L10027
  2546                        L10026:
  2547                        	.line	253
  2548                        ;		{
  2549 05:D5D9: F4 xx xx     	pea	#^L84+7
  2550 05:D5DC: F4 xx xx     	pea	#<L84+7
  2551 05:D5DF: D4 17        	pei	<L93+portName_0+2
  2552 05:D5E1: D4 15        	pei	<L93+portName_0
  2553 05:D5E3: 22 xx xx xx  	jsl	~~strcmp
  2554 05:D5E7: AA           	tax
  2555 05:D5E8: F0 03        	beq	L99
  2556 05:D5EA: 82 0B 00     	brl	L10028
  2557                        L99:
  2558                        	.line	254
  2559                        ;			type = IPC_PORT_DEBUG_HD;
  2560                        	.line	255
  2561 05:D5ED: E2 20        	sep	#$20
  2562                        	longa	off
  2563 05:D5EF: A9 05        	lda	#$5
  2564 05:D5F1: 85 11        	sta	<L94+type_1
  2565 05:D5F3: C2 20        	rep	#$20
  2566                        	longa	on
  2567                        ;		}
  2568                        	.line	256
  2569                        ;		else if(strcmp(portName,IPC_SYS_KEYBOARD
                    ) == 0)
  2570 05:D5F5: 82 5A 00     	brl	L10029
  2571                        L10028:
  2572                        	.line	257
  2573                        ;		{
  Sat Jul 10 2021  1:15                                                Page 49


  2574 05:D5F8: F4 xx xx     	pea	#^L84+16
  2575 05:D5FB: F4 xx xx     	pea	#<L84+16
  2576 05:D5FE: D4 17        	pei	<L93+portName_0+2
  2577 05:D600: D4 15        	pei	<L93+portName_0
  2578 05:D602: 22 xx xx xx  	jsl	~~strcmp
  2579 05:D606: AA           	tax
  2580 05:D607: F0 03        	beq	L100
  2581 05:D609: 82 0B 00     	brl	L10030
  2582                        L100:
  2583                        	.line	258
  2584                        ;			type = IPC_PORT_KEYBOARD;
  2585                        	.line	259
  2586 05:D60C: E2 20        	sep	#$20
  2587                        	longa	off
  2588 05:D60E: A9 02        	lda	#$2
  2589 05:D610: 85 11        	sta	<L94+type_1
  2590 05:D612: C2 20        	rep	#$20
  2591                        	longa	on
  2592                        ;		}
  2593                        	.line	260
  2594                        ;		else if(strcmp(portName,IPC_SYS_MOUSE) =
                    = 0)
  2595 05:D614: 82 3B 00     	brl	L10031
  2596                        L10030:
  2597                        	.line	261
  2598                        ;		{
  2599 05:D617: F4 xx xx     	pea	#^L84+26
  2600 05:D61A: F4 xx xx     	pea	#<L84+26
  2601 05:D61D: D4 17        	pei	<L93+portName_0+2
  2602 05:D61F: D4 15        	pei	<L93+portName_0
  2603 05:D621: 22 xx xx xx  	jsl	~~strcmp
  2604 05:D625: AA           	tax
  2605 05:D626: F0 03        	beq	L101
  2606 05:D628: 82 0B 00     	brl	L10032
  2607                        L101:
  2608                        	.line	262
  2609                        ;			type = IPC_PORT_MOUSE;
  2610                        	.line	263
  2611 05:D62B: E2 20        	sep	#$20
  2612                        	longa	off
  2613 05:D62D: A9 03        	lda	#$3
  2614 05:D62F: 85 11        	sta	<L94+type_1
  2615 05:D631: C2 20        	rep	#$20
  2616                        	longa	on
  2617                        ;		}
  2618                        	.line	264
  2619                        ;		else if(strcmp(portName,IPC_SYS_CLIPBOAR
                    D) == 0)
  2620 05:D633: 82 1C 00     	brl	L10033
  2621                        L10032:
  2622                        	.line	265
  2623                        ;		{
  2624 05:D636: F4 xx xx     	pea	#^L84+33
  2625 05:D639: F4 xx xx     	pea	#<L84+33
  2626 05:D63C: D4 17        	pei	<L93+portName_0+2
  2627 05:D63E: D4 15        	pei	<L93+portName_0
  2628 05:D640: 22 xx xx xx  	jsl	~~strcmp
  2629 05:D644: AA           	tax
  Sat Jul 10 2021  1:15                                                Page 50


  2630 05:D645: F0 03        	beq	L102
  2631 05:D647: 82 08 00     	brl	L10034
  2632                        L102:
  2633                        	.line	266
  2634                        ;			type = IPC_PORT_CLIPBOARD;
  2635                        	.line	267
  2636 05:D64A: E2 20        	sep	#$20
  2637                        	longa	off
  2638 05:D64C: A9 04        	lda	#$4
  2639 05:D64E: 85 11        	sta	<L94+type_1
  2640 05:D650: C2 20        	rep	#$20
  2641                        	longa	on
  2642                        ;		}
  2643                        	.line	268
  2644                        ;
  2645                        ;		if(_ipc_global_ports[type] == NULL)
  2646                        L10034:
  2647                        L10033:
  2648                        L10031:
  2649                        L10029:
  2650                        L10027:
  2651                        	.line	270
  2652                        ;		{
  2653 05:D652: A5 11        	lda	<L94+type_1
  2654 05:D654: 29 FF 00     	and	#$ff
  2655 05:D657: 85 05        	sta	<R1
  2656 05:D659: A5 05        	lda	<R1
  2657 05:D65B: 0A           	asl	A
  2658 05:D65C: 0A           	asl	A
  2659 05:D65D: 85 01        	sta	<R0
  2660 05:D65F: 18           	clc
  2661 05:D660: A9 xx xx     	lda	#<~~_ipc_global_ports
  2662 05:D663: 65 01        	adc	<R0
  2663 05:D665: 85 05        	sta	<R1
  2664 05:D667: B2 05        	lda	(<R1)
  2665 05:D669: A0 02 00     	ldy	#$2
  2666 05:D66C: 11 05        	ora	(<R1),Y
  2667 05:D66E: F0 03        	beq	L103
  2668 05:D670: 82 2F 00     	brl	L10035
  2669                        L103:
  2670                        	.line	271
  2671                        ;			//k_debug_strings("k_get_ipc_por
                    t::system:allocate:",(LPSTR)portName);
  2672                        ;			_ipc_global_ports[type] = k_open
                    _ipc_port(portName,0xFF);
  2673                        	.line	273
  2674 05:D673: A5 11        	lda	<L94+type_1
  2675 05:D675: 29 FF 00     	and	#$ff
  2676 05:D678: 85 05        	sta	<R1
  2677 05:D67A: A5 05        	lda	<R1
  2678 05:D67C: 0A           	asl	A
  2679 05:D67D: 0A           	asl	A
  2680 05:D67E: 85 01        	sta	<R0
  2681 05:D680: 18           	clc
  2682 05:D681: A9 xx xx     	lda	#<~~_ipc_global_ports
  2683 05:D684: 65 01        	adc	<R0
  2684 05:D686: 85 05        	sta	<R1
  2685 05:D688: F4 FF 00     	pea	#<$ff
  Sat Jul 10 2021  1:15                                                Page 51


  2686 05:D68B: D4 17        	pei	<L93+portName_0+2
  2687 05:D68D: D4 15        	pei	<L93+portName_0
  2688 05:D68F: 22 27 D7 05  	jsl	~~k_open_ipc_port
  2689 05:D693: 85 01        	sta	<R0
  2690 05:D695: 86 03        	stx	<R0+2
  2691 05:D697: A5 01        	lda	<R0
  2692 05:D699: 92 05        	sta	(<R1)
  2693 05:D69B: A5 03        	lda	<R0+2
  2694 05:D69D: A0 02 00     	ldy	#$2
  2695 05:D6A0: 91 05        	sta	(<R1),Y
  2696                        ;		}
  2697                        	.line	274
  2698                        ;
  2699                        ;		if(_ipc_global_ports[type] != NULL)
  2700                        L10035:
  2701                        	.line	276
  2702                        ;		{
  2703 05:D6A2: A5 11        	lda	<L94+type_1
  2704 05:D6A4: 29 FF 00     	and	#$ff
  2705 05:D6A7: 85 05        	sta	<R1
  2706 05:D6A9: A5 05        	lda	<R1
  2707 05:D6AB: 0A           	asl	A
  2708 05:D6AC: 0A           	asl	A
  2709 05:D6AD: 85 01        	sta	<R0
  2710 05:D6AF: 18           	clc
  2711 05:D6B0: A9 xx xx     	lda	#<~~_ipc_global_ports
  2712 05:D6B3: 65 01        	adc	<R0
  2713 05:D6B5: 85 05        	sta	<R1
  2714 05:D6B7: B2 05        	lda	(<R1)
  2715 05:D6B9: A0 02 00     	ldy	#$2
  2716 05:D6BC: 11 05        	ora	(<R1),Y
  2717 05:D6BE: D0 03        	bne	L104
  2718 05:D6C0: 82 20 00     	brl	L10036
  2719                        L104:
  2720                        	.line	277
  2721                        ;			//k_debug_strings("k_get_ipc_por
                    t::system(@):found:",(LPSTR)portName);
  2722                        ;			p = _ipc_global_ports[type];
  2723                        	.line	279
  2724 05:D6C3: A5 11        	lda	<L94+type_1
  2725 05:D6C5: 29 FF 00     	and	#$ff
  2726 05:D6C8: 85 05        	sta	<R1
  2727 05:D6CA: A5 05        	lda	<R1
  2728 05:D6CC: 0A           	asl	A
  2729 05:D6CD: 0A           	asl	A
  2730 05:D6CE: 85 01        	sta	<R0
  2731 05:D6D0: 18           	clc
  2732 05:D6D1: A9 xx xx     	lda	#<~~_ipc_global_ports
  2733 05:D6D4: 65 01        	adc	<R0
  2734 05:D6D6: 85 05        	sta	<R1
  2735 05:D6D8: B2 05        	lda	(<R1)
  2736 05:D6DA: 85 09        	sta	<L94+p_1
  2737 05:D6DC: A0 02 00     	ldy	#$2
  2738 05:D6DF: B1 05        	lda	(<R1),Y
  2739 05:D6E1: 85 0B        	sta	<L94+p_1+2
  2740                        ;		}
  2741                        	.line	280
  2742                        ;	}
  Sat Jul 10 2021  1:15                                                Page 52


  2743                        L10036:
  2744                        	.line	281
  2745                        ;	else
  2746 05:D6E3: 82 2B 00     	brl	L10037
  2747                        L10025:
  2748                        ;	{
  2749                        	.line	283
  2750                        ;		//k_debug_strings("k_get_ipc_port::user:
                    ",(LPCHAR)portName);
  2751                        ;		node = k_nodelist_searchByName(_ipc_port
                    s,portName);
  2752                        	.line	285
  2753 05:D6E6: D4 17        	pei	<L93+portName_0+2
  2754 05:D6E8: D4 15        	pei	<L93+portName_0
  2755 05:D6EA: AD xx xx     	lda	|~~_ipc_ports+2
  2756 05:D6ED: 48           	pha
  2757 05:D6EE: AD xx xx     	lda	|~~_ipc_ports
  2758 05:D6F1: 48           	pha
  2759 05:D6F2: 22 xx xx xx  	jsl	~~k_nodelist_searchByName
  2760 05:D6F6: 85 0D        	sta	<L94+node_1
  2761 05:D6F8: 86 0F        	stx	<L94+node_1+2
  2762                        ;		if(node!=NULL)
  2763                        	.line	286
  2764                        ;		{
  2765 05:D6FA: A5 0D        	lda	<L94+node_1
  2766 05:D6FC: 05 0F        	ora	<L94+node_1+2
  2767 05:D6FE: D0 03        	bne	L105
  2768 05:D700: 82 0E 00     	brl	L10038
  2769                        L105:
  2770                        	.line	287
  2771                        ;			p = (PIPCPORT)node->data;
  2772                        	.line	288
  2773 05:D703: A0 02 00     	ldy	#$2
  2774 05:D706: B7 0D        	lda	[<L94+node_1],Y
  2775 05:D708: 85 09        	sta	<L94+p_1
  2776 05:D70A: A0 04 00     	ldy	#$4
  2777 05:D70D: B7 0D        	lda	[<L94+node_1],Y
  2778 05:D70F: 85 0B        	sta	<L94+p_1+2
  2779                        ;		}
  2780                        	.line	289
  2781                        ;	}
  2782                        L10038:
  2783                        	.line	290
  2784                        L10037:
  2785                        ;
  2786                        ;	//k_debug_pointer("k_get_ipc_port::exit:",p);
  2787                        ;
  2788                        ;	return p;
  2789                        	.line	294
  2790 05:D711: A6 0B        	ldx	<L94+p_1+2
  2791 05:D713: A5 09        	lda	<L94+p_1
  2792                        L106:
  2793 05:D715: A8           	tay
  2794 05:D716: A5 13        	lda	<L93+2
  2795 05:D718: 85 17        	sta	<L93+2+4
  2796 05:D71A: A5 12        	lda	<L93+1
  2797 05:D71C: 85 16        	sta	<L93+1+4
  2798 05:D71E: 2B           	pld
  Sat Jul 10 2021  1:15                                                Page 53


  2799 05:D71F: 3B           	tsc
  2800 05:D720: 18           	clc
  2801 05:D721: 69 15 00     	adc	#L93+4
  2802 05:D724: 1B           	tcs
  2803 05:D725: 98           	tya
  2804 05:D726: 6B           	rtl
  2805                        ;}
  2806                        	.line	295
  2807                        	.endblock	295
  2808             00000011   L93	equ	17
  2809             00000009   L94	equ	9
  2810 05:D727:              	ends
  2811                        	efunc
  2812                        	.endfunc	295,9,17
  2813                        	.line	295
  2814                        	data
  2815                        L84:
  2816 00:0112: 40 64 65 62  	db	$40,$64,$65,$62,$75,$67,$00,$40,$64,$65,
                    $62,$75,$67,$68,$64
       00:0116: 75 67 00 40 
       00:011A: 64 65 62 75 
       00:011E: 67 68 64 
  2817 00:0121: 00 40 6B 65  	db	$00,$40,$6B,$65,$79,$62,$6F,$61,$72,$64,
                    $00,$40,$6D,$6F,$75
       00:0125: 79 62 6F 61 
       00:0129: 72 64 00 40 
       00:012D: 6D 6F 75 
  2818 00:0130: 73 65 00 40  	db	$73,$65,$00,$40,$63,$6C,$69,$70,$62,$6F,
                    $61,$72,$64,$00
       00:0134: 63 6C 69 70 
       00:0138: 62 6F 61 72 
       00:013C: 64 00 
  2819 00:013E:              	ends
  2820                        ;
  2821                        ;PIPCPORT k_open_ipc_port(LPCSTR portName,BYTE typ
                    e)
  2822                        ;{
  2823                        	.line	297
  2824                        	.line	298
  2825                        	MEMMAN
  2826                        	xdef	~~k_open_ipc_port
  2827                        	func
  2828                        	.function	298
  2829                        ~~k_open_ipc_port:
  2830                        	longa	on
  2831                        	longi	on
  2832 05:D727: 3B           	tsc
  2833 05:D728: 38           	sec
  2834 05:D729: E9 08 00     	sbc	#L108
  2835 05:D72C: 1B           	tcs
  2836 05:D72D: 0B           	phd
  2837 05:D72E: 5B           	tcd
  2838             00000004   portName_0	set	4
  2839             00000008   type_0	set	8
  2840                        	.block	298
  2841                        ;	PIPCPORT port = NULL;
  2842                        ;
  2843                        ;	//k_debug_string("k_open_ipc_port::enter...\r\n"
  Sat Jul 10 2021  1:15                                                Page 54


                    );
  2844                        ;
  2845                        ;	if(portName!=NULL)
  2846             00000000   port_1	set	0
  2847                        	.sym	port,0,138,1,32,84
  2848                        	.sym	portName,4,142,6,32
  2849                        	.sym	type,8,14,6,8
  2850 05:D72F: 64 05        	stz	<L109+port_1
  2851 05:D731: 64 07        	stz	<L109+port_1+2
  2852                        	.line	303
  2853                        ;	{
  2854 05:D733: A5 0C        	lda	<L108+portName_0
  2855 05:D735: 05 0E        	ora	<L108+portName_0+2
  2856 05:D737: D0 03        	bne	L111
  2857 05:D739: 82 0A 01     	brl	L10039
  2858                        L111:
  2859                        	.line	304
  2860                        ;		if(portName[0]=='@' && type!=0xFF)
  2861                        	.line	305
  2862                        ;			return NULL;
  2863 05:D73C: E2 20        	sep	#$20
  2864                        	longa	off
  2865 05:D73E: A7 0C        	lda	[<L108+portName_0]
  2866 05:D740: C9 40        	cmp	#<$40
  2867 05:D742: C2 20        	rep	#$20
  2868                        	longa	on
  2869 05:D744: F0 03        	beq	L112
  2870 05:D746: 82 26 00     	brl	L10040
  2871                        L112:
  2872 05:D749: E2 20        	sep	#$20
  2873                        	longa	off
  2874 05:D74B: A5 10        	lda	<L108+type_0
  2875 05:D74D: C9 FF        	cmp	#<$ff
  2876 05:D74F: C2 20        	rep	#$20
  2877                        	longa	on
  2878 05:D751: D0 03        	bne	L113
  2879 05:D753: 82 19 00     	brl	L10040
  2880                        L113:
  2881                        	.line	306
  2882 05:D756: A9 00 00     	lda	#$0
  2883 05:D759: AA           	tax
  2884 05:D75A: A9 00 00     	lda	#$0
  2885                        L114:
  2886 05:D75D: A8           	tay
  2887 05:D75E: A5 0A        	lda	<L108+2
  2888 05:D760: 85 10        	sta	<L108+2+6
  2889 05:D762: A5 09        	lda	<L108+1
  2890 05:D764: 85 0F        	sta	<L108+1+6
  2891 05:D766: 2B           	pld
  2892 05:D767: 3B           	tsc
  2893 05:D768: 18           	clc
  2894 05:D769: 69 0E 00     	adc	#L108+6
  2895 05:D76C: 1B           	tcs
  2896 05:D76D: 98           	tya
  2897 05:D76E: 6B           	rtl
  2898                        ;
  2899                        ;		//k_debug_strings("k_open_ipc_port::name
                    :",(LPCHAR)portName);
  Sat Jul 10 2021  1:15                                                Page 55


  2900                        ;
  2901                        ;		port = k_mem_allocate_heap(sizeof(IPCPOR
                    T));
  2902                        L10040:
  2903                        	.line	310
  2904 05:D76F: F4 12 00     	pea	#<$12
  2905 05:D772: 22 6E D4 05  	jsl	~~k_mem_allocate_heap
  2906 05:D776: 85 05        	sta	<L109+port_1
  2907 05:D778: 86 07        	stx	<L109+port_1+2
  2908                        ;		if(port!=NULL)
  2909                        	.line	311
  2910                        ;		{
  2911 05:D77A: A5 05        	lda	<L109+port_1
  2912 05:D77C: 05 07        	ora	<L109+port_1+2
  2913 05:D77E: D0 03        	bne	L115
  2914 05:D780: 82 C3 00     	brl	L10041
  2915                        L115:
  2916                        	.line	312
  2917                        ;			port->id = (ULONG)port;
  2918                        	.line	313
  2919 05:D783: A5 05        	lda	<L109+port_1
  2920 05:D785: 87 05        	sta	[<L109+port_1]
  2921 05:D787: A5 07        	lda	<L109+port_1+2
  2922 05:D789: A0 02 00     	ldy	#$2
  2923 05:D78C: 97 05        	sta	[<L109+port_1],Y
  2924                        ;			port->type = type;
  2925                        	.line	314
  2926 05:D78E: E2 20        	sep	#$20
  2927                        	longa	off
  2928 05:D790: A5 10        	lda	<L108+type_0
  2929 05:D792: A0 04 00     	ldy	#$4
  2930 05:D795: 97 05        	sta	[<L109+port_1],Y
  2931 05:D797: C2 20        	rep	#$20
  2932                        	longa	on
  2933                        ;			port->name = k_fxstring_new((LPC
                    HAR)portName,32);
  2934                        	.line	315
  2935 05:D799: F4 20 00     	pea	#<$20
  2936 05:D79C: D4 0E        	pei	<L108+portName_0+2
  2937 05:D79E: D4 0C        	pei	<L108+portName_0
  2938 05:D7A0: 22 xx xx xx  	jsl	~~k_fxstring_new
  2939 05:D7A4: 85 01        	sta	<R0
  2940 05:D7A6: 86 03        	stx	<R0+2
  2941 05:D7A8: A5 01        	lda	<R0
  2942 05:D7AA: A0 05 00     	ldy	#$5
  2943 05:D7AD: 97 05        	sta	[<L109+port_1],Y
  2944 05:D7AF: A5 03        	lda	<R0+2
  2945 05:D7B1: A0 07 00     	ldy	#$7
  2946 05:D7B4: 97 05        	sta	[<L109+port_1],Y
  2947                        ;			port->queue = k_mem_allocate_hea
                    p(sizeof(FXQUEUE));
  2948                        	.line	316
  2949 05:D7B6: F4 0A 00     	pea	#<$a
  2950 05:D7B9: 22 6E D4 05  	jsl	~~k_mem_allocate_heap
  2951 05:D7BD: 85 01        	sta	<R0
  2952 05:D7BF: 86 03        	stx	<R0+2
  2953 05:D7C1: A5 01        	lda	<R0
  2954 05:D7C3: A0 0D 00     	ldy	#$d
  Sat Jul 10 2021  1:15                                                Page 56


  2955 05:D7C6: 97 05        	sta	[<L109+port_1],Y
  2956 05:D7C8: A5 03        	lda	<R0+2
  2957 05:D7CA: A0 0F 00     	ldy	#$f
  2958 05:D7CD: 97 05        	sta	[<L109+port_1],Y
  2959                        ;			if(port->queue!=NULL)
  2960                        	.line	317
  2961                        ;			{
  2962 05:D7CF: A0 0D 00     	ldy	#$d
  2963 05:D7D2: B7 05        	lda	[<L109+port_1],Y
  2964 05:D7D4: A0 0F 00     	ldy	#$f
  2965 05:D7D7: 17 05        	ora	[<L109+port_1],Y
  2966 05:D7D9: D0 03        	bne	L116
  2967 05:D7DB: 82 10 00     	brl	L10042
  2968                        L116:
  2969                        	.line	318
  2970                        ;				k_initialize(port->queue
                    );
  2971                        	.line	319
  2972 05:D7DE: A0 0F 00     	ldy	#$f
  2973 05:D7E1: B7 05        	lda	[<L109+port_1],Y
  2974 05:D7E3: 48           	pha
  2975 05:D7E4: A0 0D 00     	ldy	#$d
  2976 05:D7E7: B7 05        	lda	[<L109+port_1],Y
  2977 05:D7E9: 48           	pha
  2978 05:D7EA: 22 xx xx xx  	jsl	~~k_initialize
  2979                        ;			}
  2980                        	.line	320
  2981                        ;
  2982                        ;			if(_ipc_ports == NULL)
  2983                        L10042:
  2984                        	.line	322
  2985                        ;			{
  2986 05:D7EE: AD xx xx     	lda	|~~_ipc_ports
  2987 05:D7F1: 0D xx xx     	ora	|~~_ipc_ports+2
  2988 05:D7F4: F0 03        	beq	L117
  2989 05:D7F6: 82 16 00     	brl	L10043
  2990                        L117:
  2991                        	.line	323
  2992                        ;				//k_debug_strings("k_ope
                    n_ipc_port::create:","_k_ipc_system_list");
  2993                        ;				_ipc_ports = k_nodelist_
                    allocate_list("_k_ipc_system_list",NULL);
  2994                        	.line	325
  2995 05:D7F9: F4 00 00     	pea	#^$0
  2996 05:D7FC: F4 00 00     	pea	#<$0
  2997 05:D7FF: F4 xx xx     	pea	#^L107
  2998 05:D802: F4 xx xx     	pea	#<L107
  2999 05:D805: 22 xx xx xx  	jsl	~~k_nodelist_allocate_list
  3000 05:D809: 8D xx xx     	sta	|~~_ipc_ports
  3001 05:D80C: 8E xx xx     	stx	|~~_ipc_ports+2
  3002                        ;			}
  3003                        	.line	326
  3004                        ;
  3005                        ;			if(_ipc_ports!=NULL)
  3006                        L10043:
  3007                        	.line	328
  3008                        ;			{
  3009 05:D80F: AD xx xx     	lda	|~~_ipc_ports
  Sat Jul 10 2021  1:15                                                Page 57


  3010 05:D812: 0D xx xx     	ora	|~~_ipc_ports+2
  3011 05:D815: D0 03        	bne	L118
  3012 05:D817: 82 2C 00     	brl	L10044
  3013                        L118:
  3014                        	.line	329
  3015                        ;				k_nodelist_addtolist(_ip
                    c_ports,type,port->name->buffer,port);
  3016                        	.line	330
  3017 05:D81A: D4 07        	pei	<L109+port_1+2
  3018 05:D81C: D4 05        	pei	<L109+port_1
  3019 05:D81E: A0 05 00     	ldy	#$5
  3020 05:D821: B7 05        	lda	[<L109+port_1],Y
  3021 05:D823: 85 01        	sta	<R0
  3022 05:D825: A0 07 00     	ldy	#$7
  3023 05:D828: B7 05        	lda	[<L109+port_1],Y
  3024 05:D82A: 85 03        	sta	<R0+2
  3025 05:D82C: A0 06 00     	ldy	#$6
  3026 05:D82F: B7 01        	lda	[<R0],Y
  3027 05:D831: 48           	pha
  3028 05:D832: A0 04 00     	ldy	#$4
  3029 05:D835: B7 01        	lda	[<R0],Y
  3030 05:D837: 48           	pha
  3031 05:D838: D4 10        	pei	<L108+type_0
  3032 05:D83A: AD xx xx     	lda	|~~_ipc_ports+2
  3033 05:D83D: 48           	pha
  3034 05:D83E: AD xx xx     	lda	|~~_ipc_ports
  3035 05:D841: 48           	pha
  3036 05:D842: 22 xx xx xx  	jsl	~~k_nodelist_addtolist
  3037                        ;			}
  3038                        	.line	331
  3039                        ;
  3040                        ;		}
  3041                        L10044:
  3042                        	.line	333
  3043                        ;	}
  3044                        L10041:
  3045                        	.line	334
  3046                        ;
  3047                        ;	//k_debug_string("k_open_ipc_port::exit...\r\n")
                    ;
  3048                        ;
  3049                        ;	return port;
  3050                        L10039:
  3051                        	.line	338
  3052 05:D846: A6 07        	ldx	<L109+port_1+2
  3053 05:D848: A5 05        	lda	<L109+port_1
  3054 05:D84A: 82 10 FF     	brl	L114
  3055                        ;}
  3056                        	.line	339
  3057                        	.endblock	339
  3058             00000008   L108	equ	8
  3059             00000005   L109	equ	5
  3060 05:D84D:              	ends
  3061                        	efunc
  3062                        	.endfunc	339,5,8
  3063                        	.line	339
  3064                        	data
  3065                        L107:
  Sat Jul 10 2021  1:15                                                Page 58


  3066 00:013E: 5F 6B 5F 69  	db	$5F,$6B,$5F,$69,$70,$63,$5F,$73,$79,$73,
                    $74,$65,$6D,$5F,$6C
       00:0142: 70 63 5F 73 
       00:0146: 79 73 74 65 
       00:014A: 6D 5F 6C 
  3067 00:014D: 69 73 74 00  	db	$69,$73,$74,$00
  3068 00:0151:              	ends
  3069                        ;
  3070                        ;VOID k_close_ipc_port(PIPCPORT port)
  3071                        ;{
  3072                        	.line	341
  3073                        	.line	342
  3074                        	MEMMAN
  3075                        	xdef	~~k_close_ipc_port
  3076                        	func
  3077                        	.function	342
  3078                        ~~k_close_ipc_port:
  3079                        	longa	on
  3080                        	longi	on
  3081 05:D84D: 3B           	tsc
  3082 05:D84E: 38           	sec
  3083 05:D84F: E9 0C 00     	sbc	#L120
  3084 05:D852: 1B           	tcs
  3085 05:D853: 0B           	phd
  3086 05:D854: 5B           	tcd
  3087             00000004   port_0	set	4
  3088                        	.block	342
  3089                        ;	PFXNODE node = NULL;
  3090                        ;
  3091                        ;	//k_debug_string("k_close_ipc_port::enter...\r\n
                    ");
  3092                        ;
  3093                        ;	if(port!=NULL && (port->id == (ULONG)port) && po
                    rt->name->buffer[0]!='@')
  3094             00000000   node_1	set	0
  3095                        	.sym	node,0,138,1,32,5
  3096                        	.sym	port,4,138,6,32,84
  3097 05:D855: 64 09        	stz	<L121+node_1
  3098 05:D857: 64 0B        	stz	<L121+node_1+2
  3099                        	.line	347
  3100                        ;	{
  3101 05:D859: A5 10        	lda	<L120+port_0
  3102 05:D85B: 05 12        	ora	<L120+port_0+2
  3103 05:D85D: D0 03        	bne	L123
  3104 05:D85F: 82 F0 00     	brl	L10045
  3105                        L123:
  3106 05:D862: A5 10        	lda	<L120+port_0
  3107 05:D864: C7 10        	cmp	[<L120+port_0]
  3108 05:D866: D0 07        	bne	L124
  3109 05:D868: A5 12        	lda	<L120+port_0+2
  3110 05:D86A: A0 02 00     	ldy	#$2
  3111 05:D86D: D7 10        	cmp	[<L120+port_0],Y
  3112                        L124:
  3113 05:D86F: F0 03        	beq	L125
  3114 05:D871: 82 DE 00     	brl	L10045
  3115                        L125:
  3116 05:D874: A0 05 00     	ldy	#$5
  3117 05:D877: B7 10        	lda	[<L120+port_0],Y
  Sat Jul 10 2021  1:15                                                Page 59


  3118 05:D879: 85 01        	sta	<R0
  3119 05:D87B: A0 07 00     	ldy	#$7
  3120 05:D87E: B7 10        	lda	[<L120+port_0],Y
  3121 05:D880: 85 03        	sta	<R0+2
  3122 05:D882: A0 04 00     	ldy	#$4
  3123 05:D885: B7 01        	lda	[<R0],Y
  3124 05:D887: 85 05        	sta	<R1
  3125 05:D889: A0 06 00     	ldy	#$6
  3126 05:D88C: B7 01        	lda	[<R0],Y
  3127 05:D88E: 85 07        	sta	<R1+2
  3128 05:D890: E2 20        	sep	#$20
  3129                        	longa	off
  3130 05:D892: A7 05        	lda	[<R1]
  3131 05:D894: C9 40        	cmp	#<$40
  3132 05:D896: C2 20        	rep	#$20
  3133                        	longa	on
  3134 05:D898: D0 03        	bne	L126
  3135 05:D89A: 82 B5 00     	brl	L10045
  3136                        L126:
  3137                        	.line	348
  3138                        ;		//k_debug_strings("k_close_ipc_port::nam
                    e:",port->name->buffer);
  3139                        ;
  3140                        ;		if(_ipc_ports!=NULL)
  3141                        	.line	351
  3142                        ;		{
  3143 05:D89D: AD xx xx     	lda	|~~_ipc_ports
  3144 05:D8A0: 0D xx xx     	ora	|~~_ipc_ports+2
  3145 05:D8A3: D0 03        	bne	L127
  3146 05:D8A5: 82 AA 00     	brl	L10046
  3147                        L127:
  3148                        	.line	352
  3149                        ;			node = k_nodelist_searchByName(_
                    ipc_ports,(LPSTR)port->name->buffer);
  3150                        	.line	353
  3151 05:D8A8: A0 05 00     	ldy	#$5
  3152 05:D8AB: B7 10        	lda	[<L120+port_0],Y
  3153 05:D8AD: 85 01        	sta	<R0
  3154 05:D8AF: A0 07 00     	ldy	#$7
  3155 05:D8B2: B7 10        	lda	[<L120+port_0],Y
  3156 05:D8B4: 85 03        	sta	<R0+2
  3157 05:D8B6: A0 06 00     	ldy	#$6
  3158 05:D8B9: B7 01        	lda	[<R0],Y
  3159 05:D8BB: 48           	pha
  3160 05:D8BC: A0 04 00     	ldy	#$4
  3161 05:D8BF: B7 01        	lda	[<R0],Y
  3162 05:D8C1: 48           	pha
  3163 05:D8C2: AD xx xx     	lda	|~~_ipc_ports+2
  3164 05:D8C5: 48           	pha
  3165 05:D8C6: AD xx xx     	lda	|~~_ipc_ports
  3166 05:D8C9: 48           	pha
  3167 05:D8CA: 22 xx xx xx  	jsl	~~k_nodelist_searchByName
  3168 05:D8CE: 85 09        	sta	<L121+node_1
  3169 05:D8D0: 86 0B        	stx	<L121+node_1+2
  3170                        ;			if(node!=NULL)
  3171                        	.line	354
  3172                        ;			{
  3173 05:D8D2: A5 09        	lda	<L121+node_1
  Sat Jul 10 2021  1:15                                                Page 60


  3174 05:D8D4: 05 0B        	ora	<L121+node_1+2
  3175 05:D8D6: D0 03        	bne	L128
  3176 05:D8D8: 82 77 00     	brl	L10047
  3177                        L128:
  3178                        	.line	355
  3179                        ;				k_mem_deallocate_heap( (
                    (PIPCPORT)node->data)->queue);
  3180                        	.line	356
  3181 05:D8DB: A0 02 00     	ldy	#$2
  3182 05:D8DE: B7 09        	lda	[<L121+node_1],Y
  3183 05:D8E0: 85 01        	sta	<R0
  3184 05:D8E2: A0 04 00     	ldy	#$4
  3185 05:D8E5: B7 09        	lda	[<L121+node_1],Y
  3186 05:D8E7: 85 03        	sta	<R0+2
  3187 05:D8E9: A0 0F 00     	ldy	#$f
  3188 05:D8EC: B7 01        	lda	[<R0],Y
  3189 05:D8EE: 48           	pha
  3190 05:D8EF: A0 0D 00     	ldy	#$d
  3191 05:D8F2: B7 01        	lda	[<R0],Y
  3192 05:D8F4: 48           	pha
  3193 05:D8F5: 22 FA D4 05  	jsl	~~k_mem_deallocate_heap
  3194                        ;				k_fxstring_free(((PIPCPO
                    RT)node->data)->name);
  3195                        	.line	357
  3196 05:D8F9: A0 02 00     	ldy	#$2
  3197 05:D8FC: B7 09        	lda	[<L121+node_1],Y
  3198 05:D8FE: 85 01        	sta	<R0
  3199 05:D900: A0 04 00     	ldy	#$4
  3200 05:D903: B7 09        	lda	[<L121+node_1],Y
  3201 05:D905: 85 03        	sta	<R0+2
  3202 05:D907: A0 07 00     	ldy	#$7
  3203 05:D90A: B7 01        	lda	[<R0],Y
  3204 05:D90C: 48           	pha
  3205 05:D90D: A0 05 00     	ldy	#$5
  3206 05:D910: B7 01        	lda	[<R0],Y
  3207 05:D912: 48           	pha
  3208 05:D913: 22 xx xx xx  	jsl	~~k_fxstring_free
  3209                        ;
  3210                        ;				((PIPCPORT)node->data)->
                    id = 0L;
  3211                        	.line	359
  3212 05:D917: A0 02 00     	ldy	#$2
  3213 05:D91A: B7 09        	lda	[<L121+node_1],Y
  3214 05:D91C: 85 01        	sta	<R0
  3215 05:D91E: A0 04 00     	ldy	#$4
  3216 05:D921: B7 09        	lda	[<L121+node_1],Y
  3217 05:D923: 85 03        	sta	<R0+2
  3218 05:D925: A9 00 00     	lda	#$0
  3219 05:D928: 87 01        	sta	[<R0]
  3220 05:D92A: A9 00 00     	lda	#$0
  3221 05:D92D: A0 02 00     	ldy	#$2
  3222 05:D930: 97 01        	sta	[<R0],Y
  3223                        ;
  3224                        ;				k_mem_deallocate_heap(no
                    de->data);
  3225                        	.line	361
  3226 05:D932: A0 04 00     	ldy	#$4
  3227 05:D935: B7 09        	lda	[<L121+node_1],Y
  Sat Jul 10 2021  1:15                                                Page 61


  3228 05:D937: 48           	pha
  3229 05:D938: A0 02 00     	ldy	#$2
  3230 05:D93B: B7 09        	lda	[<L121+node_1],Y
  3231 05:D93D: 48           	pha
  3232 05:D93E: 22 FA D4 05  	jsl	~~k_mem_deallocate_heap
  3233                        ;
  3234                        ;				k_nodelist_removefromlis
                    t(_ipc_ports,node);
  3235                        	.line	363
  3236 05:D942: D4 0B        	pei	<L121+node_1+2
  3237 05:D944: D4 09        	pei	<L121+node_1
  3238 05:D946: AD xx xx     	lda	|~~_ipc_ports+2
  3239 05:D949: 48           	pha
  3240 05:D94A: AD xx xx     	lda	|~~_ipc_ports
  3241 05:D94D: 48           	pha
  3242 05:D94E: 22 xx xx xx  	jsl	~~k_nodelist_removefromlist
  3243                        ;			}
  3244                        	.line	364
  3245                        ;		}
  3246                        L10047:
  3247                        	.line	365
  3248                        ;	}
  3249                        L10046:
  3250                        	.line	366
  3251                        ;
  3252                        ;	//k_debug_string("k_close_ipc_port::exit...\r\n"
                    );
  3253                        ;}
  3254                        L10045:
  3255                        	.line	369
  3256                        L129:
  3257 05:D952: A5 0E        	lda	<L120+2
  3258 05:D954: 85 12        	sta	<L120+2+4
  3259 05:D956: A5 0D        	lda	<L120+1
  3260 05:D958: 85 11        	sta	<L120+1+4
  3261 05:D95A: 2B           	pld
  3262 05:D95B: 3B           	tsc
  3263 05:D95C: 18           	clc
  3264 05:D95D: 69 10 00     	adc	#L120+4
  3265 05:D960: 1B           	tcs
  3266 05:D961: 6B           	rtl
  3267                        	.endblock	369
  3268             0000000C   L120	equ	12
  3269             00000009   L121	equ	9
  3270 05:D962:              	ends
  3271                        	efunc
  3272                        	.endfunc	369,9,12
  3273                        	.line	369
  3274                        ;
  3275                        ;LPVOID k_read_ipc_port(PIPCPORT port)
  3276                        ;{
  3277                        	.line	371
  3278                        	.line	372
  3279                        	MEMMAN
  3280                        	xdef	~~k_read_ipc_port
  3281                        	func
  3282                        	.function	372
  3283                        ~~k_read_ipc_port:
  Sat Jul 10 2021  1:15                                                Page 62


  3284                        	longa	on
  3285                        	longi	on
  3286 05:D962: 3B           	tsc
  3287 05:D963: 38           	sec
  3288 05:D964: E9 04 00     	sbc	#L130
  3289 05:D967: 1B           	tcs
  3290 05:D968: 0B           	phd
  3291 05:D969: 5B           	tcd
  3292             00000004   port_0	set	4
  3293                        	.block	372
  3294                        ;	LPVOID data = NULL;
  3295                        ;
  3296                        ;	//k_debug_string("k_read_ipc_port::enter...\r\n"
                    );
  3297                        ;	if(port!=NULL && (port->id == (ULONG)port))
  3298             00000000   data_1	set	0
  3299                        	.sym	data,0,129,1,32
  3300                        	.sym	port,4,138,6,32,84
  3301 05:D96A: 64 01        	stz	<L131+data_1
  3302 05:D96C: 64 03        	stz	<L131+data_1+2
  3303                        	.line	376
  3304                        ;	{
  3305 05:D96E: A5 08        	lda	<L130+port_0
  3306 05:D970: 05 0A        	ora	<L130+port_0+2
  3307 05:D972: D0 03        	bne	L133
  3308 05:D974: 82 26 00     	brl	L10048
  3309                        L133:
  3310 05:D977: A5 08        	lda	<L130+port_0
  3311 05:D979: C7 08        	cmp	[<L130+port_0]
  3312 05:D97B: D0 07        	bne	L134
  3313 05:D97D: A5 0A        	lda	<L130+port_0+2
  3314 05:D97F: A0 02 00     	ldy	#$2
  3315 05:D982: D7 08        	cmp	[<L130+port_0],Y
  3316                        L134:
  3317 05:D984: F0 03        	beq	L135
  3318 05:D986: 82 14 00     	brl	L10048
  3319                        L135:
  3320                        	.line	377
  3321                        ;		data = k_dequeue(port->queue);
  3322                        	.line	378
  3323 05:D989: A0 0F 00     	ldy	#$f
  3324 05:D98C: B7 08        	lda	[<L130+port_0],Y
  3325 05:D98E: 48           	pha
  3326 05:D98F: A0 0D 00     	ldy	#$d
  3327 05:D992: B7 08        	lda	[<L130+port_0],Y
  3328 05:D994: 48           	pha
  3329 05:D995: 22 xx xx xx  	jsl	~~k_dequeue
  3330 05:D999: 85 01        	sta	<L131+data_1
  3331 05:D99B: 86 03        	stx	<L131+data_1+2
  3332                        ;	}
  3333                        	.line	379
  3334                        ;	//k_debug_string("k_read_ipc_port::exit...\r\n")
                    ;
  3335                        ;
  3336                        ;	return data;
  3337                        L10048:
  3338                        	.line	382
  3339 05:D99D: A6 03        	ldx	<L131+data_1+2
  Sat Jul 10 2021  1:15                                                Page 63


  3340 05:D99F: A5 01        	lda	<L131+data_1
  3341                        L136:
  3342 05:D9A1: A8           	tay
  3343 05:D9A2: A5 06        	lda	<L130+2
  3344 05:D9A4: 85 0A        	sta	<L130+2+4
  3345 05:D9A6: A5 05        	lda	<L130+1
  3346 05:D9A8: 85 09        	sta	<L130+1+4
  3347 05:D9AA: 2B           	pld
  3348 05:D9AB: 3B           	tsc
  3349 05:D9AC: 18           	clc
  3350 05:D9AD: 69 08 00     	adc	#L130+4
  3351 05:D9B0: 1B           	tcs
  3352 05:D9B1: 98           	tya
  3353 05:D9B2: 6B           	rtl
  3354                        ;}
  3355                        	.line	383
  3356                        	.endblock	383
  3357             00000004   L130	equ	4
  3358             00000001   L131	equ	1
  3359 05:D9B3:              	ends
  3360                        	efunc
  3361                        	.endfunc	383,1,4
  3362                        	.line	383
  3363                        ;
  3364                        ;
  3365                        ;LPVOID k_peek_ipc_port(PIPCPORT port)
  3366                        ;{
  3367                        	.line	386
  3368                        	.line	387
  3369                        	MEMMAN
  3370                        	xdef	~~k_peek_ipc_port
  3371                        	func
  3372                        	.function	387
  3373                        ~~k_peek_ipc_port:
  3374                        	longa	on
  3375                        	longi	on
  3376 05:D9B3: 3B           	tsc
  3377 05:D9B4: 38           	sec
  3378 05:D9B5: E9 00 00     	sbc	#L137
  3379 05:D9B8: 1B           	tcs
  3380 05:D9B9: 0B           	phd
  3381 05:D9BA: 5B           	tcd
  3382             00000004   port_0	set	4
  3383                        	.block	387
  3384                        ;	return NULL;
  3385                        	.sym	port,4,138,6,32,84
  3386                        	.line	388
  3387 05:D9BB: A9 00 00     	lda	#$0
  3388 05:D9BE: AA           	tax
  3389 05:D9BF: A9 00 00     	lda	#$0
  3390                        L140:
  3391 05:D9C2: A8           	tay
  3392 05:D9C3: A5 02        	lda	<L137+2
  3393 05:D9C5: 85 06        	sta	<L137+2+4
  3394 05:D9C7: A5 01        	lda	<L137+1
  3395 05:D9C9: 85 05        	sta	<L137+1+4
  3396 05:D9CB: 2B           	pld
  3397 05:D9CC: 3B           	tsc
  Sat Jul 10 2021  1:15                                                Page 64


  3398 05:D9CD: 18           	clc
  3399 05:D9CE: 69 04 00     	adc	#L137+4
  3400 05:D9D1: 1B           	tcs
  3401 05:D9D2: 98           	tya
  3402 05:D9D3: 6B           	rtl
  3403                        ;}
  3404                        	.line	389
  3405                        	.endblock	389
  3406             00000000   L137	equ	0
  3407             00000001   L138	equ	1
  3408 05:D9D4:              	ends
  3409                        	efunc
  3410                        	.endfunc	389,1,0
  3411                        	.line	389
  3412                        ;
  3413                        ;UINT k_write_ipc_port(PIPCPORT port,LPVOID data,U
                    INT size)
  3414                        ;{
  3415                        	.line	391
  3416                        	.line	392
  3417                        	MEMMAN
  3418                        	xdef	~~k_write_ipc_port
  3419                        	func
  3420                        	.function	392
  3421                        ~~k_write_ipc_port:
  3422                        	longa	on
  3423                        	longi	on
  3424 05:D9D4: 3B           	tsc
  3425 05:D9D5: 38           	sec
  3426 05:D9D6: E9 00 00     	sbc	#L141
  3427 05:D9D9: 1B           	tcs
  3428 05:D9DA: 0B           	phd
  3429 05:D9DB: 5B           	tcd
  3430             00000004   port_0	set	4
  3431             00000008   data_0	set	8
  3432             0000000C   size_0	set	12
  3433                        	.block	392
  3434                        ;	//k_debug_string("k_write_ipc_port::enter...\r\n
                    ");
  3435                        ;	if(port!=NULL && (port->id == (ULONG)port))
  3436                        	.sym	port,4,138,6,32,84
  3437                        	.sym	data,8,129,6,32
  3438                        	.sym	size,12,16,6,16
  3439                        	.line	394
  3440                        ;	{
  3441 05:D9DC: A5 04        	lda	<L141+port_0
  3442 05:D9DE: 05 06        	ora	<L141+port_0+2
  3443 05:D9E0: D0 03        	bne	L144
  3444 05:D9E2: 82 26 00     	brl	L10049
  3445                        L144:
  3446 05:D9E5: A5 04        	lda	<L141+port_0
  3447 05:D9E7: C7 04        	cmp	[<L141+port_0]
  3448 05:D9E9: D0 07        	bne	L145
  3449 05:D9EB: A5 06        	lda	<L141+port_0+2
  3450 05:D9ED: A0 02 00     	ldy	#$2
  3451 05:D9F0: D7 04        	cmp	[<L141+port_0],Y
  3452                        L145:
  3453 05:D9F2: F0 03        	beq	L146
  Sat Jul 10 2021  1:15                                                Page 65


  3454 05:D9F4: 82 14 00     	brl	L10049
  3455                        L146:
  3456                        	.line	395
  3457                        ;		k_enqueue(port->queue,data);
  3458                        	.line	396
  3459 05:D9F7: D4 0A        	pei	<L141+data_0+2
  3460 05:D9F9: D4 08        	pei	<L141+data_0
  3461 05:D9FB: A0 0F 00     	ldy	#$f
  3462 05:D9FE: B7 04        	lda	[<L141+port_0],Y
  3463 05:DA00: 48           	pha
  3464 05:DA01: A0 0D 00     	ldy	#$d
  3465 05:DA04: B7 04        	lda	[<L141+port_0],Y
  3466 05:DA06: 48           	pha
  3467 05:DA07: 22 xx xx xx  	jsl	~~k_enqueue
  3468                        ;	}
  3469                        	.line	397
  3470                        ;	//k_debug_string("k_write_ipc_port::exit...\r\n"
                    );
  3471                        ;	return size;
  3472                        L10049:
  3473                        	.line	399
  3474 05:DA0B: A5 0C        	lda	<L141+size_0
  3475                        L147:
  3476 05:DA0D: A8           	tay
  3477 05:DA0E: A5 02        	lda	<L141+2
  3478 05:DA10: 85 0C        	sta	<L141+2+10
  3479 05:DA12: A5 01        	lda	<L141+1
  3480 05:DA14: 85 0B        	sta	<L141+1+10
  3481 05:DA16: 2B           	pld
  3482 05:DA17: 3B           	tsc
  3483 05:DA18: 18           	clc
  3484 05:DA19: 69 0A 00     	adc	#L141+10
  3485 05:DA1C: 1B           	tcs
  3486 05:DA1D: 98           	tya
  3487 05:DA1E: 6B           	rtl
  3488                        ;}
  3489                        	.line	400
  3490                        	.endblock	400
  3491             00000000   L141	equ	0
  3492             00000001   L142	equ	1
  3493 05:DA1F:              	ends
  3494                        	efunc
  3495                        	.endfunc	400,1,0
  3496                        	.line	400
  3497                        ;
  3498                        ;void k_ipc_marshal_byte(PIPCPORT port,BYTE data)
  3499                        ;{
  3500                        	.line	402
  3501                        	.line	403
  3502                        	MEMMAN
  3503                        	xdef	~~k_ipc_marshal_byte
  3504                        	func
  3505                        	.function	403
  3506                        ~~k_ipc_marshal_byte:
  3507                        	longa	on
  3508                        	longi	on
  3509 05:DA1F: 3B           	tsc
  3510 05:DA20: 38           	sec
  Sat Jul 10 2021  1:15                                                Page 66


  3511 05:DA21: E9 04 00     	sbc	#L148
  3512 05:DA24: 1B           	tcs
  3513 05:DA25: 0B           	phd
  3514 05:DA26: 5B           	tcd
  3515             00000004   port_0	set	4
  3516             00000008   data_0	set	8
  3517                        	.block	403
  3518                        ;	PMARSHALDATA pm = NULL;
  3519                        ;
  3520                        ;	pm = k_mem_allocate_heap(sizeof(MARSHALDATA));
  3521             00000000   pm_1	set	0
  3522                        	.sym	pm,0,139,1,32,67
  3523                        	.sym	port,4,138,6,32,84
  3524                        	.sym	data,8,14,6,8
  3525 05:DA27: 64 01        	stz	<L149+pm_1
  3526 05:DA29: 64 03        	stz	<L149+pm_1+2
  3527                        	.line	406
  3528 05:DA2B: F4 04 00     	pea	#<$4
  3529 05:DA2E: 22 6E D4 05  	jsl	~~k_mem_allocate_heap
  3530 05:DA32: 85 01        	sta	<L149+pm_1
  3531 05:DA34: 86 03        	stx	<L149+pm_1+2
  3532                        ;	pm->byteValue = data;
  3533                        	.line	407
  3534 05:DA36: E2 20        	sep	#$20
  3535                        	longa	off
  3536 05:DA38: A5 0C        	lda	<L148+data_0
  3537 05:DA3A: 87 01        	sta	[<L149+pm_1]
  3538 05:DA3C: C2 20        	rep	#$20
  3539                        	longa	on
  3540                        ;	k_write_ipc_port(port,pm,0);
  3541                        	.line	408
  3542 05:DA3E: F4 00 00     	pea	#<$0
  3543 05:DA41: D4 03        	pei	<L149+pm_1+2
  3544 05:DA43: D4 01        	pei	<L149+pm_1
  3545 05:DA45: D4 0A        	pei	<L148+port_0+2
  3546 05:DA47: D4 08        	pei	<L148+port_0
  3547 05:DA49: 22 D4 D9 05  	jsl	~~k_write_ipc_port
  3548                        ;}
  3549                        	.line	409
  3550                        L151:
  3551 05:DA4D: A5 06        	lda	<L148+2
  3552 05:DA4F: 85 0C        	sta	<L148+2+6
  3553 05:DA51: A5 05        	lda	<L148+1
  3554 05:DA53: 85 0B        	sta	<L148+1+6
  3555 05:DA55: 2B           	pld
  3556 05:DA56: 3B           	tsc
  3557 05:DA57: 18           	clc
  3558 05:DA58: 69 0A 00     	adc	#L148+6
  3559 05:DA5B: 1B           	tcs
  3560 05:DA5C: 6B           	rtl
  3561                        	.endblock	409
  3562             00000004   L148	equ	4
  3563             00000001   L149	equ	1
  3564 05:DA5D:              	ends
  3565                        	efunc
  3566                        	.endfunc	409,1,4
  3567                        	.line	409
  3568                        ;
  Sat Jul 10 2021  1:15                                                Page 67


  3569                        ;void k_ipc_marshal_verb(PIPCPORT port,BYTE data1,
                    BYTE data2)
  3570                        ;{
  3571                        	.line	411
  3572                        	.line	412
  3573                        	MEMMAN
  3574                        	xdef	~~k_ipc_marshal_verb
  3575                        	func
  3576                        	.function	412
  3577                        ~~k_ipc_marshal_verb:
  3578                        	longa	on
  3579                        	longi	on
  3580 05:DA5D: 3B           	tsc
  3581 05:DA5E: 38           	sec
  3582 05:DA5F: E9 04 00     	sbc	#L152
  3583 05:DA62: 1B           	tcs
  3584 05:DA63: 0B           	phd
  3585 05:DA64: 5B           	tcd
  3586             00000004   port_0	set	4
  3587             00000008   data1_0	set	8
  3588             0000000A   data2_0	set	10
  3589                        	.block	412
  3590                        ;	PMARSHALDATA pm = NULL;
  3591                        ;
  3592                        ;	pm = k_mem_allocate_heap(sizeof(MARSHALDATA));
  3593             00000000   pm_1	set	0
  3594                        	.sym	pm,0,139,1,32,67
  3595                        	.sym	port,4,138,6,32,84
  3596                        	.sym	data1,8,14,6,8
  3597                        	.sym	data2,10,14,6,8
  3598 05:DA65: 64 01        	stz	<L153+pm_1
  3599 05:DA67: 64 03        	stz	<L153+pm_1+2
  3600                        	.line	415
  3601 05:DA69: F4 04 00     	pea	#<$4
  3602 05:DA6C: 22 6E D4 05  	jsl	~~k_mem_allocate_heap
  3603 05:DA70: 85 01        	sta	<L153+pm_1
  3604 05:DA72: 86 03        	stx	<L153+pm_1+2
  3605                        ;	pm->verbValue[0] = data1;
  3606                        	.line	416
  3607 05:DA74: E2 20        	sep	#$20
  3608                        	longa	off
  3609 05:DA76: A5 0C        	lda	<L152+data1_0
  3610 05:DA78: 87 01        	sta	[<L153+pm_1]
  3611 05:DA7A: C2 20        	rep	#$20
  3612                        	longa	on
  3613                        ;	pm->verbValue[1] = data2;
  3614                        	.line	417
  3615 05:DA7C: E2 20        	sep	#$20
  3616                        	longa	off
  3617 05:DA7E: A5 0E        	lda	<L152+data2_0
  3618 05:DA80: A0 01 00     	ldy	#$1
  3619 05:DA83: 97 01        	sta	[<L153+pm_1],Y
  3620 05:DA85: C2 20        	rep	#$20
  3621                        	longa	on
  3622                        ;	k_write_ipc_port(port,pm,0);
  3623                        	.line	418
  3624 05:DA87: F4 00 00     	pea	#<$0
  3625 05:DA8A: D4 03        	pei	<L153+pm_1+2
  Sat Jul 10 2021  1:15                                                Page 68


  3626 05:DA8C: D4 01        	pei	<L153+pm_1
  3627 05:DA8E: D4 0A        	pei	<L152+port_0+2
  3628 05:DA90: D4 08        	pei	<L152+port_0
  3629 05:DA92: 22 D4 D9 05  	jsl	~~k_write_ipc_port
  3630                        ;}
  3631                        	.line	419
  3632                        L155:
  3633 05:DA96: A5 06        	lda	<L152+2
  3634 05:DA98: 85 0E        	sta	<L152+2+8
  3635 05:DA9A: A5 05        	lda	<L152+1
  3636 05:DA9C: 85 0D        	sta	<L152+1+8
  3637 05:DA9E: 2B           	pld
  3638 05:DA9F: 3B           	tsc
  3639 05:DAA0: 18           	clc
  3640 05:DAA1: 69 0C 00     	adc	#L152+8
  3641 05:DAA4: 1B           	tcs
  3642 05:DAA5: 6B           	rtl
  3643                        	.endblock	419
  3644             00000004   L152	equ	4
  3645             00000001   L153	equ	1
  3646 05:DAA6:              	ends
  3647                        	efunc
  3648                        	.endfunc	419,1,4
  3649                        	.line	419
  3650                        ;
  3651                        ;void k_ipc_marshal_int(PIPCPORT port,UINT data)
  3652                        ;{
  3653                        	.line	421
  3654                        	.line	422
  3655                        	MEMMAN
  3656                        	xdef	~~k_ipc_marshal_int
  3657                        	func
  3658                        	.function	422
  3659                        ~~k_ipc_marshal_int:
  3660                        	longa	on
  3661                        	longi	on
  3662 05:DAA6: 3B           	tsc
  3663 05:DAA7: 38           	sec
  3664 05:DAA8: E9 04 00     	sbc	#L156
  3665 05:DAAB: 1B           	tcs
  3666 05:DAAC: 0B           	phd
  3667 05:DAAD: 5B           	tcd
  3668             00000004   port_0	set	4
  3669             00000008   data_0	set	8
  3670                        	.block	422
  3671                        ;	PMARSHALDATA pm = NULL;
  3672                        ;
  3673                        ;	pm = k_mem_allocate_heap(sizeof(MARSHALDATA));
  3674             00000000   pm_1	set	0
  3675                        	.sym	pm,0,139,1,32,67
  3676                        	.sym	port,4,138,6,32,84
  3677                        	.sym	data,8,16,6,16
  3678 05:DAAE: 64 01        	stz	<L157+pm_1
  3679 05:DAB0: 64 03        	stz	<L157+pm_1+2
  3680                        	.line	425
  3681 05:DAB2: F4 04 00     	pea	#<$4
  3682 05:DAB5: 22 6E D4 05  	jsl	~~k_mem_allocate_heap
  3683 05:DAB9: 85 01        	sta	<L157+pm_1
  Sat Jul 10 2021  1:15                                                Page 69


  3684 05:DABB: 86 03        	stx	<L157+pm_1+2
  3685                        ;	pm->intValue = data;
  3686                        	.line	426
  3687 05:DABD: A5 0C        	lda	<L156+data_0
  3688 05:DABF: 87 01        	sta	[<L157+pm_1]
  3689                        ;	k_write_ipc_port(port,pm,0);
  3690                        	.line	427
  3691 05:DAC1: F4 00 00     	pea	#<$0
  3692 05:DAC4: D4 03        	pei	<L157+pm_1+2
  3693 05:DAC6: D4 01        	pei	<L157+pm_1
  3694 05:DAC8: D4 0A        	pei	<L156+port_0+2
  3695 05:DACA: D4 08        	pei	<L156+port_0
  3696 05:DACC: 22 D4 D9 05  	jsl	~~k_write_ipc_port
  3697                        ;}
  3698                        	.line	428
  3699                        L159:
  3700 05:DAD0: A5 06        	lda	<L156+2
  3701 05:DAD2: 85 0C        	sta	<L156+2+6
  3702 05:DAD4: A5 05        	lda	<L156+1
  3703 05:DAD6: 85 0B        	sta	<L156+1+6
  3704 05:DAD8: 2B           	pld
  3705 05:DAD9: 3B           	tsc
  3706 05:DADA: 18           	clc
  3707 05:DADB: 69 0A 00     	adc	#L156+6
  3708 05:DADE: 1B           	tcs
  3709 05:DADF: 6B           	rtl
  3710                        	.endblock	428
  3711             00000004   L156	equ	4
  3712             00000001   L157	equ	1
  3713 05:DAE0:              	ends
  3714                        	efunc
  3715                        	.endfunc	428,1,4
  3716                        	.line	428
  3717                        ;
  3718                        ;void k_ipc_marshal_long(PIPCPORT port,ULONG data)
  3719                        ;{
  3720                        	.line	430
  3721                        	.line	431
  3722                        	MEMMAN
  3723                        	xdef	~~k_ipc_marshal_long
  3724                        	func
  3725                        	.function	431
  3726                        ~~k_ipc_marshal_long:
  3727                        	longa	on
  3728                        	longi	on
  3729 05:DAE0: 3B           	tsc
  3730 05:DAE1: 38           	sec
  3731 05:DAE2: E9 04 00     	sbc	#L160
  3732 05:DAE5: 1B           	tcs
  3733 05:DAE6: 0B           	phd
  3734 05:DAE7: 5B           	tcd
  3735             00000004   port_0	set	4
  3736             00000008   data_0	set	8
  3737                        	.block	431
  3738                        ;	PMARSHALDATA pm = NULL;
  3739                        ;
  3740                        ;	pm = k_mem_allocate_heap(sizeof(MARSHALDATA));
  3741             00000000   pm_1	set	0
  Sat Jul 10 2021  1:15                                                Page 70


  3742                        	.sym	pm,0,139,1,32,67
  3743                        	.sym	port,4,138,6,32,84
  3744                        	.sym	data,8,18,6,32
  3745 05:DAE8: 64 01        	stz	<L161+pm_1
  3746 05:DAEA: 64 03        	stz	<L161+pm_1+2
  3747                        	.line	434
  3748 05:DAEC: F4 04 00     	pea	#<$4
  3749 05:DAEF: 22 6E D4 05  	jsl	~~k_mem_allocate_heap
  3750 05:DAF3: 85 01        	sta	<L161+pm_1
  3751 05:DAF5: 86 03        	stx	<L161+pm_1+2
  3752                        ;	pm->longValue = data;
  3753                        	.line	435
  3754 05:DAF7: A5 0C        	lda	<L160+data_0
  3755 05:DAF9: 87 01        	sta	[<L161+pm_1]
  3756 05:DAFB: A5 0E        	lda	<L160+data_0+2
  3757 05:DAFD: A0 02 00     	ldy	#$2
  3758 05:DB00: 97 01        	sta	[<L161+pm_1],Y
  3759                        ;	k_write_ipc_port(port,pm,0);
  3760                        	.line	436
  3761 05:DB02: F4 00 00     	pea	#<$0
  3762 05:DB05: D4 03        	pei	<L161+pm_1+2
  3763 05:DB07: D4 01        	pei	<L161+pm_1
  3764 05:DB09: D4 0A        	pei	<L160+port_0+2
  3765 05:DB0B: D4 08        	pei	<L160+port_0
  3766 05:DB0D: 22 D4 D9 05  	jsl	~~k_write_ipc_port
  3767                        ;}
  3768                        	.line	437
  3769                        L163:
  3770 05:DB11: A5 06        	lda	<L160+2
  3771 05:DB13: 85 0E        	sta	<L160+2+8
  3772 05:DB15: A5 05        	lda	<L160+1
  3773 05:DB17: 85 0D        	sta	<L160+1+8
  3774 05:DB19: 2B           	pld
  3775 05:DB1A: 3B           	tsc
  3776 05:DB1B: 18           	clc
  3777 05:DB1C: 69 0C 00     	adc	#L160+8
  3778 05:DB1F: 1B           	tcs
  3779 05:DB20: 6B           	rtl
  3780                        	.endblock	437
  3781             00000004   L160	equ	4
  3782             00000001   L161	equ	1
  3783 05:DB21:              	ends
  3784                        	efunc
  3785                        	.endfunc	437,1,4
  3786                        	.line	437
  3787                        ;
  3788                        	.line	437
  3789                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxmemorymanager.c",430
  3790                        	xref	~~umm_free
  3791                        	xref	~~umm_malloc
  3792                        	xref	~~umm_integrity_check
  3793                        	xref	~~umm_info
  3794                        	xref	~~k_exec_throw_exception
  3795                        	xref	~~k_fxstring_free
  3796                        	xref	~~k_fxstring_new
  3797                        	xref	~~k_debug_long
  3798                        	xref	~~k_debug_integer
  Sat Jul 10 2021  1:15                                                Page 71


  3799                        	xref	~~k_debug_pointer
  3800                        	xref	~~k_getZeroPage
  3801                        	xref	~~k_nodelist_removefromlist
  3802                        	xref	~~k_nodelist_searchByName
  3803                        	xref	~~k_nodelist_addtolist
  3804                        	xref	~~k_nodelist_allocate_list
  3805                        	xref	~~k_dequeue
  3806                        	xref	~~k_enqueue
  3807                        	xref	~~k_initialize
  3808                        	xref	~~strcmp
  3809                        	xref	~~memcpy
  3810                        	.sym	~~_ipc_ports,~~_ipc_ports,138,2,32,6
  3811                        	.sym	~~_ipc_global_ports,~~_ipc_global_ports,
                    1130,2,32,84,8
  3812                        	.sym	~~heap_end,~~heap_end,129,2,32
  3813                        	.sym	~~heap_start,~~heap_start,129,2,32
  3814                        	.sym	~~THIS_MODULE,~~THIS_MODULE,18,3,32
  3815                        	.sym	~~k_ipc_marshal_long,~~k_ipc_marshal_lon
                    g,65,2,0
  3816                        	.sym	~~k_ipc_marshal_int,~~k_ipc_marshal_int,
                    65,2,0
  3817                        	.sym	~~k_ipc_marshal_verb,~~k_ipc_marshal_ver
                    b,65,2,0
  3818                        	.sym	~~k_ipc_marshal_byte,~~k_ipc_marshal_byt
                    e,65,2,0
  3819                        	.sym	~~k_write_ipc_port,~~k_write_ipc_port,80
                    ,2,0
  3820                        	.sym	~~k_peek_ipc_port,~~k_peek_ipc_port,1089
                    ,2,32
  3821                        	.sym	~~k_read_ipc_port,~~k_read_ipc_port,1089
                    ,2,32
  3822                        	.sym	~~k_close_ipc_port,~~k_close_ipc_port,65
                    ,2,0
  3823                        	.sym	~~k_get_ipc_port,~~k_get_ipc_port,1098,2
                    ,32,84
  3824                        	.sym	~~k_open_ipc_port,~~k_open_ipc_port,1098
                    ,2,32,84
  3825                        	.sym	PIPCPORT,0,138,14,32,84
  3826                        	.sym	IPCPORT,0,10,14,144,84
  3827                        	.sym	~~k_mem_get_segment_info,~~k_mem_get_seg
                    ment_info,1089,2,32
  3828                        	.sym	~~k_mem_unload_segment,~~k_mem_unload_se
                    gment,65,2,0
  3829                        	.sym	~~k_mem_unlock_segment,~~k_mem_unlock_se
                    gment,78,2,0
  3830                        	.sym	~~k_mem_lock_segment,~~k_mem_lock_segmen
                    t,1089,2,32
  3831                        	.sym	~~k_mem_load_segment,~~k_mem_load_segmen
                    t,1089,2,32
  3832                        	.sym	~~k_free,~~k_free,65,2,0
  3833                        	.sym	~~k_calloc,~~k_calloc,1089,2,32
  3834                        	.sym	~~k_mem_deallocate_heap,~~k_mem_dealloca
                    te_heap,65,2,0
  3835                        	.sym	~~k_mem_allocate_heap,~~k_mem_allocate_h
                    eap,1089,2,32
  3836                        	.sym	~~k_mem_unlock_handle,~~k_mem_unlock_han
                    dle,65,2,0
  3837                        	.sym	~~k_mem_lock_handle,~~k_mem_lock_handle,
  Sat Jul 10 2021  1:15                                                Page 72


                    1089,2,32
  3838                        	.sym	~~k_mem_deallocate_dynamic_heap,~~k_mem_
                    deallocate_dynamic_heap,65,2,0
  3839                        	.sym	~~k_mem_allocate_dynamic_heap,~~k_mem_al
                    locate_dynamic_heap,1089,2,32
  3840                        	.sym	~~k_fcheck_system_memory,~~k_fcheck_syst
                    em_memory,82,2,0
  3841                        	.sym	~~k_check_system_memory,~~k_check_system
                    _memory,82,2,0
  3842                        	.sym	~~k_mem_object_copy,~~k_mem_object_copy,
                    1089,2,32
  3843                        	.sym	~~k_heap_integrity_check,~~k_heap_integr
                    ity_check,82,2,0
  3844                        	.sym	MemoryCallback,0,641,14,32
  3845                        	.sym	PFXMEMORYMAP,0,138,14,32,83
  3846                        	.sym	FXMEMORYMAP,0,10,14,2072,83
  3847                        	.sym	~~umm_free,~~umm_free,65,18,0
  3848                        	.sym	~~umm_malloc,~~umm_malloc,1089,18,32
  3849                        	.sym	~~umm_integrity_check,~~umm_integrity_ch
                    eck,69,18,0
  3850                        	.sym	~~umm_info,~~umm_info,1089,18,32
  3851                        	.sym	UMM_HEAP_INFO,0,10,14,256,82
  3852                        	.sym	FRESULT,0,5,14,16
  3853                        	.sym	MKFS_PARM,0,10,14,80,81
  3854                        	.sym	FILINFO,0,10,14,2224,80
  3855                        	.sym	DIR,0,10,14,416,79
  3856                        	.sym	FIL,0,10,14,4400,78
  3857                        	.sym	FFOBJID,0,10,14,128,77
  3858                        	.sym	FATFS,0,10,14,4504,76
  3859                        	.sym	LBA_t,0,18,14,32
  3860                        	.sym	FSIZE_t,0,18,14,32
  3861                        	.sym	TCHAR,0,14,14,8
  3862                        	.sym	PCOMMANDARGS,0,138,14,32,75
  3863                        	.sym	COMMANDARGS,0,10,14,64,75
  3864                        	.sym	PTOKENIZESTATE,0,133,14,32
  3865                        	.sym	TOKENIZESTATE,0,5,14,16
  3866                        	.sym	PTOKEN,0,138,14,32,74
  3867                        	.sym	TOKEN,0,10,14,64,74
  3868                        	.sym	PTOKENTYPE,0,133,14,32
  3869                        	.sym	TOKENTYPE,0,5,14,16
  3870                        	.sym	FXCommandHandler,0,656,14,32
  3871                        	.sym	PCONSOLECTX,0,138,14,32,73
  3872                        	.sym	CONSOLECTX,0,10,14,1144,73
  3873                        	.sym	PSPINNERCTX,0,138,14,32,72
  3874                        	.sym	SPINNERCTX,0,10,14,48,72
  3875                        	.sym	HCLIP,0,138,14,32,71
  3876                        	.sym	PCLIPBOARD_DATA,0,138,14,32,71
  3877                        	.sym	CLIPBOARD_DATA,0,10,14,168,71
  3878                        	.sym	PEVENTMANAGER,0,138,14,32,70
  3879                        	.sym	EVENTMANAGER,0,10,14,192,70
  3880                        	.sym	EV_RUN,0,656,14,32
  3881                        	.sym	EV_QUERY_METRIC,0,656,14,32
  3882                        	.sym	EV_CONFIGURE,0,656,14,32
  3883                        	.sym	EV_UNINIT,0,641,14,32
  3884                        	.sym	EV_INIT,0,8833,14,32
  3885                        	.sym	PMOUSE_MSG_STATE,0,138,14,32,69
  3886                        	.sym	MOUSE_MSG_STATE,0,10,14,184,69
  3887                        	.sym	PFXEVENTPROCESS,0,138,14,32,68
  Sat Jul 10 2021  1:15                                                Page 73


  3888                        	.sym	FXEVENTPROCESS,0,10,14,64,68
  3889                        	.sym	PMARSHALDATA,0,139,14,32,67
  3890                        	.sym	MARSHALDATA,0,11,14,32,67
  3891                        	.sym	FXIDLEPROCESS,0,641,14,32
  3892                        	.sym	FXEventProc,0,641,14,32
  3893                        	.sym	PMOUSEMSGDATA,0,138,14,32,66
  3894                        	.sym	MOUSEMSGDATA,0,10,14,64,66
  3895                        	.sym	MSGIRQ,0,5,14,16
  3896                        	.sym	MAINLOOPARGS,0,10,14,16,65
  3897                        	.sym	PEACHCHILD_MSG,0,138,14,32,64
  3898                        	.sym	EACHCHILD_MSG,0,10,14,64,64
  3899                        	.sym	PMSGBOX_DATA,0,138,14,32,63
  3900                        	.sym	MSGBOX_DATA,0,10,14,96,63
  3901                        	.sym	PDESKTOP_DATA,0,138,14,32,62
  3902                        	.sym	DESKTOP_DATA,0,10,14,64,62
  3903                        	.sym	PWINDOWMANAGER,0,138,14,32,61
  3904                        	.sym	WINDOWMANAGER,0,10,14,160,61
  3905                        	.sym	WM_DOPROCS,0,641,14,32
  3906                        	.sym	WM_QUERY_METRIC,0,656,14,32
  3907                        	.sym	WM_CONFIGURE,0,656,14,32
  3908                        	.sym	WM_HANDLE_EVENT,0,8833,14,32
  3909                        	.sym	WM_EVENTS,0,641,14,32
  3910                        	.sym	PCUR_PALETTE_MAP,0,138,14,32,60
  3911                        	.sym	CUR_PALETTE_MAP,0,10,14,400,60
  3912                        	.sym	PCLICKDETECTED,0,138,14,32,59
  3913                        	.sym	CLICKDETECTED,0,10,14,64,59
  3914                        	.sym	OBJECTCLICKED,0,641,14,32
  3915                        	.sym	~~k_exec_throw_exception,~~k_exec_throw_
                    exception,65,18,0
  3916                        	.sym	PEXECUTIVE,0,138,14,32,58
  3917                        	.sym	EXECUTIVE,0,10,14,128,58
  3918                        	.sym	EX_QUERY_METRIC,0,656,14,32
  3919                        	.sym	EX_CONFIGURE,0,656,14,32
  3920                        	.sym	EX_UNINIT,0,641,14,32
  3921                        	.sym	EX_INIT,0,8833,14,32
  3922                        	.sym	~~k_fxstring_free,~~k_fxstring_free,65,1
                    8,0
  3923                        	.sym	~~k_fxstring_new,~~k_fxstring_new,1098,1
                    8,32,57
  3924                        	.sym	PFXSTRING,0,138,14,32,57
  3925                        	.sym	FXSTRING,0,10,14,64,57
  3926                        	.sym	DEVICEDRIVER_COMMAND,0,656,14,32
  3927                        	.sym	DEVICEDRIVER_UNLOAD,0,654,14,32
  3928                        	.sym	DEVICEDRIVER_WRITE,0,656,14,32
  3929                        	.sym	DEVICEDRIVER_READ,0,656,14,32
  3930                        	.sym	DEVICEDRIVER_LOAD,0,654,14,32
  3931                        	.sym	DEVICEDRIVER_IRQ,0,654,14,32
  3932                        	.sym	PFX_BLOCK_DEVICE_DRIVER,0,138,14,32,56
  3933                        	.sym	FX_BLOCK_DEVICE_DRIVER,0,10,14,808,56
  3934                        	.sym	GETDRIVERDEF,0,8842,14,32,55
  3935                        	.sym	PFX_DEVICE_DRIVER,0,138,14,32,55
  3936                        	.sym	FX_DEVICE_DRIVER,0,10,14,776,55
  3937                        	.sym	~~k_debug_long,~~k_debug_long,65,18,0
  3938                        	.sym	~~k_debug_integer,~~k_debug_integer,65,1
                    8,0
  3939                        	.sym	~~k_debug_pointer,~~k_debug_pointer,65,1
                    8,0
  3940                        	.sym	PSEGMENTHEADER,0,138,14,32,54
  Sat Jul 10 2021  1:15                                                Page 74


  3941                        	.sym	SEGMENTHEADER,0,10,14,160,54
  3942                        	.sym	~~k_getZeroPage,~~k_getZeroPage,1098,18,
                    32,51
  3943                        	.sym	PDEBUGBYTEBITS,0,138,14,32,53
  3944                        	.sym	DEBUGBYTEBITS,0,10,14,8,53
  3945                        	.sym	PFXENVIRONMENT,0,138,14,32,52
  3946                        	.sym	FXENVIRONMENT,0,10,14,96,52
  3947                        	.sym	PFXZEROPAGE,0,138,14,32,51
  3948                        	.sym	FXZEROPAGE,0,10,14,824,51
  3949                        	.sym	KERNELTRAPCALL,0,641,14,32
  3950                        	.sym	PFXKERNEL_API_CALLTABLE,0,138,14,32,50
  3951                        	.sym	FXKERNEL_API_CALLTABLE,0,10,14,8192,50
  3952                        	.sym	FOREACHNODEUNTIL,0,654,14,32
  3953                        	.sym	FOREACHNODE,0,641,14,32
  3954                        	.sym	~~k_nodelist_removefromlist,~~k_nodelist
                    _removefromlist,1098,18,32,5
  3955                        	.sym	~~k_nodelist_searchByName,~~k_nodelist_s
                    earchByName,1098,18,32,5
  3956                        	.sym	~~k_nodelist_addtolist,~~k_nodelist_addt
                    olist,1098,18,32,5
  3957                        	.sym	~~k_nodelist_allocate_list,~~k_nodelist_
                    allocate_list,1098,18,32,6
  3958                        	.sym	~~k_dequeue,~~k_dequeue,1089,18,32
  3959                        	.sym	~~k_enqueue,~~k_enqueue,78,18,0
  3960                        	.sym	~~k_initialize,~~k_initialize,65,18,0
  3961                        	.sym	PFXRFHEADER_FONT,0,138,14,32,49
  3962                        	.sym	FXRFHEADER_FONT,0,10,14,144,49
  3963                        	.sym	PFXRFHEADER,0,138,14,32,48
  3964                        	.sym	FXRFHEADER,0,10,14,72,48
  3965                        	.sym	PFXCOMBUFFER,0,138,14,32,47
  3966                        	.sym	FXCOMBUFFER,0,10,14,2080,47
  3967                        	.sym	PSUBMENULIST,0,138,14,32,46
  3968                        	.sym	SUBMENULIST,0,10,14,40,46
  3969                        	.sym	HSUBMENU,0,7,14,32
  3970                        	.sym	PSUBMENU,0,138,14,32,45
  3971                        	.sym	SUBMENU,0,10,14,64,45
  3972                        	.sym	MenuAction,0,641,14,32
  3973                        	.sym	PMENUANCHOR,0,138,14,32,44
  3974                        	.sym	MENUANCHOR,0,10,14,272,44
  3975                        	.sym	PMSGBOX,0,138,14,32,43
  3976                        	.sym	MSGBOX,0,10,14,144,43
  3977                        	.sym	PTEXTBOX,0,138,14,32,42
  3978                        	.sym	TEXTBOX,0,10,14,144,42
  3979                        	.sym	PLISTBOX,0,138,14,32,41
  3980                        	.sym	LISTBOX,0,10,14,240,41
  3981                        	.sym	PSCROLLBAR,0,138,14,32,40
  3982                        	.sym	SCROLLBAR,0,10,14,240,40
  3983                        	.sym	PBUTTON,0,138,14,32,39
  3984                        	.sym	BUTTON,0,10,14,96,39
  3985                        	.sym	PMENUDROPDOWNDATA,0,138,14,32,38
  3986                        	.sym	MENUDROPDOWNDATA,0,10,14,5152,38
  3987                        	.sym	PMENUTAG,0,138,14,32,37
  3988                        	.sym	MENUTAG,0,10,14,160,37
  3989                        	.sym	PMENU,0,138,14,32,36
  3990                        	.sym	MENU,0,10,14,280,36
  3991                        	.sym	HMENURESOURCE,0,129,14,32
  3992                        	.sym	FONTMETRIC,0,10,14,32,35
  3993                        	.sym	TITLE,0,142,14,32
  Sat Jul 10 2021  1:15                                                Page 75


  3994                        	.sym	PHANDLE,0,1153,14,32
  3995                        	.sym	HANDLE,0,129,14,32
  3996                        	.sym	PWINDOWEX,0,138,14,32,34
  3997                        	.sym	WINDOWEX,0,10,14,3880,34
  3998                        	.sym	PWINDOW,0,138,14,32,33
  3999                        	.sym	WINDOW,0,10,14,3904,33
  4000                        	.sym	PDRAGDATA,0,138,14,32,32
  4001                        	.sym	DRAGDATA,0,10,14,216,32
  4002                        	.sym	PNCCLICKABLE,0,138,14,32,31
  4003                        	.sym	NCCLICKABLE,0,10,14,136,31
  4004                        	.sym	HCLICKABLE,0,7,14,32
  4005                        	.sym	PCLICKABLE,0,138,14,32,30
  4006                        	.sym	CLICKABLE,0,10,14,152,30
  4007                        	.sym	PWNDCLASS,0,138,14,32,29
  4008                        	.sym	WNDCLASS,0,10,14,272,29
  4009                        	.sym	HBRUSH,0,129,14,32
  4010                        	.sym	HCURSOR,0,129,14,32
  4011                        	.sym	HICON,0,129,14,32
  4012                        	.sym	HINSTANCE,0,129,14,32
  4013                        	.sym	FXWndProc,0,654,14,32
  4014                        	.sym	PDRECT,0,138,14,32,28
  4015                        	.sym	DRECT,0,10,14,112,28
  4016                        	.sym	PRECTP,0,138,14,32,27
  4017                        	.sym	RECTP,0,10,14,96,27
  4018                        	.sym	PRECT,0,138,14,32,26
  4019                        	.sym	RECT,0,10,14,112,26
  4020                        	.sym	PPOINT,0,138,14,32,25
  4021                        	.sym	POINT,0,10,14,32,25
  4022                        	.sym	PFXPROPERTY,0,138,14,32,23
  4023                        	.sym	FXPROPERTY,0,10,14,384,23
  4024                        	.sym	PKEYSTATE,0,138,14,32,22
  4025                        	.sym	KEYSTATE,0,10,14,112,22
  4026                        	.sym	SCANCODE,0,14,14,8
  4027                        	.sym	KEYCODE,0,16,14,16
  4028                        	.sym	PFXPROCESSMESSAGE,0,138,14,32,21
  4029                        	.sym	FXPROCESSMESSAGE,0,10,14,112,21
  4030                        	.sym	PFXPROCESS,0,138,14,32,20
  4031                        	.sym	FXPROCESS,0,10,14,800,20
  4032                        	.sym	PDESKTOP_CONTROL,0,138,14,32,19
  4033                        	.sym	DESKTOP_CONTROL,0,10,14,392,19
  4034                        	.sym	PCONSOLE_CONTROL,0,138,14,32,18
  4035                        	.sym	CONSOLE_CONTROL,0,10,14,448,18
  4036                        	.sym	FXProcessProc,0,641,14,32
  4037                        	.sym	PFXCMDMESSAGE,0,138,14,32,17
  4038                        	.sym	FXCMDMESSAGE,0,10,14,304,17
  4039                        	.sym	PFXOSMESSAGE,0,138,14,32,16
  4040                        	.sym	FXOSMESSAGE,0,10,14,304,16
  4041                        	.sym	PINT_REGS,0,138,14,32,15
  4042                        	.sym	INT_REGS,0,10,14,104,15
  4043                        	.sym	TASK_STACK,0,10,14,32,14
  4044                        	.sym	TASK,0,10,14,48,13
  4045                        	.sym	PIRQDATA,0,138,14,32,12
  4046                        	.sym	IRQDATA,0,10,14,48,12
  4047                        	.sym	HMENU,0,129,14,32
  4048                        	.sym	HWND,0,129,14,32
  4049                        	.sym	MSGDATA,0,14,14,8
  4050                        	.sym	MSGDEST,0,18,14,32
  4051                        	.sym	MSGSRC,0,18,14,32
  Sat Jul 10 2021  1:15                                                Page 76


  4052                        	.sym	MSGTYPE,0,16,14,16
  4053                        	.sym	PROCESS_RESOURCE_LIST,0,138,14,32,6
  4054                        	.sym	PROCESS_TLS_LIST,0,138,14,32,6
  4055                        	.sym	SEMAPHORE_LIST,0,138,14,32,6
  4056                        	.sym	FILE_BLOCK_LIST,0,138,14,32,6
  4057                        	.sym	FILE_PATH_LIST,0,138,14,32,6
  4058                        	.sym	PROCEDURE_LIST,0,138,14,32,6
  4059                        	.sym	FILE_HANDLE,0,138,14,32,11
  4060                        	.sym	FILE_BLOCK,0,10,14,552,11
  4061                        	.sym	SEMAPHORE,0,10,14,16,10
  4062                        	.sym	PPROCESS_SIGNAL,0,138,14,32,9
  4063                        	.sym	PROCESS_SIGNAL,0,10,14,16,9
  4064                        	.sym	KRESULT,0,18,14,32
  4065                        	.sym	PKERNEL_ERROR,0,138,14,32,8
  4066                        	.sym	KERNEL_ERROR,0,10,14,32,8
  4067                        	.sym	PROCESS_STATUS,0,16,14,16
  4068                        	.sym	FILE_PATH_NAME,0,142,14,32
  4069                        	.sym	PROCESS_RESOURCE,0,129,14,32
  4070                        	.sym	PROCESS_TLS,0,129,14,32
  4071                        	.sym	PROCESS_CTX,0,129,14,32
  4072                        	.sym	USERID,0,16,14,16
  4073                        	.sym	PROCESS_ID,0,18,14,32
  4074                        	.sym	PROCESS_BANK,0,14,14,8
  4075                        	.sym	PFXQUEUE,0,138,14,32,7
  4076                        	.sym	FXQUEUE,0,10,14,80,7
  4077                        	.sym	PFXNODELIST,0,138,14,32,6
  4078                        	.sym	FXNODELIST,0,10,14,96,6
  4079                        	.sym	NodeListDeallocator,0,641,14,32
  4080                        	.sym	PFXNODE,0,138,14,32,5
  4081                        	.sym	FXNODE,0,10,14,384,5
  4082                        	.sym	PBYTEBITS,0,138,14,32,4
  4083                        	.sym	BYTEBITS,0,10,14,8,4
  4084                        	.sym	HRESULT,0,18,14,32
  4085                        	.sym	LPWCHAR,0,144,14,32
  4086                        	.sym	WCHAR,0,16,14,16
  4087                        	.sym	HCOLOR,0,129,14,32
  4088                        	.sym	HFONT,0,129,14,32
  4089                        	.sym	HDC,0,129,14,32
  4090                        	.sym	HPOINTER,0,129,14,32
  4091                        	.sym	uint32_t,0,18,14,32
  4092                        	.sym	uint8_t,0,14,14,8
  4093                        	.sym	LPBOOL,0,142,14,32
  4094                        	.sym	BOOL,0,14,14,8
  4095                        	.sym	DWORD,0,18,14,32
  4096                        	.sym	ULONG,0,18,14,32
  4097                        	.sym	LPLONG,0,135,14,32
  4098                        	.sym	LONG,0,7,14,32
  4099                        	.sym	PUINT,0,144,14,32
  4100                        	.sym	USHORT,0,16,14,16
  4101                        	.sym	UINT,0,16,14,16
  4102                        	.sym	INT,0,5,14,16
  4103                        	.sym	WORD,0,5,14,16
  4104                        	.sym	PBYTE,0,142,14,32
  4105                        	.sym	BYTE,0,14,14,8
  4106                        	.sym	IOPORT,0,142,14,32
  4107                        	.sym	PUCHAR,0,142,14,32
  4108                        	.sym	UCHAR,0,14,14,8
  4109                        	.sym	LPWCSTR,0,142,14,32
  Sat Jul 10 2021  1:15                                                Page 77


  4110                        	.sym	LPCSTR,0,142,14,32
  4111                        	.sym	LPSTR,0,142,14,32
  4112                        	.sym	LPCHAR,0,142,14,32
  4113                        	.sym	CHAR,0,14,14,8
  4114                        	.sym	LPVOID,0,129,14,32
  4115                        	.sym	VOID,0,1,14,32
  4116                        	.sym	~~strcmp,~~strcmp,69,18,0
  4117                        	.sym	~~memcpy,~~memcpy,1089,18,32
  4118                        	.sym	Boolean_T,0,5,14,16
  4119                        	.sym	ldiv_t,0,10,14,64,2
  4120                        	.sym	div_t,0,10,14,32,1
  4121                        	.sym	wctype_t,0,16,14,16
  4122                        	.sym	wint_t,0,16,14,16
  4123                        	.sym	wchar_t,0,14,14,8
  4124                        	.sym	ptrdiff_t,0,7,14,32
  4125                        	.sym	size_t,0,16,14,16
  4126                        	end


      Lines assembled: 4126
      Errors: 0
