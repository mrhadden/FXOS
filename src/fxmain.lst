  Sat Jul 10 2021  1:15                                                Page 1


                     ***************************************
                     **      WDC 65C816 Macro Assembler   **
                     **                                   **
                     **     Version 3.49.1- Feb  6 2006    **
                     ***************************************

     1                        ;:ts=8
     2             00000001   R0	equ	1
     3             00000005   R1	equ	5
     4             00000009   R2	equ	9
     5             0000000D   R3	equ	13
     6                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxmain.c",0
     7                        ;
     8                        ;//#include "fxstartup.h"
     9                        ;#include "fxos.h"
    10                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos.h",0
    11                        	.file	"G:\devtools\WDCTools\wdc\Tools\include\
                    stdlib.h",0
    12                        	.file	"G:\devtools\WDCTools\wdc\Tools\include\
                    stddef.h",0
    13                        	.line	88
    14                        	.file	"G:\devtools\WDCTools\wdc\Tools\include\
                    stdlib.h",43
    15                        	.stag	fake1_,32,1
    16                        	.member	quot,0,5,8,16
    17                        	.member	rem,16,5,8,16
    18                        	.eos
    19                        	.stag	fake2_,64,2
    20                        	.member	quot,0,7,8,32
    21                        	.member	rem,32,7,8,32
    22                        	.eos
    23                        	.stag	int_sqrt,32,3
    24                        	.member	sqrt,0,16,8,16
    25                        	.member	frac,16,16,8,16
    26                        	.eos
    27                        	.line	205
    28                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos.h",4
    29                        	.file	"G:\devtools\WDCTools\wdc\Tools\include\
                    string.h",0
    30                        	.line	134
    31                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos.h",5
    32                        	.file	"G:\devtools\WDCTools\wdc\Tools\include\
                    ctype.h",0
    33                        	.line	103
    34                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos.h",6
    35                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxtypes.h",0
    36                        	.stag	_fx_bytebits,8,4
    37                        	.member	b7,0,14,17,1
    38                        	.member	b6,1,14,17,1
    39                        	.member	b5,2,14,17,1
    40                        	.member	b4,3,14,17,1
    41                        	.member	b3,4,14,17,1
  Sat Jul 10 2021  1:15                                                Page 2


    42                        	.member	b2,5,14,17,1
    43                        	.member	b1,6,14,17,1
    44                        	.member	b0,7,14,17,1
    45                        	.eos
    46                        	.stag	_fx_node,384,5
    47                        	.member	type,0,14,8,8
    48                        	.member	Reserved0,8,14,8,8
    49                        	.member	data,16,129,8,32
    50                        	.member	last,48,138,8,32,5
    51                        	.member	next,80,138,8,32,5
    52                        	.member	name,112,110,8,0,32
    53                        	.member	Reserved1,368,16,8,16
    54                        	.eos
    55                        	.stag	_fx_nodelist,96,6
    56                        	.member	listhead,0,138,8,32,5
    57                        	.member	listData,32,129,8,32
    58                        	.member	deallocator,64,641,8,32
    59                        	.eos
    60                        	.stag	_fx_queue,80,7
    61                        	.member	count,0,5,8,16
    62                        	.member	front,16,138,8,32,5
    63                        	.member	rear,48,138,8,32,5
    64                        	.eos
    65                        	.stag	fake8_,32,8
    66                        	.member	subsystem,0,14,8,8
    67                        	.member	level,8,14,8,8
    68                        	.member	error,16,16,8,16
    69                        	.eos
    70                        	.stag	_fx_process_signal,16,9
    71                        	.member	cbSize,0,16,8,16
    72                        	.eos
    73                        	.stag	_fx_semaphore,16,10
    74                        	.member	reserved,0,5,8,16
    75                        	.eos
    76                        	.stag	_fx_fileBlock,552,11
    77                        	.member	openCount,0,16,8,16
    78                        	.member	lockCount,16,16,8,16
    79                        	.member	dirty,32,14,8,8
    80                        	.member	fileBuffer,40,110,8,0,64
    81                        	.eos
    82                        	.stag	_fx_irq_data,48,12
    83                        	.member	line,0,5,8,16
    84                        	.member	keycode,16,142,8,32
    85                        	.eos
    86                        	.stag	_task,48,13
    87                        	.member	SPL,0,14,8,8
    88                        	.member	SPH,8,14,8,8
    89                        	.member	pstack,16,142,8,32
    90                        	.eos
    91                        	.stag	_task_stack,32,14
    92                        	.member	SS,0,142,8,32
    93                        	.eos
    94                        	.stag	int_regs,104,15
    95                        	.member	PB,0,14,8,8
    96                        	.member	PH,8,14,8,8
    97                        	.member	PL,16,14,8,8
    98                        	.member	PP,24,14,8,8
    99                        	.member	DB,32,14,8,8
  Sat Jul 10 2021  1:15                                                Page 3


   100                        	.member	DH,40,14,8,8
   101                        	.member	DL,48,14,8,8
   102                        	.member	AH,56,14,8,8
   103                        	.member	AL,64,14,8,8
   104                        	.member	XH,72,14,8,8
   105                        	.member	XL,80,14,8,8
   106                        	.member	YH,88,14,8,8
   107                        	.member	YL,96,14,8,8
   108                        	.eos
   109                        	.stag	_fx_eventMessage,304,16
   110                        	.member	src,0,18,8,32
   111                        	.member	dest,32,18,8,32
   112                        	.member	type,64,16,8,16
   113                        	.member	hwnd,80,129,8,32
   114                        	.member	pheap,112,129,8,32
   115                        	.member	msgTime,144,18,8,32
   116                        	.member	data,176,110,8,0,16
   117                        	.eos
   118                        	.stag	_fx_cmdMessage,304,17
   119                        	.member	src,0,18,8,32
   120                        	.member	dest,32,18,8,32
   121                        	.member	type,64,16,8,16
   122                        	.member	hwnd,80,129,8,32
   123                        	.member	pheap,112,129,8,32
   124                        	.member	msgTime,144,18,8,32
   125                        	.member	cmdCId,176,16,8,16
   126                        	.member	cmdMId,192,16,8,16
   127                        	.member	parameter1,208,18,8,32
   128                        	.member	parameter2,240,18,8,32
   129                        	.member	parameter3,272,18,8,32
   130                        	.eos
   131                        	.stag	_fx_console_ctl,448,18
   132                        	.member	maxCols,0,5,8,16
   133                        	.member	maxRows,16,5,8,16
   134                        	.member	curX,32,5,8,16
   135                        	.member	curY,48,5,8,16
   136                        	.member	fgColor,64,5,8,16
   137                        	.member	bgColor,80,5,8,16
   138                        	.member	mode,96,14,8,8
   139                        	.member	kbBuffer,104,101,8,0,16
   140                        	.member	screenBuffer,360,142,8,32
   141                        	.member	desktopMode,392,14,8,8
   142                        	.member	lastMouseButton,400,5,8,16
   143                        	.member	lastMouseX,416,5,8,16
   144                        	.member	lastMouseY,432,5,8,16
   145                        	.eos
   146                        	.stag	_fx_desktop_ctl,392,19
   147                        	.member	desktopMode,0,14,8,8
   148                        	.member	cursorCtl,8,5,8,16
   149                        	.member	cursorState,24,5,8,16
   150                        	.member	backgroundColor,40,5,8,16
   151                        	.member	foregroundColor,56,5,8,16
   152                        	.member	menuMode,72,5,8,16
   153                        	.member	lastMouseButton,88,5,8,16
   154                        	.member	lastMouseX,104,5,8,16
   155                        	.member	lastMouseY,120,5,8,16
   156                        	.member	currentDiskName,136,142,8,32
   157                        	.member	diskNodes,168,129,8,32
  Sat Jul 10 2021  1:15                                                Page 4


   158                        	.member	titleNodes,200,129,8,32
   159                        	.member	menuNodes,232,129,8,32
   160                        	.member	iconNodes,264,129,8,32
   161                        	.member	windowNodes,296,129,8,32
   162                        	.member	fontNodes,328,129,8,32
   163                        	.member	wndProc,360,138,8,32,6
   164                        	.eos
   165                        	.stag	_fx_process,800,20
   166                        	.member	cbSize,0,5,8,16
   167                        	.member	procId,16,18,8,32
   168                        	.member	parentId,48,18,8,32
   169                        	.member	ctx,80,129,8,32
   170                        	.member	userId,112,16,8,16
   171                        	.member	status,128,16,8,16
   172                        	.member	foregroundActive,144,14,8,8
   173                        	.member	tls,152,1121,8,32,8
   174                        	.member	commandLine,408,142,8,32
   175                        	.member	semaphores,440,138,8,32,6
   176                        	.member	fileHandles,472,138,8,32,6
   177                        	.member	pathList,504,138,8,32,6
   178                        	.member	resources,536,138,8,32,6
   179                        	.member	timerAware,568,14,8,8
   180                        	.member	timerTicks,576,112,8,0,2
   181                        	.member	timerTickCount,608,112,8,0,2
   182                        	.member	kernelError,640,10,8,32,8
   183                        	.member	consoleCtl,672,138,8,32,18
   184                        	.member	desktopCtl,704,138,8,32,19
   185                        	.member	execProc,736,641,8,32
   186                        	.member	startupArgs,768,129,8,32
   187                        	.eos
   188                        	.stag	_fxProcessMessage,112,21
   189                        	.member	src,0,18,8,32
   190                        	.member	dest,32,18,8,32
   191                        	.member	type,64,16,8,16
   192                        	.member	processInfo,80,138,8,32,20
   193                        	.eos
   194                        	.stag	_k_key_state,112,22
   195                        	.member	scanCode,0,14,8,8
   196                        	.member	isShifted,8,14,8,8
   197                        	.member	isAlt,16,14,8,8
   198                        	.member	isExtended,24,14,8,8
   199                        	.member	isCapsLock,32,14,8,8
   200                        	.member	isNumLock,40,14,8,8
   201                        	.member	isScrollLock,48,14,8,8
   202                        	.member	keyChar,56,16,8,16
   203                        	.member	scanTime,72,18,8,32
   204                        	.member	ledStatus,104,14,8,8
   205                        	.eos
   206                        	.stag	_fx_property,384,23
   207                        	.member	name,0,110,8,0,16
   208                        	.member	value,128,110,8,0,32
   209                        	.eos
   210                        	.utag	_24bitPointer,32,24
   211                        	.member	address,0,142,11,32
   212                        	.member	bytes,0,110,11,0,4
   213                        	.eos
   214                        	.stag	_PointStruct,32,25
   215                        	.member	x,0,5,8,16
  Sat Jul 10 2021  1:15                                                Page 5


   216                        	.member	y,16,5,8,16
   217                        	.eos
   218                        	.stag	_RectStruct,112,26
   219                        	.member	x,0,5,8,16
   220                        	.member	y,16,5,8,16
   221                        	.member	z,32,18,8,32
   222                        	.member	width,64,5,8,16
   223                        	.member	height,80,5,8,16
   224                        	.member	attr,96,5,8,16
   225                        	.eos
   226                        	.stag	fake27_,96,27
   227                        	.member	name,0,142,8,32
   228                        	.member	topLeft,32,10,8,32,25
   229                        	.member	bottomRight,64,10,8,32,25
   230                        	.eos
   231                        	.stag	fake28_,112,28
   232                        	.member	x,0,5,8,16
   233                        	.member	y,16,5,8,16
   234                        	.member	z,32,5,8,16
   235                        	.member	width,48,5,8,16
   236                        	.member	height,64,5,8,16
   237                        	.member	data,80,18,8,32
   238                        	.eos
   239                        	.stag	_k_WindowClass,272,29
   240                        	.member	cbSize,0,16,8,16
   241                        	.member	style,16,16,8,16
   242                        	.member	styleEx,32,16,8,16
   243                        	.member	pWndProc,48,654,8,32
   244                        	.member	hInstance,80,129,8,32
   245                        	.member	hIcon,112,129,8,32
   246                        	.member	hCursor,144,129,8,32
   247                        	.member	hbrBackground,176,129,8,32
   248                        	.member	lpszMenuName,208,142,8,32
   249                        	.member	lpszClassName,240,142,8,32
   250                        	.eos
   251                        	.stag	_ClickableRect,152,30
   252                        	.member	area,0,10,8,112,26
   253                        	.member	z,112,18,8,32
   254                        	.member	enabled,144,14,8,8
   255                        	.eos
   256                        	.stag	_NCClickableRect,136,31
   257                        	.member	area,0,10,8,112,26
   258                        	.member	msgType,112,16,8,16
   259                        	.member	enabled,128,14,8,8
   260                        	.eos
   261                        	.stag	_DragData,216,32
   262                        	.member	area,0,10,8,112,26
   263                        	.member	xoffset,112,5,8,16
   264                        	.member	yoffset,128,5,8,16
   265                        	.member	msgType,144,16,8,16
   266                        	.member	ncAction,160,16,8,16
   267                        	.member	isDrag,176,14,8,8
   268                        	.member	isResize,184,14,8,8
   269                        	.member	canDrag,192,14,8,8
   270                        	.member	canDrop,200,14,8,8
   271                        	.member	didDrag,208,14,8,8
   272                        	.eos
   273                        	.stag	_k_WindowStruct,3904,33
  Sat Jul 10 2021  1:15                                                Page 6


   274                        	.member	cbSize,0,16,8,16
   275                        	.member	style,16,18,8,32
   276                        	.member	styleEx,48,18,8,32
   277                        	.member	win_id,80,5,8,16
   278                        	.member	win_x,96,5,8,16
   279                        	.member	win_y,112,5,8,16
   280                        	.member	win_width,128,5,8,16
   281                        	.member	win_height,144,5,8,16
   282                        	.member	win_xoffset,160,5,8,16
   283                        	.member	win_yoffset,176,5,8,16
   284                        	.member	win_cxoffset,192,5,8,16
   285                        	.member	win_cyoffset,208,5,8,16
   286                        	.member	wndRect,224,10,8,112,26
   287                        	.member	clientRect,336,10,8,112,26
   288                        	.member	nonclientGadgets,448,106,8,0,31,16
   289                        	.member	clickable,2624,129,8,32
   290                        	.member	win_title,2656,110,8,0,32
   291                        	.member	Reserved0,2912,16,8,16
   292                        	.member	win_class,2928,110,8,0,16
   293                        	.member	win_class_name,3056,110,8,0,32
   294                        	.member	nBitmapLayer,3312,16,8,16
   295                        	.member	bgRegion,3328,129,8,32
   296                        	.member	procid,3360,18,8,32
   297                        	.member	pWndClass,3392,138,8,32,29
   298                        	.member	pParentWindow,3424,129,8,32
   299                        	.member	hMenu,3456,129,8,32
   300                        	.member	hPointer,3488,129,8,32
   301                        	.member	hBackground,3520,129,8,32
   302                        	.member	pChildWindows,3552,138,8,32,6
   303                        	.member	pChildHitList,3584,138,8,32,6
   304                        	.member	isVisible,3616,14,8,8
   305                        	.member	windowData,3624,129,8,32
   306                        	.member	clientData,3656,1121,8,32,6
   307                        	.member	isClosed,3848,14,8,8
   308                        	.member	isClosing,3856,14,8,8
   309                        	.member	isDesktop,3864,14,8,8
   310                        	.member	clickableNode,3872,138,8,32,5
   311                        	.eos
   312                        	.stag	_k_WindowStructEx,3880,34
   313                        	.member	cbSize,0,16,8,16
   314                        	.member	style,16,18,8,32
   315                        	.member	styleEx,48,18,8,32
   316                        	.member	win_id,80,5,8,16
   317                        	.member	win_x,96,5,8,16
   318                        	.member	win_y,112,5,8,16
   319                        	.member	win_width,128,5,8,16
   320                        	.member	win_height,144,5,8,16
   321                        	.member	win_xoffset,160,5,8,16
   322                        	.member	win_yoffset,176,5,8,16
   323                        	.member	win_cxoffset,192,5,8,16
   324                        	.member	win_cyoffset,208,5,8,16
   325                        	.member	wndRect,224,10,8,112,26
   326                        	.member	clientRect,336,10,8,112,26
   327                        	.member	nonclientGadgets,448,106,8,0,31,16
   328                        	.member	clickable,2624,129,8,32
   329                        	.member	win_title,2656,110,8,0,32
   330                        	.member	Reserved0,2912,16,8,16
   331                        	.member	win_class,2928,110,8,0,16
  Sat Jul 10 2021  1:15                                                Page 7


   332                        	.member	nBitmapLayer,3056,16,8,16
   333                        	.member	procid,3072,18,8,32
   334                        	.member	pWndClass,3104,138,8,32,29
   335                        	.member	pParentWindow,3136,129,8,32
   336                        	.member	hMenu,3168,129,8,32
   337                        	.member	hPointer,3200,129,8,32
   338                        	.member	hBackground,3232,129,8,32
   339                        	.member	pChildWindows,3264,138,8,32,6
   340                        	.member	pChildHitList,3296,138,8,32,6
   341                        	.member	isVisible,3328,14,8,8
   342                        	.member	windowData,3336,129,8,32
   343                        	.member	clientData,3368,1121,8,32,4
   344                        	.member	isClosed,3496,14,8,8
   345                        	.member	hWnd,3504,129,8,32
   346                        	.member	localRect,3536,10,8,112,26
   347                        	.member	globalRect,3648,10,8,112,26
   348                        	.member	clientOffsetRect,3760,10,8,112,26
   349                        	.member	isDesktop,3872,14,8,8
   350                        	.eos
   351                        	.stag	_FontMetric,32,35
   352                        	.member	width,0,5,8,16
   353                        	.member	height,16,5,8,16
   354                        	.eos
   355                        	.stag	_MenuStruct,280,36
   356                        	.member	cx,0,5,8,16
   357                        	.member	cy,16,5,8,16
   358                        	.member	width,32,5,8,16
   359                        	.member	height,48,5,8,16
   360                        	.member	fcolor,64,14,8,8
   361                        	.member	bcolor,72,14,8,8
   362                        	.member	chromeLeft,80,14,8,8
   363                        	.member	chromeRight1,88,14,8,8
   364                        	.member	chromeRight2,96,14,8,8
   365                        	.member	hFont,104,129,8,32
   366                        	.member	itemId,136,16,8,16
   367                        	.member	pCaption,152,142,8,32
   368                        	.member	subMenus,184,138,8,32,6
   369                        	.member	pBackground,216,129,8,32
   370                        	.member	hWndOwner,248,129,8,32
   371                        	.eos
   372                        	.stag	fake37_,160,37
   373                        	.member	menuId,0,16,8,16
   374                        	.member	caption,16,142,8,32
   375                        	.member	rect,48,10,8,112,26
   376                        	.eos
   377                        	.stag	fake38_,5152,38
   378                        	.member	pParent,0,138,8,32,33
   379                        	.member	rect,32,10,8,112,26
   380                        	.member	captions,144,1134,8,32,24
   381                        	.member	chrome,912,110,8,0,24
   382                        	.member	ids,1104,112,8,0,24
   383                        	.member	clickable,1488,106,8,0,30,24
   384                        	.member	selected,5136,16,8,16
   385                        	.eos
   386                        	.stag	_fx_button_t,96,39
   387                        	.member	pCaption,0,142,8,32
   388                        	.member	cCaption,32,16,8,16
   389                        	.member	data,48,129,8,32
  Sat Jul 10 2021  1:15                                                Page 8


   390                        	.member	captionPixelWidth,80,16,8,16
   391                        	.eos
   392                        	.stag	_fx_scrollbar_t,240,40
   393                        	.member	min,0,16,8,16
   394                        	.member	max,16,16,8,16
   395                        	.member	increment,32,16,8,16
   396                        	.member	stopsize,48,16,8,16
   397                        	.member	location,64,5,8,16
   398                        	.member	state,80,5,8,16
   399                        	.member	rectThumb,96,10,8,112,26
   400                        	.member	data,208,129,8,32
   401                        	.eos
   402                        	.stag	_fx_listbox_t,240,41
   403                        	.member	pos,0,5,8,16
   404                        	.member	selected,16,16,8,16
   405                        	.member	offsetX,32,5,8,16
   406                        	.member	offsetY,48,5,8,16
   407                        	.member	inc,64,5,8,16
   408                        	.member	direction,80,5,8,16
   409                        	.member	top,96,5,8,16
   410                        	.member	bottom,112,5,8,16
   411                        	.member	indexTop,128,5,8,16
   412                        	.member	indexBottom,144,5,8,16
   413                        	.member	maxItems,160,16,8,16
   414                        	.member	fontSet,176,142,8,32
   415                        	.member	data,208,129,8,32
   416                        	.eos
   417                        	.stag	_fx_textbox_t,144,42
   418                        	.member	pos,0,5,8,16
   419                        	.member	selected,16,16,8,16
   420                        	.member	offsetX,32,5,8,16
   421                        	.member	offsetY,48,5,8,16
   422                        	.member	isShifted,64,14,8,8
   423                        	.member	cursorState,72,14,8,8
   424                        	.member	fontSet,80,142,8,32
   425                        	.member	data,112,129,8,32
   426                        	.eos
   427                        	.stag	_fx_msgbox_t,144,43
   428                        	.member	pos,0,5,8,16
   429                        	.member	selected,16,16,8,16
   430                        	.member	offsetX,32,5,8,16
   431                        	.member	offsetY,48,5,8,16
   432                        	.member	isShifted,64,14,8,8
   433                        	.member	cursorState,72,14,8,8
   434                        	.member	fontSet,80,142,8,32
   435                        	.member	data,112,129,8,32
   436                        	.eos
   437                        	.stag	_fx_menuAnchor_t,272,44
   438                        	.member	pCaption,0,142,8,32
   439                        	.member	renderLayoutX,32,16,8,16
   440                        	.member	renderLayoutY,48,16,8,16
   441                        	.member	captionPixelWidth,64,16,8,16
   442                        	.member	data,80,129,8,32
   443                        	.member	droppedWindow,112,138,8,32,33
   444                        	.member	bytes,144,110,8,0,16
   445                        	.eos
   446                        	.stag	_SubMenuStruct,64,45
   447                        	.member	caption,0,142,8,32
  Sat Jul 10 2021  1:15                                                Page 9


   448                        	.member	action,32,641,8,32
   449                        	.eos
   450                        	.stag	_SubMenuListStruct,40,46
   451                        	.member	cMenus,0,14,8,8
   452                        	.member	psubmenus,8,9354,8,32,45
   453                        	.eos
   454                        	.stag	_fx_ComBuffer,2080,47
   455                        	.member	cbSize,0,16,8,16
   456                        	.member	cbBuffer,16,16,8,16
   457                        	.member	buffer,32,110,8,0,256
   458                        	.eos
   459                        	.stag	_fx_resource_header,72,48
   460                        	.member	magic,0,110,8,0,4
   461                        	.member	major,32,14,8,8
   462                        	.member	minor,40,14,8,8
   463                        	.member	type,48,14,8,8
   464                        	.member	reserved,56,14,8,8
   465                        	.member	resheaderSize,64,14,8,8
   466                        	.eos
   467                        	.stag	_fx_resource_header_font,144,49
   468                        	.member	title,0,110,8,0,16
   469                        	.member	height,128,14,8,8
   470                        	.member	width,136,14,8,8
   471                        	.eos
   472                        	.line	1010
   473                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos.h",8
   474                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxstringtable.h",0
   475                        	.line	89
   476                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos.h",9
   477                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxc256u.h",0
   478                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxtypes.h",0
   479                        	.line	1010
   480                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxc256u.h",5
   481                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fmx_vicky.h",0
   482                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxtypes.h",0
   483                        	.line	1010
   484                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fmx_vicky.h",11
   485                        	.line	72
   486                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxc256u.h",6
   487                        	.line	1960
   488                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos.h",16
   489                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxkernel.h",0
   490                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos.h",0
   491                        	.line	30
   492                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
  Sat Jul 10 2021  1:15                                                Page 10


                    space\FXOSv1\src\fxkernel.h",5
   493                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxnode.h",0
   494                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxtypes.h",0
   495                        	.line	1010
   496                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxnode.h",11
   497                        	.line	114
   498                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxkernel.h",6
   499                        	.stag	_fx_api_call_table,8192,50
   500                        	.member	call_table,0,1121,8,32,256
   501                        	.eos
   502                        	.stag	_fx_zero_page,824,51
   503                        	.member	fxos_mouse_byte_0,0,14,8,8
   504                        	.member	fxos_mouse_byte_1,8,14,8,8
   505                        	.member	fxos_mouse_byte_2,16,14,8,8
   506                        	.member	fxos_mouse_byte_t,24,14,8,8
   507                        	.member	fxos_mouse_byte_x_l,32,14,8,8
   508                        	.member	fxos_mouse_byte_x_h,40,14,8,8
   509                        	.member	fxos_mouse_byte_y_l,48,14,8,8
   510                        	.member	fxos_mouse_byte_y_h,56,14,8,8
   511                        	.member	fxos_key_byte_0,64,14,8,8
   512                        	.member	fxos_key_byte_1,72,14,8,8
   513                        	.member	fxos_key_byte_2,80,14,8,8
   514                        	.member	fxos_mouse_ctl,88,14,8,8
   515                        	.member	fxos_mouse_index,96,14,8,8
   516                        	.member	fxos_mouse_status,104,14,8,8
   517                        	.member	fxos_mouse_dbg_1,112,18,8,32
   518                        	.member	fxos_mouse_dbg_2,144,18,8,32
   519                        	.member	fxos_mouse_dbg_3,176,18,8,32
   520                        	.member	fxos_vicky_byte_0,208,14,8,8
   521                        	.member	fxos_vicky_byte_1,216,14,8,8
   522                        	.member	fxos_vicky_byte_2,224,14,8,8
   523                        	.member	VersionMajor,232,16,8,16
   524                        	.member	VersionMinor,248,16,8,16
   525                        	.member	VersionRelease,264,16,8,16
   526                        	.member	topMemory,280,18,8,32
   527                        	.member	bottomMemory,312,18,8,32
   528                        	.member	availableMemory,344,18,8,32
   529                        	.member	availableMemoryK,376,18,8,32
   530                        	.member	availableHeapMemory,408,18,8,32
   531                        	.member	availableHeapMemoryK,440,18,8,32
   532                        	.member	fxos_console_row,472,16,8,16
   533                        	.member	fxos_console_col,488,16,8,16
   534                        	.member	executive,504,129,8,32
   535                        	.member	eventmanager,536,129,8,32
   536                        	.member	devicemanager,568,129,8,32
   537                        	.member	windowmanager,600,129,8,32
   538                        	.member	fxos_kernel_api,632,138,8,32,50
   539                        	.member	fxos_dos_api,664,138,8,32,50
   540                        	.member	fxos_gfx_api,696,138,8,32,50
   541                        	.member	fxos_gui_api,728,138,8,32,50
   542                        	.member	fxos_con_api,760,138,8,32,50
   543                        	.member	fxos_reserved_2_api,792,138,8,32,50
   544                        	.eos
   545                        	.stag	_fx_environment,96,52
  Sat Jul 10 2021  1:15                                                Page 11


   546                        	.member	variables,0,142,8,32
   547                        	.member	reserved1,32,5,8,16
   548                        	.member	reserved2,48,5,8,16
   549                        	.member	reserved3,64,5,8,16
   550                        	.member	reserved4,80,5,8,16
   551                        	.eos
   552                        	.stag	_debug_byte_bits,8,53
   553                        	.member	bit7,0,14,17,1
   554                        	.member	bit6,1,14,17,1
   555                        	.member	bit5,2,14,17,1
   556                        	.member	bit4,3,14,17,1
   557                        	.member	bit3,4,14,17,1
   558                        	.member	bit2,5,14,17,1
   559                        	.member	bit1,6,14,17,1
   560                        	.member	bit0,7,14,17,1
   561                        	.eos
   562                        	.stag	_k_segmentheader,160,54
   563                        	.member	version_major,0,14,8,8
   564                        	.member	version_minor,8,14,8,8
   565                        	.member	length,16,5,8,16
   566                        	.member	segment_start_addr,32,7,8,32
   567                        	.member	segment_end_addr,64,7,8,32
   568                        	.member	segment_size,96,7,8,32
   569                        	.member	main_entry_addr,128,7,8,32
   570                        	.eos
   571                        	.stag	_fx_device_driver,776,55
   572                        	.member	name,0,110,8,0,32
   573                        	.member	version,256,110,8,0,16
   574                        	.member	hmajor,384,110,8,0,8
   575                        	.member	hminor,448,110,8,0,8
   576                        	.member	type,512,14,8,8
   577                        	.member	designation,520,110,8,0,6
   578                        	.member	reserved_1,568,16,8,16
   579                        	.member	f_driver_irq,584,129,8,32
   580                        	.member	driver_context,616,129,8,32
   581                        	.member	f_driver_load,648,129,8,32
   582                        	.member	f_driver_read,680,129,8,32
   583                        	.member	f_driver_write,712,129,8,32
   584                        	.member	f_driver_unload,744,129,8,32
   585                        	.eos
   586                        	.stag	_fx_block_device_driver,808,56
   587                        	.member	name,0,110,8,0,32
   588                        	.member	version,256,110,8,0,16
   589                        	.member	hmajor,384,110,8,0,8
   590                        	.member	hminor,448,110,8,0,8
   591                        	.member	type,512,14,8,8
   592                        	.member	designation,520,110,8,0,6
   593                        	.member	reserved_1,568,16,8,16
   594                        	.member	f_driver_irq,584,129,8,32
   595                        	.member	driver_context,616,129,8,32
   596                        	.member	f_driver_load,648,129,8,32
   597                        	.member	f_driver_read,680,129,8,32
   598                        	.member	f_driver_write,712,129,8,32
   599                        	.member	f_driver_unload,744,129,8,32
   600                        	.member	f_driver_command,776,129,8,32
   601                        	.eos
   602                        	.line	400
   603                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
  Sat Jul 10 2021  1:15                                                Page 12


                    space\FXOSv1\src\fxos.h",22
   604                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxconsole.h",0
   605                        	.file	"G:\devtools\WDCTools\wdc\Tools\include\
                    string.h",0
   606                        	.line	134
   607                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxconsole.h",5
   608                        	.file	"G:\devtools\WDCTools\wdc\Tools\include\
                    stdlib.h",0
   609                        	.line	205
   610                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxconsole.h",6
   611                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxtypes.h",0
   612                        	.line	1010
   613                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxconsole.h",7
   614                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxc256u.h",0
   615                        	.line	1960
   616                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxconsole.h",12
   617                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxstring.h",0
   618                        	.file	"G:\devtools\WDCTools\wdc\Tools\include\
                    stdlib.h",0
   619                        	.line	205
   620                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxstring.h",5
   621                        	.file	"G:\devtools\WDCTools\wdc\Tools\include\
                    string.h",0
   622                        	.line	134
   623                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxstring.h",6
   624                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxtypes.h",0
   625                        	.line	1010
   626                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxstring.h",7
   627                        	.stag	_fx_string,64,57
   628                        	.member	size,0,16,8,16
   629                        	.member	pos,16,5,8,16
   630                        	.member	buffer,32,142,8,32
   631                        	.eos
   632                        	.line	139
   633                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxconsole.h",17
   634                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxeventmanager.h",0
   635                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos.h",0
   636                        	.line	30
   637                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxeventmanager.h",5
   638                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxexec.h",0
   639                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
  Sat Jul 10 2021  1:15                                                Page 13


                    space\FXOSv1\src\fxtypes.h",0
   640                        	.line	1010
   641                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxexec.h",5
   642                        	.stag	_fxos_executive_vtable,128,58
   643                        	.member	Init,0,8833,8,32
   644                        	.member	Configure,32,656,8,32
   645                        	.member	Query,64,656,8,32
   646                        	.member	Uninit,96,641,8,32
   647                        	.eos
   648                        	.line	86
   649                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxeventmanager.h",6
   650                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxnode.h",0
   651                        	.line	114
   652                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxeventmanager.h",7
   653                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxconsole.h",0
   654                        	.line	208
   655                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxeventmanager.h",8
   656                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxwindowmanager.h",0
   657                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos.h",0
   658                        	.line	30
   659                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxwindowmanager.h",5
   660                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxmemorymanager.h",0
   661                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos.h",0
   662                        	.line	30
   663                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxmemorymanager.h",5
   664                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\umm_malloc_cfg.h",0
   665                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos_build_parameters.h",0
   666                        	.line	35
   667                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\umm_malloc_cfg.h",8
   668                        	.stag	UMM_HEAP_INFO_t,256,59
   669                        	.member	totalEntries,0,18,8,32
   670                        	.member	usedEntries,32,18,8,32
   671                        	.member	freeEntries,64,18,8,32
   672                        	.member	totalBlocks,96,18,8,32
   673                        	.member	usedBlocks,128,18,8,32
   674                        	.member	freeBlocks,160,18,8,32
   675                        	.member	maxFreeContiguousBlocks,192,18,8,32
   676                        	.member	blockSize,224,18,8,32
   677                        	.eos
   678                        	.line	199
   679                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxmemorymanager.h",6
   680                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
  Sat Jul 10 2021  1:15                                                Page 14


                    space\FXOSv1\src\umm_malloc.h",0
   681                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxtypes.h",0
   682                        	.line	1010
   683                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\umm_malloc.h",11
   684                        	.line	24
   685                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxmemorymanager.h",7
   686                        	.stag	_fx_memory_map,2072,60
   687                        	.member	availableMemory,0,18,8,32
   688                        	.member	valid_segments,32,110,8,0,255
   689                        	.eos
   690                        	.stag	_fx_ipc_port,144,61
   691                        	.member	id,0,18,8,32
   692                        	.member	type,32,14,8,8
   693                        	.member	name,40,138,8,32,57
   694                        	.member	time,72,18,8,32
   695                        	.member	queue,104,138,8,32,7
   696                        	.member	reserved_1,136,14,8,8
   697                        	.eos
   698                        	.line	105
   699                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxwindowmanager.h",6
   700                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxeventmanager.h",0
   701                        	.line	564
   702                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxwindowmanager.h",7
   703                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxgui.h",0
   704                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxfont.h",0
   705                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxtypes.h",0
   706                        	.line	1010
   707                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxfont.h",6
   708                        	.line	74
   709                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxgui.h",5
   710                        	.stag	_click_detected,64,62
   711                        	.member	window,0,138,8,32,33
   712                        	.member	handler,32,641,8,32
   713                        	.eos
   714                        	.stag	_current_palette_map,400,63
   715                        	.member	CUR_DESKTOP,0,5,8,16
   716                        	.member	CUR_BACKGROUND,16,5,8,16
   717                        	.member	CUR_FONT,32,5,8,16
   718                        	.member	CUR_SELECTED_FONT,48,5,8,16
   719                        	.member	CUR_HIGHLIGHT_COLOR,64,5,8,16
   720                        	.member	CUR_WINDOWFRAME,80,5,8,16
   721                        	.member	CUR_WINDOWBORDER,96,5,8,16
   722                        	.member	CUR_WINDOWSHADOW,112,5,8,16
   723                        	.member	CUR_MENU,128,5,8,16
   724                        	.member	CUR_GADGET,144,5,8,16
   725                        	.member	CUR_COLOR,160,101,8,0,15
   726                        	.eos
  Sat Jul 10 2021  1:15                                                Page 15


   727                        	.line	359
   728                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxwindowmanager.h",8
   729                        	.stag	_fxos_winman_vtable,160,64
   730                        	.member	Events,0,641,8,32
   731                        	.member	ConfigureWindowManager,32,656,8,32
   732                        	.member	ProcessWindowEvent,64,8833,8,32
   733                        	.member	QueryWindowManager,96,656,8,32
   734                        	.member	DoWndProcs,128,641,8,32
   735                        	.eos
   736                        	.stag	fake65_,64,65
   737                        	.member	type,0,16,8,16
   738                        	.member	size,16,16,8,16
   739                        	.member	desktopAction,32,129,8,32
   740                        	.eos
   741                        	.stag	fake66_,96,66
   742                        	.member	type,0,16,8,16
   743                        	.member	caption,16,138,8,32,57
   744                        	.member	buttonType,48,16,8,16
   745                        	.member	x,64,5,8,16
   746                        	.member	y,80,5,8,16
   747                        	.eos
   748                        	.stag	_childMessage_t,64,67
   749                        	.member	msgType,0,16,8,16
   750                        	.member	msgData,16,129,8,32
   751                        	.member	dataSize,48,16,8,16
   752                        	.eos
   753                        	.line	581
   754                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxeventmanager.h",9
   755                        	.stag	_fx_main_loopvars,16,68
   756                        	.member	dummy,0,5,8,16
   757                        	.eos
   758                        	.stag	_fxMouseMessageData,64,69
   759                        	.member	button1,0,14,8,8
   760                        	.member	button2,8,14,8,8
   761                        	.member	button3,16,14,8,8
   762                        	.member	button4,24,14,8,8
   763                        	.member	x,32,16,8,16
   764                        	.member	y,48,16,8,16
   765                        	.eos
   766                        	.utag	marshalled_data,32,70
   767                        	.member	byteValue,0,14,11,8
   768                        	.member	verbValue,0,110,11,0,2
   769                        	.member	intValue,0,16,11,16
   770                        	.member	longValue,0,18,11,32
   771                        	.member	pointerValue,0,129,11,32
   772                        	.eos
   773                        	.stag	_fx_eventProcess,64,71
   774                        	.member	process,0,138,8,32,20
   775                        	.member	eventProc,32,641,8,32
   776                        	.eos
   777                        	.stag	_mouse_msg_state,184,72
   778                        	.member	lastEvent,0,18,8,32
   779                        	.member	buttonLeftDown,32,14,8,8
   780                        	.member	lastLeftDown,40,18,8,32
   781                        	.member	buttonRightDown,72,14,8,8
   782                        	.member	lastRightDown,80,18,8,32
  Sat Jul 10 2021  1:15                                                Page 16


   783                        	.member	buttonMiddleDown,112,14,8,8
   784                        	.member	lastMiddleDown,120,18,8,32
   785                        	.member	lastX,152,16,8,16
   786                        	.member	lastY,168,16,8,16
   787                        	.eos
   788                        	.stag	_fxos_eventmanager_vtable,192,73
   789                        	.member	EventQueue,0,138,8,32,7
   790                        	.member	Init,32,8833,8,32
   791                        	.member	Run,64,656,8,32
   792                        	.member	Configure,96,656,8,32
   793                        	.member	Query,128,656,8,32
   794                        	.member	Uninit,160,641,8,32
   795                        	.eos
   796                        	.stag	_k_clipboard_data,168,74
   797                        	.member	type,0,14,8,8
   798                        	.member	readable,8,110,8,0,16
   799                        	.member	data,136,129,8,32
   800                        	.eos
   801                        	.line	564
   802                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxconsole.h",18
   803                        	.stag	_fx_spinner_ctx,48,75
   804                        	.member	index,0,5,8,16
   805                        	.member	spinner,16,142,8,32
   806                        	.eos
   807                        	.stag	_fx_console_ctx,1144,76
   808                        	.member	lineBufferIndex,0,5,8,16
   809                        	.member	lineBuffer,16,110,8,0,128
   810                        	.member	isShifted,1040,14,8,8
   811                        	.member	userData,1048,129,8,32
   812                        	.member	screenBuffer,1080,129,8,32
   813                        	.member	Reserved1,1112,129,8,32
   814                        	.eos
   815                        	.stag	_token,64,77
   816                        	.member	type,0,5,8,16
   817                        	.member	depth,16,16,8,16
   818                        	.member	text,32,142,8,32
   819                        	.eos
   820                        	.stag	_command_args,64,78
   821                        	.member	proc,0,656,8,32
   822                        	.member	tokens,32,138,8,32,5
   823                        	.eos
   824                        	.line	208
   825                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos.h",23
   826                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxstring.h",0
   827                        	.line	139
   828                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos.h",24
   829                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxnode.h",0
   830                        	.line	114
   831                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos.h",25
   832                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\ff.h",0
   833                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
  Sat Jul 10 2021  1:15                                                Page 17


                    space\FXOSv1\src\ffconf.h",0
   834                        	.line	298
   835                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\ff.h",29
   836                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxtypes.h",0
   837                        	.line	1010
   838                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\ff.h",30
   839                        	.stag	fake79_,4504,79
   840                        	.member	fs_type,0,14,8,8
   841                        	.member	pdrv,8,14,8,8
   842                        	.member	n_fats,16,14,8,8
   843                        	.member	wflag,24,14,8,8
   844                        	.member	fsi_flag,32,14,8,8
   845                        	.member	id,40,5,8,16
   846                        	.member	n_rootdir,56,5,8,16
   847                        	.member	csize,72,5,8,16
   848                        	.member	lfnbuf,88,144,8,32
   849                        	.member	last_clst,120,18,8,32
   850                        	.member	free_clst,152,18,8,32
   851                        	.member	n_fatent,184,18,8,32
   852                        	.member	fsize,216,18,8,32
   853                        	.member	volbase,248,18,8,32
   854                        	.member	fatbase,280,18,8,32
   855                        	.member	dirbase,312,18,8,32
   856                        	.member	database,344,18,8,32
   857                        	.member	winsect,376,18,8,32
   858                        	.member	win,408,110,8,0,512
   859                        	.eos
   860                        	.stag	fake80_,128,80
   861                        	.member	fs,0,138,8,32,79
   862                        	.member	id,32,5,8,16
   863                        	.member	attr,48,14,8,8
   864                        	.member	stat,56,14,8,8
   865                        	.member	sclust,64,18,8,32
   866                        	.member	objsize,96,18,8,32
   867                        	.eos
   868                        	.stag	fake81_,4400,81
   869                        	.member	obj,0,10,8,128,80
   870                        	.member	flag,128,14,8,8
   871                        	.member	err,136,14,8,8
   872                        	.member	fptr,144,18,8,32
   873                        	.member	clust,176,18,8,32
   874                        	.member	sect,208,18,8,32
   875                        	.member	dir_sect,240,18,8,32
   876                        	.member	dir_ptr,272,142,8,32
   877                        	.member	buf,304,110,8,0,512
   878                        	.eos
   879                        	.stag	fake82_,416,82
   880                        	.member	obj,0,10,8,128,80
   881                        	.member	dptr,128,18,8,32
   882                        	.member	clust,160,18,8,32
   883                        	.member	sect,192,18,8,32
   884                        	.member	dir,224,142,8,32
   885                        	.member	fn,256,110,8,0,12
   886                        	.member	blk_ofs,352,18,8,32
   887                        	.member	pat,384,142,8,32
  Sat Jul 10 2021  1:15                                                Page 18


   888                        	.eos
   889                        	.stag	fake83_,2224,83
   890                        	.member	fsize,0,18,8,32
   891                        	.member	fdate,32,5,8,16
   892                        	.member	ftime,48,5,8,16
   893                        	.member	fattrib,64,14,8,8
   894                        	.member	altname,72,110,8,0,13
   895                        	.member	fname,176,110,8,0,256
   896                        	.eos
   897                        	.stag	fake84_,80,84
   898                        	.member	fmt,0,14,8,8
   899                        	.member	n_fat,8,14,8,8
   900                        	.member	align,16,16,8,16
   901                        	.member	n_root,32,16,8,16
   902                        	.member	au_size,48,18,8,32
   903                        	.eos
   904                        	.line	429
   905                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos.h",26
   906                        	.line	30
   907                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxmain.c",3
   908                        ;#include "fxdos.h"
   909                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxdos.h",0
   910                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxtypes.h",0
   911                        	.line	1010
   912                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxdos.h",5
   913                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\ff.h",0
   914                        	.line	429
   915                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxdos.h",6
   916                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\diskio.h",0
   917                        	.line	85
   918                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxdos.h",7
   919                        	.stag	_fx_sd_direntry,256,85
   920                        	.member	filename,0,110,8,0,11
   921                        	.member	type,88,14,8,8
   922                        	.member	attrs,96,110,8,0,20
   923                        	.eos
   924                        	.stag	_fx_info,416,86
   925                        	.member	stgName,0,110,8,0,32
   926                        	.member	Reserved1,256,14,8,8
   927                        	.member	stgType,264,16,8,16
   928                        	.member	Reserved2,280,14,8,8
   929                        	.member	stgReserved,288,110,8,0,16
   930                        	.eos
   931                        	.stag	_fx_fileinfo,136,87
   932                        	.member	type,0,14,8,8
   933                        	.member	pFilename,8,142,8,32
   934                        	.member	lSize,40,18,8,32
   935                        	.member	lcreateDate,72,18,8,32
   936                        	.member	lchangeDate,104,18,8,32
  Sat Jul 10 2021  1:15                                                Page 19


   937                        	.eos
   938                        	.stag	_FX_FAT_DIR_INFO,256,88
   939                        	.member	DIR_Name,0,110,8,0,11
   940                        	.member	DIR_Attr,88,14,8,8
   941                        	.member	DIR_NTRes,96,14,8,8
   942                        	.member	DIR_CrtTimeTenth,104,14,8,8
   943                        	.member	DIR_CrtTime,112,16,8,16
   944                        	.member	DIR_CrtDate,128,16,8,16
   945                        	.member	DIR_LstAccDate,144,16,8,16
   946                        	.member	DIR_FstClusHI,160,16,8,16
   947                        	.member	DIR_WrtTime,176,16,8,16
   948                        	.member	DIR_WrtDate,192,16,8,16
   949                        	.member	DIR_FstClusLO,208,16,8,16
   950                        	.member	DIR_FileSize,224,18,8,32
   951                        	.eos
   952                        	.stag	fat_extBS_32,416,89
   953                        	.member	table_size_32,0,18,8,32
   954                        	.member	extended_flags,32,16,8,16
   955                        	.member	fat_version,48,16,8,16
   956                        	.member	root_cluster,64,18,8,32
   957                        	.member	fat_info,96,16,8,16
   958                        	.member	backup_BS_sector,112,16,8,16
   959                        	.member	reserved_0,128,110,8,0,12
   960                        	.member	drive_number,224,14,8,8
   961                        	.member	reserved_1,232,14,8,8
   962                        	.member	boot_signature,240,14,8,8
   963                        	.member	volume_id,248,16,8,16
   964                        	.member	volume_label,264,110,8,0,11
   965                        	.member	fat_type_label,352,110,8,0,8
   966                        	.eos
   967                        	.stag	fat_extBS_16,192,90
   968                        	.member	bios_drive_num,0,14,8,8
   969                        	.member	reserved1,8,14,8,8
   970                        	.member	boot_signature,16,14,8,8
   971                        	.member	volume_id,24,16,8,16
   972                        	.member	volume_label,40,110,8,0,11
   973                        	.member	fat_type_label,128,110,8,0,8
   974                        	.eos
   975                        	.stag	fat_BS,688,91
   976                        	.member	bootjmp,0,110,8,0,3
   977                        	.member	oem_name,24,110,8,0,8
   978                        	.member	bytes_per_sector,88,16,8,16
   979                        	.member	sectors_per_cluster,104,14,8,8
   980                        	.member	reserved_sector_count,112,16,8,16
   981                        	.member	table_count,128,14,8,8
   982                        	.member	root_entry_count,136,16,8,16
   983                        	.member	total_sectors_16,152,16,8,16
   984                        	.member	media_type,168,14,8,8
   985                        	.member	table_size_16,176,16,8,16
   986                        	.member	sectors_per_track,192,16,8,16
   987                        	.member	head_side_count,208,16,8,16
   988                        	.member	hidden_sector_count,224,16,8,16
   989                        	.member	total_sectors_32,240,16,8,16
   990                        	.member	extended_section,256,110,8,0,54
   991                        	.eos
   992                        	.stag	__FATBootSector,928,92
   993                        	.member	bootjmp,0,110,8,0,3
   994                        	.member	oem_name,24,110,8,0,8
  Sat Jul 10 2021  1:15                                                Page 20


   995                        	.member	bytes_per_sector,88,16,8,16
   996                        	.member	sectors_per_cluster,104,14,8,8
   997                        	.member	reserved_sector_count,112,16,8,16
   998                        	.member	fat_table_count,128,14,8,8
   999                        	.member	root_entry_count,136,16,8,16
  1000                        	.member	total_sectors_16,152,16,8,16
  1001                        	.member	media_type,168,14,8,8
  1002                        	.member	sectors_per_fat,176,16,8,16
  1003                        	.member	sectors_per_track,192,16,8,16
  1004                        	.member	head_side_count,208,16,8,16
  1005                        	.member	hidden_sector_count,224,18,8,32
  1006                        	.member	total_sectors_32,256,18,8,32
  1007                        	.member	drive_number,288,14,8,8
  1008                        	.member	reserved1,296,14,8,8
  1009                        	.member	boot_sig,304,14,8,8
  1010                        	.member	vol_id,312,18,8,32
  1011                        	.member	vol_name,344,110,8,0,11
  1012                        	.member	file_system_type,432,110,8,0,8
  1013                        	.member	extended_section,496,110,8,0,54
  1014                        	.eos
  1015                        	.stag	__PARTITIONTABLE,128,93
  1016                        	.member	first_byte,0,14,8,8
  1017                        	.member	start_chs,8,110,8,0,3
  1018                        	.member	partition_type,32,14,8,8
  1019                        	.member	end_chs,40,110,8,0,3
  1020                        	.member	start_sector,64,18,8,32
  1021                        	.member	length_sectors,96,18,8,32
  1022                        	.eos
  1023                        	.stag	fake94_,4096,94
  1024                        	.member	jmp,0,110,8,0,3
  1025                        	.member	oem,24,110,8,0,8
  1026                        	.member	sector_size,88,15,8,16
  1027                        	.member	sectors_per_cluster,104,14,8,8
  1028                        	.member	reserved_sectors,112,15,8,16
  1029                        	.member	number_ok_dos_fats,128,14,8,8
  1030                        	.member	root_dir_entries,136,15,8,16
  1031                        	.member	total_sectors_short,152,15,8,16
  1032                        	.member	media_descriptor,168,14,8,8
  1033                        	.member	fat_size_sectors,176,15,8,16
  1034                        	.member	sectors_per_track,192,15,8,16
  1035                        	.member	number_ok_dos_heads,208,15,8,16
  1036                        	.member	hidden_sectors,224,18,8,32
  1037                        	.member	total_sectors_long,256,18,8,32
  1038                        	.member	drive_number,288,14,8,8
  1039                        	.member	current_head,296,14,8,8
  1040                        	.member	boot_signature,304,14,8,8
  1041                        	.member	volume_id,312,18,8,32
  1042                        	.member	volume_label,344,110,8,0,11
  1043                        	.member	fs_type,432,110,8,0,8
  1044                        	.member	boot_code,496,110,8,0,448
  1045                        	.member	boot_sector_signature,4080,15,8,16
  1046                        	.eos
  1047                        	.stag	__FAT16ENTRY,256,95
  1048                        	.member	filename,0,110,8,0,8
  1049                        	.member	ext,64,110,8,0,3
  1050                        	.member	attributes,88,14,8,8
  1051                        	.member	reserved,96,110,8,0,10
  1052                        	.member	modify_time,176,16,8,16
  Sat Jul 10 2021  1:15                                                Page 21


  1053                        	.member	modify_date,192,16,8,16
  1054                        	.member	starting_cluster,208,16,8,16
  1055                        	.member	file_size,224,18,8,32
  1056                        	.eos
  1057                        	.stag	__FAT16ENTRYLONG,288,96
  1058                        	.member	filename,0,110,8,0,8
  1059                        	.member	ext,64,110,8,0,3
  1060                        	.member	attributes,88,14,8,8
  1061                        	.member	reserved,96,110,8,0,10
  1062                        	.member	modify_time,176,16,8,16
  1063                        	.member	modify_date,192,16,8,16
  1064                        	.member	starting_cluster,208,16,8,16
  1065                        	.member	file_size,224,18,8,32
  1066                        	.member	plongfileName,256,142,8,32
  1067                        	.eos
  1068                        	.stag	_LongFileName,256,97
  1069                        	.member	sequenceNo,0,14,8,8
  1070                        	.member	fileName_Part1,8,110,8,0,10
  1071                        	.member	fileattribute,88,14,8,8
  1072                        	.member	type,96,14,8,8
  1073                        	.member	checksum,104,14,8,8
  1074                        	.member	fileName_Part2,112,110,8,0,12
  1075                        	.member	fstclusLO,208,5,8,16
  1076                        	.member	fileName_Part3,224,110,8,0,4
  1077                        	.eos
  1078                        	.stag	_IDSECTOR,2048,98
  1079                        	.member	wGenConfig,0,16,8,16
  1080                        	.member	wNumCyls,16,16,8,16
  1081                        	.member	wReserved,32,16,8,16
  1082                        	.member	wNumHeads,48,16,8,16
  1083                        	.member	wBytesPerTrack,64,16,8,16
  1084                        	.member	wBytesPerSector,80,16,8,16
  1085                        	.member	wSectorsPerTrack,96,16,8,16
  1086                        	.member	wVendorUnique,112,112,8,0,3
  1087                        	.member	sSerialNumber,160,110,8,0,20
  1088                        	.member	wBufferType,320,16,8,16
  1089                        	.member	wBufferSize,336,16,8,16
  1090                        	.member	wECCSize,352,16,8,16
  1091                        	.member	sFirmwareRev,368,110,8,0,8
  1092                        	.member	sModelNumber,432,110,8,0,40
  1093                        	.member	wMoreVendorUnique,752,16,8,16
  1094                        	.member	wDoubleWordIO,768,16,8,16
  1095                        	.member	wCapabilities,784,16,8,16
  1096                        	.member	wReserved1,800,16,8,16
  1097                        	.member	wPIOTiming,816,16,8,16
  1098                        	.member	wDMATiming,832,16,8,16
  1099                        	.member	wBS,848,16,8,16
  1100                        	.member	wNumCurrentCyls,864,16,8,16
  1101                        	.member	wNumCurrentHeads,880,16,8,16
  1102                        	.member	wNumCurrentSectorsPerTrack,896,16,8,16
  1103                        	.member	ulCurrentSectorCapacity,912,18,8,32
  1104                        	.member	wMultSectorStuff,944,16,8,16
  1105                        	.member	ulTotalAddressableSectors,960,18,8,32
  1106                        	.member	wSingleWordDMA,992,16,8,16
  1107                        	.member	wMultiWordDMA,1008,16,8,16
  1108                        	.member	bReserved,1024,110,8,0,128
  1109                        	.eos
  1110                        	.stag	fake99_,16,99
  Sat Jul 10 2021  1:15                                                Page 22


  1111                        	.member	Reserved1,0,16,17,1
  1112                        	.member	Retired3,1,16,17,1
  1113                        	.member	ResponseIncomplete,2,16,17,1
  1114                        	.member	Retired2,3,16,17,3
  1115                        	.member	FixedDevice,6,16,17,1
  1116                        	.member	RemovableMedia,7,16,17,1
  1117                        	.member	Retired1,8,16,17,7
  1118                        	.member	DeviceType,15,16,17,1
  1119                        	.eos
  1120                        	.stag	fake100_,16,100
  1121                        	.member	FeatureSupported,0,16,17,1
  1122                        	.member	Reserved,1,16,17,15
  1123                        	.eos
  1124                        	.stag	fake101_,32,101
  1125                        	.member	CurrentLongPhysicalSectorAlignment,0,14,
                    17,2
  1126                        	.member	ReservedByte49,2,14,17,6
  1127                        	.member	DmaSupported,8,14,17,1
  1128                        	.member	LbaSupported,9,14,17,1
  1129                        	.member	IordyDisable,10,14,17,1
  1130                        	.member	IordySupported,11,14,17,1
  1131                        	.member	Reserved1,12,14,17,1
  1132                        	.member	StandybyTimerSupport,13,14,17,1
  1133                        	.member	Reserved2,14,14,17,2
  1134                        	.member	ReservedWord50,16,16,8,16
  1135                        	.eos
  1136                        	.stag	fake102_,16,102
  1137                        	.member	ZonedCapabilities,0,16,17,2
  1138                        	.member	NonVolatileWriteCache,2,16,17,1
  1139                        	.member	ExtendedUserAddressableSectorsSupported,
                    3,16,17,1
  1140                        	.member	DeviceEncryptsAllUserData,4,16,17,1
  1141                        	.member	ReadZeroAfterTrimSupported,5,16,17,1
  1142                        	.member	Optional28BitCommandsSupported,6,16,17,1
  1143                        	.member	IEEE1667,7,16,17,1
  1144                        	.member	DownloadMicrocodeDmaSupported,8,16,17,1
  1145                        	.member	SetMaxSetPasswordUnlockDmaSupported,9,16
                    ,17,1
  1146                        	.member	WriteBufferDmaSupported,10,16,17,1
  1147                        	.member	ReadBufferDmaSupported,11,16,17,1
  1148                        	.member	DeviceConfigIdentifySetDmaSupported,12,1
                    6,17,1
  1149                        	.member	LPSAERCSupported,13,16,17,1
  1150                        	.member	DeterministicReadAfterTrimSupported,14,1
                    6,17,1
  1151                        	.member	CFastSpecSupported,15,16,17,1
  1152                        	.eos
  1153                        	.stag	fake103_,32,103
  1154                        	.member	Reserved0,0,16,17,1
  1155                        	.member	SataGen1,1,16,17,1
  1156                        	.member	SataGen2,2,16,17,1
  1157                        	.member	SataGen3,3,16,17,1
  1158                        	.member	Reserved1,4,16,17,4
  1159                        	.member	NCQ,8,16,17,1
  1160                        	.member	HIPM,9,16,17,1
  1161                        	.member	PhyEvents,10,16,17,1
  1162                        	.member	NcqUnload,11,16,17,1
  1163                        	.member	NcqPriority,12,16,17,1
  Sat Jul 10 2021  1:15                                                Page 23


  1164                        	.member	HostAutoPS,13,16,17,1
  1165                        	.member	DeviceAutoPS,14,16,17,1
  1166                        	.member	ReadLogDMA,15,16,17,1
  1167                        	.member	Reserved2,16,16,17,1
  1168                        	.member	CurrentSpeed,17,16,17,3
  1169                        	.member	NcqStreaming,20,16,17,1
  1170                        	.member	NcqQueueMgmt,21,16,17,1
  1171                        	.member	NcqReceiveSend,22,16,17,1
  1172                        	.member	DEVSLPtoReducedPwrState,23,16,17,1
  1173                        	.member	Reserved3,24,16,17,8
  1174                        	.eos
  1175                        	.stag	fake104_,16,104
  1176                        	.member	Reserved0,0,16,17,1
  1177                        	.member	NonZeroOffsets,1,16,17,1
  1178                        	.member	DmaSetupAutoActivate,2,16,17,1
  1179                        	.member	DIPM,3,16,17,1
  1180                        	.member	InOrderData,4,16,17,1
  1181                        	.member	HardwareFeatureControl,5,16,17,1
  1182                        	.member	SoftwareSettingsPreservation,6,16,17,1
  1183                        	.member	NCQAutosense,7,16,17,1
  1184                        	.member	DEVSLP,8,16,17,1
  1185                        	.member	HybridInformation,9,16,17,1
  1186                        	.member	Reserved1,10,16,17,6
  1187                        	.eos
  1188                        	.stag	fake105_,16,105
  1189                        	.member	Reserved0,0,16,17,1
  1190                        	.member	NonZeroOffsets,1,16,17,1
  1191                        	.member	DmaSetupAutoActivate,2,16,17,1
  1192                        	.member	DIPM,3,16,17,1
  1193                        	.member	InOrderData,4,16,17,1
  1194                        	.member	HardwareFeatureControl,5,16,17,1
  1195                        	.member	SoftwareSettingsPreservation,6,16,17,1
  1196                        	.member	DeviceAutoPS,7,16,17,1
  1197                        	.member	DEVSLP,8,16,17,1
  1198                        	.member	HybridInformation,9,16,17,1
  1199                        	.member	Reserved1,10,16,17,6
  1200                        	.eos
  1201                        	.stag	fake106_,48,106
  1202                        	.member	SmartCommands,0,16,17,1
  1203                        	.member	SecurityMode,1,16,17,1
  1204                        	.member	RemovableMediaFeature,2,16,17,1
  1205                        	.member	PowerManagement,3,16,17,1
  1206                        	.member	Reserved1,4,16,17,1
  1207                        	.member	WriteCache,5,16,17,1
  1208                        	.member	LookAhead,6,16,17,1
  1209                        	.member	ReleaseInterrupt,7,16,17,1
  1210                        	.member	ServiceInterrupt,8,16,17,1
  1211                        	.member	DeviceReset,9,16,17,1
  1212                        	.member	HostProtectedArea,10,16,17,1
  1213                        	.member	Obsolete1,11,16,17,1
  1214                        	.member	WriteBuffer,12,16,17,1
  1215                        	.member	ReadBuffer,13,16,17,1
  1216                        	.member	Nop,14,16,17,1
  1217                        	.member	Obsolete2,15,16,17,1
  1218                        	.member	DownloadMicrocode,16,16,17,1
  1219                        	.member	DmaQueued,17,16,17,1
  1220                        	.member	Cfa,18,16,17,1
  1221                        	.member	AdvancedPm,19,16,17,1
  Sat Jul 10 2021  1:15                                                Page 24


  1222                        	.member	Msn,20,16,17,1
  1223                        	.member	PowerUpInStandby,21,16,17,1
  1224                        	.member	ManualPowerUp,22,16,17,1
  1225                        	.member	Reserved2,23,16,17,1
  1226                        	.member	SetMax,24,16,17,1
  1227                        	.member	Acoustics,25,16,17,1
  1228                        	.member	BigLba,26,16,17,1
  1229                        	.member	DeviceConfigOverlay,27,16,17,1
  1230                        	.member	FlushCache,28,16,17,1
  1231                        	.member	FlushCacheExt,29,16,17,1
  1232                        	.member	WordValid83,30,16,17,2
  1233                        	.member	SmartErrorLog,32,16,17,1
  1234                        	.member	SmartSelfTest,33,16,17,1
  1235                        	.member	MediaSerialNumber,34,16,17,1
  1236                        	.member	MediaCardPassThrough,35,16,17,1
  1237                        	.member	StreamingFeature,36,16,17,1
  1238                        	.member	GpLogging,37,16,17,1
  1239                        	.member	WriteFua,38,16,17,1
  1240                        	.member	WriteQueuedFua,39,16,17,1
  1241                        	.member	WWN64Bit,40,16,17,1
  1242                        	.member	URGReadStream,41,16,17,1
  1243                        	.member	URGWriteStream,42,16,17,1
  1244                        	.member	ReservedForTechReport,43,16,17,2
  1245                        	.member	IdleWithUnloadFeature,45,16,17,1
  1246                        	.member	WordValid,46,16,17,2
  1247                        	.eos
  1248                        	.stag	fake107_,48,107
  1249                        	.member	SmartCommands,0,16,17,1
  1250                        	.member	SecurityMode,1,16,17,1
  1251                        	.member	RemovableMediaFeature,2,16,17,1
  1252                        	.member	PowerManagement,3,16,17,1
  1253                        	.member	Reserved1,4,16,17,1
  1254                        	.member	WriteCache,5,16,17,1
  1255                        	.member	LookAhead,6,16,17,1
  1256                        	.member	ReleaseInterrupt,7,16,17,1
  1257                        	.member	ServiceInterrupt,8,16,17,1
  1258                        	.member	DeviceReset,9,16,17,1
  1259                        	.member	HostProtectedArea,10,16,17,1
  1260                        	.member	Obsolete1,11,16,17,1
  1261                        	.member	WriteBuffer,12,16,17,1
  1262                        	.member	ReadBuffer,13,16,17,1
  1263                        	.member	Nop,14,16,17,1
  1264                        	.member	Obsolete2,15,16,17,1
  1265                        	.member	DownloadMicrocode,16,16,17,1
  1266                        	.member	DmaQueued,17,16,17,1
  1267                        	.member	Cfa,18,16,17,1
  1268                        	.member	AdvancedPm,19,16,17,1
  1269                        	.member	Msn,20,16,17,1
  1270                        	.member	PowerUpInStandby,21,16,17,1
  1271                        	.member	ManualPowerUp,22,16,17,1
  1272                        	.member	Reserved2,23,16,17,1
  1273                        	.member	SetMax,24,16,17,1
  1274                        	.member	Acoustics,25,16,17,1
  1275                        	.member	BigLba,26,16,17,1
  1276                        	.member	DeviceConfigOverlay,27,16,17,1
  1277                        	.member	FlushCache,28,16,17,1
  1278                        	.member	FlushCacheExt,29,16,17,1
  1279                        	.member	Resrved3,30,16,17,1
  Sat Jul 10 2021  1:15                                                Page 25


  1280                        	.member	Words119_120Valid,31,16,17,1
  1281                        	.member	SmartErrorLog,32,16,17,1
  1282                        	.member	SmartSelfTest,33,16,17,1
  1283                        	.member	MediaSerialNumber,34,16,17,1
  1284                        	.member	MediaCardPassThrough,35,16,17,1
  1285                        	.member	StreamingFeature,36,16,17,1
  1286                        	.member	GpLogging,37,16,17,1
  1287                        	.member	WriteFua,38,16,17,1
  1288                        	.member	WriteQueuedFua,39,16,17,1
  1289                        	.member	WWN64Bit,40,16,17,1
  1290                        	.member	URGReadStream,41,16,17,1
  1291                        	.member	URGWriteStream,42,16,17,1
  1292                        	.member	ReservedForTechReport,43,16,17,2
  1293                        	.member	IdleWithUnloadFeature,45,16,17,1
  1294                        	.member	Reserved4,46,16,17,2
  1295                        	.eos
  1296                        	.stag	fake108_,16,108
  1297                        	.member	TimeRequired,0,16,17,15
  1298                        	.member	ExtendedTimeReported,15,16,17,1
  1299                        	.eos
  1300                        	.stag	fake109_,16,109
  1301                        	.member	TimeRequired,0,16,17,15
  1302                        	.member	ExtendedTimeReported,15,16,17,1
  1303                        	.eos
  1304                        	.stag	fake110_,16,110
  1305                        	.member	LogicalSectorsPerPhysicalSector,0,16,17,
                    4
  1306                        	.member	Reserved0,4,16,17,8
  1307                        	.member	LogicalSectorLongerThan256Words,12,16,17
                    ,1
  1308                        	.member	MultipleLogicalSectorsPerPhysicalSector,
                    13,16,17,1
  1309                        	.member	Reserved1,14,16,17,2
  1310                        	.eos
  1311                        	.stag	fake111_,16,111
  1312                        	.member	ReservedForDrqTechnicalReport,0,16,17,1
  1313                        	.member	WriteReadVerify,1,16,17,1
  1314                        	.member	WriteUncorrectableExt,2,16,17,1
  1315                        	.member	ReadWriteLogDmaExt,3,16,17,1
  1316                        	.member	DownloadMicrocodeMode3,4,16,17,1
  1317                        	.member	FreefallControl,5,16,17,1
  1318                        	.member	SenseDataReporting,6,16,17,1
  1319                        	.member	ExtendedPowerConditions,7,16,17,1
  1320                        	.member	Reserved0,8,16,17,6
  1321                        	.member	WordValid,14,16,17,2
  1322                        	.eos
  1323                        	.stag	fake112_,16,112
  1324                        	.member	ReservedForDrqTechnicalReport,0,16,17,1
  1325                        	.member	WriteReadVerify,1,16,17,1
  1326                        	.member	WriteUncorrectableExt,2,16,17,1
  1327                        	.member	ReadWriteLogDmaExt,3,16,17,1
  1328                        	.member	DownloadMicrocodeMode3,4,16,17,1
  1329                        	.member	FreefallControl,5,16,17,1
  1330                        	.member	SenseDataReporting,6,16,17,1
  1331                        	.member	ExtendedPowerConditions,7,16,17,1
  1332                        	.member	Reserved0,8,16,17,6
  1333                        	.member	Reserved1,14,16,17,2
  1334                        	.eos
  Sat Jul 10 2021  1:15                                                Page 26


  1335                        	.stag	fake113_,16,113
  1336                        	.member	SecuritySupported,0,16,17,1
  1337                        	.member	SecurityEnabled,1,16,17,1
  1338                        	.member	SecurityLocked,2,16,17,1
  1339                        	.member	SecurityFrozen,3,16,17,1
  1340                        	.member	SecurityCountExpired,4,16,17,1
  1341                        	.member	EnhancedSecurityEraseSupported,5,16,17,1
  1342                        	.member	Reserved0,6,16,17,2
  1343                        	.member	SecurityLevel,8,16,17,1
  1344                        	.member	Reserved1,9,16,17,7
  1345                        	.eos
  1346                        	.stag	fake114_,16,114
  1347                        	.member	MaximumCurrentInMA,0,16,17,12
  1348                        	.member	CfaPowerMode1Disabled,12,16,17,1
  1349                        	.member	CfaPowerMode1Required,13,16,17,1
  1350                        	.member	Reserved0,14,16,17,1
  1351                        	.member	Word160Supported,15,16,17,1
  1352                        	.eos
  1353                        	.stag	fake115_,16,115
  1354                        	.member	SupportsTrim,0,16,17,1
  1355                        	.member	Reserved0,1,16,17,15
  1356                        	.eos
  1357                        	.stag	fake116_,16,116
  1358                        	.member	Supported,0,16,17,1
  1359                        	.member	Reserved0,1,16,17,1
  1360                        	.member	WriteSameSuported,2,16,17,1
  1361                        	.member	ErrorRecoveryControlSupported,3,16,17,1
  1362                        	.member	FeatureControlSuported,4,16,17,1
  1363                        	.member	DataTablesSuported,5,16,17,1
  1364                        	.member	Reserved1,6,16,17,6
  1365                        	.member	VendorSpecific,12,16,17,4
  1366                        	.eos
  1367                        	.stag	fake117_,16,117
  1368                        	.member	AlignmentOfLogicalWithinPhysical,0,16,17
                    ,14
  1369                        	.member	Word209Supported,14,16,17,1
  1370                        	.member	Reserved0,15,16,17,1
  1371                        	.eos
  1372                        	.stag	fake118_,16,118
  1373                        	.member	NVCachePowerModeEnabled,0,16,17,1
  1374                        	.member	Reserved0,1,16,17,3
  1375                        	.member	NVCacheFeatureSetEnabled,4,16,17,1
  1376                        	.member	Reserved1,5,16,17,3
  1377                        	.member	NVCachePowerModeVersion,8,16,17,4
  1378                        	.member	NVCacheFeatureSetVersion,12,16,17,4
  1379                        	.eos
  1380                        	.stag	fake119_,16,119
  1381                        	.member	NVCacheEstimatedTimeToSpinUpInSeconds,0,
                    14,8,8
  1382                        	.member	Reserved,8,14,8,8
  1383                        	.eos
  1384                        	.stag	fake120_,16,120
  1385                        	.member	MajorVersion,0,16,17,12
  1386                        	.member	TransportType,12,16,17,4
  1387                        	.eos
  1388                        	.stag	_IDENTIFY_DEVICE_DATA,4096,121
  1389                        	.member	GeneralConfiguration,0,10,8,16,99
  1390                        	.member	NumCylinders,16,16,8,16
  Sat Jul 10 2021  1:15                                                Page 27


  1391                        	.member	SpecificConfiguration,32,16,8,16
  1392                        	.member	NumHeads,48,16,8,16
  1393                        	.member	Retired1Bytes,64,110,8,0,4
  1394                        	.member	NumSectorsPerTrack,96,16,8,16
  1395                        	.member	VendorUnique1Bytes,112,110,8,0,6
  1396                        	.member	SerialNumber,160,110,8,0,20
  1397                        	.member	Retired2,320,112,8,0,2
  1398                        	.member	Obsolete1,352,16,8,16
  1399                        	.member	FirmwareRevision,368,110,8,0,8
  1400                        	.member	ModelNumber,432,110,8,0,40
  1401                        	.member	MaximumBlockTransfer,752,14,8,8
  1402                        	.member	VendorUnique2,760,14,8,8
  1403                        	.member	TrustedComputing,768,10,8,16,100
  1404                        	.member	Capabilities,784,10,8,32,101
  1405                        	.member	ObsoleteWords51,816,112,8,0,2
  1406                        	.member	TranslationFieldsValid,848,16,17,3
  1407                        	.member	Reserved3,851,16,17,5
  1408                        	.member	FreeFallControlSensitivity,856,16,17,8
  1409                        	.member	NumberOfCurrentCylinders,864,16,8,16
  1410                        	.member	NumberOfCurrentHeads,880,16,8,16
  1411                        	.member	CurrentSectorsPerTrack,896,16,8,16
  1412                        	.member	CurrentSectorCapacity,912,18,8,32
  1413                        	.member	CurrentMultiSectorSetting,944,14,8,8
  1414                        	.member	MultiSectorSettingValid,952,14,17,1
  1415                        	.member	ReservedByte59,953,14,17,3
  1416                        	.member	SanitizeFeatureSupported,956,14,17,1
  1417                        	.member	CryptoScrambleExtCommandSupported,957,14
                    ,17,1
  1418                        	.member	OverwriteExtCommandSupported,958,14,17,1
  1419                        	.member	BlockEraseExtCommandSupported,959,14,17,
                    1
  1420                        	.member	UserAddressableSectors,960,18,8,32
  1421                        	.member	ObsoleteWord62,992,16,8,16
  1422                        	.member	MultiWordDMASupport,1008,16,17,8
  1423                        	.member	MultiWordDMAActive,1016,16,17,8
  1424                        	.member	AdvancedPIOModes,1024,16,17,8
  1425                        	.member	ReservedByte64,1032,16,17,8
  1426                        	.member	MinimumMWXferCycleTime,1040,16,8,16
  1427                        	.member	RecommendedMWXferCycleTime,1056,16,8,16
  1428                        	.member	MinimumPIOCycleTime,1072,16,8,16
  1429                        	.member	MinimumPIOCycleTimeIORDY,1088,16,8,16
  1430                        	.member	AdditionalSupported,1104,10,8,16,102
  1431                        	.member	ReservedWords70,1120,112,8,0,5
  1432                        	.member	QueueDepth,1200,16,17,5
  1433                        	.member	ReservedWord75,1205,16,17,11
  1434                        	.member	SerialAtaCapabilities,1216,10,8,32,103
  1435                        	.member	SerialAtaFeaturesSupported,1248,10,8,16,
                    104
  1436                        	.member	SerialAtaFeaturesEnabled,1264,10,8,16,10
                    5
  1437                        	.member	MajorRevision,1280,16,8,16
  1438                        	.member	MinorRevision,1296,16,8,16
  1439                        	.member	CommandSetSupport,1312,10,8,48,106
  1440                        	.member	CommandSetActive,1360,10,8,48,107
  1441                        	.member	UltraDMASupport,1408,16,17,8
  1442                        	.member	UltraDMAActive,1416,16,17,8
  1443                        	.member	NormalSecurityEraseUnit,1424,10,8,16,108
  1444                        	.member	EnhancedSecurityEraseUnit,1440,10,8,16,1
  Sat Jul 10 2021  1:15                                                Page 28


                    09
  1445                        	.member	CurrentAPMLevel,1456,16,17,8
  1446                        	.member	ReservedWord91,1464,16,17,8
  1447                        	.member	MasterPasswordID,1472,16,8,16
  1448                        	.member	HardwareResetResult,1488,16,8,16
  1449                        	.member	CurrentAcousticValue,1504,16,17,8
  1450                        	.member	RecommendedAcousticValue,1512,16,17,8
  1451                        	.member	StreamMinRequestSize,1520,16,8,16
  1452                        	.member	StreamingTransferTimeDMA,1536,16,8,16
  1453                        	.member	StreamingAccessLatencyDMAPIO,1552,16,8,1
                    6
  1454                        	.member	StreamingPerfGranularity,1568,18,8,32
  1455                        	.member	Max48BitLBA,1600,114,8,0,2
  1456                        	.member	StreamingTransferTime,1664,16,8,16
  1457                        	.member	DsmCap,1680,16,8,16
  1458                        	.member	PhysicalLogicalSectorSize,1696,10,8,16,1
                    10
  1459                        	.member	InterSeekDelay,1712,16,8,16
  1460                        	.member	WorldWideName,1728,112,8,0,4
  1461                        	.member	ReservedForWorldWideName128,1792,112,8,0
                    ,4
  1462                        	.member	ReservedForTlcTechnicalReport,1856,16,8,
                    16
  1463                        	.member	WordsPerLogicalSector,1872,112,8,0,2
  1464                        	.member	CommandSetSupportExt,1904,10,8,16,111
  1465                        	.member	CommandSetActiveExt,1920,10,8,16,112
  1466                        	.member	ReservedForExpandedSupportandActive,1936
                    ,112,8,0,6
  1467                        	.member	MsnSupport,2032,16,17,2
  1468                        	.member	ReservedWord127,2034,16,17,14
  1469                        	.member	SecurityStatus,2048,10,8,16,113
  1470                        	.member	ReservedWord129,2064,112,8,0,31
  1471                        	.member	CfaPowerMode1,2560,10,8,16,114
  1472                        	.member	ReservedForCfaWord161,2576,112,8,0,7
  1473                        	.member	NominalFormFactor,2688,16,17,4
  1474                        	.member	ReservedWord168,2692,16,17,12
  1475                        	.member	DataSetManagementFeature,2704,10,8,16,11
                    5
  1476                        	.member	AdditionalProductID,2720,112,8,0,4
  1477                        	.member	ReservedForCfaWord174,2784,112,8,0,2
  1478                        	.member	CurrentMediaSerialNumber,2816,112,8,0,30
  1479                        	.member	SCTCommandTransport,3296,10,8,16,116
  1480                        	.member	ReservedWord207,3312,112,8,0,2
  1481                        	.member	BlockAlignment,3344,10,8,16,117
  1482                        	.member	WriteReadVerifySectorCountMode3Only,3360
                    ,112,8,0,2
  1483                        	.member	WriteReadVerifySectorCountMode2Only,3392
                    ,112,8,0,2
  1484                        	.member	NVCacheCapabilities,3424,10,8,16,118
  1485                        	.member	NVCacheSizeLSW,3440,16,8,16
  1486                        	.member	NVCacheSizeMSW,3456,16,8,16
  1487                        	.member	NominalMediaRotationRate,3472,16,8,16
  1488                        	.member	ReservedWord218,3488,16,8,16
  1489                        	.member	NVCacheOptions,3504,10,8,16,119
  1490                        	.member	WriteReadVerifySectorCountMode,3520,16,1
                    7,8
  1491                        	.member	ReservedWord220,3528,16,17,8
  1492                        	.member	ReservedWord221,3536,16,8,16
  Sat Jul 10 2021  1:15                                                Page 29


  1493                        	.member	TransportMajorVersion,3552,10,8,16,120
  1494                        	.member	TransportMinorVersion,3568,16,8,16
  1495                        	.member	ReservedWord224,3584,112,8,0,6
  1496                        	.member	ExtendedNumberOfUserAddressableSectors,3
                    680,114,8,0,2
  1497                        	.member	MinBlocksPerDownloadMicrocodeMode03,3744
                    ,16,8,16
  1498                        	.member	MaxBlocksPerDownloadMicrocodeMode03,3760
                    ,16,8,16
  1499                        	.member	ReservedWord236,3776,112,8,0,19
  1500                        	.member	Signature,4080,16,17,8
  1501                        	.member	CheckSum,4088,16,17,8
  1502                        	.eos
  1503                        	.stag	_FXDosDevice,5744,122
  1504                        	.member	type,0,14,8,8
  1505                        	.member	initialized,8,14,8,8
  1506                        	.member	devdata,16,129,8,32
  1507                        	.member	devstatus,48,14,8,8
  1508                        	.member	bootSector,56,10,8,928,92
  1509                        	.member	partitionTable,984,10,8,128,93
  1510                        	.member	fileAllocationTable,1112,110,8,0,512
  1511                        	.member	bsOffset,5208,18,8,32
  1512                        	.member	rootDirSectors,5240,18,8,32
  1513                        	.member	root_entry_count,5272,5,8,16
  1514                        	.member	rootEntriesPerPage,5288,5,8,16
  1515                        	.member	sectors_per_cluster,5304,5,8,16
  1516                        	.member	firstDataSector,5320,18,8,32
  1517                        	.member	fatTableOffset,5352,18,8,32
  1518                        	.member	volume_name,5384,110,8,0,12
  1519                        	.member	root_volume_name,5480,110,8,0,12
  1520                        	.member	errorCode,5576,14,8,8
  1521                        	.member	pfInit,5584,641,8,32
  1522                        	.member	pfReset,5616,641,8,32
  1523                        	.member	pfUninit,5648,641,8,32
  1524                        	.member	pfReader,5680,654,8,32
  1525                        	.member	pfWriter,5712,654,8,32
  1526                        	.eos
  1527                        	.utag	item,32,123
  1528                        	.member	dir,0,138,11,32,82
  1529                        	.member	file,0,138,11,32,81
  1530                        	.member	fileInfo,0,138,11,32,83
  1531                        	.eos
  1532                        	.stag	_dos_handle,80,124
  1533                        	.member	fs,0,138,8,32,79
  1534                        	.member	fr,32,5,8,16
  1535                        	.member	path,48,142,8,32
  1536                        	.eos
  1537                        	.line	800
  1538                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxmain.c",4
  1539                        ;
  1540                        ;//#include "DllMainBin.h"
  1541                        ;
  1542                        ;#pragma section CODE=entry,offset $0:7FFF //$4:00
                    00
  1543                        entry	section	offset $0:7FFF //$4:0000
  1544 00:7FFF:              	ends
  1545                        ;
  Sat Jul 10 2021  1:15                                                Page 30


  1546                        ;int line = 2;
  1547                        	data
  1548                        	xdef	~~line
  1549                        ~~line:
  1550 00:0000: 02 00        	dw	$2
  1551 00:0002:              	ends
  1552                        ;
  1553                        ;void k_init_splash(BOOL wait);
  1554                        ;
  1555                        ;static int  msp = 0;
  1556                        	data
  1557                        ~~msp:
  1558 00:0002: 00 00        	dw	$0
  1559 00:0004:              	ends
  1560                        ;static char mainspinner[] = {'|','/','-','\\'};
  1561                        	data
  1562                        ~~mainspinner:
  1563 00:0004: 7C 2F 2D 5C  	db	$7C,$2F,$2D,$5C
  1564 00:0008:              	ends
  1565                        ;static ULONG THIS_MODULE = 0x00000000;
  1566                        	data
  1567                        ~~THIS_MODULE:
  1568 00:0008: 00 00 00 00  	dl	$0
  1569 00:000C:              	ends
  1570                        ;
  1571                        ;LPVOID	pAPGMPTR = NULL;
  1572                        	data
  1573                        	xdef	~~pAPGMPTR
  1574                        ~~pAPGMPTR:
  1575 00:000C: 00 00 00 00  	dl	$0
  1576 00:0010:              	ends
  1577                        ;typedef void (*DLLMAIN)(VOID);
  1578                        ;
  1579                        ;VOID DebugOut(LPCSTR message);
  1580                        ;VOID DebugInteger(LPCSTR message, INT value);
  1581                        ;INT  GetDateYear(VOID);
  1582                        ;
  1583                        ;LPVOID HeapAlloc(UINT size);
  1584                        ;VOID HeapDealloc(LPVOID pMemory);
  1585                        ;
  1586                        ;void k_level_test(VOID);
  1587                        ;void DeallocateNodeListString(LPCSTR name,LPVOID 
                    data);
  1588                        ;
  1589                        ;
  1590                        ;
  1591                        ;void ReportMemory(UCHAR segment,ULONG block,ULONG
                     size)
  1592                        ;{
  1593                        	.line	33
  1594                        	.line	34
  1595                        	entry
  1596                        	xdef	~~ReportMemory
  1597                        	func
  1598                        	.function	34
  1599                        ~~ReportMemory:
  1600                        	longa	on
  1601                        	longi	on
  Sat Jul 10 2021  1:15                                                Page 31


  1602 00:7FFF: 3B           	tsc
  1603 00:8000: 38           	sec
  1604 00:8001: E9 1A 00     	sbc	#L2
  1605 00:8004: 1B           	tcs
  1606 00:8005: 0B           	phd
  1607 00:8006: 5B           	tcd
  1608             00000004   segment_0	set	4
  1609             00000006   block_0	set	6
  1610             0000000A   size_0	set	10
  1611                        	.block	34
  1612                        ;	char rmbuffer[16];
  1613                        ;	int pos  = 3;
  1614                        ;
  1615                        ;	pos = k_put_string(pos,line,"Memory Test Bank:",
                    15,0);
  1616             00000000   rmbuffer_1	set	0
  1617             00000010   pos_1	set	16
  1618                        	.sym	rmbuffer,0,110,1,0,16
  1619                        	.sym	pos,16,5,1,16
  1620                        	.sym	segment,4,14,6,8
  1621                        	.sym	block,6,18,6,32
  1622                        	.sym	size,10,18,6,32
  1623 00:8007: A9 03 00     	lda	#$3
  1624 00:800A: 85 19        	sta	<L3+pos_1
  1625                        	.line	38
  1626 00:800C: F4 00 00     	pea	#<$0
  1627 00:800F: F4 0F 00     	pea	#<$f
  1628 00:8012: F4 xx xx     	pea	#^L1
  1629 00:8015: F4 xx xx     	pea	#<L1
  1630 00:8018: AD xx xx     	lda	|~~line
  1631 00:801B: 48           	pha
  1632 00:801C: D4 19        	pei	<L3+pos_1
  1633 00:801E: 22 xx xx xx  	jsl	~~k_put_string
  1634 00:8022: 85 19        	sta	<L3+pos_1
  1635                        ;	pos = k_put_string(pos,line,k_bytetohex(segment,
                    rmbuffer),15,0);
  1636                        	.line	39
  1637 00:8024: F4 00 00     	pea	#<$0
  1638 00:8027: F4 0F 00     	pea	#<$f
  1639 00:802A: F4 00 00     	pea	#0
  1640 00:802D: 18           	clc
  1641 00:802E: 7B           	tdc
  1642 00:802F: 69 09 00     	adc	#<L3+rmbuffer_1
  1643 00:8032: 48           	pha
  1644 00:8033: D4 1E        	pei	<L2+segment_0
  1645 00:8035: 22 xx xx xx  	jsl	~~k_bytetohex
  1646 00:8039: 85 01        	sta	<R0
  1647 00:803B: 86 03        	stx	<R0+2
  1648 00:803D: DA           	phx
  1649 00:803E: 48           	pha
  1650 00:803F: AD xx xx     	lda	|~~line
  1651 00:8042: 48           	pha
  1652 00:8043: D4 19        	pei	<L3+pos_1
  1653 00:8045: 22 xx xx xx  	jsl	~~k_put_string
  1654 00:8049: 85 19        	sta	<L3+pos_1
  1655                        ;	pos = k_put_string(pos,line," Found ",15,0);
  1656                        	.line	40
  1657 00:804B: F4 00 00     	pea	#<$0
  Sat Jul 10 2021  1:15                                                Page 32


  1658 00:804E: F4 0F 00     	pea	#<$f
  1659 00:8051: F4 xx xx     	pea	#^L1+18
  1660 00:8054: F4 xx xx     	pea	#<L1+18
  1661 00:8057: AD xx xx     	lda	|~~line
  1662 00:805A: 48           	pha
  1663 00:805B: D4 19        	pei	<L3+pos_1
  1664 00:805D: 22 xx xx xx  	jsl	~~k_put_string
  1665 00:8061: 85 19        	sta	<L3+pos_1
  1666                        ;	pos = k_put_string(pos,line,k_strip_padding(k_lo
                    ngtodec(size,rmbuffer)),15,0);
  1667                        	.line	41
  1668 00:8063: F4 00 00     	pea	#<$0
  1669 00:8066: F4 0F 00     	pea	#<$f
  1670 00:8069: F4 00 00     	pea	#0
  1671 00:806C: 18           	clc
  1672 00:806D: 7B           	tdc
  1673 00:806E: 69 09 00     	adc	#<L3+rmbuffer_1
  1674 00:8071: 48           	pha
  1675 00:8072: D4 26        	pei	<L2+size_0+2
  1676 00:8074: D4 24        	pei	<L2+size_0
  1677 00:8076: 22 xx xx xx  	jsl	~~k_longtodec
  1678 00:807A: 85 01        	sta	<R0
  1679 00:807C: 86 03        	stx	<R0+2
  1680 00:807E: DA           	phx
  1681 00:807F: 48           	pha
  1682 00:8080: 22 xx xx xx  	jsl	~~k_strip_padding
  1683 00:8084: 85 05        	sta	<R1
  1684 00:8086: 86 07        	stx	<R1+2
  1685 00:8088: DA           	phx
  1686 00:8089: 48           	pha
  1687 00:808A: AD xx xx     	lda	|~~line
  1688 00:808D: 48           	pha
  1689 00:808E: D4 19        	pei	<L3+pos_1
  1690 00:8090: 22 xx xx xx  	jsl	~~k_put_string
  1691 00:8094: 85 19        	sta	<L3+pos_1
  1692                        ;	pos = k_put_string(pos,line," Bytes    ",15,0);
  1693                        	.line	42
  1694 00:8096: F4 00 00     	pea	#<$0
  1695 00:8099: F4 0F 00     	pea	#<$f
  1696 00:809C: F4 xx xx     	pea	#^L1+26
  1697 00:809F: F4 xx xx     	pea	#<L1+26
  1698 00:80A2: AD xx xx     	lda	|~~line
  1699 00:80A5: 48           	pha
  1700 00:80A6: D4 19        	pei	<L3+pos_1
  1701 00:80A8: 22 xx xx xx  	jsl	~~k_put_string
  1702 00:80AC: 85 19        	sta	<L3+pos_1
  1703                        ;}
  1704                        	.line	43
  1705                        L5:
  1706 00:80AE: A5 1C        	lda	<L2+2
  1707 00:80B0: 85 26        	sta	<L2+2+10
  1708 00:80B2: A5 1B        	lda	<L2+1
  1709 00:80B4: 85 25        	sta	<L2+1+10
  1710 00:80B6: 2B           	pld
  1711 00:80B7: 3B           	tsc
  1712 00:80B8: 18           	clc
  1713 00:80B9: 69 24 00     	adc	#L2+10
  1714 00:80BC: 1B           	tcs
  Sat Jul 10 2021  1:15                                                Page 33


  1715 00:80BD: 6B           	rtl
  1716                        	.endblock	43
  1717             0000001A   L2	equ	26
  1718             00000009   L3	equ	9
  1719 00:80BE:              	ends
  1720                        	efunc
  1721                        	.endfunc	43,9,26
  1722                        	.line	43
  1723                        	data
  1724                        L1:
  1725 00:0010: 4D 65 6D 6F  	db	$4D,$65,$6D,$6F,$72,$79,$20,$54,$65,$73,
                    $74,$20,$42,$61,$6E
       00:0014: 72 79 20 54 
       00:0018: 65 73 74 20 
       00:001C: 42 61 6E 
  1726 00:001F: 6B 3A 00 20  	db	$6B,$3A,$00,$20,$46,$6F,$75,$6E,$64,$20,
                    $00,$20,$42,$79,$74
       00:0023: 46 6F 75 6E 
       00:0027: 64 20 00 20 
       00:002B: 42 79 74 
  1727 00:002E: 65 73 20 20  	db	$65,$73,$20,$20,$20,$20,$00
       00:0032: 20 20 00 
  1728 00:0035:              	ends
  1729                        ;
  1730                        ;void SpinMemory(UCHAR segment,ULONG block,ULONG s
                    ize)
  1731                        ;{
  1732                        	.line	45
  1733                        	.line	46
  1734                        	entry
  1735                        	xdef	~~SpinMemory
  1736                        	func
  1737                        	.function	46
  1738                        ~~SpinMemory:
  1739                        	longa	on
  1740                        	longi	on
  1741 00:80BE: 3B           	tsc
  1742 00:80BF: 38           	sec
  1743 00:80C0: E9 06 00     	sbc	#L7
  1744 00:80C3: 1B           	tcs
  1745 00:80C4: 0B           	phd
  1746 00:80C5: 5B           	tcd
  1747             00000004   segment_0	set	4
  1748             00000006   block_0	set	6
  1749             0000000A   size_0	set	10
  1750                        	.block	46
  1751                        ;	int pos = 0;
  1752                        ;	pos = k_put_string(pos,line,"System Memory Check
                    :",15,0);
  1753             00000000   pos_1	set	0
  1754                        	.sym	pos,0,5,1,16
  1755                        	.sym	segment,4,14,6,8
  1756                        	.sym	block,6,18,6,32
  1757                        	.sym	size,10,18,6,32
  1758 00:80C6: 64 05        	stz	<L8+pos_1
  1759                        	.line	48
  1760 00:80C8: F4 00 00     	pea	#<$0
  1761 00:80CB: F4 0F 00     	pea	#<$f
  Sat Jul 10 2021  1:15                                                Page 34


  1762 00:80CE: F4 xx xx     	pea	#^L6
  1763 00:80D1: F4 xx xx     	pea	#<L6
  1764 00:80D4: AD xx xx     	lda	|~~line
  1765 00:80D7: 48           	pha
  1766 00:80D8: D4 05        	pei	<L8+pos_1
  1767 00:80DA: 22 xx xx xx  	jsl	~~k_put_string
  1768 00:80DE: 85 05        	sta	<L8+pos_1
  1769                        ;	k_put_char(pos,line,mainspinner[msp++],15,0);
  1770                        	.line	49
  1771 00:80E0: F4 00 00     	pea	#<$0
  1772 00:80E3: F4 0F 00     	pea	#<$f
  1773 00:80E6: AD xx xx     	lda	|~~msp
  1774 00:80E9: 85 01        	sta	<R0
  1775 00:80EB: EE xx xx     	inc	|~~msp
  1776 00:80EE: A6 01        	ldx	<R0
  1777 00:80F0: BD xx xx     	lda	|~~mainspinner,X
  1778 00:80F3: 48           	pha
  1779 00:80F4: AD xx xx     	lda	|~~line
  1780 00:80F7: 48           	pha
  1781 00:80F8: D4 05        	pei	<L8+pos_1
  1782 00:80FA: 22 xx xx xx  	jsl	~~k_put_char
  1783                        ;	if(msp>3) msp = 0;
  1784                        	.line	50
  1785 00:80FE: 38           	sec
  1786 00:80FF: A9 03 00     	lda	#$3
  1787 00:8102: ED xx xx     	sbc	|~~msp
  1788 00:8105: 70 03        	bvs	L10
  1789 00:8107: 49 00 80     	eor	#$8000
  1790                        L10:
  1791 00:810A: 10 03        	bpl	L11
  1792 00:810C: 82 03 00     	brl	L10001
  1793                        L11:
  1794                        	.line	50
  1795 00:810F: 9C xx xx     	stz	|~~msp
  1796                        ;}
  1797                        L10001:
  1798                        	.line	51
  1799                        L12:
  1800 00:8112: A5 08        	lda	<L7+2
  1801 00:8114: 85 12        	sta	<L7+2+10
  1802 00:8116: A5 07        	lda	<L7+1
  1803 00:8118: 85 11        	sta	<L7+1+10
  1804 00:811A: 2B           	pld
  1805 00:811B: 3B           	tsc
  1806 00:811C: 18           	clc
  1807 00:811D: 69 10 00     	adc	#L7+10
  1808 00:8120: 1B           	tcs
  1809 00:8121: 6B           	rtl
  1810                        	.endblock	51
  1811             00000006   L7	equ	6
  1812             00000005   L8	equ	5
  1813 00:8122:              	ends
  1814                        	efunc
  1815                        	.endfunc	51,5,6
  1816                        	.line	51
  1817                        	data
  1818                        L6:
  1819 00:0035: 53 79 73 74  	db	$53,$79,$73,$74,$65,$6D,$20,$4D,$65,$6D,
  Sat Jul 10 2021  1:15                                                Page 35


                    $6F,$72,$79,$20,$43
       00:0039: 65 6D 20 4D 
       00:003D: 65 6D 6F 72 
       00:0041: 79 20 43 
  1820 00:0044: 68 65 63 6B  	db	$68,$65,$63,$6B,$3A,$00
       00:0048: 3A 00 
  1821 00:004A:              	ends
  1822                        ;
  1823                        ;void DeallocateNodeListString(LPCSTR name,LPVOID 
                    data)
  1824                        ;{
  1825                        	.line	53
  1826                        	.line	54
  1827                        	entry
  1828                        	xdef	~~DeallocateNodeListString
  1829                        	func
  1830                        	.function	54
  1831                        ~~DeallocateNodeListString:
  1832                        	longa	on
  1833                        	longi	on
  1834 00:8122: 3B           	tsc
  1835 00:8123: 38           	sec
  1836 00:8124: E9 00 00     	sbc	#L14
  1837 00:8127: 1B           	tcs
  1838 00:8128: 0B           	phd
  1839 00:8129: 5B           	tcd
  1840             00000004   name_0	set	4
  1841             00000008   data_0	set	8
  1842                        	.block	54
  1843                        ;	if(name)
  1844                        	.sym	name,4,142,6,32
  1845                        	.sym	data,8,129,6,32
  1846                        	.line	55
  1847                        ;		k_debug_strings("DeallocateNodeListStrin
                    g:name:",(LPCHAR)name);
  1848 00:812A: A5 04        	lda	<L14+name_0
  1849 00:812C: 05 06        	ora	<L14+name_0+2
  1850 00:812E: D0 03        	bne	L17
  1851 00:8130: 82 0E 00     	brl	L10002
  1852                        L17:
  1853                        	.line	56
  1854 00:8133: D4 06        	pei	<L14+name_0+2
  1855 00:8135: D4 04        	pei	<L14+name_0
  1856 00:8137: F4 xx xx     	pea	#^L13
  1857 00:813A: F4 xx xx     	pea	#<L13
  1858 00:813D: 22 xx xx xx  	jsl	~~k_debug_strings
  1859                        ;
  1860                        ;	k_debug_pointer("DeallocateNodeListString:",data
                    );
  1861                        L10002:
  1862                        	.line	58
  1863 00:8141: D4 0A        	pei	<L14+data_0+2
  1864 00:8143: D4 08        	pei	<L14+data_0
  1865 00:8145: F4 xx xx     	pea	#^L13+31
  1866 00:8148: F4 xx xx     	pea	#<L13+31
  1867 00:814B: 22 xx xx xx  	jsl	~~k_debug_pointer
  1868                        ;	if(data)
  1869                        	.line	59
  Sat Jul 10 2021  1:15                                                Page 36


  1870                        ;	{
  1871 00:814F: A5 08        	lda	<L14+data_0
  1872 00:8151: 05 0A        	ora	<L14+data_0+2
  1873 00:8153: D0 03        	bne	L18
  1874 00:8155: 82 08 00     	brl	L10003
  1875                        L18:
  1876                        	.line	60
  1877                        ;		k_mem_deallocate_heap(data);
  1878                        	.line	61
  1879 00:8158: D4 0A        	pei	<L14+data_0+2
  1880 00:815A: D4 08        	pei	<L14+data_0
  1881 00:815C: 22 xx xx xx  	jsl	~~k_mem_deallocate_heap
  1882                        ;	}
  1883                        	.line	62
  1884                        ;}
  1885                        L10003:
  1886                        	.line	63
  1887                        L19:
  1888 00:8160: A5 02        	lda	<L14+2
  1889 00:8162: 85 0A        	sta	<L14+2+8
  1890 00:8164: A5 01        	lda	<L14+1
  1891 00:8166: 85 09        	sta	<L14+1+8
  1892 00:8168: 2B           	pld
  1893 00:8169: 3B           	tsc
  1894 00:816A: 18           	clc
  1895 00:816B: 69 08 00     	adc	#L14+8
  1896 00:816E: 1B           	tcs
  1897 00:816F: 6B           	rtl
  1898                        	.endblock	63
  1899             00000000   L14	equ	0
  1900             00000001   L15	equ	1
  1901 00:8170:              	ends
  1902                        	efunc
  1903                        	.endfunc	63,1,0
  1904                        	.line	63
  1905                        	data
  1906                        L13:
  1907 00:004A: 44 65 61 6C  	db	$44,$65,$61,$6C,$6C,$6F,$63,$61,$74,$65,
                    $4E,$6F,$64,$65,$4C
       00:004E: 6C 6F 63 61 
       00:0052: 74 65 4E 6F 
       00:0056: 64 65 4C 
  1908 00:0059: 69 73 74 53  	db	$69,$73,$74,$53,$74,$72,$69,$6E,$67,$3A,
                    $6E,$61,$6D,$65,$3A
       00:005D: 74 72 69 6E 
       00:0061: 67 3A 6E 61 
       00:0065: 6D 65 3A 
  1909 00:0068: 00 44 65 61  	db	$00,$44,$65,$61,$6C,$6C,$6F,$63,$61,$74,
                    $65,$4E,$6F,$64,$65
       00:006C: 6C 6C 6F 63 
       00:0070: 61 74 65 4E 
       00:0074: 6F 64 65 
  1910 00:0077: 4C 69 73 74  	db	$4C,$69,$73,$74,$53,$74,$72,$69,$6E,$67,
                    $3A,$00
       00:007B: 53 74 72 69 
       00:007F: 6E 67 3A 00 
  1911 00:0083:              	ends
  1912                        ;/*
  Sat Jul 10 2021  1:15                                                Page 37


  1913                        ;void k_delay_nop(void)
  1914                        ;{
  1915                        ;	asm NOP;
  1916                        ;	asm NOP;
  1917                        ;	asm NOP;
  1918                        ;	asm NOP;
  1919                        ;	asm NOP;
  1920                        ;	asm NOP;
  1921                        ;	asm NOP;
  1922                        ;	asm NOP;
  1923                        ;	asm NOP;
  1924                        ;	asm NOP;
  1925                        ;}
  1926                        ;
  1927                        ;void k_delay_1(void)
  1928                        ;{
  1929                        ;	int c = 0;
  1930                        ;
  1931                        ;	for(c=0;c<10;c++)
  1932                        ;	{
  1933                        ;		k_delay_nop();
  1934                        ;	}
  1935                        ;}
  1936                        ;
  1937                        ;void k_delay_1ms(void)
  1938                        ;{
  1939                        ;	k_delay_1();
  1940                        ;}
  1941                        ;
  1942                        ;void sleep(int msec)
  1943                        ;{
  1944                        ;	int c = 0;
  1945                        ;	for(c=0;c<msec;c++)
  1946                        ;	{
  1947                        ;		k_delay_1ms();
  1948                        ;	}
  1949                        ;}
  1950                        ;*/
  1951                        ;
  1952                        ;
  1953                        ;VOID testDrive(LPSTR drive,LPSTR path)
  1954                        ;{
  1955                        	.line	105
  1956                        	.line	106
  1957                        	entry
  1958                        	xdef	~~testDrive
  1959                        	func
  1960                        	.function	106
  1961                        ~~testDrive:
  1962                        	longa	on
  1963                        	longi	on
  1964 00:8170: 3B           	tsc
  1965 00:8171: 38           	sec
  1966 00:8172: E9 1E 00     	sbc	#L21
  1967 00:8175: 1B           	tcs
  1968 00:8176: 0B           	phd
  1969 00:8177: 5B           	tcd
  1970             00000004   drive_0	set	4
  Sat Jul 10 2021  1:15                                                Page 38


  1971             00000008   path_0	set	8
  1972                        	.block	106
  1973                        ;	DIR *dir;
  1974                        ;	FATFS *fs = NULL;
  1975                        ;	FIL *f = NULL;
  1976                        ;	FILINFO *fileInfo;
  1977                        ;	FRESULT fr = 0;
  1978                        ;	DWORD serial;
  1979                        ;	LPSTR name = NULL;
  1980                        ;	//MKFS_PARM opt;
  1981                        ;
  1982                        ;	k_debug_strings("testDrive:DRIVE:",drive);
  1983             00000000   dir_1	set	0
  1984             00000004   fs_1	set	4
  1985             00000008   f_1	set	8
  1986             0000000C   fileInfo_1	set	12
  1987             00000010   fr_1	set	16
  1988             00000012   serial_1	set	18
  1989             00000016   name_1	set	22
  1990                        	.sym	dir,0,138,1,32,82
  1991                        	.sym	fs,4,138,1,32,79
  1992                        	.sym	f,8,138,1,32,81
  1993                        	.sym	fileInfo,12,138,1,32,83
  1994                        	.sym	fr,16,5,1,16
  1995                        	.sym	serial,18,18,1,32
  1996                        	.sym	name,22,142,1,32
  1997                        	.sym	drive,4,142,6,32
  1998                        	.sym	path,8,142,6,32
  1999 00:8178: 64 09        	stz	<L22+fs_1
  2000 00:817A: 64 0B        	stz	<L22+fs_1+2
  2001 00:817C: 64 0D        	stz	<L22+f_1
  2002 00:817E: 64 0F        	stz	<L22+f_1+2
  2003 00:8180: 64 15        	stz	<L22+fr_1
  2004 00:8182: 64 1B        	stz	<L22+name_1
  2005 00:8184: 64 1D        	stz	<L22+name_1+2
  2006                        	.line	116
  2007 00:8186: D4 24        	pei	<L21+drive_0+2
  2008 00:8188: D4 22        	pei	<L21+drive_0
  2009 00:818A: F4 xx xx     	pea	#^L20
  2010 00:818D: F4 xx xx     	pea	#<L20
  2011 00:8190: 22 xx xx xx  	jsl	~~k_debug_strings
  2012                        ;
  2013                        ;	f = k_mem_allocate_heap(sizeof(FIL));
  2014                        	.line	118
  2015 00:8194: F4 26 02     	pea	#<$226
  2016 00:8197: 22 xx xx xx  	jsl	~~k_mem_allocate_heap
  2017 00:819B: 85 0D        	sta	<L22+f_1
  2018 00:819D: 86 0F        	stx	<L22+f_1+2
  2019                        ;	dir = k_mem_allocate_heap(sizeof(DIR));
  2020                        	.line	119
  2021 00:819F: F4 34 00     	pea	#<$34
  2022 00:81A2: 22 xx xx xx  	jsl	~~k_mem_allocate_heap
  2023 00:81A6: 85 05        	sta	<L22+dir_1
  2024 00:81A8: 86 07        	stx	<L22+dir_1+2
  2025                        ;	fs = k_mem_allocate_heap(sizeof(FATFS));
  2026                        	.line	120
  2027 00:81AA: F4 33 02     	pea	#<$233
  2028 00:81AD: 22 xx xx xx  	jsl	~~k_mem_allocate_heap
  Sat Jul 10 2021  1:15                                                Page 39


  2029 00:81B1: 85 09        	sta	<L22+fs_1
  2030 00:81B3: 86 0B        	stx	<L22+fs_1+2
  2031                        ;	fileInfo = k_mem_allocate_heap(sizeof(FILINFO));
  2032                        	.line	121
  2033 00:81B5: F4 16 01     	pea	#<$116
  2034 00:81B8: 22 xx xx xx  	jsl	~~k_mem_allocate_heap
  2035 00:81BC: 85 11        	sta	<L22+fileInfo_1
  2036 00:81BE: 86 13        	stx	<L22+fileInfo_1+2
  2037                        ;
  2038                        ;	f_mount(fs, drive,1);
  2039                        	.line	123
  2040 00:81C0: F4 01 00     	pea	#<$1
  2041 00:81C3: D4 24        	pei	<L21+drive_0+2
  2042 00:81C5: D4 22        	pei	<L21+drive_0
  2043 00:81C7: D4 0B        	pei	<L22+fs_1+2
  2044 00:81C9: D4 09        	pei	<L22+fs_1
  2045 00:81CB: 22 xx xx xx  	jsl	~~f_mount
  2046                        ;	name = k_mem_allocate_heap(255);
  2047                        	.line	124
  2048 00:81CF: F4 FF 00     	pea	#<$ff
  2049 00:81D2: 22 xx xx xx  	jsl	~~k_mem_allocate_heap
  2050 00:81D6: 85 1B        	sta	<L22+name_1
  2051 00:81D8: 86 1D        	stx	<L22+name_1+2
  2052                        ;	fr = f_getlabel(drive,name,&serial);
  2053                        	.line	125
  2054 00:81DA: F4 00 00     	pea	#0
  2055 00:81DD: 18           	clc
  2056 00:81DE: 7B           	tdc
  2057 00:81DF: 69 17 00     	adc	#<L22+serial_1
  2058 00:81E2: 48           	pha
  2059 00:81E3: D4 1D        	pei	<L22+name_1+2
  2060 00:81E5: D4 1B        	pei	<L22+name_1
  2061 00:81E7: D4 24        	pei	<L21+drive_0+2
  2062 00:81E9: D4 22        	pei	<L21+drive_0
  2063 00:81EB: 22 xx xx xx  	jsl	~~f_getlabel
  2064 00:81EF: 85 15        	sta	<L22+fr_1
  2065                        ;
  2066                        ;	k_debug_integer("testDrive:f_getlabel:",fr);
  2067                        	.line	127
  2068 00:81F1: D4 15        	pei	<L22+fr_1
  2069 00:81F3: F4 xx xx     	pea	#^L20+17
  2070 00:81F6: F4 xx xx     	pea	#<L20+17
  2071 00:81F9: 22 xx xx xx  	jsl	~~k_debug_integer
  2072                        ;
  2073                        ;	if(fr == FR_OK)
  2074                        	.line	129
  2075                        ;	{
  2076 00:81FD: A5 15        	lda	<L22+fr_1
  2077 00:81FF: F0 03        	beq	L24
  2078 00:8201: 82 1C 00     	brl	L10004
  2079                        L24:
  2080                        	.line	130
  2081                        ;		k_debug_strings("testDrive::name:",name)
                    ;
  2082                        	.line	131
  2083 00:8204: D4 1D        	pei	<L22+name_1+2
  2084 00:8206: D4 1B        	pei	<L22+name_1
  2085 00:8208: F4 xx xx     	pea	#^L20+39
  Sat Jul 10 2021  1:15                                                Page 40


  2086 00:820B: F4 xx xx     	pea	#<L20+39
  2087 00:820E: 22 xx xx xx  	jsl	~~k_debug_strings
  2088                        ;		k_debug_long("testDrive::serial:",serial
                    );
  2089                        	.line	132
  2090 00:8212: D4 19        	pei	<L22+serial_1+2
  2091 00:8214: D4 17        	pei	<L22+serial_1
  2092 00:8216: F4 xx xx     	pea	#^L20+56
  2093 00:8219: F4 xx xx     	pea	#<L20+56
  2094 00:821C: 22 xx xx xx  	jsl	~~k_debug_long
  2095                        ;	}
  2096                        	.line	133
  2097                        ;
  2098                        ;
  2099                        ;	fr = f_opendir (dir,path);
  2100                        L10004:
  2101                        	.line	136
  2102 00:8220: D4 28        	pei	<L21+path_0+2
  2103 00:8222: D4 26        	pei	<L21+path_0
  2104 00:8224: D4 07        	pei	<L22+dir_1+2
  2105 00:8226: D4 05        	pei	<L22+dir_1
  2106 00:8228: 22 xx xx xx  	jsl	~~f_opendir
  2107 00:822C: 85 15        	sta	<L22+fr_1
  2108                        ;
  2109                        ;	k_debug_integer("testDrive:f_opendir:",fr);
  2110                        	.line	138
  2111 00:822E: D4 15        	pei	<L22+fr_1
  2112 00:8230: F4 xx xx     	pea	#^L20+75
  2113 00:8233: F4 xx xx     	pea	#<L20+75
  2114 00:8236: 22 xx xx xx  	jsl	~~k_debug_integer
  2115                        ;	//k_debug_long("f_opendir::sector:",dir.sect);
  2116                        ;
  2117                        ;	if(fr == FR_OK)
  2118                        	.line	141
  2119                        ;	{
  2120 00:823A: A5 15        	lda	<L22+fr_1
  2121 00:823C: F0 03        	beq	L25
  2122 00:823E: 82 A5 00     	brl	L10005
  2123                        L25:
  2124                        	.line	142
  2125                        ;		fr = f_findfirst(dir,fileInfo,path, "*")
                    ;
  2126                        	.line	143
  2127 00:8241: F4 xx xx     	pea	#^L20+96
  2128 00:8244: F4 xx xx     	pea	#<L20+96
  2129 00:8247: D4 28        	pei	<L21+path_0+2
  2130 00:8249: D4 26        	pei	<L21+path_0
  2131 00:824B: D4 13        	pei	<L22+fileInfo_1+2
  2132 00:824D: D4 11        	pei	<L22+fileInfo_1
  2133 00:824F: D4 07        	pei	<L22+dir_1+2
  2134 00:8251: D4 05        	pei	<L22+dir_1
  2135 00:8253: 22 xx xx xx  	jsl	~~f_findfirst
  2136 00:8257: 85 15        	sta	<L22+fr_1
  2137                        ;		k_debug_integer("testDrive:f_findfirst:"
                    ,fr);
  2138                        	.line	144
  2139 00:8259: D4 15        	pei	<L22+fr_1
  2140 00:825B: F4 xx xx     	pea	#^L20+98
  Sat Jul 10 2021  1:15                                                Page 41


  2141 00:825E: F4 xx xx     	pea	#<L20+98
  2142 00:8261: 22 xx xx xx  	jsl	~~k_debug_integer
  2143                        ;		if(fr == FR_OK)
  2144                        	.line	145
  2145                        ;		{
  2146 00:8265: A5 15        	lda	<L22+fr_1
  2147 00:8267: F0 03        	beq	L26
  2148 00:8269: 82 72 00     	brl	L10006
  2149                        L26:
  2150                        	.line	146
  2151                        ;			k_debug_strings("testDrive:f_fin
                    dfirst:name:",(LPSTR)fileInfo->fname);
  2152                        	.line	147
  2153 00:826C: 18           	clc
  2154 00:826D: A9 16 00     	lda	#$16
  2155 00:8270: 65 11        	adc	<L22+fileInfo_1
  2156 00:8272: 85 01        	sta	<R0
  2157 00:8274: A9 00 00     	lda	#$0
  2158 00:8277: 65 13        	adc	<L22+fileInfo_1+2
  2159 00:8279: 85 03        	sta	<R0+2
  2160 00:827B: D4 03        	pei	<R0+2
  2161 00:827D: D4 01        	pei	<R0
  2162 00:827F: F4 xx xx     	pea	#^L20+121
  2163 00:8282: F4 xx xx     	pea	#<L20+121
  2164 00:8285: 22 xx xx xx  	jsl	~~k_debug_strings
  2165                        ;			//k_debug_long("testHD:f_findfir
                    st:size:",fileInfo->fsize);
  2166                        ;
  2167                        ;			while((fr = f_findnext(dir,fileI
                    nfo)) == FR_OK && fileInfo->fname[0])
  2168                        	.line	150
  2169                        L10007:
  2170 00:8289: D4 13        	pei	<L22+fileInfo_1+2
  2171 00:828B: D4 11        	pei	<L22+fileInfo_1
  2172 00:828D: D4 07        	pei	<L22+dir_1+2
  2173 00:828F: D4 05        	pei	<L22+dir_1
  2174 00:8291: 22 xx xx xx  	jsl	~~f_findnext
  2175 00:8295: 85 15        	sta	<L22+fr_1
  2176 00:8297: A5 15        	lda	<L22+fr_1
  2177 00:8299: F0 03        	beq	L27
  2178 00:829B: 82 40 00     	brl	L10008
  2179                        L27:
  2180 00:829E: A0 16 00     	ldy	#$16
  2181 00:82A1: B7 11        	lda	[<L22+fileInfo_1],Y
  2182 00:82A3: 29 FF 00     	and	#$ff
  2183 00:82A6: D0 03        	bne	L28
  2184 00:82A8: 82 33 00     	brl	L10008
  2185                        L28:
  2186                        ;			{
  2187                        	.line	151
  2188                        ;				//k_debug_integer("testH
                    D:f_findnext:fr:",fr);
  2189                        ;				k_debug_strings("testDri
                    ve:f_findnext:name:",(LPSTR)fileInfo->fname);
  2190                        	.line	153
  2191 00:82AB: 18           	clc
  2192 00:82AC: A9 16 00     	lda	#$16
  2193 00:82AF: 65 11        	adc	<L22+fileInfo_1
  Sat Jul 10 2021  1:15                                                Page 42


  2194 00:82B1: 85 01        	sta	<R0
  2195 00:82B3: A9 00 00     	lda	#$0
  2196 00:82B6: 65 13        	adc	<L22+fileInfo_1+2
  2197 00:82B8: 85 03        	sta	<R0+2
  2198 00:82BA: D4 03        	pei	<R0+2
  2199 00:82BC: D4 01        	pei	<R0
  2200 00:82BE: F4 xx xx     	pea	#^L20+149
  2201 00:82C1: F4 xx xx     	pea	#<L20+149
  2202 00:82C4: 22 xx xx xx  	jsl	~~k_debug_strings
  2203                        ;				k_debug_long("testDrive:
                    f_findnext:size:",fileInfo->fsize);
  2204                        	.line	154
  2205 00:82C8: A0 02 00     	ldy	#$2
  2206 00:82CB: B7 11        	lda	[<L22+fileInfo_1],Y
  2207 00:82CD: 48           	pha
  2208 00:82CE: A7 11        	lda	[<L22+fileInfo_1]
  2209 00:82D0: 48           	pha
  2210 00:82D1: F4 xx xx     	pea	#^L20+176
  2211 00:82D4: F4 xx xx     	pea	#<L20+176
  2212 00:82D7: 22 xx xx xx  	jsl	~~k_debug_long
  2213                        ;			}
  2214                        	.line	155
  2215 00:82DB: 82 AB FF     	brl	L10007
  2216                        L10008:
  2217                        ;		}
  2218                        	.line	156
  2219                        ;
  2220                        ;		f_closedir(dir);
  2221                        L10006:
  2222                        	.line	158
  2223 00:82DE: D4 07        	pei	<L22+dir_1+2
  2224 00:82E0: D4 05        	pei	<L22+dir_1
  2225 00:82E2: 22 xx xx xx  	jsl	~~f_closedir
  2226                        ;	}
  2227                        	.line	159
  2228                        ;
  2229                        ;	//fr = f_mkdir("SD:\\temp");
  2230                        ;	//k_debug_integer("f_mkdir:",fr);
  2231                        ;	/*
  2232                        ;	if(strcmp("SD:",drive) == 0)
  2233                        ;	{
  2234                        ;		opt.fmt = FM_FAT;;
  2235                        ;		opt.align   = 0;
  2236                        ;		opt.n_fat   = 2;
  2237                        ;		opt.n_root  = 0;
  2238                        ;		opt.au_size = 0 ;
  2239                        ;
  2240                        ;		f_mkfs("SD",&opt,NULL,512);
  2241                        ;		k_debug_integer("f_mkfs:",fr);
  2242                        ;
  2243                        ;	}
  2244                        ;	*/
  2245                        ;
  2246                        ;
  2247                        ;	k_mem_deallocate_heap(fileInfo);
  2248                        L10005:
  2249                        	.line	179
  2250 00:82E6: D4 13        	pei	<L22+fileInfo_1+2
  Sat Jul 10 2021  1:15                                                Page 43


  2251 00:82E8: D4 11        	pei	<L22+fileInfo_1
  2252 00:82EA: 22 xx xx xx  	jsl	~~k_mem_deallocate_heap
  2253                        ;	k_mem_deallocate_heap(fs);
  2254                        	.line	180
  2255 00:82EE: D4 0B        	pei	<L22+fs_1+2
  2256 00:82F0: D4 09        	pei	<L22+fs_1
  2257 00:82F2: 22 xx xx xx  	jsl	~~k_mem_deallocate_heap
  2258                        ;	k_mem_deallocate_heap(dir);
  2259                        	.line	181
  2260 00:82F6: D4 07        	pei	<L22+dir_1+2
  2261 00:82F8: D4 05        	pei	<L22+dir_1
  2262 00:82FA: 22 xx xx xx  	jsl	~~k_mem_deallocate_heap
  2263                        ;	k_mem_deallocate_heap(f);
  2264                        	.line	182
  2265 00:82FE: D4 0F        	pei	<L22+f_1+2
  2266 00:8300: D4 0D        	pei	<L22+f_1
  2267 00:8302: 22 xx xx xx  	jsl	~~k_mem_deallocate_heap
  2268                        ;}
  2269                        	.line	183
  2270                        L29:
  2271 00:8306: A5 20        	lda	<L21+2
  2272 00:8308: 85 28        	sta	<L21+2+8
  2273 00:830A: A5 1F        	lda	<L21+1
  2274 00:830C: 85 27        	sta	<L21+1+8
  2275 00:830E: 2B           	pld
  2276 00:830F: 3B           	tsc
  2277 00:8310: 18           	clc
  2278 00:8311: 69 26 00     	adc	#L21+8
  2279 00:8314: 1B           	tcs
  2280 00:8315: 6B           	rtl
  2281                        	.endblock	183
  2282             0000001E   L21	equ	30
  2283             00000005   L22	equ	5
  2284 00:8316:              	ends
  2285                        	efunc
  2286                        	.endfunc	183,5,30
  2287                        	.line	183
  2288                        	data
  2289                        L20:
  2290 00:0083: 74 65 73 74  	db	$74,$65,$73,$74,$44,$72,$69,$76,$65,$3A,
                    $44,$52,$49,$56,$45
       00:0087: 44 72 69 76 
       00:008B: 65 3A 44 52 
       00:008F: 49 56 45 
  2291 00:0092: 3A 00 74 65  	db	$3A,$00,$74,$65,$73,$74,$44,$72,$69,$76,
                    $65,$3A,$66,$5F,$67
       00:0096: 73 74 44 72 
       00:009A: 69 76 65 3A 
       00:009E: 66 5F 67 
  2292 00:00A1: 65 74 6C 61  	db	$65,$74,$6C,$61,$62,$65,$6C,$3A,$00,$74,
                    $65,$73,$74,$44,$72
       00:00A5: 62 65 6C 3A 
       00:00A9: 00 74 65 73 
       00:00AD: 74 44 72 
  2293 00:00B0: 69 76 65 3A  	db	$69,$76,$65,$3A,$3A,$6E,$61,$6D,$65,$3A,
                    $00,$74,$65,$73,$74
       00:00B4: 3A 6E 61 6D 
       00:00B8: 65 3A 00 74 
  Sat Jul 10 2021  1:15                                                Page 44


       00:00BC: 65 73 74 
  2294 00:00BF: 44 72 69 76  	db	$44,$72,$69,$76,$65,$3A,$3A,$73,$65,$72,
                    $69,$61,$6C,$3A,$00
       00:00C3: 65 3A 3A 73 
       00:00C7: 65 72 69 61 
       00:00CB: 6C 3A 00 
  2295 00:00CE: 74 65 73 74  	db	$74,$65,$73,$74,$44,$72,$69,$76,$65,$3A,
                    $66,$5F,$6F,$70,$65
       00:00D2: 44 72 69 76 
       00:00D6: 65 3A 66 5F 
       00:00DA: 6F 70 65 
  2296 00:00DD: 6E 64 69 72  	db	$6E,$64,$69,$72,$3A,$00,$2A,$00,$74,$65,
                    $73,$74,$44,$72,$69
       00:00E1: 3A 00 2A 00 
       00:00E5: 74 65 73 74 
       00:00E9: 44 72 69 
  2297 00:00EC: 76 65 3A 66  	db	$76,$65,$3A,$66,$5F,$66,$69,$6E,$64,$66,
                    $69,$72,$73,$74,$3A
       00:00F0: 5F 66 69 6E 
       00:00F4: 64 66 69 72 
       00:00F8: 73 74 3A 
  2298 00:00FB: 00 74 65 73  	db	$00,$74,$65,$73,$74,$44,$72,$69,$76,$65,
                    $3A,$66,$5F,$66,$69
       00:00FF: 74 44 72 69 
       00:0103: 76 65 3A 66 
       00:0107: 5F 66 69 
  2299 00:010A: 6E 64 66 69  	db	$6E,$64,$66,$69,$72,$73,$74,$3A,$6E,$61,
                    $6D,$65,$3A,$00,$74
       00:010E: 72 73 74 3A 
       00:0112: 6E 61 6D 65 
       00:0116: 3A 00 74 
  2300 00:0119: 65 73 74 44  	db	$65,$73,$74,$44,$72,$69,$76,$65,$3A,$66,
                    $5F,$66,$69,$6E,$64
       00:011D: 72 69 76 65 
       00:0121: 3A 66 5F 66 
       00:0125: 69 6E 64 
  2301 00:0128: 6E 65 78 74  	db	$6E,$65,$78,$74,$3A,$6E,$61,$6D,$65,$3A,
                    $00,$74,$65,$73,$74
       00:012C: 3A 6E 61 6D 
       00:0130: 65 3A 00 74 
       00:0134: 65 73 74 
  2302 00:0137: 44 72 69 76  	db	$44,$72,$69,$76,$65,$3A,$66,$5F,$66,$69,
                    $6E,$64,$6E,$65,$78
       00:013B: 65 3A 66 5F 
       00:013F: 66 69 6E 64 
       00:0143: 6E 65 78 
  2303 00:0146: 74 3A 73 69  	db	$74,$3A,$73,$69,$7A,$65,$3A,$00
       00:014A: 7A 65 3A 00 
  2304 00:014E:              	ends
  2305                        ;
  2306                        ;
  2307                        ;/*
  2308                        ;VOID testHD(VOID)
  2309                        ;{
  2310                        ;	testDrive("HD:","HD:\\");
  2311                        ;}
  2312                        ;
  2313                        ;VOID testSD(VOID)
  Sat Jul 10 2021  1:15                                                Page 45


  2314                        ;{
  2315                        ;	testDrive("SD:","SD:\\");
  2316                        ;}
  2317                        ;*/
  2318                        ;
  2319                        ;/*
  2320                        ;VOID testFonts(VOID)
  2321                        ;{
  2322                        ;	FATFS *fs = NULL;
  2323                        ;	FIL* f = NULL;
  2324                        ;	FRESULT fr = 0;
  2325                        ;	LPSTR path = "HD:\\system\\fonts\\8x8FXOS.FON";
  2326                        ;	LPCSTR drive;
  2327                        ;	PFXRFHEADER resFile = NULL;
  2328                        ;	PFXRFHEADER_FONT fontFile = NULL;
  2329                        ;	UINT read = 0;
  2330                        ;
  2331                        ;	k_debug_string("testFonts\r\n");
  2332                        ;
  2333                        ;	fs = k_mem_allocate_heap(sizeof(FATFS));
  2334                        ;	f = k_mem_allocate_heap(sizeof(FIL));
  2335                        ;	//name = k_mem_allocate_heap(256);
  2336                        ;
  2337                        ;	resFile = k_mem_allocate_heap(16 * 1024);
  2338                        ;
  2339                        ;	drive = k_string_copy_to_delimiter(path,':');
  2340                        ;	fr = f_mount(fs, drive,1);
  2341                        ;    if(fr != FR_OK)
  2342                        ;    {
  2343                        ;        k_debug_string("testFonts::Failed to moun
                    t HD!\r\n");
  2344                        ;        return;
  2345                        ;    }
  2346                        ;
  2347                        ;	fr = f_open(f,path,FA_READ);
  2348                        ;	if(fr == FR_OK)
  2349                        ;	{
  2350                        ;		f_read(f,(LPVOID)resFile,16 * 1024,&read
                    );
  2351                        ;
  2352                        ;
  2353                        ;		k_debug_integer("testFonts:read:",read);
  2354                        ;		k_debug_nstrings("testFonts:res-magic:",
                    resFile->magic,4);
  2355                        ;		k_debug_integer("testFonts:res-major:",r
                    esFile->major);
  2356                        ;		k_debug_integer("testFonts:res-minor:",r
                    esFile->minor);
  2357                        ;		k_debug_integer("testFonts:res-type:",re
                    sFile->type);
  2358                        ;		k_debug_integer("testFonts:res-header:",
                    resFile->resheaderSize);
  2359                        ;
  2360                        ;		fontFile = (PFXRFHEADER_FONT)((ULONG)(&r
                    esFile->resheaderSize) + 1L);
  2361                        ;
  2362                        ;
  2363                        ;		k_debug_nstrings("testFonts:res-magic:",
  Sat Jul 10 2021  1:15                                                Page 46


                    fontFile->title,16);
  2364                        ;		k_debug_integer("testFonts:res-height:",
                    fontFile->height);
  2365                        ;		k_debug_integer("testFonts:res-width:",f
                    ontFile->width);
  2366                        ;
  2367                        ;		k_debug_hex("testFonts:res-data:", *((LP
                    STR)((ULONG)(&fontFile->width) + 1L)) );
  2368                        ;	}
  2369                        ;
  2370                        ;	k_mem_deallocate_heap(resFile);
  2371                        ;
  2372                        ;	//k_mem_deallocate_heap(name);
  2373                        ;	k_mem_deallocate_heap(f);
  2374                        ;	k_mem_deallocate_heap(fs);
  2375                        ;
  2376                        ;}
  2377                        ;
  2378                        ;*/
  2379                        ;/*
  2380                        ;fr = f_open(f,"HD:\\FILE.TMP", FA_CREATE_ALWAYS |
                     FA_OPEN_ALWAYS | FA_CREATE_NEW );
  2381                        ;k_debug_integer("open file:",fr);
  2382                        ;if(fr == FR_OK)
  2383                        ;{
  2384                        ;
  2385                        ;	//fr = f_puts("TEST1=TESTVALUE\n",f);
  2386                        ;	//k_debug_integer("f_write:",fr);
  2387                        ;	//k_debug_integer("f_write:written:",written);
  2388                        ;
  2389                        ;	f_close(f);
  2390                        ;}
  2391                        ;*/
  2392                        ;/*
  2393                        ;#define UART_TRHBu 	  ((LPSTR)(0xAF18F8))
  2394                        ;#define UART_DLLu 	  ((LPSTR)(0xAF18F8))
  2395                        ;#define UART_DLHu 	  ((LPSTR)(0xAF18F9))
  2396                        ;#define UART_IERu 	  ((LPSTR)(0xAF18F9))
  2397                        ;#define UART_FCRu 	  ((LPSTR)(0xAF18FA))
  2398                        ;#define UART_IIRu 	  ((LPSTR)(0xAF18FA))
  2399                        ;#define UART_LCRu 	  ((LPSTR)(0xAF18FB))
  2400                        ;#define UART_MCRu 	  ((LPSTR)(0xAF18FC))
  2401                        ;#define UART_LSRu 	  ((LPSTR)(0xAF18FD))
  2402                        ;#define UART_MSRu 	  ((LPSTR)(0xAF18FE))
  2403                        ;#define UART_SRu 	  ((LPSTR)(0xAF18FF))
  2404                        ;
  2405                        ;//; Interupt Enable Flags
  2406                        ;#define UINT_LOW_POWER   (0x20)
  2407                        ;#define UINT_SLEEP_MODE   (0x10)
  2408                        ;#define UINT_MODEM_STATUS   (0x08)
  2409                        ;#define UINT_LINE_STATUS   (0x04)
  2410                        ;#define UINT_THR_EMPTY   (0x02)
  2411                        ;#define UINT_DATA_AVAIL   (0x01)
  2412                        ;
  2413                        ;//; Interrupt Identification Register Codes
  2414                        ;#define IIR_FIFO_ENABLED   (0x80)
  2415                        ;#define IIR_FIFO_NONFUNC   (0x40)
  2416                        ;#define IIR_FIFO_64BYTE   (0x20)
  Sat Jul 10 2021  1:15                                                Page 47


  2417                        ;#define IIR_MODEM_STATUS   (0x00)
  2418                        ;#define IIR_THR_EMPTY   (0x02)
  2419                        ;#define IIR_DATA_AVAIL   (0x04)
  2420                        ;#define IIR_LINE_STATUS   (0x06)
  2421                        ;#define IIR_TIMEOUT   (0x0C)
  2422                        ;#define IIR_INTERRUPT_PENDING   (0x01)
  2423                        ;
  2424                        ;//; Line Control Register Codes
  2425                        ;#define LCR_DLB   (0x80)
  2426                        ;#define LCR_SBE   (0x60)
  2427                        ;
  2428                        ;#define LCR_PARITY_NONE   (0x00)
  2429                        ;#define LCR_PARITY_ODD   (0x08)
  2430                        ;#define LCR_PARITY_EVEN   (0x18)
  2431                        ;#define LCR_PARITY_MARK   (0x28)
  2432                        ;#define LCR_PARITY_SPACE   (0x38)
  2433                        ;
  2434                        ;#define LCR_STOPBIT_1   (0x00)
  2435                        ;#define LCR_STOPBIT_2   (0x04)
  2436                        ;
  2437                        ;#define LCR_DATABITS_5   (0x00)
  2438                        ;#define LCR_DATABITS_6   (0x01)
  2439                        ;#define LCR_DATABITS_7   (0x02)
  2440                        ;#define LCR_DATABITS_8   (0x03)
  2441                        ;
  2442                        ;#define LSR_ERR_RECIEVE   (0x80)
  2443                        ;#define LSR_XMIT_DONE   (0x40)
  2444                        ;#define LSR_XMIT_EMPTY   (0x20)
  2445                        ;#define LSR_BREAK_INT   (0x10)
  2446                        ;#define LSR_ERR_FRAME   (0x08)
  2447                        ;#define LSR_ERR_PARITY   (0x04)
  2448                        ;#define LSR_ERR_OVERRUN   (0x02)
  2449                        ;#define LSR_DATA_AVAIL   (0x01)
  2450                        ;
  2451                        ;VOID k_init_com_ports(LPCSTR major,LPSTR minor)
  2452                        ;{
  2453                        ;	LPCSTR version = "Using FMXU+ Serial\r\n";
  2454                        ;
  2455                        ;	if(major[0] == 'A')
  2456                        ;	{
  2457                        ;		UART_LCRu[0] = (UART_LCRu[0] | LCR_DLB);
  2458                        ;
  2459                        ;		UART_DLHu[0] = 0x00;
  2460                        ;		UART_DLLu[0] = 0x08;
  2461                        ;		UART_LCRu[0] = (UART_LCRu[0] ^ LCR_DLB);
  2462                        ;
  2463                        ;		UART_LCRu[0] = (LCR_PARITY_NONE | LCR_ST
                    OPBIT_1 | LCR_DATABITS_8) & 0x7F;
  2464                        ;
  2465                        ;		UART_FCRu[0] = 0xC1;
  2466                        ;
  2467                        ;		while(*version)
  2468                        ;		{
  2469                        ;			while((UART_LSRu[0] & LSR_XMIT_E
                    MPTY) != LSR_XMIT_EMPTY);
  2470                        ;			UART_TRHBu[0] = (CHAR)(version[0
                    ]);
  2471                        ;
  Sat Jul 10 2021  1:15                                                Page 48


  2472                        ;			version++;
  2473                        ;		}
  2474                        ;	}
  2475                        ;	else
  2476                        ;	{
  2477                        ;		k_uart_enableirq_ports();
  2478                        ;	}
  2479                        ;}
  2480                        ;*/
  2481                        ;/*
  2482                        ;void main(void)
  2483                        ;{
  2484                        ;	PEXECUTIVE 	  pExecutive 	= NULL;
  2485                        ;	PEVENTMANAGER pEventManager = NULL;
  2486                        ;	PFXSTRING pfxs = NULL;
  2487                        ;
  2488                        ;	LPVOID ptrMemTest = NULL;
  2489                        ;	ULONG heapSize = 0;
  2490                        ;
  2491                        ;	char rmbuffer[16];
  2492                        ;	int pos = 0;
  2493                        ;
  2494                        ;	ULONG availableMem = 0;
  2495                        ;	KRESULT kerr = KERR_SUCCESS;
  2496                        ;	int marker = 10;
  2497                        ;	int i = 0;
  2498                        ;
  2499                        ;	CHAR releaseMajor[2];
  2500                        ;	CHAR releaseMinor[2];
  2501                        ;
  2502                        ;
  2503                        ;	((LPSTR)0xAFA000)[marker++] = 'A';
  2504                        ;
  2505                        ;
  2506                        ;	k_get_c256_major_version(releaseMajor);
  2507                        ;	k_get_c256_minor_version(releaseMinor);
  2508                        ;
  2509                        ;
  2510                        ;
  2511                        ;
  2512                        ;	//
  2513                        ;	//
  2514                        ;	//
  2515                        ;	k_user_EnableOSDebug();
  2516                        ;	//
  2517                        ;	//
  2518                        ;	//
  2519                        ;
  2520                        ;	((LPSTR)0xAFA000)[marker++] = 'B';
  2521                        ;
  2522                        ;	k_initializeZeroPage();
  2523                        ;
  2524                        ;	//k_init_keyboard();
  2525                        ;	//k_uart_enableirq_ports();
  2526                        ;
  2527                        ;	k_init_com_ports(releaseMajor,releaseMinor);
  2528                        ;
  2529                        ;	for(i=0;i<25;i++)
  Sat Jul 10 2021  1:15                                                Page 49


  2530                        ;	{
  2531                        ;		while((UART_LSRu[0] & LSR_XMIT_EMPTY) !=
                     LSR_XMIT_EMPTY);
  2532                        ;
  2533                        ;		((LPSTR)0xAFA000)[marker++] = '2';
  2534                        ;
  2535                        ;		UART_TRHBu[0] = (CHAR)(65 + i);
  2536                        ;	}
  2537                        ;
  2538                        ;
  2539                        ;
  2540                        ;	((LPSTR)0xAFA000)[marker++] = 'C';
  2541                        ;
  2542                        ;	k_debug_crlf();
  2543                        ;	k_debug_string("********************************
                    **\r\n");
  2544                        ;	k_debug_string("******  Welcome to FX/OS   *****
                    **\r\n");
  2545                        ;	k_debug_string("******       Booting       *****
                    **\r\n");
  2546                        ;	k_debug_string("********************************
                    **\r\n");
  2547                        ;
  2548                        ;	//k_gui_init_mousepointer(TRUE);
  2549                        ;
  2550                        ;	((LPSTR)0xAFA000)[marker++] = 'D';
  2551                        ;
  2552                        ;	k_set_text_colors();
  2553                        ;
  2554                        ;	((LPSTR)0xAFA000)[marker++] = 'E';
  2555                        ;
  2556                        ;	k_initialize_text_fonts(0);
  2557                        ;	k_initialize_text();
  2558                        ;	k_enable_text_cursor(0);
  2559                        ;
  2560                        ;	((LPSTR)0xAFA000)[marker++] = 'F';
  2561                        ;
  2562                        ;	k_enable_text_mode();
  2563                        ;	k_set_border_color(0x00,0x00,0x00);
  2564                        ;	k_enable_border();
  2565                        ;
  2566                        ;	k_debug_string("k_clear_screen\r\n");
  2567                        ;
  2568                        ;	k_clear_screen(0);
  2569                        ;
  2570                        ;
  2571                        ;	((LPSTR)0xAFA000)[marker++] = 'G';
  2572                        ;
  2573                        ;
  2574                        ;	//*BORDER_X_SIZE = 5;
  2575                        ;	//*BORDER_Y_SIZE = 5;
  2576                        ;
  2577                        ;	((LPSTR)0xAFA000)[marker++] = 'H';
  2578                        ;
  2579                        ;	k_debug_string("k_text_mode_dialog\r\n");
  2580                        ;	k_text_mode_dialog(1,0,73,15,NULL);
  2581                        ;
  2582                        ;	k_get_c256_major_version(rmbuffer);
  Sat Jul 10 2021  1:15                                                Page 50


  2583                        ;	k_debug_strings("C256 VERSION MAJOR:",rmbuffer);
  2584                        ;	k_get_c256_minor_version(rmbuffer);
  2585                        ;	k_debug_strings("C256 VERSION MINOR:",rmbuffer);
  2586                        ;
  2587                        ;	k_debug_pointer("BUILD SYSTEM HEAP:",(LPVOID)FXO
                    S_BUILD_FAR_HEAP_ADDR);
  2588                        ;	k_debug_pointer("             SIZE:",(LPVOID)FXO
                    S_BUILD_FAR_HEAP_SIZE);
  2589                        ;
  2590                        ;
  2591                        ;	k_debug_string("k_report_configuration\r\n");
  2592                        ;	line = k_report_configuration(3,line);
  2593                        ;	k_pos_console(line,4);
  2594                        ;	//k_run_loop();
  2595                        ;
  2596                        ;
  2597                        ;	k_debug_hex("L24BYTE:",L24BYTE(0x12345678));
  2598                        ;	k_debug_hex("M24BYTE:",M24BYTE(0x12345678));
  2599                        ;	k_debug_hex("H24BYTE:",H24BYTE(0x12345678));
  2600                        ;	k_debug_hex("H32BYTE:",H32BYTE(0x12345678));
  2601                        ;
  2602                        ;
  2603                        ;	k_debug_string("k_fcheck_system_memory\r\n");
  2604                        ;	availableMem = k_fcheck_system_memory(ReportMemo
                    ry);
  2605                        ;
  2606                        ;	k_getZeroPage()->availableMemory 	= availa
                    bleMem;
  2607                        ;	k_getZeroPage()->availableMemoryK	= availa
                    bleMem/1024+1;
  2608                        ;
  2609                        ;	heapSize = k_heap_integrity_check();
  2610                        ;	k_debug_long("k_heap_integrity_check::heapsize:"
                    ,heapSize);
  2611                        ;	//pheapInfo = umm_info(NULL,0);
  2612                        ;
  2613                        ;
  2614                        ;	k_debug_strings("DATE:",(LPSTR)k_get_date_string
                    (rmbuffer));
  2615                        ;	k_debug_strings("TIME:",(LPSTR)k_get_localtime_s
                    tring(rmbuffer));
  2616                        ;
  2617                        ;
  2618                        ;	k_debug_integer("sizeof(short int):",sizeof(shor
                    t int));
  2619                        ;	k_debug_integer("sizeof(unsigned short int):",si
                    zeof(unsigned short int));
  2620                        ;	k_debug_integer("sizeof(int):",sizeof(int));
  2621                        ;	k_debug_integer("sizeof(unsigned int):",sizeof(u
                    nsigned int));
  2622                        ;	k_debug_integer("sizeof(long):",sizeof(long));
  2623                        ;	k_debug_integer("sizeof(LPVOID):",sizeof(LPVOID)
                    );
  2624                        ;	k_debug_integer("sizeof(size_t):",sizeof(size_t)
                    );
  2625                        ;	k_debug_integer("sizeof(FXOSMESSAGE):",sizeof(FX
                    OSMESSAGE));
  2626                        ;	k_debug_integer("sizeof(FXCMDMESSAGE):",sizeof(F
  Sat Jul 10 2021  1:15                                                Page 51


                    XCMDMESSAGE));
  2627                        ;
  2628                        ;
  2629                        ;
  2630                        ;	k_write_console("\n\n");
  2631                        ;	k_pos_console(k_row_console(),3);
  2632                        ;	k_write_console(k_strip_padding(k_longtodec(k_ge
                    tZeroPage()->availableMemoryK,rmbuffer)));
  2633                        ;	k_write_console("K RAM Available");
  2634                        ;
  2635                        ;	k_debug_long("AVAIL MEM:", availableMem);
  2636                        ;
  2637                        ;	k_write_console("\n");
  2638                        ;	k_pos_console(k_row_console(),3);
  2639                        ;	k_write_console(k_strip_padding(k_longtodec(heap
                    Size/1024 ,rmbuffer)));
  2640                        ;	k_write_console("K HEAP RAM Available");
  2641                        ;
  2642                        ;
  2643                        ;	if(sizeof(FXOSMESSAGE)!=sizeof(FXCMDMESSAGE))
  2644                        ;		k_exec_throw_exception(THIS_MODULE,0x100
                    00001,"VERSION ERROR: FXOSMESSAGE size mismatch",-1);
  2645                        ;
  2646                        ;	k_debug_integer("k_get_cols_visible:",k_get_cols
                    _visible());
  2647                        ;	k_debug_integer("k_get_cols_per_line:",k_get_col
                    s_per_line());
  2648                        ;	k_debug_integer("k_get_lines_visible",k_get_line
                    s_visible());
  2649                        ;	k_debug_integer("k_get_lines_max:",k_get_lines_m
                    ax());
  2650                        ;
  2651                        ;
  2652                        ;	k_dos_load_drivers();
  2653                        ;
  2654                        ;	testHD();
  2655                        ;	testSD();
  2656                        ;
  2657                        ;	((LPSTR)0xAFA000)[marker++] = 'Z';
  2658                        ;	while(1);
  2659                        ;
  2660                        ;
  2661                        ;	return;
  2662                        ;}
  2663                        ;*/
  2664                        ;
  2665                        ;void main(void)
  2666                        ;{
  2667                        	.line	544
  2668                        	.line	545
  2669                        	entry
  2670                        	xdef	~~main
  2671                        	func
  2672                        	.function	545
  2673                        ~~main:
  2674                        	longa	on
  2675                        	longi	on
  2676 00:8316: 3B           	tsc
  Sat Jul 10 2021  1:15                                                Page 52


  2677 00:8317: 38           	sec
  2678 00:8318: E9 52 00     	sbc	#L31
  2679 00:831B: 1B           	tcs
  2680 00:831C: 0B           	phd
  2681 00:831D: 5B           	tcd
  2682                        	.block	545
  2683                        ;	PFXZEROPAGE   zp = NULL;
  2684                        ;	PEXECUTIVE 	  pExecutive 	= NULL;
  2685                        ;	PEVENTMANAGER pEventManager = NULL;
  2686                        ;	//typedef void (*DLLMAIN)(VOID);
  2687                        ;	//DLLMAIN DllMain = (DLLMAIN)0x090000;
  2688                        ;	PFXSTRING pfxs = NULL;
  2689                        ;	LPCSTR driverLog = NULL;
  2690                        ;
  2691                        ;	//UMM_HEAP_INFO *pheapInfo = NULL;
  2692                        ;	LPVOID ptrMemTest = NULL;
  2693                        ;	//ULONG byteCount = 0;
  2694                        ;	ULONG heapSize = 0;
  2695                        ;	//PFXNODE tokens = NULL;
  2696                        ;	//PFXNODE t = NULL;
  2697                        ;
  2698                        ;	//PFXNODELIST nodelist = NULL;
  2699                        ;
  2700                        ;	//PFXNODE nodelist = NULL;
  2701                        ;	//PFXNODE newnode  = NULL;
  2702                        ;	//FXQUEUE *q = NULL;
  2703                        ;	char rmbuffer[16];
  2704                        ;	//int i = 0;
  2705                        ;	//int j = 0;
  2706                        ;	int pos = 0;
  2707                        ;	ULONG availableMem = 0;
  2708                        ;	KRESULT kerr = KERR_SUCCESS;
  2709                        ;	PIPCPORT myport = NULL;
  2710                        ;	PIPCPORT debugport = NULL;
  2711                        ;	PFXSTRING ipc_data = NULL;
  2712                        ;
  2713                        ;
  2714                        ;	CHAR releaseMajor[2];
  2715                        ;	CHAR releaseMinor[2];
  2716                        ;
  2717                        ;
  2718                        ;	//
  2719                        ;	// Get board version as LPCSTR
  2720                        ;	//
  2721                        ;	k_get_c256_major_version(releaseMajor);
  2722             00000000   zp_1	set	0
  2723             00000004   pExecutive_1	set	4
  2724             00000008   pEventManager_1	set	8
  2725             0000000C   pfxs_1	set	12
  2726             00000010   driverLog_1	set	16
  2727             00000014   ptrMemTest_1	set	20
  2728             00000018   heapSize_1	set	24
  2729             0000001C   rmbuffer_1	set	28
  2730             0000002C   pos_1	set	44
  2731             0000002E   availableMem_1	set	46
  2732             00000032   kerr_1	set	50
  2733             00000036   myport_1	set	54
  2734             0000003A   debugport_1	set	58
  Sat Jul 10 2021  1:15                                                Page 53


  2735             0000003E   ipc_data_1	set	62
  2736             00000042   releaseMajor_1	set	66
  2737             00000044   releaseMinor_1	set	68
  2738                        	.sym	zp,0,138,1,32,51
  2739                        	.sym	pExecutive,4,138,1,32,58
  2740                        	.sym	pEventManager,8,138,1,32,73
  2741                        	.sym	pfxs,12,138,1,32,57
  2742                        	.sym	driverLog,16,142,1,32
  2743                        	.sym	ptrMemTest,20,129,1,32
  2744                        	.sym	heapSize,24,18,1,32
  2745                        	.sym	rmbuffer,28,110,1,0,16
  2746                        	.sym	pos,44,5,1,16
  2747                        	.sym	availableMem,46,18,1,32
  2748                        	.sym	kerr,50,18,1,32
  2749                        	.sym	myport,54,138,1,32,61
  2750                        	.sym	debugport,58,138,1,32,61
  2751                        	.sym	ipc_data,62,138,1,32,57
  2752                        	.sym	releaseMajor,66,110,1,0,2
  2753                        	.sym	releaseMinor,68,110,1,0,2
  2754 00:831E: 64 0D        	stz	<L32+zp_1
  2755 00:8320: 64 0F        	stz	<L32+zp_1+2
  2756 00:8322: 64 11        	stz	<L32+pExecutive_1
  2757 00:8324: 64 13        	stz	<L32+pExecutive_1+2
  2758 00:8326: 64 15        	stz	<L32+pEventManager_1
  2759 00:8328: 64 17        	stz	<L32+pEventManager_1+2
  2760 00:832A: 64 19        	stz	<L32+pfxs_1
  2761 00:832C: 64 1B        	stz	<L32+pfxs_1+2
  2762 00:832E: 64 1D        	stz	<L32+driverLog_1
  2763 00:8330: 64 1F        	stz	<L32+driverLog_1+2
  2764 00:8332: 64 21        	stz	<L32+ptrMemTest_1
  2765 00:8334: 64 23        	stz	<L32+ptrMemTest_1+2
  2766 00:8336: 64 25        	stz	<L32+heapSize_1
  2767 00:8338: 64 27        	stz	<L32+heapSize_1+2
  2768 00:833A: 64 39        	stz	<L32+pos_1
  2769 00:833C: 64 3B        	stz	<L32+availableMem_1
  2770 00:833E: 64 3D        	stz	<L32+availableMem_1+2
  2771 00:8340: 64 3F        	stz	<L32+kerr_1
  2772 00:8342: 64 41        	stz	<L32+kerr_1+2
  2773 00:8344: 64 43        	stz	<L32+myport_1
  2774 00:8346: 64 45        	stz	<L32+myport_1+2
  2775 00:8348: 64 47        	stz	<L32+debugport_1
  2776 00:834A: 64 49        	stz	<L32+debugport_1+2
  2777 00:834C: 64 4B        	stz	<L32+ipc_data_1
  2778 00:834E: 64 4D        	stz	<L32+ipc_data_1+2
  2779                        	.line	584
  2780 00:8350: F4 00 00     	pea	#0
  2781 00:8353: 18           	clc
  2782 00:8354: 7B           	tdc
  2783 00:8355: 69 4F 00     	adc	#<L32+releaseMajor_1
  2784 00:8358: 48           	pha
  2785 00:8359: 22 xx xx xx  	jsl	~~k_get_c256_major_version
  2786                        ;	k_get_c256_minor_version(releaseMinor);
  2787                        	.line	585
  2788 00:835D: F4 00 00     	pea	#0
  2789 00:8360: 18           	clc
  2790 00:8361: 7B           	tdc
  2791 00:8362: 69 51 00     	adc	#<L32+releaseMinor_1
  2792 00:8365: 48           	pha
  Sat Jul 10 2021  1:15                                                Page 54


  2793 00:8366: 22 xx xx xx  	jsl	~~k_get_c256_minor_version
  2794                        ;	//
  2795                        ;	// Turn off debugging to prevent anything hittin
                    g serial before init
  2796                        ;	//
  2797                        ;	k_user_DisableOSDebug();
  2798                        	.line	589
  2799 00:836A: 22 xx xx xx  	jsl	~~k_user_DisableOSDebug
  2800                        ;	//
  2801                        ;	// Initialize zero page entries
  2802                        ;	//
  2803                        ;	zp = k_initializeZeroPage();
  2804                        	.line	593
  2805 00:836E: 22 xx xx xx  	jsl	~~k_initializeZeroPage
  2806 00:8372: 85 0D        	sta	<L32+zp_1
  2807 00:8374: 86 0F        	stx	<L32+zp_1+2
  2808                        ;	//
  2809                        ;	// clear console for codes
  2810                        ;	//
  2811                        ;	/*
  2812                        ;	k_clear_console();
  2813                        ;	k_clear_screen(0);
  2814                        ;	k_set_text_colors();
  2815                        ;
  2816                        ;	k_initialize_text_fonts(0);
  2817                        ;	k_initialize_text();
  2818                        ;	k_enable_text_cursor(0);
  2819                        ;
  2820                        ;	k_enable_text_mode();
  2821                        ;	k_set_border_color(0x00,0x00,0x00);
  2822                        ;	k_enable_border();
  2823                        ;
  2824                        ;	k_set_text_color((CHAR)15);
  2825                        ;
  2826                        ;	k_clear_screen(0);
  2827                        ;	*/
  2828                        ;	//
  2829                        ;	// Load built-in device drivers
  2830                        ;	//
  2831                        ;	driverLog = k_dos_load_drivers();
  2832                        	.line	617
  2833 00:8376: 22 xx xx xx  	jsl	~~k_dos_load_drivers
  2834 00:837A: 85 1D        	sta	<L32+driverLog_1
  2835 00:837C: 86 1F        	stx	<L32+driverLog_1+2
  2836                        ;	//
  2837                        ;	// Turn on debugging (if needed)
  2838                        ;	//
  2839                        ;	k_user_EnableOSDebug();
  2840                        	.line	621
  2841 00:837E: 22 xx xx xx  	jsl	~~k_user_EnableOSDebug
  2842                        ;	//
  2843                        ;	// Output device load log
  2844                        ;	//
  2845                        ;	if(driverLog)
  2846                        	.line	625
  2847                        ;	{
  2848 00:8382: A5 1D        	lda	<L32+driverLog_1
  2849 00:8384: 05 1F        	ora	<L32+driverLog_1+2
  Sat Jul 10 2021  1:15                                                Page 55


  2850 00:8386: D0 03        	bne	L34
  2851 00:8388: 82 1A 00     	brl	L10009
  2852                        L34:
  2853                        	.line	626
  2854                        ;		k_debug_string("Device Load Log Follows:
                    \r\n");
  2855                        	.line	627
  2856 00:838B: F4 xx xx     	pea	#^L30
  2857 00:838E: F4 xx xx     	pea	#<L30
  2858 00:8391: 22 xx xx xx  	jsl	~~k_debug_string
  2859                        ;		k_debug_string((LPSTR)driverLog);
  2860                        	.line	628
  2861 00:8395: D4 1F        	pei	<L32+driverLog_1+2
  2862 00:8397: D4 1D        	pei	<L32+driverLog_1
  2863 00:8399: 22 xx xx xx  	jsl	~~k_debug_string
  2864                        ;		k_mem_deallocate_heap((LPVOID)driverLog)
                    ;
  2865                        	.line	629
  2866 00:839D: D4 1F        	pei	<L32+driverLog_1+2
  2867 00:839F: D4 1D        	pei	<L32+driverLog_1
  2868 00:83A1: 22 xx xx xx  	jsl	~~k_mem_deallocate_heap
  2869                        ;	}
  2870                        	.line	630
  2871                        ;	// FIX FOR U and FMX
  2872                        ;	//k_init_keyboard();
  2873                        ;
  2874                        ;	//k_uart_enableirq_ports();
  2875                        ;	// REPLACES ORIGINAL ABOVE CALL
  2876                        ;	//k_init_com_ports(releaseMajor,releaseMinor);
  2877                        ;
  2878                        ;	for(availableMem=0;availableMem<0xff;availableMe
                    m++)
  2879                        L10009:
  2880                        	.line	638
  2881 00:83A5: 64 3B        	stz	<L32+availableMem_1
  2882 00:83A7: 64 3D        	stz	<L32+availableMem_1+2
  2883                        L10012:
  2884                        ;	{
  2885                        	.line	639
  2886                        ;		((LPSTR)0xAFA000)[200] = '/';
  2887                        	.line	640
  2888 00:83A9: E2 20        	sep	#$20
  2889                        	longa	off
  2890 00:83AB: A9 2F        	lda	#$2f
  2891 00:83AD: 8F C8 A0 AF  	sta	>11509960
  2892 00:83B1: C2 20        	rep	#$20
  2893                        	longa	on
  2894                        ;		asm nop;
  2895                        	.line	641
  2896                        	asmstart
  2897 00:83B3: EA           	nop
  2898                        	asmend
  2899                        ;		asm nop;
  2900                        	.line	642
  2901                        	asmstart
  2902 00:83B4: EA           	nop
  2903                        	asmend
  2904                        ;		asm nop;
  Sat Jul 10 2021  1:15                                                Page 56


  2905                        	.line	643
  2906                        	asmstart
  2907 00:83B5: EA           	nop
  2908                        	asmend
  2909                        ;
  2910                        ;		((LPSTR)0xAFA000)[200] = '-';
  2911                        	.line	645
  2912 00:83B6: E2 20        	sep	#$20
  2913                        	longa	off
  2914 00:83B8: A9 2D        	lda	#$2d
  2915 00:83BA: 8F C8 A0 AF  	sta	>11509960
  2916 00:83BE: C2 20        	rep	#$20
  2917                        	longa	on
  2918                        ;		asm nop;
  2919                        	.line	646
  2920                        	asmstart
  2921 00:83C0: EA           	nop
  2922                        	asmend
  2923                        ;		asm nop;
  2924                        	.line	647
  2925                        	asmstart
  2926 00:83C1: EA           	nop
  2927                        	asmend
  2928                        ;		asm nop;
  2929                        	.line	648
  2930                        	asmstart
  2931 00:83C2: EA           	nop
  2932                        	asmend
  2933                        ;
  2934                        ;		((LPSTR)0xAFA000)[200] = '\\';
  2935                        	.line	650
  2936 00:83C3: E2 20        	sep	#$20
  2937                        	longa	off
  2938 00:83C5: A9 5C        	lda	#$5c
  2939 00:83C7: 8F C8 A0 AF  	sta	>11509960
  2940 00:83CB: C2 20        	rep	#$20
  2941                        	longa	on
  2942                        ;		asm nop;
  2943                        	.line	651
  2944                        	asmstart
  2945 00:83CD: EA           	nop
  2946                        	asmend
  2947                        ;		asm nop;
  2948                        	.line	652
  2949                        	asmstart
  2950 00:83CE: EA           	nop
  2951                        	asmend
  2952                        ;		asm nop;
  2953                        	.line	653
  2954                        	asmstart
  2955 00:83CF: EA           	nop
  2956                        	asmend
  2957                        ;
  2958                        ;		((LPSTR)0xAFA000)[200] = '-';
  2959                        	.line	655
  2960 00:83D0: E2 20        	sep	#$20
  2961                        	longa	off
  2962 00:83D2: A9 2D        	lda	#$2d
  Sat Jul 10 2021  1:15                                                Page 57


  2963 00:83D4: 8F C8 A0 AF  	sta	>11509960
  2964 00:83D8: C2 20        	rep	#$20
  2965                        	longa	on
  2966                        ;		asm nop;
  2967                        	.line	656
  2968                        	asmstart
  2969 00:83DA: EA           	nop
  2970                        	asmend
  2971                        ;		asm nop;
  2972                        	.line	657
  2973                        	asmstart
  2974 00:83DB: EA           	nop
  2975                        	asmend
  2976                        ;		asm nop;
  2977                        	.line	658
  2978                        	asmstart
  2979 00:83DC: EA           	nop
  2980                        	asmend
  2981                        ;	}
  2982                        	.line	659
  2983                        L10010:
  2984 00:83DD: E6 3B        	inc	<L32+availableMem_1
  2985 00:83DF: D0 02        	bne	L35
  2986 00:83E1: E6 3D        	inc	<L32+availableMem_1+2
  2987                        L35:
  2988 00:83E3: A5 3B        	lda	<L32+availableMem_1
  2989 00:83E5: C9 FF 00     	cmp	#<$ff
  2990 00:83E8: A5 3D        	lda	<L32+availableMem_1+2
  2991 00:83EA: E9 00 00     	sbc	#^$ff
  2992 00:83ED: B0 03        	bcs	L36
  2993 00:83EF: 82 B7 FF     	brl	L10012
  2994                        L36:
  2995                        L10011:
  2996                        ;
  2997                        ;	availableMem=0;
  2998                        	.line	661
  2999 00:83F2: 64 3B        	stz	<L32+availableMem_1
  3000 00:83F4: 64 3D        	stz	<L32+availableMem_1+2
  3001                        ;
  3002                        ;	k_clear_console();
  3003                        	.line	663
  3004 00:83F6: 22 xx xx xx  	jsl	~~k_clear_console
  3005                        ;	k_clear_screen(0);
  3006                        	.line	664
  3007 00:83FA: F4 00 00     	pea	#<$0
  3008 00:83FD: 22 xx xx xx  	jsl	~~k_clear_screen
  3009                        ;
  3010                        ;	k_debug_crlf();
  3011                        	.line	666
  3012 00:8401: 22 xx xx xx  	jsl	~~k_debug_crlf
  3013                        ;	k_debug_string("********************************
                    **\r\n");
  3014                        	.line	667
  3015 00:8405: F4 xx xx     	pea	#^L30+27
  3016 00:8408: F4 xx xx     	pea	#<L30+27
  3017 00:840B: 22 xx xx xx  	jsl	~~k_debug_string
  3018                        ;	k_debug_string("******  Welcome to FX/OS   *****
                    **\r\n");
  Sat Jul 10 2021  1:15                                                Page 58


  3019                        	.line	668
  3020 00:840F: F4 xx xx     	pea	#^L30+64
  3021 00:8412: F4 xx xx     	pea	#<L30+64
  3022 00:8415: 22 xx xx xx  	jsl	~~k_debug_string
  3023                        ;	k_debug_string("******       Booting       *****
                    **\r\n");
  3024                        	.line	669
  3025 00:8419: F4 xx xx     	pea	#^L30+101
  3026 00:841C: F4 xx xx     	pea	#<L30+101
  3027 00:841F: 22 xx xx xx  	jsl	~~k_debug_string
  3028                        ;	k_debug_string("********************************
                    **\r\n");
  3029                        	.line	670
  3030 00:8423: F4 xx xx     	pea	#^L30+138
  3031 00:8426: F4 xx xx     	pea	#<L30+138
  3032 00:8429: 22 xx xx xx  	jsl	~~k_debug_string
  3033                        ;
  3034                        ;	//k_debug_string_com1("%OSBOOTING COM1%\r\n");
  3035                        ;	//k_debug_string_com2("%OSBOOTING COM2%\r\n");
  3036                        ;
  3037                        ;	// FIX FOR U and FMX
  3038                        ;	k_gui_init_mousepointer(TRUE);
  3039                        	.line	676
  3040 00:842D: F4 01 00     	pea	#<$1
  3041 00:8430: 22 xx xx xx  	jsl	~~k_gui_init_mousepointer
  3042                        ;
  3043                        ;	k_set_text_colors();
  3044                        	.line	678
  3045 00:8434: 22 xx xx xx  	jsl	~~k_set_text_colors
  3046                        ;
  3047                        ;	k_initialize_text_fonts(0);
  3048                        	.line	680
  3049 00:8438: F4 00 00     	pea	#<$0
  3050 00:843B: 22 xx xx xx  	jsl	~~k_initialize_text_fonts
  3051                        ;	k_initialize_text();
  3052                        	.line	681
  3053 00:843F: 22 xx xx xx  	jsl	~~k_initialize_text
  3054                        ;	k_enable_text_cursor(0);
  3055                        	.line	682
  3056 00:8443: F4 00 00     	pea	#<$0
  3057 00:8446: 22 xx xx xx  	jsl	~~k_enable_text_cursor
  3058                        ;
  3059                        ;	k_enable_text_mode();
  3060                        	.line	684
  3061 00:844A: 22 xx xx xx  	jsl	~~k_enable_text_mode
  3062                        ;	k_set_border_color(0x00,0x00,0x00);
  3063                        	.line	685
  3064 00:844E: F4 00 00     	pea	#<$0
  3065 00:8451: F4 00 00     	pea	#<$0
  3066 00:8454: F4 00 00     	pea	#<$0
  3067 00:8457: 22 xx xx xx  	jsl	~~k_set_border_color
  3068                        ;	k_enable_border();
  3069                        	.line	686
  3070 00:845B: 22 xx xx xx  	jsl	~~k_enable_border
  3071                        ;
  3072                        ;	k_debug_string("k_clear_screen\r\n");
  3073                        	.line	688
  3074 00:845F: F4 xx xx     	pea	#^L30+175
  Sat Jul 10 2021  1:15                                                Page 59


  3075 00:8462: F4 xx xx     	pea	#<L30+175
  3076 00:8465: 22 xx xx xx  	jsl	~~k_debug_string
  3077                        ;
  3078                        ;	k_clear_screen(0);
  3079                        	.line	690
  3080 00:8469: F4 00 00     	pea	#<$0
  3081 00:846C: 22 xx xx xx  	jsl	~~k_clear_screen
  3082                        ;	k_clear_console();
  3083                        	.line	691
  3084 00:8470: 22 xx xx xx  	jsl	~~k_clear_console
  3085                        ;
  3086                        ;
  3087                        ;	/*
  3088                        ;	for(i=3200;i>0;i--)
  3089                        ;	{
  3090                        ;		for(j=0;j<256;j++)
  3091                        ;		{
  3092                        ;			asm NOP;
  3093                        ;		}
  3094                        ;	}
  3095                        ;	*/
  3096                        ;	/*
  3097                        ;	k_debug_string("waiting...\r\n");
  3098                        ;	for(i=16000;i>0;i--)
  3099                        ;	{
  3100                        ;		for(j=0;j<256;j++)
  3101                        ;		{
  3102                        ;			asm NOP;
  3103                        ;		}
  3104                        ;	}
  3105                        ;	*/
  3106                        ;	//*BORDER_X_SIZE = 5;
  3107                        ;	//*BORDER_Y_SIZE = 5;
  3108                        ;
  3109                        ;	k_debug_string("k_text_mode_dialog\r\n");
  3110                        	.line	716
  3111 00:8474: F4 xx xx     	pea	#^L30+192
  3112 00:8477: F4 xx xx     	pea	#<L30+192
  3113 00:847A: 22 xx xx xx  	jsl	~~k_debug_string
  3114                        ;	k_text_mode_dialog(1,0,73,15,NULL);
  3115                        	.line	717
  3116 00:847E: F4 00 00     	pea	#^$0
  3117 00:8481: F4 00 00     	pea	#<$0
  3118 00:8484: F4 0F 00     	pea	#<$f
  3119 00:8487: F4 49 00     	pea	#<$49
  3120 00:848A: F4 00 00     	pea	#<$0
  3121 00:848D: F4 01 00     	pea	#<$1
  3122 00:8490: 22 xx xx xx  	jsl	~~k_text_mode_dialog
  3123                        ;
  3124                        ;	k_get_c256_major_version(rmbuffer);
  3125                        	.line	719
  3126 00:8494: F4 00 00     	pea	#0
  3127 00:8497: 18           	clc
  3128 00:8498: 7B           	tdc
  3129 00:8499: 69 29 00     	adc	#<L32+rmbuffer_1
  3130 00:849C: 48           	pha
  3131 00:849D: 22 xx xx xx  	jsl	~~k_get_c256_major_version
  3132                        ;	k_debug_strings("C256 VERSION MAJOR:",rmbuffer);
  Sat Jul 10 2021  1:15                                                Page 60


  3133                        	.line	720
  3134 00:84A1: F4 00 00     	pea	#0
  3135 00:84A4: 18           	clc
  3136 00:84A5: 7B           	tdc
  3137 00:84A6: 69 29 00     	adc	#<L32+rmbuffer_1
  3138 00:84A9: 48           	pha
  3139 00:84AA: F4 xx xx     	pea	#^L30+213
  3140 00:84AD: F4 xx xx     	pea	#<L30+213
  3141 00:84B0: 22 xx xx xx  	jsl	~~k_debug_strings
  3142                        ;	k_get_c256_minor_version(rmbuffer);
  3143                        	.line	721
  3144 00:84B4: F4 00 00     	pea	#0
  3145 00:84B7: 18           	clc
  3146 00:84B8: 7B           	tdc
  3147 00:84B9: 69 29 00     	adc	#<L32+rmbuffer_1
  3148 00:84BC: 48           	pha
  3149 00:84BD: 22 xx xx xx  	jsl	~~k_get_c256_minor_version
  3150                        ;	k_debug_strings("C256 VERSION MINOR:",rmbuffer);
  3151                        	.line	722
  3152 00:84C1: F4 00 00     	pea	#0
  3153 00:84C4: 18           	clc
  3154 00:84C5: 7B           	tdc
  3155 00:84C6: 69 29 00     	adc	#<L32+rmbuffer_1
  3156 00:84C9: 48           	pha
  3157 00:84CA: F4 xx xx     	pea	#^L30+233
  3158 00:84CD: F4 xx xx     	pea	#<L30+233
  3159 00:84D0: 22 xx xx xx  	jsl	~~k_debug_strings
  3160                        ;
  3161                        ;	k_debug_pointer("BUILD SYSTEM HEAP:",(LPVOID)FXO
                    S_BUILD_FAR_HEAP_ADDR);
  3162                        	.line	724
  3163 00:84D4: F4 10 00     	pea	#^$100000
  3164 00:84D7: F4 00 00     	pea	#<$100000
  3165 00:84DA: F4 xx xx     	pea	#^L30+253
  3166 00:84DD: F4 xx xx     	pea	#<L30+253
  3167 00:84E0: 22 xx xx xx  	jsl	~~k_debug_pointer
  3168                        ;	k_debug_pointer("             SIZE:",(LPVOID)FXO
                    S_BUILD_FAR_HEAP_SIZE);
  3169                        	.line	725
  3170 00:84E4: F4 05 00     	pea	#^$50000
  3171 00:84E7: F4 00 00     	pea	#<$50000
  3172 00:84EA: F4 xx xx     	pea	#^L30+272
  3173 00:84ED: F4 xx xx     	pea	#<L30+272
  3174 00:84F0: 22 xx xx xx  	jsl	~~k_debug_pointer
  3175                        ;
  3176                        ;
  3177                        ;	k_debug_string("k_report_configuration\r\n");
  3178                        	.line	728
  3179 00:84F4: F4 xx xx     	pea	#^L30+291
  3180 00:84F7: F4 xx xx     	pea	#<L30+291
  3181 00:84FA: 22 xx xx xx  	jsl	~~k_debug_string
  3182                        ;	line = k_report_configuration(3,line);
  3183                        	.line	729
  3184 00:84FE: AD xx xx     	lda	|~~line
  3185 00:8501: 48           	pha
  3186 00:8502: F4 03 00     	pea	#<$3
  3187 00:8505: 22 xx xx xx  	jsl	~~k_report_configuration
  3188 00:8509: 8D xx xx     	sta	|~~line
  Sat Jul 10 2021  1:15                                                Page 61


  3189                        ;	k_pos_console(line,4);
  3190                        	.line	730
  3191 00:850C: F4 04 00     	pea	#<$4
  3192 00:850F: AD xx xx     	lda	|~~line
  3193 00:8512: 48           	pha
  3194 00:8513: 22 xx xx xx  	jsl	~~k_pos_console
  3195                        ;	//k_run_loop();
  3196                        ;
  3197                        ;
  3198                        ;	k_debug_hex("L24BYTE:",L24BYTE(0x12345678));
  3199                        	.line	734
  3200 00:8517: F4 78 56     	pea	#<$12345678
  3201 00:851A: F4 xx xx     	pea	#^L30+316
  3202 00:851D: F4 xx xx     	pea	#<L30+316
  3203 00:8520: 22 xx xx xx  	jsl	~~k_debug_hex
  3204                        ;	k_debug_hex("M24BYTE:",M24BYTE(0x12345678));
  3205                        	.line	735
  3206 00:8524: F4 56 00     	pea	#<$56
  3207 00:8527: F4 xx xx     	pea	#^L30+325
  3208 00:852A: F4 xx xx     	pea	#<L30+325
  3209 00:852D: 22 xx xx xx  	jsl	~~k_debug_hex
  3210                        ;	k_debug_hex("H24BYTE:",H24BYTE(0x12345678));
  3211                        	.line	736
  3212 00:8531: F4 34 00     	pea	#<$34
  3213 00:8534: F4 xx xx     	pea	#^L30+334
  3214 00:8537: F4 xx xx     	pea	#<L30+334
  3215 00:853A: 22 xx xx xx  	jsl	~~k_debug_hex
  3216                        ;	k_debug_hex("H32BYTE:",H32BYTE(0x12345678));
  3217                        	.line	737
  3218 00:853E: F4 12 00     	pea	#<$12
  3219 00:8541: F4 xx xx     	pea	#^L30+343
  3220 00:8544: F4 xx xx     	pea	#<L30+343
  3221 00:8547: 22 xx xx xx  	jsl	~~k_debug_hex
  3222                        ;
  3223                        ;
  3224                        ;	k_debug_string("k_fcheck_system_memory\r\n");
  3225                        	.line	740
  3226 00:854B: F4 xx xx     	pea	#^L30+352
  3227 00:854E: F4 xx xx     	pea	#<L30+352
  3228 00:8551: 22 xx xx xx  	jsl	~~k_debug_string
  3229                        ;	availableMem = k_fcheck_system_memory(ReportMemo
                    ry);
  3230                        	.line	741
  3231 00:8555: F4 00 00     	pea	#^~~ReportMemory
  3232 00:8558: F4 FF 7F     	pea	#<~~ReportMemory
  3233 00:855B: 22 xx xx xx  	jsl	~~k_fcheck_system_memory
  3234 00:855F: 85 3B        	sta	<L32+availableMem_1
  3235 00:8561: 86 3D        	stx	<L32+availableMem_1+2
  3236                        ;
  3237                        ;	k_getZeroPage()->availableMemory 	= availa
                    bleMem;
  3238                        	.line	743
  3239 00:8563: 22 xx xx xx  	jsl	~~k_getZeroPage
  3240 00:8567: 85 01        	sta	<R0
  3241 00:8569: 86 03        	stx	<R0+2
  3242 00:856B: A5 3B        	lda	<L32+availableMem_1
  3243 00:856D: A0 2B 00     	ldy	#$2b
  3244 00:8570: 97 01        	sta	[<R0],Y
  Sat Jul 10 2021  1:15                                                Page 62


  3245 00:8572: A5 3D        	lda	<L32+availableMem_1+2
  3246 00:8574: A0 2D 00     	ldy	#$2d
  3247 00:8577: 97 01        	sta	[<R0],Y
  3248                        ;	k_getZeroPage()->availableMemoryK	= availa
                    bleMem/1024+1;
  3249                        	.line	744
  3250 00:8579: 22 xx xx xx  	jsl	~~k_getZeroPage
  3251 00:857D: 85 01        	sta	<R0
  3252 00:857F: 86 03        	stx	<R0+2
  3253 00:8581: D4 3D        	pei	<L32+availableMem_1+2
  3254 00:8583: D4 3B        	pei	<L32+availableMem_1
  3255 00:8585: A9 0A 00     	lda	#$a
  3256                        	xref	~~~llsr
  3257 00:8588: 22 xx xx xx  	jsl	~~~llsr
  3258 00:858C: 85 05        	sta	<R1
  3259 00:858E: 86 07        	stx	<R1+2
  3260 00:8590: 18           	clc
  3261 00:8591: A9 01 00     	lda	#$1
  3262 00:8594: 65 05        	adc	<R1
  3263 00:8596: 85 09        	sta	<R2
  3264 00:8598: A9 00 00     	lda	#$0
  3265 00:859B: 65 07        	adc	<R1+2
  3266 00:859D: 85 0B        	sta	<R2+2
  3267 00:859F: A5 09        	lda	<R2
  3268 00:85A1: A0 2F 00     	ldy	#$2f
  3269 00:85A4: 97 01        	sta	[<R0],Y
  3270 00:85A6: A5 0B        	lda	<R2+2
  3271 00:85A8: A0 31 00     	ldy	#$31
  3272 00:85AB: 97 01        	sta	[<R0],Y
  3273                        ;
  3274                        ;	heapSize = k_heap_integrity_check();
  3275                        	.line	746
  3276 00:85AD: 22 xx xx xx  	jsl	~~k_heap_integrity_check
  3277 00:85B1: 85 25        	sta	<L32+heapSize_1
  3278 00:85B3: 86 27        	stx	<L32+heapSize_1+2
  3279                        ;	k_debug_long("k_heap_integrity_check::heapsize:"
                    ,heapSize);
  3280                        	.line	747
  3281 00:85B5: D4 27        	pei	<L32+heapSize_1+2
  3282 00:85B7: D4 25        	pei	<L32+heapSize_1
  3283 00:85B9: F4 xx xx     	pea	#^L30+377
  3284 00:85BC: F4 xx xx     	pea	#<L30+377
  3285 00:85BF: 22 xx xx xx  	jsl	~~k_debug_long
  3286                        ;	//pheapInfo = umm_info(NULL,0);
  3287                        ;
  3288                        ;
  3289                        ;	k_debug_strings("DATE:",(LPSTR)k_get_date_string
                    (rmbuffer));
  3290                        	.line	751
  3291 00:85C3: F4 00 00     	pea	#0
  3292 00:85C6: 18           	clc
  3293 00:85C7: 7B           	tdc
  3294 00:85C8: 69 29 00     	adc	#<L32+rmbuffer_1
  3295 00:85CB: 48           	pha
  3296 00:85CC: 22 xx xx xx  	jsl	~~k_get_date_string
  3297 00:85D0: 85 01        	sta	<R0
  3298 00:85D2: 86 03        	stx	<R0+2
  3299 00:85D4: DA           	phx
  Sat Jul 10 2021  1:15                                                Page 63


  3300 00:85D5: 48           	pha
  3301 00:85D6: F4 xx xx     	pea	#^L30+411
  3302 00:85D9: F4 xx xx     	pea	#<L30+411
  3303 00:85DC: 22 xx xx xx  	jsl	~~k_debug_strings
  3304                        ;	k_debug_strings("TIME:",(LPSTR)k_get_localtime_s
                    tring(rmbuffer));
  3305                        	.line	752
  3306 00:85E0: F4 00 00     	pea	#0
  3307 00:85E3: 18           	clc
  3308 00:85E4: 7B           	tdc
  3309 00:85E5: 69 29 00     	adc	#<L32+rmbuffer_1
  3310 00:85E8: 48           	pha
  3311 00:85E9: 22 xx xx xx  	jsl	~~k_get_localtime_string
  3312 00:85ED: 85 01        	sta	<R0
  3313 00:85EF: 86 03        	stx	<R0+2
  3314 00:85F1: DA           	phx
  3315 00:85F2: 48           	pha
  3316 00:85F3: F4 xx xx     	pea	#^L30+417
  3317 00:85F6: F4 xx xx     	pea	#<L30+417
  3318 00:85F9: 22 xx xx xx  	jsl	~~k_debug_strings
  3319                        ;
  3320                        ;
  3321                        ;	k_debug_integer("sizeof(short int):",sizeof(shor
                    t int));
  3322                        	.line	755
  3323 00:85FD: F4 02 00     	pea	#<$2
  3324 00:8600: F4 xx xx     	pea	#^L30+423
  3325 00:8603: F4 xx xx     	pea	#<L30+423
  3326 00:8606: 22 xx xx xx  	jsl	~~k_debug_integer
  3327                        ;	k_debug_integer("sizeof(unsigned short int):",si
                    zeof(unsigned short int));
  3328                        	.line	756
  3329 00:860A: F4 02 00     	pea	#<$2
  3330 00:860D: F4 xx xx     	pea	#^L30+442
  3331 00:8610: F4 xx xx     	pea	#<L30+442
  3332 00:8613: 22 xx xx xx  	jsl	~~k_debug_integer
  3333                        ;	k_debug_integer("sizeof(int):",sizeof(int));
  3334                        	.line	757
  3335 00:8617: F4 02 00     	pea	#<$2
  3336 00:861A: F4 xx xx     	pea	#^L30+470
  3337 00:861D: F4 xx xx     	pea	#<L30+470
  3338 00:8620: 22 xx xx xx  	jsl	~~k_debug_integer
  3339                        ;	k_debug_integer("sizeof(unsigned int):",sizeof(u
                    nsigned int));
  3340                        	.line	758
  3341 00:8624: F4 02 00     	pea	#<$2
  3342 00:8627: F4 xx xx     	pea	#^L30+483
  3343 00:862A: F4 xx xx     	pea	#<L30+483
  3344 00:862D: 22 xx xx xx  	jsl	~~k_debug_integer
  3345                        ;	k_debug_integer("sizeof(long):",sizeof(long));
  3346                        	.line	759
  3347 00:8631: F4 04 00     	pea	#<$4
  3348 00:8634: F4 xx xx     	pea	#^L30+505
  3349 00:8637: F4 xx xx     	pea	#<L30+505
  3350 00:863A: 22 xx xx xx  	jsl	~~k_debug_integer
  3351                        ;	k_debug_integer("sizeof(LPVOID):",sizeof(LPVOID)
                    );
  3352                        	.line	760
  Sat Jul 10 2021  1:15                                                Page 64


  3353 00:863E: F4 04 00     	pea	#<$4
  3354 00:8641: F4 xx xx     	pea	#^L30+519
  3355 00:8644: F4 xx xx     	pea	#<L30+519
  3356 00:8647: 22 xx xx xx  	jsl	~~k_debug_integer
  3357                        ;	k_debug_integer("sizeof(size_t):",sizeof(size_t)
                    );
  3358                        	.line	761
  3359 00:864B: F4 02 00     	pea	#<$2
  3360 00:864E: F4 xx xx     	pea	#^L30+535
  3361 00:8651: F4 xx xx     	pea	#<L30+535
  3362 00:8654: 22 xx xx xx  	jsl	~~k_debug_integer
  3363                        ;	k_debug_integer("sizeof(FXZEROPAGE):",sizeof(FXZ
                    EROPAGE));
  3364                        	.line	762
  3365 00:8658: F4 67 00     	pea	#<$67
  3366 00:865B: F4 xx xx     	pea	#^L30+551
  3367 00:865E: F4 xx xx     	pea	#<L30+551
  3368 00:8661: 22 xx xx xx  	jsl	~~k_debug_integer
  3369                        ;	k_debug_integer("sizeof(FXOSMESSAGE):",sizeof(FX
                    OSMESSAGE));
  3370                        	.line	763
  3371 00:8665: F4 26 00     	pea	#<$26
  3372 00:8668: F4 xx xx     	pea	#^L30+571
  3373 00:866B: F4 xx xx     	pea	#<L30+571
  3374 00:866E: 22 xx xx xx  	jsl	~~k_debug_integer
  3375                        ;	k_debug_integer("sizeof(FXCMDMESSAGE):",sizeof(F
                    XCMDMESSAGE));
  3376                        	.line	764
  3377 00:8672: F4 26 00     	pea	#<$26
  3378 00:8675: F4 xx xx     	pea	#^L30+592
  3379 00:8678: F4 xx xx     	pea	#<L30+592
  3380 00:867B: 22 xx xx xx  	jsl	~~k_debug_integer
  3381                        ;
  3382                        ;
  3383                        ;	//k_dos_findfiles_to_nodes("HD:\\");
  3384                        ;
  3385                        ;
  3386                        ;	//ptrMemTest = HeapAlloc(64);
  3387                        ;	//k_debug_pointer("User Mode HeapAlloc() complet
                    e:",ptrMemTest);
  3388                        ;	//HeapDealloc(ptrMemTest);
  3389                        ;	//k_debug_pointer("User Mode HeapDealloc() compl
                    ete:",ptrMemTest);
  3390                        ;
  3391                        ;
  3392                        ;	k_write_console("\n\n");
  3393                        	.line	776
  3394 00:867F: F4 xx xx     	pea	#^L30+614
  3395 00:8682: F4 xx xx     	pea	#<L30+614
  3396 00:8685: 22 xx xx xx  	jsl	~~k_write_console
  3397                        ;	k_pos_console(k_row_console(),3);
  3398                        	.line	777
  3399 00:8689: F4 03 00     	pea	#<$3
  3400 00:868C: 22 xx xx xx  	jsl	~~k_row_console
  3401 00:8690: 48           	pha
  3402 00:8691: 22 xx xx xx  	jsl	~~k_pos_console
  3403                        ;	k_write_console(k_strip_padding(k_longtodec(k_ge
                    tZeroPage()->availableMemoryK,rmbuffer)));
  Sat Jul 10 2021  1:15                                                Page 65


  3404                        	.line	778
  3405 00:8695: F4 00 00     	pea	#0
  3406 00:8698: 18           	clc
  3407 00:8699: 7B           	tdc
  3408 00:869A: 69 29 00     	adc	#<L32+rmbuffer_1
  3409 00:869D: 48           	pha
  3410 00:869E: 22 xx xx xx  	jsl	~~k_getZeroPage
  3411 00:86A2: 85 01        	sta	<R0
  3412 00:86A4: 86 03        	stx	<R0+2
  3413 00:86A6: A0 31 00     	ldy	#$31
  3414 00:86A9: B7 01        	lda	[<R0],Y
  3415 00:86AB: 48           	pha
  3416 00:86AC: A0 2F 00     	ldy	#$2f
  3417 00:86AF: B7 01        	lda	[<R0],Y
  3418 00:86B1: 48           	pha
  3419 00:86B2: 22 xx xx xx  	jsl	~~k_longtodec
  3420 00:86B6: 85 01        	sta	<R0
  3421 00:86B8: 86 03        	stx	<R0+2
  3422 00:86BA: DA           	phx
  3423 00:86BB: 48           	pha
  3424 00:86BC: 22 xx xx xx  	jsl	~~k_strip_padding
  3425 00:86C0: 85 05        	sta	<R1
  3426 00:86C2: 86 07        	stx	<R1+2
  3427 00:86C4: DA           	phx
  3428 00:86C5: 48           	pha
  3429 00:86C6: 22 xx xx xx  	jsl	~~k_write_console
  3430                        ;	k_write_console("K RAM Available");
  3431                        	.line	779
  3432 00:86CA: F4 xx xx     	pea	#^L30+617
  3433 00:86CD: F4 xx xx     	pea	#<L30+617
  3434 00:86D0: 22 xx xx xx  	jsl	~~k_write_console
  3435                        ;
  3436                        ;	//line++;
  3437                        ;	//line++;
  3438                        ;	//pos = 2;
  3439                        ;	//pos = k_put_string(pos,line,k_strip_padding(k_
                    longtodec(k_getZeroPage()->availableMemoryK,rmbuffer)),15,0)
                    ;
  3440                        ;	//pos = k_put_string(pos,line,"K RAM Available",
                    15,0);
  3441                        ;
  3442                        ;	k_debug_long("AVAIL MEM:", availableMem);
  3443                        	.line	787
  3444 00:86D4: D4 3D        	pei	<L32+availableMem_1+2
  3445 00:86D6: D4 3B        	pei	<L32+availableMem_1
  3446 00:86D8: F4 xx xx     	pea	#^L30+633
  3447 00:86DB: F4 xx xx     	pea	#<L30+633
  3448 00:86DE: 22 xx xx xx  	jsl	~~k_debug_long
  3449                        ;
  3450                        ;	//line++;
  3451                        ;	//pos = 2;
  3452                        ;	//pos = k_put_string(pos,line,k_strip_padding(k_
                    longtodec(heapSize/1024 ,rmbuffer)),15,0);
  3453                        ;	//pos = k_put_string(pos,line,"K HEAP RAM Availa
                    ble",15,0);
  3454                        ;	k_write_console("\n");
  3455                        	.line	793
  3456 00:86E2: F4 xx xx     	pea	#^L30+644
  Sat Jul 10 2021  1:15                                                Page 66


  3457 00:86E5: F4 xx xx     	pea	#<L30+644
  3458 00:86E8: 22 xx xx xx  	jsl	~~k_write_console
  3459                        ;	k_pos_console(k_row_console(),3);
  3460                        	.line	794
  3461 00:86EC: F4 03 00     	pea	#<$3
  3462 00:86EF: 22 xx xx xx  	jsl	~~k_row_console
  3463 00:86F3: 48           	pha
  3464 00:86F4: 22 xx xx xx  	jsl	~~k_pos_console
  3465                        ;	k_write_console(k_strip_padding(k_longtodec(heap
                    Size/1024 ,rmbuffer)));
  3466                        	.line	795
  3467 00:86F8: F4 00 00     	pea	#0
  3468 00:86FB: 18           	clc
  3469 00:86FC: 7B           	tdc
  3470 00:86FD: 69 29 00     	adc	#<L32+rmbuffer_1
  3471 00:8700: 48           	pha
  3472 00:8701: D4 27        	pei	<L32+heapSize_1+2
  3473 00:8703: D4 25        	pei	<L32+heapSize_1
  3474 00:8705: A9 0A 00     	lda	#$a
  3475                        	xref	~~~llsr
  3476 00:8708: 22 xx xx xx  	jsl	~~~llsr
  3477 00:870C: 85 01        	sta	<R0
  3478 00:870E: 86 03        	stx	<R0+2
  3479 00:8710: D4 03        	pei	<R0+2
  3480 00:8712: D4 01        	pei	<R0
  3481 00:8714: 22 xx xx xx  	jsl	~~k_longtodec
  3482 00:8718: 85 05        	sta	<R1
  3483 00:871A: 86 07        	stx	<R1+2
  3484 00:871C: DA           	phx
  3485 00:871D: 48           	pha
  3486 00:871E: 22 xx xx xx  	jsl	~~k_strip_padding
  3487 00:8722: 85 09        	sta	<R2
  3488 00:8724: 86 0B        	stx	<R2+2
  3489 00:8726: DA           	phx
  3490 00:8727: 48           	pha
  3491 00:8728: 22 xx xx xx  	jsl	~~k_write_console
  3492                        ;	k_write_console("K HEAP RAM Available");
  3493                        	.line	796
  3494 00:872C: F4 xx xx     	pea	#^L30+646
  3495 00:872F: F4 xx xx     	pea	#<L30+646
  3496 00:8732: 22 xx xx xx  	jsl	~~k_write_console
  3497                        ;
  3498                        ;	sleep(5000);
  3499                        	.line	798
  3500 00:8736: F4 88 13     	pea	#<$1388
  3501 00:8739: 22 xx xx xx  	jsl	~~sleep
  3502                        ;
  3503                        ;	k_init_splash(TRUE);
  3504                        	.line	800
  3505 00:873D: F4 01 00     	pea	#<$1
  3506 00:8740: 22 xx xx xx  	jsl	~~k_init_splash
  3507                        ;
  3508                        ;
  3509                        ;	if(sizeof(FXOSMESSAGE)!=sizeof(FXCMDMESSAGE))
  3510                        	.line	803
  3511                        ;		k_exec_throw_exception(THIS_MODULE,0x100
                    00001,"VERSION ERROR: FXOSMESSAGE size mismatch",-1);
  3512 00:8744: 82 1B 00     	brl	L10013
  Sat Jul 10 2021  1:15                                                Page 67


  3513                        	.line	804
  3514 00:8747: F4 FF FF     	pea	#<$ffffffff
  3515 00:874A: F4 xx xx     	pea	#^L30+667
  3516 00:874D: F4 xx xx     	pea	#<L30+667
  3517 00:8750: F4 00 10     	pea	#^$10000001
  3518 00:8753: F4 01 00     	pea	#<$10000001
  3519 00:8756: AD xx xx     	lda	|~~THIS_MODULE+2
  3520 00:8759: 48           	pha
  3521 00:875A: AD xx xx     	lda	|~~THIS_MODULE
  3522 00:875D: 48           	pha
  3523 00:875E: 22 xx xx xx  	jsl	~~k_exec_throw_exception
  3524                        ;
  3525                        ;	k_debug_integer("k_get_cols_visible:",k_get_cols
                    _visible());
  3526                        L10013:
  3527                        	.line	806
  3528 00:8762: 22 xx xx xx  	jsl	~~k_get_cols_visible
  3529 00:8766: 48           	pha
  3530 00:8767: F4 xx xx     	pea	#^L30+708
  3531 00:876A: F4 xx xx     	pea	#<L30+708
  3532 00:876D: 22 xx xx xx  	jsl	~~k_debug_integer
  3533                        ;	k_debug_integer("k_get_cols_per_line:",k_get_col
                    s_per_line());
  3534                        	.line	807
  3535 00:8771: 22 xx xx xx  	jsl	~~k_get_cols_per_line
  3536 00:8775: 48           	pha
  3537 00:8776: F4 xx xx     	pea	#^L30+728
  3538 00:8779: F4 xx xx     	pea	#<L30+728
  3539 00:877C: 22 xx xx xx  	jsl	~~k_debug_integer
  3540                        ;	k_debug_integer("k_get_lines_visible",k_get_line
                    s_visible());
  3541                        	.line	808
  3542 00:8780: 22 xx xx xx  	jsl	~~k_get_lines_visible
  3543 00:8784: 48           	pha
  3544 00:8785: F4 xx xx     	pea	#^L30+749
  3545 00:8788: F4 xx xx     	pea	#<L30+749
  3546 00:878B: 22 xx xx xx  	jsl	~~k_debug_integer
  3547                        ;	k_debug_integer("k_get_lines_max:",k_get_lines_m
                    ax());
  3548                        	.line	809
  3549 00:878F: 22 xx xx xx  	jsl	~~k_get_lines_max
  3550 00:8793: 48           	pha
  3551 00:8794: F4 xx xx     	pea	#^L30+769
  3552 00:8797: F4 xx xx     	pea	#<L30+769
  3553 00:879A: 22 xx xx xx  	jsl	~~k_debug_integer
  3554                        ;
  3555                        ;
  3556                        ;
  3557                        ;
  3558                        ;	//testDrive("HD:","HD:\\");
  3559                        ;	//testDrive("SD:","SD:\\");
  3560                        ;
  3561                        ;	//k_dos_load_drivers();
  3562                        ;	//k_create_dos_device(FXDOS_SDC);
  3563                        ;	/*
  3564                        ;	k_debug_string("Call DLLMAIN\r\n");
  3565                        ;	memcpy((LPSTR)0x090000,APGMBIN,sizeof(APGMBIN));
  3566                        ;
  Sat Jul 10 2021  1:15                                                Page 68


  3567                        ;	k_debug_integer("APGMBIN SIZE:",sizeof(APGMBIN))
                    ;
  3568                        ;	k_debug_hex("APGMBIN DATA:",APGMBIN[0]);
  3569                        ;	k_debug_hex("MEMORY  DATA:",((LPCSTR)0x090000)[0
                    ]);
  3570                        ;	k_debug_pointer("DllMain:",DllMain);
  3571                        ;
  3572                        ;	DllMain();
  3573                        ;	*/
  3574                        ;
  3575                        ;	// user mode test
  3576                        ;	//DebugOut("API CALL!!!!\r\n");
  3577                        ;	//DebugInteger("API YEAR:", GetDateYear());
  3578                        ;
  3579                        ;	//
  3580                        ;	// enter event processing mode
  3581                        ;	//
  3582                        ;	//k_event_loop();
  3583                        ;
  3584                        ;	//testHD();
  3585                        ;	//testSD();
  3586                        ;
  3587                        ;
  3588                        ;
  3589                        ;	// lets wait here for now
  3590                        ;	//while(1);
  3591                        ;
  3592                        ;
  3593                        ;	k_debug_string("k_initalize_executive\r\n");
  3594                        	.line	849
  3595 00:879E: F4 xx xx     	pea	#^L30+786
  3596 00:87A1: F4 xx xx     	pea	#<L30+786
  3597 00:87A4: 22 xx xx xx  	jsl	~~k_debug_string
  3598                        ;	pExecutive = k_initalize_executive();
  3599                        	.line	850
  3600 00:87A8: 22 xx xx xx  	jsl	~~k_initalize_executive
  3601 00:87AC: 85 11        	sta	<L32+pExecutive_1
  3602 00:87AE: 86 13        	stx	<L32+pExecutive_1+2
  3603                        ;	if(!pExecutive)
  3604                        	.line	851
  3605                        ;	{
  3606 00:87B0: A5 11        	lda	<L32+pExecutive_1
  3607 00:87B2: 05 13        	ora	<L32+pExecutive_1+2
  3608 00:87B4: F0 03        	beq	L37
  3609 00:87B6: 82 1B 00     	brl	L10014
  3610                        L37:
  3611                        	.line	852
  3612                        ;		k_exec_throw_exception(THIS_MODULE,0x001
                    10011,"Executive Failed to Initialize.",-1);
  3613                        	.line	853
  3614 00:87B9: F4 FF FF     	pea	#<$ffffffff
  3615 00:87BC: F4 xx xx     	pea	#^L30+810
  3616 00:87BF: F4 xx xx     	pea	#<L30+810
  3617 00:87C2: F4 11 00     	pea	#^$110011
  3618 00:87C5: F4 11 00     	pea	#<$110011
  3619 00:87C8: AD xx xx     	lda	|~~THIS_MODULE+2
  3620 00:87CB: 48           	pha
  3621 00:87CC: AD xx xx     	lda	|~~THIS_MODULE
  Sat Jul 10 2021  1:15                                                Page 69


  3622 00:87CF: 48           	pha
  3623 00:87D0: 22 xx xx xx  	jsl	~~k_exec_throw_exception
  3624                        ;	}
  3625                        	.line	854
  3626                        ;	k_heap_integrity_check();
  3627                        L10014:
  3628                        	.line	855
  3629 00:87D4: 22 xx xx xx  	jsl	~~k_heap_integrity_check
  3630                        ;
  3631                        ;	pExecutive->Init();
  3632                        	.line	857
  3633 00:87D8: A0 02 00     	ldy	#$2
  3634 00:87DB: B7 11        	lda	[<L32+pExecutive_1],Y
  3635 00:87DD: AA           	tax
  3636 00:87DE: A7 11        	lda	[<L32+pExecutive_1]
  3637                        	xref	~~~lcal
  3638 00:87E0: 22 xx xx xx  	jsl	~~~lcal
  3639                        ;
  3640                        ;	k_debug_string("k_initalize_event_manager\r\n");
  3641                        	.line	859
  3642 00:87E4: F4 xx xx     	pea	#^L30+842
  3643 00:87E7: F4 xx xx     	pea	#<L30+842
  3644 00:87EA: 22 xx xx xx  	jsl	~~k_debug_string
  3645                        ;	pEventManager = k_initalize_event_manager();
  3646                        	.line	860
  3647 00:87EE: 22 xx xx xx  	jsl	~~k_initalize_event_manager
  3648 00:87F2: 85 15        	sta	<L32+pEventManager_1
  3649 00:87F4: 86 17        	stx	<L32+pEventManager_1+2
  3650                        ;	if(!pEventManager)
  3651                        	.line	861
  3652                        ;	{
  3653 00:87F6: A5 15        	lda	<L32+pEventManager_1
  3654 00:87F8: 05 17        	ora	<L32+pEventManager_1+2
  3655 00:87FA: F0 03        	beq	L38
  3656 00:87FC: 82 1B 00     	brl	L10015
  3657                        L38:
  3658                        	.line	862
  3659                        ;		k_exec_throw_exception(THIS_MODULE,0x001
                    10011,"Event Manager Failed to Initialize.",-1);
  3660                        	.line	863
  3661 00:87FF: F4 FF FF     	pea	#<$ffffffff
  3662 00:8802: F4 xx xx     	pea	#^L30+870
  3663 00:8805: F4 xx xx     	pea	#<L30+870
  3664 00:8808: F4 11 00     	pea	#^$110011
  3665 00:880B: F4 11 00     	pea	#<$110011
  3666 00:880E: AD xx xx     	lda	|~~THIS_MODULE+2
  3667 00:8811: 48           	pha
  3668 00:8812: AD xx xx     	lda	|~~THIS_MODULE
  3669 00:8815: 48           	pha
  3670 00:8816: 22 xx xx xx  	jsl	~~k_exec_throw_exception
  3671                        ;	}
  3672                        	.line	864
  3673                        ;	k_heap_integrity_check();
  3674                        L10015:
  3675                        	.line	865
  3676 00:881A: 22 xx xx xx  	jsl	~~k_heap_integrity_check
  3677                        ;
  3678                        ;	k_debug_integer("Event Manager Version:",pEventM
  Sat Jul 10 2021  1:15                                                Page 70


                    anager->Query(EV_QUERY_VERSION_MAJOR));
  3679                        	.line	867
  3680 00:881E: F4 00 00     	pea	#<$0
  3681 00:8821: A0 12 00     	ldy	#$12
  3682 00:8824: B7 15        	lda	[<L32+pEventManager_1],Y
  3683 00:8826: AA           	tax
  3684 00:8827: A0 10 00     	ldy	#$10
  3685 00:882A: B7 15        	lda	[<L32+pEventManager_1],Y
  3686                        	xref	~~~lcal
  3687 00:882C: 22 xx xx xx  	jsl	~~~lcal
  3688 00:8830: 48           	pha
  3689 00:8831: F4 xx xx     	pea	#^L30+906
  3690 00:8834: F4 xx xx     	pea	#<L30+906
  3691 00:8837: 22 xx xx xx  	jsl	~~k_debug_integer
  3692                        ;	pEventManager->Init();
  3693                        	.line	868
  3694 00:883B: A0 06 00     	ldy	#$6
  3695 00:883E: B7 15        	lda	[<L32+pEventManager_1],Y
  3696 00:8840: AA           	tax
  3697 00:8841: A0 04 00     	ldy	#$4
  3698 00:8844: B7 15        	lda	[<L32+pEventManager_1],Y
  3699                        	xref	~~~lcal
  3700 00:8846: 22 xx xx xx  	jsl	~~~lcal
  3701                        ;	pEventManager->Run(pExecutive);
  3702                        	.line	869
  3703 00:884A: D4 13        	pei	<L32+pExecutive_1+2
  3704 00:884C: D4 11        	pei	<L32+pExecutive_1
  3705 00:884E: A0 0A 00     	ldy	#$a
  3706 00:8851: B7 15        	lda	[<L32+pEventManager_1],Y
  3707 00:8853: AA           	tax
  3708 00:8854: A0 08 00     	ldy	#$8
  3709 00:8857: B7 15        	lda	[<L32+pEventManager_1],Y
  3710                        	xref	~~~lcal
  3711 00:8859: 22 xx xx xx  	jsl	~~~lcal
  3712                        ;
  3713                        ;	k_exec_throw_exception(THIS_MODULE,0x10000001,"S
                    ystem Failure.  Event Manager Exited.",-1);
  3714                        	.line	871
  3715 00:885D: F4 FF FF     	pea	#<$ffffffff
  3716 00:8860: F4 xx xx     	pea	#^L30+929
  3717 00:8863: F4 xx xx     	pea	#<L30+929
  3718 00:8866: F4 00 10     	pea	#^$10000001
  3719 00:8869: F4 01 00     	pea	#<$10000001
  3720 00:886C: AD xx xx     	lda	|~~THIS_MODULE+2
  3721 00:886F: 48           	pha
  3722 00:8870: AD xx xx     	lda	|~~THIS_MODULE
  3723 00:8873: 48           	pha
  3724 00:8874: 22 xx xx xx  	jsl	~~k_exec_throw_exception
  3725                        ;
  3726                        ;	return;
  3727                        	.line	873
  3728                        L39:
  3729 00:8878: 2B           	pld
  3730 00:8879: 3B           	tsc
  3731 00:887A: 18           	clc
  3732 00:887B: 69 52 00     	adc	#L31
  3733 00:887E: 1B           	tcs
  3734 00:887F: 6B           	rtl
  Sat Jul 10 2021  1:15                                                Page 71


  3735                        ;}
  3736                        	.line	874
  3737                        	.endblock	874
  3738             00000052   L31	equ	82
  3739             0000000D   L32	equ	13
  3740 00:8880:              	ends
  3741                        	efunc
  3742                        	.endfunc	874,13,82
  3743                        	.line	874
  3744                        	data
  3745                        L30:
  3746 00:014E: 44 65 76 69  	db	$44,$65,$76,$69,$63,$65,$20,$4C,$6F,$61,
                    $64,$20,$4C,$6F,$67
       00:0152: 63 65 20 4C 
       00:0156: 6F 61 64 20 
       00:015A: 4C 6F 67 
  3747 00:015D: 20 46 6F 6C  	db	$20,$46,$6F,$6C,$6C,$6F,$77,$73,$3A,$0D,
                    $0A,$00,$2A,$2A,$2A
       00:0161: 6C 6F 77 73 
       00:0165: 3A 0D 0A 00 
       00:0169: 2A 2A 2A 
  3748 00:016C: 2A 2A 2A 2A  	db	$2A,$2A,$2A,$2A,$2A,$2A,$2A,$2A,$2A,$2A,
                    $2A,$2A,$2A,$2A,$2A
       00:0170: 2A 2A 2A 2A 
       00:0174: 2A 2A 2A 2A 
       00:0178: 2A 2A 2A 
  3749 00:017B: 2A 2A 2A 2A  	db	$2A,$2A,$2A,$2A,$2A,$2A,$2A,$2A,$2A,$2A,
                    $2A,$2A,$2A,$2A,$2A
       00:017F: 2A 2A 2A 2A 
       00:0183: 2A 2A 2A 2A 
       00:0187: 2A 2A 2A 
  3750 00:018A: 2A 0D 0A 00  	db	$2A,$0D,$0A,$00,$2A,$2A,$2A,$2A,$2A,$2A,
                    $20,$20,$57,$65,$6C
       00:018E: 2A 2A 2A 2A 
       00:0192: 2A 2A 20 20 
       00:0196: 57 65 6C 
  3751 00:0199: 63 6F 6D 65  	db	$63,$6F,$6D,$65,$20,$74,$6F,$20,$46,$58,
                    $2F,$4F,$53,$20,$20
       00:019D: 20 74 6F 20 
       00:01A1: 46 58 2F 4F 
       00:01A5: 53 20 20 
  3752 00:01A8: 20 2A 2A 2A  	db	$20,$2A,$2A,$2A,$2A,$2A,$2A,$2A,$0D,$0A,
                    $00,$2A,$2A,$2A,$2A
       00:01AC: 2A 2A 2A 2A 
       00:01B0: 0D 0A 00 2A 
       00:01B4: 2A 2A 2A 
  3753 00:01B7: 2A 2A 20 20  	db	$2A,$2A,$20,$20,$20,$20,$20,$20,$20,$42,
                    $6F,$6F,$74,$69,$6E
       00:01BB: 20 20 20 20 
       00:01BF: 20 42 6F 6F 
       00:01C3: 74 69 6E 
  3754 00:01C6: 67 20 20 20  	db	$67,$20,$20,$20,$20,$20,$20,$20,$2A,$2A,
                    $2A,$2A,$2A,$2A,$2A
       00:01CA: 20 20 20 20 
       00:01CE: 2A 2A 2A 2A 
       00:01D2: 2A 2A 2A 
  3755 00:01D5: 0D 0A 00 2A  	db	$0D,$0A,$00,$2A,$2A,$2A,$2A,$2A,$2A,$2A,
                    $2A,$2A,$2A,$2A,$2A
  Sat Jul 10 2021  1:15                                                Page 72


       00:01D9: 2A 2A 2A 2A 
       00:01DD: 2A 2A 2A 2A 
       00:01E1: 2A 2A 2A 
  3756 00:01E4: 2A 2A 2A 2A  	db	$2A,$2A,$2A,$2A,$2A,$2A,$2A,$2A,$2A,$2A,
                    $2A,$2A,$2A,$2A,$2A
       00:01E8: 2A 2A 2A 2A 
       00:01EC: 2A 2A 2A 2A 
       00:01F0: 2A 2A 2A 
  3757 00:01F3: 2A 2A 2A 2A  	db	$2A,$2A,$2A,$2A,$2A,$2A,$2A,$0D,$0A,$00,
                    $6B,$5F,$63,$6C,$65
       00:01F7: 2A 2A 2A 0D 
       00:01FB: 0A 00 6B 5F 
       00:01FF: 63 6C 65 
  3758 00:0202: 61 72 5F 73  	db	$61,$72,$5F,$73,$63,$72,$65,$65,$6E,$0D,
                    $0A,$00,$6B,$5F,$74
       00:0206: 63 72 65 65 
       00:020A: 6E 0D 0A 00 
       00:020E: 6B 5F 74 
  3759 00:0211: 65 78 74 5F  	db	$65,$78,$74,$5F,$6D,$6F,$64,$65,$5F,$64,
                    $69,$61,$6C,$6F,$67
       00:0215: 6D 6F 64 65 
       00:0219: 5F 64 69 61 
       00:021D: 6C 6F 67 
  3760 00:0220: 0D 0A 00 43  	db	$0D,$0A,$00,$43,$32,$35,$36,$20,$56,$45,
                    $52,$53,$49,$4F,$4E
       00:0224: 32 35 36 20 
       00:0228: 56 45 52 53 
       00:022C: 49 4F 4E 
  3761 00:022F: 20 4D 41 4A  	db	$20,$4D,$41,$4A,$4F,$52,$3A,$00,$43,$32,
                    $35,$36,$20,$56,$45
       00:0233: 4F 52 3A 00 
       00:0237: 43 32 35 36 
       00:023B: 20 56 45 
  3762 00:023E: 52 53 49 4F  	db	$52,$53,$49,$4F,$4E,$20,$4D,$49,$4E,$4F,
                    $52,$3A,$00,$42,$55
       00:0242: 4E 20 4D 49 
       00:0246: 4E 4F 52 3A 
       00:024A: 00 42 55 
  3763 00:024D: 49 4C 44 20  	db	$49,$4C,$44,$20,$53,$59,$53,$54,$45,$4D,
                    $20,$48,$45,$41,$50
       00:0251: 53 59 53 54 
       00:0255: 45 4D 20 48 
       00:0259: 45 41 50 
  3764 00:025C: 3A 00 20 20  	db	$3A,$00,$20,$20,$20,$20,$20,$20,$20,$20,
                    $20,$20,$20,$20,$20
       00:0260: 20 20 20 20 
       00:0264: 20 20 20 20 
       00:0268: 20 20 20 
  3765 00:026B: 53 49 5A 45  	db	$53,$49,$5A,$45,$3A,$00,$6B,$5F,$72,$65,
                    $70,$6F,$72,$74,$5F
       00:026F: 3A 00 6B 5F 
       00:0273: 72 65 70 6F 
       00:0277: 72 74 5F 
  3766 00:027A: 63 6F 6E 66  	db	$63,$6F,$6E,$66,$69,$67,$75,$72,$61,$74,
                    $69,$6F,$6E,$0D,$0A
       00:027E: 69 67 75 72 
       00:0282: 61 74 69 6F 
       00:0286: 6E 0D 0A 
  Sat Jul 10 2021  1:15                                                Page 73


  3767 00:0289: 00 4C 32 34  	db	$00,$4C,$32,$34,$42,$59,$54,$45,$3A,$00,
                    $4D,$32,$34,$42,$59
       00:028D: 42 59 54 45 
       00:0291: 3A 00 4D 32 
       00:0295: 34 42 59 
  3768 00:0298: 54 45 3A 00  	db	$54,$45,$3A,$00,$48,$32,$34,$42,$59,$54,
                    $45,$3A,$00,$48,$33
       00:029C: 48 32 34 42 
       00:02A0: 59 54 45 3A 
       00:02A4: 00 48 33 
  3769 00:02A7: 32 42 59 54  	db	$32,$42,$59,$54,$45,$3A,$00,$6B,$5F,$66,
                    $63,$68,$65,$63,$6B
       00:02AB: 45 3A 00 6B 
       00:02AF: 5F 66 63 68 
       00:02B3: 65 63 6B 
  3770 00:02B6: 5F 73 79 73  	db	$5F,$73,$79,$73,$74,$65,$6D,$5F,$6D,$65,
                    $6D,$6F,$72,$79,$0D
       00:02BA: 74 65 6D 5F 
       00:02BE: 6D 65 6D 6F 
       00:02C2: 72 79 0D 
  3771 00:02C5: 0A 00 6B 5F  	db	$0A,$00,$6B,$5F,$68,$65,$61,$70,$5F,$69,
                    $6E,$74,$65,$67,$72
       00:02C9: 68 65 61 70 
       00:02CD: 5F 69 6E 74 
       00:02D1: 65 67 72 
  3772 00:02D4: 69 74 79 5F  	db	$69,$74,$79,$5F,$63,$68,$65,$63,$6B,$3A,
                    $3A,$68,$65,$61,$70
       00:02D8: 63 68 65 63 
       00:02DC: 6B 3A 3A 68 
       00:02E0: 65 61 70 
  3773 00:02E3: 73 69 7A 65  	db	$73,$69,$7A,$65,$3A,$00,$44,$41,$54,$45,
                    $3A,$00,$54,$49,$4D
       00:02E7: 3A 00 44 41 
       00:02EB: 54 45 3A 00 
       00:02EF: 54 49 4D 
  3774 00:02F2: 45 3A 00 73  	db	$45,$3A,$00,$73,$69,$7A,$65,$6F,$66,$28,
                    $73,$68,$6F,$72,$74
       00:02F6: 69 7A 65 6F 
       00:02FA: 66 28 73 68 
       00:02FE: 6F 72 74 
  3775 00:0301: 20 69 6E 74  	db	$20,$69,$6E,$74,$29,$3A,$00,$73,$69,$7A,
                    $65,$6F,$66,$28,$75
       00:0305: 29 3A 00 73 
       00:0309: 69 7A 65 6F 
       00:030D: 66 28 75 
  3776 00:0310: 6E 73 69 67  	db	$6E,$73,$69,$67,$6E,$65,$64,$20,$73,$68,
                    $6F,$72,$74,$20,$69
       00:0314: 6E 65 64 20 
       00:0318: 73 68 6F 72 
       00:031C: 74 20 69 
  3777 00:031F: 6E 74 29 3A  	db	$6E,$74,$29,$3A,$00,$73,$69,$7A,$65,$6F,
                    $66,$28,$69,$6E,$74
       00:0323: 00 73 69 7A 
       00:0327: 65 6F 66 28 
       00:032B: 69 6E 74 
  3778 00:032E: 29 3A 00 73  	db	$29,$3A,$00,$73,$69,$7A,$65,$6F,$66,$28,
                    $75,$6E,$73,$69,$67
       00:0332: 69 7A 65 6F 
  Sat Jul 10 2021  1:15                                                Page 74


       00:0336: 66 28 75 6E 
       00:033A: 73 69 67 
  3779 00:033D: 6E 65 64 20  	db	$6E,$65,$64,$20,$69,$6E,$74,$29,$3A,$00,
                    $73,$69,$7A,$65,$6F
       00:0341: 69 6E 74 29 
       00:0345: 3A 00 73 69 
       00:0349: 7A 65 6F 
  3780 00:034C: 66 28 6C 6F  	db	$66,$28,$6C,$6F,$6E,$67,$29,$3A,$00,$73,
                    $69,$7A,$65,$6F,$66
       00:0350: 6E 67 29 3A 
       00:0354: 00 73 69 7A 
       00:0358: 65 6F 66 
  3781 00:035B: 28 4C 50 56  	db	$28,$4C,$50,$56,$4F,$49,$44,$29,$3A,$00,
                    $73,$69,$7A,$65,$6F
       00:035F: 4F 49 44 29 
       00:0363: 3A 00 73 69 
       00:0367: 7A 65 6F 
  3782 00:036A: 66 28 73 69  	db	$66,$28,$73,$69,$7A,$65,$5F,$74,$29,$3A,
                    $00,$73,$69,$7A,$65
       00:036E: 7A 65 5F 74 
       00:0372: 29 3A 00 73 
       00:0376: 69 7A 65 
  3783 00:0379: 6F 66 28 46  	db	$6F,$66,$28,$46,$58,$5A,$45,$52,$4F,$50,
                    $41,$47,$45,$29,$3A
       00:037D: 58 5A 45 52 
       00:0381: 4F 50 41 47 
       00:0385: 45 29 3A 
  3784 00:0388: 00 73 69 7A  	db	$00,$73,$69,$7A,$65,$6F,$66,$28,$46,$58,
                    $4F,$53,$4D,$45,$53
       00:038C: 65 6F 66 28 
       00:0390: 46 58 4F 53 
       00:0394: 4D 45 53 
  3785 00:0397: 53 41 47 45  	db	$53,$41,$47,$45,$29,$3A,$00,$73,$69,$7A,
                    $65,$6F,$66,$28,$46
       00:039B: 29 3A 00 73 
       00:039F: 69 7A 65 6F 
       00:03A3: 66 28 46 
  3786 00:03A6: 58 43 4D 44  	db	$58,$43,$4D,$44,$4D,$45,$53,$53,$41,$47,
                    $45,$29,$3A,$00,$0A
       00:03AA: 4D 45 53 53 
       00:03AE: 41 47 45 29 
       00:03B2: 3A 00 0A 
  3787 00:03B5: 0A 00 4B 20  	db	$0A,$00,$4B,$20,$52,$41,$4D,$20,$41,$76,
                    $61,$69,$6C,$61,$62
       00:03B9: 52 41 4D 20 
       00:03BD: 41 76 61 69 
       00:03C1: 6C 61 62 
  3788 00:03C4: 6C 65 00 41  	db	$6C,$65,$00,$41,$56,$41,$49,$4C,$20,$4D,
                    $45,$4D,$3A,$00,$0A
       00:03C8: 56 41 49 4C 
       00:03CC: 20 4D 45 4D 
       00:03D0: 3A 00 0A 
  3789 00:03D3: 00 4B 20 48  	db	$00,$4B,$20,$48,$45,$41,$50,$20,$52,$41,
                    $4D,$20,$41,$76,$61
       00:03D7: 45 41 50 20 
       00:03DB: 52 41 4D 20 
       00:03DF: 41 76 61 
  3790 00:03E2: 69 6C 61 62  	db	$69,$6C,$61,$62,$6C,$65,$00,$56,$45,$52,
  Sat Jul 10 2021  1:15                                                Page 75


                    $53,$49,$4F,$4E,$20
       00:03E6: 6C 65 00 56 
       00:03EA: 45 52 53 49 
       00:03EE: 4F 4E 20 
  3791 00:03F1: 45 52 52 4F  	db	$45,$52,$52,$4F,$52,$3A,$20,$46,$58,$4F,
                    $53,$4D,$45,$53,$53
       00:03F5: 52 3A 20 46 
       00:03F9: 58 4F 53 4D 
       00:03FD: 45 53 53 
  3792 00:0400: 41 47 45 20  	db	$41,$47,$45,$20,$73,$69,$7A,$65,$20,$6D,
                    $69,$73,$6D,$61,$74
       00:0404: 73 69 7A 65 
       00:0408: 20 6D 69 73 
       00:040C: 6D 61 74 
  3793 00:040F: 63 68 00 6B  	db	$63,$68,$00,$6B,$5F,$67,$65,$74,$5F,$63,
                    $6F,$6C,$73,$5F,$76
       00:0413: 5F 67 65 74 
       00:0417: 5F 63 6F 6C 
       00:041B: 73 5F 76 
  3794 00:041E: 69 73 69 62  	db	$69,$73,$69,$62,$6C,$65,$3A,$00,$6B,$5F,
                    $67,$65,$74,$5F,$63
       00:0422: 6C 65 3A 00 
       00:0426: 6B 5F 67 65 
       00:042A: 74 5F 63 
  3795 00:042D: 6F 6C 73 5F  	db	$6F,$6C,$73,$5F,$70,$65,$72,$5F,$6C,$69,
                    $6E,$65,$3A,$00,$6B
       00:0431: 70 65 72 5F 
       00:0435: 6C 69 6E 65 
       00:0439: 3A 00 6B 
  3796 00:043C: 5F 67 65 74  	db	$5F,$67,$65,$74,$5F,$6C,$69,$6E,$65,$73,
                    $5F,$76,$69,$73,$69
       00:0440: 5F 6C 69 6E 
       00:0444: 65 73 5F 76 
       00:0448: 69 73 69 
  3797 00:044B: 62 6C 65 00  	db	$62,$6C,$65,$00,$6B,$5F,$67,$65,$74,$5F,
                    $6C,$69,$6E,$65,$73
       00:044F: 6B 5F 67 65 
       00:0453: 74 5F 6C 69 
       00:0457: 6E 65 73 
  3798 00:045A: 5F 6D 61 78  	db	$5F,$6D,$61,$78,$3A,$00,$6B,$5F,$69,$6E,
                    $69,$74,$61,$6C,$69
       00:045E: 3A 00 6B 5F 
       00:0462: 69 6E 69 74 
       00:0466: 61 6C 69 
  3799 00:0469: 7A 65 5F 65  	db	$7A,$65,$5F,$65,$78,$65,$63,$75,$74,$69,
                    $76,$65,$0D,$0A,$00
       00:046D: 78 65 63 75 
       00:0471: 74 69 76 65 
       00:0475: 0D 0A 00 
  3800 00:0478: 45 78 65 63  	db	$45,$78,$65,$63,$75,$74,$69,$76,$65,$20,
                    $46,$61,$69,$6C,$65
       00:047C: 75 74 69 76 
       00:0480: 65 20 46 61 
       00:0484: 69 6C 65 
  3801 00:0487: 64 20 74 6F  	db	$64,$20,$74,$6F,$20,$49,$6E,$69,$74,$69,
                    $61,$6C,$69,$7A,$65
       00:048B: 20 49 6E 69 
       00:048F: 74 69 61 6C 
  Sat Jul 10 2021  1:15                                                Page 76


       00:0493: 69 7A 65 
  3802 00:0496: 2E 00 6B 5F  	db	$2E,$00,$6B,$5F,$69,$6E,$69,$74,$61,$6C,
                    $69,$7A,$65,$5F,$65
       00:049A: 69 6E 69 74 
       00:049E: 61 6C 69 7A 
       00:04A2: 65 5F 65 
  3803 00:04A5: 76 65 6E 74  	db	$76,$65,$6E,$74,$5F,$6D,$61,$6E,$61,$67,
                    $65,$72,$0D,$0A,$00
       00:04A9: 5F 6D 61 6E 
       00:04AD: 61 67 65 72 
       00:04B1: 0D 0A 00 
  3804 00:04B4: 45 76 65 6E  	db	$45,$76,$65,$6E,$74,$20,$4D,$61,$6E,$61,
                    $67,$65,$72,$20,$46
       00:04B8: 74 20 4D 61 
       00:04BC: 6E 61 67 65 
       00:04C0: 72 20 46 
  3805 00:04C3: 61 69 6C 65  	db	$61,$69,$6C,$65,$64,$20,$74,$6F,$20,$49,
                    $6E,$69,$74,$69,$61
       00:04C7: 64 20 74 6F 
       00:04CB: 20 49 6E 69 
       00:04CF: 74 69 61 
  3806 00:04D2: 6C 69 7A 65  	db	$6C,$69,$7A,$65,$2E,$00,$45,$76,$65,$6E,
                    $74,$20,$4D,$61,$6E
       00:04D6: 2E 00 45 76 
       00:04DA: 65 6E 74 20 
       00:04DE: 4D 61 6E 
  3807 00:04E1: 61 67 65 72  	db	$61,$67,$65,$72,$20,$56,$65,$72,$73,$69,
                    $6F,$6E,$3A,$00,$53
       00:04E5: 20 56 65 72 
       00:04E9: 73 69 6F 6E 
       00:04ED: 3A 00 53 
  3808 00:04F0: 79 73 74 65  	db	$79,$73,$74,$65,$6D,$20,$46,$61,$69,$6C,
                    $75,$72,$65,$2E,$20
       00:04F4: 6D 20 46 61 
       00:04F8: 69 6C 75 72 
       00:04FC: 65 2E 20 
  3809 00:04FF: 20 45 76 65  	db	$20,$45,$76,$65,$6E,$74,$20,$4D,$61,$6E,
                    $61,$67,$65,$72,$20
       00:0503: 6E 74 20 4D 
       00:0507: 61 6E 61 67 
       00:050B: 65 72 20 
  3810 00:050E: 45 78 69 74  	db	$45,$78,$69,$74,$65,$64,$2E,$00
       00:0512: 65 64 2E 00 
  3811 00:0516:              	ends
  3812                        ;
  3813                        ;
  3814                        ;/*
  3815                        ;void k_level_test(VOID)
  3816                        ;{
  3817                        ;
  3818                        ;	int i = 30000;
  3819                        ;	int j = 30000;
  3820                        ;	int x = 0;
  3821                        ;	int y = 200;
  3822                        ;
  3823                        ;	int boxx = 200;
  3824                        ;	int boxy = 200;
  3825                        ;	int incx = 1;
  Sat Jul 10 2021  1:15                                                Page 77


  3826                        ;	int incy = 1;
  3827                        ;	int size = 5;
  3828                        ;
  3829                        ;	incx = size;
  3830                        ;	incy = size;
  3831                        ;
  3832                        ;	setColors();
  3833                        ;
  3834                        ;	for(i=3200;i>0;i--)
  3835                        ;	{
  3836                        ;		for(j=0;j<256;j++)
  3837                        ;		{
  3838                        ;			asm NOP;
  3839                        ;		}
  3840                        ;	}
  3841                        ;
  3842                        ;
  3843                        ;	k_enable_bitmap_mode();
  3844                        ;
  3845                        ;	k_gui_init_mousepointer(TRUE);
  3846                        ;
  3847                        ;	k_disable_border();
  3848                        ;
  3849                        ;	k_debug_string("CLEAR\r\n");
  3850                        ;
  3851                        ;	k_vdma_fill_rect_ex(0,0,640,480,0,0x00);
  3852                        ;	k_vdma_fill_rect_ex(0,0,640,480,0,0x10);
  3853                        ;
  3854                        ;	k_debug_string("FILL 0x00\r\n");
  3855                        ;
  3856                        ;	k_vdma_fill_rect_ex(200,200,100,100,15,0x00);
  3857                        ;	k_vdma_fill_rect_ex(200,50,100,100,15,0x00);
  3858                        ;
  3859                        ;	k_vdma_fill_rect_ex(0,0,640,480,0,0x10);
  3860                        ;
  3861                        ;	x = 1;
  3862                        ;	while(1)
  3863                        ;	{
  3864                        ;		k_vdma_fill_rect_ex(0,0,400,400,x,0x10);
  3865                        ;		k_vdma_fill_rect_ex(400,400,200,80,15-x,
                    0x10);
  3866                        ;
  3867                        ;
  3868                        ;
  3869                        ;
  3870                        ;		k_vdma_move_rect(boxx,boxy,100,100,incx,
                    0,15,0x00);
  3871                        ;		k_vdma_fill_rect_ex(boxx,boxy - 150,100,
                    100,0,0x00);
  3872                        ;		//k_draw_rect_slow(boxx,boxy, boxx+100, 
                    boxy+100, 0);
  3873                        ;
  3874                        ;		//k_draw_circle(boxx,boxy,100,0);
  3875                        ;
  3876                        ;
  3877                        ;		boxx+=incx;
  3878                        ;		if(incx > 0 && ((boxx + size + 100) > 64
                    0))
  Sat Jul 10 2021  1:15                                                Page 78


  3879                        ;			incx = (-1 * size);
  3880                        ;		if(incx < 0 && ((boxx - size) < 0))
  3881                        ;			incx = size;
  3882                        ;
  3883                        ;
  3884                        ;		k_vdma_fill_rect_ex(boxx,boxy - 150,100,
                    100,15,0x00);
  3885                        ;		//k_draw_circle(boxx,boxy,100,15);
  3886                        ;		//k_draw_rect_slow(boxx,boxy, boxx+100, 
                    boxy+100, 15);
  3887                        ;
  3888                        ;
  3889                        ;		//k_debug_string("SECOND\r\n");
  3890                        ;
  3891                        ;		x++;
  3892                        ;		if(x > 14)
  3893                        ;			x = 0;
  3894                        ;	}
  3895                        ;	//k_vdma_fill_rect(10,10,100,100,5);
  3896                        ;
  3897                        ;
  3898                        ;	return;
  3899                        ;}
  3900                        ;
  3901                        ;	/*
  3902                        ;	*BM1_CONTROL_REG = 0x01;
  3903                        ;	*BM1_START_ADDY_L = 0;
  3904                        ;	*BM1_START_ADDY_M = 0;
  3905                        ;	*BM1_START_ADDY_H = 0x10;
  3906                        ;
  3907                        ;	*BM0_CONTROL_REG = 0x01;
  3908                        ;	*BM0_START_ADDY_L = 0;
  3909                        ;	*BM0_START_ADDY_M = 0;
  3910                        ;	*BM0_START_ADDY_H = 0;
  3911                        ;
  3912                        ;
  3913                        ;	k_debug_string("k_enable_bitmap_mode RESET 1a...
                    \r\n");
  3914                        ;
  3915                        ;	MASTER_CTRL_REG_H[0] = MSTR_CTRL_VIDEO_MODE0;
  3916                        ;	MASTER_CTRL_REG_L[0] = MSTR_CTRL_GRAPH_MODE_EN;
  3917                        ;
  3918                        ;	for(i=3200;i>0;i--)
  3919                        ;	{
  3920                        ;		for(j=0;j<256;j++)
  3921                        ;		{
  3922                        ;			asm NOP;
  3923                        ;		}
  3924                        ;	}
  3925                        ;
  3926                        ;	k_debug_string("k_enable_bitmap_mode RESET 1b...
                    \r\n");
  3927                        ;
  3928                        ;	MASTER_CTRL_REG_H[0] = 0x00;
  3929                        ;	MASTER_CTRL_REG_L[0] = MSTR_CTRL_GRAPH_MODE_EN;
  3930                        ;
  3931                        ;	for(i=3200;i>0;i--)
  3932                        ;	{
  Sat Jul 10 2021  1:15                                                Page 79


  3933                        ;		for(j=0;j<256;j++)
  3934                        ;		{
  3935                        ;			asm NOP;
  3936                        ;		}
  3937                        ;	}
  3938                        ;
  3939                        ;	k_debug_string("k_enable_bitmap_mode RESET 1c...
                    \r\n");
  3940                        ;
  3941                        ;	MASTER_CTRL_REG_H[0] = 0x00;
  3942                        ;	MASTER_CTRL_REG_L[0] = MSTR_CTRL_GRAPH_MODE_EN;
  3943                        ;
  3944                        ;	for(i=3200;i>0;i--)
  3945                        ;	{
  3946                        ;		for(j=0;j<256;j++)
  3947                        ;		{
  3948                        ;			asm NOP;
  3949                        ;		}
  3950                        ;	}
  3951                        ;
  3952                        ;	k_debug_string("k_enable_bitmap_mode RESET 2...\
                    r\n");
  3953                        ;
  3954                        ;	MASTER_CTRL_REG_H[0] = 0x00;
  3955                        ;	MASTER_CTRL_REG_L[0] = MSTR_CTRL_GRAPH_MODE_EN;
  3956                        ;	for(i=3200;i>0;i--)
  3957                        ;	{
  3958                        ;		for(j=0;j<256;j++)
  3959                        ;		{
  3960                        ;			asm NOP;
  3961                        ;		}
  3962                        ;	}
  3963                        ;
  3964                        ;
  3965                        ;	*BM1_CONTROL_REG = ( BM_ENABLE | BM_LUT0 );
  3966                        ;	*BM0_CONTROL_REG = ( BM_ENABLE | BM_LUT0 );
  3967                        ;
  3968                        ;	k_debug_string("k_enable_bitmap_mode RESET 3...\
                    r\n");
  3969                        ;	*MASTER_CTRL_REG_L 	= (MSTR_CTRL_GRAPH_MODE_
                    EN | MSTR_CTRL_BITMAP_EN);
  3970                        ;
  3971                        ;	for(i=3200;i>0;i--)
  3972                        ;	{
  3973                        ;		for(j=0;j<256;j++)
  3974                        ;		{
  3975                        ;			asm NOP;
  3976                        ;		}
  3977                        ;	}
  3978                        ;
  3979                        ;
  3980                        ;*/
  3981                        ;
  3982                        ;
  3983                        ;/*
  3984                        ;ipc_data = k_fxstring_new("FXSTRING DATA",32);
  3985                        ;
  3986                        ;myport =  k_open_ipc_port("myport",0);
  Sat Jul 10 2021  1:15                                                Page 80


  3987                        ;if(myport)
  3988                        ;{
  3989                        ;	k_write_ipc_port(myport,(LPVOID)ipc_data,-1);
  3990                        ;
  3991                        ;	k_debug_strings("myport:", k_fxstring_as(k_read_
                    ipc_port(myport))  );
  3992                        ;	k_debug_pointer("myport:",k_read_ipc_port(myport
                    ) );
  3993                        ;
  3994                        ;	k_close_ipc_port(myport);
  3995                        ;}
  3996                        ;debugport =  k_get_ipc_port("@debug");
  3997                        ;if(debugport)
  3998                        ;{
  3999                        ;	k_write_ipc_port(debugport,(LPVOID)ipc_data,-1);
  4000                        ;
  4001                        ;	k_debug_strings("debugport:", k_fxstring_as(k_re
                    ad_ipc_port(debugport)));
  4002                        ;	k_debug_pointer("debugport:",k_read_ipc_port(deb
                    ugport) );
  4003                        ;
  4004                        ;	k_close_ipc_port(debugport);
  4005                        ;}
  4006                        ;
  4007                        ;
  4008                        ;k_fxstring_free(ipc_data);
  4009                        ;*/
  4010                        ;
  4011                        	.line	1072
  4012                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxmain.c",544
  4013                        	xref	~~k_init_splash
  4014                        	xref	~~k_dos_load_drivers
  4015                        	xref	~~f_mount
  4016                        	xref	~~f_getlabel
  4017                        	xref	~~f_findnext
  4018                        	xref	~~f_findfirst
  4019                        	xref	~~f_closedir
  4020                        	xref	~~f_opendir
  4021                        	xref	~~k_row_console
  4022                        	xref	~~k_pos_console
  4023                        	xref	~~k_clear_console
  4024                        	xref	~~k_write_console
  4025                        	xref	~~k_text_mode_dialog
  4026                        	xref	~~k_put_string
  4027                        	xref	~~k_put_char
  4028                        	xref	~~k_clear_screen
  4029                        	xref	~~k_enable_text_cursor
  4030                        	xref	~~k_set_border_color
  4031                        	xref	~~k_enable_border
  4032                        	xref	~~k_get_lines_max
  4033                        	xref	~~k_get_lines_visible
  4034                        	xref	~~k_get_cols_per_line
  4035                        	xref	~~k_get_cols_visible
  4036                        	xref	~~k_initialize_text_fonts
  4037                        	xref	~~k_initialize_text
  4038                        	xref	~~k_initalize_event_manager
  4039                        	xref	~~k_set_text_colors
  Sat Jul 10 2021  1:15                                                Page 81


  4040                        	xref	~~k_gui_init_mousepointer
  4041                        	xref	~~k_enable_text_mode
  4042                        	xref	~~k_mem_deallocate_heap
  4043                        	xref	~~k_mem_allocate_heap
  4044                        	xref	~~k_fcheck_system_memory
  4045                        	xref	~~k_heap_integrity_check
  4046                        	xref	~~k_exec_throw_exception
  4047                        	xref	~~k_initalize_executive
  4048                        	xref	~~k_get_localtime_string
  4049                        	xref	~~k_get_date_string
  4050                        	xref	~~k_longtodec
  4051                        	xref	~~k_bytetohex
  4052                        	xref	~~k_strip_padding
  4053                        	xref	~~k_get_c256_minor_version
  4054                        	xref	~~k_get_c256_major_version
  4055                        	xref	~~k_user_DisableOSDebug
  4056                        	xref	~~k_user_EnableOSDebug
  4057                        	xref	~~k_debug_crlf
  4058                        	xref	~~k_debug_strings
  4059                        	xref	~~k_debug_hex
  4060                        	xref	~~k_debug_long
  4061                        	xref	~~k_debug_integer
  4062                        	xref	~~k_debug_pointer
  4063                        	xref	~~k_debug_string
  4064                        	xref	~~k_report_configuration
  4065                        	xref	~~sleep
  4066                        	xref	~~k_initializeZeroPage
  4067                        	xref	~~k_getZeroPage
  4068                        	.sym	~~main,~~main,65,2,0
  4069                        	.sym	~~testDrive,~~testDrive,65,2,0
  4070                        	.sym	~~SpinMemory,~~SpinMemory,65,2,0
  4071                        	.sym	~~ReportMemory,~~ReportMemory,65,2,0
  4072                        	.sym	~~DeallocateNodeListString,~~DeallocateN
                    odeListString,65,2,0
  4073                        	.sym	DLLMAIN,0,641,14,32
  4074                        	.sym	~~pAPGMPTR,~~pAPGMPTR,129,2,32
  4075                        	.sym	~~THIS_MODULE,~~THIS_MODULE,18,3,32
  4076                        	.sym	~~mainspinner,~~mainspinner,110,3,0,4
  4077                        	.sym	~~msp,~~msp,5,3,16
  4078                        	.sym	~~k_init_splash,~~k_init_splash,65,18,0
  4079                        	.sym	~~line,~~line,5,2,16
  4080                        	.sym	~~k_dos_load_drivers,~~k_dos_load_driver
                    s,1102,18,32
  4081                        	.sym	PDOSHANDLE,0,138,14,32,124
  4082                        	.sym	DOSHANDLE,0,10,14,80,124
  4083                        	.sym	PFXDOSDEVICE,0,138,14,32,122
  4084                        	.sym	FXDOSDEVICE,0,10,14,5744,122
  4085                        	.sym	DOSINITDEVICE,0,641,14,32
  4086                        	.sym	DOSSECTORWRITER,0,654,14,32
  4087                        	.sym	DOSSECTORREADER,0,654,14,32
  4088                        	.sym	PIDENTIFY_DEVICE_DATA,0,138,14,32,121
  4089                        	.sym	IDENTIFY_DEVICE_DATA,0,10,14,4096,121
  4090                        	.sym	PIDSECTOR,0,138,14,32,98
  4091                        	.sym	IDSECTOR,0,10,14,2048,98
  4092                        	.sym	PLFN,0,138,14,32,97
  4093                        	.sym	LFN,0,10,14,256,97
  4094                        	.sym	PFAT16ENTRYLONG,0,138,14,32,96
  4095                        	.sym	FAT16ENTRYLONG,0,10,14,288,96
  Sat Jul 10 2021  1:15                                                Page 82


  4096                        	.sym	PFAT16ENTRY,0,138,14,32,95
  4097                        	.sym	FAT16ENTRY,0,10,14,256,95
  4098                        	.sym	Fat16BootSector,0,10,14,4096,94
  4099                        	.sym	PPARTITIONTABLE,0,138,14,32,93
  4100                        	.sym	PARTITIONTABLE,0,10,14,128,93
  4101                        	.sym	PFATBOOTSECTOR,0,138,14,32,92
  4102                        	.sym	FATBOOTSECTOR,0,10,14,928,92
  4103                        	.sym	fat_BS_t,0,10,14,688,91
  4104                        	.sym	fat_extBS_16_t,0,10,14,192,90
  4105                        	.sym	PFAT32EXT,0,138,14,32,89
  4106                        	.sym	fat_extBS_32_t,0,10,14,416,89
  4107                        	.sym	P_FX_FAT_DIR_INFO,0,138,14,32,88
  4108                        	.sym	FX_FAT_DIR_INFO,0,10,14,256,88
  4109                        	.sym	PFILEINFO,0,138,14,32,87
  4110                        	.sym	FILEINFO,0,10,14,136,87
  4111                        	.sym	PDISKINFO,0,138,14,32,86
  4112                        	.sym	DISKINFO,0,10,14,416,86
  4113                        	.sym	PDIRENTRY,0,138,14,32,85
  4114                        	.sym	DIRENTRY,0,10,14,256,85
  4115                        	.sym	DRESULT,0,5,14,16
  4116                        	.sym	DSTATUS,0,14,14,8
  4117                        	.sym	~~f_mount,~~f_mount,69,18,0
  4118                        	.sym	~~f_getlabel,~~f_getlabel,69,18,0
  4119                        	.sym	~~f_findnext,~~f_findnext,69,18,0
  4120                        	.sym	~~f_findfirst,~~f_findfirst,69,18,0
  4121                        	.sym	~~f_closedir,~~f_closedir,69,18,0
  4122                        	.sym	~~f_opendir,~~f_opendir,69,18,0
  4123                        	.sym	FRESULT,0,5,14,16
  4124                        	.sym	MKFS_PARM,0,10,14,80,84
  4125                        	.sym	FILINFO,0,10,14,2224,83
  4126                        	.sym	DIR,0,10,14,416,82
  4127                        	.sym	FIL,0,10,14,4400,81
  4128                        	.sym	FFOBJID,0,10,14,128,80
  4129                        	.sym	FATFS,0,10,14,4504,79
  4130                        	.sym	LBA_t,0,18,14,32
  4131                        	.sym	FSIZE_t,0,18,14,32
  4132                        	.sym	TCHAR,0,14,14,8
  4133                        	.sym	~~k_row_console,~~k_row_console,69,18,0
  4134                        	.sym	~~k_pos_console,~~k_pos_console,65,18,0
  4135                        	.sym	~~k_clear_console,~~k_clear_console,65,1
                    8,0
  4136                        	.sym	~~k_write_console,~~k_write_console,69,1
                    8,0
  4137                        	.sym	~~k_text_mode_dialog,~~k_text_mode_dialo
                    g,65,18,0
  4138                        	.sym	~~k_put_string,~~k_put_string,69,18,0
  4139                        	.sym	~~k_put_char,~~k_put_char,65,18,0
  4140                        	.sym	~~k_clear_screen,~~k_clear_screen,65,18,
                    0
  4141                        	.sym	~~k_enable_text_cursor,~~k_enable_text_c
                    ursor,65,18,0
  4142                        	.sym	~~k_set_border_color,~~k_set_border_colo
                    r,65,18,0
  4143                        	.sym	~~k_enable_border,~~k_enable_border,65,1
                    8,0
  4144                        	.sym	~~k_get_lines_max,~~k_get_lines_max,69,1
                    8,0
  4145                        	.sym	~~k_get_lines_visible,~~k_get_lines_visi
  Sat Jul 10 2021  1:15                                                Page 83


                    ble,69,18,0
  4146                        	.sym	~~k_get_cols_per_line,~~k_get_cols_per_l
                    ine,69,18,0
  4147                        	.sym	~~k_get_cols_visible,~~k_get_cols_visibl
                    e,69,18,0
  4148                        	.sym	~~k_initialize_text_fonts,~~k_initialize
                    _text_fonts,69,18,0
  4149                        	.sym	~~k_initialize_text,~~k_initialize_text,
                    65,18,0
  4150                        	.sym	PCOMMANDARGS,0,138,14,32,78
  4151                        	.sym	COMMANDARGS,0,10,14,64,78
  4152                        	.sym	PTOKENIZESTATE,0,133,14,32
  4153                        	.sym	TOKENIZESTATE,0,5,14,16
  4154                        	.sym	PTOKEN,0,138,14,32,77
  4155                        	.sym	TOKEN,0,10,14,64,77
  4156                        	.sym	PTOKENTYPE,0,133,14,32
  4157                        	.sym	TOKENTYPE,0,5,14,16
  4158                        	.sym	FXCommandHandler,0,656,14,32
  4159                        	.sym	PCONSOLECTX,0,138,14,32,76
  4160                        	.sym	CONSOLECTX,0,10,14,1144,76
  4161                        	.sym	PSPINNERCTX,0,138,14,32,75
  4162                        	.sym	SPINNERCTX,0,10,14,48,75
  4163                        	.sym	HCLIP,0,138,14,32,74
  4164                        	.sym	PCLIPBOARD_DATA,0,138,14,32,74
  4165                        	.sym	CLIPBOARD_DATA,0,10,14,168,74
  4166                        	.sym	~~k_initalize_event_manager,~~k_initaliz
                    e_event_manager,1098,18,32,73
  4167                        	.sym	PEVENTMANAGER,0,138,14,32,73
  4168                        	.sym	EVENTMANAGER,0,10,14,192,73
  4169                        	.sym	EV_RUN,0,656,14,32
  4170                        	.sym	EV_QUERY_METRIC,0,656,14,32
  4171                        	.sym	EV_CONFIGURE,0,656,14,32
  4172                        	.sym	EV_UNINIT,0,641,14,32
  4173                        	.sym	EV_INIT,0,8833,14,32
  4174                        	.sym	PMOUSE_MSG_STATE,0,138,14,32,72
  4175                        	.sym	MOUSE_MSG_STATE,0,10,14,184,72
  4176                        	.sym	PFXEVENTPROCESS,0,138,14,32,71
  4177                        	.sym	FXEVENTPROCESS,0,10,14,64,71
  4178                        	.sym	PMARSHALDATA,0,139,14,32,70
  4179                        	.sym	MARSHALDATA,0,11,14,32,70
  4180                        	.sym	FXIDLEPROCESS,0,641,14,32
  4181                        	.sym	FXEventProc,0,641,14,32
  4182                        	.sym	PMOUSEMSGDATA,0,138,14,32,69
  4183                        	.sym	MOUSEMSGDATA,0,10,14,64,69
  4184                        	.sym	MSGIRQ,0,5,14,16
  4185                        	.sym	MAINLOOPARGS,0,10,14,16,68
  4186                        	.sym	PEACHCHILD_MSG,0,138,14,32,67
  4187                        	.sym	EACHCHILD_MSG,0,10,14,64,67
  4188                        	.sym	PMSGBOX_DATA,0,138,14,32,66
  4189                        	.sym	MSGBOX_DATA,0,10,14,96,66
  4190                        	.sym	PDESKTOP_DATA,0,138,14,32,65
  4191                        	.sym	DESKTOP_DATA,0,10,14,64,65
  4192                        	.sym	PWINDOWMANAGER,0,138,14,32,64
  4193                        	.sym	WINDOWMANAGER,0,10,14,160,64
  4194                        	.sym	WM_DOPROCS,0,641,14,32
  4195                        	.sym	WM_QUERY_METRIC,0,656,14,32
  4196                        	.sym	WM_CONFIGURE,0,656,14,32
  4197                        	.sym	WM_HANDLE_EVENT,0,8833,14,32
  Sat Jul 10 2021  1:15                                                Page 84


  4198                        	.sym	WM_EVENTS,0,641,14,32
  4199                        	.sym	~~k_set_text_colors,~~k_set_text_colors,
                    65,18,0
  4200                        	.sym	~~k_gui_init_mousepointer,~~k_gui_init_m
                    ousepointer,65,18,0
  4201                        	.sym	~~k_enable_text_mode,~~k_enable_text_mod
                    e,65,18,0
  4202                        	.sym	PCUR_PALETTE_MAP,0,138,14,32,63
  4203                        	.sym	CUR_PALETTE_MAP,0,10,14,400,63
  4204                        	.sym	PCLICKDETECTED,0,138,14,32,62
  4205                        	.sym	CLICKDETECTED,0,10,14,64,62
  4206                        	.sym	OBJECTCLICKED,0,641,14,32
  4207                        	.sym	PIPCPORT,0,138,14,32,61
  4208                        	.sym	IPCPORT,0,10,14,144,61
  4209                        	.sym	~~k_mem_deallocate_heap,~~k_mem_dealloca
                    te_heap,65,18,0
  4210                        	.sym	~~k_mem_allocate_heap,~~k_mem_allocate_h
                    eap,1089,18,32
  4211                        	.sym	~~k_fcheck_system_memory,~~k_fcheck_syst
                    em_memory,82,18,0
  4212                        	.sym	~~k_heap_integrity_check,~~k_heap_integr
                    ity_check,82,18,0
  4213                        	.sym	MemoryCallback,0,641,14,32
  4214                        	.sym	PFXMEMORYMAP,0,138,14,32,60
  4215                        	.sym	FXMEMORYMAP,0,10,14,2072,60
  4216                        	.sym	UMM_HEAP_INFO,0,10,14,256,59
  4217                        	.sym	~~k_exec_throw_exception,~~k_exec_throw_
                    exception,65,18,0
  4218                        	.sym	~~k_initalize_executive,~~k_initalize_ex
                    ecutive,1098,18,32,58
  4219                        	.sym	PEXECUTIVE,0,138,14,32,58
  4220                        	.sym	EXECUTIVE,0,10,14,128,58
  4221                        	.sym	EX_QUERY_METRIC,0,656,14,32
  4222                        	.sym	EX_CONFIGURE,0,656,14,32
  4223                        	.sym	EX_UNINIT,0,641,14,32
  4224                        	.sym	EX_INIT,0,8833,14,32
  4225                        	.sym	~~k_get_localtime_string,~~k_get_localti
                    me_string,1102,18,32
  4226                        	.sym	~~k_get_date_string,~~k_get_date_string,
                    1102,18,32
  4227                        	.sym	~~k_longtodec,~~k_longtodec,1102,18,32
  4228                        	.sym	~~k_bytetohex,~~k_bytetohex,1102,18,32
  4229                        	.sym	~~k_strip_padding,~~k_strip_padding,1102
                    ,18,32
  4230                        	.sym	PFXSTRING,0,138,14,32,57
  4231                        	.sym	FXSTRING,0,10,14,64,57
  4232                        	.sym	DEVICEDRIVER_COMMAND,0,656,14,32
  4233                        	.sym	DEVICEDRIVER_UNLOAD,0,654,14,32
  4234                        	.sym	DEVICEDRIVER_WRITE,0,656,14,32
  4235                        	.sym	DEVICEDRIVER_READ,0,656,14,32
  4236                        	.sym	DEVICEDRIVER_LOAD,0,654,14,32
  4237                        	.sym	DEVICEDRIVER_IRQ,0,654,14,32
  4238                        	.sym	PFX_BLOCK_DEVICE_DRIVER,0,138,14,32,56
  4239                        	.sym	FX_BLOCK_DEVICE_DRIVER,0,10,14,808,56
  4240                        	.sym	GETDRIVERDEF,0,8842,14,32,55
  4241                        	.sym	PFX_DEVICE_DRIVER,0,138,14,32,55
  4242                        	.sym	FX_DEVICE_DRIVER,0,10,14,776,55
  4243                        	.sym	~~k_get_c256_minor_version,~~k_get_c256_
  Sat Jul 10 2021  1:15                                                Page 85


                    minor_version,65,18,0
  4244                        	.sym	~~k_get_c256_major_version,~~k_get_c256_
                    major_version,65,18,0
  4245                        	.sym	~~k_user_DisableOSDebug,~~k_user_Disable
                    OSDebug,65,18,0
  4246                        	.sym	~~k_user_EnableOSDebug,~~k_user_EnableOS
                    Debug,65,18,0
  4247                        	.sym	~~k_debug_crlf,~~k_debug_crlf,65,18,0
  4248                        	.sym	~~k_debug_strings,~~k_debug_strings,65,1
                    8,0
  4249                        	.sym	~~k_debug_hex,~~k_debug_hex,65,18,0
  4250                        	.sym	~~k_debug_long,~~k_debug_long,65,18,0
  4251                        	.sym	~~k_debug_integer,~~k_debug_integer,65,1
                    8,0
  4252                        	.sym	~~k_debug_pointer,~~k_debug_pointer,65,1
                    8,0
  4253                        	.sym	~~k_debug_string,~~k_debug_string,65,18,
                    0
  4254                        	.sym	~~k_report_configuration,~~k_report_conf
                    iguration,69,18,0
  4255                        	.sym	~~sleep,~~sleep,65,18,0
  4256                        	.sym	PSEGMENTHEADER,0,138,14,32,54
  4257                        	.sym	SEGMENTHEADER,0,10,14,160,54
  4258                        	.sym	~~k_initializeZeroPage,~~k_initializeZer
                    oPage,1098,18,32,51
  4259                        	.sym	~~k_getZeroPage,~~k_getZeroPage,1098,18,
                    32,51
  4260                        	.sym	PDEBUGBYTEBITS,0,138,14,32,53
  4261                        	.sym	DEBUGBYTEBITS,0,10,14,8,53
  4262                        	.sym	PFXENVIRONMENT,0,138,14,32,52
  4263                        	.sym	FXENVIRONMENT,0,10,14,96,52
  4264                        	.sym	PFXZEROPAGE,0,138,14,32,51
  4265                        	.sym	FXZEROPAGE,0,10,14,824,51
  4266                        	.sym	KERNELTRAPCALL,0,641,14,32
  4267                        	.sym	PFXKERNEL_API_CALLTABLE,0,138,14,32,50
  4268                        	.sym	FXKERNEL_API_CALLTABLE,0,10,14,8192,50
  4269                        	.sym	FOREACHNODEUNTIL,0,654,14,32
  4270                        	.sym	FOREACHNODE,0,641,14,32
  4271                        	.sym	PFXRFHEADER_FONT,0,138,14,32,49
  4272                        	.sym	FXRFHEADER_FONT,0,10,14,144,49
  4273                        	.sym	PFXRFHEADER,0,138,14,32,48
  4274                        	.sym	FXRFHEADER,0,10,14,72,48
  4275                        	.sym	PFXCOMBUFFER,0,138,14,32,47
  4276                        	.sym	FXCOMBUFFER,0,10,14,2080,47
  4277                        	.sym	PSUBMENULIST,0,138,14,32,46
  4278                        	.sym	SUBMENULIST,0,10,14,40,46
  4279                        	.sym	HSUBMENU,0,7,14,32
  4280                        	.sym	PSUBMENU,0,138,14,32,45
  4281                        	.sym	SUBMENU,0,10,14,64,45
  4282                        	.sym	MenuAction,0,641,14,32
  4283                        	.sym	PMENUANCHOR,0,138,14,32,44
  4284                        	.sym	MENUANCHOR,0,10,14,272,44
  4285                        	.sym	PMSGBOX,0,138,14,32,43
  4286                        	.sym	MSGBOX,0,10,14,144,43
  4287                        	.sym	PTEXTBOX,0,138,14,32,42
  4288                        	.sym	TEXTBOX,0,10,14,144,42
  4289                        	.sym	PLISTBOX,0,138,14,32,41
  4290                        	.sym	LISTBOX,0,10,14,240,41
  Sat Jul 10 2021  1:15                                                Page 86


  4291                        	.sym	PSCROLLBAR,0,138,14,32,40
  4292                        	.sym	SCROLLBAR,0,10,14,240,40
  4293                        	.sym	PBUTTON,0,138,14,32,39
  4294                        	.sym	BUTTON,0,10,14,96,39
  4295                        	.sym	PMENUDROPDOWNDATA,0,138,14,32,38
  4296                        	.sym	MENUDROPDOWNDATA,0,10,14,5152,38
  4297                        	.sym	PMENUTAG,0,138,14,32,37
  4298                        	.sym	MENUTAG,0,10,14,160,37
  4299                        	.sym	PMENU,0,138,14,32,36
  4300                        	.sym	MENU,0,10,14,280,36
  4301                        	.sym	HMENURESOURCE,0,129,14,32
  4302                        	.sym	FONTMETRIC,0,10,14,32,35
  4303                        	.sym	TITLE,0,142,14,32
  4304                        	.sym	PHANDLE,0,1153,14,32
  4305                        	.sym	HANDLE,0,129,14,32
  4306                        	.sym	PWINDOWEX,0,138,14,32,34
  4307                        	.sym	WINDOWEX,0,10,14,3880,34
  4308                        	.sym	PWINDOW,0,138,14,32,33
  4309                        	.sym	WINDOW,0,10,14,3904,33
  4310                        	.sym	PDRAGDATA,0,138,14,32,32
  4311                        	.sym	DRAGDATA,0,10,14,216,32
  4312                        	.sym	PNCCLICKABLE,0,138,14,32,31
  4313                        	.sym	NCCLICKABLE,0,10,14,136,31
  4314                        	.sym	HCLICKABLE,0,7,14,32
  4315                        	.sym	PCLICKABLE,0,138,14,32,30
  4316                        	.sym	CLICKABLE,0,10,14,152,30
  4317                        	.sym	PWNDCLASS,0,138,14,32,29
  4318                        	.sym	WNDCLASS,0,10,14,272,29
  4319                        	.sym	HBRUSH,0,129,14,32
  4320                        	.sym	HCURSOR,0,129,14,32
  4321                        	.sym	HICON,0,129,14,32
  4322                        	.sym	HINSTANCE,0,129,14,32
  4323                        	.sym	FXWndProc,0,654,14,32
  4324                        	.sym	PDRECT,0,138,14,32,28
  4325                        	.sym	DRECT,0,10,14,112,28
  4326                        	.sym	PRECTP,0,138,14,32,27
  4327                        	.sym	RECTP,0,10,14,96,27
  4328                        	.sym	PRECT,0,138,14,32,26
  4329                        	.sym	RECT,0,10,14,112,26
  4330                        	.sym	PPOINT,0,138,14,32,25
  4331                        	.sym	POINT,0,10,14,32,25
  4332                        	.sym	PFXPROPERTY,0,138,14,32,23
  4333                        	.sym	FXPROPERTY,0,10,14,384,23
  4334                        	.sym	PKEYSTATE,0,138,14,32,22
  4335                        	.sym	KEYSTATE,0,10,14,112,22
  4336                        	.sym	SCANCODE,0,14,14,8
  4337                        	.sym	KEYCODE,0,16,14,16
  4338                        	.sym	PFXPROCESSMESSAGE,0,138,14,32,21
  4339                        	.sym	FXPROCESSMESSAGE,0,10,14,112,21
  4340                        	.sym	PFXPROCESS,0,138,14,32,20
  4341                        	.sym	FXPROCESS,0,10,14,800,20
  4342                        	.sym	PDESKTOP_CONTROL,0,138,14,32,19
  4343                        	.sym	DESKTOP_CONTROL,0,10,14,392,19
  4344                        	.sym	PCONSOLE_CONTROL,0,138,14,32,18
  4345                        	.sym	CONSOLE_CONTROL,0,10,14,448,18
  4346                        	.sym	FXProcessProc,0,641,14,32
  4347                        	.sym	PFXCMDMESSAGE,0,138,14,32,17
  4348                        	.sym	FXCMDMESSAGE,0,10,14,304,17
  Sat Jul 10 2021  1:15                                                Page 87


  4349                        	.sym	PFXOSMESSAGE,0,138,14,32,16
  4350                        	.sym	FXOSMESSAGE,0,10,14,304,16
  4351                        	.sym	PINT_REGS,0,138,14,32,15
  4352                        	.sym	INT_REGS,0,10,14,104,15
  4353                        	.sym	TASK_STACK,0,10,14,32,14
  4354                        	.sym	TASK,0,10,14,48,13
  4355                        	.sym	PIRQDATA,0,138,14,32,12
  4356                        	.sym	IRQDATA,0,10,14,48,12
  4357                        	.sym	HMENU,0,129,14,32
  4358                        	.sym	HWND,0,129,14,32
  4359                        	.sym	MSGDATA,0,14,14,8
  4360                        	.sym	MSGDEST,0,18,14,32
  4361                        	.sym	MSGSRC,0,18,14,32
  4362                        	.sym	MSGTYPE,0,16,14,16
  4363                        	.sym	PROCESS_RESOURCE_LIST,0,138,14,32,6
  4364                        	.sym	PROCESS_TLS_LIST,0,138,14,32,6
  4365                        	.sym	SEMAPHORE_LIST,0,138,14,32,6
  4366                        	.sym	FILE_BLOCK_LIST,0,138,14,32,6
  4367                        	.sym	FILE_PATH_LIST,0,138,14,32,6
  4368                        	.sym	PROCEDURE_LIST,0,138,14,32,6
  4369                        	.sym	FILE_HANDLE,0,138,14,32,11
  4370                        	.sym	FILE_BLOCK,0,10,14,552,11
  4371                        	.sym	SEMAPHORE,0,10,14,16,10
  4372                        	.sym	PPROCESS_SIGNAL,0,138,14,32,9
  4373                        	.sym	PROCESS_SIGNAL,0,10,14,16,9
  4374                        	.sym	KRESULT,0,18,14,32
  4375                        	.sym	PKERNEL_ERROR,0,138,14,32,8
  4376                        	.sym	KERNEL_ERROR,0,10,14,32,8
  4377                        	.sym	PROCESS_STATUS,0,16,14,16
  4378                        	.sym	FILE_PATH_NAME,0,142,14,32
  4379                        	.sym	PROCESS_RESOURCE,0,129,14,32
  4380                        	.sym	PROCESS_TLS,0,129,14,32
  4381                        	.sym	PROCESS_CTX,0,129,14,32
  4382                        	.sym	USERID,0,16,14,16
  4383                        	.sym	PROCESS_ID,0,18,14,32
  4384                        	.sym	PROCESS_BANK,0,14,14,8
  4385                        	.sym	PFXQUEUE,0,138,14,32,7
  4386                        	.sym	FXQUEUE,0,10,14,80,7
  4387                        	.sym	PFXNODELIST,0,138,14,32,6
  4388                        	.sym	FXNODELIST,0,10,14,96,6
  4389                        	.sym	NodeListDeallocator,0,641,14,32
  4390                        	.sym	PFXNODE,0,138,14,32,5
  4391                        	.sym	FXNODE,0,10,14,384,5
  4392                        	.sym	PBYTEBITS,0,138,14,32,4
  4393                        	.sym	BYTEBITS,0,10,14,8,4
  4394                        	.sym	HRESULT,0,18,14,32
  4395                        	.sym	LPWCHAR,0,144,14,32
  4396                        	.sym	WCHAR,0,16,14,16
  4397                        	.sym	HCOLOR,0,129,14,32
  4398                        	.sym	HFONT,0,129,14,32
  4399                        	.sym	HDC,0,129,14,32
  4400                        	.sym	HPOINTER,0,129,14,32
  4401                        	.sym	uint32_t,0,18,14,32
  4402                        	.sym	uint8_t,0,14,14,8
  4403                        	.sym	LPBOOL,0,142,14,32
  4404                        	.sym	BOOL,0,14,14,8
  4405                        	.sym	DWORD,0,18,14,32
  4406                        	.sym	ULONG,0,18,14,32
  Sat Jul 10 2021  1:15                                                Page 88


  4407                        	.sym	LPLONG,0,135,14,32
  4408                        	.sym	LONG,0,7,14,32
  4409                        	.sym	PUINT,0,144,14,32
  4410                        	.sym	USHORT,0,16,14,16
  4411                        	.sym	UINT,0,16,14,16
  4412                        	.sym	INT,0,5,14,16
  4413                        	.sym	WORD,0,5,14,16
  4414                        	.sym	PBYTE,0,142,14,32
  4415                        	.sym	BYTE,0,14,14,8
  4416                        	.sym	IOPORT,0,142,14,32
  4417                        	.sym	PUCHAR,0,142,14,32
  4418                        	.sym	UCHAR,0,14,14,8
  4419                        	.sym	LPWCSTR,0,142,14,32
  4420                        	.sym	LPCSTR,0,142,14,32
  4421                        	.sym	LPSTR,0,142,14,32
  4422                        	.sym	LPCHAR,0,142,14,32
  4423                        	.sym	CHAR,0,14,14,8
  4424                        	.sym	LPVOID,0,129,14,32
  4425                        	.sym	VOID,0,1,14,32
  4426                        	.sym	Boolean_T,0,5,14,16
  4427                        	.sym	ldiv_t,0,10,14,64,2
  4428                        	.sym	div_t,0,10,14,32,1
  4429                        	.sym	wctype_t,0,16,14,16
  4430                        	.sym	wint_t,0,16,14,16
  4431                        	.sym	wchar_t,0,14,14,8
  4432                        	.sym	ptrdiff_t,0,7,14,32
  4433                        	.sym	size_t,0,16,14,16
  4434                        	end


      Lines assembled: 4434
      Errors: 0
