  Mon Aug  9 2021 16:52                                                Page 1


                     ***************************************
                     **      WDC 65C816 Macro Assembler   **
                     **                                   **
                     **     Version 3.49.1- Feb  6 2006    **
                     ***************************************

     1                        ;:ts=8
     2             00000001   R0	equ	1
     3             00000005   R1	equ	5
     4             00000009   R2	equ	9
     5             0000000D   R3	equ	13
     6                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxmain.c",0
     7                        ;
     8                        ;//#include "fxstartup.h"
     9                        ;#include "fxos.h"
    10                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxos.h",0
    11                        	.file	"G:\devtools\WDCTools\wdc\Tools\include\
                    stdlib.h",0
    12                        	.file	"G:\devtools\WDCTools\wdc\Tools\include\
                    stddef.h",0
    13                        	.line	88
    14                        	.file	"G:\devtools\WDCTools\wdc\Tools\include\
                    stdlib.h",43
    15                        	.stag	fake1_,32,1
    16                        	.member	quot,0,5,8,16
    17                        	.member	rem,16,5,8,16
    18                        	.eos
    19                        	.stag	fake2_,64,2
    20                        	.member	quot,0,7,8,32
    21                        	.member	rem,32,7,8,32
    22                        	.eos
    23                        	.stag	int_sqrt,32,3
    24                        	.member	sqrt,0,16,8,16
    25                        	.member	frac,16,16,8,16
    26                        	.eos
    27                        	.line	205
    28                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxos.h",4
    29                        	.file	"G:\devtools\WDCTools\wdc\Tools\include\
                    string.h",0
    30                        	.line	134
    31                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxos.h",5
    32                        	.file	"G:\devtools\WDCTools\wdc\Tools\include\
                    ctype.h",0
    33                        	.line	103
    34                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxos.h",6
    35                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxtypes.h",0
    36                        	.stag	_fx_bytebits,8,4
    37                        	.member	b7,0,14,17,1
    38                        	.member	b6,1,14,17,1
    39                        	.member	b5,2,14,17,1
    40                        	.member	b4,3,14,17,1
    41                        	.member	b3,4,14,17,1
  Mon Aug  9 2021 16:52                                                Page 2


    42                        	.member	b2,5,14,17,1
    43                        	.member	b1,6,14,17,1
    44                        	.member	b0,7,14,17,1
    45                        	.eos
    46                        	.stag	_fx_node,384,5
    47                        	.member	type,0,14,8,8
    48                        	.member	Reserved0,8,14,8,8
    49                        	.member	data,16,129,8,32
    50                        	.member	last,48,138,8,32,5
    51                        	.member	next,80,138,8,32,5
    52                        	.member	name,112,110,8,0,32
    53                        	.member	Reserved1,368,16,8,16
    54                        	.eos
    55                        	.stag	_fx_nodelist,96,6
    56                        	.member	listhead,0,138,8,32,5
    57                        	.member	listData,32,129,8,32
    58                        	.member	deallocator,64,641,8,32
    59                        	.eos
    60                        	.stag	_fx_queue,80,7
    61                        	.member	count,0,5,8,16
    62                        	.member	front,16,138,8,32,5
    63                        	.member	rear,48,138,8,32,5
    64                        	.eos
    65                        	.stag	fake8_,32,8
    66                        	.member	subsystem,0,14,8,8
    67                        	.member	level,8,14,8,8
    68                        	.member	error,16,16,8,16
    69                        	.eos
    70                        	.stag	_fx_process_signal,16,9
    71                        	.member	cbSize,0,16,8,16
    72                        	.eos
    73                        	.stag	_fx_semaphore,16,10
    74                        	.member	reserved,0,5,8,16
    75                        	.eos
    76                        	.stag	_fx_fileBlock,552,11
    77                        	.member	openCount,0,16,8,16
    78                        	.member	lockCount,16,16,8,16
    79                        	.member	dirty,32,14,8,8
    80                        	.member	fileBuffer,40,110,8,0,64
    81                        	.eos
    82                        	.stag	_fx_irq_data,48,12
    83                        	.member	line,0,5,8,16
    84                        	.member	keycode,16,142,8,32
    85                        	.eos
    86                        	.stag	_task,48,13
    87                        	.member	SPL,0,14,8,8
    88                        	.member	SPH,8,14,8,8
    89                        	.member	pstack,16,142,8,32
    90                        	.eos
    91                        	.stag	_task_stack,32,14
    92                        	.member	SS,0,142,8,32
    93                        	.eos
    94                        	.stag	int_regs,104,15
    95                        	.member	PB,0,14,8,8
    96                        	.member	PH,8,14,8,8
    97                        	.member	PL,16,14,8,8
    98                        	.member	PP,24,14,8,8
    99                        	.member	DB,32,14,8,8
  Mon Aug  9 2021 16:52                                                Page 3


   100                        	.member	DH,40,14,8,8
   101                        	.member	DL,48,14,8,8
   102                        	.member	AH,56,14,8,8
   103                        	.member	AL,64,14,8,8
   104                        	.member	XH,72,14,8,8
   105                        	.member	XL,80,14,8,8
   106                        	.member	YH,88,14,8,8
   107                        	.member	YL,96,14,8,8
   108                        	.eos
   109                        	.stag	_fx_eventMessage,312,16
   110                        	.member	src,0,18,8,32
   111                        	.member	dest,32,18,8,32
   112                        	.member	type,64,16,8,16
   113                        	.member	hwnd,80,129,8,32
   114                        	.member	pheap,112,129,8,32
   115                        	.member	msgTime,144,18,8,32
   116                        	.member	data,176,110,8,0,16
   117                        	.member	attr,304,14,8,8
   118                        	.eos
   119                        	.stag	_fx_cmdMessage,312,17
   120                        	.member	src,0,18,8,32
   121                        	.member	dest,32,18,8,32
   122                        	.member	type,64,16,8,16
   123                        	.member	hwnd,80,129,8,32
   124                        	.member	pheap,112,129,8,32
   125                        	.member	msgTime,144,18,8,32
   126                        	.member	cmdCId,176,16,8,16
   127                        	.member	cmdMId,192,16,8,16
   128                        	.member	parameter1,208,18,8,32
   129                        	.member	parameter2,240,18,8,32
   130                        	.member	parameter3,272,18,8,32
   131                        	.member	attr,304,14,8,8
   132                        	.eos
   133                        	.stag	_fx_console_ctl,448,18
   134                        	.member	maxCols,0,5,8,16
   135                        	.member	maxRows,16,5,8,16
   136                        	.member	curX,32,5,8,16
   137                        	.member	curY,48,5,8,16
   138                        	.member	fgColor,64,5,8,16
   139                        	.member	bgColor,80,5,8,16
   140                        	.member	mode,96,14,8,8
   141                        	.member	kbBuffer,104,101,8,0,16
   142                        	.member	screenBuffer,360,142,8,32
   143                        	.member	desktopMode,392,14,8,8
   144                        	.member	lastMouseButton,400,5,8,16
   145                        	.member	lastMouseX,416,5,8,16
   146                        	.member	lastMouseY,432,5,8,16
   147                        	.eos
   148                        	.stag	_fx_desktop_ctl,392,19
   149                        	.member	desktopMode,0,14,8,8
   150                        	.member	cursorCtl,8,5,8,16
   151                        	.member	cursorState,24,5,8,16
   152                        	.member	backgroundColor,40,5,8,16
   153                        	.member	foregroundColor,56,5,8,16
   154                        	.member	menuMode,72,5,8,16
   155                        	.member	lastMouseButton,88,5,8,16
   156                        	.member	lastMouseX,104,5,8,16
   157                        	.member	lastMouseY,120,5,8,16
  Mon Aug  9 2021 16:52                                                Page 4


   158                        	.member	currentDiskName,136,142,8,32
   159                        	.member	diskNodes,168,129,8,32
   160                        	.member	titleNodes,200,129,8,32
   161                        	.member	menuNodes,232,129,8,32
   162                        	.member	iconNodes,264,129,8,32
   163                        	.member	windowNodes,296,129,8,32
   164                        	.member	fontNodes,328,129,8,32
   165                        	.member	wndProc,360,138,8,32,6
   166                        	.eos
   167                        	.stag	_fx_process,800,20
   168                        	.member	cbSize,0,5,8,16
   169                        	.member	procId,16,18,8,32
   170                        	.member	parentId,48,18,8,32
   171                        	.member	ctx,80,129,8,32
   172                        	.member	userId,112,16,8,16
   173                        	.member	status,128,16,8,16
   174                        	.member	foregroundActive,144,14,8,8
   175                        	.member	tls,152,1121,8,32,8
   176                        	.member	commandLine,408,142,8,32
   177                        	.member	semaphores,440,138,8,32,6
   178                        	.member	fileHandles,472,138,8,32,6
   179                        	.member	pathList,504,138,8,32,6
   180                        	.member	resources,536,138,8,32,6
   181                        	.member	timerAware,568,14,8,8
   182                        	.member	timerTicks,576,112,8,0,2
   183                        	.member	timerTickCount,608,112,8,0,2
   184                        	.member	kernelError,640,10,8,32,8
   185                        	.member	consoleCtl,672,138,8,32,18
   186                        	.member	desktopCtl,704,138,8,32,19
   187                        	.member	execProc,736,641,8,32
   188                        	.member	startupArgs,768,129,8,32
   189                        	.eos
   190                        	.stag	_fxProcessMessage,112,21
   191                        	.member	src,0,18,8,32
   192                        	.member	dest,32,18,8,32
   193                        	.member	type,64,16,8,16
   194                        	.member	processInfo,80,138,8,32,20
   195                        	.eos
   196                        	.stag	_k_key_state,112,22
   197                        	.member	scanCode,0,14,8,8
   198                        	.member	isShifted,8,14,8,8
   199                        	.member	isAlt,16,14,8,8
   200                        	.member	isExtended,24,14,8,8
   201                        	.member	isCapsLock,32,14,8,8
   202                        	.member	isNumLock,40,14,8,8
   203                        	.member	isScrollLock,48,14,8,8
   204                        	.member	keyChar,56,16,8,16
   205                        	.member	scanTime,72,18,8,32
   206                        	.member	ledStatus,104,14,8,8
   207                        	.eos
   208                        	.stag	_fx_property,384,23
   209                        	.member	name,0,110,8,0,16
   210                        	.member	value,128,110,8,0,32
   211                        	.eos
   212                        	.utag	_24bitPointer,32,24
   213                        	.member	address,0,142,11,32
   214                        	.member	bytes,0,110,11,0,4
   215                        	.eos
  Mon Aug  9 2021 16:52                                                Page 5


   216                        	.stag	_PointStruct,32,25
   217                        	.member	x,0,5,8,16
   218                        	.member	y,16,5,8,16
   219                        	.eos
   220                        	.stag	_RectStruct,112,26
   221                        	.member	x,0,5,8,16
   222                        	.member	y,16,5,8,16
   223                        	.member	z,32,18,8,32
   224                        	.member	width,64,5,8,16
   225                        	.member	height,80,5,8,16
   226                        	.member	attr,96,5,8,16
   227                        	.eos
   228                        	.stag	fake27_,96,27
   229                        	.member	name,0,142,8,32
   230                        	.member	topLeft,32,10,8,32,25
   231                        	.member	bottomRight,64,10,8,32,25
   232                        	.eos
   233                        	.stag	fake28_,112,28
   234                        	.member	x,0,5,8,16
   235                        	.member	y,16,5,8,16
   236                        	.member	z,32,5,8,16
   237                        	.member	width,48,5,8,16
   238                        	.member	height,64,5,8,16
   239                        	.member	data,80,18,8,32
   240                        	.eos
   241                        	.stag	_k_WindowClass,272,29
   242                        	.member	cbSize,0,16,8,16
   243                        	.member	style,16,16,8,16
   244                        	.member	styleEx,32,16,8,16
   245                        	.member	pWndProc,48,654,8,32
   246                        	.member	hInstance,80,129,8,32
   247                        	.member	hIcon,112,129,8,32
   248                        	.member	hCursor,144,129,8,32
   249                        	.member	hbrBackground,176,129,8,32
   250                        	.member	lpszMenuName,208,142,8,32
   251                        	.member	lpszClassName,240,142,8,32
   252                        	.eos
   253                        	.stag	_ClickableRect,152,30
   254                        	.member	area,0,10,8,112,26
   255                        	.member	z,112,18,8,32
   256                        	.member	enabled,144,14,8,8
   257                        	.eos
   258                        	.stag	_NCClickableRect,136,31
   259                        	.member	area,0,10,8,112,26
   260                        	.member	msgType,112,16,8,16
   261                        	.member	enabled,128,14,8,8
   262                        	.eos
   263                        	.stag	_DragData,216,32
   264                        	.member	area,0,10,8,112,26
   265                        	.member	xoffset,112,5,8,16
   266                        	.member	yoffset,128,5,8,16
   267                        	.member	msgType,144,16,8,16
   268                        	.member	ncAction,160,16,8,16
   269                        	.member	isDrag,176,14,8,8
   270                        	.member	isResize,184,14,8,8
   271                        	.member	canDrag,192,14,8,8
   272                        	.member	canDrop,200,14,8,8
   273                        	.member	didDrag,208,14,8,8
  Mon Aug  9 2021 16:52                                                Page 6


   274                        	.eos
   275                        	.stag	_k_WindowStruct,3904,33
   276                        	.member	cbSize,0,16,8,16
   277                        	.member	style,16,18,8,32
   278                        	.member	styleEx,48,18,8,32
   279                        	.member	win_id,80,5,8,16
   280                        	.member	win_x,96,5,8,16
   281                        	.member	win_y,112,5,8,16
   282                        	.member	win_width,128,5,8,16
   283                        	.member	win_height,144,5,8,16
   284                        	.member	win_xoffset,160,5,8,16
   285                        	.member	win_yoffset,176,5,8,16
   286                        	.member	win_cxoffset,192,5,8,16
   287                        	.member	win_cyoffset,208,5,8,16
   288                        	.member	wndRect,224,10,8,112,26
   289                        	.member	clientRect,336,10,8,112,26
   290                        	.member	nonclientGadgets,448,106,8,0,31,16
   291                        	.member	clickable,2624,129,8,32
   292                        	.member	win_title,2656,110,8,0,32
   293                        	.member	Reserved0,2912,16,8,16
   294                        	.member	win_class,2928,110,8,0,16
   295                        	.member	win_class_name,3056,110,8,0,32
   296                        	.member	nBitmapLayer,3312,16,8,16
   297                        	.member	bgRegion,3328,129,8,32
   298                        	.member	procid,3360,18,8,32
   299                        	.member	pWndClass,3392,138,8,32,29
   300                        	.member	pParentWindow,3424,129,8,32
   301                        	.member	hMenu,3456,129,8,32
   302                        	.member	hPointer,3488,129,8,32
   303                        	.member	hBackground,3520,129,8,32
   304                        	.member	pChildWindows,3552,138,8,32,6
   305                        	.member	pChildHitList,3584,138,8,32,6
   306                        	.member	isVisible,3616,14,8,8
   307                        	.member	windowData,3624,129,8,32
   308                        	.member	clientData,3656,1121,8,32,6
   309                        	.member	isClosed,3848,14,8,8
   310                        	.member	isClosing,3856,14,8,8
   311                        	.member	isDesktop,3864,14,8,8
   312                        	.member	clickableNode,3872,138,8,32,5
   313                        	.eos
   314                        	.stag	_k_WindowStructEx,3880,34
   315                        	.member	cbSize,0,16,8,16
   316                        	.member	style,16,18,8,32
   317                        	.member	styleEx,48,18,8,32
   318                        	.member	win_id,80,5,8,16
   319                        	.member	win_x,96,5,8,16
   320                        	.member	win_y,112,5,8,16
   321                        	.member	win_width,128,5,8,16
   322                        	.member	win_height,144,5,8,16
   323                        	.member	win_xoffset,160,5,8,16
   324                        	.member	win_yoffset,176,5,8,16
   325                        	.member	win_cxoffset,192,5,8,16
   326                        	.member	win_cyoffset,208,5,8,16
   327                        	.member	wndRect,224,10,8,112,26
   328                        	.member	clientRect,336,10,8,112,26
   329                        	.member	nonclientGadgets,448,106,8,0,31,16
   330                        	.member	clickable,2624,129,8,32
   331                        	.member	win_title,2656,110,8,0,32
  Mon Aug  9 2021 16:52                                                Page 7


   332                        	.member	Reserved0,2912,16,8,16
   333                        	.member	win_class,2928,110,8,0,16
   334                        	.member	nBitmapLayer,3056,16,8,16
   335                        	.member	procid,3072,18,8,32
   336                        	.member	pWndClass,3104,138,8,32,29
   337                        	.member	pParentWindow,3136,129,8,32
   338                        	.member	hMenu,3168,129,8,32
   339                        	.member	hPointer,3200,129,8,32
   340                        	.member	hBackground,3232,129,8,32
   341                        	.member	pChildWindows,3264,138,8,32,6
   342                        	.member	pChildHitList,3296,138,8,32,6
   343                        	.member	isVisible,3328,14,8,8
   344                        	.member	windowData,3336,129,8,32
   345                        	.member	clientData,3368,1121,8,32,4
   346                        	.member	isClosed,3496,14,8,8
   347                        	.member	hWnd,3504,129,8,32
   348                        	.member	localRect,3536,10,8,112,26
   349                        	.member	globalRect,3648,10,8,112,26
   350                        	.member	clientOffsetRect,3760,10,8,112,26
   351                        	.member	isDesktop,3872,14,8,8
   352                        	.eos
   353                        	.stag	_FontMetric,32,35
   354                        	.member	width,0,5,8,16
   355                        	.member	height,16,5,8,16
   356                        	.eos
   357                        	.stag	_MenuStruct,280,36
   358                        	.member	cx,0,5,8,16
   359                        	.member	cy,16,5,8,16
   360                        	.member	width,32,5,8,16
   361                        	.member	height,48,5,8,16
   362                        	.member	fcolor,64,14,8,8
   363                        	.member	bcolor,72,14,8,8
   364                        	.member	chromeLeft,80,14,8,8
   365                        	.member	chromeRight1,88,14,8,8
   366                        	.member	chromeRight2,96,14,8,8
   367                        	.member	hFont,104,129,8,32
   368                        	.member	itemId,136,16,8,16
   369                        	.member	pCaption,152,142,8,32
   370                        	.member	subMenus,184,138,8,32,6
   371                        	.member	pBackground,216,129,8,32
   372                        	.member	hWndOwner,248,129,8,32
   373                        	.eos
   374                        	.stag	fake37_,160,37
   375                        	.member	menuId,0,16,8,16
   376                        	.member	caption,16,142,8,32
   377                        	.member	rect,48,10,8,112,26
   378                        	.eos
   379                        	.stag	fake38_,5152,38
   380                        	.member	pParent,0,138,8,32,33
   381                        	.member	rect,32,10,8,112,26
   382                        	.member	captions,144,1134,8,32,24
   383                        	.member	chrome,912,110,8,0,24
   384                        	.member	ids,1104,112,8,0,24
   385                        	.member	clickable,1488,106,8,0,30,24
   386                        	.member	selected,5136,16,8,16
   387                        	.eos
   388                        	.stag	_fx_button_t,96,39
   389                        	.member	pCaption,0,142,8,32
  Mon Aug  9 2021 16:52                                                Page 8


   390                        	.member	cCaption,32,16,8,16
   391                        	.member	data,48,129,8,32
   392                        	.member	captionPixelWidth,80,16,8,16
   393                        	.eos
   394                        	.stag	_fx_scrollbar_t,240,40
   395                        	.member	min,0,16,8,16
   396                        	.member	max,16,16,8,16
   397                        	.member	increment,32,16,8,16
   398                        	.member	stopsize,48,16,8,16
   399                        	.member	location,64,5,8,16
   400                        	.member	state,80,5,8,16
   401                        	.member	rectThumb,96,10,8,112,26
   402                        	.member	data,208,129,8,32
   403                        	.eos
   404                        	.stag	_fx_listbox_t,240,41
   405                        	.member	pos,0,5,8,16
   406                        	.member	selected,16,16,8,16
   407                        	.member	offsetX,32,5,8,16
   408                        	.member	offsetY,48,5,8,16
   409                        	.member	inc,64,5,8,16
   410                        	.member	direction,80,5,8,16
   411                        	.member	top,96,5,8,16
   412                        	.member	bottom,112,5,8,16
   413                        	.member	indexTop,128,5,8,16
   414                        	.member	indexBottom,144,5,8,16
   415                        	.member	maxItems,160,16,8,16
   416                        	.member	fontSet,176,142,8,32
   417                        	.member	data,208,129,8,32
   418                        	.eos
   419                        	.stag	_fx_textbox_t,144,42
   420                        	.member	pos,0,5,8,16
   421                        	.member	selected,16,16,8,16
   422                        	.member	offsetX,32,5,8,16
   423                        	.member	offsetY,48,5,8,16
   424                        	.member	isShifted,64,14,8,8
   425                        	.member	cursorState,72,14,8,8
   426                        	.member	fontSet,80,142,8,32
   427                        	.member	data,112,129,8,32
   428                        	.eos
   429                        	.stag	_fx_msgbox_t,144,43
   430                        	.member	pos,0,5,8,16
   431                        	.member	selected,16,16,8,16
   432                        	.member	offsetX,32,5,8,16
   433                        	.member	offsetY,48,5,8,16
   434                        	.member	isShifted,64,14,8,8
   435                        	.member	cursorState,72,14,8,8
   436                        	.member	fontSet,80,142,8,32
   437                        	.member	data,112,129,8,32
   438                        	.eos
   439                        	.stag	_fx_menuAnchor_t,272,44
   440                        	.member	pCaption,0,142,8,32
   441                        	.member	renderLayoutX,32,16,8,16
   442                        	.member	renderLayoutY,48,16,8,16
   443                        	.member	captionPixelWidth,64,16,8,16
   444                        	.member	data,80,129,8,32
   445                        	.member	droppedWindow,112,138,8,32,33
   446                        	.member	bytes,144,110,8,0,16
   447                        	.eos
  Mon Aug  9 2021 16:52                                                Page 9


   448                        	.stag	_SubMenuStruct,64,45
   449                        	.member	caption,0,142,8,32
   450                        	.member	action,32,641,8,32
   451                        	.eos
   452                        	.stag	_SubMenuListStruct,40,46
   453                        	.member	cMenus,0,14,8,8
   454                        	.member	psubmenus,8,9354,8,32,45
   455                        	.eos
   456                        	.stag	_fx_ComBuffer,2080,47
   457                        	.member	cbSize,0,16,8,16
   458                        	.member	cbBuffer,16,16,8,16
   459                        	.member	buffer,32,110,8,0,256
   460                        	.eos
   461                        	.stag	_fx_resource_header,72,48
   462                        	.member	magic,0,110,8,0,4
   463                        	.member	major,32,14,8,8
   464                        	.member	minor,40,14,8,8
   465                        	.member	type,48,14,8,8
   466                        	.member	reserved,56,14,8,8
   467                        	.member	resheaderSize,64,14,8,8
   468                        	.eos
   469                        	.stag	_fx_resource_header_font,144,49
   470                        	.member	title,0,110,8,0,16
   471                        	.member	height,128,14,8,8
   472                        	.member	width,136,14,8,8
   473                        	.eos
   474                        	.stag	_fx_resource_string,32,50
   475                        	.member	locale,0,110,8,0,2
   476                        	.member	entries,16,16,8,16
   477                        	.eos
   478                        	.stag	_fx_resource_string_entry,40,51
   479                        	.member	index,0,16,8,16
   480                        	.member	length,16,16,8,16
   481                        	.member	data,32,14,8,8
   482                        	.eos
   483                        	.line	1064
   484                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxos.h",8
   485                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxstringtable.h",0
   486                        	.line	90
   487                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxos.h",9
   488                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxc256u.h",0
   489                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxtypes.h",0
   490                        	.line	1064
   491                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxc256u.h",5
   492                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fmx_vicky.h",0
   493                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxtypes.h",0
   494                        	.line	1064
   495                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fmx_vicky.h",11
   496                        	.line	72
  Mon Aug  9 2021 16:52                                                Page 10


   497                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxc256u.h",6
   498                        	.line	1960
   499                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxos.h",16
   500                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxkernel.h",0
   501                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxos.h",0
   502                        	.line	30
   503                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxkernel.h",5
   504                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxnode.h",0
   505                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxtypes.h",0
   506                        	.line	1064
   507                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxnode.h",11
   508                        	.line	118
   509                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxkernel.h",6
   510                        	.stag	_fx_api_call_table,8192,52
   511                        	.member	call_table,0,1121,8,32,256
   512                        	.eos
   513                        	.stag	_fx_zero_page_irq_data,32,53
   514                        	.member	data,0,110,8,0,4
   515                        	.eos
   516                        	.stag	_fx_zero_page,720,54
   517                        	.member	fxos_mouse_byte_0,0,14,8,8
   518                        	.member	fxos_mouse_byte_1,8,14,8,8
   519                        	.member	fxos_mouse_byte_2,16,14,8,8
   520                        	.member	fxos_mouse_byte_t,24,14,8,8
   521                        	.member	fxos_mouse_byte_x_l,32,14,8,8
   522                        	.member	fxos_mouse_byte_x_h,40,14,8,8
   523                        	.member	fxos_mouse_byte_y_l,48,14,8,8
   524                        	.member	fxos_mouse_byte_y_h,56,14,8,8
   525                        	.member	fxos_key_byte_0,64,14,8,8
   526                        	.member	fxos_key_byte_1,72,14,8,8
   527                        	.member	fxos_key_byte_2,80,14,8,8
   528                        	.member	fxos_mouse_ctl,88,14,8,8
   529                        	.member	fxos_mouse_index,96,14,8,8
   530                        	.member	fxos_mouse_status,104,14,8,8
   531                        	.member	Endianness,112,16,8,16
   532                        	.member	VersionMajor,128,16,8,16
   533                        	.member	VersionMinor,144,16,8,16
   534                        	.member	VersionRelease,160,16,8,16
   535                        	.member	topMemory,176,18,8,32
   536                        	.member	bottomMemory,208,18,8,32
   537                        	.member	availableMemory,240,18,8,32
   538                        	.member	availableMemoryK,272,18,8,32
   539                        	.member	availableHeapMemory,304,18,8,32
   540                        	.member	availableHeapMemoryK,336,18,8,32
   541                        	.member	fxos_console_row,368,16,8,16
   542                        	.member	fxos_console_col,384,16,8,16
   543                        	.member	executive,400,129,8,32
   544                        	.member	eventmanager,432,129,8,32
   545                        	.member	devicemanager,464,129,8,32
  Mon Aug  9 2021 16:52                                                Page 11


   546                        	.member	windowmanager,496,129,8,32
   547                        	.member	fxos_kernel_api,528,138,8,32,52
   548                        	.member	fxos_dos_api,560,138,8,32,52
   549                        	.member	fxos_gfx_api,592,138,8,32,52
   550                        	.member	fxos_gui_api,624,138,8,32,52
   551                        	.member	fxos_con_api,656,138,8,32,52
   552                        	.member	fxos_reserved_2_api,688,138,8,32,52
   553                        	.eos
   554                        	.stag	_fx_environment,96,55
   555                        	.member	variables,0,142,8,32
   556                        	.member	reserved1,32,5,8,16
   557                        	.member	reserved2,48,5,8,16
   558                        	.member	reserved3,64,5,8,16
   559                        	.member	reserved4,80,5,8,16
   560                        	.eos
   561                        	.stag	_debug_byte_bits,8,56
   562                        	.member	bit7,0,14,17,1
   563                        	.member	bit6,1,14,17,1
   564                        	.member	bit5,2,14,17,1
   565                        	.member	bit4,3,14,17,1
   566                        	.member	bit3,4,14,17,1
   567                        	.member	bit2,5,14,17,1
   568                        	.member	bit1,6,14,17,1
   569                        	.member	bit0,7,14,17,1
   570                        	.eos
   571                        	.stag	_k_segmentheader,160,57
   572                        	.member	version_major,0,14,8,8
   573                        	.member	version_minor,8,14,8,8
   574                        	.member	length,16,5,8,16
   575                        	.member	segment_start_addr,32,7,8,32
   576                        	.member	segment_end_addr,64,7,8,32
   577                        	.member	segment_size,96,7,8,32
   578                        	.member	main_entry_addr,128,7,8,32
   579                        	.eos
   580                        	.stag	_fx_device_driver,776,58
   581                        	.member	name,0,110,8,0,32
   582                        	.member	version,256,110,8,0,16
   583                        	.member	hmajor,384,110,8,0,8
   584                        	.member	hminor,448,110,8,0,8
   585                        	.member	type,512,14,8,8
   586                        	.member	designation,520,110,8,0,6
   587                        	.member	irq_ctl,568,16,8,16
   588                        	.member	f_driver_irq,584,129,8,32
   589                        	.member	driver_context,616,129,8,32
   590                        	.member	f_driver_load,648,129,8,32
   591                        	.member	f_driver_read,680,129,8,32
   592                        	.member	f_driver_write,712,129,8,32
   593                        	.member	f_driver_unload,744,129,8,32
   594                        	.eos
   595                        	.stag	_fx_block_device_driver,808,59
   596                        	.member	name,0,110,8,0,32
   597                        	.member	version,256,110,8,0,16
   598                        	.member	hmajor,384,110,8,0,8
   599                        	.member	hminor,448,110,8,0,8
   600                        	.member	type,512,14,8,8
   601                        	.member	designation,520,110,8,0,6
   602                        	.member	irq_ctl,568,16,8,16
   603                        	.member	f_driver_irq,584,129,8,32
  Mon Aug  9 2021 16:52                                                Page 12


   604                        	.member	driver_context,616,129,8,32
   605                        	.member	f_driver_load,648,129,8,32
   606                        	.member	f_driver_read,680,129,8,32
   607                        	.member	f_driver_write,712,129,8,32
   608                        	.member	f_driver_unload,744,129,8,32
   609                        	.member	f_driver_command,776,129,8,32
   610                        	.eos
   611                        	.stag	_k_irq_chain,128,60
   612                        	.member	handlers,0,5217,8,32,4
   613                        	.eos
   614                        	.line	490
   615                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxos.h",22
   616                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxconsole.h",0
   617                        	.file	"G:\devtools\WDCTools\wdc\Tools\include\
                    string.h",0
   618                        	.line	134
   619                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxconsole.h",5
   620                        	.file	"G:\devtools\WDCTools\wdc\Tools\include\
                    stdlib.h",0
   621                        	.line	205
   622                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxconsole.h",6
   623                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxtypes.h",0
   624                        	.line	1064
   625                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxconsole.h",7
   626                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxc256u.h",0
   627                        	.line	1960
   628                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxconsole.h",12
   629                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxstring.h",0
   630                        	.file	"G:\devtools\WDCTools\wdc\Tools\include\
                    stdlib.h",0
   631                        	.line	205
   632                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxstring.h",5
   633                        	.file	"G:\devtools\WDCTools\wdc\Tools\include\
                    string.h",0
   634                        	.line	134
   635                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxstring.h",6
   636                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxtypes.h",0
   637                        	.line	1064
   638                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxstring.h",7
   639                        	.stag	_fx_string,64,61
   640                        	.member	size,0,16,8,16
   641                        	.member	pos,16,5,8,16
   642                        	.member	buffer,32,142,8,32
   643                        	.eos
   644                        	.line	141
  Mon Aug  9 2021 16:52                                                Page 13


   645                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxconsole.h",17
   646                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxeventmanager.h",0
   647                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxos.h",0
   648                        	.line	30
   649                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxeventmanager.h",5
   650                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxexec.h",0
   651                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxtypes.h",0
   652                        	.line	1064
   653                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxexec.h",5
   654                        	.stag	_fxos_executive_vtable,128,62
   655                        	.member	Init,0,8833,8,32
   656                        	.member	Configure,32,656,8,32
   657                        	.member	Query,64,656,8,32
   658                        	.member	Uninit,96,641,8,32
   659                        	.eos
   660                        	.line	86
   661                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxeventmanager.h",6
   662                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxnode.h",0
   663                        	.line	118
   664                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxeventmanager.h",7
   665                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxconsole.h",0
   666                        	.line	208
   667                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxeventmanager.h",8
   668                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxwindowmanager.h",0
   669                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxos.h",0
   670                        	.line	30
   671                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxwindowmanager.h",5
   672                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxmemorymanager.h",0
   673                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxos.h",0
   674                        	.line	30
   675                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxmemorymanager.h",5
   676                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\umm_malloc_cfg.h",0
   677                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxos_build_parameters.h",0
   678                        	.line	35
   679                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\umm_malloc_cfg.h",8
   680                        	.stag	UMM_HEAP_INFO_t,256,63
   681                        	.member	totalEntries,0,18,8,32
  Mon Aug  9 2021 16:52                                                Page 14


   682                        	.member	usedEntries,32,18,8,32
   683                        	.member	freeEntries,64,18,8,32
   684                        	.member	totalBlocks,96,18,8,32
   685                        	.member	usedBlocks,128,18,8,32
   686                        	.member	freeBlocks,160,18,8,32
   687                        	.member	maxFreeContiguousBlocks,192,18,8,32
   688                        	.member	blockSize,224,18,8,32
   689                        	.eos
   690                        	.line	199
   691                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxmemorymanager.h",6
   692                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\umm_malloc.h",0
   693                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxtypes.h",0
   694                        	.line	1064
   695                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\umm_malloc.h",11
   696                        	.line	24
   697                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxmemorymanager.h",7
   698                        	.stag	_fx_memory_map,2072,64
   699                        	.member	availableMemory,0,18,8,32
   700                        	.member	valid_segments,32,110,8,0,255
   701                        	.eos
   702                        	.stag	_fx_ipc_port,144,65
   703                        	.member	id,0,18,8,32
   704                        	.member	type,32,14,8,8
   705                        	.member	name,40,138,8,32,61
   706                        	.member	time,72,18,8,32
   707                        	.member	queue,104,138,8,32,7
   708                        	.member	reserved_1,136,14,8,8
   709                        	.eos
   710                        	.stag	_k_mem_alloc_header,80,66
   711                        	.member	user,0,14,8,8
   712                        	.member	attr,8,14,8,8
   713                        	.member	size,16,18,8,32
   714                        	.member	virtual,48,129,8,32
   715                        	.eos
   716                        	.line	129
   717                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxwindowmanager.h",6
   718                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxeventmanager.h",0
   719                        	.line	568
   720                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxwindowmanager.h",7
   721                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxgfx.h",0
   722                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxfont.h",0
   723                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxtypes.h",0
   724                        	.line	1064
   725                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxfont.h",6
   726                        	.line	74
   727                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
  Mon Aug  9 2021 16:52                                                Page 15


                    space\FXOS-Beta\src\fxgfx.h",5
   728                        	.stag	_click_detected,64,67
   729                        	.member	window,0,138,8,32,33
   730                        	.member	handler,32,641,8,32
   731                        	.eos
   732                        	.stag	_current_palette_map,400,68
   733                        	.member	CUR_DESKTOP,0,5,8,16
   734                        	.member	CUR_BACKGROUND,16,5,8,16
   735                        	.member	CUR_FONT,32,5,8,16
   736                        	.member	CUR_SELECTED_FONT,48,5,8,16
   737                        	.member	CUR_HIGHLIGHT_COLOR,64,5,8,16
   738                        	.member	CUR_WINDOWFRAME,80,5,8,16
   739                        	.member	CUR_WINDOWBORDER,96,5,8,16
   740                        	.member	CUR_WINDOWSHADOW,112,5,8,16
   741                        	.member	CUR_MENU,128,5,8,16
   742                        	.member	CUR_GADGET,144,5,8,16
   743                        	.member	CUR_COLOR,160,101,8,0,15
   744                        	.eos
   745                        	.line	359
   746                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxwindowmanager.h",8
   747                        	.stag	_fxos_winman_vtable,160,69
   748                        	.member	Events,0,641,8,32
   749                        	.member	ConfigureWindowManager,32,656,8,32
   750                        	.member	ProcessWindowEvent,64,8833,8,32
   751                        	.member	QueryWindowManager,96,656,8,32
   752                        	.member	DoWndProcs,128,641,8,32
   753                        	.eos
   754                        	.stag	fake70_,64,70
   755                        	.member	type,0,16,8,16
   756                        	.member	size,16,16,8,16
   757                        	.member	desktopAction,32,129,8,32
   758                        	.eos
   759                        	.stag	fake71_,96,71
   760                        	.member	type,0,16,8,16
   761                        	.member	caption,16,138,8,32,61
   762                        	.member	buttonType,48,16,8,16
   763                        	.member	x,64,5,8,16
   764                        	.member	y,80,5,8,16
   765                        	.eos
   766                        	.stag	_childMessage_t,64,72
   767                        	.member	msgType,0,16,8,16
   768                        	.member	msgData,16,129,8,32
   769                        	.member	dataSize,48,16,8,16
   770                        	.eos
   771                        	.line	594
   772                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxeventmanager.h",9
   773                        	.stag	_fx_main_loopvars,16,73
   774                        	.member	dummy,0,5,8,16
   775                        	.eos
   776                        	.stag	_fxMouseMessageData,64,74
   777                        	.member	button1,0,14,8,8
   778                        	.member	button2,8,14,8,8
   779                        	.member	button3,16,14,8,8
   780                        	.member	button4,24,14,8,8
   781                        	.member	x,32,16,8,16
   782                        	.member	y,48,16,8,16
  Mon Aug  9 2021 16:52                                                Page 16


   783                        	.eos
   784                        	.utag	marshalled_data,32,75
   785                        	.member	byteValue,0,14,11,8
   786                        	.member	verbValue,0,110,11,0,2
   787                        	.member	intValue,0,16,11,16
   788                        	.member	longValue,0,18,11,32
   789                        	.member	pointerValue,0,129,11,32
   790                        	.eos
   791                        	.stag	_fx_eventProcess,64,76
   792                        	.member	process,0,138,8,32,20
   793                        	.member	eventProc,32,641,8,32
   794                        	.eos
   795                        	.stag	_mouse_msg_state,184,77
   796                        	.member	lastEvent,0,18,8,32
   797                        	.member	buttonLeftDown,32,14,8,8
   798                        	.member	lastLeftDown,40,18,8,32
   799                        	.member	buttonRightDown,72,14,8,8
   800                        	.member	lastRightDown,80,18,8,32
   801                        	.member	buttonMiddleDown,112,14,8,8
   802                        	.member	lastMiddleDown,120,18,8,32
   803                        	.member	lastX,152,16,8,16
   804                        	.member	lastY,168,16,8,16
   805                        	.eos
   806                        	.stag	_fxos_eventmanager_vtable,192,78
   807                        	.member	EventQueue,0,138,8,32,7
   808                        	.member	Init,32,8833,8,32
   809                        	.member	Run,64,656,8,32
   810                        	.member	Configure,96,656,8,32
   811                        	.member	Query,128,656,8,32
   812                        	.member	Uninit,160,641,8,32
   813                        	.eos
   814                        	.stag	_k_clipboard_data,168,79
   815                        	.member	type,0,14,8,8
   816                        	.member	readable,8,110,8,0,16
   817                        	.member	data,136,129,8,32
   818                        	.eos
   819                        	.line	568
   820                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxconsole.h",18
   821                        	.stag	_fx_spinner_ctx,48,80
   822                        	.member	index,0,5,8,16
   823                        	.member	spinner,16,142,8,32
   824                        	.eos
   825                        	.stag	_fx_console_ctx,1144,81
   826                        	.member	lineBufferIndex,0,5,8,16
   827                        	.member	lineBuffer,16,110,8,0,128
   828                        	.member	isShifted,1040,14,8,8
   829                        	.member	userData,1048,129,8,32
   830                        	.member	screenBuffer,1080,129,8,32
   831                        	.member	Reserved1,1112,129,8,32
   832                        	.eos
   833                        	.stag	_token,64,82
   834                        	.member	type,0,5,8,16
   835                        	.member	depth,16,16,8,16
   836                        	.member	text,32,142,8,32
   837                        	.eos
   838                        	.stag	_command_args,64,83
   839                        	.member	proc,0,656,8,32
  Mon Aug  9 2021 16:52                                                Page 17


   840                        	.member	tokens,32,138,8,32,5
   841                        	.eos
   842                        	.line	208
   843                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxos.h",23
   844                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxstring.h",0
   845                        	.line	141
   846                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxos.h",24
   847                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxnode.h",0
   848                        	.line	118
   849                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxos.h",25
   850                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\ff/ff.h",0
   851                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\ff/ffconf.h",0
   852                        	.line	298
   853                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\ff/ff.h",29
   854                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxtypes.h",0
   855                        	.line	1064
   856                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\ff/ff.h",30
   857                        	.stag	fake84_,4504,84
   858                        	.member	fs_type,0,14,8,8
   859                        	.member	pdrv,8,14,8,8
   860                        	.member	n_fats,16,14,8,8
   861                        	.member	wflag,24,14,8,8
   862                        	.member	fsi_flag,32,14,8,8
   863                        	.member	id,40,5,8,16
   864                        	.member	n_rootdir,56,5,8,16
   865                        	.member	csize,72,5,8,16
   866                        	.member	lfnbuf,88,144,8,32
   867                        	.member	last_clst,120,18,8,32
   868                        	.member	free_clst,152,18,8,32
   869                        	.member	n_fatent,184,18,8,32
   870                        	.member	fsize,216,18,8,32
   871                        	.member	volbase,248,18,8,32
   872                        	.member	fatbase,280,18,8,32
   873                        	.member	dirbase,312,18,8,32
   874                        	.member	database,344,18,8,32
   875                        	.member	winsect,376,18,8,32
   876                        	.member	win,408,110,8,0,512
   877                        	.eos
   878                        	.stag	fake85_,128,85
   879                        	.member	fs,0,138,8,32,84
   880                        	.member	id,32,5,8,16
   881                        	.member	attr,48,14,8,8
   882                        	.member	stat,56,14,8,8
   883                        	.member	sclust,64,18,8,32
   884                        	.member	objsize,96,18,8,32
   885                        	.eos
   886                        	.stag	fake86_,4400,86
   887                        	.member	obj,0,10,8,128,85
  Mon Aug  9 2021 16:52                                                Page 18


   888                        	.member	flag,128,14,8,8
   889                        	.member	err,136,14,8,8
   890                        	.member	fptr,144,18,8,32
   891                        	.member	clust,176,18,8,32
   892                        	.member	sect,208,18,8,32
   893                        	.member	dir_sect,240,18,8,32
   894                        	.member	dir_ptr,272,142,8,32
   895                        	.member	buf,304,110,8,0,512
   896                        	.eos
   897                        	.stag	fake87_,416,87
   898                        	.member	obj,0,10,8,128,85
   899                        	.member	dptr,128,18,8,32
   900                        	.member	clust,160,18,8,32
   901                        	.member	sect,192,18,8,32
   902                        	.member	dir,224,142,8,32
   903                        	.member	fn,256,110,8,0,12
   904                        	.member	blk_ofs,352,18,8,32
   905                        	.member	pat,384,142,8,32
   906                        	.eos
   907                        	.stag	fake88_,2224,88
   908                        	.member	fsize,0,18,8,32
   909                        	.member	fdate,32,5,8,16
   910                        	.member	ftime,48,5,8,16
   911                        	.member	fattrib,64,14,8,8
   912                        	.member	altname,72,110,8,0,13
   913                        	.member	fname,176,110,8,0,256
   914                        	.eos
   915                        	.stag	fake89_,80,89
   916                        	.member	fmt,0,14,8,8
   917                        	.member	n_fat,8,14,8,8
   918                        	.member	align,16,16,8,16
   919                        	.member	n_root,32,16,8,16
   920                        	.member	au_size,48,18,8,32
   921                        	.eos
   922                        	.line	429
   923                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxos.h",26
   924                        	.line	30
   925                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxmain.c",3
   926                        ;#include "fxdos.h"
   927                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxdos.h",0
   928                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxtypes.h",0
   929                        	.line	1064
   930                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxdos.h",5
   931                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\ff/ff.h",0
   932                        	.line	429
   933                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxdos.h",6
   934                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\diskio.h",0
   935                        	.line	85
   936                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxdos.h",7
  Mon Aug  9 2021 16:52                                                Page 19


   937                        	.stag	_fx_sd_direntry,256,90
   938                        	.member	filename,0,110,8,0,11
   939                        	.member	type,88,14,8,8
   940                        	.member	attrs,96,110,8,0,20
   941                        	.eos
   942                        	.stag	_fx_info,416,91
   943                        	.member	stgName,0,110,8,0,32
   944                        	.member	Reserved1,256,14,8,8
   945                        	.member	stgType,264,16,8,16
   946                        	.member	Reserved2,280,14,8,8
   947                        	.member	stgReserved,288,110,8,0,16
   948                        	.eos
   949                        	.stag	_fx_fileinfo,136,92
   950                        	.member	type,0,14,8,8
   951                        	.member	pFilename,8,142,8,32
   952                        	.member	lSize,40,18,8,32
   953                        	.member	lcreateDate,72,18,8,32
   954                        	.member	lchangeDate,104,18,8,32
   955                        	.eos
   956                        	.stag	_FX_FAT_DIR_INFO,256,93
   957                        	.member	DIR_Name,0,110,8,0,11
   958                        	.member	DIR_Attr,88,14,8,8
   959                        	.member	DIR_NTRes,96,14,8,8
   960                        	.member	DIR_CrtTimeTenth,104,14,8,8
   961                        	.member	DIR_CrtTime,112,16,8,16
   962                        	.member	DIR_CrtDate,128,16,8,16
   963                        	.member	DIR_LstAccDate,144,16,8,16
   964                        	.member	DIR_FstClusHI,160,16,8,16
   965                        	.member	DIR_WrtTime,176,16,8,16
   966                        	.member	DIR_WrtDate,192,16,8,16
   967                        	.member	DIR_FstClusLO,208,16,8,16
   968                        	.member	DIR_FileSize,224,18,8,32
   969                        	.eos
   970                        	.stag	fat_extBS_32,416,94
   971                        	.member	table_size_32,0,18,8,32
   972                        	.member	extended_flags,32,16,8,16
   973                        	.member	fat_version,48,16,8,16
   974                        	.member	root_cluster,64,18,8,32
   975                        	.member	fat_info,96,16,8,16
   976                        	.member	backup_BS_sector,112,16,8,16
   977                        	.member	reserved_0,128,110,8,0,12
   978                        	.member	drive_number,224,14,8,8
   979                        	.member	reserved_1,232,14,8,8
   980                        	.member	boot_signature,240,14,8,8
   981                        	.member	volume_id,248,16,8,16
   982                        	.member	volume_label,264,110,8,0,11
   983                        	.member	fat_type_label,352,110,8,0,8
   984                        	.eos
   985                        	.stag	fat_extBS_16,192,95
   986                        	.member	bios_drive_num,0,14,8,8
   987                        	.member	reserved1,8,14,8,8
   988                        	.member	boot_signature,16,14,8,8
   989                        	.member	volume_id,24,16,8,16
   990                        	.member	volume_label,40,110,8,0,11
   991                        	.member	fat_type_label,128,110,8,0,8
   992                        	.eos
   993                        	.stag	fat_BS,688,96
   994                        	.member	bootjmp,0,110,8,0,3
  Mon Aug  9 2021 16:52                                                Page 20


   995                        	.member	oem_name,24,110,8,0,8
   996                        	.member	bytes_per_sector,88,16,8,16
   997                        	.member	sectors_per_cluster,104,14,8,8
   998                        	.member	reserved_sector_count,112,16,8,16
   999                        	.member	table_count,128,14,8,8
  1000                        	.member	root_entry_count,136,16,8,16
  1001                        	.member	total_sectors_16,152,16,8,16
  1002                        	.member	media_type,168,14,8,8
  1003                        	.member	table_size_16,176,16,8,16
  1004                        	.member	sectors_per_track,192,16,8,16
  1005                        	.member	head_side_count,208,16,8,16
  1006                        	.member	hidden_sector_count,224,16,8,16
  1007                        	.member	total_sectors_32,240,16,8,16
  1008                        	.member	extended_section,256,110,8,0,54
  1009                        	.eos
  1010                        	.stag	__FATBootSector,928,97
  1011                        	.member	bootjmp,0,110,8,0,3
  1012                        	.member	oem_name,24,110,8,0,8
  1013                        	.member	bytes_per_sector,88,16,8,16
  1014                        	.member	sectors_per_cluster,104,14,8,8
  1015                        	.member	reserved_sector_count,112,16,8,16
  1016                        	.member	fat_table_count,128,14,8,8
  1017                        	.member	root_entry_count,136,16,8,16
  1018                        	.member	total_sectors_16,152,16,8,16
  1019                        	.member	media_type,168,14,8,8
  1020                        	.member	sectors_per_fat,176,16,8,16
  1021                        	.member	sectors_per_track,192,16,8,16
  1022                        	.member	head_side_count,208,16,8,16
  1023                        	.member	hidden_sector_count,224,18,8,32
  1024                        	.member	total_sectors_32,256,18,8,32
  1025                        	.member	drive_number,288,14,8,8
  1026                        	.member	reserved1,296,14,8,8
  1027                        	.member	boot_sig,304,14,8,8
  1028                        	.member	vol_id,312,18,8,32
  1029                        	.member	vol_name,344,110,8,0,11
  1030                        	.member	file_system_type,432,110,8,0,8
  1031                        	.member	extended_section,496,110,8,0,54
  1032                        	.eos
  1033                        	.stag	__PARTITIONTABLE,128,98
  1034                        	.member	first_byte,0,14,8,8
  1035                        	.member	start_chs,8,110,8,0,3
  1036                        	.member	partition_type,32,14,8,8
  1037                        	.member	end_chs,40,110,8,0,3
  1038                        	.member	start_sector,64,18,8,32
  1039                        	.member	length_sectors,96,18,8,32
  1040                        	.eos
  1041                        	.stag	fake99_,4096,99
  1042                        	.member	jmp,0,110,8,0,3
  1043                        	.member	oem,24,110,8,0,8
  1044                        	.member	sector_size,88,15,8,16
  1045                        	.member	sectors_per_cluster,104,14,8,8
  1046                        	.member	reserved_sectors,112,15,8,16
  1047                        	.member	number_ok_dos_fats,128,14,8,8
  1048                        	.member	root_dir_entries,136,15,8,16
  1049                        	.member	total_sectors_short,152,15,8,16
  1050                        	.member	media_descriptor,168,14,8,8
  1051                        	.member	fat_size_sectors,176,15,8,16
  1052                        	.member	sectors_per_track,192,15,8,16
  Mon Aug  9 2021 16:52                                                Page 21


  1053                        	.member	number_ok_dos_heads,208,15,8,16
  1054                        	.member	hidden_sectors,224,18,8,32
  1055                        	.member	total_sectors_long,256,18,8,32
  1056                        	.member	drive_number,288,14,8,8
  1057                        	.member	current_head,296,14,8,8
  1058                        	.member	boot_signature,304,14,8,8
  1059                        	.member	volume_id,312,18,8,32
  1060                        	.member	volume_label,344,110,8,0,11
  1061                        	.member	fs_type,432,110,8,0,8
  1062                        	.member	boot_code,496,110,8,0,448
  1063                        	.member	boot_sector_signature,4080,15,8,16
  1064                        	.eos
  1065                        	.stag	__FAT16ENTRY,256,100
  1066                        	.member	filename,0,110,8,0,8
  1067                        	.member	ext,64,110,8,0,3
  1068                        	.member	attributes,88,14,8,8
  1069                        	.member	reserved,96,110,8,0,10
  1070                        	.member	modify_time,176,16,8,16
  1071                        	.member	modify_date,192,16,8,16
  1072                        	.member	starting_cluster,208,16,8,16
  1073                        	.member	file_size,224,18,8,32
  1074                        	.eos
  1075                        	.stag	__FAT16ENTRYLONG,288,101
  1076                        	.member	filename,0,110,8,0,8
  1077                        	.member	ext,64,110,8,0,3
  1078                        	.member	attributes,88,14,8,8
  1079                        	.member	reserved,96,110,8,0,10
  1080                        	.member	modify_time,176,16,8,16
  1081                        	.member	modify_date,192,16,8,16
  1082                        	.member	starting_cluster,208,16,8,16
  1083                        	.member	file_size,224,18,8,32
  1084                        	.member	plongfileName,256,142,8,32
  1085                        	.eos
  1086                        	.stag	_LongFileName,256,102
  1087                        	.member	sequenceNo,0,14,8,8
  1088                        	.member	fileName_Part1,8,110,8,0,10
  1089                        	.member	fileattribute,88,14,8,8
  1090                        	.member	type,96,14,8,8
  1091                        	.member	checksum,104,14,8,8
  1092                        	.member	fileName_Part2,112,110,8,0,12
  1093                        	.member	fstclusLO,208,5,8,16
  1094                        	.member	fileName_Part3,224,110,8,0,4
  1095                        	.eos
  1096                        	.stag	_IDSECTOR,2048,103
  1097                        	.member	wGenConfig,0,16,8,16
  1098                        	.member	wNumCyls,16,16,8,16
  1099                        	.member	wReserved,32,16,8,16
  1100                        	.member	wNumHeads,48,16,8,16
  1101                        	.member	wBytesPerTrack,64,16,8,16
  1102                        	.member	wBytesPerSector,80,16,8,16
  1103                        	.member	wSectorsPerTrack,96,16,8,16
  1104                        	.member	wVendorUnique,112,112,8,0,3
  1105                        	.member	sSerialNumber,160,110,8,0,20
  1106                        	.member	wBufferType,320,16,8,16
  1107                        	.member	wBufferSize,336,16,8,16
  1108                        	.member	wECCSize,352,16,8,16
  1109                        	.member	sFirmwareRev,368,110,8,0,8
  1110                        	.member	sModelNumber,432,110,8,0,40
  Mon Aug  9 2021 16:52                                                Page 22


  1111                        	.member	wMoreVendorUnique,752,16,8,16
  1112                        	.member	wDoubleWordIO,768,16,8,16
  1113                        	.member	wCapabilities,784,16,8,16
  1114                        	.member	wReserved1,800,16,8,16
  1115                        	.member	wPIOTiming,816,16,8,16
  1116                        	.member	wDMATiming,832,16,8,16
  1117                        	.member	wBS,848,16,8,16
  1118                        	.member	wNumCurrentCyls,864,16,8,16
  1119                        	.member	wNumCurrentHeads,880,16,8,16
  1120                        	.member	wNumCurrentSectorsPerTrack,896,16,8,16
  1121                        	.member	ulCurrentSectorCapacity,912,18,8,32
  1122                        	.member	wMultSectorStuff,944,16,8,16
  1123                        	.member	ulTotalAddressableSectors,960,18,8,32
  1124                        	.member	wSingleWordDMA,992,16,8,16
  1125                        	.member	wMultiWordDMA,1008,16,8,16
  1126                        	.member	bReserved,1024,110,8,0,128
  1127                        	.eos
  1128                        	.stag	fake104_,16,104
  1129                        	.member	Reserved1,0,16,17,1
  1130                        	.member	Retired3,1,16,17,1
  1131                        	.member	ResponseIncomplete,2,16,17,1
  1132                        	.member	Retired2,3,16,17,3
  1133                        	.member	FixedDevice,6,16,17,1
  1134                        	.member	RemovableMedia,7,16,17,1
  1135                        	.member	Retired1,8,16,17,7
  1136                        	.member	DeviceType,15,16,17,1
  1137                        	.eos
  1138                        	.stag	fake105_,16,105
  1139                        	.member	FeatureSupported,0,16,17,1
  1140                        	.member	Reserved,1,16,17,15
  1141                        	.eos
  1142                        	.stag	fake106_,32,106
  1143                        	.member	CurrentLongPhysicalSectorAlignment,0,14,
                    17,2
  1144                        	.member	ReservedByte49,2,14,17,6
  1145                        	.member	DmaSupported,8,14,17,1
  1146                        	.member	LbaSupported,9,14,17,1
  1147                        	.member	IordyDisable,10,14,17,1
  1148                        	.member	IordySupported,11,14,17,1
  1149                        	.member	Reserved1,12,14,17,1
  1150                        	.member	StandybyTimerSupport,13,14,17,1
  1151                        	.member	Reserved2,14,14,17,2
  1152                        	.member	ReservedWord50,16,16,8,16
  1153                        	.eos
  1154                        	.stag	fake107_,16,107
  1155                        	.member	ZonedCapabilities,0,16,17,2
  1156                        	.member	NonVolatileWriteCache,2,16,17,1
  1157                        	.member	ExtendedUserAddressableSectorsSupported,
                    3,16,17,1
  1158                        	.member	DeviceEncryptsAllUserData,4,16,17,1
  1159                        	.member	ReadZeroAfterTrimSupported,5,16,17,1
  1160                        	.member	Optional28BitCommandsSupported,6,16,17,1
  1161                        	.member	IEEE1667,7,16,17,1
  1162                        	.member	DownloadMicrocodeDmaSupported,8,16,17,1
  1163                        	.member	SetMaxSetPasswordUnlockDmaSupported,9,16
                    ,17,1
  1164                        	.member	WriteBufferDmaSupported,10,16,17,1
  1165                        	.member	ReadBufferDmaSupported,11,16,17,1
  Mon Aug  9 2021 16:52                                                Page 23


  1166                        	.member	DeviceConfigIdentifySetDmaSupported,12,1
                    6,17,1
  1167                        	.member	LPSAERCSupported,13,16,17,1
  1168                        	.member	DeterministicReadAfterTrimSupported,14,1
                    6,17,1
  1169                        	.member	CFastSpecSupported,15,16,17,1
  1170                        	.eos
  1171                        	.stag	fake108_,32,108
  1172                        	.member	Reserved0,0,16,17,1
  1173                        	.member	SataGen1,1,16,17,1
  1174                        	.member	SataGen2,2,16,17,1
  1175                        	.member	SataGen3,3,16,17,1
  1176                        	.member	Reserved1,4,16,17,4
  1177                        	.member	NCQ,8,16,17,1
  1178                        	.member	HIPM,9,16,17,1
  1179                        	.member	PhyEvents,10,16,17,1
  1180                        	.member	NcqUnload,11,16,17,1
  1181                        	.member	NcqPriority,12,16,17,1
  1182                        	.member	HostAutoPS,13,16,17,1
  1183                        	.member	DeviceAutoPS,14,16,17,1
  1184                        	.member	ReadLogDMA,15,16,17,1
  1185                        	.member	Reserved2,16,16,17,1
  1186                        	.member	CurrentSpeed,17,16,17,3
  1187                        	.member	NcqStreaming,20,16,17,1
  1188                        	.member	NcqQueueMgmt,21,16,17,1
  1189                        	.member	NcqReceiveSend,22,16,17,1
  1190                        	.member	DEVSLPtoReducedPwrState,23,16,17,1
  1191                        	.member	Reserved3,24,16,17,8
  1192                        	.eos
  1193                        	.stag	fake109_,16,109
  1194                        	.member	Reserved0,0,16,17,1
  1195                        	.member	NonZeroOffsets,1,16,17,1
  1196                        	.member	DmaSetupAutoActivate,2,16,17,1
  1197                        	.member	DIPM,3,16,17,1
  1198                        	.member	InOrderData,4,16,17,1
  1199                        	.member	HardwareFeatureControl,5,16,17,1
  1200                        	.member	SoftwareSettingsPreservation,6,16,17,1
  1201                        	.member	NCQAutosense,7,16,17,1
  1202                        	.member	DEVSLP,8,16,17,1
  1203                        	.member	HybridInformation,9,16,17,1
  1204                        	.member	Reserved1,10,16,17,6
  1205                        	.eos
  1206                        	.stag	fake110_,16,110
  1207                        	.member	Reserved0,0,16,17,1
  1208                        	.member	NonZeroOffsets,1,16,17,1
  1209                        	.member	DmaSetupAutoActivate,2,16,17,1
  1210                        	.member	DIPM,3,16,17,1
  1211                        	.member	InOrderData,4,16,17,1
  1212                        	.member	HardwareFeatureControl,5,16,17,1
  1213                        	.member	SoftwareSettingsPreservation,6,16,17,1
  1214                        	.member	DeviceAutoPS,7,16,17,1
  1215                        	.member	DEVSLP,8,16,17,1
  1216                        	.member	HybridInformation,9,16,17,1
  1217                        	.member	Reserved1,10,16,17,6
  1218                        	.eos
  1219                        	.stag	fake111_,48,111
  1220                        	.member	SmartCommands,0,16,17,1
  1221                        	.member	SecurityMode,1,16,17,1
  Mon Aug  9 2021 16:52                                                Page 24


  1222                        	.member	RemovableMediaFeature,2,16,17,1
  1223                        	.member	PowerManagement,3,16,17,1
  1224                        	.member	Reserved1,4,16,17,1
  1225                        	.member	WriteCache,5,16,17,1
  1226                        	.member	LookAhead,6,16,17,1
  1227                        	.member	ReleaseInterrupt,7,16,17,1
  1228                        	.member	ServiceInterrupt,8,16,17,1
  1229                        	.member	DeviceReset,9,16,17,1
  1230                        	.member	HostProtectedArea,10,16,17,1
  1231                        	.member	Obsolete1,11,16,17,1
  1232                        	.member	WriteBuffer,12,16,17,1
  1233                        	.member	ReadBuffer,13,16,17,1
  1234                        	.member	Nop,14,16,17,1
  1235                        	.member	Obsolete2,15,16,17,1
  1236                        	.member	DownloadMicrocode,16,16,17,1
  1237                        	.member	DmaQueued,17,16,17,1
  1238                        	.member	Cfa,18,16,17,1
  1239                        	.member	AdvancedPm,19,16,17,1
  1240                        	.member	Msn,20,16,17,1
  1241                        	.member	PowerUpInStandby,21,16,17,1
  1242                        	.member	ManualPowerUp,22,16,17,1
  1243                        	.member	Reserved2,23,16,17,1
  1244                        	.member	SetMax,24,16,17,1
  1245                        	.member	Acoustics,25,16,17,1
  1246                        	.member	BigLba,26,16,17,1
  1247                        	.member	DeviceConfigOverlay,27,16,17,1
  1248                        	.member	FlushCache,28,16,17,1
  1249                        	.member	FlushCacheExt,29,16,17,1
  1250                        	.member	WordValid83,30,16,17,2
  1251                        	.member	SmartErrorLog,32,16,17,1
  1252                        	.member	SmartSelfTest,33,16,17,1
  1253                        	.member	MediaSerialNumber,34,16,17,1
  1254                        	.member	MediaCardPassThrough,35,16,17,1
  1255                        	.member	StreamingFeature,36,16,17,1
  1256                        	.member	GpLogging,37,16,17,1
  1257                        	.member	WriteFua,38,16,17,1
  1258                        	.member	WriteQueuedFua,39,16,17,1
  1259                        	.member	WWN64Bit,40,16,17,1
  1260                        	.member	URGReadStream,41,16,17,1
  1261                        	.member	URGWriteStream,42,16,17,1
  1262                        	.member	ReservedForTechReport,43,16,17,2
  1263                        	.member	IdleWithUnloadFeature,45,16,17,1
  1264                        	.member	WordValid,46,16,17,2
  1265                        	.eos
  1266                        	.stag	fake112_,48,112
  1267                        	.member	SmartCommands,0,16,17,1
  1268                        	.member	SecurityMode,1,16,17,1
  1269                        	.member	RemovableMediaFeature,2,16,17,1
  1270                        	.member	PowerManagement,3,16,17,1
  1271                        	.member	Reserved1,4,16,17,1
  1272                        	.member	WriteCache,5,16,17,1
  1273                        	.member	LookAhead,6,16,17,1
  1274                        	.member	ReleaseInterrupt,7,16,17,1
  1275                        	.member	ServiceInterrupt,8,16,17,1
  1276                        	.member	DeviceReset,9,16,17,1
  1277                        	.member	HostProtectedArea,10,16,17,1
  1278                        	.member	Obsolete1,11,16,17,1
  1279                        	.member	WriteBuffer,12,16,17,1
  Mon Aug  9 2021 16:52                                                Page 25


  1280                        	.member	ReadBuffer,13,16,17,1
  1281                        	.member	Nop,14,16,17,1
  1282                        	.member	Obsolete2,15,16,17,1
  1283                        	.member	DownloadMicrocode,16,16,17,1
  1284                        	.member	DmaQueued,17,16,17,1
  1285                        	.member	Cfa,18,16,17,1
  1286                        	.member	AdvancedPm,19,16,17,1
  1287                        	.member	Msn,20,16,17,1
  1288                        	.member	PowerUpInStandby,21,16,17,1
  1289                        	.member	ManualPowerUp,22,16,17,1
  1290                        	.member	Reserved2,23,16,17,1
  1291                        	.member	SetMax,24,16,17,1
  1292                        	.member	Acoustics,25,16,17,1
  1293                        	.member	BigLba,26,16,17,1
  1294                        	.member	DeviceConfigOverlay,27,16,17,1
  1295                        	.member	FlushCache,28,16,17,1
  1296                        	.member	FlushCacheExt,29,16,17,1
  1297                        	.member	Resrved3,30,16,17,1
  1298                        	.member	Words119_120Valid,31,16,17,1
  1299                        	.member	SmartErrorLog,32,16,17,1
  1300                        	.member	SmartSelfTest,33,16,17,1
  1301                        	.member	MediaSerialNumber,34,16,17,1
  1302                        	.member	MediaCardPassThrough,35,16,17,1
  1303                        	.member	StreamingFeature,36,16,17,1
  1304                        	.member	GpLogging,37,16,17,1
  1305                        	.member	WriteFua,38,16,17,1
  1306                        	.member	WriteQueuedFua,39,16,17,1
  1307                        	.member	WWN64Bit,40,16,17,1
  1308                        	.member	URGReadStream,41,16,17,1
  1309                        	.member	URGWriteStream,42,16,17,1
  1310                        	.member	ReservedForTechReport,43,16,17,2
  1311                        	.member	IdleWithUnloadFeature,45,16,17,1
  1312                        	.member	Reserved4,46,16,17,2
  1313                        	.eos
  1314                        	.stag	fake113_,16,113
  1315                        	.member	TimeRequired,0,16,17,15
  1316                        	.member	ExtendedTimeReported,15,16,17,1
  1317                        	.eos
  1318                        	.stag	fake114_,16,114
  1319                        	.member	TimeRequired,0,16,17,15
  1320                        	.member	ExtendedTimeReported,15,16,17,1
  1321                        	.eos
  1322                        	.stag	fake115_,16,115
  1323                        	.member	LogicalSectorsPerPhysicalSector,0,16,17,
                    4
  1324                        	.member	Reserved0,4,16,17,8
  1325                        	.member	LogicalSectorLongerThan256Words,12,16,17
                    ,1
  1326                        	.member	MultipleLogicalSectorsPerPhysicalSector,
                    13,16,17,1
  1327                        	.member	Reserved1,14,16,17,2
  1328                        	.eos
  1329                        	.stag	fake116_,16,116
  1330                        	.member	ReservedForDrqTechnicalReport,0,16,17,1
  1331                        	.member	WriteReadVerify,1,16,17,1
  1332                        	.member	WriteUncorrectableExt,2,16,17,1
  1333                        	.member	ReadWriteLogDmaExt,3,16,17,1
  1334                        	.member	DownloadMicrocodeMode3,4,16,17,1
  Mon Aug  9 2021 16:52                                                Page 26


  1335                        	.member	FreefallControl,5,16,17,1
  1336                        	.member	SenseDataReporting,6,16,17,1
  1337                        	.member	ExtendedPowerConditions,7,16,17,1
  1338                        	.member	Reserved0,8,16,17,6
  1339                        	.member	WordValid,14,16,17,2
  1340                        	.eos
  1341                        	.stag	fake117_,16,117
  1342                        	.member	ReservedForDrqTechnicalReport,0,16,17,1
  1343                        	.member	WriteReadVerify,1,16,17,1
  1344                        	.member	WriteUncorrectableExt,2,16,17,1
  1345                        	.member	ReadWriteLogDmaExt,3,16,17,1
  1346                        	.member	DownloadMicrocodeMode3,4,16,17,1
  1347                        	.member	FreefallControl,5,16,17,1
  1348                        	.member	SenseDataReporting,6,16,17,1
  1349                        	.member	ExtendedPowerConditions,7,16,17,1
  1350                        	.member	Reserved0,8,16,17,6
  1351                        	.member	Reserved1,14,16,17,2
  1352                        	.eos
  1353                        	.stag	fake118_,16,118
  1354                        	.member	SecuritySupported,0,16,17,1
  1355                        	.member	SecurityEnabled,1,16,17,1
  1356                        	.member	SecurityLocked,2,16,17,1
  1357                        	.member	SecurityFrozen,3,16,17,1
  1358                        	.member	SecurityCountExpired,4,16,17,1
  1359                        	.member	EnhancedSecurityEraseSupported,5,16,17,1
  1360                        	.member	Reserved0,6,16,17,2
  1361                        	.member	SecurityLevel,8,16,17,1
  1362                        	.member	Reserved1,9,16,17,7
  1363                        	.eos
  1364                        	.stag	fake119_,16,119
  1365                        	.member	MaximumCurrentInMA,0,16,17,12
  1366                        	.member	CfaPowerMode1Disabled,12,16,17,1
  1367                        	.member	CfaPowerMode1Required,13,16,17,1
  1368                        	.member	Reserved0,14,16,17,1
  1369                        	.member	Word160Supported,15,16,17,1
  1370                        	.eos
  1371                        	.stag	fake120_,16,120
  1372                        	.member	SupportsTrim,0,16,17,1
  1373                        	.member	Reserved0,1,16,17,15
  1374                        	.eos
  1375                        	.stag	fake121_,16,121
  1376                        	.member	Supported,0,16,17,1
  1377                        	.member	Reserved0,1,16,17,1
  1378                        	.member	WriteSameSuported,2,16,17,1
  1379                        	.member	ErrorRecoveryControlSupported,3,16,17,1
  1380                        	.member	FeatureControlSuported,4,16,17,1
  1381                        	.member	DataTablesSuported,5,16,17,1
  1382                        	.member	Reserved1,6,16,17,6
  1383                        	.member	VendorSpecific,12,16,17,4
  1384                        	.eos
  1385                        	.stag	fake122_,16,122
  1386                        	.member	AlignmentOfLogicalWithinPhysical,0,16,17
                    ,14
  1387                        	.member	Word209Supported,14,16,17,1
  1388                        	.member	Reserved0,15,16,17,1
  1389                        	.eos
  1390                        	.stag	fake123_,16,123
  1391                        	.member	NVCachePowerModeEnabled,0,16,17,1
  Mon Aug  9 2021 16:52                                                Page 27


  1392                        	.member	Reserved0,1,16,17,3
  1393                        	.member	NVCacheFeatureSetEnabled,4,16,17,1
  1394                        	.member	Reserved1,5,16,17,3
  1395                        	.member	NVCachePowerModeVersion,8,16,17,4
  1396                        	.member	NVCacheFeatureSetVersion,12,16,17,4
  1397                        	.eos
  1398                        	.stag	fake124_,16,124
  1399                        	.member	NVCacheEstimatedTimeToSpinUpInSeconds,0,
                    14,8,8
  1400                        	.member	Reserved,8,14,8,8
  1401                        	.eos
  1402                        	.stag	fake125_,16,125
  1403                        	.member	MajorVersion,0,16,17,12
  1404                        	.member	TransportType,12,16,17,4
  1405                        	.eos
  1406                        	.stag	_IDENTIFY_DEVICE_DATA,4096,126
  1407                        	.member	GeneralConfiguration,0,10,8,16,104
  1408                        	.member	NumCylinders,16,16,8,16
  1409                        	.member	SpecificConfiguration,32,16,8,16
  1410                        	.member	NumHeads,48,16,8,16
  1411                        	.member	Retired1Bytes,64,110,8,0,4
  1412                        	.member	NumSectorsPerTrack,96,16,8,16
  1413                        	.member	VendorUnique1Bytes,112,110,8,0,6
  1414                        	.member	SerialNumber,160,110,8,0,20
  1415                        	.member	Retired2,320,112,8,0,2
  1416                        	.member	Obsolete1,352,16,8,16
  1417                        	.member	FirmwareRevision,368,110,8,0,8
  1418                        	.member	ModelNumber,432,110,8,0,40
  1419                        	.member	MaximumBlockTransfer,752,14,8,8
  1420                        	.member	VendorUnique2,760,14,8,8
  1421                        	.member	TrustedComputing,768,10,8,16,105
  1422                        	.member	Capabilities,784,10,8,32,106
  1423                        	.member	ObsoleteWords51,816,112,8,0,2
  1424                        	.member	TranslationFieldsValid,848,16,17,3
  1425                        	.member	Reserved3,851,16,17,5
  1426                        	.member	FreeFallControlSensitivity,856,16,17,8
  1427                        	.member	NumberOfCurrentCylinders,864,16,8,16
  1428                        	.member	NumberOfCurrentHeads,880,16,8,16
  1429                        	.member	CurrentSectorsPerTrack,896,16,8,16
  1430                        	.member	CurrentSectorCapacity,912,18,8,32
  1431                        	.member	CurrentMultiSectorSetting,944,14,8,8
  1432                        	.member	MultiSectorSettingValid,952,14,17,1
  1433                        	.member	ReservedByte59,953,14,17,3
  1434                        	.member	SanitizeFeatureSupported,956,14,17,1
  1435                        	.member	CryptoScrambleExtCommandSupported,957,14
                    ,17,1
  1436                        	.member	OverwriteExtCommandSupported,958,14,17,1
  1437                        	.member	BlockEraseExtCommandSupported,959,14,17,
                    1
  1438                        	.member	UserAddressableSectors,960,18,8,32
  1439                        	.member	ObsoleteWord62,992,16,8,16
  1440                        	.member	MultiWordDMASupport,1008,16,17,8
  1441                        	.member	MultiWordDMAActive,1016,16,17,8
  1442                        	.member	AdvancedPIOModes,1024,16,17,8
  1443                        	.member	ReservedByte64,1032,16,17,8
  1444                        	.member	MinimumMWXferCycleTime,1040,16,8,16
  1445                        	.member	RecommendedMWXferCycleTime,1056,16,8,16
  1446                        	.member	MinimumPIOCycleTime,1072,16,8,16
  Mon Aug  9 2021 16:52                                                Page 28


  1447                        	.member	MinimumPIOCycleTimeIORDY,1088,16,8,16
  1448                        	.member	AdditionalSupported,1104,10,8,16,107
  1449                        	.member	ReservedWords70,1120,112,8,0,5
  1450                        	.member	QueueDepth,1200,16,17,5
  1451                        	.member	ReservedWord75,1205,16,17,11
  1452                        	.member	SerialAtaCapabilities,1216,10,8,32,108
  1453                        	.member	SerialAtaFeaturesSupported,1248,10,8,16,
                    109
  1454                        	.member	SerialAtaFeaturesEnabled,1264,10,8,16,11
                    0
  1455                        	.member	MajorRevision,1280,16,8,16
  1456                        	.member	MinorRevision,1296,16,8,16
  1457                        	.member	CommandSetSupport,1312,10,8,48,111
  1458                        	.member	CommandSetActive,1360,10,8,48,112
  1459                        	.member	UltraDMASupport,1408,16,17,8
  1460                        	.member	UltraDMAActive,1416,16,17,8
  1461                        	.member	NormalSecurityEraseUnit,1424,10,8,16,113
  1462                        	.member	EnhancedSecurityEraseUnit,1440,10,8,16,1
                    14
  1463                        	.member	CurrentAPMLevel,1456,16,17,8
  1464                        	.member	ReservedWord91,1464,16,17,8
  1465                        	.member	MasterPasswordID,1472,16,8,16
  1466                        	.member	HardwareResetResult,1488,16,8,16
  1467                        	.member	CurrentAcousticValue,1504,16,17,8
  1468                        	.member	RecommendedAcousticValue,1512,16,17,8
  1469                        	.member	StreamMinRequestSize,1520,16,8,16
  1470                        	.member	StreamingTransferTimeDMA,1536,16,8,16
  1471                        	.member	StreamingAccessLatencyDMAPIO,1552,16,8,1
                    6
  1472                        	.member	StreamingPerfGranularity,1568,18,8,32
  1473                        	.member	Max48BitLBA,1600,114,8,0,2
  1474                        	.member	StreamingTransferTime,1664,16,8,16
  1475                        	.member	DsmCap,1680,16,8,16
  1476                        	.member	PhysicalLogicalSectorSize,1696,10,8,16,1
                    15
  1477                        	.member	InterSeekDelay,1712,16,8,16
  1478                        	.member	WorldWideName,1728,112,8,0,4
  1479                        	.member	ReservedForWorldWideName128,1792,112,8,0
                    ,4
  1480                        	.member	ReservedForTlcTechnicalReport,1856,16,8,
                    16
  1481                        	.member	WordsPerLogicalSector,1872,112,8,0,2
  1482                        	.member	CommandSetSupportExt,1904,10,8,16,116
  1483                        	.member	CommandSetActiveExt,1920,10,8,16,117
  1484                        	.member	ReservedForExpandedSupportandActive,1936
                    ,112,8,0,6
  1485                        	.member	MsnSupport,2032,16,17,2
  1486                        	.member	ReservedWord127,2034,16,17,14
  1487                        	.member	SecurityStatus,2048,10,8,16,118
  1488                        	.member	ReservedWord129,2064,112,8,0,31
  1489                        	.member	CfaPowerMode1,2560,10,8,16,119
  1490                        	.member	ReservedForCfaWord161,2576,112,8,0,7
  1491                        	.member	NominalFormFactor,2688,16,17,4
  1492                        	.member	ReservedWord168,2692,16,17,12
  1493                        	.member	DataSetManagementFeature,2704,10,8,16,12
                    0
  1494                        	.member	AdditionalProductID,2720,112,8,0,4
  1495                        	.member	ReservedForCfaWord174,2784,112,8,0,2
  Mon Aug  9 2021 16:52                                                Page 29


  1496                        	.member	CurrentMediaSerialNumber,2816,112,8,0,30
  1497                        	.member	SCTCommandTransport,3296,10,8,16,121
  1498                        	.member	ReservedWord207,3312,112,8,0,2
  1499                        	.member	BlockAlignment,3344,10,8,16,122
  1500                        	.member	WriteReadVerifySectorCountMode3Only,3360
                    ,112,8,0,2
  1501                        	.member	WriteReadVerifySectorCountMode2Only,3392
                    ,112,8,0,2
  1502                        	.member	NVCacheCapabilities,3424,10,8,16,123
  1503                        	.member	NVCacheSizeLSW,3440,16,8,16
  1504                        	.member	NVCacheSizeMSW,3456,16,8,16
  1505                        	.member	NominalMediaRotationRate,3472,16,8,16
  1506                        	.member	ReservedWord218,3488,16,8,16
  1507                        	.member	NVCacheOptions,3504,10,8,16,124
  1508                        	.member	WriteReadVerifySectorCountMode,3520,16,1
                    7,8
  1509                        	.member	ReservedWord220,3528,16,17,8
  1510                        	.member	ReservedWord221,3536,16,8,16
  1511                        	.member	TransportMajorVersion,3552,10,8,16,125
  1512                        	.member	TransportMinorVersion,3568,16,8,16
  1513                        	.member	ReservedWord224,3584,112,8,0,6
  1514                        	.member	ExtendedNumberOfUserAddressableSectors,3
                    680,114,8,0,2
  1515                        	.member	MinBlocksPerDownloadMicrocodeMode03,3744
                    ,16,8,16
  1516                        	.member	MaxBlocksPerDownloadMicrocodeMode03,3760
                    ,16,8,16
  1517                        	.member	ReservedWord236,3776,112,8,0,19
  1518                        	.member	Signature,4080,16,17,8
  1519                        	.member	CheckSum,4088,16,17,8
  1520                        	.eos
  1521                        	.stag	_FXDosDevice,5744,127
  1522                        	.member	type,0,14,8,8
  1523                        	.member	initialized,8,14,8,8
  1524                        	.member	devdata,16,129,8,32
  1525                        	.member	devstatus,48,14,8,8
  1526                        	.member	bootSector,56,10,8,928,97
  1527                        	.member	partitionTable,984,10,8,128,98
  1528                        	.member	fileAllocationTable,1112,110,8,0,512
  1529                        	.member	bsOffset,5208,18,8,32
  1530                        	.member	rootDirSectors,5240,18,8,32
  1531                        	.member	root_entry_count,5272,5,8,16
  1532                        	.member	rootEntriesPerPage,5288,5,8,16
  1533                        	.member	sectors_per_cluster,5304,5,8,16
  1534                        	.member	firstDataSector,5320,18,8,32
  1535                        	.member	fatTableOffset,5352,18,8,32
  1536                        	.member	volume_name,5384,110,8,0,12
  1537                        	.member	root_volume_name,5480,110,8,0,12
  1538                        	.member	errorCode,5576,14,8,8
  1539                        	.member	pfInit,5584,641,8,32
  1540                        	.member	pfReset,5616,641,8,32
  1541                        	.member	pfUninit,5648,641,8,32
  1542                        	.member	pfReader,5680,654,8,32
  1543                        	.member	pfWriter,5712,654,8,32
  1544                        	.eos
  1545                        	.utag	item,32,128
  1546                        	.member	dir,0,138,11,32,87
  1547                        	.member	file,0,138,11,32,86
  Mon Aug  9 2021 16:52                                                Page 30


  1548                        	.member	fileInfo,0,138,11,32,88
  1549                        	.eos
  1550                        	.stag	_dos_handle,80,129
  1551                        	.member	fs,0,138,8,32,84
  1552                        	.member	fr,32,5,8,16
  1553                        	.member	path,48,142,8,32
  1554                        	.eos
  1555                        	.stag	fx_file,112,130
  1556                        	.member	fs,0,138,8,32,84
  1557                        	.member	fileInfo,32,138,8,32,88
  1558                        	.member	f,64,138,8,32,86
  1559                        	.member	fr,96,5,8,16
  1560                        	.eos
  1561                        	.line	812
  1562                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxmain.c",4
  1563                        ;#include "SN76489.h"
  1564                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\SN76489.h",0
  1565                        	.line	97
  1566                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxmain.c",5
  1567                        ;#include "strings/ui-en.h"
  1568                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\strings/ui-en.h",0
  1569                        	.line	13
  1570                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxmain.c",6
  1571                        ;#include "DRIVERS/DRIVER.H"
  1572                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\DRIVERS/DRIVER.H",0
  1573                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxos.h",0
  1574                        	.line	30
  1575                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\DRIVERS/DRIVER.H",5
  1576                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxmemorymanager.h",0
  1577                        	.line	129
  1578                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\DRIVERS/DRIVER.H",6
  1579                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxc256u.h",0
  1580                        	.line	1960
  1581                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\DRIVERS/DRIVER.H",104
  1582                        	.line	113
  1583                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxmain.c",7
  1584                        ;#include "DRIVERS/ps2ctl.H"
  1585                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\DRIVERS/ps2ctl.H",0
  1586                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxtypes.h",0
  1587                        	.line	1064
  1588                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\DRIVERS/ps2ctl.H",4
  1589                        	.stag	fake131_,88,131
  Mon Aug  9 2021 16:52                                                Page 31


  1590                        	.member	present,0,14,8,8
  1591                        	.member	num,8,18,8,32
  1592                        	.member	type,40,18,8,32
  1593                        	.member	first_id_byte,72,14,8,8
  1594                        	.member	second_id_byte,80,14,8,8
  1595                        	.eos
  1596                        	.line	84
  1597                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxmain.c",8
  1598                        ;
  1599                        ;#pragma section CODE=entry,offset $00:8000 //$4:0
                    000
  1600                        entry	section	offset $00:8000 //$4:0000
  1601 00:8000:              	ends
  1602                        ;
  1603                        ;int line = 2;
  1604                        	data
  1605                        	xdef	~~line
  1606                        ~~line:
  1607 00:0000: 02 00        	dw	$2
  1608 00:0002:              	ends
  1609                        ;//void BRKHandler(void);
  1610                        ;void init_ps2(VOID);
  1611                        ;
  1612                        ;void k_show_image(LPCSTR imageFilePath);
  1613                        ;UINT k_init_splash(BOOL wait);
  1614                        ;
  1615                        ;//static int  msp = 0;
  1616                        ;//static char mainspinner[] = {'|','/','-','\\'};
  1617                        ;static ULONG THIS_MODULE = 0x00000000;
  1618                        	data
  1619                        ~~THIS_MODULE:
  1620 00:0002: 00 00 00 00  	dl	$0
  1621 00:0006:              	ends
  1622                        ;
  1623                        ;//extern DEVICEDRIVER_IRQ g_irq_handlers[][8];
  1624                        ;extern IRQCHAIN g_irq_handlers[4][8];
  1625                        ;
  1626                        ;
  1627                        ;
  1628                        ;
  1629                        ;/*-----------------------------------------------
                    ----------------------------*/
  1630                        ;// INTERNAL PROTOTYPES
  1631                        ;/*-----------------------------------------------
                    ----------------------------*/
  1632                        ;void poke(uint8_t);
  1633                        ;
  1634                        ;
  1635                        ;LPVOID	pAPGMPTR = NULL;
  1636                        	data
  1637                        	xdef	~~pAPGMPTR
  1638                        ~~pAPGMPTR:
  1639 00:0006: 00 00 00 00  	dl	$0
  1640 00:000A:              	ends
  1641                        ;typedef void (*DLLMAIN)(VOID);
  1642                        ;
  1643                        ;VOID DebugOut(LPCSTR message);
  Mon Aug  9 2021 16:52                                                Page 32


  1644                        ;VOID DebugInteger(LPCSTR message, INT value);
  1645                        ;INT  GetDateYear(VOID);
  1646                        ;
  1647                        ;LPVOID HeapAlloc(UINT size);
  1648                        ;VOID HeapDealloc(LPVOID pMemory);
  1649                        ;
  1650                        ;void k_level_test(VOID);
  1651                        ;void DeallocateNodeListString(LPCSTR name,LPVOID 
                    data);
  1652                        ;
  1653                        ;
  1654                        ;
  1655                        ;/*-----------------------------------------------
                    ----------------------------*/
  1656                        ;// End of SN76489.ino
  1657                        ;
  1658                        ;
  1659                        ;
  1660                        ;void ReportMemory(UCHAR segment,ULONG block,ULONG
                     size)
  1661                        ;{
  1662                        	.line	55
  1663                        	.line	56
  1664                        	entry
  1665                        	xdef	~~ReportMemory
  1666                        	func
  1667                        	.function	56
  1668                        ~~ReportMemory:
  1669                        	longa	on
  1670                        	longi	on
  1671 00:8000: 3B           	tsc
  1672 00:8001: 38           	sec
  1673 00:8002: E9 1A 00     	sbc	#L2
  1674 00:8005: 1B           	tcs
  1675 00:8006: 0B           	phd
  1676 00:8007: 5B           	tcd
  1677             00000004   segment_0	set	4
  1678             00000006   block_0	set	6
  1679             0000000A   size_0	set	10
  1680                        	.block	56
  1681                        ;	char rmbuffer[16];
  1682                        ;	int pos  = 3;
  1683                        ;
  1684                        ;	pos = k_put_string(pos,line,"Memory Test Bank:",
                    15,0);
  1685             00000000   rmbuffer_1	set	0
  1686             00000010   pos_1	set	16
  1687                        	.sym	rmbuffer,0,110,1,0,16
  1688                        	.sym	pos,16,5,1,16
  1689                        	.sym	segment,4,14,6,8
  1690                        	.sym	block,6,18,6,32
  1691                        	.sym	size,10,18,6,32
  1692 00:8008: A9 03 00     	lda	#$3
  1693 00:800B: 85 19        	sta	<L3+pos_1
  1694                        	.line	60
  1695 00:800D: F4 00 00     	pea	#<$0
  1696 00:8010: F4 0F 00     	pea	#<$f
  1697 00:8013: F4 xx xx     	pea	#^L1
  Mon Aug  9 2021 16:52                                                Page 33


  1698 00:8016: F4 xx xx     	pea	#<L1
  1699 00:8019: AD xx xx     	lda	|~~line
  1700 00:801C: 48           	pha
  1701 00:801D: D4 19        	pei	<L3+pos_1
  1702 00:801F: 22 xx xx xx  	jsl	~~k_put_string
  1703 00:8023: 85 19        	sta	<L3+pos_1
  1704                        ;	pos = k_put_string(pos,line,k_bytetohex(segment,
                    rmbuffer),15,0);
  1705                        	.line	61
  1706 00:8025: F4 00 00     	pea	#<$0
  1707 00:8028: F4 0F 00     	pea	#<$f
  1708 00:802B: F4 00 00     	pea	#0
  1709 00:802E: 18           	clc
  1710 00:802F: 7B           	tdc
  1711 00:8030: 69 09 00     	adc	#<L3+rmbuffer_1
  1712 00:8033: 48           	pha
  1713 00:8034: D4 1E        	pei	<L2+segment_0
  1714 00:8036: 22 xx xx xx  	jsl	~~k_bytetohex
  1715 00:803A: 85 01        	sta	<R0
  1716 00:803C: 86 03        	stx	<R0+2
  1717 00:803E: DA           	phx
  1718 00:803F: 48           	pha
  1719 00:8040: AD xx xx     	lda	|~~line
  1720 00:8043: 48           	pha
  1721 00:8044: D4 19        	pei	<L3+pos_1
  1722 00:8046: 22 xx xx xx  	jsl	~~k_put_string
  1723 00:804A: 85 19        	sta	<L3+pos_1
  1724                        ;	pos = k_put_string(pos,line," Found ",15,0);
  1725                        	.line	62
  1726 00:804C: F4 00 00     	pea	#<$0
  1727 00:804F: F4 0F 00     	pea	#<$f
  1728 00:8052: F4 xx xx     	pea	#^L1+18
  1729 00:8055: F4 xx xx     	pea	#<L1+18
  1730 00:8058: AD xx xx     	lda	|~~line
  1731 00:805B: 48           	pha
  1732 00:805C: D4 19        	pei	<L3+pos_1
  1733 00:805E: 22 xx xx xx  	jsl	~~k_put_string
  1734 00:8062: 85 19        	sta	<L3+pos_1
  1735                        ;	pos = k_put_string(pos,line,k_strip_padding(k_lo
                    ngtodec(size,rmbuffer)),15,0);
  1736                        	.line	63
  1737 00:8064: F4 00 00     	pea	#<$0
  1738 00:8067: F4 0F 00     	pea	#<$f
  1739 00:806A: F4 00 00     	pea	#0
  1740 00:806D: 18           	clc
  1741 00:806E: 7B           	tdc
  1742 00:806F: 69 09 00     	adc	#<L3+rmbuffer_1
  1743 00:8072: 48           	pha
  1744 00:8073: D4 26        	pei	<L2+size_0+2
  1745 00:8075: D4 24        	pei	<L2+size_0
  1746 00:8077: 22 xx xx xx  	jsl	~~k_longtodec
  1747 00:807B: 85 01        	sta	<R0
  1748 00:807D: 86 03        	stx	<R0+2
  1749 00:807F: DA           	phx
  1750 00:8080: 48           	pha
  1751 00:8081: 22 xx xx xx  	jsl	~~k_strip_padding
  1752 00:8085: 85 05        	sta	<R1
  1753 00:8087: 86 07        	stx	<R1+2
  Mon Aug  9 2021 16:52                                                Page 34


  1754 00:8089: DA           	phx
  1755 00:808A: 48           	pha
  1756 00:808B: AD xx xx     	lda	|~~line
  1757 00:808E: 48           	pha
  1758 00:808F: D4 19        	pei	<L3+pos_1
  1759 00:8091: 22 xx xx xx  	jsl	~~k_put_string
  1760 00:8095: 85 19        	sta	<L3+pos_1
  1761                        ;	pos = k_put_string(pos,line," Bytes    ",15,0);
  1762                        	.line	64
  1763 00:8097: F4 00 00     	pea	#<$0
  1764 00:809A: F4 0F 00     	pea	#<$f
  1765 00:809D: F4 xx xx     	pea	#^L1+26
  1766 00:80A0: F4 xx xx     	pea	#<L1+26
  1767 00:80A3: AD xx xx     	lda	|~~line
  1768 00:80A6: 48           	pha
  1769 00:80A7: D4 19        	pei	<L3+pos_1
  1770 00:80A9: 22 xx xx xx  	jsl	~~k_put_string
  1771 00:80AD: 85 19        	sta	<L3+pos_1
  1772                        ;}
  1773                        	.line	65
  1774                        L5:
  1775 00:80AF: A5 1C        	lda	<L2+2
  1776 00:80B1: 85 26        	sta	<L2+2+10
  1777 00:80B3: A5 1B        	lda	<L2+1
  1778 00:80B5: 85 25        	sta	<L2+1+10
  1779 00:80B7: 2B           	pld
  1780 00:80B8: 3B           	tsc
  1781 00:80B9: 18           	clc
  1782 00:80BA: 69 24 00     	adc	#L2+10
  1783 00:80BD: 1B           	tcs
  1784 00:80BE: 6B           	rtl
  1785                        	.endblock	65
  1786             0000001A   L2	equ	26
  1787             00000009   L3	equ	9
  1788 00:80BF:              	ends
  1789                        	efunc
  1790                        	.endfunc	65,9,26
  1791                        	.line	65
  1792                        	data
  1793                        L1:
  1794 00:000A: 4D 65 6D 6F  	db	$4D,$65,$6D,$6F,$72,$79,$20,$54,$65,$73,
                    $74,$20,$42,$61,$6E
       00:000E: 72 79 20 54 
       00:0012: 65 73 74 20 
       00:0016: 42 61 6E 
  1795 00:0019: 6B 3A 00 20  	db	$6B,$3A,$00,$20,$46,$6F,$75,$6E,$64,$20,
                    $00,$20,$42,$79,$74
       00:001D: 46 6F 75 6E 
       00:0021: 64 20 00 20 
       00:0025: 42 79 74 
  1796 00:0028: 65 73 20 20  	db	$65,$73,$20,$20,$20,$20,$00
       00:002C: 20 20 00 
  1797 00:002F:              	ends
  1798                        ;/*
  1799                        ;void SpinMemory(UCHAR segment,ULONG block,ULONG s
                    ize)
  1800                        ;{
  1801                        ;	int pos = 0;
  Mon Aug  9 2021 16:52                                                Page 35


  1802                        ;	pos = k_put_string(pos,line,"System Memory Check
                    :",15,0);
  1803                        ;	k_put_char(pos,line,mainspinner[msp++],15,0);
  1804                        ;	if(msp>3) msp = 0;
  1805                        ;}
  1806                        ;*/
  1807                        ;void DeallocateNodeListString(LPCSTR name,LPVOID 
                    data)
  1808                        ;{
  1809                        	.line	75
  1810                        	.line	76
  1811                        	entry
  1812                        	xdef	~~DeallocateNodeListString
  1813                        	func
  1814                        	.function	76
  1815                        ~~DeallocateNodeListString:
  1816                        	longa	on
  1817                        	longi	on
  1818 00:80BF: 3B           	tsc
  1819 00:80C0: 38           	sec
  1820 00:80C1: E9 00 00     	sbc	#L7
  1821 00:80C4: 1B           	tcs
  1822 00:80C5: 0B           	phd
  1823 00:80C6: 5B           	tcd
  1824             00000004   name_0	set	4
  1825             00000008   data_0	set	8
  1826                        	.block	76
  1827                        ;	if(name)
  1828                        	.sym	name,4,142,6,32
  1829                        	.sym	data,8,129,6,32
  1830                        	.line	77
  1831                        ;		k_debug_strings("DeallocateNodeListStrin
                    g:name:",(LPCHAR)name);
  1832 00:80C7: A5 04        	lda	<L7+name_0
  1833 00:80C9: 05 06        	ora	<L7+name_0+2
  1834 00:80CB: D0 03        	bne	L10
  1835 00:80CD: 82 0E 00     	brl	L10001
  1836                        L10:
  1837                        	.line	78
  1838 00:80D0: D4 06        	pei	<L7+name_0+2
  1839 00:80D2: D4 04        	pei	<L7+name_0
  1840 00:80D4: F4 xx xx     	pea	#^L6
  1841 00:80D7: F4 xx xx     	pea	#<L6
  1842 00:80DA: 22 xx xx xx  	jsl	~~k_debug_strings
  1843                        ;
  1844                        ;	k_debug_pointer("DeallocateNodeListString:",data
                    );
  1845                        L10001:
  1846                        	.line	80
  1847 00:80DE: D4 0A        	pei	<L7+data_0+2
  1848 00:80E0: D4 08        	pei	<L7+data_0
  1849 00:80E2: F4 xx xx     	pea	#^L6+31
  1850 00:80E5: F4 xx xx     	pea	#<L6+31
  1851 00:80E8: 22 xx xx xx  	jsl	~~k_debug_pointer
  1852                        ;	if(data)
  1853                        	.line	81
  1854                        ;	{
  1855 00:80EC: A5 08        	lda	<L7+data_0
  Mon Aug  9 2021 16:52                                                Page 36


  1856 00:80EE: 05 0A        	ora	<L7+data_0+2
  1857 00:80F0: D0 03        	bne	L11
  1858 00:80F2: 82 08 00     	brl	L10002
  1859                        L11:
  1860                        	.line	82
  1861                        ;		k_mem_deallocate_heap(data);
  1862                        	.line	83
  1863 00:80F5: D4 0A        	pei	<L7+data_0+2
  1864 00:80F7: D4 08        	pei	<L7+data_0
  1865 00:80F9: 22 xx xx xx  	jsl	~~k_mem_deallocate_heap
  1866                        ;	}
  1867                        	.line	84
  1868                        ;}
  1869                        L10002:
  1870                        	.line	85
  1871                        L12:
  1872 00:80FD: A5 02        	lda	<L7+2
  1873 00:80FF: 85 0A        	sta	<L7+2+8
  1874 00:8101: A5 01        	lda	<L7+1
  1875 00:8103: 85 09        	sta	<L7+1+8
  1876 00:8105: 2B           	pld
  1877 00:8106: 3B           	tsc
  1878 00:8107: 18           	clc
  1879 00:8108: 69 08 00     	adc	#L7+8
  1880 00:810B: 1B           	tcs
  1881 00:810C: 6B           	rtl
  1882                        	.endblock	85
  1883             00000000   L7	equ	0
  1884             00000001   L8	equ	1
  1885 00:810D:              	ends
  1886                        	efunc
  1887                        	.endfunc	85,1,0
  1888                        	.line	85
  1889                        	data
  1890                        L6:
  1891 00:002F: 44 65 61 6C  	db	$44,$65,$61,$6C,$6C,$6F,$63,$61,$74,$65,
                    $4E,$6F,$64,$65,$4C
       00:0033: 6C 6F 63 61 
       00:0037: 74 65 4E 6F 
       00:003B: 64 65 4C 
  1892 00:003E: 69 73 74 53  	db	$69,$73,$74,$53,$74,$72,$69,$6E,$67,$3A,
                    $6E,$61,$6D,$65,$3A
       00:0042: 74 72 69 6E 
       00:0046: 67 3A 6E 61 
       00:004A: 6D 65 3A 
  1893 00:004D: 00 44 65 61  	db	$00,$44,$65,$61,$6C,$6C,$6F,$63,$61,$74,
                    $65,$4E,$6F,$64,$65
       00:0051: 6C 6C 6F 63 
       00:0055: 61 74 65 4E 
       00:0059: 6F 64 65 
  1894 00:005C: 4C 69 73 74  	db	$4C,$69,$73,$74,$53,$74,$72,$69,$6E,$67,
                    $3A,$00
       00:0060: 53 74 72 69 
       00:0064: 6E 67 3A 00 
  1895 00:0068:              	ends
  1896                        ;/*
  1897                        ;void k_delay_nop(void)
  1898                        ;{
  Mon Aug  9 2021 16:52                                                Page 37


  1899                        ;	asm NOP;
  1900                        ;	asm NOP;
  1901                        ;	asm NOP;
  1902                        ;	asm NOP;
  1903                        ;	asm NOP;
  1904                        ;	asm NOP;
  1905                        ;	asm NOP;
  1906                        ;	asm NOP;
  1907                        ;	asm NOP;
  1908                        ;	asm NOP;
  1909                        ;}
  1910                        ;
  1911                        ;void k_delay_1(void)
  1912                        ;{
  1913                        ;	int c = 0;
  1914                        ;
  1915                        ;	for(c=0;c<10;c++)
  1916                        ;	{
  1917                        ;		k_delay_nop();
  1918                        ;	}
  1919                        ;}
  1920                        ;
  1921                        ;void k_delay_1ms(void)
  1922                        ;{
  1923                        ;	k_delay_1();
  1924                        ;}
  1925                        ;
  1926                        ;void sleep(int msec)
  1927                        ;{
  1928                        ;	int c = 0;
  1929                        ;	for(c=0;c<msec;c++)
  1930                        ;	{
  1931                        ;		k_delay_1ms();
  1932                        ;	}
  1933                        ;}
  1934                        ;*/
  1935                        ;
  1936                        ;/*
  1937                        ;VOID testDrive(LPSTR drive,LPSTR path)
  1938                        ;{
  1939                        ;	DIR *dir;
  1940                        ;	FATFS *fs = NULL;
  1941                        ;	FIL *f = NULL;
  1942                        ;	FILINFO *fileInfo;
  1943                        ;	FRESULT fr = 0;
  1944                        ;	DWORD serial;
  1945                        ;	LPSTR name = NULL;
  1946                        ;	CHAR buffer[16];
  1947                        ;	UINT read = 0;
  1948                        ;	//MKFS_PARM opt;
  1949                        ;
  1950                        ;	k_debug_strings("testDrive:DRIVE:",drive);
  1951                        ;
  1952                        ;	f = k_mem_allocate_heap(sizeof(FIL));
  1953                        ;	dir = k_mem_allocate_heap(sizeof(DIR));
  1954                        ;	fs = k_mem_allocate_heap(sizeof(FATFS));
  1955                        ;	fileInfo = k_mem_allocate_heap(sizeof(FILINFO));
  1956                        ;
  Mon Aug  9 2021 16:52                                                Page 38


  1957                        ;	f_mount(fs, drive,1);
  1958                        ;	name = k_mem_allocate_heap(255);
  1959                        ;	fr = f_getlabel(drive,name,&serial);
  1960                        ;
  1961                        ;	k_debug_integer("testDrive:f_getlabel:",fr);
  1962                        ;
  1963                        ;	if(fr == FR_OK)
  1964                        ;	{
  1965                        ;		k_debug_strings("testDrive::name:",name)
                    ;
  1966                        ;		k_debug_long("testDrive::serial:",serial
                    );
  1967                        ;	}
  1968                        ;
  1969                        ;
  1970                        ;	fr = f_opendir (dir,path);
  1971                        ;
  1972                        ;	k_debug_integer("testDrive:f_opendir:",fr);
  1973                        ;	//k_debug_long("f_opendir::sector:",dir.sect);
  1974                        ;
  1975                        ;	if(fr == FR_OK)
  1976                        ;	{
  1977                        ;		fr = f_findfirst(dir,fileInfo,path, "*")
                    ;
  1978                        ;		k_debug_integer("testDrive:f_findfirst:"
                    ,fr);
  1979                        ;		if(fr == FR_OK)
  1980                        ;		{
  1981                        ;			k_debug_strings("testDrive:f_fin
                    dfirst:name:",(LPSTR)fileInfo->fname);
  1982                        ;			//k_debug_long("testHD:f_findfir
                    st:size:",fileInfo->fsize);
  1983                        ;
  1984                        ;			while((fr = f_findnext(dir,fileI
                    nfo)) == FR_OK && fileInfo->fname[0])
  1985                        ;			{
  1986                        ;				//k_debug_integer("testH
                    D:f_findnext:fr:",fr);
  1987                        ;				k_debug_strings("testDri
                    ve:f_findnext:name:",(LPSTR)fileInfo->fname);
  1988                        ;				k_debug_long("testDrive:
                    f_findnext:size:",fileInfo->fsize);
  1989                        ;			}
  1990                        ;		}
  1991                        ;
  1992                        ;		f_closedir(dir);
  1993                        ;	}
  1994                        ;
  1995                        ;	fr = f_open(f,"RAM:\\FXDEV.DTA",FA_READ|FA_WRITE
                    );
  1996                        ;	if(fr == FR_OK)
  1997                        ;	{
  1998                        ;		memset(buffer,0,16);
  1999                        ;		fr = f_read(f,buffer,16,&read);
  2000                        ;		k_debug_integer("testDrive:f_read:read:"
                    ,read);
  2001                        ;		k_debug_byte_array("testDrive:f_read:dat
                    a:",buffer,16);
  Mon Aug  9 2021 16:52                                                Page 39


  2002                        ;
  2003                        ;		buffer[0] = '1';
  2004                        ;
  2005                        ;		fr = f_write(f,buffer,read,&read);
  2006                        ;
  2007                        ;		k_debug_integer("testDrive:f_write:writt
                    en:",read);
  2008                        ;		k_debug_byte_array("testDrive:f_write:da
                    ta:",buffer,16);
  2009                        ;
  2010                        ;
  2011                        ;		f_close(f);
  2012                        ;	}
  2013                        ;
  2014                        ;	k_debug_strings("testDrive:read:name:","RAM:\\de
                    v\\dev0");
  2015                        ;	fr = f_open(f,"RAM:\\dev\\dev0",FA_READ);
  2016                        ;	if(fr == FR_OK)
  2017                        ;	{
  2018                        ;		memset(buffer,0,16);
  2019                        ;		fr = f_read(f,buffer,16,&read);
  2020                        ;		k_debug_integer("testDrive:f_read:read:"
                    ,read);
  2021                        ;		k_debug_byte_array("testDrive:f_read:dat
                    a:",buffer,16);
  2022                        ;		f_close(f);
  2023                        ;	}
  2024                        ;	k_debug_strings("testDrive:read:name:","RAM:\\de
                    v\\dev16");
  2025                        ;	fr = f_open(f,"RAM:\\dev\\dev16",FA_READ);
  2026                        ;	if(fr == FR_OK)
  2027                        ;	{
  2028                        ;		memset(buffer,0,16);
  2029                        ;		fr = f_read(f,buffer,16,&read);
  2030                        ;		k_debug_integer("testDrive:f_read:read:"
                    ,read);
  2031                        ;		k_debug_byte_array("testDrive:f_read:dat
                    a:",buffer,16);
  2032                        ;		f_close(f);
  2033                        ;
  2034                        ;
  2035                        ;	k_mem_deallocate_heap(fileInfo);
  2036                        ;	k_mem_deallocate_heap(fs);
  2037                        ;	k_mem_deallocate_heap(dir);
  2038                        ;	k_mem_deallocate_heap(f);
  2039                        ;}
  2040                        ;*/
  2041                        ;
  2042                        ;/*
  2043                        ;VOID testHD(VOID)
  2044                        ;{
  2045                        ;	testDrive("HD:","HD:\\");
  2046                        ;}
  2047                        ;
  2048                        ;VOID testSD(VOID)
  2049                        ;{
  2050                        ;	testDrive("SD:","SD:\\");
  2051                        ;}
  Mon Aug  9 2021 16:52                                                Page 40


  2052                        ;*/
  2053                        ;
  2054                        ;/*
  2055                        ;VOID testFonts(VOID)
  2056                        ;{
  2057                        ;	FATFS *fs = NULL;
  2058                        ;	FIL* f = NULL;
  2059                        ;	FRESULT fr = 0;
  2060                        ;	LPSTR path = "HD:\\system\\fonts\\8x8FXOS.FON";
  2061                        ;	LPCSTR drive;
  2062                        ;	PFXRFHEADER resFile = NULL;
  2063                        ;	PFXRFHEADER_FONT fontFile = NULL;
  2064                        ;	UINT read = 0;
  2065                        ;
  2066                        ;	k_debug_string("testFonts\r\n");
  2067                        ;
  2068                        ;	fs = k_mem_allocate_heap(sizeof(FATFS));
  2069                        ;	f = k_mem_allocate_heap(sizeof(FIL));
  2070                        ;	//name = k_mem_allocate_heap(256);
  2071                        ;
  2072                        ;	resFile = k_mem_allocate_heap(16 * 1024);
  2073                        ;
  2074                        ;	drive = k_string_copy_to_delimiter(path,':');
  2075                        ;	fr = f_mount(fs, drive,1);
  2076                        ;    if(fr != FR_OK)
  2077                        ;    {
  2078                        ;        k_debug_string("testFonts::Failed to moun
                    t HD!\r\n");
  2079                        ;        return;
  2080                        ;    }
  2081                        ;
  2082                        ;	fr = f_open(f,path,FA_READ);
  2083                        ;	if(fr == FR_OK)
  2084                        ;	{
  2085                        ;		f_read(f,(LPVOID)resFile,16 * 1024,&read
                    );
  2086                        ;
  2087                        ;
  2088                        ;		k_debug_integer("testFonts:read:",read);
  2089                        ;		k_debug_nstrings("testFonts:res-magic:",
                    resFile->magic,4);
  2090                        ;		k_debug_integer("testFonts:res-major:",r
                    esFile->major);
  2091                        ;		k_debug_integer("testFonts:res-minor:",r
                    esFile->minor);
  2092                        ;		k_debug_integer("testFonts:res-type:",re
                    sFile->type);
  2093                        ;		k_debug_integer("testFonts:res-header:",
                    resFile->resheaderSize);
  2094                        ;
  2095                        ;		fontFile = (PFXRFHEADER_FONT)((ULONG)(&r
                    esFile->resheaderSize) + 1L);
  2096                        ;
  2097                        ;
  2098                        ;		k_debug_nstrings("testFonts:res-magic:",
                    fontFile->title,16);
  2099                        ;		k_debug_integer("testFonts:res-height:",
                    fontFile->height);
  Mon Aug  9 2021 16:52                                                Page 41


  2100                        ;		k_debug_integer("testFonts:res-width:",f
                    ontFile->width);
  2101                        ;
  2102                        ;		k_debug_hex("testFonts:res-data:", *((LP
                    STR)((ULONG)(&fontFile->width) + 1L)) );
  2103                        ;	}
  2104                        ;
  2105                        ;	k_mem_deallocate_heap(resFile);
  2106                        ;
  2107                        ;	//k_mem_deallocate_heap(name);
  2108                        ;	k_mem_deallocate_heap(f);
  2109                        ;	k_mem_deallocate_heap(fs);
  2110                        ;
  2111                        ;}
  2112                        ;
  2113                        ;*/
  2114                        ;/*
  2115                        ;fr = f_open(f,"HD:\\FILE.TMP", FA_CREATE_ALWAYS |
                     FA_OPEN_ALWAYS | FA_CREATE_NEW );
  2116                        ;k_debug_integer("open file:",fr);
  2117                        ;if(fr == FR_OK)
  2118                        ;{
  2119                        ;
  2120                        ;	//fr = f_puts("TEST1=TESTVALUE\n",f);
  2121                        ;	//k_debug_integer("f_write:",fr);
  2122                        ;	//k_debug_integer("f_write:written:",written);
  2123                        ;
  2124                        ;	f_close(f);
  2125                        ;}
  2126                        ;*/
  2127                        ;/*
  2128                        ;#define UART_TRHBu 	  ((LPSTR)(0xAF18F8))
  2129                        ;#define UART_DLLu 	  ((LPSTR)(0xAF18F8))
  2130                        ;#define UART_DLHu 	  ((LPSTR)(0xAF18F9))
  2131                        ;#define UART_IERu 	  ((LPSTR)(0xAF18F9))
  2132                        ;#define UART_FCRu 	  ((LPSTR)(0xAF18FA))
  2133                        ;#define UART_IIRu 	  ((LPSTR)(0xAF18FA))
  2134                        ;#define UART_LCRu 	  ((LPSTR)(0xAF18FB))
  2135                        ;#define UART_MCRu 	  ((LPSTR)(0xAF18FC))
  2136                        ;#define UART_LSRu 	  ((LPSTR)(0xAF18FD))
  2137                        ;#define UART_MSRu 	  ((LPSTR)(0xAF18FE))
  2138                        ;#define UART_SRu 	  ((LPSTR)(0xAF18FF))
  2139                        ;
  2140                        ;//; Interupt Enable Flags
  2141                        ;#define UINT_LOW_POWER   (0x20)
  2142                        ;#define UINT_SLEEP_MODE   (0x10)
  2143                        ;#define UINT_MODEM_STATUS   (0x08)
  2144                        ;#define UINT_LINE_STATUS   (0x04)
  2145                        ;#define UINT_THR_EMPTY   (0x02)
  2146                        ;#define UINT_DATA_AVAIL   (0x01)
  2147                        ;
  2148                        ;//; Interrupt Identification Register Codes
  2149                        ;#define IIR_FIFO_ENABLED   (0x80)
  2150                        ;#define IIR_FIFO_NONFUNC   (0x40)
  2151                        ;#define IIR_FIFO_64BYTE   (0x20)
  2152                        ;#define IIR_MODEM_STATUS   (0x00)
  2153                        ;#define IIR_THR_EMPTY   (0x02)
  2154                        ;#define IIR_DATA_AVAIL   (0x04)
  Mon Aug  9 2021 16:52                                                Page 42


  2155                        ;#define IIR_LINE_STATUS   (0x06)
  2156                        ;#define IIR_TIMEOUT   (0x0C)
  2157                        ;#define IIR_INTERRUPT_PENDING   (0x01)
  2158                        ;
  2159                        ;//; Line Control Register Codes
  2160                        ;#define LCR_DLB   (0x80)
  2161                        ;#define LCR_SBE   (0x60)
  2162                        ;
  2163                        ;#define LCR_PARITY_NONE   (0x00)
  2164                        ;#define LCR_PARITY_ODD   (0x08)
  2165                        ;#define LCR_PARITY_EVEN   (0x18)
  2166                        ;#define LCR_PARITY_MARK   (0x28)
  2167                        ;#define LCR_PARITY_SPACE   (0x38)
  2168                        ;
  2169                        ;#define LCR_STOPBIT_1   (0x00)
  2170                        ;#define LCR_STOPBIT_2   (0x04)
  2171                        ;
  2172                        ;#define LCR_DATABITS_5   (0x00)
  2173                        ;#define LCR_DATABITS_6   (0x01)
  2174                        ;#define LCR_DATABITS_7   (0x02)
  2175                        ;#define LCR_DATABITS_8   (0x03)
  2176                        ;
  2177                        ;#define LSR_ERR_RECIEVE   (0x80)
  2178                        ;#define LSR_XMIT_DONE   (0x40)
  2179                        ;#define LSR_XMIT_EMPTY   (0x20)
  2180                        ;#define LSR_BREAK_INT   (0x10)
  2181                        ;#define LSR_ERR_FRAME   (0x08)
  2182                        ;#define LSR_ERR_PARITY   (0x04)
  2183                        ;#define LSR_ERR_OVERRUN   (0x02)
  2184                        ;#define LSR_DATA_AVAIL   (0x01)
  2185                        ;
  2186                        ;VOID k_init_com_ports(LPCSTR major,LPSTR minor)
  2187                        ;{
  2188                        ;	LPCSTR version = "Using FMXU+ Serial\r\n";
  2189                        ;
  2190                        ;	if(major[0] == 'A')
  2191                        ;	{
  2192                        ;		UART_LCRu[0] = (UART_LCRu[0] | LCR_DLB);
  2193                        ;
  2194                        ;		UART_DLHu[0] = 0x00;
  2195                        ;		UART_DLLu[0] = 0x08;
  2196                        ;		UART_LCRu[0] = (UART_LCRu[0] ^ LCR_DLB);
  2197                        ;
  2198                        ;		UART_LCRu[0] = (LCR_PARITY_NONE | LCR_ST
                    OPBIT_1 | LCR_DATABITS_8) & 0x7F;
  2199                        ;
  2200                        ;		UART_FCRu[0] = 0xC1;
  2201                        ;
  2202                        ;		while(*version)
  2203                        ;		{
  2204                        ;			while((UART_LSRu[0] & LSR_XMIT_E
                    MPTY) != LSR_XMIT_EMPTY);
  2205                        ;			UART_TRHBu[0] = (CHAR)(version[0
                    ]);
  2206                        ;
  2207                        ;			version++;
  2208                        ;		}
  2209                        ;	}
  Mon Aug  9 2021 16:52                                                Page 43


  2210                        ;	else
  2211                        ;	{
  2212                        ;		k_uart_enableirq_ports();
  2213                        ;	}
  2214                        ;}
  2215                        ;*/
  2216                        ;/*
  2217                        ;void main(void)
  2218                        ;{
  2219                        ;	PEXECUTIVE 	  pExecutive 	= NULL;
  2220                        ;	PEVENTMANAGER pEventManager = NULL;
  2221                        ;	PFXSTRING pfxs = NULL;
  2222                        ;
  2223                        ;	LPVOID ptrMemTest = NULL;
  2224                        ;	ULONG heapSize = 0;
  2225                        ;
  2226                        ;	char rmbuffer[16];
  2227                        ;	int pos = 0;
  2228                        ;
  2229                        ;	ULONG availableMem = 0;
  2230                        ;	KRESULT kerr = KERR_SUCCESS;
  2231                        ;	int marker = 10;
  2232                        ;	int i = 0;
  2233                        ;
  2234                        ;	CHAR releaseMajor[2];
  2235                        ;	CHAR releaseMinor[2];
  2236                        ;
  2237                        ;
  2238                        ;	((LPSTR)0xAFA000)[marker++] = 'A';
  2239                        ;
  2240                        ;
  2241                        ;	k_get_c256_major_version(releaseMajor);
  2242                        ;	k_get_c256_minor_version(releaseMinor);
  2243                        ;
  2244                        ;
  2245                        ;
  2246                        ;
  2247                        ;	//
  2248                        ;	//
  2249                        ;	//
  2250                        ;	k_user_EnableOSDebug();
  2251                        ;	//
  2252                        ;	//
  2253                        ;	//
  2254                        ;
  2255                        ;	((LPSTR)0xAFA000)[marker++] = 'B';
  2256                        ;
  2257                        ;	k_initializeZeroPage();
  2258                        ;
  2259                        ;	//k_init_keyboard();
  2260                        ;	//k_uart_enableirq_ports();
  2261                        ;
  2262                        ;	k_init_com_ports(releaseMajor,releaseMinor);
  2263                        ;
  2264                        ;	for(i=0;i<25;i++)
  2265                        ;	{
  2266                        ;		while((UART_LSRu[0] & LSR_XMIT_EMPTY) !=
                     LSR_XMIT_EMPTY);
  Mon Aug  9 2021 16:52                                                Page 44


  2267                        ;
  2268                        ;		((LPSTR)0xAFA000)[marker++] = '2';
  2269                        ;
  2270                        ;		UART_TRHBu[0] = (CHAR)(65 + i);
  2271                        ;	}
  2272                        ;
  2273                        ;
  2274                        ;
  2275                        ;	((LPSTR)0xAFA000)[marker++] = 'C';
  2276                        ;
  2277                        ;	k_debug_crlf();
  2278                        ;	k_debug_string("********************************
                    **\r\n");
  2279                        ;	k_debug_string("******  Welcome to FX/OS   *****
                    **\r\n");
  2280                        ;	k_debug_string("******       Booting       *****
                    **\r\n");
  2281                        ;	k_debug_string("********************************
                    **\r\n");
  2282                        ;
  2283                        ;	//k_gui_init_mousepointer(TRUE);
  2284                        ;
  2285                        ;	((LPSTR)0xAFA000)[marker++] = 'D';
  2286                        ;
  2287                        ;	k_set_text_colors();
  2288                        ;
  2289                        ;	((LPSTR)0xAFA000)[marker++] = 'E';
  2290                        ;
  2291                        ;	k_initialize_text_fonts(0);
  2292                        ;	k_initialize_text();
  2293                        ;	k_enable_text_cursor(0);
  2294                        ;
  2295                        ;	((LPSTR)0xAFA000)[marker++] = 'F';
  2296                        ;
  2297                        ;	k_enable_text_mode();
  2298                        ;	k_set_border_color(0x00,0x00,0x00);
  2299                        ;	k_enable_border();
  2300                        ;
  2301                        ;	k_debug_string("k_clear_screen\r\n");
  2302                        ;
  2303                        ;	k_clear_screen(0);
  2304                        ;
  2305                        ;
  2306                        ;	((LPSTR)0xAFA000)[marker++] = 'G';
  2307                        ;
  2308                        ;
  2309                        ;	//*BORDER_X_SIZE = 5;
  2310                        ;	//*BORDER_Y_SIZE = 5;
  2311                        ;
  2312                        ;	((LPSTR)0xAFA000)[marker++] = 'H';
  2313                        ;
  2314                        ;	k_debug_string("k_text_mode_dialog\r\n");
  2315                        ;	k_text_mode_dialog(1,0,73,15,NULL);
  2316                        ;
  2317                        ;	k_get_c256_major_version(rmbuffer);
  2318                        ;	k_debug_strings("C256 VERSION MAJOR:",rmbuffer);
  2319                        ;	k_get_c256_minor_version(rmbuffer);
  2320                        ;	k_debug_strings("C256 VERSION MINOR:",rmbuffer);
  Mon Aug  9 2021 16:52                                                Page 45


  2321                        ;
  2322                        ;	k_debug_pointer("BUILD SYSTEM HEAP:",(LPVOID)FXO
                    S_BUILD_FAR_HEAP_ADDR);
  2323                        ;	k_debug_pointer("             SIZE:",(LPVOID)FXO
                    S_BUILD_FAR_HEAP_SIZE);
  2324                        ;
  2325                        ;
  2326                        ;	k_debug_string("k_report_configuration\r\n");
  2327                        ;	line = k_report_configuration(3,line);
  2328                        ;	k_pos_console(line,4);
  2329                        ;	//k_run_loop();
  2330                        ;
  2331                        ;
  2332                        ;	k_debug_hex("L24BYTE:",L24BYTE(0x12345678));
  2333                        ;	k_debug_hex("M24BYTE:",M24BYTE(0x12345678));
  2334                        ;	k_debug_hex("H24BYTE:",H24BYTE(0x12345678));
  2335                        ;	k_debug_hex("H32BYTE:",H32BYTE(0x12345678));
  2336                        ;
  2337                        ;
  2338                        ;	k_debug_string("k_fcheck_system_memory\r\n");
  2339                        ;	availableMem = k_fcheck_system_memory(ReportMemo
                    ry);
  2340                        ;
  2341                        ;	k_getZeroPage()->availableMemory 	= availa
                    bleMem;
  2342                        ;	k_getZeroPage()->availableMemoryK	= availa
                    bleMem/1024+1;
  2343                        ;
  2344                        ;	heapSize = k_heap_integrity_check();
  2345                        ;	k_debug_long("k_heap_integrity_check::heapsize:"
                    ,heapSize);
  2346                        ;	//pheapInfo = umm_info(NULL,0);
  2347                        ;
  2348                        ;
  2349                        ;	k_debug_strings("DATE:",(LPSTR)k_get_date_string
                    (rmbuffer));
  2350                        ;	k_debug_strings("TIME:",(LPSTR)k_get_localtime_s
                    tring(rmbuffer));
  2351                        ;
  2352                        ;
  2353                        ;	k_debug_integer("sizeof(short int):",sizeof(shor
                    t int));
  2354                        ;	k_debug_integer("sizeof(unsigned short int):",si
                    zeof(unsigned short int));
  2355                        ;	k_debug_integer("sizeof(int):",sizeof(int));
  2356                        ;	k_debug_integer("sizeof(unsigned int):",sizeof(u
                    nsigned int));
  2357                        ;	k_debug_integer("sizeof(long):",sizeof(long));
  2358                        ;	k_debug_integer("sizeof(LPVOID):",sizeof(LPVOID)
                    );
  2359                        ;	k_debug_integer("sizeof(size_t):",sizeof(size_t)
                    );
  2360                        ;	k_debug_integer("sizeof(FXOSMESSAGE):",sizeof(FX
                    OSMESSAGE));
  2361                        ;	k_debug_integer("sizeof(FXCMDMESSAGE):",sizeof(F
                    XCMDMESSAGE));
  2362                        ;
  2363                        ;
  Mon Aug  9 2021 16:52                                                Page 46


  2364                        ;
  2365                        ;	k_write_console("\n\n");
  2366                        ;	k_pos_console(k_row_console(),3);
  2367                        ;	k_write_console(k_strip_padding(k_longtodec(k_ge
                    tZeroPage()->availableMemoryK,rmbuffer)));
  2368                        ;	k_write_console("K RAM Available");
  2369                        ;
  2370                        ;	k_debug_long("AVAIL MEM:", availableMem);
  2371                        ;
  2372                        ;	k_write_console("\n");
  2373                        ;	k_pos_console(k_row_console(),3);
  2374                        ;	k_write_console(k_strip_padding(k_longtodec(heap
                    Size/1024 ,rmbuffer)));
  2375                        ;	k_write_console("K HEAP RAM Available");
  2376                        ;
  2377                        ;
  2378                        ;	if(sizeof(FXOSMESSAGE)!=sizeof(FXCMDMESSAGE))
  2379                        ;		k_exec_throw_exception(THIS_MODULE,0x100
                    00001,"VERSION ERROR: FXOSMESSAGE size mismatch",-1);
  2380                        ;
  2381                        ;	k_debug_integer("k_get_cols_visible:",k_get_cols
                    _visible());
  2382                        ;	k_debug_integer("k_get_cols_per_line:",k_get_col
                    s_per_line());
  2383                        ;	k_debug_integer("k_get_lines_visible",k_get_line
                    s_visible());
  2384                        ;	k_debug_integer("k_get_lines_max:",k_get_lines_m
                    ax());
  2385                        ;
  2386                        ;
  2387                        ;	k_dos_load_drivers();
  2388                        ;
  2389                        ;	testHD();
  2390                        ;	testSD();
  2391                        ;
  2392                        ;	((LPSTR)0xAFA000)[marker++] = 'Z';
  2393                        ;	while(1);
  2394                        ;
  2395                        ;
  2396                        ;	return;
  2397                        ;}
  2398                        ;*/
  2399                        ;
  2400                        ;void main(void)
  2401                        ;{
  2402                        	.line	590
  2403                        	.line	591
  2404                        	entry
  2405                        	xdef	~~main
  2406                        	func
  2407                        	.function	591
  2408                        ~~main:
  2409                        	longa	on
  2410                        	longi	on
  2411 00:810D: 3B           	tsc
  2412 00:810E: 38           	sec
  2413 00:810F: E9 5B 00     	sbc	#L14
  2414 00:8112: 1B           	tcs
  Mon Aug  9 2021 16:52                                                Page 47


  2415 00:8113: 0B           	phd
  2416 00:8114: 5B           	tcd
  2417                        	.block	591
  2418                        ;	PFXZEROPAGE   zp = NULL;
  2419                        ;	PEXECUTIVE 	  pExecutive 	= NULL;
  2420                        ;	PEVENTMANAGER pEventManager = NULL;
  2421                        ;	PFXSTRING pfxs = NULL;
  2422                        ;	LPCSTR driverLog = NULL;
  2423                        ;
  2424                        ;	LPVOID ptrMemTest = NULL;
  2425                        ;	ULONG heapSize = 0;
  2426                        ;	ULONG endianCheck = 0x12345678L;
  2427                        ;
  2428                        ;	HANDLE hdriver = NULL;
  2429                        ;	UINT   dsize = 0L;
  2430                        ;	BYTE i,c,r;
  2431                        ;	char rmbuffer[16];
  2432                        ;	int pos = 0;
  2433                        ;	ULONG availableMem = 0;
  2434                        ;	//KRESULT kerr = KERR_SUCCESS;
  2435                        ;	//PIPCPORT myport = NULL;
  2436                        ;	//PIPCPORT debugport = NULL;
  2437                        ;	//PFXSTRING ipc_data = NULL;
  2438                        ;	UINT bootMode = 0;
  2439                        ;	UINT index = 0;
  2440                        ;	//UINT z = 0;
  2441                        ;	HANDLE hString = NULL;
  2442                        ;	//PFXRFHEADER_STRING_ENTRY pentry = NULL;
  2443                        ;	//PFXRFHEADER_STRING pstrHead = NULL;
  2444                        ;
  2445                        ;	PFX_DEVICE_DRIVER pstrHead = NULL;
  2446                        ;
  2447                        ;	CHAR releaseMajor[2];
  2448                        ;	CHAR releaseMinor[2];
  2449                        ;
  2450                        ;	((LPSTR)0xAFA003)[0] = '3';
  2451             00000000   zp_1	set	0
  2452             00000004   pExecutive_1	set	4
  2453             00000008   pEventManager_1	set	8
  2454             0000000C   pfxs_1	set	12
  2455             00000010   driverLog_1	set	16
  2456             00000014   ptrMemTest_1	set	20
  2457             00000018   heapSize_1	set	24
  2458             0000001C   endianCheck_1	set	28
  2459             00000020   hdriver_1	set	32
  2460             00000024   dsize_1	set	36
  2461             00000026   i_1	set	38
  2462             00000027   c_1	set	39
  2463             00000028   r_1	set	40
  2464             00000029   rmbuffer_1	set	41
  2465             00000039   pos_1	set	57
  2466             0000003B   availableMem_1	set	59
  2467             0000003F   bootMode_1	set	63
  2468             00000041   index_1	set	65
  2469             00000043   hString_1	set	67
  2470             00000047   pstrHead_1	set	71
  2471             0000004B   releaseMajor_1	set	75
  2472             0000004D   releaseMinor_1	set	77
  Mon Aug  9 2021 16:52                                                Page 48


  2473                        	.sym	zp,0,138,1,32,54
  2474                        	.sym	pExecutive,4,138,1,32,62
  2475                        	.sym	pEventManager,8,138,1,32,78
  2476                        	.sym	pfxs,12,138,1,32,61
  2477                        	.sym	driverLog,16,142,1,32
  2478                        	.sym	ptrMemTest,20,129,1,32
  2479                        	.sym	heapSize,24,18,1,32
  2480                        	.sym	endianCheck,28,18,1,32
  2481                        	.sym	hdriver,32,129,1,32
  2482                        	.sym	dsize,36,16,1,16
  2483                        	.sym	i,38,14,1,8
  2484                        	.sym	c,39,14,1,8
  2485                        	.sym	r,40,14,1,8
  2486                        	.sym	rmbuffer,41,110,1,0,16
  2487                        	.sym	pos,57,5,1,16
  2488                        	.sym	availableMem,59,18,1,32
  2489                        	.sym	bootMode,63,16,1,16
  2490                        	.sym	index,65,16,1,16
  2491                        	.sym	hString,67,129,1,32
  2492                        	.sym	pstrHead,71,138,1,32,58
  2493                        	.sym	releaseMajor,75,110,1,0,2
  2494                        	.sym	releaseMinor,77,110,1,0,2
  2495 00:8115: 64 0D        	stz	<L15+zp_1
  2496 00:8117: 64 0F        	stz	<L15+zp_1+2
  2497 00:8119: 64 11        	stz	<L15+pExecutive_1
  2498 00:811B: 64 13        	stz	<L15+pExecutive_1+2
  2499 00:811D: 64 15        	stz	<L15+pEventManager_1
  2500 00:811F: 64 17        	stz	<L15+pEventManager_1+2
  2501 00:8121: 64 19        	stz	<L15+pfxs_1
  2502 00:8123: 64 1B        	stz	<L15+pfxs_1+2
  2503 00:8125: 64 1D        	stz	<L15+driverLog_1
  2504 00:8127: 64 1F        	stz	<L15+driverLog_1+2
  2505 00:8129: 64 21        	stz	<L15+ptrMemTest_1
  2506 00:812B: 64 23        	stz	<L15+ptrMemTest_1+2
  2507 00:812D: 64 25        	stz	<L15+heapSize_1
  2508 00:812F: 64 27        	stz	<L15+heapSize_1+2
  2509 00:8131: A9 78 56     	lda	#$5678
  2510 00:8134: 85 29        	sta	<L15+endianCheck_1
  2511 00:8136: A9 34 12     	lda	#$1234
  2512 00:8139: 85 2B        	sta	<L15+endianCheck_1+2
  2513 00:813B: 64 2D        	stz	<L15+hdriver_1
  2514 00:813D: 64 2F        	stz	<L15+hdriver_1+2
  2515 00:813F: 64 31        	stz	<L15+dsize_1
  2516 00:8141: 64 46        	stz	<L15+pos_1
  2517 00:8143: 64 48        	stz	<L15+availableMem_1
  2518 00:8145: 64 4A        	stz	<L15+availableMem_1+2
  2519 00:8147: 64 4C        	stz	<L15+bootMode_1
  2520 00:8149: 64 4E        	stz	<L15+index_1
  2521 00:814B: 64 50        	stz	<L15+hString_1
  2522 00:814D: 64 52        	stz	<L15+hString_1+2
  2523 00:814F: 64 54        	stz	<L15+pstrHead_1
  2524 00:8151: 64 56        	stz	<L15+pstrHead_1+2
  2525                        	.line	624
  2526 00:8153: E2 20        	sep	#$20
  2527                        	longa	off
  2528 00:8155: A9 33        	lda	#$33
  2529 00:8157: 8F 03 A0 AF  	sta	>11509763
  2530 00:815B: C2 20        	rep	#$20
  Mon Aug  9 2021 16:52                                                Page 49


  2531                        	longa	on
  2532                        ;
  2533                        ;	//
  2534                        ;	// Get board version as LPCSTR
  2535                        ;	//
  2536                        ;	k_get_c256_major_version(releaseMajor);
  2537                        	.line	629
  2538 00:815D: F4 00 00     	pea	#0
  2539 00:8160: 18           	clc
  2540 00:8161: 7B           	tdc
  2541 00:8162: 69 58 00     	adc	#<L15+releaseMajor_1
  2542 00:8165: 48           	pha
  2543 00:8166: 22 xx xx xx  	jsl	~~k_get_c256_major_version
  2544                        ;	k_get_c256_minor_version(releaseMinor);
  2545                        	.line	630
  2546 00:816A: F4 00 00     	pea	#0
  2547 00:816D: 18           	clc
  2548 00:816E: 7B           	tdc
  2549 00:816F: 69 5A 00     	adc	#<L15+releaseMinor_1
  2550 00:8172: 48           	pha
  2551 00:8173: 22 xx xx xx  	jsl	~~k_get_c256_minor_version
  2552                        ;	//
  2553                        ;	// Turn off debugging to prevent anything hittin
                    g serial before init
  2554                        ;	//
  2555                        ;	k_user_DisableOSDebug();
  2556                        	.line	634
  2557 00:8177: 22 xx xx xx  	jsl	~~k_user_DisableOSDebug
  2558                        ;	//
  2559                        ;	// Initialize zero page entries
  2560                        ;	//
  2561                        ;	zp = k_initializeZeroPage();
  2562                        	.line	638
  2563 00:817B: 22 xx xx xx  	jsl	~~k_initializeZeroPage
  2564 00:817F: 85 0D        	sta	<L15+zp_1
  2565 00:8181: 86 0F        	stx	<L15+zp_1+2
  2566                        ;	//
  2567                        ;	// clear console for codes
  2568                        ;	//
  2569                        ;	/*
  2570                        ;	k_clear_console();
  2571                        ;	k_clear_screen(0);
  2572                        ;	k_set_text_colors();
  2573                        ;
  2574                        ;	k_initialize_text_fonts(0);
  2575                        ;	k_initialize_text();
  2576                        ;	k_enable_text_cursor(0);
  2577                        ;
  2578                        ;	k_enable_text_mode();
  2579                        ;	k_set_border_color(0x00,0x00,0x00);
  2580                        ;	k_enable_border();
  2581                        ;
  2582                        ;	k_set_text_color((CHAR)15);
  2583                        ;
  2584                        ;	k_clear_screen(0);
  2585                        ;	*/
  2586                        ;	//
  2587                        ;	// Load built-in device drivers
  Mon Aug  9 2021 16:52                                                Page 50


  2588                        ;	//
  2589                        ;	driverLog = k_dos_load_drivers();
  2590                        	.line	662
  2591 00:8183: 22 xx xx xx  	jsl	~~k_dos_load_drivers
  2592 00:8187: 85 1D        	sta	<L15+driverLog_1
  2593 00:8189: 86 1F        	stx	<L15+driverLog_1+2
  2594                        ;	//
  2595                        ;	// Turn on debugging (if needed)
  2596                        ;	//
  2597                        ;	k_user_EnableOSDebug();
  2598                        	.line	666
  2599 00:818B: 22 xx xx xx  	jsl	~~k_user_EnableOSDebug
  2600                        ;	// FIX FOR U and FMX
  2601                        ;	//k_init_keyboard();
  2602                        ;
  2603                        ;
  2604                        ;
  2605                        ;
  2606                        ;
  2607                        ;
  2608                        ;	/*
  2609                        ;	k_debug_string("initSN76489\r\n");
  2610                        ;
  2611                        ;	//psg_init();
  2612                        ;
  2613                        ;	psg_set_atten(0, 7);
  2614                        ;
  2615                        ;	psg_tone(0, G_notes[26] );
  2616                        ;	sleep(7000);
  2617                        ;	psg_tone(0, G_notes[31] );
  2618                        ;	sleep(5000);
  2619                        ;	psg_tone(0, G_notes[27] );
  2620                        ;	sleep(10000);
  2621                        ;
  2622                        ;	psg_set_atten(0, 0xF);
  2623                        ;
  2624                        ;
  2625                        ;
  2626                        ;	psg_tone(0,0);
  2627                        ;	psg_tone(1,0);
  2628                        ;	*/
  2629                        ;
  2630                        ;	//k_debug_string("MUTEALL\r\n");
  2631                        ;	//psg_set_atten(0, 0xF);
  2632                        ;	//psg_set_atten(1, 0xF);
  2633                        ;	//psg_set_atten(2, 0xF);
  2634                        ;	//psg_set_atten(3, 0xF);
  2635                        ;
  2636                        ;	//((LPSTR)(0xAFF100))[0] = 0xBF;
  2637                        ;	//((LPSTR)(0xAFF100))[0] = 0xDF;
  2638                        ;	//((LPSTR)(0xAFF100))[0] = 0xFF;
  2639                        ;	/*
  2640                        ;	initSN76489();
  2641                        ;
  2642                        ;	setVolume(1,VOL_MED);
  2643                        ;	for(pos=3;pos<20;pos++)
  2644                        ;	{
  2645                        ;		k_debug_hex("PLAY:",pos);
  Mon Aug  9 2021 16:52                                                Page 51


  2646                        ;		play(1, pos );
  2647                        ;		sleep(15000);
  2648                        ;		play(1, 0 );
  2649                        ;	}
  2650                        ;	k_debug_string("MUTEALL\r\n");
  2651                        ;	muteAll();
  2652                        ;	*/
  2653                        ;
  2654                        ;	//k_uart_enableirq_ports();
  2655                        ;	// REPLACES ORIGINAL ABOVE CALL
  2656                        ;	//k_init_com_ports(releaseMajor,releaseMinor);
  2657                        ;
  2658                        ;	availableMem=0;
  2659                        	.line	725
  2660 00:818F: 64 48        	stz	<L15+availableMem_1
  2661 00:8191: 64 4A        	stz	<L15+availableMem_1+2
  2662                        ;
  2663                        ;	k_clear_console();
  2664                        	.line	727
  2665 00:8193: 22 xx xx xx  	jsl	~~k_clear_console
  2666                        ;	k_clear_screen(0);
  2667                        	.line	728
  2668 00:8197: F4 00 00     	pea	#<$0
  2669 00:819A: 22 xx xx xx  	jsl	~~k_clear_screen
  2670                        ;
  2671                        ;	k_debug_crlf();
  2672                        	.line	730
  2673 00:819E: 22 xx xx xx  	jsl	~~k_debug_crlf
  2674                        ;	k_debug_string("********************************
                    **\r\n");
  2675                        	.line	731
  2676 00:81A2: F4 xx xx     	pea	#^L13
  2677 00:81A5: F4 xx xx     	pea	#<L13
  2678 00:81A8: 22 xx xx xx  	jsl	~~k_debug_string
  2679                        ;	k_debug_string("******  Welcome to FX/OS   *****
                    **\r\n");
  2680                        	.line	732
  2681 00:81AC: F4 xx xx     	pea	#^L13+37
  2682 00:81AF: F4 xx xx     	pea	#<L13+37
  2683 00:81B2: 22 xx xx xx  	jsl	~~k_debug_string
  2684                        ;	k_debug_string("******       Booting       *****
                    **\r\n");
  2685                        	.line	733
  2686 00:81B6: F4 xx xx     	pea	#^L13+74
  2687 00:81B9: F4 xx xx     	pea	#<L13+74
  2688 00:81BC: 22 xx xx xx  	jsl	~~k_debug_string
  2689                        ;	k_debug_string("********************************
                    **\r\n");
  2690                        	.line	734
  2691 00:81C0: F4 xx xx     	pea	#^L13+111
  2692 00:81C3: F4 xx xx     	pea	#<L13+111
  2693 00:81C6: 22 xx xx xx  	jsl	~~k_debug_string
  2694                        ;
  2695                        ;
  2696                        ;	//
  2697                        ;	// Output device load log
  2698                        ;	//
  2699                        ;	if(driverLog)
  Mon Aug  9 2021 16:52                                                Page 52


  2700                        	.line	740
  2701                        ;	{
  2702 00:81CA: A5 1D        	lda	<L15+driverLog_1
  2703 00:81CC: 05 1F        	ora	<L15+driverLog_1+2
  2704 00:81CE: D0 03        	bne	L17
  2705 00:81D0: 82 1A 00     	brl	L10003
  2706                        L17:
  2707                        	.line	741
  2708                        ;		k_debug_string("Device Load Log Follows:
                    \r\n");
  2709                        	.line	742
  2710 00:81D3: F4 xx xx     	pea	#^L13+148
  2711 00:81D6: F4 xx xx     	pea	#<L13+148
  2712 00:81D9: 22 xx xx xx  	jsl	~~k_debug_string
  2713                        ;		k_debug_string((LPSTR)driverLog);
  2714                        	.line	743
  2715 00:81DD: D4 1F        	pei	<L15+driverLog_1+2
  2716 00:81DF: D4 1D        	pei	<L15+driverLog_1
  2717 00:81E1: 22 xx xx xx  	jsl	~~k_debug_string
  2718                        ;		k_mem_deallocate_heap((LPVOID)driverLog)
                    ;
  2719                        	.line	744
  2720 00:81E5: D4 1F        	pei	<L15+driverLog_1+2
  2721 00:81E7: D4 1D        	pei	<L15+driverLog_1
  2722 00:81E9: 22 xx xx xx  	jsl	~~k_mem_deallocate_heap
  2723                        ;	}
  2724                        	.line	745
  2725                        ;
  2726                        ;	//k_debug_string_com1("%OSBOOTING COM1%\r\n");
  2727                        ;	//k_debug_string_com2("%OSBOOTING COM2%\r\n");
  2728                        ;
  2729                        ;	// FIX FOR U and FMX
  2730                        ;	k_gui_init_mousepointer(TRUE);
  2731                        L10003:
  2732                        	.line	751
  2733 00:81ED: F4 01 00     	pea	#<$1
  2734 00:81F0: 22 xx xx xx  	jsl	~~k_gui_init_mousepointer
  2735                        ;
  2736                        ;	k_set_text_colors();
  2737                        	.line	753
  2738 00:81F4: 22 xx xx xx  	jsl	~~k_set_text_colors
  2739                        ;
  2740                        ;	k_initialize_text_fonts(0);
  2741                        	.line	755
  2742 00:81F8: F4 00 00     	pea	#<$0
  2743 00:81FB: 22 xx xx xx  	jsl	~~k_initialize_text_fonts
  2744                        ;	k_initialize_text();
  2745                        	.line	756
  2746 00:81FF: 22 xx xx xx  	jsl	~~k_initialize_text
  2747                        ;	k_enable_text_cursor(0);
  2748                        	.line	757
  2749 00:8203: F4 00 00     	pea	#<$0
  2750 00:8206: 22 xx xx xx  	jsl	~~k_enable_text_cursor
  2751                        ;
  2752                        ;	k_enable_text_mode();
  2753                        	.line	759
  2754 00:820A: 22 xx xx xx  	jsl	~~k_enable_text_mode
  2755                        ;	k_set_border_color(0x00,0x00,0x00);
  Mon Aug  9 2021 16:52                                                Page 53


  2756                        	.line	760
  2757 00:820E: F4 00 00     	pea	#<$0
  2758 00:8211: F4 00 00     	pea	#<$0
  2759 00:8214: F4 00 00     	pea	#<$0
  2760 00:8217: 22 xx xx xx  	jsl	~~k_set_border_color
  2761                        ;	k_enable_border();
  2762                        	.line	761
  2763 00:821B: 22 xx xx xx  	jsl	~~k_enable_border
  2764                        ;
  2765                        ;	//k_debug_string("k_clear_screen\r\n");
  2766                        ;
  2767                        ;	k_clear_screen(0);
  2768                        	.line	765
  2769 00:821F: F4 00 00     	pea	#<$0
  2770 00:8222: 22 xx xx xx  	jsl	~~k_clear_screen
  2771                        ;	k_clear_console();
  2772                        	.line	766
  2773 00:8226: 22 xx xx xx  	jsl	~~k_clear_console
  2774                        ;
  2775                        ;
  2776                        ;	k_debug_string("k_text_mode_dialog\r\n");
  2777                        	.line	769
  2778 00:822A: F4 xx xx     	pea	#^L13+175
  2779 00:822D: F4 xx xx     	pea	#<L13+175
  2780 00:8230: 22 xx xx xx  	jsl	~~k_debug_string
  2781                        ;	k_text_mode_dialog(1,0,73,15,NULL);
  2782                        	.line	770
  2783 00:8234: F4 00 00     	pea	#^$0
  2784 00:8237: F4 00 00     	pea	#<$0
  2785 00:823A: F4 0F 00     	pea	#<$f
  2786 00:823D: F4 49 00     	pea	#<$49
  2787 00:8240: F4 00 00     	pea	#<$0
  2788 00:8243: F4 01 00     	pea	#<$1
  2789 00:8246: 22 xx xx xx  	jsl	~~k_text_mode_dialog
  2790                        ;
  2791                        ;	k_get_c256_major_version(rmbuffer);
  2792                        	.line	772
  2793 00:824A: F4 00 00     	pea	#0
  2794 00:824D: 18           	clc
  2795 00:824E: 7B           	tdc
  2796 00:824F: 69 36 00     	adc	#<L15+rmbuffer_1
  2797 00:8252: 48           	pha
  2798 00:8253: 22 xx xx xx  	jsl	~~k_get_c256_major_version
  2799                        ;	k_debug_strings("C256 VERSION MAJOR:",rmbuffer);
  2800                        	.line	773
  2801 00:8257: F4 00 00     	pea	#0
  2802 00:825A: 18           	clc
  2803 00:825B: 7B           	tdc
  2804 00:825C: 69 36 00     	adc	#<L15+rmbuffer_1
  2805 00:825F: 48           	pha
  2806 00:8260: F4 xx xx     	pea	#^L13+196
  2807 00:8263: F4 xx xx     	pea	#<L13+196
  2808 00:8266: 22 xx xx xx  	jsl	~~k_debug_strings
  2809                        ;	k_get_c256_minor_version(rmbuffer);
  2810                        	.line	774
  2811 00:826A: F4 00 00     	pea	#0
  2812 00:826D: 18           	clc
  2813 00:826E: 7B           	tdc
  Mon Aug  9 2021 16:52                                                Page 54


  2814 00:826F: 69 36 00     	adc	#<L15+rmbuffer_1
  2815 00:8272: 48           	pha
  2816 00:8273: 22 xx xx xx  	jsl	~~k_get_c256_minor_version
  2817                        ;	k_debug_strings("C256 VERSION MINOR:",rmbuffer);
  2818                        	.line	775
  2819 00:8277: F4 00 00     	pea	#0
  2820 00:827A: 18           	clc
  2821 00:827B: 7B           	tdc
  2822 00:827C: 69 36 00     	adc	#<L15+rmbuffer_1
  2823 00:827F: 48           	pha
  2824 00:8280: F4 xx xx     	pea	#^L13+216
  2825 00:8283: F4 xx xx     	pea	#<L13+216
  2826 00:8286: 22 xx xx xx  	jsl	~~k_debug_strings
  2827                        ;
  2828                        ;	k_debug_pointer("BUILD SYSTEM HEAP:",(LPVOID)FXO
                    S_BUILD_FAR_HEAP_ADDR);
  2829                        	.line	777
  2830 00:828A: F4 10 00     	pea	#^$100000
  2831 00:828D: F4 00 00     	pea	#<$100000
  2832 00:8290: F4 xx xx     	pea	#^L13+236
  2833 00:8293: F4 xx xx     	pea	#<L13+236
  2834 00:8296: 22 xx xx xx  	jsl	~~k_debug_pointer
  2835                        ;	k_debug_pointer("             SIZE:",(LPVOID)FXO
                    S_BUILD_FAR_HEAP_SIZE);
  2836                        	.line	778
  2837 00:829A: F4 05 00     	pea	#^$50000
  2838 00:829D: F4 00 00     	pea	#<$50000
  2839 00:82A0: F4 xx xx     	pea	#^L13+255
  2840 00:82A3: F4 xx xx     	pea	#<L13+255
  2841 00:82A6: 22 xx xx xx  	jsl	~~k_debug_pointer
  2842                        ;
  2843                        ;
  2844                        ;	k_debug_string("k_report_configuration\r\n");
  2845                        	.line	781
  2846 00:82AA: F4 xx xx     	pea	#^L13+274
  2847 00:82AD: F4 xx xx     	pea	#<L13+274
  2848 00:82B0: 22 xx xx xx  	jsl	~~k_debug_string
  2849                        ;	line = k_report_configuration(3,line);
  2850                        	.line	782
  2851 00:82B4: AD xx xx     	lda	|~~line
  2852 00:82B7: 48           	pha
  2853 00:82B8: F4 03 00     	pea	#<$3
  2854 00:82BB: 22 xx xx xx  	jsl	~~k_report_configuration
  2855 00:82BF: 8D xx xx     	sta	|~~line
  2856                        ;	k_pos_console(line,4);
  2857                        	.line	783
  2858 00:82C2: F4 04 00     	pea	#<$4
  2859 00:82C5: AD xx xx     	lda	|~~line
  2860 00:82C8: 48           	pha
  2861 00:82C9: 22 xx xx xx  	jsl	~~k_pos_console
  2862                        ;	//k_run_loop();
  2863                        ;
  2864                        ;	if(zp->Endianness == ENDIAN_BIG)
  2865                        	.line	786
  2866                        ;		k_debug_string("System reports BIG ENDIA
                    N\r\n");
  2867 00:82CD: A0 0E 00     	ldy	#$e
  2868 00:82D0: B7 0D        	lda	[<L15+zp_1],Y
  Mon Aug  9 2021 16:52                                                Page 55


  2869 00:82D2: C9 01 00     	cmp	#<$1
  2870 00:82D5: F0 03        	beq	L18
  2871 00:82D7: 82 0D 00     	brl	L10004
  2872                        L18:
  2873                        	.line	787
  2874 00:82DA: F4 xx xx     	pea	#^L13+299
  2875 00:82DD: F4 xx xx     	pea	#<L13+299
  2876 00:82E0: 22 xx xx xx  	jsl	~~k_debug_string
  2877                        ;	else
  2878 00:82E4: 82 0A 00     	brl	L10005
  2879                        L10004:
  2880                        ;		k_debug_string("System reports LITTLE EN
                    DIAN\r\n");
  2881                        	.line	789
  2882 00:82E7: F4 xx xx     	pea	#^L13+327
  2883 00:82EA: F4 xx xx     	pea	#<L13+327
  2884 00:82ED: 22 xx xx xx  	jsl	~~k_debug_string
  2885                        L10005:
  2886                        ;
  2887                        ;	k_debug_hex("L24BYTE:",L24BYTE(0x12345678));
  2888                        	.line	791
  2889 00:82F1: F4 78 56     	pea	#<$12345678
  2890 00:82F4: F4 xx xx     	pea	#^L13+358
  2891 00:82F7: F4 xx xx     	pea	#<L13+358
  2892 00:82FA: 22 xx xx xx  	jsl	~~k_debug_hex
  2893                        ;	k_debug_hex("M24BYTE:",M24BYTE(0x12345678));
  2894                        	.line	792
  2895 00:82FE: F4 56 00     	pea	#<$56
  2896 00:8301: F4 xx xx     	pea	#^L13+367
  2897 00:8304: F4 xx xx     	pea	#<L13+367
  2898 00:8307: 22 xx xx xx  	jsl	~~k_debug_hex
  2899                        ;	k_debug_hex("H24BYTE:",H24BYTE(0x12345678));
  2900                        	.line	793
  2901 00:830B: F4 34 00     	pea	#<$34
  2902 00:830E: F4 xx xx     	pea	#^L13+376
  2903 00:8311: F4 xx xx     	pea	#<L13+376
  2904 00:8314: 22 xx xx xx  	jsl	~~k_debug_hex
  2905                        ;	k_debug_hex("H32BYTE:",H32BYTE(0x12345678));
  2906                        	.line	794
  2907 00:8318: F4 12 00     	pea	#<$12
  2908 00:831B: F4 xx xx     	pea	#^L13+385
  2909 00:831E: F4 xx xx     	pea	#<L13+385
  2910 00:8321: 22 xx xx xx  	jsl	~~k_debug_hex
  2911                        ;
  2912                        ;
  2913                        ;	k_debug_string("k_fcheck_system_memory\r\n");
  2914                        	.line	797
  2915 00:8325: F4 xx xx     	pea	#^L13+394
  2916 00:8328: F4 xx xx     	pea	#<L13+394
  2917 00:832B: 22 xx xx xx  	jsl	~~k_debug_string
  2918                        ;	availableMem = k_fcheck_system_memory(ReportMemo
                    ry);
  2919                        	.line	798
  2920 00:832F: F4 00 00     	pea	#^~~ReportMemory
  2921 00:8332: F4 00 80     	pea	#<~~ReportMemory
  2922 00:8335: 22 xx xx xx  	jsl	~~k_fcheck_system_memory
  2923 00:8339: 85 48        	sta	<L15+availableMem_1
  2924 00:833B: 86 4A        	stx	<L15+availableMem_1+2
  Mon Aug  9 2021 16:52                                                Page 56


  2925                        ;
  2926                        ;	k_getZeroPage()->availableMemory 	= availa
                    bleMem;
  2927                        	.line	800
  2928 00:833D: 22 xx xx xx  	jsl	~~k_getZeroPage
  2929 00:8341: 85 01        	sta	<R0
  2930 00:8343: 86 03        	stx	<R0+2
  2931 00:8345: A5 48        	lda	<L15+availableMem_1
  2932 00:8347: A0 1E 00     	ldy	#$1e
  2933 00:834A: 97 01        	sta	[<R0],Y
  2934 00:834C: A5 4A        	lda	<L15+availableMem_1+2
  2935 00:834E: A0 20 00     	ldy	#$20
  2936 00:8351: 97 01        	sta	[<R0],Y
  2937                        ;	k_getZeroPage()->availableMemoryK	= availa
                    bleMem/1024+1;
  2938                        	.line	801
  2939 00:8353: 22 xx xx xx  	jsl	~~k_getZeroPage
  2940 00:8357: 85 01        	sta	<R0
  2941 00:8359: 86 03        	stx	<R0+2
  2942 00:835B: D4 4A        	pei	<L15+availableMem_1+2
  2943 00:835D: D4 48        	pei	<L15+availableMem_1
  2944 00:835F: A9 0A 00     	lda	#$a
  2945                        	xref	~~~llsr
  2946 00:8362: 22 xx xx xx  	jsl	~~~llsr
  2947 00:8366: 85 05        	sta	<R1
  2948 00:8368: 86 07        	stx	<R1+2
  2949 00:836A: 18           	clc
  2950 00:836B: A9 01 00     	lda	#$1
  2951 00:836E: 65 05        	adc	<R1
  2952 00:8370: 85 09        	sta	<R2
  2953 00:8372: A9 00 00     	lda	#$0
  2954 00:8375: 65 07        	adc	<R1+2
  2955 00:8377: 85 0B        	sta	<R2+2
  2956 00:8379: A5 09        	lda	<R2
  2957 00:837B: A0 22 00     	ldy	#$22
  2958 00:837E: 97 01        	sta	[<R0],Y
  2959 00:8380: A5 0B        	lda	<R2+2
  2960 00:8382: A0 24 00     	ldy	#$24
  2961 00:8385: 97 01        	sta	[<R0],Y
  2962                        ;
  2963                        ;	heapSize = k_heap_integrity_check();
  2964                        	.line	803
  2965 00:8387: 22 xx xx xx  	jsl	~~k_heap_integrity_check
  2966 00:838B: 85 25        	sta	<L15+heapSize_1
  2967 00:838D: 86 27        	stx	<L15+heapSize_1+2
  2968                        ;	k_debug_long("k_heap_integrity_check::heapsize:"
                    ,heapSize);
  2969                        	.line	804
  2970 00:838F: D4 27        	pei	<L15+heapSize_1+2
  2971 00:8391: D4 25        	pei	<L15+heapSize_1
  2972 00:8393: F4 xx xx     	pea	#^L13+419
  2973 00:8396: F4 xx xx     	pea	#<L13+419
  2974 00:8399: 22 xx xx xx  	jsl	~~k_debug_long
  2975                        ;	//pheapInfo = umm_info(NULL,0);
  2976                        ;	//RTC_YEAR[0]  = 0x21;
  2977                        ;	//RTC_MONTH[0] = 0x07;
  2978                        ;	//RTC_DAY[0]   = 0x28;
  2979                        ;
  Mon Aug  9 2021 16:52                                                Page 57


  2980                        ;
  2981                        ;	k_debug_integer("MONTH:",k_get_rtc_month());
  2982                        	.line	811
  2983 00:839D: 22 xx xx xx  	jsl	~~k_get_rtc_month
  2984 00:83A1: 48           	pha
  2985 00:83A2: F4 xx xx     	pea	#^L13+453
  2986 00:83A5: F4 xx xx     	pea	#<L13+453
  2987 00:83A8: 22 xx xx xx  	jsl	~~k_debug_integer
  2988                        ;	k_debug_integer("DAY:",k_get_rtc_day());
  2989                        	.line	812
  2990 00:83AC: 22 xx xx xx  	jsl	~~k_get_rtc_day
  2991 00:83B0: 48           	pha
  2992 00:83B1: F4 xx xx     	pea	#^L13+460
  2993 00:83B4: F4 xx xx     	pea	#<L13+460
  2994 00:83B7: 22 xx xx xx  	jsl	~~k_debug_integer
  2995                        ;	k_debug_integer("YEAR:",k_get_rtc_year());
  2996                        	.line	813
  2997 00:83BB: 22 xx xx xx  	jsl	~~k_get_rtc_year
  2998 00:83BF: 48           	pha
  2999 00:83C0: F4 xx xx     	pea	#^L13+465
  3000 00:83C3: F4 xx xx     	pea	#<L13+465
  3001 00:83C6: 22 xx xx xx  	jsl	~~k_debug_integer
  3002                        ;
  3003                        ;
  3004                        ;	k_debug_strings("DATE:",(LPSTR)k_get_date_string
                    (rmbuffer));
  3005                        	.line	816
  3006 00:83CA: F4 00 00     	pea	#0
  3007 00:83CD: 18           	clc
  3008 00:83CE: 7B           	tdc
  3009 00:83CF: 69 36 00     	adc	#<L15+rmbuffer_1
  3010 00:83D2: 48           	pha
  3011 00:83D3: 22 xx xx xx  	jsl	~~k_get_date_string
  3012 00:83D7: 85 01        	sta	<R0
  3013 00:83D9: 86 03        	stx	<R0+2
  3014 00:83DB: DA           	phx
  3015 00:83DC: 48           	pha
  3016 00:83DD: F4 xx xx     	pea	#^L13+471
  3017 00:83E0: F4 xx xx     	pea	#<L13+471
  3018 00:83E3: 22 xx xx xx  	jsl	~~k_debug_strings
  3019                        ;	k_debug_strings("TIME:",(LPSTR)k_get_localtime_s
                    tring(rmbuffer));
  3020                        	.line	817
  3021 00:83E7: F4 00 00     	pea	#0
  3022 00:83EA: 18           	clc
  3023 00:83EB: 7B           	tdc
  3024 00:83EC: 69 36 00     	adc	#<L15+rmbuffer_1
  3025 00:83EF: 48           	pha
  3026 00:83F0: 22 xx xx xx  	jsl	~~k_get_localtime_string
  3027 00:83F4: 85 01        	sta	<R0
  3028 00:83F6: 86 03        	stx	<R0+2
  3029 00:83F8: DA           	phx
  3030 00:83F9: 48           	pha
  3031 00:83FA: F4 xx xx     	pea	#^L13+477
  3032 00:83FD: F4 xx xx     	pea	#<L13+477
  3033 00:8400: 22 xx xx xx  	jsl	~~k_debug_strings
  3034                        ;
  3035                        ;
  Mon Aug  9 2021 16:52                                                Page 58


  3036                        ;	k_debug_integer("sizeof(short int):",sizeof(shor
                    t int));
  3037                        	.line	820
  3038 00:8404: F4 02 00     	pea	#<$2
  3039 00:8407: F4 xx xx     	pea	#^L13+483
  3040 00:840A: F4 xx xx     	pea	#<L13+483
  3041 00:840D: 22 xx xx xx  	jsl	~~k_debug_integer
  3042                        ;	k_debug_integer("sizeof(unsigned short int):",si
                    zeof(unsigned short int));
  3043                        	.line	821
  3044 00:8411: F4 02 00     	pea	#<$2
  3045 00:8414: F4 xx xx     	pea	#^L13+502
  3046 00:8417: F4 xx xx     	pea	#<L13+502
  3047 00:841A: 22 xx xx xx  	jsl	~~k_debug_integer
  3048                        ;	k_debug_integer("sizeof(int):",sizeof(int));
  3049                        	.line	822
  3050 00:841E: F4 02 00     	pea	#<$2
  3051 00:8421: F4 xx xx     	pea	#^L13+530
  3052 00:8424: F4 xx xx     	pea	#<L13+530
  3053 00:8427: 22 xx xx xx  	jsl	~~k_debug_integer
  3054                        ;	k_debug_integer("sizeof(unsigned int):",sizeof(u
                    nsigned int));
  3055                        	.line	823
  3056 00:842B: F4 02 00     	pea	#<$2
  3057 00:842E: F4 xx xx     	pea	#^L13+543
  3058 00:8431: F4 xx xx     	pea	#<L13+543
  3059 00:8434: 22 xx xx xx  	jsl	~~k_debug_integer
  3060                        ;	k_debug_integer("sizeof(long):",sizeof(long));
  3061                        	.line	824
  3062 00:8438: F4 04 00     	pea	#<$4
  3063 00:843B: F4 xx xx     	pea	#^L13+565
  3064 00:843E: F4 xx xx     	pea	#<L13+565
  3065 00:8441: 22 xx xx xx  	jsl	~~k_debug_integer
  3066                        ;	k_debug_integer("sizeof(LPVOID):",sizeof(LPVOID)
                    );
  3067                        	.line	825
  3068 00:8445: F4 04 00     	pea	#<$4
  3069 00:8448: F4 xx xx     	pea	#^L13+579
  3070 00:844B: F4 xx xx     	pea	#<L13+579
  3071 00:844E: 22 xx xx xx  	jsl	~~k_debug_integer
  3072                        ;	k_debug_integer("sizeof(size_t):",sizeof(size_t)
                    );
  3073                        	.line	826
  3074 00:8452: F4 02 00     	pea	#<$2
  3075 00:8455: F4 xx xx     	pea	#^L13+595
  3076 00:8458: F4 xx xx     	pea	#<L13+595
  3077 00:845B: 22 xx xx xx  	jsl	~~k_debug_integer
  3078                        ;	k_debug_pointer("FXZEROPAGE @",ZEROPAGE);
  3079                        	.line	827
  3080 00:845F: F4 00 00     	pea	#^$1500
  3081 00:8462: F4 00 15     	pea	#<$1500
  3082 00:8465: F4 xx xx     	pea	#^L13+611
  3083 00:8468: F4 xx xx     	pea	#<L13+611
  3084 00:846B: 22 xx xx xx  	jsl	~~k_debug_pointer
  3085                        ;	k_debug_integer("sizeof(FXZEROPAGE):",sizeof(FXZ
                    EROPAGE));
  3086                        	.line	828
  3087 00:846F: F4 5A 00     	pea	#<$5a
  Mon Aug  9 2021 16:52                                                Page 59


  3088 00:8472: F4 xx xx     	pea	#^L13+624
  3089 00:8475: F4 xx xx     	pea	#<L13+624
  3090 00:8478: 22 xx xx xx  	jsl	~~k_debug_integer
  3091                        ;	k_debug_integer("sizeof(FXOSMESSAGE):",sizeof(FX
                    OSMESSAGE));
  3092                        	.line	829
  3093 00:847C: F4 27 00     	pea	#<$27
  3094 00:847F: F4 xx xx     	pea	#^L13+644
  3095 00:8482: F4 xx xx     	pea	#<L13+644
  3096 00:8485: 22 xx xx xx  	jsl	~~k_debug_integer
  3097                        ;	k_debug_integer("sizeof(FXCMDMESSAGE):",sizeof(F
                    XCMDMESSAGE));
  3098                        	.line	830
  3099 00:8489: F4 27 00     	pea	#<$27
  3100 00:848C: F4 xx xx     	pea	#^L13+665
  3101 00:848F: F4 xx xx     	pea	#<L13+665
  3102 00:8492: 22 xx xx xx  	jsl	~~k_debug_integer
  3103                        ;
  3104                        ;
  3105                        ;	k_debug_integer("sizeof(FXKERNEL_API_CALLTABLE):
                    ",sizeof(FXKERNEL_API_CALLTABLE));
  3106                        	.line	833
  3107 00:8496: F4 00 04     	pea	#<$400
  3108 00:8499: F4 xx xx     	pea	#^L13+687
  3109 00:849C: F4 xx xx     	pea	#<L13+687
  3110 00:849F: 22 xx xx xx  	jsl	~~k_debug_integer
  3111                        ;
  3112                        ;
  3113                        ;	k_debug_integer("sizeof(FX_DEVICE_DRIVER):",size
                    of(FX_DEVICE_DRIVER));
  3114                        	.line	836
  3115 00:84A3: F4 61 00     	pea	#<$61
  3116 00:84A6: F4 xx xx     	pea	#^L13+719
  3117 00:84A9: F4 xx xx     	pea	#<L13+719
  3118 00:84AC: 22 xx xx xx  	jsl	~~k_debug_integer
  3119                        ;	k_debug_integer("sizeof(g_irq_handlers):",sizeof
                    (g_irq_handlers));
  3120                        	.line	837
  3121 00:84B0: F4 00 02     	pea	#<$200
  3122 00:84B3: F4 xx xx     	pea	#^L13+745
  3123 00:84B6: F4 xx xx     	pea	#<L13+745
  3124 00:84B9: 22 xx xx xx  	jsl	~~k_debug_integer
  3125                        ;	k_debug_integer("sizeof(g_irq_handlers[0]):",siz
                    eof(g_irq_handlers[0]));
  3126                        	.line	838
  3127 00:84BD: F4 80 00     	pea	#<$80
  3128 00:84C0: F4 xx xx     	pea	#^L13+769
  3129 00:84C3: F4 xx xx     	pea	#<L13+769
  3130 00:84C6: 22 xx xx xx  	jsl	~~k_debug_integer
  3131                        ;	k_debug_integer("sizeof(g_irq_handlers[0][0]):",
                    sizeof(g_irq_handlers[0][0]));
  3132                        	.line	839
  3133 00:84CA: F4 10 00     	pea	#<$10
  3134 00:84CD: F4 xx xx     	pea	#^L13+796
  3135 00:84D0: F4 xx xx     	pea	#<L13+796
  3136 00:84D3: 22 xx xx xx  	jsl	~~k_debug_integer
  3137                        ;	k_debug_integer("sizeof(IRQCHAIN):",sizeof(IRQCH
                    AIN));
  Mon Aug  9 2021 16:52                                                Page 60


  3138                        	.line	840
  3139 00:84D7: F4 10 00     	pea	#<$10
  3140 00:84DA: F4 xx xx     	pea	#^L13+826
  3141 00:84DD: F4 xx xx     	pea	#<L13+826
  3142 00:84E0: 22 xx xx xx  	jsl	~~k_debug_integer
  3143                        ;
  3144                        ;	k_debug_integer("IRQBUSIDX(g_irq_handlers):",IRQ
                    BUSIDX(g_irq_handlers));
  3145                        	.line	842
  3146 00:84E4: F4 04 00     	pea	#<$4
  3147 00:84E7: F4 xx xx     	pea	#^L13+844
  3148 00:84EA: F4 xx xx     	pea	#<L13+844
  3149 00:84ED: 22 xx xx xx  	jsl	~~k_debug_integer
  3150                        ;	k_debug_integer("IRQNUMIDX(g_irq_handlers):",IRQ
                    NUMIDX(g_irq_handlers));
  3151                        	.line	843
  3152 00:84F1: F4 08 00     	pea	#<$8
  3153 00:84F4: F4 xx xx     	pea	#^L13+871
  3154 00:84F7: F4 xx xx     	pea	#<L13+871
  3155 00:84FA: 22 xx xx xx  	jsl	~~k_debug_integer
  3156                        ;
  3157                        ;
  3158                        ;	k_debug_pointer("fxos_kernel_api:",k_getZeroPage
                    ()->fxos_kernel_api);
  3159                        	.line	846
  3160 00:84FE: 22 xx xx xx  	jsl	~~k_getZeroPage
  3161 00:8502: 85 01        	sta	<R0
  3162 00:8504: 86 03        	stx	<R0+2
  3163 00:8506: A0 44 00     	ldy	#$44
  3164 00:8509: B7 01        	lda	[<R0],Y
  3165 00:850B: 48           	pha
  3166 00:850C: A0 42 00     	ldy	#$42
  3167 00:850F: B7 01        	lda	[<R0],Y
  3168 00:8511: 48           	pha
  3169 00:8512: F4 xx xx     	pea	#^L13+898
  3170 00:8515: F4 xx xx     	pea	#<L13+898
  3171 00:8518: 22 xx xx xx  	jsl	~~k_debug_pointer
  3172                        ;
  3173                        ;
  3174                        ;	//ptrMemTest = HeapAlloc(64);
  3175                        ;	//k_debug_pointer("User Mode HeapAlloc() complet
                    e:",ptrMemTest);
  3176                        ;	//HeapDealloc(ptrMemTest);
  3177                        ;	//k_debug_pointer("User Mode HeapDealloc() compl
                    ete:",ptrMemTest);
  3178                        ;
  3179                        ;
  3180                        ;	k_write_console("\n\n");
  3181                        	.line	855
  3182 00:851C: F4 xx xx     	pea	#^L13+915
  3183 00:851F: F4 xx xx     	pea	#<L13+915
  3184 00:8522: 22 xx xx xx  	jsl	~~k_write_console
  3185                        ;	k_pos_console(k_row_console(),3);
  3186                        	.line	856
  3187 00:8526: F4 03 00     	pea	#<$3
  3188 00:8529: 22 xx xx xx  	jsl	~~k_row_console
  3189 00:852D: 48           	pha
  3190 00:852E: 22 xx xx xx  	jsl	~~k_pos_console
  Mon Aug  9 2021 16:52                                                Page 61


  3191                        ;	k_write_console(k_strip_padding(k_longtodec(k_ge
                    tZeroPage()->availableMemoryK,rmbuffer)));
  3192                        	.line	857
  3193 00:8532: F4 00 00     	pea	#0
  3194 00:8535: 18           	clc
  3195 00:8536: 7B           	tdc
  3196 00:8537: 69 36 00     	adc	#<L15+rmbuffer_1
  3197 00:853A: 48           	pha
  3198 00:853B: 22 xx xx xx  	jsl	~~k_getZeroPage
  3199 00:853F: 85 01        	sta	<R0
  3200 00:8541: 86 03        	stx	<R0+2
  3201 00:8543: A0 24 00     	ldy	#$24
  3202 00:8546: B7 01        	lda	[<R0],Y
  3203 00:8548: 48           	pha
  3204 00:8549: A0 22 00     	ldy	#$22
  3205 00:854C: B7 01        	lda	[<R0],Y
  3206 00:854E: 48           	pha
  3207 00:854F: 22 xx xx xx  	jsl	~~k_longtodec
  3208 00:8553: 85 01        	sta	<R0
  3209 00:8555: 86 03        	stx	<R0+2
  3210 00:8557: DA           	phx
  3211 00:8558: 48           	pha
  3212 00:8559: 22 xx xx xx  	jsl	~~k_strip_padding
  3213 00:855D: 85 05        	sta	<R1
  3214 00:855F: 86 07        	stx	<R1+2
  3215 00:8561: DA           	phx
  3216 00:8562: 48           	pha
  3217 00:8563: 22 xx xx xx  	jsl	~~k_write_console
  3218                        ;	k_write_console("K RAM Available");
  3219                        	.line	858
  3220 00:8567: F4 xx xx     	pea	#^L13+918
  3221 00:856A: F4 xx xx     	pea	#<L13+918
  3222 00:856D: 22 xx xx xx  	jsl	~~k_write_console
  3223                        ;
  3224                        ;	//line++;
  3225                        ;	//line++;
  3226                        ;	//pos = 2;
  3227                        ;	//pos = k_put_string(pos,line,k_strip_padding(k_
                    longtodec(k_getZeroPage()->availableMemoryK,rmbuffer)),15,0)
                    ;
  3228                        ;	//pos = k_put_string(pos,line,"K RAM Available",
                    15,0);
  3229                        ;
  3230                        ;	k_debug_long("AVAIL MEM:", availableMem);
  3231                        	.line	866
  3232 00:8571: D4 4A        	pei	<L15+availableMem_1+2
  3233 00:8573: D4 48        	pei	<L15+availableMem_1
  3234 00:8575: F4 xx xx     	pea	#^L13+934
  3235 00:8578: F4 xx xx     	pea	#<L13+934
  3236 00:857B: 22 xx xx xx  	jsl	~~k_debug_long
  3237                        ;
  3238                        ;	//line++;
  3239                        ;	//pos = 2;
  3240                        ;	//pos = k_put_string(pos,line,k_strip_padding(k_
                    longtodec(heapSize/1024 ,rmbuffer)),15,0);
  3241                        ;	//pos = k_put_string(pos,line,"K HEAP RAM Availa
                    ble",15,0);
  3242                        ;	k_write_console("\n");
  Mon Aug  9 2021 16:52                                                Page 62


  3243                        	.line	872
  3244 00:857F: F4 xx xx     	pea	#^L13+945
  3245 00:8582: F4 xx xx     	pea	#<L13+945
  3246 00:8585: 22 xx xx xx  	jsl	~~k_write_console
  3247                        ;	k_pos_console(k_row_console(),3);
  3248                        	.line	873
  3249 00:8589: F4 03 00     	pea	#<$3
  3250 00:858C: 22 xx xx xx  	jsl	~~k_row_console
  3251 00:8590: 48           	pha
  3252 00:8591: 22 xx xx xx  	jsl	~~k_pos_console
  3253                        ;	k_write_console(k_strip_padding(k_longtodec(heap
                    Size/1024 ,rmbuffer)));
  3254                        	.line	874
  3255 00:8595: F4 00 00     	pea	#0
  3256 00:8598: 18           	clc
  3257 00:8599: 7B           	tdc
  3258 00:859A: 69 36 00     	adc	#<L15+rmbuffer_1
  3259 00:859D: 48           	pha
  3260 00:859E: D4 27        	pei	<L15+heapSize_1+2
  3261 00:85A0: D4 25        	pei	<L15+heapSize_1
  3262 00:85A2: A9 0A 00     	lda	#$a
  3263                        	xref	~~~llsr
  3264 00:85A5: 22 xx xx xx  	jsl	~~~llsr
  3265 00:85A9: 85 01        	sta	<R0
  3266 00:85AB: 86 03        	stx	<R0+2
  3267 00:85AD: D4 03        	pei	<R0+2
  3268 00:85AF: D4 01        	pei	<R0
  3269 00:85B1: 22 xx xx xx  	jsl	~~k_longtodec
  3270 00:85B5: 85 05        	sta	<R1
  3271 00:85B7: 86 07        	stx	<R1+2
  3272 00:85B9: DA           	phx
  3273 00:85BA: 48           	pha
  3274 00:85BB: 22 xx xx xx  	jsl	~~k_strip_padding
  3275 00:85BF: 85 09        	sta	<R2
  3276 00:85C1: 86 0B        	stx	<R2+2
  3277 00:85C3: DA           	phx
  3278 00:85C4: 48           	pha
  3279 00:85C5: 22 xx xx xx  	jsl	~~k_write_console
  3280                        ;	k_write_console("K HEAP RAM Available");
  3281                        	.line	875
  3282 00:85C9: F4 xx xx     	pea	#^L13+947
  3283 00:85CC: F4 xx xx     	pea	#<L13+947
  3284 00:85CF: 22 xx xx xx  	jsl	~~k_write_console
  3285                        ;
  3286                        ;
  3287                        ;	//sleep(5000);
  3288                        ;
  3289                        ;	//init_ps2();
  3290                        ;
  3291                        ;	//k_dos_ext_load_driver("HD:\\system\\drivers\\D
                    RIVER_S13.DRV");
  3292                        ;
  3293                        ;
  3294                        ;	//k_show_image("HD:\\system\\images\\mand01.bmp"
                    );
  3295                        ;
  3296                        ;	//k_show_image("HD:\\system\\images\\mand02.bmp"
                    );
  Mon Aug  9 2021 16:52                                                Page 63


  3297                        ;
  3298                        ;	//k_show_image("HD:\\system\\images\\mand03.bmp"
                    );
  3299                        ;
  3300                        ;
  3301                        ;	bootMode = k_init_splash(TRUE);
  3302                        	.line	892
  3303 00:85D3: F4 01 00     	pea	#<$1
  3304 00:85D6: 22 xx xx xx  	jsl	~~k_init_splash
  3305 00:85DA: 85 4C        	sta	<L15+bootMode_1
  3306                        ;
  3307                        ;
  3308                        ;	if(sizeof(FXOSMESSAGE)!=sizeof(FXCMDMESSAGE))
  3309                        	.line	895
  3310                        ;		k_exec_throw_exception(main,0x10000001,"
                     VERSION ERROR: FXOSMESSAGE size mismatch",-1);
  3311 00:85DC: 82 19 00     	brl	L10006
  3312                        	.line	896
  3313 00:85DF: F4 FF FF     	pea	#<$ffffffff
  3314 00:85E2: F4 xx xx     	pea	#^L13+968
  3315 00:85E5: F4 xx xx     	pea	#<L13+968
  3316 00:85E8: F4 00 10     	pea	#^$10000001
  3317 00:85EB: F4 01 00     	pea	#<$10000001
  3318 00:85EE: F4 00 00     	pea	#^~~main
  3319 00:85F1: F4 0D 81     	pea	#<~~main
  3320 00:85F4: 22 xx xx xx  	jsl	~~k_exec_throw_exception
  3321                        ;
  3322                        ;	k_debug_integer("k_get_cols_visible:",k_get_cols
                    _visible());
  3323                        L10006:
  3324                        	.line	898
  3325 00:85F8: 22 xx xx xx  	jsl	~~k_get_cols_visible
  3326 00:85FC: 48           	pha
  3327 00:85FD: F4 xx xx     	pea	#^L13+1010
  3328 00:8600: F4 xx xx     	pea	#<L13+1010
  3329 00:8603: 22 xx xx xx  	jsl	~~k_debug_integer
  3330                        ;	k_debug_integer("k_get_cols_per_line:",k_get_col
                    s_per_line());
  3331                        	.line	899
  3332 00:8607: 22 xx xx xx  	jsl	~~k_get_cols_per_line
  3333 00:860B: 48           	pha
  3334 00:860C: F4 xx xx     	pea	#^L13+1030
  3335 00:860F: F4 xx xx     	pea	#<L13+1030
  3336 00:8612: 22 xx xx xx  	jsl	~~k_debug_integer
  3337                        ;	k_debug_integer("k_get_lines_visible",k_get_line
                    s_visible());
  3338                        	.line	900
  3339 00:8616: 22 xx xx xx  	jsl	~~k_get_lines_visible
  3340 00:861A: 48           	pha
  3341 00:861B: F4 xx xx     	pea	#^L13+1051
  3342 00:861E: F4 xx xx     	pea	#<L13+1051
  3343 00:8621: 22 xx xx xx  	jsl	~~k_debug_integer
  3344                        ;	k_debug_integer("k_get_lines_max:",k_get_lines_m
                    ax());
  3345                        	.line	901
  3346 00:8625: 22 xx xx xx  	jsl	~~k_get_lines_max
  3347 00:8629: 48           	pha
  3348 00:862A: F4 xx xx     	pea	#^L13+1071
  Mon Aug  9 2021 16:52                                                Page 64


  3349 00:862D: F4 xx xx     	pea	#<L13+1071
  3350 00:8630: 22 xx xx xx  	jsl	~~k_debug_integer
  3351                        ;
  3352                        ;
  3353                        ;	//testDrive("RAM:","RAM:\\");
  3354                        ;
  3355                        ;
  3356                        ;	//testDrive("HD:","HD:\\");
  3357                        ;	//testDrive("SD:","SD:\\");
  3358                        ;
  3359                        ;	//k_dos_load_drivers();
  3360                        ;	//k_create_dos_device(FXDOS_SDC);
  3361                        ;	/*
  3362                        ;	k_debug_string("Call DLLMAIN\r\n");
  3363                        ;	memcpy((LPSTR)0x090000,APGMBIN,sizeof(APGMBIN));
  3364                        ;
  3365                        ;	k_debug_integer("APGMBIN SIZE:",sizeof(APGMBIN))
                    ;
  3366                        ;	k_debug_hex("APGMBIN DATA:",APGMBIN[0]);
  3367                        ;	k_debug_hex("MEMORY  DATA:",((LPCSTR)0x090000)[0
                    ]);
  3368                        ;	k_debug_pointer("DllMain:",DllMain);
  3369                        ;
  3370                        ;	DllMain();
  3371                        ;	*/
  3372                        ;
  3373                        ;	// user mode test
  3374                        ;	//DebugOut("API CALL!!!!\r\n");
  3375                        ;	//DebugInteger("API YEAR:", GetDateYear());
  3376                        ;
  3377                        ;	//
  3378                        ;	// enter event processing mode
  3379                        ;	//
  3380                        ;	//k_event_loop();
  3381                        ;
  3382                        ;	//testHD();
  3383                        ;	//testSD();
  3384                        ;
  3385                        ;
  3386                        ;
  3387                        ;	// lets wait here for now
  3388                        ;	//while(1);
  3389                        ;	//k_user_DisableOSDebug();
  3390                        ;
  3391                        ;	k_debug_string("k_initalize_executive\r\n");
  3392                        	.line	942
  3393 00:8634: F4 xx xx     	pea	#^L13+1088
  3394 00:8637: F4 xx xx     	pea	#<L13+1088
  3395 00:863A: 22 xx xx xx  	jsl	~~k_debug_string
  3396                        ;	pExecutive = k_initalize_executive();
  3397                        	.line	943
  3398 00:863E: 22 xx xx xx  	jsl	~~k_initalize_executive
  3399 00:8642: 85 11        	sta	<L15+pExecutive_1
  3400 00:8644: 86 13        	stx	<L15+pExecutive_1+2
  3401                        ;	if(!pExecutive)
  3402                        	.line	944
  3403                        ;	{
  3404 00:8646: A5 11        	lda	<L15+pExecutive_1
  Mon Aug  9 2021 16:52                                                Page 65


  3405 00:8648: 05 13        	ora	<L15+pExecutive_1+2
  3406 00:864A: F0 03        	beq	L19
  3407 00:864C: 82 19 00     	brl	L10007
  3408                        L19:
  3409                        	.line	945
  3410                        ;		k_exec_throw_exception(main,0x00110011,"
                    Executive Failed to Initialize.",-1);
  3411                        	.line	946
  3412 00:864F: F4 FF FF     	pea	#<$ffffffff
  3413 00:8652: F4 xx xx     	pea	#^L13+1112
  3414 00:8655: F4 xx xx     	pea	#<L13+1112
  3415 00:8658: F4 11 00     	pea	#^$110011
  3416 00:865B: F4 11 00     	pea	#<$110011
  3417 00:865E: F4 00 00     	pea	#^~~main
  3418 00:8661: F4 0D 81     	pea	#<~~main
  3419 00:8664: 22 xx xx xx  	jsl	~~k_exec_throw_exception
  3420                        ;	}
  3421                        	.line	947
  3422                        ;	k_heap_integrity_check();
  3423                        L10007:
  3424                        	.line	948
  3425 00:8668: 22 xx xx xx  	jsl	~~k_heap_integrity_check
  3426                        ;
  3427                        ;	pExecutive->Init();
  3428                        	.line	950
  3429 00:866C: A0 02 00     	ldy	#$2
  3430 00:866F: B7 11        	lda	[<L15+pExecutive_1],Y
  3431 00:8671: AA           	tax
  3432 00:8672: A7 11        	lda	[<L15+pExecutive_1]
  3433                        	xref	~~~lcal
  3434 00:8674: 22 xx xx xx  	jsl	~~~lcal
  3435                        ;
  3436                        ;	k_debug_string("k_initalize_event_manager\r\n");
  3437                        	.line	952
  3438 00:8678: F4 xx xx     	pea	#^L13+1144
  3439 00:867B: F4 xx xx     	pea	#<L13+1144
  3440 00:867E: 22 xx xx xx  	jsl	~~k_debug_string
  3441                        ;	pEventManager = k_initalize_event_manager(bootMo
                    de);
  3442                        	.line	953
  3443 00:8682: D4 4C        	pei	<L15+bootMode_1
  3444 00:8684: 22 xx xx xx  	jsl	~~k_initalize_event_manager
  3445 00:8688: 85 15        	sta	<L15+pEventManager_1
  3446 00:868A: 86 17        	stx	<L15+pEventManager_1+2
  3447                        ;	if(!pEventManager)
  3448                        	.line	954
  3449                        ;	{
  3450 00:868C: A5 15        	lda	<L15+pEventManager_1
  3451 00:868E: 05 17        	ora	<L15+pEventManager_1+2
  3452 00:8690: F0 03        	beq	L20
  3453 00:8692: 82 19 00     	brl	L10008
  3454                        L20:
  3455                        	.line	955
  3456                        ;		k_exec_throw_exception(main,0x00110011,"
                    Event Manager Failed to Initialize.",-1);
  3457                        	.line	956
  3458 00:8695: F4 FF FF     	pea	#<$ffffffff
  3459 00:8698: F4 xx xx     	pea	#^L13+1172
  Mon Aug  9 2021 16:52                                                Page 66


  3460 00:869B: F4 xx xx     	pea	#<L13+1172
  3461 00:869E: F4 11 00     	pea	#^$110011
  3462 00:86A1: F4 11 00     	pea	#<$110011
  3463 00:86A4: F4 00 00     	pea	#^~~main
  3464 00:86A7: F4 0D 81     	pea	#<~~main
  3465 00:86AA: 22 xx xx xx  	jsl	~~k_exec_throw_exception
  3466                        ;	}
  3467                        	.line	957
  3468                        ;	k_heap_integrity_check();
  3469                        L10008:
  3470                        	.line	958
  3471 00:86AE: 22 xx xx xx  	jsl	~~k_heap_integrity_check
  3472                        ;
  3473                        ;	k_debug_integer("Event Manager Version:",pEventM
                    anager->Query(EV_QUERY_VERSION_MAJOR));
  3474                        	.line	960
  3475 00:86B2: F4 00 00     	pea	#<$0
  3476 00:86B5: A0 12 00     	ldy	#$12
  3477 00:86B8: B7 15        	lda	[<L15+pEventManager_1],Y
  3478 00:86BA: AA           	tax
  3479 00:86BB: A0 10 00     	ldy	#$10
  3480 00:86BE: B7 15        	lda	[<L15+pEventManager_1],Y
  3481                        	xref	~~~lcal
  3482 00:86C0: 22 xx xx xx  	jsl	~~~lcal
  3483 00:86C4: 48           	pha
  3484 00:86C5: F4 xx xx     	pea	#^L13+1208
  3485 00:86C8: F4 xx xx     	pea	#<L13+1208
  3486 00:86CB: 22 xx xx xx  	jsl	~~k_debug_integer
  3487                        ;	pEventManager->Init();
  3488                        	.line	961
  3489 00:86CF: A0 06 00     	ldy	#$6
  3490 00:86D2: B7 15        	lda	[<L15+pEventManager_1],Y
  3491 00:86D4: AA           	tax
  3492 00:86D5: A0 04 00     	ldy	#$4
  3493 00:86D8: B7 15        	lda	[<L15+pEventManager_1],Y
  3494                        	xref	~~~lcal
  3495 00:86DA: 22 xx xx xx  	jsl	~~~lcal
  3496                        ;	pEventManager->Run(pExecutive);
  3497                        	.line	962
  3498 00:86DE: D4 13        	pei	<L15+pExecutive_1+2
  3499 00:86E0: D4 11        	pei	<L15+pExecutive_1
  3500 00:86E2: A0 0A 00     	ldy	#$a
  3501 00:86E5: B7 15        	lda	[<L15+pEventManager_1],Y
  3502 00:86E7: AA           	tax
  3503 00:86E8: A0 08 00     	ldy	#$8
  3504 00:86EB: B7 15        	lda	[<L15+pEventManager_1],Y
  3505                        	xref	~~~lcal
  3506 00:86ED: 22 xx xx xx  	jsl	~~~lcal
  3507                        ;
  3508                        ;	k_exec_throw_exception(main,0x10000001,"System F
                    ailure.  Event Manager Exited.",-1);
  3509                        	.line	964
  3510 00:86F1: F4 FF FF     	pea	#<$ffffffff
  3511 00:86F4: F4 xx xx     	pea	#^L13+1231
  3512 00:86F7: F4 xx xx     	pea	#<L13+1231
  3513 00:86FA: F4 00 10     	pea	#^$10000001
  3514 00:86FD: F4 01 00     	pea	#<$10000001
  3515 00:8700: F4 00 00     	pea	#^~~main
  Mon Aug  9 2021 16:52                                                Page 67


  3516 00:8703: F4 0D 81     	pea	#<~~main
  3517 00:8706: 22 xx xx xx  	jsl	~~k_exec_throw_exception
  3518                        ;
  3519                        ;	return;
  3520                        	.line	966
  3521                        L21:
  3522 00:870A: 2B           	pld
  3523 00:870B: 3B           	tsc
  3524 00:870C: 18           	clc
  3525 00:870D: 69 5B 00     	adc	#L14
  3526 00:8710: 1B           	tcs
  3527 00:8711: 6B           	rtl
  3528                        ;}
  3529                        	.line	967
  3530                        	.endblock	967
  3531             0000005B   L14	equ	91
  3532             0000000D   L15	equ	13
  3533 00:8712:              	ends
  3534                        	efunc
  3535                        	.endfunc	967,13,91
  3536                        	.line	967
  3537                        	data
  3538                        L13:
  3539 00:0068: 2A 2A 2A 2A  	db	$2A,$2A,$2A,$2A,$2A,$2A,$2A,$2A,$2A,$2A,
                    $2A,$2A,$2A,$2A,$2A
       00:006C: 2A 2A 2A 2A 
       00:0070: 2A 2A 2A 2A 
       00:0074: 2A 2A 2A 
  3540 00:0077: 2A 2A 2A 2A  	db	$2A,$2A,$2A,$2A,$2A,$2A,$2A,$2A,$2A,$2A,
                    $2A,$2A,$2A,$2A,$2A
       00:007B: 2A 2A 2A 2A 
       00:007F: 2A 2A 2A 2A 
       00:0083: 2A 2A 2A 
  3541 00:0086: 2A 2A 2A 2A  	db	$2A,$2A,$2A,$2A,$0D,$0A,$00,$2A,$2A,$2A,
                    $2A,$2A,$2A,$20,$20
       00:008A: 0D 0A 00 2A 
       00:008E: 2A 2A 2A 2A 
       00:0092: 2A 20 20 
  3542 00:0095: 57 65 6C 63  	db	$57,$65,$6C,$63,$6F,$6D,$65,$20,$74,$6F,
                    $20,$46,$58,$2F,$4F
       00:0099: 6F 6D 65 20 
       00:009D: 74 6F 20 46 
       00:00A1: 58 2F 4F 
  3543 00:00A4: 53 20 20 20  	db	$53,$20,$20,$20,$2A,$2A,$2A,$2A,$2A,$2A,
                    $2A,$0D,$0A,$00,$2A
       00:00A8: 2A 2A 2A 2A 
       00:00AC: 2A 2A 2A 0D 
       00:00B0: 0A 00 2A 
  3544 00:00B3: 2A 2A 2A 2A  	db	$2A,$2A,$2A,$2A,$2A,$20,$20,$20,$20,$20,
                    $20,$20,$42,$6F,$6F
       00:00B7: 2A 20 20 20 
       00:00BB: 20 20 20 20 
       00:00BF: 42 6F 6F 
  3545 00:00C2: 74 69 6E 67  	db	$74,$69,$6E,$67,$20,$20,$20,$20,$20,$20,
                    $20,$2A,$2A,$2A,$2A
       00:00C6: 20 20 20 20 
       00:00CA: 20 20 20 2A 
       00:00CE: 2A 2A 2A 
  Mon Aug  9 2021 16:52                                                Page 68


  3546 00:00D1: 2A 2A 2A 0D  	db	$2A,$2A,$2A,$0D,$0A,$00,$2A,$2A,$2A,$2A,
                    $2A,$2A,$2A,$2A,$2A
       00:00D5: 0A 00 2A 2A 
       00:00D9: 2A 2A 2A 2A 
       00:00DD: 2A 2A 2A 
  3547 00:00E0: 2A 2A 2A 2A  	db	$2A,$2A,$2A,$2A,$2A,$2A,$2A,$2A,$2A,$2A,
                    $2A,$2A,$2A,$2A,$2A
       00:00E4: 2A 2A 2A 2A 
       00:00E8: 2A 2A 2A 2A 
       00:00EC: 2A 2A 2A 
  3548 00:00EF: 2A 2A 2A 2A  	db	$2A,$2A,$2A,$2A,$2A,$2A,$2A,$2A,$2A,$2A,
                    $0D,$0A,$00,$44,$65
       00:00F3: 2A 2A 2A 2A 
       00:00F7: 2A 2A 0D 0A 
       00:00FB: 00 44 65 
  3549 00:00FE: 76 69 63 65  	db	$76,$69,$63,$65,$20,$4C,$6F,$61,$64,$20,
                    $4C,$6F,$67,$20,$46
       00:0102: 20 4C 6F 61 
       00:0106: 64 20 4C 6F 
       00:010A: 67 20 46 
  3550 00:010D: 6F 6C 6C 6F  	db	$6F,$6C,$6C,$6F,$77,$73,$3A,$0D,$0A,$00,
                    $6B,$5F,$74,$65,$78
       00:0111: 77 73 3A 0D 
       00:0115: 0A 00 6B 5F 
       00:0119: 74 65 78 
  3551 00:011C: 74 5F 6D 6F  	db	$74,$5F,$6D,$6F,$64,$65,$5F,$64,$69,$61,
                    $6C,$6F,$67,$0D,$0A
       00:0120: 64 65 5F 64 
       00:0124: 69 61 6C 6F 
       00:0128: 67 0D 0A 
  3552 00:012B: 00 43 32 35  	db	$00,$43,$32,$35,$36,$20,$56,$45,$52,$53,
                    $49,$4F,$4E,$20,$4D
       00:012F: 36 20 56 45 
       00:0133: 52 53 49 4F 
       00:0137: 4E 20 4D 
  3553 00:013A: 41 4A 4F 52  	db	$41,$4A,$4F,$52,$3A,$00,$43,$32,$35,$36,
                    $20,$56,$45,$52,$53
       00:013E: 3A 00 43 32 
       00:0142: 35 36 20 56 
       00:0146: 45 52 53 
  3554 00:0149: 49 4F 4E 20  	db	$49,$4F,$4E,$20,$4D,$49,$4E,$4F,$52,$3A,
                    $00,$42,$55,$49,$4C
       00:014D: 4D 49 4E 4F 
       00:0151: 52 3A 00 42 
       00:0155: 55 49 4C 
  3555 00:0158: 44 20 53 59  	db	$44,$20,$53,$59,$53,$54,$45,$4D,$20,$48,
                    $45,$41,$50,$3A,$00
       00:015C: 53 54 45 4D 
       00:0160: 20 48 45 41 
       00:0164: 50 3A 00 
  3556 00:0167: 20 20 20 20  	db	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,
                    $20,$20,$20,$53,$49
       00:016B: 20 20 20 20 
       00:016F: 20 20 20 20 
       00:0173: 20 53 49 
  3557 00:0176: 5A 45 3A 00  	db	$5A,$45,$3A,$00,$6B,$5F,$72,$65,$70,$6F,
                    $72,$74,$5F,$63,$6F
       00:017A: 6B 5F 72 65 
  Mon Aug  9 2021 16:52                                                Page 69


       00:017E: 70 6F 72 74 
       00:0182: 5F 63 6F 
  3558 00:0185: 6E 66 69 67  	db	$6E,$66,$69,$67,$75,$72,$61,$74,$69,$6F,
                    $6E,$0D,$0A,$00,$53
       00:0189: 75 72 61 74 
       00:018D: 69 6F 6E 0D 
       00:0191: 0A 00 53 
  3559 00:0194: 79 73 74 65  	db	$79,$73,$74,$65,$6D,$20,$72,$65,$70,$6F,
                    $72,$74,$73,$20,$42
       00:0198: 6D 20 72 65 
       00:019C: 70 6F 72 74 
       00:01A0: 73 20 42 
  3560 00:01A3: 49 47 20 45  	db	$49,$47,$20,$45,$4E,$44,$49,$41,$4E,$0D,
                    $0A,$00,$53,$79,$73
       00:01A7: 4E 44 49 41 
       00:01AB: 4E 0D 0A 00 
       00:01AF: 53 79 73 
  3561 00:01B2: 74 65 6D 20  	db	$74,$65,$6D,$20,$72,$65,$70,$6F,$72,$74,
                    $73,$20,$4C,$49,$54
       00:01B6: 72 65 70 6F 
       00:01BA: 72 74 73 20 
       00:01BE: 4C 49 54 
  3562 00:01C1: 54 4C 45 20  	db	$54,$4C,$45,$20,$45,$4E,$44,$49,$41,$4E,
                    $0D,$0A,$00,$4C,$32
       00:01C5: 45 4E 44 49 
       00:01C9: 41 4E 0D 0A 
       00:01CD: 00 4C 32 
  3563 00:01D0: 34 42 59 54  	db	$34,$42,$59,$54,$45,$3A,$00,$4D,$32,$34,
                    $42,$59,$54,$45,$3A
       00:01D4: 45 3A 00 4D 
       00:01D8: 32 34 42 59 
       00:01DC: 54 45 3A 
  3564 00:01DF: 00 48 32 34  	db	$00,$48,$32,$34,$42,$59,$54,$45,$3A,$00,
                    $48,$33,$32,$42,$59
       00:01E3: 42 59 54 45 
       00:01E7: 3A 00 48 33 
       00:01EB: 32 42 59 
  3565 00:01EE: 54 45 3A 00  	db	$54,$45,$3A,$00,$6B,$5F,$66,$63,$68,$65,
                    $63,$6B,$5F,$73,$79
       00:01F2: 6B 5F 66 63 
       00:01F6: 68 65 63 6B 
       00:01FA: 5F 73 79 
  3566 00:01FD: 73 74 65 6D  	db	$73,$74,$65,$6D,$5F,$6D,$65,$6D,$6F,$72,
                    $79,$0D,$0A,$00,$6B
       00:0201: 5F 6D 65 6D 
       00:0205: 6F 72 79 0D 
       00:0209: 0A 00 6B 
  3567 00:020C: 5F 68 65 61  	db	$5F,$68,$65,$61,$70,$5F,$69,$6E,$74,$65,
                    $67,$72,$69,$74,$79
       00:0210: 70 5F 69 6E 
       00:0214: 74 65 67 72 
       00:0218: 69 74 79 
  3568 00:021B: 5F 63 68 65  	db	$5F,$63,$68,$65,$63,$6B,$3A,$3A,$68,$65,
                    $61,$70,$73,$69,$7A
       00:021F: 63 6B 3A 3A 
       00:0223: 68 65 61 70 
       00:0227: 73 69 7A 
  3569 00:022A: 65 3A 00 4D  	db	$65,$3A,$00,$4D,$4F,$4E,$54,$48,$3A,$00,
  Mon Aug  9 2021 16:52                                                Page 70


                    $44,$41,$59,$3A,$00
       00:022E: 4F 4E 54 48 
       00:0232: 3A 00 44 41 
       00:0236: 59 3A 00 
  3570 00:0239: 59 45 41 52  	db	$59,$45,$41,$52,$3A,$00,$44,$41,$54,$45,
                    $3A,$00,$54,$49,$4D
       00:023D: 3A 00 44 41 
       00:0241: 54 45 3A 00 
       00:0245: 54 49 4D 
  3571 00:0248: 45 3A 00 73  	db	$45,$3A,$00,$73,$69,$7A,$65,$6F,$66,$28,
                    $73,$68,$6F,$72,$74
       00:024C: 69 7A 65 6F 
       00:0250: 66 28 73 68 
       00:0254: 6F 72 74 
  3572 00:0257: 20 69 6E 74  	db	$20,$69,$6E,$74,$29,$3A,$00,$73,$69,$7A,
                    $65,$6F,$66,$28,$75
       00:025B: 29 3A 00 73 
       00:025F: 69 7A 65 6F 
       00:0263: 66 28 75 
  3573 00:0266: 6E 73 69 67  	db	$6E,$73,$69,$67,$6E,$65,$64,$20,$73,$68,
                    $6F,$72,$74,$20,$69
       00:026A: 6E 65 64 20 
       00:026E: 73 68 6F 72 
       00:0272: 74 20 69 
  3574 00:0275: 6E 74 29 3A  	db	$6E,$74,$29,$3A,$00,$73,$69,$7A,$65,$6F,
                    $66,$28,$69,$6E,$74
       00:0279: 00 73 69 7A 
       00:027D: 65 6F 66 28 
       00:0281: 69 6E 74 
  3575 00:0284: 29 3A 00 73  	db	$29,$3A,$00,$73,$69,$7A,$65,$6F,$66,$28,
                    $75,$6E,$73,$69,$67
       00:0288: 69 7A 65 6F 
       00:028C: 66 28 75 6E 
       00:0290: 73 69 67 
  3576 00:0293: 6E 65 64 20  	db	$6E,$65,$64,$20,$69,$6E,$74,$29,$3A,$00,
                    $73,$69,$7A,$65,$6F
       00:0297: 69 6E 74 29 
       00:029B: 3A 00 73 69 
       00:029F: 7A 65 6F 
  3577 00:02A2: 66 28 6C 6F  	db	$66,$28,$6C,$6F,$6E,$67,$29,$3A,$00,$73,
                    $69,$7A,$65,$6F,$66
       00:02A6: 6E 67 29 3A 
       00:02AA: 00 73 69 7A 
       00:02AE: 65 6F 66 
  3578 00:02B1: 28 4C 50 56  	db	$28,$4C,$50,$56,$4F,$49,$44,$29,$3A,$00,
                    $73,$69,$7A,$65,$6F
       00:02B5: 4F 49 44 29 
       00:02B9: 3A 00 73 69 
       00:02BD: 7A 65 6F 
  3579 00:02C0: 66 28 73 69  	db	$66,$28,$73,$69,$7A,$65,$5F,$74,$29,$3A,
                    $00,$46,$58,$5A,$45
       00:02C4: 7A 65 5F 74 
       00:02C8: 29 3A 00 46 
       00:02CC: 58 5A 45 
  3580 00:02CF: 52 4F 50 41  	db	$52,$4F,$50,$41,$47,$45,$20,$40,$00,$73,
                    $69,$7A,$65,$6F,$66
       00:02D3: 47 45 20 40 
       00:02D7: 00 73 69 7A 
  Mon Aug  9 2021 16:52                                                Page 71


       00:02DB: 65 6F 66 
  3581 00:02DE: 28 46 58 5A  	db	$28,$46,$58,$5A,$45,$52,$4F,$50,$41,$47,
                    $45,$29,$3A,$00,$73
       00:02E2: 45 52 4F 50 
       00:02E6: 41 47 45 29 
       00:02EA: 3A 00 73 
  3582 00:02ED: 69 7A 65 6F  	db	$69,$7A,$65,$6F,$66,$28,$46,$58,$4F,$53,
                    $4D,$45,$53,$53,$41
       00:02F1: 66 28 46 58 
       00:02F5: 4F 53 4D 45 
       00:02F9: 53 53 41 
  3583 00:02FC: 47 45 29 3A  	db	$47,$45,$29,$3A,$00,$73,$69,$7A,$65,$6F,
                    $66,$28,$46,$58,$43
       00:0300: 00 73 69 7A 
       00:0304: 65 6F 66 28 
       00:0308: 46 58 43 
  3584 00:030B: 4D 44 4D 45  	db	$4D,$44,$4D,$45,$53,$53,$41,$47,$45,$29,
                    $3A,$00,$73,$69,$7A
       00:030F: 53 53 41 47 
       00:0313: 45 29 3A 00 
       00:0317: 73 69 7A 
  3585 00:031A: 65 6F 66 28  	db	$65,$6F,$66,$28,$46,$58,$4B,$45,$52,$4E,
                    $45,$4C,$5F,$41,$50
       00:031E: 46 58 4B 45 
       00:0322: 52 4E 45 4C 
       00:0326: 5F 41 50 
  3586 00:0329: 49 5F 43 41  	db	$49,$5F,$43,$41,$4C,$4C,$54,$41,$42,$4C,
                    $45,$29,$3A,$00,$73
       00:032D: 4C 4C 54 41 
       00:0331: 42 4C 45 29 
       00:0335: 3A 00 73 
  3587 00:0338: 69 7A 65 6F  	db	$69,$7A,$65,$6F,$66,$28,$46,$58,$5F,$44,
                    $45,$56,$49,$43,$45
       00:033C: 66 28 46 58 
       00:0340: 5F 44 45 56 
       00:0344: 49 43 45 
  3588 00:0347: 5F 44 52 49  	db	$5F,$44,$52,$49,$56,$45,$52,$29,$3A,$00,
                    $73,$69,$7A,$65,$6F
       00:034B: 56 45 52 29 
       00:034F: 3A 00 73 69 
       00:0353: 7A 65 6F 
  3589 00:0356: 66 28 67 5F  	db	$66,$28,$67,$5F,$69,$72,$71,$5F,$68,$61,
                    $6E,$64,$6C,$65,$72
       00:035A: 69 72 71 5F 
       00:035E: 68 61 6E 64 
       00:0362: 6C 65 72 
  3590 00:0365: 73 29 3A 00  	db	$73,$29,$3A,$00,$73,$69,$7A,$65,$6F,$66,
                    $28,$67,$5F,$69,$72
       00:0369: 73 69 7A 65 
       00:036D: 6F 66 28 67 
       00:0371: 5F 69 72 
  3591 00:0374: 71 5F 68 61  	db	$71,$5F,$68,$61,$6E,$64,$6C,$65,$72,$73,
                    $5B,$30,$5D,$29,$3A
       00:0378: 6E 64 6C 65 
       00:037C: 72 73 5B 30 
       00:0380: 5D 29 3A 
  3592 00:0383: 00 73 69 7A  	db	$00,$73,$69,$7A,$65,$6F,$66,$28,$67,$5F,
                    $69,$72,$71,$5F,$68
  Mon Aug  9 2021 16:52                                                Page 72


       00:0387: 65 6F 66 28 
       00:038B: 67 5F 69 72 
       00:038F: 71 5F 68 
  3593 00:0392: 61 6E 64 6C  	db	$61,$6E,$64,$6C,$65,$72,$73,$5B,$30,$5D,
                    $5B,$30,$5D,$29,$3A
       00:0396: 65 72 73 5B 
       00:039A: 30 5D 5B 30 
       00:039E: 5D 29 3A 
  3594 00:03A1: 00 73 69 7A  	db	$00,$73,$69,$7A,$65,$6F,$66,$28,$49,$52,
                    $51,$43,$48,$41,$49
       00:03A5: 65 6F 66 28 
       00:03A9: 49 52 51 43 
       00:03AD: 48 41 49 
  3595 00:03B0: 4E 29 3A 00  	db	$4E,$29,$3A,$00,$49,$52,$51,$42,$55,$53,
                    $49,$44,$58,$28,$67
       00:03B4: 49 52 51 42 
       00:03B8: 55 53 49 44 
       00:03BC: 58 28 67 
  3596 00:03BF: 5F 69 72 71  	db	$5F,$69,$72,$71,$5F,$68,$61,$6E,$64,$6C,
                    $65,$72,$73,$29,$3A
       00:03C3: 5F 68 61 6E 
       00:03C7: 64 6C 65 72 
       00:03CB: 73 29 3A 
  3597 00:03CE: 00 49 52 51  	db	$00,$49,$52,$51,$4E,$55,$4D,$49,$44,$58,
                    $28,$67,$5F,$69,$72
       00:03D2: 4E 55 4D 49 
       00:03D6: 44 58 28 67 
       00:03DA: 5F 69 72 
  3598 00:03DD: 71 5F 68 61  	db	$71,$5F,$68,$61,$6E,$64,$6C,$65,$72,$73,
                    $29,$3A,$00,$66,$78
       00:03E1: 6E 64 6C 65 
       00:03E5: 72 73 29 3A 
       00:03E9: 00 66 78 
  3599 00:03EC: 6F 73 5F 6B  	db	$6F,$73,$5F,$6B,$65,$72,$6E,$65,$6C,$5F,
                    $61,$70,$69,$3A,$00
       00:03F0: 65 72 6E 65 
       00:03F4: 6C 5F 61 70 
       00:03F8: 69 3A 00 
  3600 00:03FB: 0A 0A 00 4B  	db	$0A,$0A,$00,$4B,$20,$52,$41,$4D,$20,$41,
                    $76,$61,$69,$6C,$61
       00:03FF: 20 52 41 4D 
       00:0403: 20 41 76 61 
       00:0407: 69 6C 61 
  3601 00:040A: 62 6C 65 00  	db	$62,$6C,$65,$00,$41,$56,$41,$49,$4C,$20,
                    $4D,$45,$4D,$3A,$00
       00:040E: 41 56 41 49 
       00:0412: 4C 20 4D 45 
       00:0416: 4D 3A 00 
  3602 00:0419: 0A 00 4B 20  	db	$0A,$00,$4B,$20,$48,$45,$41,$50,$20,$52,
                    $41,$4D,$20,$41,$76
       00:041D: 48 45 41 50 
       00:0421: 20 52 41 4D 
       00:0425: 20 41 76 
  3603 00:0428: 61 69 6C 61  	db	$61,$69,$6C,$61,$62,$6C,$65,$00,$20,$56,
                    $45,$52,$53,$49,$4F
       00:042C: 62 6C 65 00 
       00:0430: 20 56 45 52 
       00:0434: 53 49 4F 
  Mon Aug  9 2021 16:52                                                Page 73


  3604 00:0437: 4E 20 45 52  	db	$4E,$20,$45,$52,$52,$4F,$52,$3A,$20,$46,
                    $58,$4F,$53,$4D,$45
       00:043B: 52 4F 52 3A 
       00:043F: 20 46 58 4F 
       00:0443: 53 4D 45 
  3605 00:0446: 53 53 41 47  	db	$53,$53,$41,$47,$45,$20,$73,$69,$7A,$65,
                    $20,$6D,$69,$73,$6D
       00:044A: 45 20 73 69 
       00:044E: 7A 65 20 6D 
       00:0452: 69 73 6D 
  3606 00:0455: 61 74 63 68  	db	$61,$74,$63,$68,$00,$6B,$5F,$67,$65,$74,
                    $5F,$63,$6F,$6C,$73
       00:0459: 00 6B 5F 67 
       00:045D: 65 74 5F 63 
       00:0461: 6F 6C 73 
  3607 00:0464: 5F 76 69 73  	db	$5F,$76,$69,$73,$69,$62,$6C,$65,$3A,$00,
                    $6B,$5F,$67,$65,$74
       00:0468: 69 62 6C 65 
       00:046C: 3A 00 6B 5F 
       00:0470: 67 65 74 
  3608 00:0473: 5F 63 6F 6C  	db	$5F,$63,$6F,$6C,$73,$5F,$70,$65,$72,$5F,
                    $6C,$69,$6E,$65,$3A
       00:0477: 73 5F 70 65 
       00:047B: 72 5F 6C 69 
       00:047F: 6E 65 3A 
  3609 00:0482: 00 6B 5F 67  	db	$00,$6B,$5F,$67,$65,$74,$5F,$6C,$69,$6E,
                    $65,$73,$5F,$76,$69
       00:0486: 65 74 5F 6C 
       00:048A: 69 6E 65 73 
       00:048E: 5F 76 69 
  3610 00:0491: 73 69 62 6C  	db	$73,$69,$62,$6C,$65,$00,$6B,$5F,$67,$65,
                    $74,$5F,$6C,$69,$6E
       00:0495: 65 00 6B 5F 
       00:0499: 67 65 74 5F 
       00:049D: 6C 69 6E 
  3611 00:04A0: 65 73 5F 6D  	db	$65,$73,$5F,$6D,$61,$78,$3A,$00,$6B,$5F,
                    $69,$6E,$69,$74,$61
       00:04A4: 61 78 3A 00 
       00:04A8: 6B 5F 69 6E 
       00:04AC: 69 74 61 
  3612 00:04AF: 6C 69 7A 65  	db	$6C,$69,$7A,$65,$5F,$65,$78,$65,$63,$75,
                    $74,$69,$76,$65,$0D
       00:04B3: 5F 65 78 65 
       00:04B7: 63 75 74 69 
       00:04BB: 76 65 0D 
  3613 00:04BE: 0A 00 45 78  	db	$0A,$00,$45,$78,$65,$63,$75,$74,$69,$76,
                    $65,$20,$46,$61,$69
       00:04C2: 65 63 75 74 
       00:04C6: 69 76 65 20 
       00:04CA: 46 61 69 
  3614 00:04CD: 6C 65 64 20  	db	$6C,$65,$64,$20,$74,$6F,$20,$49,$6E,$69,
                    $74,$69,$61,$6C,$69
       00:04D1: 74 6F 20 49 
       00:04D5: 6E 69 74 69 
       00:04D9: 61 6C 69 
  3615 00:04DC: 7A 65 2E 00  	db	$7A,$65,$2E,$00,$6B,$5F,$69,$6E,$69,$74,
                    $61,$6C,$69,$7A,$65
       00:04E0: 6B 5F 69 6E 
  Mon Aug  9 2021 16:52                                                Page 74


       00:04E4: 69 74 61 6C 
       00:04E8: 69 7A 65 
  3616 00:04EB: 5F 65 76 65  	db	$5F,$65,$76,$65,$6E,$74,$5F,$6D,$61,$6E,
                    $61,$67,$65,$72,$0D
       00:04EF: 6E 74 5F 6D 
       00:04F3: 61 6E 61 67 
       00:04F7: 65 72 0D 
  3617 00:04FA: 0A 00 45 76  	db	$0A,$00,$45,$76,$65,$6E,$74,$20,$4D,$61,
                    $6E,$61,$67,$65,$72
       00:04FE: 65 6E 74 20 
       00:0502: 4D 61 6E 61 
       00:0506: 67 65 72 
  3618 00:0509: 20 46 61 69  	db	$20,$46,$61,$69,$6C,$65,$64,$20,$74,$6F,
                    $20,$49,$6E,$69,$74
       00:050D: 6C 65 64 20 
       00:0511: 74 6F 20 49 
       00:0515: 6E 69 74 
  3619 00:0518: 69 61 6C 69  	db	$69,$61,$6C,$69,$7A,$65,$2E,$00,$45,$76,
                    $65,$6E,$74,$20,$4D
       00:051C: 7A 65 2E 00 
       00:0520: 45 76 65 6E 
       00:0524: 74 20 4D 
  3620 00:0527: 61 6E 61 67  	db	$61,$6E,$61,$67,$65,$72,$20,$56,$65,$72,
                    $73,$69,$6F,$6E,$3A
       00:052B: 65 72 20 56 
       00:052F: 65 72 73 69 
       00:0533: 6F 6E 3A 
  3621 00:0536: 00 53 79 73  	db	$00,$53,$79,$73,$74,$65,$6D,$20,$46,$61,
                    $69,$6C,$75,$72,$65
       00:053A: 74 65 6D 20 
       00:053E: 46 61 69 6C 
       00:0542: 75 72 65 
  3622 00:0545: 2E 20 20 45  	db	$2E,$20,$20,$45,$76,$65,$6E,$74,$20,$4D,
                    $61,$6E,$61,$67,$65
       00:0549: 76 65 6E 74 
       00:054D: 20 4D 61 6E 
       00:0551: 61 67 65 
  3623 00:0554: 72 20 45 78  	db	$72,$20,$45,$78,$69,$74,$65,$64,$2E,$00
       00:0558: 69 74 65 64 
       00:055C: 2E 00 
  3624 00:055E:              	ends
  3625                        ;
  3626                        ;
  3627                        ;/*
  3628                        ;void k_level_test(VOID)
  3629                        ;{
  3630                        ;
  3631                        ;	int i = 30000;
  3632                        ;	int j = 30000;
  3633                        ;	int x = 0;
  3634                        ;	int y = 200;
  3635                        ;
  3636                        ;	int boxx = 200;
  3637                        ;	int boxy = 200;
  3638                        ;	int incx = 1;
  3639                        ;	int incy = 1;
  3640                        ;	int size = 5;
  3641                        ;
  Mon Aug  9 2021 16:52                                                Page 75


  3642                        ;	incx = size;
  3643                        ;	incy = size;
  3644                        ;
  3645                        ;	setColors();
  3646                        ;
  3647                        ;	for(i=3200;i>0;i--)
  3648                        ;	{
  3649                        ;		for(j=0;j<256;j++)
  3650                        ;		{
  3651                        ;			asm NOP;
  3652                        ;		}
  3653                        ;	}
  3654                        ;
  3655                        ;
  3656                        ;	k_enable_bitmap_mode();
  3657                        ;
  3658                        ;	k_gui_init_mousepointer(TRUE);
  3659                        ;
  3660                        ;	k_disable_border();
  3661                        ;
  3662                        ;	k_debug_string("CLEAR\r\n");
  3663                        ;
  3664                        ;	k_vdma_fill_rect_ex(0,0,640,480,0,0x00);
  3665                        ;	k_vdma_fill_rect_ex(0,0,640,480,0,0x10);
  3666                        ;
  3667                        ;	k_debug_string("FILL 0x00\r\n");
  3668                        ;
  3669                        ;	k_vdma_fill_rect_ex(200,200,100,100,15,0x00);
  3670                        ;	k_vdma_fill_rect_ex(200,50,100,100,15,0x00);
  3671                        ;
  3672                        ;	k_vdma_fill_rect_ex(0,0,640,480,0,0x10);
  3673                        ;
  3674                        ;	x = 1;
  3675                        ;	while(1)
  3676                        ;	{
  3677                        ;		k_vdma_fill_rect_ex(0,0,400,400,x,0x10);
  3678                        ;		k_vdma_fill_rect_ex(400,400,200,80,15-x,
                    0x10);
  3679                        ;
  3680                        ;
  3681                        ;
  3682                        ;
  3683                        ;		k_vdma_move_rect(boxx,boxy,100,100,incx,
                    0,15,0x00);
  3684                        ;		k_vdma_fill_rect_ex(boxx,boxy - 150,100,
                    100,0,0x00);
  3685                        ;		//k_draw_rect_slow(boxx,boxy, boxx+100, 
                    boxy+100, 0);
  3686                        ;
  3687                        ;		//k_draw_circle(boxx,boxy,100,0);
  3688                        ;
  3689                        ;
  3690                        ;		boxx+=incx;
  3691                        ;		if(incx > 0 && ((boxx + size + 100) > 64
                    0))
  3692                        ;			incx = (-1 * size);
  3693                        ;		if(incx < 0 && ((boxx - size) < 0))
  3694                        ;			incx = size;
  Mon Aug  9 2021 16:52                                                Page 76


  3695                        ;
  3696                        ;
  3697                        ;		k_vdma_fill_rect_ex(boxx,boxy - 150,100,
                    100,15,0x00);
  3698                        ;		//k_draw_circle(boxx,boxy,100,15);
  3699                        ;		//k_draw_rect_slow(boxx,boxy, boxx+100, 
                    boxy+100, 15);
  3700                        ;
  3701                        ;
  3702                        ;		//k_debug_string("SECOND\r\n");
  3703                        ;
  3704                        ;		x++;
  3705                        ;		if(x > 14)
  3706                        ;			x = 0;
  3707                        ;	}
  3708                        ;	//k_vdma_fill_rect(10,10,100,100,5);
  3709                        ;
  3710                        ;
  3711                        ;	return;
  3712                        ;}
  3713                        ;
  3714                        ;	/*
  3715                        ;	*BM1_CONTROL_REG = 0x01;
  3716                        ;	*BM1_START_ADDY_L = 0;
  3717                        ;	*BM1_START_ADDY_M = 0;
  3718                        ;	*BM1_START_ADDY_H = 0x10;
  3719                        ;
  3720                        ;	*BM0_CONTROL_REG = 0x01;
  3721                        ;	*BM0_START_ADDY_L = 0;
  3722                        ;	*BM0_START_ADDY_M = 0;
  3723                        ;	*BM0_START_ADDY_H = 0;
  3724                        ;
  3725                        ;
  3726                        ;	k_debug_string("k_enable_bitmap_mode RESET 1a...
                    \r\n");
  3727                        ;
  3728                        ;	MASTER_CTRL_REG_H[0] = MSTR_CTRL_VIDEO_MODE0;
  3729                        ;	MASTER_CTRL_REG_L[0] = MSTR_CTRL_GRAPH_MODE_EN;
  3730                        ;
  3731                        ;	for(i=3200;i>0;i--)
  3732                        ;	{
  3733                        ;		for(j=0;j<256;j++)
  3734                        ;		{
  3735                        ;			asm NOP;
  3736                        ;		}
  3737                        ;	}
  3738                        ;
  3739                        ;	k_debug_string("k_enable_bitmap_mode RESET 1b...
                    \r\n");
  3740                        ;
  3741                        ;	MASTER_CTRL_REG_H[0] = 0x00;
  3742                        ;	MASTER_CTRL_REG_L[0] = MSTR_CTRL_GRAPH_MODE_EN;
  3743                        ;
  3744                        ;	for(i=3200;i>0;i--)
  3745                        ;	{
  3746                        ;		for(j=0;j<256;j++)
  3747                        ;		{
  3748                        ;			asm NOP;
  Mon Aug  9 2021 16:52                                                Page 77


  3749                        ;		}
  3750                        ;	}
  3751                        ;
  3752                        ;	k_debug_string("k_enable_bitmap_mode RESET 1c...
                    \r\n");
  3753                        ;
  3754                        ;	MASTER_CTRL_REG_H[0] = 0x00;
  3755                        ;	MASTER_CTRL_REG_L[0] = MSTR_CTRL_GRAPH_MODE_EN;
  3756                        ;
  3757                        ;	for(i=3200;i>0;i--)
  3758                        ;	{
  3759                        ;		for(j=0;j<256;j++)
  3760                        ;		{
  3761                        ;			asm NOP;
  3762                        ;		}
  3763                        ;	}
  3764                        ;
  3765                        ;	k_debug_string("k_enable_bitmap_mode RESET 2...\
                    r\n");
  3766                        ;
  3767                        ;	MASTER_CTRL_REG_H[0] = 0x00;
  3768                        ;	MASTER_CTRL_REG_L[0] = MSTR_CTRL_GRAPH_MODE_EN;
  3769                        ;	for(i=3200;i>0;i--)
  3770                        ;	{
  3771                        ;		for(j=0;j<256;j++)
  3772                        ;		{
  3773                        ;			asm NOP;
  3774                        ;		}
  3775                        ;	}
  3776                        ;
  3777                        ;
  3778                        ;	*BM1_CONTROL_REG = ( BM_ENABLE | BM_LUT0 );
  3779                        ;	*BM0_CONTROL_REG = ( BM_ENABLE | BM_LUT0 );
  3780                        ;
  3781                        ;	k_debug_string("k_enable_bitmap_mode RESET 3...\
                    r\n");
  3782                        ;	*MASTER_CTRL_REG_L 	= (MSTR_CTRL_GRAPH_MODE_
                    EN | MSTR_CTRL_BITMAP_EN);
  3783                        ;
  3784                        ;	for(i=3200;i>0;i--)
  3785                        ;	{
  3786                        ;		for(j=0;j<256;j++)
  3787                        ;		{
  3788                        ;			asm NOP;
  3789                        ;		}
  3790                        ;	}
  3791                        ;
  3792                        ;
  3793                        ;*/
  3794                        ;
  3795                        ;
  3796                        ;/*
  3797                        ;ipc_data = k_fxstring_new("FXSTRING DATA",32);
  3798                        ;
  3799                        ;myport =  k_open_ipc_port("myport",0);
  3800                        ;if(myport)
  3801                        ;{
  3802                        ;	k_write_ipc_port(myport,(LPVOID)ipc_data,-1);
  Mon Aug  9 2021 16:52                                                Page 78


  3803                        ;
  3804                        ;	k_debug_strings("myport:", k_fxstring_as(k_read_
                    ipc_port(myport))  );
  3805                        ;	k_debug_pointer("myport:",k_read_ipc_port(myport
                    ) );
  3806                        ;
  3807                        ;	k_close_ipc_port(myport);
  3808                        ;}
  3809                        ;debugport =  k_get_ipc_port("@debug");
  3810                        ;if(debugport)
  3811                        ;{
  3812                        ;	k_write_ipc_port(debugport,(LPVOID)ipc_data,-1);
  3813                        ;
  3814                        ;	k_debug_strings("debugport:", k_fxstring_as(k_re
                    ad_ipc_port(debugport)));
  3815                        ;	k_debug_pointer("debugport:",k_read_ipc_port(deb
                    ugport) );
  3816                        ;
  3817                        ;	k_close_ipc_port(debugport);
  3818                        ;}
  3819                        ;
  3820                        ;
  3821                        ;k_fxstring_free(ipc_data);
  3822                        ;*/
  3823                        ;
  3824                        	.line	1165
  3825                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxmain.c",590
  3826                        	xref	~~k_init_splash
  3827                        	xref	~~k_dos_load_drivers
  3828                        	xref	~~k_row_console
  3829                        	xref	~~k_pos_console
  3830                        	xref	~~k_clear_console
  3831                        	xref	~~k_write_console
  3832                        	xref	~~k_text_mode_dialog
  3833                        	xref	~~k_put_string
  3834                        	xref	~~k_clear_screen
  3835                        	xref	~~k_enable_text_cursor
  3836                        	xref	~~k_set_border_color
  3837                        	xref	~~k_enable_border
  3838                        	xref	~~k_get_lines_max
  3839                        	xref	~~k_get_lines_visible
  3840                        	xref	~~k_get_cols_per_line
  3841                        	xref	~~k_get_cols_visible
  3842                        	xref	~~k_initialize_text_fonts
  3843                        	xref	~~k_initialize_text
  3844                        	xref	~~k_initalize_event_manager
  3845                        	xref	~~k_set_text_colors
  3846                        	xref	~~k_gui_init_mousepointer
  3847                        	xref	~~k_enable_text_mode
  3848                        	xref	~~k_mem_deallocate_heap
  3849                        	xref	~~k_fcheck_system_memory
  3850                        	xref	~~k_heap_integrity_check
  3851                        	xref	~~k_initalize_executive
  3852                        	xref	~~k_get_localtime_string
  3853                        	xref	~~k_get_date_string
  3854                        	xref	~~k_longtodec
  3855                        	xref	~~k_bytetohex
  Mon Aug  9 2021 16:52                                                Page 79


  3856                        	xref	~~k_strip_padding
  3857                        	xref	~~k_exec_throw_exception
  3858                        	xref	~~k_get_c256_minor_version
  3859                        	xref	~~k_get_c256_major_version
  3860                        	xref	~~k_get_rtc_year
  3861                        	xref	~~k_get_rtc_day
  3862                        	xref	~~k_get_rtc_month
  3863                        	xref	~~k_user_DisableOSDebug
  3864                        	xref	~~k_user_EnableOSDebug
  3865                        	xref	~~k_debug_crlf
  3866                        	xref	~~k_debug_strings
  3867                        	xref	~~k_debug_hex
  3868                        	xref	~~k_debug_long
  3869                        	xref	~~k_debug_integer
  3870                        	xref	~~k_debug_pointer
  3871                        	xref	~~k_debug_string
  3872                        	xref	~~k_report_configuration
  3873                        	xref	~~k_initializeZeroPage
  3874                        	xref	~~k_getZeroPage
  3875                        	.sym	~~main,~~main,65,2,0
  3876                        	.sym	~~ReportMemory,~~ReportMemory,65,2,0
  3877                        	.sym	~~DeallocateNodeListString,~~DeallocateN
                    odeListString,65,2,0
  3878                        	.sym	DLLMAIN,0,641,14,32
  3879                        	.sym	~~pAPGMPTR,~~pAPGMPTR,129,2,32
  3880                        	.sym	~~THIS_MODULE,~~THIS_MODULE,18,3,32
  3881                        	.sym	~~k_init_splash,~~k_init_splash,80,18,0
  3882                        	.sym	~~line,~~line,5,2,16
  3883                        	.sym	ps2_device_t,0,10,14,88,131
  3884                        	.sym	FILE,0,138,14,32,130
  3885                        	.sym	FILE_POINTER,0,10,14,112,130
  3886                        	.sym	~~k_dos_load_drivers,~~k_dos_load_driver
                    s,1102,18,32
  3887                        	.sym	PDOSHANDLE,0,138,14,32,129
  3888                        	.sym	DOSHANDLE,0,10,14,80,129
  3889                        	.sym	PFXDOSDEVICE,0,138,14,32,127
  3890                        	.sym	FXDOSDEVICE,0,10,14,5744,127
  3891                        	.sym	DOSINITDEVICE,0,641,14,32
  3892                        	.sym	DOSSECTORWRITER,0,654,14,32
  3893                        	.sym	DOSSECTORREADER,0,654,14,32
  3894                        	.sym	PIDENTIFY_DEVICE_DATA,0,138,14,32,126
  3895                        	.sym	IDENTIFY_DEVICE_DATA,0,10,14,4096,126
  3896                        	.sym	PIDSECTOR,0,138,14,32,103
  3897                        	.sym	IDSECTOR,0,10,14,2048,103
  3898                        	.sym	PLFN,0,138,14,32,102
  3899                        	.sym	LFN,0,10,14,256,102
  3900                        	.sym	PFAT16ENTRYLONG,0,138,14,32,101
  3901                        	.sym	FAT16ENTRYLONG,0,10,14,288,101
  3902                        	.sym	PFAT16ENTRY,0,138,14,32,100
  3903                        	.sym	FAT16ENTRY,0,10,14,256,100
  3904                        	.sym	Fat16BootSector,0,10,14,4096,99
  3905                        	.sym	PPARTITIONTABLE,0,138,14,32,98
  3906                        	.sym	PARTITIONTABLE,0,10,14,128,98
  3907                        	.sym	PFATBOOTSECTOR,0,138,14,32,97
  3908                        	.sym	FATBOOTSECTOR,0,10,14,928,97
  3909                        	.sym	fat_BS_t,0,10,14,688,96
  3910                        	.sym	fat_extBS_16_t,0,10,14,192,95
  3911                        	.sym	PFAT32EXT,0,138,14,32,94
  Mon Aug  9 2021 16:52                                                Page 80


  3912                        	.sym	fat_extBS_32_t,0,10,14,416,94
  3913                        	.sym	P_FX_FAT_DIR_INFO,0,138,14,32,93
  3914                        	.sym	FX_FAT_DIR_INFO,0,10,14,256,93
  3915                        	.sym	PFILEINFO,0,138,14,32,92
  3916                        	.sym	FILEINFO,0,10,14,136,92
  3917                        	.sym	PDISKINFO,0,138,14,32,91
  3918                        	.sym	DISKINFO,0,10,14,416,91
  3919                        	.sym	PDIRENTRY,0,138,14,32,90
  3920                        	.sym	DIRENTRY,0,10,14,256,90
  3921                        	.sym	DRESULT,0,5,14,16
  3922                        	.sym	DSTATUS,0,14,14,8
  3923                        	.sym	FRESULT,0,5,14,16
  3924                        	.sym	MKFS_PARM,0,10,14,80,89
  3925                        	.sym	FILINFO,0,10,14,2224,88
  3926                        	.sym	DIR,0,10,14,416,87
  3927                        	.sym	FIL,0,10,14,4400,86
  3928                        	.sym	FFOBJID,0,10,14,128,85
  3929                        	.sym	FATFS,0,10,14,4504,84
  3930                        	.sym	LBA_t,0,18,14,32
  3931                        	.sym	FSIZE_t,0,18,14,32
  3932                        	.sym	TCHAR,0,14,14,8
  3933                        	.sym	~~k_row_console,~~k_row_console,69,18,0
  3934                        	.sym	~~k_pos_console,~~k_pos_console,65,18,0
  3935                        	.sym	~~k_clear_console,~~k_clear_console,65,1
                    8,0
  3936                        	.sym	~~k_write_console,~~k_write_console,69,1
                    8,0
  3937                        	.sym	~~k_text_mode_dialog,~~k_text_mode_dialo
                    g,65,18,0
  3938                        	.sym	~~k_put_string,~~k_put_string,69,18,0
  3939                        	.sym	~~k_clear_screen,~~k_clear_screen,65,18,
                    0
  3940                        	.sym	~~k_enable_text_cursor,~~k_enable_text_c
                    ursor,65,18,0
  3941                        	.sym	~~k_set_border_color,~~k_set_border_colo
                    r,65,18,0
  3942                        	.sym	~~k_enable_border,~~k_enable_border,65,1
                    8,0
  3943                        	.sym	~~k_get_lines_max,~~k_get_lines_max,69,1
                    8,0
  3944                        	.sym	~~k_get_lines_visible,~~k_get_lines_visi
                    ble,69,18,0
  3945                        	.sym	~~k_get_cols_per_line,~~k_get_cols_per_l
                    ine,69,18,0
  3946                        	.sym	~~k_get_cols_visible,~~k_get_cols_visibl
                    e,69,18,0
  3947                        	.sym	~~k_initialize_text_fonts,~~k_initialize
                    _text_fonts,69,18,0
  3948                        	.sym	~~k_initialize_text,~~k_initialize_text,
                    65,18,0
  3949                        	.sym	PCOMMANDARGS,0,138,14,32,83
  3950                        	.sym	COMMANDARGS,0,10,14,64,83
  3951                        	.sym	PTOKENIZESTATE,0,133,14,32
  3952                        	.sym	TOKENIZESTATE,0,5,14,16
  3953                        	.sym	PTOKEN,0,138,14,32,82
  3954                        	.sym	TOKEN,0,10,14,64,82
  3955                        	.sym	PTOKENTYPE,0,133,14,32
  3956                        	.sym	TOKENTYPE,0,5,14,16
  Mon Aug  9 2021 16:52                                                Page 81


  3957                        	.sym	FXCommandHandler,0,656,14,32
  3958                        	.sym	PCONSOLECTX,0,138,14,32,81
  3959                        	.sym	CONSOLECTX,0,10,14,1144,81
  3960                        	.sym	PSPINNERCTX,0,138,14,32,80
  3961                        	.sym	SPINNERCTX,0,10,14,48,80
  3962                        	.sym	HCLIP,0,138,14,32,79
  3963                        	.sym	PCLIPBOARD_DATA,0,138,14,32,79
  3964                        	.sym	CLIPBOARD_DATA,0,10,14,168,79
  3965                        	.sym	~~k_initalize_event_manager,~~k_initaliz
                    e_event_manager,1098,18,32,78
  3966                        	.sym	PEVENTMANAGER,0,138,14,32,78
  3967                        	.sym	EVENTMANAGER,0,10,14,192,78
  3968                        	.sym	EV_RUN,0,656,14,32
  3969                        	.sym	EV_QUERY_METRIC,0,656,14,32
  3970                        	.sym	EV_CONFIGURE,0,656,14,32
  3971                        	.sym	EV_UNINIT,0,641,14,32
  3972                        	.sym	EV_INIT,0,8833,14,32
  3973                        	.sym	PMOUSE_MSG_STATE,0,138,14,32,77
  3974                        	.sym	MOUSE_MSG_STATE,0,10,14,184,77
  3975                        	.sym	PFXEVENTPROCESS,0,138,14,32,76
  3976                        	.sym	FXEVENTPROCESS,0,10,14,64,76
  3977                        	.sym	FXASYNCPROCESS,0,641,14,32
  3978                        	.sym	PMARSHALDATA,0,139,14,32,75
  3979                        	.sym	MARSHALDATA,0,11,14,32,75
  3980                        	.sym	FXIDLEPROCESS,0,641,14,32
  3981                        	.sym	FXEventProc,0,641,14,32
  3982                        	.sym	PMOUSEMSGDATA,0,138,14,32,74
  3983                        	.sym	MOUSEMSGDATA,0,10,14,64,74
  3984                        	.sym	MSGIRQ,0,5,14,16
  3985                        	.sym	MAINLOOPARGS,0,10,14,16,73
  3986                        	.sym	PEACHCHILD_MSG,0,138,14,32,72
  3987                        	.sym	EACHCHILD_MSG,0,10,14,64,72
  3988                        	.sym	PMSGBOX_DATA,0,138,14,32,71
  3989                        	.sym	MSGBOX_DATA,0,10,14,96,71
  3990                        	.sym	PDESKTOP_DATA,0,138,14,32,70
  3991                        	.sym	DESKTOP_DATA,0,10,14,64,70
  3992                        	.sym	PWINDOWMANAGER,0,138,14,32,69
  3993                        	.sym	WINDOWMANAGER,0,10,14,160,69
  3994                        	.sym	WM_DOPROCS,0,641,14,32
  3995                        	.sym	WM_QUERY_METRIC,0,656,14,32
  3996                        	.sym	WM_CONFIGURE,0,656,14,32
  3997                        	.sym	WM_HANDLE_EVENT,0,8833,14,32
  3998                        	.sym	WM_EVENTS,0,641,14,32
  3999                        	.sym	~~k_set_text_colors,~~k_set_text_colors,
                    65,18,0
  4000                        	.sym	~~k_gui_init_mousepointer,~~k_gui_init_m
                    ousepointer,65,18,0
  4001                        	.sym	~~k_enable_text_mode,~~k_enable_text_mod
                    e,65,18,0
  4002                        	.sym	PCUR_PALETTE_MAP,0,138,14,32,68
  4003                        	.sym	CUR_PALETTE_MAP,0,10,14,400,68
  4004                        	.sym	PCLICKDETECTED,0,138,14,32,67
  4005                        	.sym	CLICKDETECTED,0,10,14,64,67
  4006                        	.sym	OBJECTCLICKED,0,641,14,32
  4007                        	.sym	PALLOCATIONHEADER,0,138,14,32,66
  4008                        	.sym	ALLOCATIONHEADER,0,10,14,80,66
  4009                        	.sym	PIPCPORT,0,138,14,32,65
  4010                        	.sym	IPCPORT,0,10,14,144,65
  Mon Aug  9 2021 16:52                                                Page 82


  4011                        	.sym	~~k_mem_deallocate_heap,~~k_mem_dealloca
                    te_heap,65,18,0
  4012                        	.sym	~~k_fcheck_system_memory,~~k_fcheck_syst
                    em_memory,82,18,0
  4013                        	.sym	~~k_heap_integrity_check,~~k_heap_integr
                    ity_check,82,18,0
  4014                        	.sym	MemoryCallback,0,641,14,32
  4015                        	.sym	PFXMEMORYMAP,0,138,14,32,64
  4016                        	.sym	FXMEMORYMAP,0,10,14,2072,64
  4017                        	.sym	UMM_HEAP_INFO,0,10,14,256,63
  4018                        	.sym	~~k_initalize_executive,~~k_initalize_ex
                    ecutive,1098,18,32,62
  4019                        	.sym	PEXECUTIVE,0,138,14,32,62
  4020                        	.sym	EXECUTIVE,0,10,14,128,62
  4021                        	.sym	EX_QUERY_METRIC,0,656,14,32
  4022                        	.sym	EX_CONFIGURE,0,656,14,32
  4023                        	.sym	EX_UNINIT,0,641,14,32
  4024                        	.sym	EX_INIT,0,8833,14,32
  4025                        	.sym	~~k_get_localtime_string,~~k_get_localti
                    me_string,1102,18,32
  4026                        	.sym	~~k_get_date_string,~~k_get_date_string,
                    1102,18,32
  4027                        	.sym	~~k_longtodec,~~k_longtodec,1102,18,32
  4028                        	.sym	~~k_bytetohex,~~k_bytetohex,1102,18,32
  4029                        	.sym	~~k_strip_padding,~~k_strip_padding,1102
                    ,18,32
  4030                        	.sym	PFXSTRING,0,138,14,32,61
  4031                        	.sym	FXSTRING,0,10,14,64,61
  4032                        	.sym	~~k_exec_throw_exception,~~k_exec_throw_
                    exception,65,18,0
  4033                        	.sym	PIRQCHAIN,0,138,14,32,60
  4034                        	.sym	IRQCHAIN,0,10,14,128,60
  4035                        	.sym	DEVICEDRIVER_COMMAND,0,654,14,32
  4036                        	.sym	DEVICEDRIVER_UNLOAD,0,654,14,32
  4037                        	.sym	DEVICEDRIVER_WRITE,0,654,14,32
  4038                        	.sym	DEVICEDRIVER_READ,0,654,14,32
  4039                        	.sym	DEVICEDRIVER_LOAD,0,654,14,32
  4040                        	.sym	DEVICEDRIVER_IRQ,0,641,14,32
  4041                        	.sym	PFX_BLOCK_DEVICE_DRIVER,0,138,14,32,59
  4042                        	.sym	FX_BLOCK_DEVICE_DRIVER,0,10,14,808,59
  4043                        	.sym	GETDRIVERDEF,0,8842,14,32,58
  4044                        	.sym	PFX_DEVICE_DRIVER,0,138,14,32,58
  4045                        	.sym	FX_DEVICE_DRIVER,0,10,14,776,58
  4046                        	.sym	~~k_get_c256_minor_version,~~k_get_c256_
                    minor_version,65,18,0
  4047                        	.sym	~~k_get_c256_major_version,~~k_get_c256_
                    major_version,65,18,0
  4048                        	.sym	~~k_get_rtc_year,~~k_get_rtc_year,80,18,
                    0
  4049                        	.sym	~~k_get_rtc_day,~~k_get_rtc_day,80,18,0
  4050                        	.sym	~~k_get_rtc_month,~~k_get_rtc_month,80,1
                    8,0
  4051                        	.sym	~~k_user_DisableOSDebug,~~k_user_Disable
                    OSDebug,65,18,0
  4052                        	.sym	~~k_user_EnableOSDebug,~~k_user_EnableOS
                    Debug,65,18,0
  4053                        	.sym	~~k_debug_crlf,~~k_debug_crlf,65,18,0
  4054                        	.sym	~~k_debug_strings,~~k_debug_strings,65,1
  Mon Aug  9 2021 16:52                                                Page 83


                    8,0
  4055                        	.sym	~~k_debug_hex,~~k_debug_hex,65,18,0
  4056                        	.sym	~~k_debug_long,~~k_debug_long,65,18,0
  4057                        	.sym	~~k_debug_integer,~~k_debug_integer,65,1
                    8,0
  4058                        	.sym	~~k_debug_pointer,~~k_debug_pointer,65,1
                    8,0
  4059                        	.sym	~~k_debug_string,~~k_debug_string,65,18,
                    0
  4060                        	.sym	~~k_report_configuration,~~k_report_conf
                    iguration,69,18,0
  4061                        	.sym	PSEGMENTHEADER,0,138,14,32,57
  4062                        	.sym	SEGMENTHEADER,0,10,14,160,57
  4063                        	.sym	~~k_initializeZeroPage,~~k_initializeZer
                    oPage,1098,18,32,54
  4064                        	.sym	~~k_getZeroPage,~~k_getZeroPage,1098,18,
                    32,54
  4065                        	.sym	PDEBUGBYTEBITS,0,138,14,32,56
  4066                        	.sym	DEBUGBYTEBITS,0,10,14,8,56
  4067                        	.sym	PFXENVIRONMENT,0,138,14,32,55
  4068                        	.sym	FXENVIRONMENT,0,10,14,96,55
  4069                        	.sym	PFXZEROPAGE,0,138,14,32,54
  4070                        	.sym	FXZEROPAGE,0,10,14,720,54
  4071                        	.sym	IRQBUFFER,0,10,14,32,53
  4072                        	.sym	KERNELTRAPCALL,0,641,14,32
  4073                        	.sym	PFXKERNEL_API_CALLTABLE,0,138,14,32,52
  4074                        	.sym	FXKERNEL_API_CALLTABLE,0,10,14,8192,52
  4075                        	.sym	FOREACHNODEUNTIL,0,654,14,32
  4076                        	.sym	FOREACHNODE,0,641,14,32
  4077                        	.sym	PFXRFHEADER_STRING_ENTRY,0,138,14,32,51
  4078                        	.sym	FXRFHEADER_STRING_ENTRY,0,10,14,40,51
  4079                        	.sym	PFXRFHEADER_STRING,0,138,14,32,50
  4080                        	.sym	FXRFHEADER_STRING,0,10,14,32,50
  4081                        	.sym	PFXRFHEADER_FONT,0,138,14,32,49
  4082                        	.sym	FXRFHEADER_FONT,0,10,14,144,49
  4083                        	.sym	PFXRFHEADER,0,138,14,32,48
  4084                        	.sym	FXRFHEADER,0,10,14,72,48
  4085                        	.sym	PFXCOMBUFFER,0,138,14,32,47
  4086                        	.sym	FXCOMBUFFER,0,10,14,2080,47
  4087                        	.sym	PSUBMENULIST,0,138,14,32,46
  4088                        	.sym	SUBMENULIST,0,10,14,40,46
  4089                        	.sym	HSUBMENU,0,7,14,32
  4090                        	.sym	PSUBMENU,0,138,14,32,45
  4091                        	.sym	SUBMENU,0,10,14,64,45
  4092                        	.sym	MenuAction,0,641,14,32
  4093                        	.sym	PMENUANCHOR,0,138,14,32,44
  4094                        	.sym	MENUANCHOR,0,10,14,272,44
  4095                        	.sym	PMSGBOX,0,138,14,32,43
  4096                        	.sym	MSGBOX,0,10,14,144,43
  4097                        	.sym	PTEXTBOX,0,138,14,32,42
  4098                        	.sym	TEXTBOX,0,10,14,144,42
  4099                        	.sym	PLISTBOX,0,138,14,32,41
  4100                        	.sym	LISTBOX,0,10,14,240,41
  4101                        	.sym	PSCROLLBAR,0,138,14,32,40
  4102                        	.sym	SCROLLBAR,0,10,14,240,40
  4103                        	.sym	PBUTTON,0,138,14,32,39
  4104                        	.sym	BUTTON,0,10,14,96,39
  4105                        	.sym	PMENUDROPDOWNDATA,0,138,14,32,38
  Mon Aug  9 2021 16:52                                                Page 84


  4106                        	.sym	MENUDROPDOWNDATA,0,10,14,5152,38
  4107                        	.sym	PMENUTAG,0,138,14,32,37
  4108                        	.sym	MENUTAG,0,10,14,160,37
  4109                        	.sym	PMENU,0,138,14,32,36
  4110                        	.sym	MENU,0,10,14,280,36
  4111                        	.sym	HMENURESOURCE,0,129,14,32
  4112                        	.sym	FONTMETRIC,0,10,14,32,35
  4113                        	.sym	TITLE,0,142,14,32
  4114                        	.sym	PHANDLE,0,1153,14,32
  4115                        	.sym	HANDLE,0,129,14,32
  4116                        	.sym	PWINDOWEX,0,138,14,32,34
  4117                        	.sym	WINDOWEX,0,10,14,3880,34
  4118                        	.sym	PWINDOW,0,138,14,32,33
  4119                        	.sym	WINDOW,0,10,14,3904,33
  4120                        	.sym	PDRAGDATA,0,138,14,32,32
  4121                        	.sym	DRAGDATA,0,10,14,216,32
  4122                        	.sym	PNCCLICKABLE,0,138,14,32,31
  4123                        	.sym	NCCLICKABLE,0,10,14,136,31
  4124                        	.sym	HCLICKABLE,0,7,14,32
  4125                        	.sym	PCLICKABLE,0,138,14,32,30
  4126                        	.sym	CLICKABLE,0,10,14,152,30
  4127                        	.sym	PWNDCLASS,0,138,14,32,29
  4128                        	.sym	WNDCLASS,0,10,14,272,29
  4129                        	.sym	HBRUSH,0,129,14,32
  4130                        	.sym	HCURSOR,0,129,14,32
  4131                        	.sym	HICON,0,129,14,32
  4132                        	.sym	HINSTANCE,0,129,14,32
  4133                        	.sym	FXWndProc,0,654,14,32
  4134                        	.sym	PDRECT,0,138,14,32,28
  4135                        	.sym	DRECT,0,10,14,112,28
  4136                        	.sym	PRECTP,0,138,14,32,27
  4137                        	.sym	RECTP,0,10,14,96,27
  4138                        	.sym	PRECT,0,138,14,32,26
  4139                        	.sym	RECT,0,10,14,112,26
  4140                        	.sym	PPOINT,0,138,14,32,25
  4141                        	.sym	POINT,0,10,14,32,25
  4142                        	.sym	PFXPROPERTY,0,138,14,32,23
  4143                        	.sym	FXPROPERTY,0,10,14,384,23
  4144                        	.sym	PKEYSTATE,0,138,14,32,22
  4145                        	.sym	KEYSTATE,0,10,14,112,22
  4146                        	.sym	SCANCODE,0,14,14,8
  4147                        	.sym	KEYCODE,0,16,14,16
  4148                        	.sym	PFXPROCESSMESSAGE,0,138,14,32,21
  4149                        	.sym	FXPROCESSMESSAGE,0,10,14,112,21
  4150                        	.sym	PFXPROCESS,0,138,14,32,20
  4151                        	.sym	FXPROCESS,0,10,14,800,20
  4152                        	.sym	PDESKTOP_CONTROL,0,138,14,32,19
  4153                        	.sym	DESKTOP_CONTROL,0,10,14,392,19
  4154                        	.sym	PCONSOLE_CONTROL,0,138,14,32,18
  4155                        	.sym	CONSOLE_CONTROL,0,10,14,448,18
  4156                        	.sym	FXProcessProc,0,641,14,32
  4157                        	.sym	PFXCMDMESSAGE,0,138,14,32,17
  4158                        	.sym	FXCMDMESSAGE,0,10,14,312,17
  4159                        	.sym	PFXOSMESSAGE,0,138,14,32,16
  4160                        	.sym	FXOSMESSAGE,0,10,14,312,16
  4161                        	.sym	PINT_REGS,0,138,14,32,15
  4162                        	.sym	INT_REGS,0,10,14,104,15
  4163                        	.sym	TASK_STACK,0,10,14,32,14
  Mon Aug  9 2021 16:52                                                Page 85


  4164                        	.sym	TASK,0,10,14,48,13
  4165                        	.sym	PIRQDATA,0,138,14,32,12
  4166                        	.sym	IRQDATA,0,10,14,48,12
  4167                        	.sym	HMENU,0,129,14,32
  4168                        	.sym	HWND,0,129,14,32
  4169                        	.sym	MSGDATA,0,14,14,8
  4170                        	.sym	MSGDEST,0,18,14,32
  4171                        	.sym	MSGSRC,0,18,14,32
  4172                        	.sym	MSGTYPE,0,16,14,16
  4173                        	.sym	PROCESS_RESOURCE_LIST,0,138,14,32,6
  4174                        	.sym	PROCESS_TLS_LIST,0,138,14,32,6
  4175                        	.sym	SEMAPHORE_LIST,0,138,14,32,6
  4176                        	.sym	FILE_BLOCK_LIST,0,138,14,32,6
  4177                        	.sym	FILE_PATH_LIST,0,138,14,32,6
  4178                        	.sym	PROCEDURE_LIST,0,138,14,32,6
  4179                        	.sym	FILE_HANDLE,0,138,14,32,11
  4180                        	.sym	FILE_BLOCK,0,10,14,552,11
  4181                        	.sym	SEMAPHORE,0,10,14,16,10
  4182                        	.sym	PPROCESS_SIGNAL,0,138,14,32,9
  4183                        	.sym	PROCESS_SIGNAL,0,10,14,16,9
  4184                        	.sym	KRESULT,0,18,14,32
  4185                        	.sym	PKERNEL_ERROR,0,138,14,32,8
  4186                        	.sym	KERNEL_ERROR,0,10,14,32,8
  4187                        	.sym	PROCESS_STATUS,0,16,14,16
  4188                        	.sym	FILE_PATH_NAME,0,142,14,32
  4189                        	.sym	PROCESS_RESOURCE,0,129,14,32
  4190                        	.sym	PROCESS_TLS,0,129,14,32
  4191                        	.sym	PROCESS_CTX,0,129,14,32
  4192                        	.sym	USERID,0,16,14,16
  4193                        	.sym	PROCESS_ID,0,18,14,32
  4194                        	.sym	PROCESS_BANK,0,14,14,8
  4195                        	.sym	PFXQUEUE,0,138,14,32,7
  4196                        	.sym	FXQUEUE,0,10,14,80,7
  4197                        	.sym	PFXNODELIST,0,138,14,32,6
  4198                        	.sym	FXNODELIST,0,10,14,96,6
  4199                        	.sym	NodeListDeallocator,0,641,14,32
  4200                        	.sym	PFXNODE,0,138,14,32,5
  4201                        	.sym	FXNODE,0,10,14,384,5
  4202                        	.sym	PBYTEBITS,0,138,14,32,4
  4203                        	.sym	BYTEBITS,0,10,14,8,4
  4204                        	.sym	HRESULT,0,18,14,32
  4205                        	.sym	LPWCHAR,0,144,14,32
  4206                        	.sym	WCHAR,0,16,14,16
  4207                        	.sym	HSTRINGTABLE,0,129,14,32
  4208                        	.sym	HCOLOR,0,129,14,32
  4209                        	.sym	HFONT,0,129,14,32
  4210                        	.sym	HDC,0,129,14,32
  4211                        	.sym	HPOINTER,0,129,14,32
  4212                        	.sym	uint32_t,0,18,14,32
  4213                        	.sym	uint8_t,0,14,14,8
  4214                        	.sym	LPBOOL,0,142,14,32
  4215                        	.sym	BOOL,0,14,14,8
  4216                        	.sym	DWORD,0,18,14,32
  4217                        	.sym	ULONG,0,18,14,32
  4218                        	.sym	LPLONG,0,135,14,32
  4219                        	.sym	LONG,0,7,14,32
  4220                        	.sym	PUINT,0,144,14,32
  4221                        	.sym	USHORT,0,16,14,16
  Mon Aug  9 2021 16:52                                                Page 86


  4222                        	.sym	UINT,0,16,14,16
  4223                        	.sym	INT,0,5,14,16
  4224                        	.sym	WORD,0,5,14,16
  4225                        	.sym	PBYTE,0,142,14,32
  4226                        	.sym	BYTE,0,14,14,8
  4227                        	.sym	IOPORT,0,142,14,32
  4228                        	.sym	PUCHAR,0,142,14,32
  4229                        	.sym	UCHAR,0,14,14,8
  4230                        	.sym	LPWCSTR,0,142,14,32
  4231                        	.sym	LPCSTR,0,142,14,32
  4232                        	.sym	LPSTR,0,142,14,32
  4233                        	.sym	LPCHAR,0,142,14,32
  4234                        	.sym	CHAR,0,14,14,8
  4235                        	.sym	PUINT_32,0,146,14,32
  4236                        	.sym	UINT_32,0,18,14,32
  4237                        	.sym	PUINT_16,0,144,14,32
  4238                        	.sym	UINT_16,0,16,14,16
  4239                        	.sym	PUINT_8,0,142,14,32
  4240                        	.sym	UINT_8,0,14,14,8
  4241                        	.sym	LPVOID,0,129,14,32
  4242                        	.sym	VOID,0,1,14,32
  4243                        	.sym	Boolean_T,0,5,14,16
  4244                        	.sym	ldiv_t,0,10,14,64,2
  4245                        	.sym	div_t,0,10,14,32,1
  4246                        	.sym	wctype_t,0,16,14,16
  4247                        	.sym	wint_t,0,16,14,16
  4248                        	.sym	wchar_t,0,14,14,8
  4249                        	.sym	ptrdiff_t,0,7,14,32
  4250                        	.sym	size_t,0,16,14,16
  4251                        	end


      Lines assembled: 4251
      Errors: 0
