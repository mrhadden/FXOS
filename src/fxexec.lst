  Sat Jul 10 2021  1:15                                                Page 1


                     ***************************************
                     **      WDC 65C816 Macro Assembler   **
                     **                                   **
                     **     Version 3.49.1- Feb  6 2006    **
                     ***************************************

     1                        ;:ts=8
     2             00000001   R0	equ	1
     3             00000005   R1	equ	5
     4             00000009   R2	equ	9
     5             0000000D   R3	equ	13
     6                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxexec.c",0
     7                        ;
     8                        ;#include "fxkernel.h"
     9                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxkernel.h",0
    10                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos.h",0
    11                        	.file	"G:\devtools\WDCTools\wdc\Tools\include\
                    stdlib.h",0
    12                        	.file	"G:\devtools\WDCTools\wdc\Tools\include\
                    stddef.h",0
    13                        	.line	88
    14                        	.file	"G:\devtools\WDCTools\wdc\Tools\include\
                    stdlib.h",43
    15                        	.stag	fake1_,32,1
    16                        	.member	quot,0,5,8,16
    17                        	.member	rem,16,5,8,16
    18                        	.eos
    19                        	.stag	fake2_,64,2
    20                        	.member	quot,0,7,8,32
    21                        	.member	rem,32,7,8,32
    22                        	.eos
    23                        	.stag	int_sqrt,32,3
    24                        	.member	sqrt,0,16,8,16
    25                        	.member	frac,16,16,8,16
    26                        	.eos
    27                        	.line	205
    28                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos.h",4
    29                        	.file	"G:\devtools\WDCTools\wdc\Tools\include\
                    string.h",0
    30                        	.line	134
    31                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos.h",5
    32                        	.file	"G:\devtools\WDCTools\wdc\Tools\include\
                    ctype.h",0
    33                        	.line	103
    34                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos.h",6
    35                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxtypes.h",0
    36                        	.stag	_fx_bytebits,8,4
    37                        	.member	b7,0,14,17,1
    38                        	.member	b6,1,14,17,1
    39                        	.member	b5,2,14,17,1
    40                        	.member	b4,3,14,17,1
  Sat Jul 10 2021  1:15                                                Page 2


    41                        	.member	b3,4,14,17,1
    42                        	.member	b2,5,14,17,1
    43                        	.member	b1,6,14,17,1
    44                        	.member	b0,7,14,17,1
    45                        	.eos
    46                        	.stag	_fx_node,384,5
    47                        	.member	type,0,14,8,8
    48                        	.member	Reserved0,8,14,8,8
    49                        	.member	data,16,129,8,32
    50                        	.member	last,48,138,8,32,5
    51                        	.member	next,80,138,8,32,5
    52                        	.member	name,112,110,8,0,32
    53                        	.member	Reserved1,368,16,8,16
    54                        	.eos
    55                        	.stag	_fx_nodelist,96,6
    56                        	.member	listhead,0,138,8,32,5
    57                        	.member	listData,32,129,8,32
    58                        	.member	deallocator,64,641,8,32
    59                        	.eos
    60                        	.stag	_fx_queue,80,7
    61                        	.member	count,0,5,8,16
    62                        	.member	front,16,138,8,32,5
    63                        	.member	rear,48,138,8,32,5
    64                        	.eos
    65                        	.stag	fake8_,32,8
    66                        	.member	subsystem,0,14,8,8
    67                        	.member	level,8,14,8,8
    68                        	.member	error,16,16,8,16
    69                        	.eos
    70                        	.stag	_fx_process_signal,16,9
    71                        	.member	cbSize,0,16,8,16
    72                        	.eos
    73                        	.stag	_fx_semaphore,16,10
    74                        	.member	reserved,0,5,8,16
    75                        	.eos
    76                        	.stag	_fx_fileBlock,552,11
    77                        	.member	openCount,0,16,8,16
    78                        	.member	lockCount,16,16,8,16
    79                        	.member	dirty,32,14,8,8
    80                        	.member	fileBuffer,40,110,8,0,64
    81                        	.eos
    82                        	.stag	_fx_irq_data,48,12
    83                        	.member	line,0,5,8,16
    84                        	.member	keycode,16,142,8,32
    85                        	.eos
    86                        	.stag	_task,48,13
    87                        	.member	SPL,0,14,8,8
    88                        	.member	SPH,8,14,8,8
    89                        	.member	pstack,16,142,8,32
    90                        	.eos
    91                        	.stag	_task_stack,32,14
    92                        	.member	SS,0,142,8,32
    93                        	.eos
    94                        	.stag	int_regs,104,15
    95                        	.member	PB,0,14,8,8
    96                        	.member	PH,8,14,8,8
    97                        	.member	PL,16,14,8,8
    98                        	.member	PP,24,14,8,8
  Sat Jul 10 2021  1:15                                                Page 3


    99                        	.member	DB,32,14,8,8
   100                        	.member	DH,40,14,8,8
   101                        	.member	DL,48,14,8,8
   102                        	.member	AH,56,14,8,8
   103                        	.member	AL,64,14,8,8
   104                        	.member	XH,72,14,8,8
   105                        	.member	XL,80,14,8,8
   106                        	.member	YH,88,14,8,8
   107                        	.member	YL,96,14,8,8
   108                        	.eos
   109                        	.stag	_fx_eventMessage,304,16
   110                        	.member	src,0,18,8,32
   111                        	.member	dest,32,18,8,32
   112                        	.member	type,64,16,8,16
   113                        	.member	hwnd,80,129,8,32
   114                        	.member	pheap,112,129,8,32
   115                        	.member	msgTime,144,18,8,32
   116                        	.member	data,176,110,8,0,16
   117                        	.eos
   118                        	.stag	_fx_cmdMessage,304,17
   119                        	.member	src,0,18,8,32
   120                        	.member	dest,32,18,8,32
   121                        	.member	type,64,16,8,16
   122                        	.member	hwnd,80,129,8,32
   123                        	.member	pheap,112,129,8,32
   124                        	.member	msgTime,144,18,8,32
   125                        	.member	cmdCId,176,16,8,16
   126                        	.member	cmdMId,192,16,8,16
   127                        	.member	parameter1,208,18,8,32
   128                        	.member	parameter2,240,18,8,32
   129                        	.member	parameter3,272,18,8,32
   130                        	.eos
   131                        	.stag	_fx_console_ctl,448,18
   132                        	.member	maxCols,0,5,8,16
   133                        	.member	maxRows,16,5,8,16
   134                        	.member	curX,32,5,8,16
   135                        	.member	curY,48,5,8,16
   136                        	.member	fgColor,64,5,8,16
   137                        	.member	bgColor,80,5,8,16
   138                        	.member	mode,96,14,8,8
   139                        	.member	kbBuffer,104,101,8,0,16
   140                        	.member	screenBuffer,360,142,8,32
   141                        	.member	desktopMode,392,14,8,8
   142                        	.member	lastMouseButton,400,5,8,16
   143                        	.member	lastMouseX,416,5,8,16
   144                        	.member	lastMouseY,432,5,8,16
   145                        	.eos
   146                        	.stag	_fx_desktop_ctl,392,19
   147                        	.member	desktopMode,0,14,8,8
   148                        	.member	cursorCtl,8,5,8,16
   149                        	.member	cursorState,24,5,8,16
   150                        	.member	backgroundColor,40,5,8,16
   151                        	.member	foregroundColor,56,5,8,16
   152                        	.member	menuMode,72,5,8,16
   153                        	.member	lastMouseButton,88,5,8,16
   154                        	.member	lastMouseX,104,5,8,16
   155                        	.member	lastMouseY,120,5,8,16
   156                        	.member	currentDiskName,136,142,8,32
  Sat Jul 10 2021  1:15                                                Page 4


   157                        	.member	diskNodes,168,129,8,32
   158                        	.member	titleNodes,200,129,8,32
   159                        	.member	menuNodes,232,129,8,32
   160                        	.member	iconNodes,264,129,8,32
   161                        	.member	windowNodes,296,129,8,32
   162                        	.member	fontNodes,328,129,8,32
   163                        	.member	wndProc,360,138,8,32,6
   164                        	.eos
   165                        	.stag	_fx_process,800,20
   166                        	.member	cbSize,0,5,8,16
   167                        	.member	procId,16,18,8,32
   168                        	.member	parentId,48,18,8,32
   169                        	.member	ctx,80,129,8,32
   170                        	.member	userId,112,16,8,16
   171                        	.member	status,128,16,8,16
   172                        	.member	foregroundActive,144,14,8,8
   173                        	.member	tls,152,1121,8,32,8
   174                        	.member	commandLine,408,142,8,32
   175                        	.member	semaphores,440,138,8,32,6
   176                        	.member	fileHandles,472,138,8,32,6
   177                        	.member	pathList,504,138,8,32,6
   178                        	.member	resources,536,138,8,32,6
   179                        	.member	timerAware,568,14,8,8
   180                        	.member	timerTicks,576,112,8,0,2
   181                        	.member	timerTickCount,608,112,8,0,2
   182                        	.member	kernelError,640,10,8,32,8
   183                        	.member	consoleCtl,672,138,8,32,18
   184                        	.member	desktopCtl,704,138,8,32,19
   185                        	.member	execProc,736,641,8,32
   186                        	.member	startupArgs,768,129,8,32
   187                        	.eos
   188                        	.stag	_fxProcessMessage,112,21
   189                        	.member	src,0,18,8,32
   190                        	.member	dest,32,18,8,32
   191                        	.member	type,64,16,8,16
   192                        	.member	processInfo,80,138,8,32,20
   193                        	.eos
   194                        	.stag	_k_key_state,112,22
   195                        	.member	scanCode,0,14,8,8
   196                        	.member	isShifted,8,14,8,8
   197                        	.member	isAlt,16,14,8,8
   198                        	.member	isExtended,24,14,8,8
   199                        	.member	isCapsLock,32,14,8,8
   200                        	.member	isNumLock,40,14,8,8
   201                        	.member	isScrollLock,48,14,8,8
   202                        	.member	keyChar,56,16,8,16
   203                        	.member	scanTime,72,18,8,32
   204                        	.member	ledStatus,104,14,8,8
   205                        	.eos
   206                        	.stag	_fx_property,384,23
   207                        	.member	name,0,110,8,0,16
   208                        	.member	value,128,110,8,0,32
   209                        	.eos
   210                        	.utag	_24bitPointer,32,24
   211                        	.member	address,0,142,11,32
   212                        	.member	bytes,0,110,11,0,4
   213                        	.eos
   214                        	.stag	_PointStruct,32,25
  Sat Jul 10 2021  1:15                                                Page 5


   215                        	.member	x,0,5,8,16
   216                        	.member	y,16,5,8,16
   217                        	.eos
   218                        	.stag	_RectStruct,112,26
   219                        	.member	x,0,5,8,16
   220                        	.member	y,16,5,8,16
   221                        	.member	z,32,18,8,32
   222                        	.member	width,64,5,8,16
   223                        	.member	height,80,5,8,16
   224                        	.member	attr,96,5,8,16
   225                        	.eos
   226                        	.stag	fake27_,96,27
   227                        	.member	name,0,142,8,32
   228                        	.member	topLeft,32,10,8,32,25
   229                        	.member	bottomRight,64,10,8,32,25
   230                        	.eos
   231                        	.stag	fake28_,112,28
   232                        	.member	x,0,5,8,16
   233                        	.member	y,16,5,8,16
   234                        	.member	z,32,5,8,16
   235                        	.member	width,48,5,8,16
   236                        	.member	height,64,5,8,16
   237                        	.member	data,80,18,8,32
   238                        	.eos
   239                        	.stag	_k_WindowClass,272,29
   240                        	.member	cbSize,0,16,8,16
   241                        	.member	style,16,16,8,16
   242                        	.member	styleEx,32,16,8,16
   243                        	.member	pWndProc,48,654,8,32
   244                        	.member	hInstance,80,129,8,32
   245                        	.member	hIcon,112,129,8,32
   246                        	.member	hCursor,144,129,8,32
   247                        	.member	hbrBackground,176,129,8,32
   248                        	.member	lpszMenuName,208,142,8,32
   249                        	.member	lpszClassName,240,142,8,32
   250                        	.eos
   251                        	.stag	_ClickableRect,152,30
   252                        	.member	area,0,10,8,112,26
   253                        	.member	z,112,18,8,32
   254                        	.member	enabled,144,14,8,8
   255                        	.eos
   256                        	.stag	_NCClickableRect,136,31
   257                        	.member	area,0,10,8,112,26
   258                        	.member	msgType,112,16,8,16
   259                        	.member	enabled,128,14,8,8
   260                        	.eos
   261                        	.stag	_DragData,216,32
   262                        	.member	area,0,10,8,112,26
   263                        	.member	xoffset,112,5,8,16
   264                        	.member	yoffset,128,5,8,16
   265                        	.member	msgType,144,16,8,16
   266                        	.member	ncAction,160,16,8,16
   267                        	.member	isDrag,176,14,8,8
   268                        	.member	isResize,184,14,8,8
   269                        	.member	canDrag,192,14,8,8
   270                        	.member	canDrop,200,14,8,8
   271                        	.member	didDrag,208,14,8,8
   272                        	.eos
  Sat Jul 10 2021  1:15                                                Page 6


   273                        	.stag	_k_WindowStruct,3904,33
   274                        	.member	cbSize,0,16,8,16
   275                        	.member	style,16,18,8,32
   276                        	.member	styleEx,48,18,8,32
   277                        	.member	win_id,80,5,8,16
   278                        	.member	win_x,96,5,8,16
   279                        	.member	win_y,112,5,8,16
   280                        	.member	win_width,128,5,8,16
   281                        	.member	win_height,144,5,8,16
   282                        	.member	win_xoffset,160,5,8,16
   283                        	.member	win_yoffset,176,5,8,16
   284                        	.member	win_cxoffset,192,5,8,16
   285                        	.member	win_cyoffset,208,5,8,16
   286                        	.member	wndRect,224,10,8,112,26
   287                        	.member	clientRect,336,10,8,112,26
   288                        	.member	nonclientGadgets,448,106,8,0,31,16
   289                        	.member	clickable,2624,129,8,32
   290                        	.member	win_title,2656,110,8,0,32
   291                        	.member	Reserved0,2912,16,8,16
   292                        	.member	win_class,2928,110,8,0,16
   293                        	.member	win_class_name,3056,110,8,0,32
   294                        	.member	nBitmapLayer,3312,16,8,16
   295                        	.member	bgRegion,3328,129,8,32
   296                        	.member	procid,3360,18,8,32
   297                        	.member	pWndClass,3392,138,8,32,29
   298                        	.member	pParentWindow,3424,129,8,32
   299                        	.member	hMenu,3456,129,8,32
   300                        	.member	hPointer,3488,129,8,32
   301                        	.member	hBackground,3520,129,8,32
   302                        	.member	pChildWindows,3552,138,8,32,6
   303                        	.member	pChildHitList,3584,138,8,32,6
   304                        	.member	isVisible,3616,14,8,8
   305                        	.member	windowData,3624,129,8,32
   306                        	.member	clientData,3656,1121,8,32,6
   307                        	.member	isClosed,3848,14,8,8
   308                        	.member	isClosing,3856,14,8,8
   309                        	.member	isDesktop,3864,14,8,8
   310                        	.member	clickableNode,3872,138,8,32,5
   311                        	.eos
   312                        	.stag	_k_WindowStructEx,3880,34
   313                        	.member	cbSize,0,16,8,16
   314                        	.member	style,16,18,8,32
   315                        	.member	styleEx,48,18,8,32
   316                        	.member	win_id,80,5,8,16
   317                        	.member	win_x,96,5,8,16
   318                        	.member	win_y,112,5,8,16
   319                        	.member	win_width,128,5,8,16
   320                        	.member	win_height,144,5,8,16
   321                        	.member	win_xoffset,160,5,8,16
   322                        	.member	win_yoffset,176,5,8,16
   323                        	.member	win_cxoffset,192,5,8,16
   324                        	.member	win_cyoffset,208,5,8,16
   325                        	.member	wndRect,224,10,8,112,26
   326                        	.member	clientRect,336,10,8,112,26
   327                        	.member	nonclientGadgets,448,106,8,0,31,16
   328                        	.member	clickable,2624,129,8,32
   329                        	.member	win_title,2656,110,8,0,32
   330                        	.member	Reserved0,2912,16,8,16
  Sat Jul 10 2021  1:15                                                Page 7


   331                        	.member	win_class,2928,110,8,0,16
   332                        	.member	nBitmapLayer,3056,16,8,16
   333                        	.member	procid,3072,18,8,32
   334                        	.member	pWndClass,3104,138,8,32,29
   335                        	.member	pParentWindow,3136,129,8,32
   336                        	.member	hMenu,3168,129,8,32
   337                        	.member	hPointer,3200,129,8,32
   338                        	.member	hBackground,3232,129,8,32
   339                        	.member	pChildWindows,3264,138,8,32,6
   340                        	.member	pChildHitList,3296,138,8,32,6
   341                        	.member	isVisible,3328,14,8,8
   342                        	.member	windowData,3336,129,8,32
   343                        	.member	clientData,3368,1121,8,32,4
   344                        	.member	isClosed,3496,14,8,8
   345                        	.member	hWnd,3504,129,8,32
   346                        	.member	localRect,3536,10,8,112,26
   347                        	.member	globalRect,3648,10,8,112,26
   348                        	.member	clientOffsetRect,3760,10,8,112,26
   349                        	.member	isDesktop,3872,14,8,8
   350                        	.eos
   351                        	.stag	_FontMetric,32,35
   352                        	.member	width,0,5,8,16
   353                        	.member	height,16,5,8,16
   354                        	.eos
   355                        	.stag	_MenuStruct,280,36
   356                        	.member	cx,0,5,8,16
   357                        	.member	cy,16,5,8,16
   358                        	.member	width,32,5,8,16
   359                        	.member	height,48,5,8,16
   360                        	.member	fcolor,64,14,8,8
   361                        	.member	bcolor,72,14,8,8
   362                        	.member	chromeLeft,80,14,8,8
   363                        	.member	chromeRight1,88,14,8,8
   364                        	.member	chromeRight2,96,14,8,8
   365                        	.member	hFont,104,129,8,32
   366                        	.member	itemId,136,16,8,16
   367                        	.member	pCaption,152,142,8,32
   368                        	.member	subMenus,184,138,8,32,6
   369                        	.member	pBackground,216,129,8,32
   370                        	.member	hWndOwner,248,129,8,32
   371                        	.eos
   372                        	.stag	fake37_,160,37
   373                        	.member	menuId,0,16,8,16
   374                        	.member	caption,16,142,8,32
   375                        	.member	rect,48,10,8,112,26
   376                        	.eos
   377                        	.stag	fake38_,5152,38
   378                        	.member	pParent,0,138,8,32,33
   379                        	.member	rect,32,10,8,112,26
   380                        	.member	captions,144,1134,8,32,24
   381                        	.member	chrome,912,110,8,0,24
   382                        	.member	ids,1104,112,8,0,24
   383                        	.member	clickable,1488,106,8,0,30,24
   384                        	.member	selected,5136,16,8,16
   385                        	.eos
   386                        	.stag	_fx_button_t,96,39
   387                        	.member	pCaption,0,142,8,32
   388                        	.member	cCaption,32,16,8,16
  Sat Jul 10 2021  1:15                                                Page 8


   389                        	.member	data,48,129,8,32
   390                        	.member	captionPixelWidth,80,16,8,16
   391                        	.eos
   392                        	.stag	_fx_scrollbar_t,240,40
   393                        	.member	min,0,16,8,16
   394                        	.member	max,16,16,8,16
   395                        	.member	increment,32,16,8,16
   396                        	.member	stopsize,48,16,8,16
   397                        	.member	location,64,5,8,16
   398                        	.member	state,80,5,8,16
   399                        	.member	rectThumb,96,10,8,112,26
   400                        	.member	data,208,129,8,32
   401                        	.eos
   402                        	.stag	_fx_listbox_t,240,41
   403                        	.member	pos,0,5,8,16
   404                        	.member	selected,16,16,8,16
   405                        	.member	offsetX,32,5,8,16
   406                        	.member	offsetY,48,5,8,16
   407                        	.member	inc,64,5,8,16
   408                        	.member	direction,80,5,8,16
   409                        	.member	top,96,5,8,16
   410                        	.member	bottom,112,5,8,16
   411                        	.member	indexTop,128,5,8,16
   412                        	.member	indexBottom,144,5,8,16
   413                        	.member	maxItems,160,16,8,16
   414                        	.member	fontSet,176,142,8,32
   415                        	.member	data,208,129,8,32
   416                        	.eos
   417                        	.stag	_fx_textbox_t,144,42
   418                        	.member	pos,0,5,8,16
   419                        	.member	selected,16,16,8,16
   420                        	.member	offsetX,32,5,8,16
   421                        	.member	offsetY,48,5,8,16
   422                        	.member	isShifted,64,14,8,8
   423                        	.member	cursorState,72,14,8,8
   424                        	.member	fontSet,80,142,8,32
   425                        	.member	data,112,129,8,32
   426                        	.eos
   427                        	.stag	_fx_msgbox_t,144,43
   428                        	.member	pos,0,5,8,16
   429                        	.member	selected,16,16,8,16
   430                        	.member	offsetX,32,5,8,16
   431                        	.member	offsetY,48,5,8,16
   432                        	.member	isShifted,64,14,8,8
   433                        	.member	cursorState,72,14,8,8
   434                        	.member	fontSet,80,142,8,32
   435                        	.member	data,112,129,8,32
   436                        	.eos
   437                        	.stag	_fx_menuAnchor_t,272,44
   438                        	.member	pCaption,0,142,8,32
   439                        	.member	renderLayoutX,32,16,8,16
   440                        	.member	renderLayoutY,48,16,8,16
   441                        	.member	captionPixelWidth,64,16,8,16
   442                        	.member	data,80,129,8,32
   443                        	.member	droppedWindow,112,138,8,32,33
   444                        	.member	bytes,144,110,8,0,16
   445                        	.eos
   446                        	.stag	_SubMenuStruct,64,45
  Sat Jul 10 2021  1:15                                                Page 9


   447                        	.member	caption,0,142,8,32
   448                        	.member	action,32,641,8,32
   449                        	.eos
   450                        	.stag	_SubMenuListStruct,40,46
   451                        	.member	cMenus,0,14,8,8
   452                        	.member	psubmenus,8,9354,8,32,45
   453                        	.eos
   454                        	.stag	_fx_ComBuffer,2080,47
   455                        	.member	cbSize,0,16,8,16
   456                        	.member	cbBuffer,16,16,8,16
   457                        	.member	buffer,32,110,8,0,256
   458                        	.eos
   459                        	.stag	_fx_resource_header,72,48
   460                        	.member	magic,0,110,8,0,4
   461                        	.member	major,32,14,8,8
   462                        	.member	minor,40,14,8,8
   463                        	.member	type,48,14,8,8
   464                        	.member	reserved,56,14,8,8
   465                        	.member	resheaderSize,64,14,8,8
   466                        	.eos
   467                        	.stag	_fx_resource_header_font,144,49
   468                        	.member	title,0,110,8,0,16
   469                        	.member	height,128,14,8,8
   470                        	.member	width,136,14,8,8
   471                        	.eos
   472                        	.line	1010
   473                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos.h",8
   474                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxstringtable.h",0
   475                        	.line	89
   476                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos.h",9
   477                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxc256u.h",0
   478                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxtypes.h",0
   479                        	.line	1010
   480                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxc256u.h",5
   481                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fmx_vicky.h",0
   482                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxtypes.h",0
   483                        	.line	1010
   484                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fmx_vicky.h",11
   485                        	.line	72
   486                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxc256u.h",6
   487                        	.line	1960
   488                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos.h",16
   489                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxkernel.h",0
   490                        	.line	400
   491                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos.h",22
  Sat Jul 10 2021  1:15                                                Page 10


   492                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxconsole.h",0
   493                        	.file	"G:\devtools\WDCTools\wdc\Tools\include\
                    string.h",0
   494                        	.line	134
   495                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxconsole.h",5
   496                        	.file	"G:\devtools\WDCTools\wdc\Tools\include\
                    stdlib.h",0
   497                        	.line	205
   498                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxconsole.h",6
   499                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxtypes.h",0
   500                        	.line	1010
   501                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxconsole.h",7
   502                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxc256u.h",0
   503                        	.line	1960
   504                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxconsole.h",12
   505                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxstring.h",0
   506                        	.file	"G:\devtools\WDCTools\wdc\Tools\include\
                    stdlib.h",0
   507                        	.line	205
   508                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxstring.h",5
   509                        	.file	"G:\devtools\WDCTools\wdc\Tools\include\
                    string.h",0
   510                        	.line	134
   511                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxstring.h",6
   512                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxtypes.h",0
   513                        	.line	1010
   514                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxstring.h",7
   515                        	.stag	_fx_string,64,50
   516                        	.member	size,0,16,8,16
   517                        	.member	pos,16,5,8,16
   518                        	.member	buffer,32,142,8,32
   519                        	.eos
   520                        	.line	139
   521                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxconsole.h",17
   522                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxeventmanager.h",0
   523                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos.h",0
   524                        	.line	30
   525                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxeventmanager.h",5
   526                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxexec.h",0
   527                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxtypes.h",0
  Sat Jul 10 2021  1:15                                                Page 11


   528                        	.line	1010
   529                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxexec.h",5
   530                        	.stag	_fxos_executive_vtable,128,51
   531                        	.member	Init,0,8833,8,32
   532                        	.member	Configure,32,656,8,32
   533                        	.member	Query,64,656,8,32
   534                        	.member	Uninit,96,641,8,32
   535                        	.eos
   536                        	.line	86
   537                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxeventmanager.h",6
   538                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxnode.h",0
   539                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxtypes.h",0
   540                        	.line	1010
   541                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxnode.h",11
   542                        	.line	114
   543                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxeventmanager.h",7
   544                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxconsole.h",0
   545                        	.line	208
   546                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxeventmanager.h",8
   547                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxwindowmanager.h",0
   548                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos.h",0
   549                        	.line	30
   550                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxwindowmanager.h",5
   551                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxmemorymanager.h",0
   552                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos.h",0
   553                        	.line	30
   554                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxmemorymanager.h",5
   555                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\umm_malloc_cfg.h",0
   556                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos_build_parameters.h",0
   557                        	.line	35
   558                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\umm_malloc_cfg.h",8
   559                        	.stag	UMM_HEAP_INFO_t,256,52
   560                        	.member	totalEntries,0,18,8,32
   561                        	.member	usedEntries,32,18,8,32
   562                        	.member	freeEntries,64,18,8,32
   563                        	.member	totalBlocks,96,18,8,32
   564                        	.member	usedBlocks,128,18,8,32
   565                        	.member	freeBlocks,160,18,8,32
   566                        	.member	maxFreeContiguousBlocks,192,18,8,32
   567                        	.member	blockSize,224,18,8,32
   568                        	.eos
  Sat Jul 10 2021  1:15                                                Page 12


   569                        	.line	199
   570                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxmemorymanager.h",6
   571                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\umm_malloc.h",0
   572                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxtypes.h",0
   573                        	.line	1010
   574                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\umm_malloc.h",11
   575                        	.line	24
   576                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxmemorymanager.h",7
   577                        	.stag	_fx_memory_map,2072,53
   578                        	.member	availableMemory,0,18,8,32
   579                        	.member	valid_segments,32,110,8,0,255
   580                        	.eos
   581                        	.stag	_fx_ipc_port,144,54
   582                        	.member	id,0,18,8,32
   583                        	.member	type,32,14,8,8
   584                        	.member	name,40,138,8,32,50
   585                        	.member	time,72,18,8,32
   586                        	.member	queue,104,138,8,32,7
   587                        	.member	reserved_1,136,14,8,8
   588                        	.eos
   589                        	.line	105
   590                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxwindowmanager.h",6
   591                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxeventmanager.h",0
   592                        	.line	564
   593                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxwindowmanager.h",7
   594                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxgui.h",0
   595                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxfont.h",0
   596                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxtypes.h",0
   597                        	.line	1010
   598                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxfont.h",6
   599                        	.line	74
   600                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxgui.h",5
   601                        	.stag	_click_detected,64,55
   602                        	.member	window,0,138,8,32,33
   603                        	.member	handler,32,641,8,32
   604                        	.eos
   605                        	.stag	_current_palette_map,400,56
   606                        	.member	CUR_DESKTOP,0,5,8,16
   607                        	.member	CUR_BACKGROUND,16,5,8,16
   608                        	.member	CUR_FONT,32,5,8,16
   609                        	.member	CUR_SELECTED_FONT,48,5,8,16
   610                        	.member	CUR_HIGHLIGHT_COLOR,64,5,8,16
   611                        	.member	CUR_WINDOWFRAME,80,5,8,16
   612                        	.member	CUR_WINDOWBORDER,96,5,8,16
   613                        	.member	CUR_WINDOWSHADOW,112,5,8,16
  Sat Jul 10 2021  1:15                                                Page 13


   614                        	.member	CUR_MENU,128,5,8,16
   615                        	.member	CUR_GADGET,144,5,8,16
   616                        	.member	CUR_COLOR,160,101,8,0,15
   617                        	.eos
   618                        	.line	359
   619                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxwindowmanager.h",8
   620                        	.stag	_fxos_winman_vtable,160,57
   621                        	.member	Events,0,641,8,32
   622                        	.member	ConfigureWindowManager,32,656,8,32
   623                        	.member	ProcessWindowEvent,64,8833,8,32
   624                        	.member	QueryWindowManager,96,656,8,32
   625                        	.member	DoWndProcs,128,641,8,32
   626                        	.eos
   627                        	.stag	fake58_,64,58
   628                        	.member	type,0,16,8,16
   629                        	.member	size,16,16,8,16
   630                        	.member	desktopAction,32,129,8,32
   631                        	.eos
   632                        	.stag	fake59_,96,59
   633                        	.member	type,0,16,8,16
   634                        	.member	caption,16,138,8,32,50
   635                        	.member	buttonType,48,16,8,16
   636                        	.member	x,64,5,8,16
   637                        	.member	y,80,5,8,16
   638                        	.eos
   639                        	.stag	_childMessage_t,64,60
   640                        	.member	msgType,0,16,8,16
   641                        	.member	msgData,16,129,8,32
   642                        	.member	dataSize,48,16,8,16
   643                        	.eos
   644                        	.line	581
   645                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxeventmanager.h",9
   646                        	.stag	_fx_main_loopvars,16,61
   647                        	.member	dummy,0,5,8,16
   648                        	.eos
   649                        	.stag	_fxMouseMessageData,64,62
   650                        	.member	button1,0,14,8,8
   651                        	.member	button2,8,14,8,8
   652                        	.member	button3,16,14,8,8
   653                        	.member	button4,24,14,8,8
   654                        	.member	x,32,16,8,16
   655                        	.member	y,48,16,8,16
   656                        	.eos
   657                        	.utag	marshalled_data,32,63
   658                        	.member	byteValue,0,14,11,8
   659                        	.member	verbValue,0,110,11,0,2
   660                        	.member	intValue,0,16,11,16
   661                        	.member	longValue,0,18,11,32
   662                        	.member	pointerValue,0,129,11,32
   663                        	.eos
   664                        	.stag	_fx_eventProcess,64,64
   665                        	.member	process,0,138,8,32,20
   666                        	.member	eventProc,32,641,8,32
   667                        	.eos
   668                        	.stag	_mouse_msg_state,184,65
   669                        	.member	lastEvent,0,18,8,32
  Sat Jul 10 2021  1:15                                                Page 14


   670                        	.member	buttonLeftDown,32,14,8,8
   671                        	.member	lastLeftDown,40,18,8,32
   672                        	.member	buttonRightDown,72,14,8,8
   673                        	.member	lastRightDown,80,18,8,32
   674                        	.member	buttonMiddleDown,112,14,8,8
   675                        	.member	lastMiddleDown,120,18,8,32
   676                        	.member	lastX,152,16,8,16
   677                        	.member	lastY,168,16,8,16
   678                        	.eos
   679                        	.stag	_fxos_eventmanager_vtable,192,66
   680                        	.member	EventQueue,0,138,8,32,7
   681                        	.member	Init,32,8833,8,32
   682                        	.member	Run,64,656,8,32
   683                        	.member	Configure,96,656,8,32
   684                        	.member	Query,128,656,8,32
   685                        	.member	Uninit,160,641,8,32
   686                        	.eos
   687                        	.stag	_k_clipboard_data,168,67
   688                        	.member	type,0,14,8,8
   689                        	.member	readable,8,110,8,0,16
   690                        	.member	data,136,129,8,32
   691                        	.eos
   692                        	.line	564
   693                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxconsole.h",18
   694                        	.stag	_fx_spinner_ctx,48,68
   695                        	.member	index,0,5,8,16
   696                        	.member	spinner,16,142,8,32
   697                        	.eos
   698                        	.stag	_fx_console_ctx,1144,69
   699                        	.member	lineBufferIndex,0,5,8,16
   700                        	.member	lineBuffer,16,110,8,0,128
   701                        	.member	isShifted,1040,14,8,8
   702                        	.member	userData,1048,129,8,32
   703                        	.member	screenBuffer,1080,129,8,32
   704                        	.member	Reserved1,1112,129,8,32
   705                        	.eos
   706                        	.stag	_token,64,70
   707                        	.member	type,0,5,8,16
   708                        	.member	depth,16,16,8,16
   709                        	.member	text,32,142,8,32
   710                        	.eos
   711                        	.stag	_command_args,64,71
   712                        	.member	proc,0,656,8,32
   713                        	.member	tokens,32,138,8,32,5
   714                        	.eos
   715                        	.line	208
   716                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos.h",23
   717                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxstring.h",0
   718                        	.line	139
   719                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos.h",24
   720                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxnode.h",0
   721                        	.line	114
   722                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
  Sat Jul 10 2021  1:15                                                Page 15


                    space\FXOSv1\src\fxos.h",25
   723                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\ff.h",0
   724                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\ffconf.h",0
   725                        	.line	298
   726                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\ff.h",29
   727                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxtypes.h",0
   728                        	.line	1010
   729                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\ff.h",30
   730                        	.stag	fake72_,4504,72
   731                        	.member	fs_type,0,14,8,8
   732                        	.member	pdrv,8,14,8,8
   733                        	.member	n_fats,16,14,8,8
   734                        	.member	wflag,24,14,8,8
   735                        	.member	fsi_flag,32,14,8,8
   736                        	.member	id,40,5,8,16
   737                        	.member	n_rootdir,56,5,8,16
   738                        	.member	csize,72,5,8,16
   739                        	.member	lfnbuf,88,144,8,32
   740                        	.member	last_clst,120,18,8,32
   741                        	.member	free_clst,152,18,8,32
   742                        	.member	n_fatent,184,18,8,32
   743                        	.member	fsize,216,18,8,32
   744                        	.member	volbase,248,18,8,32
   745                        	.member	fatbase,280,18,8,32
   746                        	.member	dirbase,312,18,8,32
   747                        	.member	database,344,18,8,32
   748                        	.member	winsect,376,18,8,32
   749                        	.member	win,408,110,8,0,512
   750                        	.eos
   751                        	.stag	fake73_,128,73
   752                        	.member	fs,0,138,8,32,72
   753                        	.member	id,32,5,8,16
   754                        	.member	attr,48,14,8,8
   755                        	.member	stat,56,14,8,8
   756                        	.member	sclust,64,18,8,32
   757                        	.member	objsize,96,18,8,32
   758                        	.eos
   759                        	.stag	fake74_,4400,74
   760                        	.member	obj,0,10,8,128,73
   761                        	.member	flag,128,14,8,8
   762                        	.member	err,136,14,8,8
   763                        	.member	fptr,144,18,8,32
   764                        	.member	clust,176,18,8,32
   765                        	.member	sect,208,18,8,32
   766                        	.member	dir_sect,240,18,8,32
   767                        	.member	dir_ptr,272,142,8,32
   768                        	.member	buf,304,110,8,0,512
   769                        	.eos
   770                        	.stag	fake75_,416,75
   771                        	.member	obj,0,10,8,128,73
   772                        	.member	dptr,128,18,8,32
   773                        	.member	clust,160,18,8,32
   774                        	.member	sect,192,18,8,32
  Sat Jul 10 2021  1:15                                                Page 16


   775                        	.member	dir,224,142,8,32
   776                        	.member	fn,256,110,8,0,12
   777                        	.member	blk_ofs,352,18,8,32
   778                        	.member	pat,384,142,8,32
   779                        	.eos
   780                        	.stag	fake76_,2224,76
   781                        	.member	fsize,0,18,8,32
   782                        	.member	fdate,32,5,8,16
   783                        	.member	ftime,48,5,8,16
   784                        	.member	fattrib,64,14,8,8
   785                        	.member	altname,72,110,8,0,13
   786                        	.member	fname,176,110,8,0,256
   787                        	.eos
   788                        	.stag	fake77_,80,77
   789                        	.member	fmt,0,14,8,8
   790                        	.member	n_fat,8,14,8,8
   791                        	.member	align,16,16,8,16
   792                        	.member	n_root,32,16,8,16
   793                        	.member	au_size,48,18,8,32
   794                        	.eos
   795                        	.line	429
   796                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos.h",26
   797                        	.line	30
   798                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxkernel.h",5
   799                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxnode.h",0
   800                        	.line	114
   801                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxkernel.h",6
   802                        	.stag	_fx_api_call_table,8192,78
   803                        	.member	call_table,0,1121,8,32,256
   804                        	.eos
   805                        	.stag	_fx_zero_page,824,79
   806                        	.member	fxos_mouse_byte_0,0,14,8,8
   807                        	.member	fxos_mouse_byte_1,8,14,8,8
   808                        	.member	fxos_mouse_byte_2,16,14,8,8
   809                        	.member	fxos_mouse_byte_t,24,14,8,8
   810                        	.member	fxos_mouse_byte_x_l,32,14,8,8
   811                        	.member	fxos_mouse_byte_x_h,40,14,8,8
   812                        	.member	fxos_mouse_byte_y_l,48,14,8,8
   813                        	.member	fxos_mouse_byte_y_h,56,14,8,8
   814                        	.member	fxos_key_byte_0,64,14,8,8
   815                        	.member	fxos_key_byte_1,72,14,8,8
   816                        	.member	fxos_key_byte_2,80,14,8,8
   817                        	.member	fxos_mouse_ctl,88,14,8,8
   818                        	.member	fxos_mouse_index,96,14,8,8
   819                        	.member	fxos_mouse_status,104,14,8,8
   820                        	.member	fxos_mouse_dbg_1,112,18,8,32
   821                        	.member	fxos_mouse_dbg_2,144,18,8,32
   822                        	.member	fxos_mouse_dbg_3,176,18,8,32
   823                        	.member	fxos_vicky_byte_0,208,14,8,8
   824                        	.member	fxos_vicky_byte_1,216,14,8,8
   825                        	.member	fxos_vicky_byte_2,224,14,8,8
   826                        	.member	VersionMajor,232,16,8,16
   827                        	.member	VersionMinor,248,16,8,16
   828                        	.member	VersionRelease,264,16,8,16
  Sat Jul 10 2021  1:15                                                Page 17


   829                        	.member	topMemory,280,18,8,32
   830                        	.member	bottomMemory,312,18,8,32
   831                        	.member	availableMemory,344,18,8,32
   832                        	.member	availableMemoryK,376,18,8,32
   833                        	.member	availableHeapMemory,408,18,8,32
   834                        	.member	availableHeapMemoryK,440,18,8,32
   835                        	.member	fxos_console_row,472,16,8,16
   836                        	.member	fxos_console_col,488,16,8,16
   837                        	.member	executive,504,129,8,32
   838                        	.member	eventmanager,536,129,8,32
   839                        	.member	devicemanager,568,129,8,32
   840                        	.member	windowmanager,600,129,8,32
   841                        	.member	fxos_kernel_api,632,138,8,32,78
   842                        	.member	fxos_dos_api,664,138,8,32,78
   843                        	.member	fxos_gfx_api,696,138,8,32,78
   844                        	.member	fxos_gui_api,728,138,8,32,78
   845                        	.member	fxos_con_api,760,138,8,32,78
   846                        	.member	fxos_reserved_2_api,792,138,8,32,78
   847                        	.eos
   848                        	.stag	_fx_environment,96,80
   849                        	.member	variables,0,142,8,32
   850                        	.member	reserved1,32,5,8,16
   851                        	.member	reserved2,48,5,8,16
   852                        	.member	reserved3,64,5,8,16
   853                        	.member	reserved4,80,5,8,16
   854                        	.eos
   855                        	.stag	_debug_byte_bits,8,81
   856                        	.member	bit7,0,14,17,1
   857                        	.member	bit6,1,14,17,1
   858                        	.member	bit5,2,14,17,1
   859                        	.member	bit4,3,14,17,1
   860                        	.member	bit3,4,14,17,1
   861                        	.member	bit2,5,14,17,1
   862                        	.member	bit1,6,14,17,1
   863                        	.member	bit0,7,14,17,1
   864                        	.eos
   865                        	.stag	_k_segmentheader,160,82
   866                        	.member	version_major,0,14,8,8
   867                        	.member	version_minor,8,14,8,8
   868                        	.member	length,16,5,8,16
   869                        	.member	segment_start_addr,32,7,8,32
   870                        	.member	segment_end_addr,64,7,8,32
   871                        	.member	segment_size,96,7,8,32
   872                        	.member	main_entry_addr,128,7,8,32
   873                        	.eos
   874                        	.stag	_fx_device_driver,776,83
   875                        	.member	name,0,110,8,0,32
   876                        	.member	version,256,110,8,0,16
   877                        	.member	hmajor,384,110,8,0,8
   878                        	.member	hminor,448,110,8,0,8
   879                        	.member	type,512,14,8,8
   880                        	.member	designation,520,110,8,0,6
   881                        	.member	reserved_1,568,16,8,16
   882                        	.member	f_driver_irq,584,129,8,32
   883                        	.member	driver_context,616,129,8,32
   884                        	.member	f_driver_load,648,129,8,32
   885                        	.member	f_driver_read,680,129,8,32
   886                        	.member	f_driver_write,712,129,8,32
  Sat Jul 10 2021  1:15                                                Page 18


   887                        	.member	f_driver_unload,744,129,8,32
   888                        	.eos
   889                        	.stag	_fx_block_device_driver,808,84
   890                        	.member	name,0,110,8,0,32
   891                        	.member	version,256,110,8,0,16
   892                        	.member	hmajor,384,110,8,0,8
   893                        	.member	hminor,448,110,8,0,8
   894                        	.member	type,512,14,8,8
   895                        	.member	designation,520,110,8,0,6
   896                        	.member	reserved_1,568,16,8,16
   897                        	.member	f_driver_irq,584,129,8,32
   898                        	.member	driver_context,616,129,8,32
   899                        	.member	f_driver_load,648,129,8,32
   900                        	.member	f_driver_read,680,129,8,32
   901                        	.member	f_driver_write,712,129,8,32
   902                        	.member	f_driver_unload,744,129,8,32
   903                        	.member	f_driver_command,776,129,8,32
   904                        	.eos
   905                        	.line	400
   906                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxexec.c",2
   907                        ;#include "fxexec.h"
   908                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxexec.h",0
   909                        	.line	86
   910                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxexec.c",3
   911                        ;#include "fxdos.h"
   912                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxdos.h",0
   913                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxtypes.h",0
   914                        	.line	1010
   915                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxdos.h",5
   916                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\ff.h",0
   917                        	.line	429
   918                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxdos.h",6
   919                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\diskio.h",0
   920                        	.line	85
   921                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxdos.h",7
   922                        	.stag	_fx_sd_direntry,256,85
   923                        	.member	filename,0,110,8,0,11
   924                        	.member	type,88,14,8,8
   925                        	.member	attrs,96,110,8,0,20
   926                        	.eos
   927                        	.stag	_fx_info,416,86
   928                        	.member	stgName,0,110,8,0,32
   929                        	.member	Reserved1,256,14,8,8
   930                        	.member	stgType,264,16,8,16
   931                        	.member	Reserved2,280,14,8,8
   932                        	.member	stgReserved,288,110,8,0,16
   933                        	.eos
   934                        	.stag	_fx_fileinfo,136,87
  Sat Jul 10 2021  1:15                                                Page 19


   935                        	.member	type,0,14,8,8
   936                        	.member	pFilename,8,142,8,32
   937                        	.member	lSize,40,18,8,32
   938                        	.member	lcreateDate,72,18,8,32
   939                        	.member	lchangeDate,104,18,8,32
   940                        	.eos
   941                        	.stag	_FX_FAT_DIR_INFO,256,88
   942                        	.member	DIR_Name,0,110,8,0,11
   943                        	.member	DIR_Attr,88,14,8,8
   944                        	.member	DIR_NTRes,96,14,8,8
   945                        	.member	DIR_CrtTimeTenth,104,14,8,8
   946                        	.member	DIR_CrtTime,112,16,8,16
   947                        	.member	DIR_CrtDate,128,16,8,16
   948                        	.member	DIR_LstAccDate,144,16,8,16
   949                        	.member	DIR_FstClusHI,160,16,8,16
   950                        	.member	DIR_WrtTime,176,16,8,16
   951                        	.member	DIR_WrtDate,192,16,8,16
   952                        	.member	DIR_FstClusLO,208,16,8,16
   953                        	.member	DIR_FileSize,224,18,8,32
   954                        	.eos
   955                        	.stag	fat_extBS_32,416,89
   956                        	.member	table_size_32,0,18,8,32
   957                        	.member	extended_flags,32,16,8,16
   958                        	.member	fat_version,48,16,8,16
   959                        	.member	root_cluster,64,18,8,32
   960                        	.member	fat_info,96,16,8,16
   961                        	.member	backup_BS_sector,112,16,8,16
   962                        	.member	reserved_0,128,110,8,0,12
   963                        	.member	drive_number,224,14,8,8
   964                        	.member	reserved_1,232,14,8,8
   965                        	.member	boot_signature,240,14,8,8
   966                        	.member	volume_id,248,16,8,16
   967                        	.member	volume_label,264,110,8,0,11
   968                        	.member	fat_type_label,352,110,8,0,8
   969                        	.eos
   970                        	.stag	fat_extBS_16,192,90
   971                        	.member	bios_drive_num,0,14,8,8
   972                        	.member	reserved1,8,14,8,8
   973                        	.member	boot_signature,16,14,8,8
   974                        	.member	volume_id,24,16,8,16
   975                        	.member	volume_label,40,110,8,0,11
   976                        	.member	fat_type_label,128,110,8,0,8
   977                        	.eos
   978                        	.stag	fat_BS,688,91
   979                        	.member	bootjmp,0,110,8,0,3
   980                        	.member	oem_name,24,110,8,0,8
   981                        	.member	bytes_per_sector,88,16,8,16
   982                        	.member	sectors_per_cluster,104,14,8,8
   983                        	.member	reserved_sector_count,112,16,8,16
   984                        	.member	table_count,128,14,8,8
   985                        	.member	root_entry_count,136,16,8,16
   986                        	.member	total_sectors_16,152,16,8,16
   987                        	.member	media_type,168,14,8,8
   988                        	.member	table_size_16,176,16,8,16
   989                        	.member	sectors_per_track,192,16,8,16
   990                        	.member	head_side_count,208,16,8,16
   991                        	.member	hidden_sector_count,224,16,8,16
   992                        	.member	total_sectors_32,240,16,8,16
  Sat Jul 10 2021  1:15                                                Page 20


   993                        	.member	extended_section,256,110,8,0,54
   994                        	.eos
   995                        	.stag	__FATBootSector,928,92
   996                        	.member	bootjmp,0,110,8,0,3
   997                        	.member	oem_name,24,110,8,0,8
   998                        	.member	bytes_per_sector,88,16,8,16
   999                        	.member	sectors_per_cluster,104,14,8,8
  1000                        	.member	reserved_sector_count,112,16,8,16
  1001                        	.member	fat_table_count,128,14,8,8
  1002                        	.member	root_entry_count,136,16,8,16
  1003                        	.member	total_sectors_16,152,16,8,16
  1004                        	.member	media_type,168,14,8,8
  1005                        	.member	sectors_per_fat,176,16,8,16
  1006                        	.member	sectors_per_track,192,16,8,16
  1007                        	.member	head_side_count,208,16,8,16
  1008                        	.member	hidden_sector_count,224,18,8,32
  1009                        	.member	total_sectors_32,256,18,8,32
  1010                        	.member	drive_number,288,14,8,8
  1011                        	.member	reserved1,296,14,8,8
  1012                        	.member	boot_sig,304,14,8,8
  1013                        	.member	vol_id,312,18,8,32
  1014                        	.member	vol_name,344,110,8,0,11
  1015                        	.member	file_system_type,432,110,8,0,8
  1016                        	.member	extended_section,496,110,8,0,54
  1017                        	.eos
  1018                        	.stag	__PARTITIONTABLE,128,93
  1019                        	.member	first_byte,0,14,8,8
  1020                        	.member	start_chs,8,110,8,0,3
  1021                        	.member	partition_type,32,14,8,8
  1022                        	.member	end_chs,40,110,8,0,3
  1023                        	.member	start_sector,64,18,8,32
  1024                        	.member	length_sectors,96,18,8,32
  1025                        	.eos
  1026                        	.stag	fake94_,4096,94
  1027                        	.member	jmp,0,110,8,0,3
  1028                        	.member	oem,24,110,8,0,8
  1029                        	.member	sector_size,88,15,8,16
  1030                        	.member	sectors_per_cluster,104,14,8,8
  1031                        	.member	reserved_sectors,112,15,8,16
  1032                        	.member	number_ok_dos_fats,128,14,8,8
  1033                        	.member	root_dir_entries,136,15,8,16
  1034                        	.member	total_sectors_short,152,15,8,16
  1035                        	.member	media_descriptor,168,14,8,8
  1036                        	.member	fat_size_sectors,176,15,8,16
  1037                        	.member	sectors_per_track,192,15,8,16
  1038                        	.member	number_ok_dos_heads,208,15,8,16
  1039                        	.member	hidden_sectors,224,18,8,32
  1040                        	.member	total_sectors_long,256,18,8,32
  1041                        	.member	drive_number,288,14,8,8
  1042                        	.member	current_head,296,14,8,8
  1043                        	.member	boot_signature,304,14,8,8
  1044                        	.member	volume_id,312,18,8,32
  1045                        	.member	volume_label,344,110,8,0,11
  1046                        	.member	fs_type,432,110,8,0,8
  1047                        	.member	boot_code,496,110,8,0,448
  1048                        	.member	boot_sector_signature,4080,15,8,16
  1049                        	.eos
  1050                        	.stag	__FAT16ENTRY,256,95
  Sat Jul 10 2021  1:15                                                Page 21


  1051                        	.member	filename,0,110,8,0,8
  1052                        	.member	ext,64,110,8,0,3
  1053                        	.member	attributes,88,14,8,8
  1054                        	.member	reserved,96,110,8,0,10
  1055                        	.member	modify_time,176,16,8,16
  1056                        	.member	modify_date,192,16,8,16
  1057                        	.member	starting_cluster,208,16,8,16
  1058                        	.member	file_size,224,18,8,32
  1059                        	.eos
  1060                        	.stag	__FAT16ENTRYLONG,288,96
  1061                        	.member	filename,0,110,8,0,8
  1062                        	.member	ext,64,110,8,0,3
  1063                        	.member	attributes,88,14,8,8
  1064                        	.member	reserved,96,110,8,0,10
  1065                        	.member	modify_time,176,16,8,16
  1066                        	.member	modify_date,192,16,8,16
  1067                        	.member	starting_cluster,208,16,8,16
  1068                        	.member	file_size,224,18,8,32
  1069                        	.member	plongfileName,256,142,8,32
  1070                        	.eos
  1071                        	.stag	_LongFileName,256,97
  1072                        	.member	sequenceNo,0,14,8,8
  1073                        	.member	fileName_Part1,8,110,8,0,10
  1074                        	.member	fileattribute,88,14,8,8
  1075                        	.member	type,96,14,8,8
  1076                        	.member	checksum,104,14,8,8
  1077                        	.member	fileName_Part2,112,110,8,0,12
  1078                        	.member	fstclusLO,208,5,8,16
  1079                        	.member	fileName_Part3,224,110,8,0,4
  1080                        	.eos
  1081                        	.stag	_IDSECTOR,2048,98
  1082                        	.member	wGenConfig,0,16,8,16
  1083                        	.member	wNumCyls,16,16,8,16
  1084                        	.member	wReserved,32,16,8,16
  1085                        	.member	wNumHeads,48,16,8,16
  1086                        	.member	wBytesPerTrack,64,16,8,16
  1087                        	.member	wBytesPerSector,80,16,8,16
  1088                        	.member	wSectorsPerTrack,96,16,8,16
  1089                        	.member	wVendorUnique,112,112,8,0,3
  1090                        	.member	sSerialNumber,160,110,8,0,20
  1091                        	.member	wBufferType,320,16,8,16
  1092                        	.member	wBufferSize,336,16,8,16
  1093                        	.member	wECCSize,352,16,8,16
  1094                        	.member	sFirmwareRev,368,110,8,0,8
  1095                        	.member	sModelNumber,432,110,8,0,40
  1096                        	.member	wMoreVendorUnique,752,16,8,16
  1097                        	.member	wDoubleWordIO,768,16,8,16
  1098                        	.member	wCapabilities,784,16,8,16
  1099                        	.member	wReserved1,800,16,8,16
  1100                        	.member	wPIOTiming,816,16,8,16
  1101                        	.member	wDMATiming,832,16,8,16
  1102                        	.member	wBS,848,16,8,16
  1103                        	.member	wNumCurrentCyls,864,16,8,16
  1104                        	.member	wNumCurrentHeads,880,16,8,16
  1105                        	.member	wNumCurrentSectorsPerTrack,896,16,8,16
  1106                        	.member	ulCurrentSectorCapacity,912,18,8,32
  1107                        	.member	wMultSectorStuff,944,16,8,16
  1108                        	.member	ulTotalAddressableSectors,960,18,8,32
  Sat Jul 10 2021  1:15                                                Page 22


  1109                        	.member	wSingleWordDMA,992,16,8,16
  1110                        	.member	wMultiWordDMA,1008,16,8,16
  1111                        	.member	bReserved,1024,110,8,0,128
  1112                        	.eos
  1113                        	.stag	fake99_,16,99
  1114                        	.member	Reserved1,0,16,17,1
  1115                        	.member	Retired3,1,16,17,1
  1116                        	.member	ResponseIncomplete,2,16,17,1
  1117                        	.member	Retired2,3,16,17,3
  1118                        	.member	FixedDevice,6,16,17,1
  1119                        	.member	RemovableMedia,7,16,17,1
  1120                        	.member	Retired1,8,16,17,7
  1121                        	.member	DeviceType,15,16,17,1
  1122                        	.eos
  1123                        	.stag	fake100_,16,100
  1124                        	.member	FeatureSupported,0,16,17,1
  1125                        	.member	Reserved,1,16,17,15
  1126                        	.eos
  1127                        	.stag	fake101_,32,101
  1128                        	.member	CurrentLongPhysicalSectorAlignment,0,14,
                    17,2
  1129                        	.member	ReservedByte49,2,14,17,6
  1130                        	.member	DmaSupported,8,14,17,1
  1131                        	.member	LbaSupported,9,14,17,1
  1132                        	.member	IordyDisable,10,14,17,1
  1133                        	.member	IordySupported,11,14,17,1
  1134                        	.member	Reserved1,12,14,17,1
  1135                        	.member	StandybyTimerSupport,13,14,17,1
  1136                        	.member	Reserved2,14,14,17,2
  1137                        	.member	ReservedWord50,16,16,8,16
  1138                        	.eos
  1139                        	.stag	fake102_,16,102
  1140                        	.member	ZonedCapabilities,0,16,17,2
  1141                        	.member	NonVolatileWriteCache,2,16,17,1
  1142                        	.member	ExtendedUserAddressableSectorsSupported,
                    3,16,17,1
  1143                        	.member	DeviceEncryptsAllUserData,4,16,17,1
  1144                        	.member	ReadZeroAfterTrimSupported,5,16,17,1
  1145                        	.member	Optional28BitCommandsSupported,6,16,17,1
  1146                        	.member	IEEE1667,7,16,17,1
  1147                        	.member	DownloadMicrocodeDmaSupported,8,16,17,1
  1148                        	.member	SetMaxSetPasswordUnlockDmaSupported,9,16
                    ,17,1
  1149                        	.member	WriteBufferDmaSupported,10,16,17,1
  1150                        	.member	ReadBufferDmaSupported,11,16,17,1
  1151                        	.member	DeviceConfigIdentifySetDmaSupported,12,1
                    6,17,1
  1152                        	.member	LPSAERCSupported,13,16,17,1
  1153                        	.member	DeterministicReadAfterTrimSupported,14,1
                    6,17,1
  1154                        	.member	CFastSpecSupported,15,16,17,1
  1155                        	.eos
  1156                        	.stag	fake103_,32,103
  1157                        	.member	Reserved0,0,16,17,1
  1158                        	.member	SataGen1,1,16,17,1
  1159                        	.member	SataGen2,2,16,17,1
  1160                        	.member	SataGen3,3,16,17,1
  1161                        	.member	Reserved1,4,16,17,4
  Sat Jul 10 2021  1:15                                                Page 23


  1162                        	.member	NCQ,8,16,17,1
  1163                        	.member	HIPM,9,16,17,1
  1164                        	.member	PhyEvents,10,16,17,1
  1165                        	.member	NcqUnload,11,16,17,1
  1166                        	.member	NcqPriority,12,16,17,1
  1167                        	.member	HostAutoPS,13,16,17,1
  1168                        	.member	DeviceAutoPS,14,16,17,1
  1169                        	.member	ReadLogDMA,15,16,17,1
  1170                        	.member	Reserved2,16,16,17,1
  1171                        	.member	CurrentSpeed,17,16,17,3
  1172                        	.member	NcqStreaming,20,16,17,1
  1173                        	.member	NcqQueueMgmt,21,16,17,1
  1174                        	.member	NcqReceiveSend,22,16,17,1
  1175                        	.member	DEVSLPtoReducedPwrState,23,16,17,1
  1176                        	.member	Reserved3,24,16,17,8
  1177                        	.eos
  1178                        	.stag	fake104_,16,104
  1179                        	.member	Reserved0,0,16,17,1
  1180                        	.member	NonZeroOffsets,1,16,17,1
  1181                        	.member	DmaSetupAutoActivate,2,16,17,1
  1182                        	.member	DIPM,3,16,17,1
  1183                        	.member	InOrderData,4,16,17,1
  1184                        	.member	HardwareFeatureControl,5,16,17,1
  1185                        	.member	SoftwareSettingsPreservation,6,16,17,1
  1186                        	.member	NCQAutosense,7,16,17,1
  1187                        	.member	DEVSLP,8,16,17,1
  1188                        	.member	HybridInformation,9,16,17,1
  1189                        	.member	Reserved1,10,16,17,6
  1190                        	.eos
  1191                        	.stag	fake105_,16,105
  1192                        	.member	Reserved0,0,16,17,1
  1193                        	.member	NonZeroOffsets,1,16,17,1
  1194                        	.member	DmaSetupAutoActivate,2,16,17,1
  1195                        	.member	DIPM,3,16,17,1
  1196                        	.member	InOrderData,4,16,17,1
  1197                        	.member	HardwareFeatureControl,5,16,17,1
  1198                        	.member	SoftwareSettingsPreservation,6,16,17,1
  1199                        	.member	DeviceAutoPS,7,16,17,1
  1200                        	.member	DEVSLP,8,16,17,1
  1201                        	.member	HybridInformation,9,16,17,1
  1202                        	.member	Reserved1,10,16,17,6
  1203                        	.eos
  1204                        	.stag	fake106_,48,106
  1205                        	.member	SmartCommands,0,16,17,1
  1206                        	.member	SecurityMode,1,16,17,1
  1207                        	.member	RemovableMediaFeature,2,16,17,1
  1208                        	.member	PowerManagement,3,16,17,1
  1209                        	.member	Reserved1,4,16,17,1
  1210                        	.member	WriteCache,5,16,17,1
  1211                        	.member	LookAhead,6,16,17,1
  1212                        	.member	ReleaseInterrupt,7,16,17,1
  1213                        	.member	ServiceInterrupt,8,16,17,1
  1214                        	.member	DeviceReset,9,16,17,1
  1215                        	.member	HostProtectedArea,10,16,17,1
  1216                        	.member	Obsolete1,11,16,17,1
  1217                        	.member	WriteBuffer,12,16,17,1
  1218                        	.member	ReadBuffer,13,16,17,1
  1219                        	.member	Nop,14,16,17,1
  Sat Jul 10 2021  1:15                                                Page 24


  1220                        	.member	Obsolete2,15,16,17,1
  1221                        	.member	DownloadMicrocode,16,16,17,1
  1222                        	.member	DmaQueued,17,16,17,1
  1223                        	.member	Cfa,18,16,17,1
  1224                        	.member	AdvancedPm,19,16,17,1
  1225                        	.member	Msn,20,16,17,1
  1226                        	.member	PowerUpInStandby,21,16,17,1
  1227                        	.member	ManualPowerUp,22,16,17,1
  1228                        	.member	Reserved2,23,16,17,1
  1229                        	.member	SetMax,24,16,17,1
  1230                        	.member	Acoustics,25,16,17,1
  1231                        	.member	BigLba,26,16,17,1
  1232                        	.member	DeviceConfigOverlay,27,16,17,1
  1233                        	.member	FlushCache,28,16,17,1
  1234                        	.member	FlushCacheExt,29,16,17,1
  1235                        	.member	WordValid83,30,16,17,2
  1236                        	.member	SmartErrorLog,32,16,17,1
  1237                        	.member	SmartSelfTest,33,16,17,1
  1238                        	.member	MediaSerialNumber,34,16,17,1
  1239                        	.member	MediaCardPassThrough,35,16,17,1
  1240                        	.member	StreamingFeature,36,16,17,1
  1241                        	.member	GpLogging,37,16,17,1
  1242                        	.member	WriteFua,38,16,17,1
  1243                        	.member	WriteQueuedFua,39,16,17,1
  1244                        	.member	WWN64Bit,40,16,17,1
  1245                        	.member	URGReadStream,41,16,17,1
  1246                        	.member	URGWriteStream,42,16,17,1
  1247                        	.member	ReservedForTechReport,43,16,17,2
  1248                        	.member	IdleWithUnloadFeature,45,16,17,1
  1249                        	.member	WordValid,46,16,17,2
  1250                        	.eos
  1251                        	.stag	fake107_,48,107
  1252                        	.member	SmartCommands,0,16,17,1
  1253                        	.member	SecurityMode,1,16,17,1
  1254                        	.member	RemovableMediaFeature,2,16,17,1
  1255                        	.member	PowerManagement,3,16,17,1
  1256                        	.member	Reserved1,4,16,17,1
  1257                        	.member	WriteCache,5,16,17,1
  1258                        	.member	LookAhead,6,16,17,1
  1259                        	.member	ReleaseInterrupt,7,16,17,1
  1260                        	.member	ServiceInterrupt,8,16,17,1
  1261                        	.member	DeviceReset,9,16,17,1
  1262                        	.member	HostProtectedArea,10,16,17,1
  1263                        	.member	Obsolete1,11,16,17,1
  1264                        	.member	WriteBuffer,12,16,17,1
  1265                        	.member	ReadBuffer,13,16,17,1
  1266                        	.member	Nop,14,16,17,1
  1267                        	.member	Obsolete2,15,16,17,1
  1268                        	.member	DownloadMicrocode,16,16,17,1
  1269                        	.member	DmaQueued,17,16,17,1
  1270                        	.member	Cfa,18,16,17,1
  1271                        	.member	AdvancedPm,19,16,17,1
  1272                        	.member	Msn,20,16,17,1
  1273                        	.member	PowerUpInStandby,21,16,17,1
  1274                        	.member	ManualPowerUp,22,16,17,1
  1275                        	.member	Reserved2,23,16,17,1
  1276                        	.member	SetMax,24,16,17,1
  1277                        	.member	Acoustics,25,16,17,1
  Sat Jul 10 2021  1:15                                                Page 25


  1278                        	.member	BigLba,26,16,17,1
  1279                        	.member	DeviceConfigOverlay,27,16,17,1
  1280                        	.member	FlushCache,28,16,17,1
  1281                        	.member	FlushCacheExt,29,16,17,1
  1282                        	.member	Resrved3,30,16,17,1
  1283                        	.member	Words119_120Valid,31,16,17,1
  1284                        	.member	SmartErrorLog,32,16,17,1
  1285                        	.member	SmartSelfTest,33,16,17,1
  1286                        	.member	MediaSerialNumber,34,16,17,1
  1287                        	.member	MediaCardPassThrough,35,16,17,1
  1288                        	.member	StreamingFeature,36,16,17,1
  1289                        	.member	GpLogging,37,16,17,1
  1290                        	.member	WriteFua,38,16,17,1
  1291                        	.member	WriteQueuedFua,39,16,17,1
  1292                        	.member	WWN64Bit,40,16,17,1
  1293                        	.member	URGReadStream,41,16,17,1
  1294                        	.member	URGWriteStream,42,16,17,1
  1295                        	.member	ReservedForTechReport,43,16,17,2
  1296                        	.member	IdleWithUnloadFeature,45,16,17,1
  1297                        	.member	Reserved4,46,16,17,2
  1298                        	.eos
  1299                        	.stag	fake108_,16,108
  1300                        	.member	TimeRequired,0,16,17,15
  1301                        	.member	ExtendedTimeReported,15,16,17,1
  1302                        	.eos
  1303                        	.stag	fake109_,16,109
  1304                        	.member	TimeRequired,0,16,17,15
  1305                        	.member	ExtendedTimeReported,15,16,17,1
  1306                        	.eos
  1307                        	.stag	fake110_,16,110
  1308                        	.member	LogicalSectorsPerPhysicalSector,0,16,17,
                    4
  1309                        	.member	Reserved0,4,16,17,8
  1310                        	.member	LogicalSectorLongerThan256Words,12,16,17
                    ,1
  1311                        	.member	MultipleLogicalSectorsPerPhysicalSector,
                    13,16,17,1
  1312                        	.member	Reserved1,14,16,17,2
  1313                        	.eos
  1314                        	.stag	fake111_,16,111
  1315                        	.member	ReservedForDrqTechnicalReport,0,16,17,1
  1316                        	.member	WriteReadVerify,1,16,17,1
  1317                        	.member	WriteUncorrectableExt,2,16,17,1
  1318                        	.member	ReadWriteLogDmaExt,3,16,17,1
  1319                        	.member	DownloadMicrocodeMode3,4,16,17,1
  1320                        	.member	FreefallControl,5,16,17,1
  1321                        	.member	SenseDataReporting,6,16,17,1
  1322                        	.member	ExtendedPowerConditions,7,16,17,1
  1323                        	.member	Reserved0,8,16,17,6
  1324                        	.member	WordValid,14,16,17,2
  1325                        	.eos
  1326                        	.stag	fake112_,16,112
  1327                        	.member	ReservedForDrqTechnicalReport,0,16,17,1
  1328                        	.member	WriteReadVerify,1,16,17,1
  1329                        	.member	WriteUncorrectableExt,2,16,17,1
  1330                        	.member	ReadWriteLogDmaExt,3,16,17,1
  1331                        	.member	DownloadMicrocodeMode3,4,16,17,1
  1332                        	.member	FreefallControl,5,16,17,1
  Sat Jul 10 2021  1:15                                                Page 26


  1333                        	.member	SenseDataReporting,6,16,17,1
  1334                        	.member	ExtendedPowerConditions,7,16,17,1
  1335                        	.member	Reserved0,8,16,17,6
  1336                        	.member	Reserved1,14,16,17,2
  1337                        	.eos
  1338                        	.stag	fake113_,16,113
  1339                        	.member	SecuritySupported,0,16,17,1
  1340                        	.member	SecurityEnabled,1,16,17,1
  1341                        	.member	SecurityLocked,2,16,17,1
  1342                        	.member	SecurityFrozen,3,16,17,1
  1343                        	.member	SecurityCountExpired,4,16,17,1
  1344                        	.member	EnhancedSecurityEraseSupported,5,16,17,1
  1345                        	.member	Reserved0,6,16,17,2
  1346                        	.member	SecurityLevel,8,16,17,1
  1347                        	.member	Reserved1,9,16,17,7
  1348                        	.eos
  1349                        	.stag	fake114_,16,114
  1350                        	.member	MaximumCurrentInMA,0,16,17,12
  1351                        	.member	CfaPowerMode1Disabled,12,16,17,1
  1352                        	.member	CfaPowerMode1Required,13,16,17,1
  1353                        	.member	Reserved0,14,16,17,1
  1354                        	.member	Word160Supported,15,16,17,1
  1355                        	.eos
  1356                        	.stag	fake115_,16,115
  1357                        	.member	SupportsTrim,0,16,17,1
  1358                        	.member	Reserved0,1,16,17,15
  1359                        	.eos
  1360                        	.stag	fake116_,16,116
  1361                        	.member	Supported,0,16,17,1
  1362                        	.member	Reserved0,1,16,17,1
  1363                        	.member	WriteSameSuported,2,16,17,1
  1364                        	.member	ErrorRecoveryControlSupported,3,16,17,1
  1365                        	.member	FeatureControlSuported,4,16,17,1
  1366                        	.member	DataTablesSuported,5,16,17,1
  1367                        	.member	Reserved1,6,16,17,6
  1368                        	.member	VendorSpecific,12,16,17,4
  1369                        	.eos
  1370                        	.stag	fake117_,16,117
  1371                        	.member	AlignmentOfLogicalWithinPhysical,0,16,17
                    ,14
  1372                        	.member	Word209Supported,14,16,17,1
  1373                        	.member	Reserved0,15,16,17,1
  1374                        	.eos
  1375                        	.stag	fake118_,16,118
  1376                        	.member	NVCachePowerModeEnabled,0,16,17,1
  1377                        	.member	Reserved0,1,16,17,3
  1378                        	.member	NVCacheFeatureSetEnabled,4,16,17,1
  1379                        	.member	Reserved1,5,16,17,3
  1380                        	.member	NVCachePowerModeVersion,8,16,17,4
  1381                        	.member	NVCacheFeatureSetVersion,12,16,17,4
  1382                        	.eos
  1383                        	.stag	fake119_,16,119
  1384                        	.member	NVCacheEstimatedTimeToSpinUpInSeconds,0,
                    14,8,8
  1385                        	.member	Reserved,8,14,8,8
  1386                        	.eos
  1387                        	.stag	fake120_,16,120
  1388                        	.member	MajorVersion,0,16,17,12
  Sat Jul 10 2021  1:15                                                Page 27


  1389                        	.member	TransportType,12,16,17,4
  1390                        	.eos
  1391                        	.stag	_IDENTIFY_DEVICE_DATA,4096,121
  1392                        	.member	GeneralConfiguration,0,10,8,16,99
  1393                        	.member	NumCylinders,16,16,8,16
  1394                        	.member	SpecificConfiguration,32,16,8,16
  1395                        	.member	NumHeads,48,16,8,16
  1396                        	.member	Retired1Bytes,64,110,8,0,4
  1397                        	.member	NumSectorsPerTrack,96,16,8,16
  1398                        	.member	VendorUnique1Bytes,112,110,8,0,6
  1399                        	.member	SerialNumber,160,110,8,0,20
  1400                        	.member	Retired2,320,112,8,0,2
  1401                        	.member	Obsolete1,352,16,8,16
  1402                        	.member	FirmwareRevision,368,110,8,0,8
  1403                        	.member	ModelNumber,432,110,8,0,40
  1404                        	.member	MaximumBlockTransfer,752,14,8,8
  1405                        	.member	VendorUnique2,760,14,8,8
  1406                        	.member	TrustedComputing,768,10,8,16,100
  1407                        	.member	Capabilities,784,10,8,32,101
  1408                        	.member	ObsoleteWords51,816,112,8,0,2
  1409                        	.member	TranslationFieldsValid,848,16,17,3
  1410                        	.member	Reserved3,851,16,17,5
  1411                        	.member	FreeFallControlSensitivity,856,16,17,8
  1412                        	.member	NumberOfCurrentCylinders,864,16,8,16
  1413                        	.member	NumberOfCurrentHeads,880,16,8,16
  1414                        	.member	CurrentSectorsPerTrack,896,16,8,16
  1415                        	.member	CurrentSectorCapacity,912,18,8,32
  1416                        	.member	CurrentMultiSectorSetting,944,14,8,8
  1417                        	.member	MultiSectorSettingValid,952,14,17,1
  1418                        	.member	ReservedByte59,953,14,17,3
  1419                        	.member	SanitizeFeatureSupported,956,14,17,1
  1420                        	.member	CryptoScrambleExtCommandSupported,957,14
                    ,17,1
  1421                        	.member	OverwriteExtCommandSupported,958,14,17,1
  1422                        	.member	BlockEraseExtCommandSupported,959,14,17,
                    1
  1423                        	.member	UserAddressableSectors,960,18,8,32
  1424                        	.member	ObsoleteWord62,992,16,8,16
  1425                        	.member	MultiWordDMASupport,1008,16,17,8
  1426                        	.member	MultiWordDMAActive,1016,16,17,8
  1427                        	.member	AdvancedPIOModes,1024,16,17,8
  1428                        	.member	ReservedByte64,1032,16,17,8
  1429                        	.member	MinimumMWXferCycleTime,1040,16,8,16
  1430                        	.member	RecommendedMWXferCycleTime,1056,16,8,16
  1431                        	.member	MinimumPIOCycleTime,1072,16,8,16
  1432                        	.member	MinimumPIOCycleTimeIORDY,1088,16,8,16
  1433                        	.member	AdditionalSupported,1104,10,8,16,102
  1434                        	.member	ReservedWords70,1120,112,8,0,5
  1435                        	.member	QueueDepth,1200,16,17,5
  1436                        	.member	ReservedWord75,1205,16,17,11
  1437                        	.member	SerialAtaCapabilities,1216,10,8,32,103
  1438                        	.member	SerialAtaFeaturesSupported,1248,10,8,16,
                    104
  1439                        	.member	SerialAtaFeaturesEnabled,1264,10,8,16,10
                    5
  1440                        	.member	MajorRevision,1280,16,8,16
  1441                        	.member	MinorRevision,1296,16,8,16
  1442                        	.member	CommandSetSupport,1312,10,8,48,106
  Sat Jul 10 2021  1:15                                                Page 28


  1443                        	.member	CommandSetActive,1360,10,8,48,107
  1444                        	.member	UltraDMASupport,1408,16,17,8
  1445                        	.member	UltraDMAActive,1416,16,17,8
  1446                        	.member	NormalSecurityEraseUnit,1424,10,8,16,108
  1447                        	.member	EnhancedSecurityEraseUnit,1440,10,8,16,1
                    09
  1448                        	.member	CurrentAPMLevel,1456,16,17,8
  1449                        	.member	ReservedWord91,1464,16,17,8
  1450                        	.member	MasterPasswordID,1472,16,8,16
  1451                        	.member	HardwareResetResult,1488,16,8,16
  1452                        	.member	CurrentAcousticValue,1504,16,17,8
  1453                        	.member	RecommendedAcousticValue,1512,16,17,8
  1454                        	.member	StreamMinRequestSize,1520,16,8,16
  1455                        	.member	StreamingTransferTimeDMA,1536,16,8,16
  1456                        	.member	StreamingAccessLatencyDMAPIO,1552,16,8,1
                    6
  1457                        	.member	StreamingPerfGranularity,1568,18,8,32
  1458                        	.member	Max48BitLBA,1600,114,8,0,2
  1459                        	.member	StreamingTransferTime,1664,16,8,16
  1460                        	.member	DsmCap,1680,16,8,16
  1461                        	.member	PhysicalLogicalSectorSize,1696,10,8,16,1
                    10
  1462                        	.member	InterSeekDelay,1712,16,8,16
  1463                        	.member	WorldWideName,1728,112,8,0,4
  1464                        	.member	ReservedForWorldWideName128,1792,112,8,0
                    ,4
  1465                        	.member	ReservedForTlcTechnicalReport,1856,16,8,
                    16
  1466                        	.member	WordsPerLogicalSector,1872,112,8,0,2
  1467                        	.member	CommandSetSupportExt,1904,10,8,16,111
  1468                        	.member	CommandSetActiveExt,1920,10,8,16,112
  1469                        	.member	ReservedForExpandedSupportandActive,1936
                    ,112,8,0,6
  1470                        	.member	MsnSupport,2032,16,17,2
  1471                        	.member	ReservedWord127,2034,16,17,14
  1472                        	.member	SecurityStatus,2048,10,8,16,113
  1473                        	.member	ReservedWord129,2064,112,8,0,31
  1474                        	.member	CfaPowerMode1,2560,10,8,16,114
  1475                        	.member	ReservedForCfaWord161,2576,112,8,0,7
  1476                        	.member	NominalFormFactor,2688,16,17,4
  1477                        	.member	ReservedWord168,2692,16,17,12
  1478                        	.member	DataSetManagementFeature,2704,10,8,16,11
                    5
  1479                        	.member	AdditionalProductID,2720,112,8,0,4
  1480                        	.member	ReservedForCfaWord174,2784,112,8,0,2
  1481                        	.member	CurrentMediaSerialNumber,2816,112,8,0,30
  1482                        	.member	SCTCommandTransport,3296,10,8,16,116
  1483                        	.member	ReservedWord207,3312,112,8,0,2
  1484                        	.member	BlockAlignment,3344,10,8,16,117
  1485                        	.member	WriteReadVerifySectorCountMode3Only,3360
                    ,112,8,0,2
  1486                        	.member	WriteReadVerifySectorCountMode2Only,3392
                    ,112,8,0,2
  1487                        	.member	NVCacheCapabilities,3424,10,8,16,118
  1488                        	.member	NVCacheSizeLSW,3440,16,8,16
  1489                        	.member	NVCacheSizeMSW,3456,16,8,16
  1490                        	.member	NominalMediaRotationRate,3472,16,8,16
  1491                        	.member	ReservedWord218,3488,16,8,16
  Sat Jul 10 2021  1:15                                                Page 29


  1492                        	.member	NVCacheOptions,3504,10,8,16,119
  1493                        	.member	WriteReadVerifySectorCountMode,3520,16,1
                    7,8
  1494                        	.member	ReservedWord220,3528,16,17,8
  1495                        	.member	ReservedWord221,3536,16,8,16
  1496                        	.member	TransportMajorVersion,3552,10,8,16,120
  1497                        	.member	TransportMinorVersion,3568,16,8,16
  1498                        	.member	ReservedWord224,3584,112,8,0,6
  1499                        	.member	ExtendedNumberOfUserAddressableSectors,3
                    680,114,8,0,2
  1500                        	.member	MinBlocksPerDownloadMicrocodeMode03,3744
                    ,16,8,16
  1501                        	.member	MaxBlocksPerDownloadMicrocodeMode03,3760
                    ,16,8,16
  1502                        	.member	ReservedWord236,3776,112,8,0,19
  1503                        	.member	Signature,4080,16,17,8
  1504                        	.member	CheckSum,4088,16,17,8
  1505                        	.eos
  1506                        	.stag	_FXDosDevice,5744,122
  1507                        	.member	type,0,14,8,8
  1508                        	.member	initialized,8,14,8,8
  1509                        	.member	devdata,16,129,8,32
  1510                        	.member	devstatus,48,14,8,8
  1511                        	.member	bootSector,56,10,8,928,92
  1512                        	.member	partitionTable,984,10,8,128,93
  1513                        	.member	fileAllocationTable,1112,110,8,0,512
  1514                        	.member	bsOffset,5208,18,8,32
  1515                        	.member	rootDirSectors,5240,18,8,32
  1516                        	.member	root_entry_count,5272,5,8,16
  1517                        	.member	rootEntriesPerPage,5288,5,8,16
  1518                        	.member	sectors_per_cluster,5304,5,8,16
  1519                        	.member	firstDataSector,5320,18,8,32
  1520                        	.member	fatTableOffset,5352,18,8,32
  1521                        	.member	volume_name,5384,110,8,0,12
  1522                        	.member	root_volume_name,5480,110,8,0,12
  1523                        	.member	errorCode,5576,14,8,8
  1524                        	.member	pfInit,5584,641,8,32
  1525                        	.member	pfReset,5616,641,8,32
  1526                        	.member	pfUninit,5648,641,8,32
  1527                        	.member	pfReader,5680,654,8,32
  1528                        	.member	pfWriter,5712,654,8,32
  1529                        	.eos
  1530                        	.utag	item,32,123
  1531                        	.member	dir,0,138,11,32,75
  1532                        	.member	file,0,138,11,32,74
  1533                        	.member	fileInfo,0,138,11,32,76
  1534                        	.eos
  1535                        	.stag	_dos_handle,80,124
  1536                        	.member	fs,0,138,8,32,72
  1537                        	.member	fr,32,5,8,16
  1538                        	.member	path,48,142,8,32
  1539                        	.eos
  1540                        	.line	800
  1541                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxexec.c",4
  1542                        ;#include "fxmemorymanager.h"
  1543                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxmemorymanager.h",0
  Sat Jul 10 2021  1:15                                                Page 30


  1544                        	.line	105
  1545                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxexec.c",5
  1546                        ;#include "fxos_desktop_proc.h"
  1547                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos_desktop_proc.h",0
  1548                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxtypes.h",0
  1549                        	.line	1010
  1550                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos_desktop_proc.h",5
  1551                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxc256u.h",0
  1552                        	.line	1960
  1553                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos_desktop_proc.h",10
  1554                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxstring.h",0
  1555                        	.line	139
  1556                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos_desktop_proc.h",15
  1557                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxeventmanager.h",0
  1558                        	.line	564
  1559                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos_desktop_proc.h",16
  1560                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxgui.h",0
  1561                        	.line	359
  1562                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos_desktop_proc.h",17
  1563                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxwindowmanager.h",0
  1564                        	.line	581
  1565                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos_desktop_proc.h",18
  1566                        	.stag	fake125_,32,125
  1567                        	.member	contents,0,138,8,32,50
  1568                        	.eos
  1569                        	.line	92
  1570                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxexec.c",6
  1571                        ;#include "fxos_accessories.h"
  1572                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos_accessories.h",0
  1573                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos.h",0
  1574                        	.line	30
  1575                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos_accessories.h",11
  1576                        	.line	18
  1577                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxexec.c",7
  1578                        ;
  1579                        ;EXECUTIVE _k_executive;
  1580                        ;
  1581                        ;SEGMENTHEADER loadModuleHeader;
  1582                        ;
  Sat Jul 10 2021  1:15                                                Page 31


  1583                        ;//
  1584                        ;// SEH Variables
  1585                        ;//
  1586                        ;ULONG _k_exec_context 	= 0L;
  1587                        	data
  1588                        	xdef	~~_k_exec_context
  1589                        ~~_k_exec_context:
  1590 00:0000: 00 00 00 00  	dl	$0
  1591 00:0004:              	ends
  1592                        ;ULONG _k_exec_error		= 0L;
  1593                        	data
  1594                        	xdef	~~_k_exec_error
  1595                        ~~_k_exec_error:
  1596 00:0004: 00 00 00 00  	dl	$0
  1597 00:0008:              	ends
  1598                        ;UCHAR _k_exec_message[64];
  1599                        ;//
  1600                        ;//
  1601                        ;//
  1602                        ;static PFXPROCESS _k_processList[MAX_PROCESS];
  1603                        ;static PFXPROCESS _k_current_Process = NULL;
  1604                        	data
  1605                        ~~_k_current_Process:
  1606 00:0008: 00 00 00 00  	dl	$0
  1607 00:000C:              	ends
  1608                        ;//
  1609                        ;//
  1610                        ;static PFXPROCESS  _exec_Process 		
                    		= NULL;
  1611                        	data
  1612                        ~~_exec_Process:
  1613 00:000C: 00 00 00 00  	dl	$0
  1614 00:0010:              	ends
  1615                        ;static PFXNODELIST _k_execManager_ProcesssList 	
                    = NULL;
  1616                        	data
  1617                        ~~_k_execManager_ProcesssList:
  1618 00:0010: 00 00 00 00  	dl	$0
  1619 00:0014:              	ends
  1620                        ;//
  1621                        ;// SEH MODULE ID
  1622                        ;//
  1623                        ;static ULONG THIS_MODULE = 0x00000000;
  1624                        	data
  1625                        ~~THIS_MODULE:
  1626 00:0014: 00 00 00 00  	dl	$0
  1627 00:0018:              	ends
  1628                        ;//
  1629                        ;//
  1630                        ;//
  1631                        ;
  1632                        ;static LPVOID Init(VOID)
  1633                        ;{
  1634                        	.line	36
  1635                        	.line	37
  1636                        	code
  1637                        	func
  1638                        	.function	37
  Sat Jul 10 2021  1:15                                                Page 32


  1639                        ~~Init:
  1640                        	longa	on
  1641                        	longi	on
  1642 00:0000: 3B           	tsc
  1643 00:0001: 38           	sec
  1644 00:0002: E9 00 00     	sbc	#L2
  1645 00:0005: 1B           	tcs
  1646 00:0006: 0B           	phd
  1647 00:0007: 5B           	tcd
  1648                        	.block	37
  1649                        ;	k_debug_string("EXECUTIVE::Init()\r\n");
  1650                        	.line	38
  1651 00:0008: F4 xx xx     	pea	#^L1
  1652 00:000B: F4 xx xx     	pea	#<L1
  1653 00:000E: 22 xx xx xx  	jsl	~~k_debug_string
  1654                        ;	return NULL;
  1655                        	.line	39
  1656 00:0012: A9 00 00     	lda	#$0
  1657 00:0015: AA           	tax
  1658 00:0016: A9 00 00     	lda	#$0
  1659                        L5:
  1660 00:0019: A8           	tay
  1661 00:001A: 2B           	pld
  1662 00:001B: 3B           	tsc
  1663 00:001C: 18           	clc
  1664 00:001D: 69 00 00     	adc	#L2
  1665 00:0020: 1B           	tcs
  1666 00:0021: 98           	tya
  1667 00:0022: 6B           	rtl
  1668                        ;}
  1669                        	.line	40
  1670                        	.endblock	40
  1671             00000000   L2	equ	0
  1672             00000001   L3	equ	1
  1673                        	ends
  1674                        	efunc
  1675                        	.endfunc	40,1,0
  1676                        	.line	40
  1677                        	data
  1678                        L1:
  1679 00:0018: 45 58 45 43  	db	$45,$58,$45,$43,$55,$54,$49,$56,$45,$3A,
                    $3A,$49,$6E,$69,$74
       00:001C: 55 54 49 56 
       00:0020: 45 3A 3A 49 
       00:0024: 6E 69 74 
  1680 00:0027: 28 29 0D 0A  	db	$28,$29,$0D,$0A,$00
       00:002B: 00 
  1681 00:002C:              	ends
  1682                        ;
  1683                        ;static VOID Uninit(VOID)
  1684                        ;{
  1685                        	.line	42
  1686                        	.line	43
  1687                        	code
  1688                        	func
  1689                        	.function	43
  1690                        ~~Uninit:
  1691                        	longa	on
  Sat Jul 10 2021  1:15                                                Page 33


  1692                        	longi	on
  1693 00:0023: 3B           	tsc
  1694 00:0024: 38           	sec
  1695 00:0025: E9 00 00     	sbc	#L7
  1696 00:0028: 1B           	tcs
  1697 00:0029: 0B           	phd
  1698 00:002A: 5B           	tcd
  1699                        	.block	43
  1700                        ;	return;
  1701                        	.line	44
  1702                        L10:
  1703 00:002B: 2B           	pld
  1704 00:002C: 3B           	tsc
  1705 00:002D: 18           	clc
  1706 00:002E: 69 00 00     	adc	#L7
  1707 00:0031: 1B           	tcs
  1708 00:0032: 6B           	rtl
  1709                        ;}
  1710                        	.line	45
  1711                        	.endblock	45
  1712             00000000   L7	equ	0
  1713             00000001   L8	equ	1
  1714                        	ends
  1715                        	efunc
  1716                        	.endfunc	45,1,0
  1717                        	.line	45
  1718                        ;
  1719                        ;static UINT Configure(UINT index,LPVOID ctx)
  1720                        ;{
  1721                        	.line	47
  1722                        	.line	48
  1723                        	code
  1724                        	func
  1725                        	.function	48
  1726                        ~~Configure:
  1727                        	longa	on
  1728                        	longi	on
  1729 00:0033: 3B           	tsc
  1730 00:0034: 38           	sec
  1731 00:0035: E9 00 00     	sbc	#L11
  1732 00:0038: 1B           	tcs
  1733 00:0039: 0B           	phd
  1734 00:003A: 5B           	tcd
  1735             00000004   index_0	set	4
  1736             00000006   ctx_0	set	6
  1737                        	.block	48
  1738                        ;	return 0;
  1739                        	.sym	index,4,16,6,16
  1740                        	.sym	ctx,6,129,6,32
  1741                        	.line	49
  1742 00:003B: A9 00 00     	lda	#$0
  1743                        L14:
  1744 00:003E: A8           	tay
  1745 00:003F: A5 02        	lda	<L11+2
  1746 00:0041: 85 08        	sta	<L11+2+6
  1747 00:0043: A5 01        	lda	<L11+1
  1748 00:0045: 85 07        	sta	<L11+1+6
  1749 00:0047: 2B           	pld
  Sat Jul 10 2021  1:15                                                Page 34


  1750 00:0048: 3B           	tsc
  1751 00:0049: 18           	clc
  1752 00:004A: 69 06 00     	adc	#L11+6
  1753 00:004D: 1B           	tcs
  1754 00:004E: 98           	tya
  1755 00:004F: 6B           	rtl
  1756                        ;}
  1757                        	.line	50
  1758                        	.endblock	50
  1759             00000000   L11	equ	0
  1760             00000001   L12	equ	1
  1761                        	ends
  1762                        	efunc
  1763                        	.endfunc	50,1,0
  1764                        	.line	50
  1765                        ;
  1766                        ;static UINT Query(UINT index)
  1767                        ;{
  1768                        	.line	52
  1769                        	.line	53
  1770                        	code
  1771                        	func
  1772                        	.function	53
  1773                        ~~Query:
  1774                        	longa	on
  1775                        	longi	on
  1776 00:0050: 3B           	tsc
  1777 00:0051: 38           	sec
  1778 00:0052: E9 00 00     	sbc	#L15
  1779 00:0055: 1B           	tcs
  1780 00:0056: 0B           	phd
  1781 00:0057: 5B           	tcd
  1782             00000004   index_0	set	4
  1783                        	.block	53
  1784                        ;	return 0;
  1785                        	.sym	index,4,16,6,16
  1786                        	.line	54
  1787 00:0058: A9 00 00     	lda	#$0
  1788                        L18:
  1789 00:005B: A8           	tay
  1790 00:005C: A5 02        	lda	<L15+2
  1791 00:005E: 85 04        	sta	<L15+2+2
  1792 00:0060: A5 01        	lda	<L15+1
  1793 00:0062: 85 03        	sta	<L15+1+2
  1794 00:0064: 2B           	pld
  1795 00:0065: 3B           	tsc
  1796 00:0066: 18           	clc
  1797 00:0067: 69 02 00     	adc	#L15+2
  1798 00:006A: 1B           	tcs
  1799 00:006B: 98           	tya
  1800 00:006C: 6B           	rtl
  1801                        ;}
  1802                        	.line	55
  1803                        	.endblock	55
  1804             00000000   L15	equ	0
  1805             00000001   L16	equ	1
  1806                        	ends
  1807                        	efunc
  Sat Jul 10 2021  1:15                                                Page 35


  1808                        	.endfunc	55,1,0
  1809                        	.line	55
  1810                        ;
  1811                        ;PEXECUTIVE k_initalize_executive(void)
  1812                        ;{
  1813                        	.line	57
  1814                        	.line	58
  1815                        	code
  1816                        	xdef	~~k_initalize_executive
  1817                        	func
  1818                        	.function	58
  1819                        ~~k_initalize_executive:
  1820                        	longa	on
  1821                        	longi	on
  1822 00:006D: 3B           	tsc
  1823 00:006E: 38           	sec
  1824 00:006F: E9 0A 00     	sbc	#L19
  1825 00:0072: 1B           	tcs
  1826 00:0073: 0B           	phd
  1827 00:0074: 5B           	tcd
  1828                        	.block	58
  1829                        ;	int index = 0;
  1830                        ;
  1831                        ;	_k_execManager_ProcesssList = k_nodelist_allocat
                    e_list("_process_task_list" ,k_deallocate_process_task);
  1832             00000000   index_1	set	0
  1833                        	.sym	index,0,5,1,16
  1834 00:0075: 64 09        	stz	<L20+index_1
  1835                        	.line	61
  1836 00:0077: F4 xx xx     	pea	#^~~k_deallocate_process_task
  1837 00:007A: F4 xx xx     	pea	#<~~k_deallocate_process_task
  1838 00:007D: F4 xx xx     	pea	#^L6
  1839 00:0080: F4 xx xx     	pea	#<L6
  1840 00:0083: 22 xx xx xx  	jsl	~~k_nodelist_allocate_list
  1841 00:0087: 8D xx xx     	sta	|~~_k_execManager_ProcesssList
  1842 00:008A: 8E xx xx     	stx	|~~_k_execManager_ProcesssList+2
  1843                        ;
  1844                        ;	for(index=0;index<MAX_PROCESS;index++)
  1845                        	.line	63
  1846 00:008D: 64 09        	stz	<L20+index_1
  1847                        L10003:
  1848                        ;	{
  1849                        	.line	64
  1850                        ;		_k_processList[index] = NULL;
  1851                        	.line	65
  1852 00:008F: A5 09        	lda	<L20+index_1
  1853 00:0091: 0A           	asl	A
  1854 00:0092: 0A           	asl	A
  1855 00:0093: 85 01        	sta	<R0
  1856 00:0095: 18           	clc
  1857 00:0096: A9 xx xx     	lda	#<~~_k_processList
  1858 00:0099: 65 01        	adc	<R0
  1859 00:009B: 85 05        	sta	<R1
  1860 00:009D: A9 00 00     	lda	#$0
  1861 00:00A0: 92 05        	sta	(<R1)
  1862 00:00A2: A9 00 00     	lda	#$0
  1863 00:00A5: A0 02 00     	ldy	#$2
  1864 00:00A8: 91 05        	sta	(<R1),Y
  Sat Jul 10 2021  1:15                                                Page 36


  1865                        ;	}
  1866                        	.line	66
  1867                        L10001:
  1868 00:00AA: E6 09        	inc	<L20+index_1
  1869 00:00AC: 38           	sec
  1870 00:00AD: A5 09        	lda	<L20+index_1
  1871 00:00AF: E9 20 00     	sbc	#<$20
  1872 00:00B2: 70 03        	bvs	L22
  1873 00:00B4: 49 00 80     	eor	#$8000
  1874                        L22:
  1875 00:00B7: 30 03        	bmi	L23
  1876 00:00B9: 82 D3 FF     	brl	L10003
  1877                        L23:
  1878                        L10002:
  1879                        ;
  1880                        ;	_exec_Process = k_mem_allocate_heap(sizeof(FXPRO
                    CESS));
  1881                        	.line	68
  1882 00:00BC: F4 64 00     	pea	#<$64
  1883 00:00BF: 22 xx xx xx  	jsl	~~k_mem_allocate_heap
  1884 00:00C3: 8D xx xx     	sta	|~~_exec_Process
  1885 00:00C6: 8E xx xx     	stx	|~~_exec_Process+2
  1886                        ;	if(_exec_Process)
  1887                        	.line	69
  1888                        ;	{
  1889 00:00C9: AD xx xx     	lda	|~~_exec_Process
  1890 00:00CC: 0D xx xx     	ora	|~~_exec_Process+2
  1891 00:00CF: D0 03        	bne	L24
  1892 00:00D1: 82 A8 00     	brl	L10004
  1893                        L24:
  1894                        	.line	70
  1895                        ;		memset(_exec_Process,0,sizeof(FXPROCESS)
                    );
  1896                        	.line	71
  1897 00:00D4: F4 64 00     	pea	#<$64
  1898 00:00D7: F4 00 00     	pea	#<$0
  1899 00:00DA: AD xx xx     	lda	|~~_exec_Process+2
  1900 00:00DD: 48           	pha
  1901 00:00DE: AD xx xx     	lda	|~~_exec_Process
  1902 00:00E1: 48           	pha
  1903 00:00E2: 22 xx xx xx  	jsl	~~memset
  1904                        ;
  1905                        ;		_exec_Process->cbSize      = sizeof(FXPR
                    OCESS);
  1906                        	.line	73
  1907 00:00E6: AD xx xx     	lda	|~~_exec_Process
  1908 00:00E9: 85 01        	sta	<R0
  1909 00:00EB: AD xx xx     	lda	|~~_exec_Process+2
  1910 00:00EE: 85 03        	sta	<R0+2
  1911 00:00F0: A9 64 00     	lda	#$64
  1912 00:00F3: 87 01        	sta	[<R0]
  1913                        ;		_exec_Process->procId      = 0xFFFF0000;
  1914                        	.line	74
  1915 00:00F5: AD xx xx     	lda	|~~_exec_Process
  1916 00:00F8: 85 01        	sta	<R0
  1917 00:00FA: AD xx xx     	lda	|~~_exec_Process+2
  1918 00:00FD: 85 03        	sta	<R0+2
  1919 00:00FF: A9 00 00     	lda	#$0
  Sat Jul 10 2021  1:15                                                Page 37


  1920 00:0102: A0 02 00     	ldy	#$2
  1921 00:0105: 97 01        	sta	[<R0],Y
  1922 00:0107: A9 FF FF     	lda	#$ffff
  1923 00:010A: A0 04 00     	ldy	#$4
  1924 00:010D: 97 01        	sta	[<R0],Y
  1925                        ;		_exec_Process->parentId    = 0x00000000;
  1926                        	.line	75
  1927 00:010F: AD xx xx     	lda	|~~_exec_Process
  1928 00:0112: 85 01        	sta	<R0
  1929 00:0114: AD xx xx     	lda	|~~_exec_Process+2
  1930 00:0117: 85 03        	sta	<R0+2
  1931 00:0119: A9 00 00     	lda	#$0
  1932 00:011C: A0 06 00     	ldy	#$6
  1933 00:011F: 97 01        	sta	[<R0],Y
  1934 00:0121: A9 00 00     	lda	#$0
  1935 00:0124: A0 08 00     	ldy	#$8
  1936 00:0127: 97 01        	sta	[<R0],Y
  1937                        ;		_exec_Process->commandLine = k_string_co
                    py_string("@/executive");
  1938                        	.line	76
  1939 00:0129: AD xx xx     	lda	|~~_exec_Process
  1940 00:012C: 85 01        	sta	<R0
  1941 00:012E: AD xx xx     	lda	|~~_exec_Process+2
  1942 00:0131: 85 03        	sta	<R0+2
  1943 00:0133: F4 xx xx     	pea	#^L6+19
  1944 00:0136: F4 xx xx     	pea	#<L6+19
  1945 00:0139: 22 xx xx xx  	jsl	~~k_string_copy_string
  1946 00:013D: 85 05        	sta	<R1
  1947 00:013F: 86 07        	stx	<R1+2
  1948 00:0141: A5 05        	lda	<R1
  1949 00:0143: A0 33 00     	ldy	#$33
  1950 00:0146: 97 01        	sta	[<R0],Y
  1951 00:0148: A5 07        	lda	<R1+2
  1952 00:014A: A0 35 00     	ldy	#$35
  1953 00:014D: 97 01        	sta	[<R0],Y
  1954                        ;
  1955                        ;		k_nodelist_naddtolist(_k_execManager_Pro
                    cesssList,NL_TYPE_PROCESS,(ULONG)_exec_Process->procId,_exec
                    _Process);
  1956                        	.line	78
  1957 00:014F: AD xx xx     	lda	|~~_exec_Process+2
  1958 00:0152: 48           	pha
  1959 00:0153: AD xx xx     	lda	|~~_exec_Process
  1960 00:0156: 48           	pha
  1961 00:0157: AD xx xx     	lda	|~~_exec_Process
  1962 00:015A: 85 01        	sta	<R0
  1963 00:015C: AD xx xx     	lda	|~~_exec_Process+2
  1964 00:015F: 85 03        	sta	<R0+2
  1965 00:0161: A0 04 00     	ldy	#$4
  1966 00:0164: B7 01        	lda	[<R0],Y
  1967 00:0166: 48           	pha
  1968 00:0167: A0 02 00     	ldy	#$2
  1969 00:016A: B7 01        	lda	[<R0],Y
  1970 00:016C: 48           	pha
  1971 00:016D: F4 FE 00     	pea	#<$fe
  1972 00:0170: AD xx xx     	lda	|~~_k_execManager_ProcesssList+2
  1973 00:0173: 48           	pha
  1974 00:0174: AD xx xx     	lda	|~~_k_execManager_ProcesssList
  Sat Jul 10 2021  1:15                                                Page 38


  1975 00:0177: 48           	pha
  1976 00:0178: 22 xx xx xx  	jsl	~~k_nodelist_naddtolist
  1977                        ;	}
  1978                        	.line	79
  1979                        ;
  1980                        ;	_k_executive.Init 		= Init;
  1981                        L10004:
  1982                        	.line	81
  1983 00:017C: A9 xx xx     	lda	#<~~Init
  1984 00:017F: 8D xx xx     	sta	|~~_k_executive
  1985 00:0182: A9 xx xx     	lda	#^~~Init
  1986 00:0185: 8D xx xx     	sta	|~~_k_executive+2
  1987                        ;	_k_executive.Uninit 	= Uninit;
  1988                        	.line	82
  1989 00:0188: A9 xx xx     	lda	#<~~Uninit
  1990 00:018B: 8D xx xx     	sta	|~~_k_executive+12
  1991 00:018E: A9 xx xx     	lda	#^~~Uninit
  1992 00:0191: 8D xx xx     	sta	|~~_k_executive+12+2
  1993                        ;	_k_executive.Configure 	= Configure;
  1994                        	.line	83
  1995 00:0194: A9 xx xx     	lda	#<~~Configure
  1996 00:0197: 8D xx xx     	sta	|~~_k_executive+4
  1997 00:019A: A9 xx xx     	lda	#^~~Configure
  1998 00:019D: 8D xx xx     	sta	|~~_k_executive+4+2
  1999                        ;	_k_executive.Query 		= Query;
  2000                        	.line	84
  2001 00:01A0: A9 xx xx     	lda	#<~~Query
  2002 00:01A3: 8D xx xx     	sta	|~~_k_executive+8
  2003 00:01A6: A9 xx xx     	lda	#^~~Query
  2004 00:01A9: 8D xx xx     	sta	|~~_k_executive+8+2
  2005                        ;
  2006                        ;	return &_k_executive;
  2007                        	.line	86
  2008 00:01AC: A9 xx xx     	lda	#<~~_k_executive
  2009 00:01AF: 85 01        	sta	<R0
  2010                        	xref	_BEG_DATA
  2011 00:01B1: A9 xx xx     	lda	#_BEG_DATA>>16
  2012 00:01B4: 85 03        	sta	<R0+2
  2013 00:01B6: A6 03        	ldx	<R0+2
  2014 00:01B8: A5 01        	lda	<R0
  2015                        L25:
  2016 00:01BA: A8           	tay
  2017 00:01BB: 2B           	pld
  2018 00:01BC: 3B           	tsc
  2019 00:01BD: 18           	clc
  2020 00:01BE: 69 0A 00     	adc	#L19
  2021 00:01C1: 1B           	tcs
  2022 00:01C2: 98           	tya
  2023 00:01C3: 6B           	rtl
  2024                        ;}
  2025                        	.line	87
  2026                        	.endblock	87
  2027             0000000A   L19	equ	10
  2028             00000009   L20	equ	9
  2029                        	ends
  2030                        	efunc
  2031                        	.endfunc	87,9,10
  2032                        	.line	87
  Sat Jul 10 2021  1:15                                                Page 39


  2033                        	data
  2034                        L6:
  2035 00:002C: 5F 70 72 6F  	db	$5F,$70,$72,$6F,$63,$65,$73,$73,$5F,$74,
                    $61,$73,$6B,$5F,$6C
       00:0030: 63 65 73 73 
       00:0034: 5F 74 61 73 
       00:0038: 6B 5F 6C 
  2036 00:003B: 69 73 74 00  	db	$69,$73,$74,$00,$40,$2F,$65,$78,$65,$63,
                    $75,$74,$69,$76,$65
       00:003F: 40 2F 65 78 
       00:0043: 65 63 75 74 
       00:0047: 69 76 65 
  2037 00:004A: 00           	db	$00
  2038 00:004B:              	ends
  2039                        ;
  2040                        ;void k_deallocate_process_task(LPCSTR name,LPVOID
                     pdata)
  2041                        ;{
  2042                        	.line	89
  2043                        	.line	90
  2044                        	code
  2045                        	xdef	~~k_deallocate_process_task
  2046                        	func
  2047                        	.function	90
  2048                        ~~k_deallocate_process_task:
  2049                        	longa	on
  2050                        	longi	on
  2051 00:01C4: 3B           	tsc
  2052 00:01C5: 38           	sec
  2053 00:01C6: E9 00 00     	sbc	#L27
  2054 00:01C9: 1B           	tcs
  2055 00:01CA: 0B           	phd
  2056 00:01CB: 5B           	tcd
  2057             00000004   name_0	set	4
  2058             00000008   pdata_0	set	8
  2059                        	.block	90
  2060                        ;
  2061                        ;}
  2062                        	.sym	name,4,142,6,32
  2063                        	.sym	pdata,8,129,6,32
  2064                        	.line	92
  2065                        L30:
  2066 00:01CC: A5 02        	lda	<L27+2
  2067 00:01CE: 85 0A        	sta	<L27+2+8
  2068 00:01D0: A5 01        	lda	<L27+1
  2069 00:01D2: 85 09        	sta	<L27+1+8
  2070 00:01D4: 2B           	pld
  2071 00:01D5: 3B           	tsc
  2072 00:01D6: 18           	clc
  2073 00:01D7: 69 08 00     	adc	#L27+8
  2074 00:01DA: 1B           	tcs
  2075 00:01DB: 6B           	rtl
  2076                        	.endblock	92
  2077             00000000   L27	equ	0
  2078             00000001   L28	equ	1
  2079                        	ends
  2080                        	efunc
  2081                        	.endfunc	92,1,0
  Sat Jul 10 2021  1:15                                                Page 40


  2082                        	.line	92
  2083                        ;
  2084                        ;void debug_process_node(LPVOID ctx,LPVOID data)
  2085                        ;{
  2086                        	.line	94
  2087                        	.line	95
  2088                        	code
  2089                        	xdef	~~debug_process_node
  2090                        	func
  2091                        	.function	95
  2092                        ~~debug_process_node:
  2093                        	longa	on
  2094                        	longi	on
  2095 00:01DC: 3B           	tsc
  2096 00:01DD: 38           	sec
  2097 00:01DE: E9 08 00     	sbc	#L31
  2098 00:01E1: 1B           	tcs
  2099 00:01E2: 0B           	phd
  2100 00:01E3: 5B           	tcd
  2101             00000004   ctx_0	set	4
  2102             00000008   data_0	set	8
  2103                        	.block	95
  2104                        ;	PFXPROCESS pproc = (PFXPROCESS)data;
  2105                        ;	if(pproc)
  2106             00000000   pproc_1	set	0
  2107                        	.sym	pproc,0,138,1,32,20
  2108                        	.sym	ctx,4,129,6,32
  2109                        	.sym	data,8,129,6,32
  2110 00:01E4: A5 10        	lda	<L31+data_0
  2111 00:01E6: 85 05        	sta	<L32+pproc_1
  2112 00:01E8: A5 12        	lda	<L31+data_0+2
  2113 00:01EA: 85 07        	sta	<L32+pproc_1+2
  2114                        	.line	97
  2115                        ;	{
  2116 00:01EC: A5 05        	lda	<L32+pproc_1
  2117 00:01EE: 05 07        	ora	<L32+pproc_1+2
  2118 00:01F0: D0 03        	bne	L34
  2119 00:01F2: 82 7D 00     	brl	L10005
  2120                        L34:
  2121                        	.line	98
  2122                        ;		k_debug_strings("      PROCESS  CMDLN:",
                    (LPCHAR)pproc->commandLine);
  2123                        	.line	99
  2124 00:01F5: A0 35 00     	ldy	#$35
  2125 00:01F8: B7 05        	lda	[<L32+pproc_1],Y
  2126 00:01FA: 48           	pha
  2127 00:01FB: A0 33 00     	ldy	#$33
  2128 00:01FE: B7 05        	lda	[<L32+pproc_1],Y
  2129 00:0200: 48           	pha
  2130 00:0201: F4 xx xx     	pea	#^L26
  2131 00:0204: F4 xx xx     	pea	#<L26
  2132 00:0207: 22 xx xx xx  	jsl	~~k_debug_strings
  2133                        ;		k_debug_long   ("      PROCESS    PID:",
                    pproc->procId);
  2134                        	.line	100
  2135 00:020B: A0 04 00     	ldy	#$4
  2136 00:020E: B7 05        	lda	[<L32+pproc_1],Y
  2137 00:0210: 48           	pha
  Sat Jul 10 2021  1:15                                                Page 41


  2138 00:0211: A0 02 00     	ldy	#$2
  2139 00:0214: B7 05        	lda	[<L32+pproc_1],Y
  2140 00:0216: 48           	pha
  2141 00:0217: F4 xx xx     	pea	#^L26+22
  2142 00:021A: F4 xx xx     	pea	#<L26+22
  2143 00:021D: 22 xx xx xx  	jsl	~~k_debug_long
  2144                        ;		k_debug_long   ("      PROCESS   PPID:",
                    pproc->parentId);
  2145                        	.line	101
  2146 00:0221: A0 08 00     	ldy	#$8
  2147 00:0224: B7 05        	lda	[<L32+pproc_1],Y
  2148 00:0226: 48           	pha
  2149 00:0227: A0 06 00     	ldy	#$6
  2150 00:022A: B7 05        	lda	[<L32+pproc_1],Y
  2151 00:022C: 48           	pha
  2152 00:022D: F4 xx xx     	pea	#^L26+44
  2153 00:0230: F4 xx xx     	pea	#<L26+44
  2154 00:0233: 22 xx xx xx  	jsl	~~k_debug_long
  2155                        ;		k_debug_long   ("      PROCESS STATUS:",
                    pproc->status);
  2156                        	.line	102
  2157 00:0237: A0 10 00     	ldy	#$10
  2158 00:023A: B7 05        	lda	[<L32+pproc_1],Y
  2159 00:023C: 85 01        	sta	<R0
  2160 00:023E: 64 03        	stz	<R0+2
  2161 00:0240: D4 03        	pei	<R0+2
  2162 00:0242: D4 01        	pei	<R0
  2163 00:0244: F4 xx xx     	pea	#^L26+66
  2164 00:0247: F4 xx xx     	pea	#<L26+66
  2165 00:024A: 22 xx xx xx  	jsl	~~k_debug_long
  2166                        ;		k_debug_pointer("      PROCESS    PTR:",
                    pproc);
  2167                        	.line	103
  2168 00:024E: D4 07        	pei	<L32+pproc_1+2
  2169 00:0250: D4 05        	pei	<L32+pproc_1
  2170 00:0252: F4 xx xx     	pea	#^L26+88
  2171 00:0255: F4 xx xx     	pea	#<L26+88
  2172 00:0258: 22 xx xx xx  	jsl	~~k_debug_pointer
  2173                        ;		k_debug_pointer("      PROCESS   PPTR:",
                    pproc->execProc);
  2174                        	.line	104
  2175 00:025C: A0 5E 00     	ldy	#$5e
  2176 00:025F: B7 05        	lda	[<L32+pproc_1],Y
  2177 00:0261: 48           	pha
  2178 00:0262: A0 5C 00     	ldy	#$5c
  2179 00:0265: B7 05        	lda	[<L32+pproc_1],Y
  2180 00:0267: 48           	pha
  2181 00:0268: F4 xx xx     	pea	#^L26+110
  2182 00:026B: F4 xx xx     	pea	#<L26+110
  2183 00:026E: 22 xx xx xx  	jsl	~~k_debug_pointer
  2184                        ;	}
  2185                        	.line	105
  2186                        ;}
  2187                        L10005:
  2188                        	.line	106
  2189                        L35:
  2190 00:0272: A5 0A        	lda	<L31+2
  2191 00:0274: 85 12        	sta	<L31+2+8
  Sat Jul 10 2021  1:15                                                Page 42


  2192 00:0276: A5 09        	lda	<L31+1
  2193 00:0278: 85 11        	sta	<L31+1+8
  2194 00:027A: 2B           	pld
  2195 00:027B: 3B           	tsc
  2196 00:027C: 18           	clc
  2197 00:027D: 69 10 00     	adc	#L31+8
  2198 00:0280: 1B           	tcs
  2199 00:0281: 6B           	rtl
  2200                        	.endblock	106
  2201             00000008   L31	equ	8
  2202             00000005   L32	equ	5
  2203                        	ends
  2204                        	efunc
  2205                        	.endfunc	106,5,8
  2206                        	.line	106
  2207                        	data
  2208                        L26:
  2209 00:004B: 20 20 20 20  	db	$20,$20,$20,$20,$20,$20,$50,$52,$4F,$43,
                    $45,$53,$53,$20,$20
       00:004F: 20 20 50 52 
       00:0053: 4F 43 45 53 
       00:0057: 53 20 20 
  2210 00:005A: 43 4D 44 4C  	db	$43,$4D,$44,$4C,$4E,$3A,$00,$20,$20,$20,
                    $20,$20,$20,$50,$52
       00:005E: 4E 3A 00 20 
       00:0062: 20 20 20 20 
       00:0066: 20 50 52 
  2211 00:0069: 4F 43 45 53  	db	$4F,$43,$45,$53,$53,$20,$20,$20,$20,$50,
                    $49,$44,$3A,$00,$20
       00:006D: 53 20 20 20 
       00:0071: 20 50 49 44 
       00:0075: 3A 00 20 
  2212 00:0078: 20 20 20 20  	db	$20,$20,$20,$20,$20,$50,$52,$4F,$43,$45,
                    $53,$53,$20,$20,$20
       00:007C: 20 50 52 4F 
       00:0080: 43 45 53 53 
       00:0084: 20 20 20 
  2213 00:0087: 50 50 49 44  	db	$50,$50,$49,$44,$3A,$00,$20,$20,$20,$20,
                    $20,$20,$50,$52,$4F
       00:008B: 3A 00 20 20 
       00:008F: 20 20 20 20 
       00:0093: 50 52 4F 
  2214 00:0096: 43 45 53 53  	db	$43,$45,$53,$53,$20,$53,$54,$41,$54,$55,
                    $53,$3A,$00,$20,$20
       00:009A: 20 53 54 41 
       00:009E: 54 55 53 3A 
       00:00A2: 00 20 20 
  2215 00:00A5: 20 20 20 20  	db	$20,$20,$20,$20,$50,$52,$4F,$43,$45,$53,
                    $53,$20,$20,$20,$20
       00:00A9: 50 52 4F 43 
       00:00AD: 45 53 53 20 
       00:00B1: 20 20 20 
  2216 00:00B4: 50 54 52 3A  	db	$50,$54,$52,$3A,$00,$20,$20,$20,$20,$20,
                    $20,$50,$52,$4F,$43
       00:00B8: 00 20 20 20 
       00:00BC: 20 20 20 50 
       00:00C0: 52 4F 43 
  2217 00:00C3: 45 53 53 20  	db	$45,$53,$53,$20,$20,$20,$50,$50,$54,$52,
  Sat Jul 10 2021  1:15                                                Page 43


                    $3A,$00
       00:00C7: 20 20 50 50 
       00:00CB: 54 52 3A 00 
  2218 00:00CF:              	ends
  2219                        ;
  2220                        ;PFXPROCESS* k_exec_process_list(void)
  2221                        ;{
  2222                        	.line	108
  2223                        	.line	109
  2224                        	code
  2225                        	xdef	~~k_exec_process_list
  2226                        	func
  2227                        	.function	109
  2228                        ~~k_exec_process_list:
  2229                        	longa	on
  2230                        	longi	on
  2231 00:0282: 3B           	tsc
  2232 00:0283: 38           	sec
  2233 00:0284: E9 04 00     	sbc	#L37
  2234 00:0287: 1B           	tcs
  2235 00:0288: 0B           	phd
  2236 00:0289: 5B           	tcd
  2237                        	.block	109
  2238                        ;	return _k_processList;
  2239                        	.line	110
  2240 00:028A: A9 xx xx     	lda	#<~~_k_processList
  2241 00:028D: 85 01        	sta	<R0
  2242                        	xref	_BEG_DATA
  2243 00:028F: A9 xx xx     	lda	#_BEG_DATA>>16
  2244 00:0292: 85 03        	sta	<R0+2
  2245 00:0294: A6 03        	ldx	<R0+2
  2246 00:0296: A5 01        	lda	<R0
  2247                        L40:
  2248 00:0298: A8           	tay
  2249 00:0299: 2B           	pld
  2250 00:029A: 3B           	tsc
  2251 00:029B: 18           	clc
  2252 00:029C: 69 04 00     	adc	#L37
  2253 00:029F: 1B           	tcs
  2254 00:02A0: 98           	tya
  2255 00:02A1: 6B           	rtl
  2256                        ;}
  2257                        	.line	111
  2258                        	.endblock	111
  2259             00000004   L37	equ	4
  2260             00000005   L38	equ	5
  2261                        	ends
  2262                        	efunc
  2263                        	.endfunc	111,5,4
  2264                        	.line	111
  2265                        ;
  2266                        ;PROCESS_ID k_exec_nextprocess(PFXPROCESS process)
  2267                        ;{
  2268                        	.line	113
  2269                        	.line	114
  2270                        	code
  2271                        	xdef	~~k_exec_nextprocess
  2272                        	func
  Sat Jul 10 2021  1:15                                                Page 44


  2273                        	.function	114
  2274                        ~~k_exec_nextprocess:
  2275                        	longa	on
  2276                        	longi	on
  2277 00:02A2: 3B           	tsc
  2278 00:02A3: 38           	sec
  2279 00:02A4: E9 0E 00     	sbc	#L41
  2280 00:02A7: 1B           	tcs
  2281 00:02A8: 0B           	phd
  2282 00:02A9: 5B           	tcd
  2283             00000004   process_0	set	4
  2284                        	.block	114
  2285                        ;	PROCESS_ID pid = INVALID_HANDLE;
  2286                        ;
  2287                        ;	int index = 0;
  2288                        ;
  2289                        ;	for(index=0;index<MAX_PROCESS;index++)
  2290             00000000   pid_1	set	0
  2291             00000004   index_1	set	4
  2292                        	.sym	pid,0,18,1,32
  2293                        	.sym	index,4,5,1,16
  2294                        	.sym	process,4,138,6,32,20
  2295 00:02AA: A9 FF FF     	lda	#$ffff
  2296 00:02AD: 85 09        	sta	<L42+pid_1
  2297 00:02AF: A9 FF FF     	lda	#$ffff
  2298 00:02B2: 85 0B        	sta	<L42+pid_1+2
  2299 00:02B4: 64 0D        	stz	<L42+index_1
  2300                        	.line	119
  2301 00:02B6: 64 0D        	stz	<L42+index_1
  2302                        L10008:
  2303                        ;	{
  2304                        	.line	120
  2305                        ;		if(_k_processList[index] == NULL)
  2306                        	.line	121
  2307                        ;		{
  2308 00:02B8: A5 0D        	lda	<L42+index_1
  2309 00:02BA: 0A           	asl	A
  2310 00:02BB: 0A           	asl	A
  2311 00:02BC: 85 01        	sta	<R0
  2312 00:02BE: 18           	clc
  2313 00:02BF: A9 xx xx     	lda	#<~~_k_processList
  2314 00:02C2: 65 01        	adc	<R0
  2315 00:02C4: 85 05        	sta	<R1
  2316 00:02C6: B2 05        	lda	(<R1)
  2317 00:02C8: A0 02 00     	ldy	#$2
  2318 00:02CB: 11 05        	ora	(<R1),Y
  2319 00:02CD: F0 03        	beq	L44
  2320 00:02CF: 82 3F 00     	brl	L10009
  2321                        L44:
  2322                        	.line	122
  2323                        ;			pid = (index | 0x0000A000);
  2324                        	.line	123
  2325 00:02D2: A5 0D        	lda	<L42+index_1
  2326 00:02D4: 09 00 A0     	ora	#<$a000
  2327 00:02D7: 85 01        	sta	<R0
  2328 00:02D9: A5 01        	lda	<R0
  2329 00:02DB: 85 09        	sta	<L42+pid_1
  2330 00:02DD: 64 0B        	stz	<L42+pid_1+2
  Sat Jul 10 2021  1:15                                                Page 45


  2331                        ;			_k_processList[index] = process;
  2332                        	.line	124
  2333 00:02DF: A5 0D        	lda	<L42+index_1
  2334 00:02E1: 0A           	asl	A
  2335 00:02E2: 0A           	asl	A
  2336 00:02E3: 85 01        	sta	<R0
  2337 00:02E5: 18           	clc
  2338 00:02E6: A9 xx xx     	lda	#<~~_k_processList
  2339 00:02E9: 65 01        	adc	<R0
  2340 00:02EB: 85 05        	sta	<R1
  2341 00:02ED: A5 12        	lda	<L41+process_0
  2342 00:02EF: 92 05        	sta	(<R1)
  2343 00:02F1: A5 14        	lda	<L41+process_0+2
  2344 00:02F3: A0 02 00     	ldy	#$2
  2345 00:02F6: 91 05        	sta	(<R1),Y
  2346                        ;			process->procId = pid;
  2347                        	.line	125
  2348 00:02F8: A5 09        	lda	<L42+pid_1
  2349 00:02FA: A0 02 00     	ldy	#$2
  2350 00:02FD: 97 12        	sta	[<L41+process_0],Y
  2351 00:02FF: A5 0B        	lda	<L42+pid_1+2
  2352 00:0301: A0 04 00     	ldy	#$4
  2353 00:0304: 97 12        	sta	[<L41+process_0],Y
  2354                        ;			process->status = PROCESS_STATUS
                    _INIT;
  2355                        	.line	126
  2356 00:0306: A9 00 00     	lda	#$0
  2357 00:0309: A0 10 00     	ldy	#$10
  2358 00:030C: 97 12        	sta	[<L41+process_0],Y
  2359                        ;			break;
  2360                        	.line	127
  2361 00:030E: 82 12 00     	brl	L10007
  2362                        ;		}
  2363                        	.line	128
  2364                        ;	}
  2365                        L10009:
  2366                        	.line	129
  2367                        L10006:
  2368 00:0311: E6 0D        	inc	<L42+index_1
  2369 00:0313: 38           	sec
  2370 00:0314: A5 0D        	lda	<L42+index_1
  2371 00:0316: E9 20 00     	sbc	#<$20
  2372 00:0319: 70 03        	bvs	L45
  2373 00:031B: 49 00 80     	eor	#$8000
  2374                        L45:
  2375 00:031E: 30 03        	bmi	L46
  2376 00:0320: 82 95 FF     	brl	L10008
  2377                        L46:
  2378                        L10007:
  2379                        ;
  2380                        ;	return pid;
  2381                        	.line	131
  2382 00:0323: A6 0B        	ldx	<L42+pid_1+2
  2383 00:0325: A5 09        	lda	<L42+pid_1
  2384                        L47:
  2385 00:0327: A8           	tay
  2386 00:0328: A5 10        	lda	<L41+2
  2387 00:032A: 85 14        	sta	<L41+2+4
  Sat Jul 10 2021  1:15                                                Page 46


  2388 00:032C: A5 0F        	lda	<L41+1
  2389 00:032E: 85 13        	sta	<L41+1+4
  2390 00:0330: 2B           	pld
  2391 00:0331: 3B           	tsc
  2392 00:0332: 18           	clc
  2393 00:0333: 69 12 00     	adc	#L41+4
  2394 00:0336: 1B           	tcs
  2395 00:0337: 98           	tya
  2396 00:0338: 6B           	rtl
  2397                        ;}
  2398                        	.line	132
  2399                        	.endblock	132
  2400             0000000E   L41	equ	14
  2401             00000009   L42	equ	9
  2402                        	ends
  2403                        	efunc
  2404                        	.endfunc	132,9,14
  2405                        	.line	132
  2406                        ;
  2407                        ;PFXPROCESS k_exec_get_process(PROCESS_ID procId)
  2408                        ;{
  2409                        	.line	134
  2410                        	.line	135
  2411                        	code
  2412                        	xdef	~~k_exec_get_process
  2413                        	func
  2414                        	.function	135
  2415                        ~~k_exec_get_process:
  2416                        	longa	on
  2417                        	longi	on
  2418 00:0339: 3B           	tsc
  2419 00:033A: 38           	sec
  2420 00:033B: E9 0E 00     	sbc	#L48
  2421 00:033E: 1B           	tcs
  2422 00:033F: 0B           	phd
  2423 00:0340: 5B           	tcd
  2424             00000004   procId_0	set	4
  2425                        	.block	135
  2426                        ;	PFXPROCESS p = NULL;
  2427                        ;
  2428                        ;	int index = 0;
  2429                        ;
  2430                        ;	for(index=0;index<MAX_PROCESS;index++)
  2431             00000000   p_1	set	0
  2432             00000004   index_1	set	4
  2433                        	.sym	p,0,138,1,32,20
  2434                        	.sym	index,4,5,1,16
  2435                        	.sym	procId,4,18,6,32
  2436 00:0341: 64 09        	stz	<L49+p_1
  2437 00:0343: 64 0B        	stz	<L49+p_1+2
  2438 00:0345: 64 0D        	stz	<L49+index_1
  2439                        	.line	140
  2440 00:0347: 64 0D        	stz	<L49+index_1
  2441                        L10012:
  2442                        ;	{
  2443                        	.line	141
  2444                        ;		if(_k_processList[index]->procId == proc
                    Id)
  Sat Jul 10 2021  1:15                                                Page 47


  2445                        	.line	142
  2446                        ;		{
  2447 00:0349: A5 0D        	lda	<L49+index_1
  2448 00:034B: 0A           	asl	A
  2449 00:034C: 0A           	asl	A
  2450 00:034D: 85 01        	sta	<R0
  2451 00:034F: 18           	clc
  2452 00:0350: A9 xx xx     	lda	#<~~_k_processList
  2453 00:0353: 65 01        	adc	<R0
  2454 00:0355: 85 05        	sta	<R1
  2455 00:0357: B2 05        	lda	(<R1)
  2456 00:0359: 85 01        	sta	<R0
  2457 00:035B: A0 02 00     	ldy	#$2
  2458 00:035E: B1 05        	lda	(<R1),Y
  2459 00:0360: 85 03        	sta	<R0+2
  2460 00:0362: A0 02 00     	ldy	#$2
  2461 00:0365: B7 01        	lda	[<R0],Y
  2462 00:0367: C5 12        	cmp	<L48+procId_0
  2463 00:0369: D0 07        	bne	L51
  2464 00:036B: A0 04 00     	ldy	#$4
  2465 00:036E: B7 01        	lda	[<R0],Y
  2466 00:0370: C5 14        	cmp	<L48+procId_0+2
  2467                        L51:
  2468 00:0372: F0 03        	beq	L52
  2469 00:0374: 82 1C 00     	brl	L10013
  2470                        L52:
  2471                        	.line	143
  2472                        ;			p = _k_processList[index];
  2473                        	.line	144
  2474 00:0377: A5 0D        	lda	<L49+index_1
  2475 00:0379: 0A           	asl	A
  2476 00:037A: 0A           	asl	A
  2477 00:037B: 85 01        	sta	<R0
  2478 00:037D: 18           	clc
  2479 00:037E: A9 xx xx     	lda	#<~~_k_processList
  2480 00:0381: 65 01        	adc	<R0
  2481 00:0383: 85 05        	sta	<R1
  2482 00:0385: B2 05        	lda	(<R1)
  2483 00:0387: 85 09        	sta	<L49+p_1
  2484 00:0389: A0 02 00     	ldy	#$2
  2485 00:038C: B1 05        	lda	(<R1),Y
  2486 00:038E: 85 0B        	sta	<L49+p_1+2
  2487                        ;			break;
  2488                        	.line	145
  2489 00:0390: 82 12 00     	brl	L10011
  2490                        ;		}
  2491                        	.line	146
  2492                        ;	}
  2493                        L10013:
  2494                        	.line	147
  2495                        L10010:
  2496 00:0393: E6 0D        	inc	<L49+index_1
  2497 00:0395: 38           	sec
  2498 00:0396: A5 0D        	lda	<L49+index_1
  2499 00:0398: E9 20 00     	sbc	#<$20
  2500 00:039B: 70 03        	bvs	L53
  2501 00:039D: 49 00 80     	eor	#$8000
  2502                        L53:
  Sat Jul 10 2021  1:15                                                Page 48


  2503 00:03A0: 30 03        	bmi	L54
  2504 00:03A2: 82 A4 FF     	brl	L10012
  2505                        L54:
  2506                        L10011:
  2507                        ;
  2508                        ;	return p;
  2509                        	.line	149
  2510 00:03A5: A6 0B        	ldx	<L49+p_1+2
  2511 00:03A7: A5 09        	lda	<L49+p_1
  2512                        L55:
  2513 00:03A9: A8           	tay
  2514 00:03AA: A5 10        	lda	<L48+2
  2515 00:03AC: 85 14        	sta	<L48+2+4
  2516 00:03AE: A5 0F        	lda	<L48+1
  2517 00:03B0: 85 13        	sta	<L48+1+4
  2518 00:03B2: 2B           	pld
  2519 00:03B3: 3B           	tsc
  2520 00:03B4: 18           	clc
  2521 00:03B5: 69 12 00     	adc	#L48+4
  2522 00:03B8: 1B           	tcs
  2523 00:03B9: 98           	tya
  2524 00:03BA: 6B           	rtl
  2525                        ;}
  2526                        	.line	150
  2527                        	.endblock	150
  2528             0000000E   L48	equ	14
  2529             00000009   L49	equ	9
  2530                        	ends
  2531                        	efunc
  2532                        	.endfunc	150,9,14
  2533                        	.line	150
  2534                        ;
  2535                        ;
  2536                        ;PFXPROCESS k_exec_get_process_byname(LPCSTR proce
                    ssName)
  2537                        ;{
  2538                        	.line	153
  2539                        	.line	154
  2540                        	code
  2541                        	xdef	~~k_exec_get_process_byname
  2542                        	func
  2543                        	.function	154
  2544                        ~~k_exec_get_process_byname:
  2545                        	longa	on
  2546                        	longi	on
  2547 00:03BB: 3B           	tsc
  2548 00:03BC: 38           	sec
  2549 00:03BD: E9 10 00     	sbc	#L56
  2550 00:03C0: 1B           	tcs
  2551 00:03C1: 0B           	phd
  2552 00:03C2: 5B           	tcd
  2553             00000004   processName_0	set	4
  2554                        	.block	154
  2555                        ;	PFXPROCESS pproc = NULL;
  2556                        ;	PFXNODE node = NULL;
  2557                        ;
  2558                        ;	if(_k_execManager_ProcesssList)
  2559             00000000   pproc_1	set	0
  Sat Jul 10 2021  1:15                                                Page 49


  2560             00000004   node_1	set	4
  2561                        	.sym	pproc,0,138,1,32,20
  2562                        	.sym	node,4,138,1,32,5
  2563                        	.sym	processName,4,142,6,32
  2564 00:03C3: 64 09        	stz	<L57+pproc_1
  2565 00:03C5: 64 0B        	stz	<L57+pproc_1+2
  2566 00:03C7: 64 0D        	stz	<L57+node_1
  2567 00:03C9: 64 0F        	stz	<L57+node_1+2
  2568                        	.line	158
  2569                        ;	{
  2570 00:03CB: AD xx xx     	lda	|~~_k_execManager_ProcesssList
  2571 00:03CE: 0D xx xx     	ora	|~~_k_execManager_ProcesssList+2
  2572 00:03D1: D0 03        	bne	L59
  2573 00:03D3: 82 44 00     	brl	L10014
  2574                        L59:
  2575                        	.line	159
  2576                        ;		node = k_nodelist_getname(_k_execManager
                    _ProcesssList->listhead->next,processName);
  2577                        	.line	160
  2578 00:03D6: D4 16        	pei	<L56+processName_0+2
  2579 00:03D8: D4 14        	pei	<L56+processName_0
  2580 00:03DA: AD xx xx     	lda	|~~_k_execManager_ProcesssList
  2581 00:03DD: 85 01        	sta	<R0
  2582 00:03DF: AD xx xx     	lda	|~~_k_execManager_ProcesssList+2
  2583 00:03E2: 85 03        	sta	<R0+2
  2584 00:03E4: A7 01        	lda	[<R0]
  2585 00:03E6: 85 05        	sta	<R1
  2586 00:03E8: A0 02 00     	ldy	#$2
  2587 00:03EB: B7 01        	lda	[<R0],Y
  2588 00:03ED: 85 07        	sta	<R1+2
  2589 00:03EF: A0 0C 00     	ldy	#$c
  2590 00:03F2: B7 05        	lda	[<R1],Y
  2591 00:03F4: 48           	pha
  2592 00:03F5: A0 0A 00     	ldy	#$a
  2593 00:03F8: B7 05        	lda	[<R1],Y
  2594 00:03FA: 48           	pha
  2595 00:03FB: 22 xx xx xx  	jsl	~~k_nodelist_getname
  2596 00:03FF: 85 0D        	sta	<L57+node_1
  2597 00:0401: 86 0F        	stx	<L57+node_1+2
  2598                        ;		if(node)
  2599                        	.line	161
  2600                        ;		{
  2601 00:0403: A5 0D        	lda	<L57+node_1
  2602 00:0405: 05 0F        	ora	<L57+node_1+2
  2603 00:0407: D0 03        	bne	L60
  2604 00:0409: 82 0E 00     	brl	L10015
  2605                        L60:
  2606                        	.line	162
  2607                        ;			pproc = node->data;
  2608                        	.line	163
  2609 00:040C: A0 02 00     	ldy	#$2
  2610 00:040F: B7 0D        	lda	[<L57+node_1],Y
  2611 00:0411: 85 09        	sta	<L57+pproc_1
  2612 00:0413: A0 04 00     	ldy	#$4
  2613 00:0416: B7 0D        	lda	[<L57+node_1],Y
  2614 00:0418: 85 0B        	sta	<L57+pproc_1+2
  2615                        ;		}
  2616                        	.line	164
  Sat Jul 10 2021  1:15                                                Page 50


  2617                        ;	}
  2618                        L10015:
  2619                        	.line	165
  2620                        ;
  2621                        ;	return pproc;
  2622                        L10014:
  2623                        	.line	167
  2624 00:041A: A6 0B        	ldx	<L57+pproc_1+2
  2625 00:041C: A5 09        	lda	<L57+pproc_1
  2626                        L61:
  2627 00:041E: A8           	tay
  2628 00:041F: A5 12        	lda	<L56+2
  2629 00:0421: 85 16        	sta	<L56+2+4
  2630 00:0423: A5 11        	lda	<L56+1
  2631 00:0425: 85 15        	sta	<L56+1+4
  2632 00:0427: 2B           	pld
  2633 00:0428: 3B           	tsc
  2634 00:0429: 18           	clc
  2635 00:042A: 69 14 00     	adc	#L56+4
  2636 00:042D: 1B           	tcs
  2637 00:042E: 98           	tya
  2638 00:042F: 6B           	rtl
  2639                        ;}
  2640                        	.line	168
  2641                        	.endblock	168
  2642             00000010   L56	equ	16
  2643             00000009   L57	equ	9
  2644                        	ends
  2645                        	efunc
  2646                        	.endfunc	168,9,16
  2647                        	.line	168
  2648                        ;
  2649                        ;
  2650                        ;void k_exec_set_process_foreground(PFXPROCESS pro
                    cess,BOOL fActive)
  2651                        ;{
  2652                        	.line	171
  2653                        	.line	172
  2654                        	code
  2655                        	xdef	~~k_exec_set_process_foreground
  2656                        	func
  2657                        	.function	172
  2658                        ~~k_exec_set_process_foreground:
  2659                        	longa	on
  2660                        	longi	on
  2661 00:0430: 3B           	tsc
  2662 00:0431: 38           	sec
  2663 00:0432: E9 00 00     	sbc	#L62
  2664 00:0435: 1B           	tcs
  2665 00:0436: 0B           	phd
  2666 00:0437: 5B           	tcd
  2667             00000004   process_0	set	4
  2668             00000008   fActive_0	set	8
  2669                        	.block	172
  2670                        ;	if(process!=NULL)
  2671                        	.sym	process,4,138,6,32,20
  2672                        	.sym	fActive,8,14,6,8
  2673                        	.line	173
  Sat Jul 10 2021  1:15                                                Page 51


  2674                        ;	{
  2675 00:0438: A5 04        	lda	<L62+process_0
  2676 00:043A: 05 06        	ora	<L62+process_0+2
  2677 00:043C: D0 03        	bne	L65
  2678 00:043E: 82 0B 00     	brl	L10016
  2679                        L65:
  2680                        	.line	174
  2681                        ;		process->foregroundActive = fActive;
  2682                        	.line	175
  2683 00:0441: E2 20        	sep	#$20
  2684                        	longa	off
  2685 00:0443: A5 08        	lda	<L62+fActive_0
  2686 00:0445: A0 12 00     	ldy	#$12
  2687 00:0448: 97 04        	sta	[<L62+process_0],Y
  2688 00:044A: C2 20        	rep	#$20
  2689                        	longa	on
  2690                        ;	}
  2691                        	.line	176
  2692                        ;}
  2693                        L10016:
  2694                        	.line	177
  2695                        L66:
  2696 00:044C: A5 02        	lda	<L62+2
  2697 00:044E: 85 08        	sta	<L62+2+6
  2698 00:0450: A5 01        	lda	<L62+1
  2699 00:0452: 85 07        	sta	<L62+1+6
  2700 00:0454: 2B           	pld
  2701 00:0455: 3B           	tsc
  2702 00:0456: 18           	clc
  2703 00:0457: 69 06 00     	adc	#L62+6
  2704 00:045A: 1B           	tcs
  2705 00:045B: 6B           	rtl
  2706                        	.endblock	177
  2707             00000000   L62	equ	0
  2708             00000001   L63	equ	1
  2709                        	ends
  2710                        	efunc
  2711                        	.endfunc	177,1,0
  2712                        	.line	177
  2713                        ;
  2714                        ;void k_exec_start_process(PROCESS_ID procId)
  2715                        ;{
  2716                        	.line	179
  2717                        	.line	180
  2718                        	code
  2719                        	xdef	~~k_exec_start_process
  2720                        	func
  2721                        	.function	180
  2722                        ~~k_exec_start_process:
  2723                        	longa	on
  2724                        	longi	on
  2725 00:045C: 3B           	tsc
  2726 00:045D: 38           	sec
  2727 00:045E: E9 0E 00     	sbc	#L67
  2728 00:0461: 1B           	tcs
  2729 00:0462: 0B           	phd
  2730 00:0463: 5B           	tcd
  2731             00000004   procId_0	set	4
  Sat Jul 10 2021  1:15                                                Page 52


  2732                        	.block	180
  2733                        ;	PFXPROCESS p = NULL;
  2734                        ;
  2735                        ;	int index = 0;
  2736                        ;
  2737                        ;	for(index=0;index<MAX_PROCESS;index++)
  2738             00000000   p_1	set	0
  2739             00000004   index_1	set	4
  2740                        	.sym	p,0,138,1,32,20
  2741                        	.sym	index,4,5,1,16
  2742                        	.sym	procId,4,18,6,32
  2743 00:0464: 64 09        	stz	<L68+p_1
  2744 00:0466: 64 0B        	stz	<L68+p_1+2
  2745 00:0468: 64 0D        	stz	<L68+index_1
  2746                        	.line	185
  2747 00:046A: 64 0D        	stz	<L68+index_1
  2748                        L10019:
  2749                        ;	{
  2750                        	.line	186
  2751                        ;		if(_k_processList[index]->procId == proc
                    Id)
  2752                        	.line	187
  2753                        ;		{
  2754 00:046C: A5 0D        	lda	<L68+index_1
  2755 00:046E: 0A           	asl	A
  2756 00:046F: 0A           	asl	A
  2757 00:0470: 85 01        	sta	<R0
  2758 00:0472: 18           	clc
  2759 00:0473: A9 xx xx     	lda	#<~~_k_processList
  2760 00:0476: 65 01        	adc	<R0
  2761 00:0478: 85 05        	sta	<R1
  2762 00:047A: B2 05        	lda	(<R1)
  2763 00:047C: 85 01        	sta	<R0
  2764 00:047E: A0 02 00     	ldy	#$2
  2765 00:0481: B1 05        	lda	(<R1),Y
  2766 00:0483: 85 03        	sta	<R0+2
  2767 00:0485: A0 02 00     	ldy	#$2
  2768 00:0488: B7 01        	lda	[<R0],Y
  2769 00:048A: C5 12        	cmp	<L67+procId_0
  2770 00:048C: D0 07        	bne	L70
  2771 00:048E: A0 04 00     	ldy	#$4
  2772 00:0491: B7 01        	lda	[<R0],Y
  2773 00:0493: C5 14        	cmp	<L67+procId_0+2
  2774                        L70:
  2775 00:0495: F0 03        	beq	L71
  2776 00:0497: 82 1C 00     	brl	L10020
  2777                        L71:
  2778                        	.line	188
  2779                        ;			p = _k_processList[index];
  2780                        	.line	189
  2781 00:049A: A5 0D        	lda	<L68+index_1
  2782 00:049C: 0A           	asl	A
  2783 00:049D: 0A           	asl	A
  2784 00:049E: 85 01        	sta	<R0
  2785 00:04A0: 18           	clc
  2786 00:04A1: A9 xx xx     	lda	#<~~_k_processList
  2787 00:04A4: 65 01        	adc	<R0
  2788 00:04A6: 85 05        	sta	<R1
  Sat Jul 10 2021  1:15                                                Page 53


  2789 00:04A8: B2 05        	lda	(<R1)
  2790 00:04AA: 85 09        	sta	<L68+p_1
  2791 00:04AC: A0 02 00     	ldy	#$2
  2792 00:04AF: B1 05        	lda	(<R1),Y
  2793 00:04B1: 85 0B        	sta	<L68+p_1+2
  2794                        ;
  2795                        ;
  2796                        ;			break;
  2797                        	.line	192
  2798 00:04B3: 82 12 00     	brl	L10018
  2799                        ;		}
  2800                        	.line	193
  2801                        ;	}
  2802                        L10020:
  2803                        	.line	194
  2804                        L10017:
  2805 00:04B6: E6 0D        	inc	<L68+index_1
  2806 00:04B8: 38           	sec
  2807 00:04B9: A5 0D        	lda	<L68+index_1
  2808 00:04BB: E9 20 00     	sbc	#<$20
  2809 00:04BE: 70 03        	bvs	L72
  2810 00:04C0: 49 00 80     	eor	#$8000
  2811                        L72:
  2812 00:04C3: 30 03        	bmi	L73
  2813 00:04C5: 82 A4 FF     	brl	L10019
  2814                        L73:
  2815                        L10018:
  2816                        ;
  2817                        ;}
  2818                        	.line	196
  2819                        L74:
  2820 00:04C8: A5 10        	lda	<L67+2
  2821 00:04CA: 85 14        	sta	<L67+2+4
  2822 00:04CC: A5 0F        	lda	<L67+1
  2823 00:04CE: 85 13        	sta	<L67+1+4
  2824 00:04D0: 2B           	pld
  2825 00:04D1: 3B           	tsc
  2826 00:04D2: 18           	clc
  2827 00:04D3: 69 12 00     	adc	#L67+4
  2828 00:04D6: 1B           	tcs
  2829 00:04D7: 6B           	rtl
  2830                        	.endblock	196
  2831             0000000E   L67	equ	14
  2832             00000009   L68	equ	9
  2833                        	ends
  2834                        	efunc
  2835                        	.endfunc	196,9,14
  2836                        	.line	196
  2837                        ;
  2838                        ;PFXPROCESS k_user_CreateProcess(LPCHAR commandLin
                    e)
  2839                        ;{
  2840                        	.line	198
  2841                        	.line	199
  2842                        	code
  2843                        	xdef	~~k_user_CreateProcess
  2844                        	func
  2845                        	.function	199
  Sat Jul 10 2021  1:15                                                Page 54


  2846                        ~~k_user_CreateProcess:
  2847                        	longa	on
  2848                        	longi	on
  2849 00:04D8: 3B           	tsc
  2850 00:04D9: 38           	sec
  2851 00:04DA: E9 04 00     	sbc	#L75
  2852 00:04DD: 1B           	tcs
  2853 00:04DE: 0B           	phd
  2854 00:04DF: 5B           	tcd
  2855             00000004   commandLine_0	set	4
  2856                        	.block	199
  2857                        ;	PFXPROCESS pprocess = NULL;
  2858                        ;
  2859                        ;	pprocess = k_exec_launchProcess(commandLine);
  2860             00000000   pprocess_1	set	0
  2861                        	.sym	pprocess,0,138,1,32,20
  2862                        	.sym	commandLine,4,142,6,32
  2863 00:04E0: 64 01        	stz	<L76+pprocess_1
  2864 00:04E2: 64 03        	stz	<L76+pprocess_1+2
  2865                        	.line	202
  2866 00:04E4: D4 0A        	pei	<L75+commandLine_0+2
  2867 00:04E6: D4 08        	pei	<L75+commandLine_0
  2868 00:04E8: 22 xx xx xx  	jsl	~~k_exec_launchProcess
  2869 00:04EC: 85 01        	sta	<L76+pprocess_1
  2870 00:04EE: 86 03        	stx	<L76+pprocess_1+2
  2871                        ;	if(pprocess!=NULL)
  2872                        	.line	203
  2873                        ;	{
  2874 00:04F0: A5 01        	lda	<L76+pprocess_1
  2875 00:04F2: 05 03        	ora	<L76+pprocess_1+2
  2876 00:04F4: D0 03        	bne	L78
  2877 00:04F6: 82 1F 00     	brl	L10021
  2878                        L78:
  2879                        	.line	204
  2880                        ;		k_attach_process_events(pprocess->execPr
                    oc,pprocess);
  2881                        	.line	205
  2882 00:04F9: D4 03        	pei	<L76+pprocess_1+2
  2883 00:04FB: D4 01        	pei	<L76+pprocess_1
  2884 00:04FD: A0 5E 00     	ldy	#$5e
  2885 00:0500: B7 01        	lda	[<L76+pprocess_1],Y
  2886 00:0502: 48           	pha
  2887 00:0503: A0 5C 00     	ldy	#$5c
  2888 00:0506: B7 01        	lda	[<L76+pprocess_1],Y
  2889 00:0508: 48           	pha
  2890 00:0509: 22 xx xx xx  	jsl	~~k_attach_process_events
  2891                        ;		k_exec_set_process_foreground(pprocess,T
                    RUE);
  2892                        	.line	206
  2893 00:050D: F4 01 00     	pea	#<$1
  2894 00:0510: D4 03        	pei	<L76+pprocess_1+2
  2895 00:0512: D4 01        	pei	<L76+pprocess_1
  2896 00:0514: 22 xx xx xx  	jsl	~~k_exec_set_process_foreground
  2897                        ;	}
  2898                        	.line	207
  2899                        ;
  2900                        ;	return pprocess;
  2901                        L10021:
  Sat Jul 10 2021  1:15                                                Page 55


  2902                        	.line	209
  2903 00:0518: A6 03        	ldx	<L76+pprocess_1+2
  2904 00:051A: A5 01        	lda	<L76+pprocess_1
  2905                        L79:
  2906 00:051C: A8           	tay
  2907 00:051D: A5 06        	lda	<L75+2
  2908 00:051F: 85 0A        	sta	<L75+2+4
  2909 00:0521: A5 05        	lda	<L75+1
  2910 00:0523: 85 09        	sta	<L75+1+4
  2911 00:0525: 2B           	pld
  2912 00:0526: 3B           	tsc
  2913 00:0527: 18           	clc
  2914 00:0528: 69 08 00     	adc	#L75+4
  2915 00:052B: 1B           	tcs
  2916 00:052C: 98           	tya
  2917 00:052D: 6B           	rtl
  2918                        ;}
  2919                        	.line	210
  2920                        	.endblock	210
  2921             00000004   L75	equ	4
  2922             00000001   L76	equ	1
  2923                        	ends
  2924                        	efunc
  2925                        	.endfunc	210,1,4
  2926                        	.line	210
  2927                        ;
  2928                        ;FXProcessProc k_exe_device_load_process(LPCHAR pa
                    th)
  2929                        ;{
  2930                        	.line	212
  2931                        	.line	213
  2932                        	code
  2933                        	xdef	~~k_exe_device_load_process
  2934                        	func
  2935                        	.function	213
  2936                        ~~k_exe_device_load_process:
  2937                        	longa	on
  2938                        	longi	on
  2939 00:052E: 3B           	tsc
  2940 00:052F: 38           	sec
  2941 00:0530: E9 14 00     	sbc	#L80
  2942 00:0533: 1B           	tcs
  2943 00:0534: 0B           	phd
  2944 00:0535: 5B           	tcd
  2945             00000004   path_0	set	4
  2946                        	.block	213
  2947                        ;	FIL *f;
  2948                        ;	FRESULT fr;
  2949                        ;	UINT read;
  2950                        ;	ULONG codeSize = 0L;
  2951                        ;
  2952                        ;	FXProcessProc pEntryAddress = NULL;
  2953                        ;
  2954                        ;	f = k_mem_allocate_heap(sizeof(FIL));
  2955             00000000   f_1	set	0
  2956             00000004   fr_1	set	4
  2957             00000006   read_1	set	6
  2958             00000008   codeSize_1	set	8
  Sat Jul 10 2021  1:15                                                Page 56


  2959             0000000C   pEntryAddress_1	set	12
  2960                        	.sym	f,0,138,1,32,74
  2961                        	.sym	fr,4,5,1,16
  2962                        	.sym	read,6,16,1,16
  2963                        	.sym	codeSize,8,18,1,32
  2964                        	.sym	pEntryAddress,12,641,1,32
  2965                        	.sym	path,4,142,6,32
  2966 00:0536: 64 0D        	stz	<L81+codeSize_1
  2967 00:0538: 64 0F        	stz	<L81+codeSize_1+2
  2968 00:053A: 64 11        	stz	<L81+pEntryAddress_1
  2969 00:053C: 64 13        	stz	<L81+pEntryAddress_1+2
  2970                        	.line	221
  2971 00:053E: F4 26 02     	pea	#<$226
  2972 00:0541: 22 xx xx xx  	jsl	~~k_mem_allocate_heap
  2973 00:0545: 85 05        	sta	<L81+f_1
  2974 00:0547: 86 07        	stx	<L81+f_1+2
  2975                        ;
  2976                        ;	k_debug_strings("k_exe_device_load_process::load
                     module:",path);
  2977                        	.line	223
  2978 00:0549: D4 1A        	pei	<L80+path_0+2
  2979 00:054B: D4 18        	pei	<L80+path_0
  2980 00:054D: F4 xx xx     	pea	#^L36
  2981 00:0550: F4 xx xx     	pea	#<L36
  2982 00:0553: 22 xx xx xx  	jsl	~~k_debug_strings
  2983                        ;
  2984                        ;	if(f_open(f,path,FA_READ) == FR_OK)
  2985                        	.line	225
  2986                        ;	{
  2987 00:0557: F4 01 00     	pea	#<$1
  2988 00:055A: D4 1A        	pei	<L80+path_0+2
  2989 00:055C: D4 18        	pei	<L80+path_0
  2990 00:055E: D4 07        	pei	<L81+f_1+2
  2991 00:0560: D4 05        	pei	<L81+f_1
  2992 00:0562: 22 xx xx xx  	jsl	~~f_open
  2993 00:0566: AA           	tax
  2994 00:0567: F0 03        	beq	L83
  2995 00:0569: 82 9A 01     	brl	L10022
  2996                        L83:
  2997                        	.line	226
  2998                        ;
  2999                        ;		fr = f_read(f,&loadModuleHeader,sizeof(S
                    EGMENTHEADER),&read);
  3000                        	.line	228
  3001 00:056C: F4 00 00     	pea	#0
  3002 00:056F: 18           	clc
  3003 00:0570: 7B           	tdc
  3004 00:0571: 69 0B 00     	adc	#<L81+read_1
  3005 00:0574: 48           	pha
  3006 00:0575: F4 14 00     	pea	#<$14
  3007 00:0578: A9 xx xx     	lda	#<~~loadModuleHeader
  3008 00:057B: 85 01        	sta	<R0
  3009                        	xref	_BEG_DATA
  3010 00:057D: A9 xx xx     	lda	#_BEG_DATA>>16
  3011 00:0580: 85 03        	sta	<R0+2
  3012 00:0582: D4 03        	pei	<R0+2
  3013 00:0584: D4 01        	pei	<R0
  3014 00:0586: D4 07        	pei	<L81+f_1+2
  Sat Jul 10 2021  1:15                                                Page 57


  3015 00:0588: D4 05        	pei	<L81+f_1
  3016 00:058A: 22 xx xx xx  	jsl	~~f_read
  3017 00:058E: 85 09        	sta	<L81+fr_1
  3018                        ;		k_debug_integer("k_exe_device_load_proce
                    ss:SEGMENTHEADER:fr:",fr);
  3019                        	.line	229
  3020 00:0590: D4 09        	pei	<L81+fr_1
  3021 00:0592: F4 xx xx     	pea	#^L36+40
  3022 00:0595: F4 xx xx     	pea	#<L36+40
  3023 00:0598: 22 xx xx xx  	jsl	~~k_debug_integer
  3024                        ;		k_debug_integer("k_exe_device_load_proce
                    ss::sizeof SEGMENTHEADER Size:\r\n",sizeof(SEGMENTHEADER));
  3025                        	.line	230
  3026 00:059C: F4 14 00     	pea	#<$14
  3027 00:059F: F4 xx xx     	pea	#^L36+84
  3028 00:05A2: F4 xx xx     	pea	#<L36+84
  3029 00:05A5: 22 xx xx xx  	jsl	~~k_debug_integer
  3030                        ;		k_debug_integer("k_exe_device_load_proce
                    ss::READ SEGMENTHEADER Size:\r\n",read);
  3031                        	.line	231
  3032 00:05A9: D4 0B        	pei	<L81+read_1
  3033 00:05AB: F4 xx xx     	pea	#^L36+140
  3034 00:05AE: F4 xx xx     	pea	#<L36+140
  3035 00:05B1: 22 xx xx xx  	jsl	~~k_debug_integer
  3036                        ;		if(read)
  3037                        	.line	232
  3038                        ;		{
  3039 00:05B5: A5 0B        	lda	<L81+read_1
  3040 00:05B7: D0 03        	bne	L84
  3041 00:05B9: 82 8A 00     	brl	L10023
  3042                        L84:
  3043                        	.line	233
  3044                        ;			k_debug_integer("k_exe_device_lo
                    ad_process::SEGMENT VERSION MAJOR:",loadModuleHeader.version
                    _major);
  3045                        	.line	234
  3046 00:05BC: AD xx xx     	lda	|~~loadModuleHeader
  3047 00:05BF: 29 FF 00     	and	#$ff
  3048 00:05C2: 48           	pha
  3049 00:05C3: F4 xx xx     	pea	#^L36+194
  3050 00:05C6: F4 xx xx     	pea	#<L36+194
  3051 00:05C9: 22 xx xx xx  	jsl	~~k_debug_integer
  3052                        ;			k_debug_integer("k_exe_device_lo
                    ad_process::SEGMENT VERSION MAJOR:",loadModuleHeader.version
                    _minor);
  3053                        	.line	235
  3054 00:05CD: AD xx xx     	lda	|~~loadModuleHeader+1
  3055 00:05D0: 29 FF 00     	and	#$ff
  3056 00:05D3: 48           	pha
  3057 00:05D4: F4 xx xx     	pea	#^L36+244
  3058 00:05D7: F4 xx xx     	pea	#<L36+244
  3059 00:05DA: 22 xx xx xx  	jsl	~~k_debug_integer
  3060                        ;			k_debug_integer("k_exe_device_lo
                    ad_process::SEGMENT HEADER LENGTH:",loadModuleHeader.length)
                    ;
  3061                        	.line	236
  3062 00:05DE: AD xx xx     	lda	|~~loadModuleHeader+2
  3063 00:05E1: 48           	pha
  Sat Jul 10 2021  1:15                                                Page 58


  3064 00:05E2: F4 xx xx     	pea	#^L36+294
  3065 00:05E5: F4 xx xx     	pea	#<L36+294
  3066 00:05E8: 22 xx xx xx  	jsl	~~k_debug_integer
  3067                        ;			k_debug_pointer("k_exe_device_lo
                    ad_process::SEGMENT START ADDRESS:",(LPVOID)loadModuleHeader
                    .segment_start_addr);
  3068                        	.line	237
  3069 00:05EC: AD xx xx     	lda	|~~loadModuleHeader+4+2
  3070 00:05EF: 48           	pha
  3071 00:05F0: AD xx xx     	lda	|~~loadModuleHeader+4
  3072 00:05F3: 48           	pha
  3073 00:05F4: F4 xx xx     	pea	#^L36+344
  3074 00:05F7: F4 xx xx     	pea	#<L36+344
  3075 00:05FA: 22 xx xx xx  	jsl	~~k_debug_pointer
  3076                        ;			k_debug_pointer("k_exe_device_lo
                    ad_process::SEGMENT END   ADDRESS:",(LPVOID)loadModuleHeader
                    .segment_end_addr);
  3077                        	.line	238
  3078 00:05FE: AD xx xx     	lda	|~~loadModuleHeader+8+2
  3079 00:0601: 48           	pha
  3080 00:0602: AD xx xx     	lda	|~~loadModuleHeader+8
  3081 00:0605: 48           	pha
  3082 00:0606: F4 xx xx     	pea	#^L36+394
  3083 00:0609: F4 xx xx     	pea	#<L36+394
  3084 00:060C: 22 xx xx xx  	jsl	~~k_debug_pointer
  3085                        ;			k_debug_integer("k_exe_device_lo
                    ad_process::SEGMENT SIZE         :",loadModuleHeader.segment
                    _size);
  3086                        	.line	239
  3087 00:0610: AD xx xx     	lda	|~~loadModuleHeader+12
  3088 00:0613: 48           	pha
  3089 00:0614: F4 xx xx     	pea	#^L36+444
  3090 00:0617: F4 xx xx     	pea	#<L36+444
  3091 00:061A: 22 xx xx xx  	jsl	~~k_debug_integer
  3092                        ;			k_debug_pointer("k_exe_device_lo
                    ad_process::SEGMENT ENTRY ADDRESS:",(LPVOID)loadModuleHeader
                    .main_entry_addr);
  3093                        	.line	240
  3094 00:061E: AD xx xx     	lda	|~~loadModuleHeader+16+2
  3095 00:0621: 48           	pha
  3096 00:0622: AD xx xx     	lda	|~~loadModuleHeader+16
  3097 00:0625: 48           	pha
  3098 00:0626: F4 xx xx     	pea	#^L36+494
  3099 00:0629: F4 xx xx     	pea	#<L36+494
  3100 00:062C: 22 xx xx xx  	jsl	~~k_debug_pointer
  3101                        ;
  3102                        ;			codeSize = loadModuleHeader.segm
                    ent_size;//loadModuleHeader.segment_end_addr - loadModuleHea
                    der.segment_start_addr;
  3103                        	.line	242
  3104 00:0630: AD xx xx     	lda	|~~loadModuleHeader+12
  3105 00:0633: 85 0D        	sta	<L81+codeSize_1
  3106 00:0635: AD xx xx     	lda	|~~loadModuleHeader+12+2
  3107 00:0638: 85 0F        	sta	<L81+codeSize_1+2
  3108                        ;
  3109                        ;			k_debug_integer("k_exe_device_lo
                    ad_process::SEGMENT CODE LENGTH  :",codeSize);
  3110                        	.line	244
  Sat Jul 10 2021  1:15                                                Page 59


  3111 00:063A: D4 0D        	pei	<L81+codeSize_1
  3112 00:063C: F4 xx xx     	pea	#^L36+544
  3113 00:063F: F4 xx xx     	pea	#<L36+544
  3114 00:0642: 22 xx xx xx  	jsl	~~k_debug_integer
  3115                        ;		}
  3116                        	.line	245
  3117                        ;
  3118                        ;		fr = f_lseek(f,loadModuleHeader.length);
  3119                        L10023:
  3120                        	.line	247
  3121 00:0646: A0 00 00     	ldy	#$0
  3122 00:0649: AD xx xx     	lda	|~~loadModuleHeader+2
  3123 00:064C: 10 01        	bpl	L85
  3124 00:064E: 88           	dey
  3125                        L85:
  3126 00:064F: 85 01        	sta	<R0
  3127 00:0651: 84 03        	sty	<R0+2
  3128 00:0653: D4 03        	pei	<R0+2
  3129 00:0655: D4 01        	pei	<R0
  3130 00:0657: D4 07        	pei	<L81+f_1+2
  3131 00:0659: D4 05        	pei	<L81+f_1
  3132 00:065B: 22 xx xx xx  	jsl	~~f_lseek
  3133 00:065F: 85 09        	sta	<L81+fr_1
  3134                        ;
  3135                        ;		memset((LPVOID)loadModuleHeader.segment_
                    start_addr,0,codeSize);
  3136                        	.line	249
  3137 00:0661: D4 0D        	pei	<L81+codeSize_1
  3138 00:0663: F4 00 00     	pea	#<$0
  3139 00:0666: AD xx xx     	lda	|~~loadModuleHeader+4+2
  3140 00:0669: 48           	pha
  3141 00:066A: AD xx xx     	lda	|~~loadModuleHeader+4
  3142 00:066D: 48           	pha
  3143 00:066E: 22 xx xx xx  	jsl	~~memset
  3144                        ;
  3145                        ;		fr = f_read(f,(LPVOID)loadModuleHeader.s
                    egment_start_addr,codeSize + 4,&read);
  3146                        	.line	251
  3147 00:0672: F4 00 00     	pea	#0
  3148 00:0675: 18           	clc
  3149 00:0676: 7B           	tdc
  3150 00:0677: 69 0B 00     	adc	#<L81+read_1
  3151 00:067A: 48           	pha
  3152 00:067B: 18           	clc
  3153 00:067C: A9 04 00     	lda	#$4
  3154 00:067F: 65 0D        	adc	<L81+codeSize_1
  3155 00:0681: 85 01        	sta	<R0
  3156 00:0683: A9 00 00     	lda	#$0
  3157 00:0686: 65 0F        	adc	<L81+codeSize_1+2
  3158 00:0688: 85 03        	sta	<R0+2
  3159 00:068A: D4 01        	pei	<R0
  3160 00:068C: AD xx xx     	lda	|~~loadModuleHeader+4+2
  3161 00:068F: 48           	pha
  3162 00:0690: AD xx xx     	lda	|~~loadModuleHeader+4
  3163 00:0693: 48           	pha
  3164 00:0694: D4 07        	pei	<L81+f_1+2
  3165 00:0696: D4 05        	pei	<L81+f_1
  3166 00:0698: 22 xx xx xx  	jsl	~~f_read
  Sat Jul 10 2021  1:15                                                Page 60


  3167 00:069C: 85 09        	sta	<L81+fr_1
  3168                        ;		k_debug_integer("k_exe_device_load_proce
                    ss:f_read:fr:",fr);
  3169                        	.line	252
  3170 00:069E: D4 09        	pei	<L81+fr_1
  3171 00:06A0: F4 xx xx     	pea	#^L36+594
  3172 00:06A3: F4 xx xx     	pea	#<L36+594
  3173 00:06A6: 22 xx xx xx  	jsl	~~k_debug_integer
  3174                        ;		k_debug_integer("k_exe_device_load_proce
                    ss::LOAD SEGMENT Size:\r\n",read);
  3175                        	.line	253
  3176 00:06AA: D4 0B        	pei	<L81+read_1
  3177 00:06AC: F4 xx xx     	pea	#^L36+631
  3178 00:06AF: F4 xx xx     	pea	#<L36+631
  3179 00:06B2: 22 xx xx xx  	jsl	~~k_debug_integer
  3180                        ;		if(read)
  3181                        	.line	254
  3182                        ;		{
  3183 00:06B6: A5 0B        	lda	<L81+read_1
  3184 00:06B8: D0 03        	bne	L86
  3185 00:06BA: 82 49 00     	brl	L10024
  3186                        L86:
  3187                        	.line	255
  3188                        ;			k_debug_hex("k_exe_device_load_p
                    rocess::MEMORY CHECK BYTE:",((LPCSTR)loadModuleHeader.segmen
                    t_start_addr)[0]);
  3189                        	.line	256
  3190 00:06BD: AD xx xx     	lda	|~~loadModuleHeader+4
  3191 00:06C0: 85 01        	sta	<R0
  3192 00:06C2: AD xx xx     	lda	|~~loadModuleHeader+4+2
  3193 00:06C5: 85 03        	sta	<R0+2
  3194 00:06C7: A7 01        	lda	[<R0]
  3195 00:06C9: 48           	pha
  3196 00:06CA: F4 xx xx     	pea	#^L36+679
  3197 00:06CD: F4 xx xx     	pea	#<L36+679
  3198 00:06D0: 22 xx xx xx  	jsl	~~k_debug_hex
  3199                        ;			k_debug_pointer("k_exe_device_lo
                    ad_process::LOAD SEGMENT Entry:",(LPVOID)loadModuleHeader.ma
                    in_entry_addr);
  3200                        	.line	257
  3201 00:06D4: AD xx xx     	lda	|~~loadModuleHeader+16+2
  3202 00:06D7: 48           	pha
  3203 00:06D8: AD xx xx     	lda	|~~loadModuleHeader+16
  3204 00:06DB: 48           	pha
  3205 00:06DC: F4 xx xx     	pea	#^L36+725
  3206 00:06DF: F4 xx xx     	pea	#<L36+725
  3207 00:06E2: 22 xx xx xx  	jsl	~~k_debug_pointer
  3208                        ;
  3209                        ;
  3210                        ;			k_debug_byte_array("SEGMENT DATA
                    :",(LPVOID)loadModuleHeader.segment_start_addr,codeSize);
  3211                        	.line	260
  3212 00:06E6: D4 0F        	pei	<L81+codeSize_1+2
  3213 00:06E8: D4 0D        	pei	<L81+codeSize_1
  3214 00:06EA: AD xx xx     	lda	|~~loadModuleHeader+4+2
  3215 00:06ED: 48           	pha
  3216 00:06EE: AD xx xx     	lda	|~~loadModuleHeader+4
  3217 00:06F1: 48           	pha
  Sat Jul 10 2021  1:15                                                Page 61


  3218 00:06F2: F4 xx xx     	pea	#^L36+772
  3219 00:06F5: F4 xx xx     	pea	#<L36+772
  3220 00:06F8: 22 xx xx xx  	jsl	~~k_debug_byte_array
  3221                        ;
  3222                        ;
  3223                        ;			pEntryAddress = (FXProcessProc)l
                    oadModuleHeader.main_entry_addr;
  3224                        	.line	263
  3225 00:06FC: AD xx xx     	lda	|~~loadModuleHeader+16
  3226 00:06FF: 85 11        	sta	<L81+pEntryAddress_1
  3227 00:0701: AD xx xx     	lda	|~~loadModuleHeader+16+2
  3228 00:0704: 85 13        	sta	<L81+pEntryAddress_1+2
  3229                        ;		}
  3230                        	.line	264
  3231                        ;
  3232                        ;	}
  3233                        L10024:
  3234                        	.line	266
  3235                        ;
  3236                        ;	k_mem_deallocate_heap(f);
  3237                        L10022:
  3238                        	.line	268
  3239 00:0706: D4 07        	pei	<L81+f_1+2
  3240 00:0708: D4 05        	pei	<L81+f_1
  3241 00:070A: 22 xx xx xx  	jsl	~~k_mem_deallocate_heap
  3242                        ;
  3243                        ;	return pEntryAddress;
  3244                        	.line	270
  3245 00:070E: A6 13        	ldx	<L81+pEntryAddress_1+2
  3246 00:0710: A5 11        	lda	<L81+pEntryAddress_1
  3247                        L87:
  3248 00:0712: A8           	tay
  3249 00:0713: A5 16        	lda	<L80+2
  3250 00:0715: 85 1A        	sta	<L80+2+4
  3251 00:0717: A5 15        	lda	<L80+1
  3252 00:0719: 85 19        	sta	<L80+1+4
  3253 00:071B: 2B           	pld
  3254 00:071C: 3B           	tsc
  3255 00:071D: 18           	clc
  3256 00:071E: 69 18 00     	adc	#L80+4
  3257 00:0721: 1B           	tcs
  3258 00:0722: 98           	tya
  3259 00:0723: 6B           	rtl
  3260                        ;}
  3261                        	.line	271
  3262                        	.endblock	271
  3263             00000014   L80	equ	20
  3264             00000005   L81	equ	5
  3265                        	ends
  3266                        	efunc
  3267                        	.endfunc	271,5,20
  3268                        	.line	271
  3269                        	data
  3270                        L36:
  3271 00:00CF: 6B 5F 65 78  	db	$6B,$5F,$65,$78,$65,$5F,$64,$65,$76,$69,
                    $63,$65,$5F,$6C,$6F
       00:00D3: 65 5F 64 65 
       00:00D7: 76 69 63 65 
  Sat Jul 10 2021  1:15                                                Page 62


       00:00DB: 5F 6C 6F 
  3272 00:00DE: 61 64 5F 70  	db	$61,$64,$5F,$70,$72,$6F,$63,$65,$73,$73,
                    $3A,$3A,$6C,$6F,$61
       00:00E2: 72 6F 63 65 
       00:00E6: 73 73 3A 3A 
       00:00EA: 6C 6F 61 
  3273 00:00ED: 64 20 6D 6F  	db	$64,$20,$6D,$6F,$64,$75,$6C,$65,$3A,$00,
                    $6B,$5F,$65,$78,$65
       00:00F1: 64 75 6C 65 
       00:00F5: 3A 00 6B 5F 
       00:00F9: 65 78 65 
  3274 00:00FC: 5F 64 65 76  	db	$5F,$64,$65,$76,$69,$63,$65,$5F,$6C,$6F,
                    $61,$64,$5F,$70,$72
       00:0100: 69 63 65 5F 
       00:0104: 6C 6F 61 64 
       00:0108: 5F 70 72 
  3275 00:010B: 6F 63 65 73  	db	$6F,$63,$65,$73,$73,$3A,$53,$45,$47,$4D,
                    $45,$4E,$54,$48,$45
       00:010F: 73 3A 53 45 
       00:0113: 47 4D 45 4E 
       00:0117: 54 48 45 
  3276 00:011A: 41 44 45 52  	db	$41,$44,$45,$52,$3A,$66,$72,$3A,$00,$6B,
                    $5F,$65,$78,$65,$5F
       00:011E: 3A 66 72 3A 
       00:0122: 00 6B 5F 65 
       00:0126: 78 65 5F 
  3277 00:0129: 64 65 76 69  	db	$64,$65,$76,$69,$63,$65,$5F,$6C,$6F,$61,
                    $64,$5F,$70,$72,$6F
       00:012D: 63 65 5F 6C 
       00:0131: 6F 61 64 5F 
       00:0135: 70 72 6F 
  3278 00:0138: 63 65 73 73  	db	$63,$65,$73,$73,$3A,$3A,$73,$69,$7A,$65,
                    $6F,$66,$20,$53,$45
       00:013C: 3A 3A 73 69 
       00:0140: 7A 65 6F 66 
       00:0144: 20 53 45 
  3279 00:0147: 47 4D 45 4E  	db	$47,$4D,$45,$4E,$54,$48,$45,$41,$44,$45,
                    $52,$20,$53,$69,$7A
       00:014B: 54 48 45 41 
       00:014F: 44 45 52 20 
       00:0153: 53 69 7A 
  3280 00:0156: 65 3A 0D 0A  	db	$65,$3A,$0D,$0A,$00,$6B,$5F,$65,$78,$65,
                    $5F,$64,$65,$76,$69
       00:015A: 00 6B 5F 65 
       00:015E: 78 65 5F 64 
       00:0162: 65 76 69 
  3281 00:0165: 63 65 5F 6C  	db	$63,$65,$5F,$6C,$6F,$61,$64,$5F,$70,$72,
                    $6F,$63,$65,$73,$73
       00:0169: 6F 61 64 5F 
       00:016D: 70 72 6F 63 
       00:0171: 65 73 73 
  3282 00:0174: 3A 3A 52 45  	db	$3A,$3A,$52,$45,$41,$44,$20,$53,$45,$47,
                    $4D,$45,$4E,$54,$48
       00:0178: 41 44 20 53 
       00:017C: 45 47 4D 45 
       00:0180: 4E 54 48 
  3283 00:0183: 45 41 44 45  	db	$45,$41,$44,$45,$52,$20,$53,$69,$7A,$65,
                    $3A,$0D,$0A,$00,$6B
  Sat Jul 10 2021  1:15                                                Page 63


       00:0187: 52 20 53 69 
       00:018B: 7A 65 3A 0D 
       00:018F: 0A 00 6B 
  3284 00:0192: 5F 65 78 65  	db	$5F,$65,$78,$65,$5F,$64,$65,$76,$69,$63,
                    $65,$5F,$6C,$6F,$61
       00:0196: 5F 64 65 76 
       00:019A: 69 63 65 5F 
       00:019E: 6C 6F 61 
  3285 00:01A1: 64 5F 70 72  	db	$64,$5F,$70,$72,$6F,$63,$65,$73,$73,$3A,
                    $3A,$53,$45,$47,$4D
       00:01A5: 6F 63 65 73 
       00:01A9: 73 3A 3A 53 
       00:01AD: 45 47 4D 
  3286 00:01B0: 45 4E 54 20  	db	$45,$4E,$54,$20,$56,$45,$52,$53,$49,$4F,
                    $4E,$20,$4D,$41,$4A
       00:01B4: 56 45 52 53 
       00:01B8: 49 4F 4E 20 
       00:01BC: 4D 41 4A 
  3287 00:01BF: 4F 52 3A 00  	db	$4F,$52,$3A,$00,$6B,$5F,$65,$78,$65,$5F,
                    $64,$65,$76,$69,$63
       00:01C3: 6B 5F 65 78 
       00:01C7: 65 5F 64 65 
       00:01CB: 76 69 63 
  3288 00:01CE: 65 5F 6C 6F  	db	$65,$5F,$6C,$6F,$61,$64,$5F,$70,$72,$6F,
                    $63,$65,$73,$73,$3A
       00:01D2: 61 64 5F 70 
       00:01D6: 72 6F 63 65 
       00:01DA: 73 73 3A 
  3289 00:01DD: 3A 53 45 47  	db	$3A,$53,$45,$47,$4D,$45,$4E,$54,$20,$56,
                    $45,$52,$53,$49,$4F
       00:01E1: 4D 45 4E 54 
       00:01E5: 20 56 45 52 
       00:01E9: 53 49 4F 
  3290 00:01EC: 4E 20 4D 41  	db	$4E,$20,$4D,$41,$4A,$4F,$52,$3A,$00,$6B,
                    $5F,$65,$78,$65,$5F
       00:01F0: 4A 4F 52 3A 
       00:01F4: 00 6B 5F 65 
       00:01F8: 78 65 5F 
  3291 00:01FB: 64 65 76 69  	db	$64,$65,$76,$69,$63,$65,$5F,$6C,$6F,$61,
                    $64,$5F,$70,$72,$6F
       00:01FF: 63 65 5F 6C 
       00:0203: 6F 61 64 5F 
       00:0207: 70 72 6F 
  3292 00:020A: 63 65 73 73  	db	$63,$65,$73,$73,$3A,$3A,$53,$45,$47,$4D,
                    $45,$4E,$54,$20,$48
       00:020E: 3A 3A 53 45 
       00:0212: 47 4D 45 4E 
       00:0216: 54 20 48 
  3293 00:0219: 45 41 44 45  	db	$45,$41,$44,$45,$52,$20,$4C,$45,$4E,$47,
                    $54,$48,$3A,$00,$6B
       00:021D: 52 20 4C 45 
       00:0221: 4E 47 54 48 
       00:0225: 3A 00 6B 
  3294 00:0228: 5F 65 78 65  	db	$5F,$65,$78,$65,$5F,$64,$65,$76,$69,$63,
                    $65,$5F,$6C,$6F,$61
       00:022C: 5F 64 65 76 
       00:0230: 69 63 65 5F 
       00:0234: 6C 6F 61 
  Sat Jul 10 2021  1:15                                                Page 64


  3295 00:0237: 64 5F 70 72  	db	$64,$5F,$70,$72,$6F,$63,$65,$73,$73,$3A,
                    $3A,$53,$45,$47,$4D
       00:023B: 6F 63 65 73 
       00:023F: 73 3A 3A 53 
       00:0243: 45 47 4D 
  3296 00:0246: 45 4E 54 20  	db	$45,$4E,$54,$20,$53,$54,$41,$52,$54,$20,
                    $41,$44,$44,$52,$45
       00:024A: 53 54 41 52 
       00:024E: 54 20 41 44 
       00:0252: 44 52 45 
  3297 00:0255: 53 53 3A 00  	db	$53,$53,$3A,$00,$6B,$5F,$65,$78,$65,$5F,
                    $64,$65,$76,$69,$63
       00:0259: 6B 5F 65 78 
       00:025D: 65 5F 64 65 
       00:0261: 76 69 63 
  3298 00:0264: 65 5F 6C 6F  	db	$65,$5F,$6C,$6F,$61,$64,$5F,$70,$72,$6F,
                    $63,$65,$73,$73,$3A
       00:0268: 61 64 5F 70 
       00:026C: 72 6F 63 65 
       00:0270: 73 73 3A 
  3299 00:0273: 3A 53 45 47  	db	$3A,$53,$45,$47,$4D,$45,$4E,$54,$20,$45,
                    $4E,$44,$20,$20,$20
       00:0277: 4D 45 4E 54 
       00:027B: 20 45 4E 44 
       00:027F: 20 20 20 
  3300 00:0282: 41 44 44 52  	db	$41,$44,$44,$52,$45,$53,$53,$3A,$00,$6B,
                    $5F,$65,$78,$65,$5F
       00:0286: 45 53 53 3A 
       00:028A: 00 6B 5F 65 
       00:028E: 78 65 5F 
  3301 00:0291: 64 65 76 69  	db	$64,$65,$76,$69,$63,$65,$5F,$6C,$6F,$61,
                    $64,$5F,$70,$72,$6F
       00:0295: 63 65 5F 6C 
       00:0299: 6F 61 64 5F 
       00:029D: 70 72 6F 
  3302 00:02A0: 63 65 73 73  	db	$63,$65,$73,$73,$3A,$3A,$53,$45,$47,$4D,
                    $45,$4E,$54,$20,$53
       00:02A4: 3A 3A 53 45 
       00:02A8: 47 4D 45 4E 
       00:02AC: 54 20 53 
  3303 00:02AF: 49 5A 45 20  	db	$49,$5A,$45,$20,$20,$20,$20,$20,$20,$20,
                    $20,$20,$3A,$00,$6B
       00:02B3: 20 20 20 20 
       00:02B7: 20 20 20 20 
       00:02BB: 3A 00 6B 
  3304 00:02BE: 5F 65 78 65  	db	$5F,$65,$78,$65,$5F,$64,$65,$76,$69,$63,
                    $65,$5F,$6C,$6F,$61
       00:02C2: 5F 64 65 76 
       00:02C6: 69 63 65 5F 
       00:02CA: 6C 6F 61 
  3305 00:02CD: 64 5F 70 72  	db	$64,$5F,$70,$72,$6F,$63,$65,$73,$73,$3A,
                    $3A,$53,$45,$47,$4D
       00:02D1: 6F 63 65 73 
       00:02D5: 73 3A 3A 53 
       00:02D9: 45 47 4D 
  3306 00:02DC: 45 4E 54 20  	db	$45,$4E,$54,$20,$45,$4E,$54,$52,$59,$20,
                    $41,$44,$44,$52,$45
       00:02E0: 45 4E 54 52 
  Sat Jul 10 2021  1:15                                                Page 65


       00:02E4: 59 20 41 44 
       00:02E8: 44 52 45 
  3307 00:02EB: 53 53 3A 00  	db	$53,$53,$3A,$00,$6B,$5F,$65,$78,$65,$5F,
                    $64,$65,$76,$69,$63
       00:02EF: 6B 5F 65 78 
       00:02F3: 65 5F 64 65 
       00:02F7: 76 69 63 
  3308 00:02FA: 65 5F 6C 6F  	db	$65,$5F,$6C,$6F,$61,$64,$5F,$70,$72,$6F,
                    $63,$65,$73,$73,$3A
       00:02FE: 61 64 5F 70 
       00:0302: 72 6F 63 65 
       00:0306: 73 73 3A 
  3309 00:0309: 3A 53 45 47  	db	$3A,$53,$45,$47,$4D,$45,$4E,$54,$20,$43,
                    $4F,$44,$45,$20,$4C
       00:030D: 4D 45 4E 54 
       00:0311: 20 43 4F 44 
       00:0315: 45 20 4C 
  3310 00:0318: 45 4E 47 54  	db	$45,$4E,$47,$54,$48,$20,$20,$3A,$00,$6B,
                    $5F,$65,$78,$65,$5F
       00:031C: 48 20 20 3A 
       00:0320: 00 6B 5F 65 
       00:0324: 78 65 5F 
  3311 00:0327: 64 65 76 69  	db	$64,$65,$76,$69,$63,$65,$5F,$6C,$6F,$61,
                    $64,$5F,$70,$72,$6F
       00:032B: 63 65 5F 6C 
       00:032F: 6F 61 64 5F 
       00:0333: 70 72 6F 
  3312 00:0336: 63 65 73 73  	db	$63,$65,$73,$73,$3A,$66,$5F,$72,$65,$61,
                    $64,$3A,$66,$72,$3A
       00:033A: 3A 66 5F 72 
       00:033E: 65 61 64 3A 
       00:0342: 66 72 3A 
  3313 00:0345: 00 6B 5F 65  	db	$00,$6B,$5F,$65,$78,$65,$5F,$64,$65,$76,
                    $69,$63,$65,$5F,$6C
       00:0349: 78 65 5F 64 
       00:034D: 65 76 69 63 
       00:0351: 65 5F 6C 
  3314 00:0354: 6F 61 64 5F  	db	$6F,$61,$64,$5F,$70,$72,$6F,$63,$65,$73,
                    $73,$3A,$3A,$4C,$4F
       00:0358: 70 72 6F 63 
       00:035C: 65 73 73 3A 
       00:0360: 3A 4C 4F 
  3315 00:0363: 41 44 20 53  	db	$41,$44,$20,$53,$45,$47,$4D,$45,$4E,$54,
                    $20,$53,$69,$7A,$65
       00:0367: 45 47 4D 45 
       00:036B: 4E 54 20 53 
       00:036F: 69 7A 65 
  3316 00:0372: 3A 0D 0A 00  	db	$3A,$0D,$0A,$00,$6B,$5F,$65,$78,$65,$5F,
                    $64,$65,$76,$69,$63
       00:0376: 6B 5F 65 78 
       00:037A: 65 5F 64 65 
       00:037E: 76 69 63 
  3317 00:0381: 65 5F 6C 6F  	db	$65,$5F,$6C,$6F,$61,$64,$5F,$70,$72,$6F,
                    $63,$65,$73,$73,$3A
       00:0385: 61 64 5F 70 
       00:0389: 72 6F 63 65 
       00:038D: 73 73 3A 
  3318 00:0390: 3A 4D 45 4D  	db	$3A,$4D,$45,$4D,$4F,$52,$59,$20,$43,$48,
  Sat Jul 10 2021  1:15                                                Page 66


                    $45,$43,$4B,$20,$42
       00:0394: 4F 52 59 20 
       00:0398: 43 48 45 43 
       00:039C: 4B 20 42 
  3319 00:039F: 59 54 45 3A  	db	$59,$54,$45,$3A,$00,$6B,$5F,$65,$78,$65,
                    $5F,$64,$65,$76,$69
       00:03A3: 00 6B 5F 65 
       00:03A7: 78 65 5F 64 
       00:03AB: 65 76 69 
  3320 00:03AE: 63 65 5F 6C  	db	$63,$65,$5F,$6C,$6F,$61,$64,$5F,$70,$72,
                    $6F,$63,$65,$73,$73
       00:03B2: 6F 61 64 5F 
       00:03B6: 70 72 6F 63 
       00:03BA: 65 73 73 
  3321 00:03BD: 3A 3A 4C 4F  	db	$3A,$3A,$4C,$4F,$41,$44,$20,$53,$45,$47,
                    $4D,$45,$4E,$54,$20
       00:03C1: 41 44 20 53 
       00:03C5: 45 47 4D 45 
       00:03C9: 4E 54 20 
  3322 00:03CC: 45 6E 74 72  	db	$45,$6E,$74,$72,$79,$3A,$00,$53,$45,$47,
                    $4D,$45,$4E,$54,$20
       00:03D0: 79 3A 00 53 
       00:03D4: 45 47 4D 45 
       00:03D8: 4E 54 20 
  3323 00:03DB: 44 41 54 41  	db	$44,$41,$54,$41,$3A,$00
       00:03DF: 3A 00 
  3324 00:03E1:              	ends
  3325                        ;
  3326                        ;PFXPROCESS k_exec_launchProcess(LPCHAR commandLin
                    e)
  3327                        ;{
  3328                        	.line	273
  3329                        	.line	274
  3330                        	code
  3331                        	xdef	~~k_exec_launchProcess
  3332                        	func
  3333                        	.function	274
  3334                        ~~k_exec_launchProcess:
  3335                        	longa	on
  3336                        	longi	on
  3337 00:0724: 3B           	tsc
  3338 00:0725: 38           	sec
  3339 00:0726: E9 08 00     	sbc	#L89
  3340 00:0729: 1B           	tcs
  3341 00:072A: 0B           	phd
  3342 00:072B: 5B           	tcd
  3343             00000004   commandLine_0	set	4
  3344                        	.block	274
  3345                        ;	PFXPROCESS process = NULL;
  3346                        ;	FXProcessProc processProc = NULL;
  3347                        ;
  3348                        ;	if(commandLine)
  3349             00000000   process_1	set	0
  3350             00000004   processProc_1	set	4
  3351                        	.sym	process,0,138,1,32,20
  3352                        	.sym	processProc,4,641,1,32
  3353                        	.sym	commandLine,4,142,6,32
  3354 00:072C: 64 01        	stz	<L90+process_1
  Sat Jul 10 2021  1:15                                                Page 67


  3355 00:072E: 64 03        	stz	<L90+process_1+2
  3356 00:0730: 64 05        	stz	<L90+processProc_1
  3357 00:0732: 64 07        	stz	<L90+processProc_1+2
  3358                        	.line	278
  3359                        ;	{
  3360 00:0734: A5 0C        	lda	<L89+commandLine_0
  3361 00:0736: 05 0E        	ora	<L89+commandLine_0+2
  3362 00:0738: D0 03        	bne	L92
  3363 00:073A: 82 EE 00     	brl	L10025
  3364                        L92:
  3365                        	.line	279
  3366                        ;		k_debug_strings("k_exec_launchProcess:",
                    commandLine);
  3367                        	.line	280
  3368 00:073D: D4 0E        	pei	<L89+commandLine_0+2
  3369 00:073F: D4 0C        	pei	<L89+commandLine_0
  3370 00:0741: F4 xx xx     	pea	#^L88
  3371 00:0744: F4 xx xx     	pea	#<L88
  3372 00:0747: 22 xx xx xx  	jsl	~~k_debug_strings
  3373                        ;
  3374                        ;		if(commandLine[0] == '@')
  3375                        	.line	282
  3376                        ;		{
  3377 00:074B: E2 20        	sep	#$20
  3378                        	longa	off
  3379 00:074D: A7 0C        	lda	[<L89+commandLine_0]
  3380 00:074F: C9 40        	cmp	#<$40
  3381 00:0751: C2 20        	rep	#$20
  3382                        	longa	on
  3383 00:0753: F0 03        	beq	L93
  3384 00:0755: 82 A5 00     	brl	L10026
  3385                        L93:
  3386                        	.line	283
  3387                        ;			if(strcmp(commandLine,"@/console
                    ") == 0)
  3388                        	.line	284
  3389                        ;			{
  3390 00:0758: F4 xx xx     	pea	#^L88+22
  3391 00:075B: F4 xx xx     	pea	#<L88+22
  3392 00:075E: D4 0E        	pei	<L89+commandLine_0+2
  3393 00:0760: D4 0C        	pei	<L89+commandLine_0
  3394 00:0762: 22 xx xx xx  	jsl	~~strcmp
  3395 00:0766: AA           	tax
  3396 00:0767: F0 03        	beq	L94
  3397 00:0769: 82 0D 00     	brl	L10027
  3398                        L94:
  3399                        	.line	285
  3400                        ;				processProc = DefConsole
                    Proc;
  3401                        	.line	286
  3402 00:076C: A9 xx xx     	lda	#<~~DefConsoleProc
  3403 00:076F: 85 05        	sta	<L90+processProc_1
  3404 00:0771: A9 xx xx     	lda	#^~~DefConsoleProc
  3405 00:0774: 85 07        	sta	<L90+processProc_1+2
  3406                        ;			}
  3407                        	.line	287
  3408                        ;			else if(strcmp(commandLine,"@/de
                    sktop") == 0)
  Sat Jul 10 2021  1:15                                                Page 68


  3409 00:0776: 82 81 00     	brl	L10028
  3410                        L10027:
  3411                        	.line	288
  3412                        ;			{
  3413 00:0779: F4 xx xx     	pea	#^L88+32
  3414 00:077C: F4 xx xx     	pea	#<L88+32
  3415 00:077F: D4 0E        	pei	<L89+commandLine_0+2
  3416 00:0781: D4 0C        	pei	<L89+commandLine_0
  3417 00:0783: 22 xx xx xx  	jsl	~~strcmp
  3418 00:0787: AA           	tax
  3419 00:0788: F0 03        	beq	L95
  3420 00:078A: 82 0D 00     	brl	L10029
  3421                        L95:
  3422                        	.line	289
  3423                        ;				processProc = DesktopEnv
                    ironmentProc;
  3424                        	.line	290
  3425 00:078D: A9 xx xx     	lda	#<~~DesktopEnvironmentProc
  3426 00:0790: 85 05        	sta	<L90+processProc_1
  3427 00:0792: A9 xx xx     	lda	#^~~DesktopEnvironmentProc
  3428 00:0795: 85 07        	sta	<L90+processProc_1+2
  3429                        ;			}
  3430                        	.line	291
  3431                        ;			else if(strcmp(commandLine,"@/id
                    le") == 0)
  3432 00:0797: 82 60 00     	brl	L10030
  3433                        L10029:
  3434                        	.line	292
  3435                        ;			{
  3436 00:079A: F4 xx xx     	pea	#^L88+42
  3437 00:079D: F4 xx xx     	pea	#<L88+42
  3438 00:07A0: D4 0E        	pei	<L89+commandLine_0+2
  3439 00:07A2: D4 0C        	pei	<L89+commandLine_0
  3440 00:07A4: 22 xx xx xx  	jsl	~~strcmp
  3441 00:07A8: AA           	tax
  3442 00:07A9: F0 03        	beq	L96
  3443 00:07AB: 82 0D 00     	brl	L10031
  3444                        L96:
  3445                        	.line	293
  3446                        ;				processProc = IdleProc;
  3447                        	.line	294
  3448 00:07AE: A9 xx xx     	lda	#<~~IdleProc
  3449 00:07B1: 85 05        	sta	<L90+processProc_1
  3450 00:07B3: A9 xx xx     	lda	#^~~IdleProc
  3451 00:07B6: 85 07        	sta	<L90+processProc_1+2
  3452                        ;			}
  3453                        	.line	295
  3454                        ;			else if(strcmp(commandLine,"@/ca
                    lculator") == 0)
  3455 00:07B8: 82 3F 00     	brl	L10032
  3456                        L10031:
  3457                        	.line	296
  3458                        ;			{
  3459 00:07BB: F4 xx xx     	pea	#^L88+49
  3460 00:07BE: F4 xx xx     	pea	#<L88+49
  3461 00:07C1: D4 0E        	pei	<L89+commandLine_0+2
  3462 00:07C3: D4 0C        	pei	<L89+commandLine_0
  3463 00:07C5: 22 xx xx xx  	jsl	~~strcmp
  Sat Jul 10 2021  1:15                                                Page 69


  3464 00:07C9: AA           	tax
  3465 00:07CA: F0 03        	beq	L97
  3466 00:07CC: 82 0D 00     	brl	L10033
  3467                        L97:
  3468                        	.line	297
  3469                        ;				processProc = FXCalculat
                    or;
  3470                        	.line	298
  3471 00:07CF: A9 xx xx     	lda	#<~~FXCalculator
  3472 00:07D2: 85 05        	sta	<L90+processProc_1
  3473 00:07D4: A9 xx xx     	lda	#^~~FXCalculator
  3474 00:07D7: 85 07        	sta	<L90+processProc_1+2
  3475                        ;			}
  3476                        	.line	299
  3477                        ;			else if(strcmp(commandLine,"@/pa
                    lette") == 0)
  3478 00:07D9: 82 1E 00     	brl	L10034
  3479                        L10033:
  3480                        	.line	300
  3481                        ;			{
  3482 00:07DC: F4 xx xx     	pea	#^L88+62
  3483 00:07DF: F4 xx xx     	pea	#<L88+62
  3484 00:07E2: D4 0E        	pei	<L89+commandLine_0+2
  3485 00:07E4: D4 0C        	pei	<L89+commandLine_0
  3486 00:07E6: 22 xx xx xx  	jsl	~~strcmp
  3487 00:07EA: AA           	tax
  3488 00:07EB: F0 03        	beq	L98
  3489 00:07ED: 82 0A 00     	brl	L10035
  3490                        L98:
  3491                        	.line	301
  3492                        ;				processProc = FXPaletteA
                    ccessory;
  3493                        	.line	302
  3494 00:07F0: A9 xx xx     	lda	#<~~FXPaletteAccessory
  3495 00:07F3: 85 05        	sta	<L90+processProc_1
  3496 00:07F5: A9 xx xx     	lda	#^~~FXPaletteAccessory
  3497 00:07F8: 85 07        	sta	<L90+processProc_1+2
  3498                        ;			}
  3499                        	.line	303
  3500                        ;		}
  3501                        L10035:
  3502                        L10034:
  3503                        L10032:
  3504                        L10030:
  3505                        L10028:
  3506                        	.line	304
  3507                        ;		else
  3508 00:07FA: 82 0C 00     	brl	L10036
  3509                        L10026:
  3510                        ;		{
  3511                        	.line	306
  3512                        ;			processProc = k_exe_device_load_
                    process(commandLine);
  3513                        	.line	307
  3514 00:07FD: D4 0E        	pei	<L89+commandLine_0+2
  3515 00:07FF: D4 0C        	pei	<L89+commandLine_0
  3516 00:0801: 22 xx xx xx  	jsl	~~k_exe_device_load_process
  3517 00:0805: 85 05        	sta	<L90+processProc_1
  Sat Jul 10 2021  1:15                                                Page 70


  3518 00:0807: 86 07        	stx	<L90+processProc_1+2
  3519                        ;
  3520                        ;			//processProc=((FXProcessProc)0x
                    090000);
  3521                        ;		}
  3522                        	.line	310
  3523                        L10036:
  3524                        ;
  3525                        ;		if(processProc)
  3526                        	.line	312
  3527                        ;			process = k_exec_createProcess(c
                    ommandLine,processProc,NULL);
  3528 00:0809: A5 05        	lda	<L90+processProc_1
  3529 00:080B: 05 07        	ora	<L90+processProc_1+2
  3530 00:080D: D0 03        	bne	L99
  3531 00:080F: 82 16 00     	brl	L10037
  3532                        L99:
  3533                        	.line	313
  3534 00:0812: F4 00 00     	pea	#^$0
  3535 00:0815: F4 00 00     	pea	#<$0
  3536 00:0818: D4 07        	pei	<L90+processProc_1+2
  3537 00:081A: D4 05        	pei	<L90+processProc_1
  3538 00:081C: D4 0E        	pei	<L89+commandLine_0+2
  3539 00:081E: D4 0C        	pei	<L89+commandLine_0
  3540 00:0820: 22 xx xx xx  	jsl	~~k_exec_createProcess
  3541 00:0824: 85 01        	sta	<L90+process_1
  3542 00:0826: 86 03        	stx	<L90+process_1+2
  3543                        ;	}
  3544                        L10037:
  3545                        	.line	314
  3546                        ;	else
  3547 00:0828: 82 00 00     	brl	L10038
  3548                        L10025:
  3549                        ;	{
  3550                        	.line	316
  3551                        ;
  3552                        ;	}
  3553                        	.line	318
  3554                        L10038:
  3555                        ;
  3556                        ;
  3557                        ;	return process;
  3558                        	.line	321
  3559 00:082B: A6 03        	ldx	<L90+process_1+2
  3560 00:082D: A5 01        	lda	<L90+process_1
  3561                        L100:
  3562 00:082F: A8           	tay
  3563 00:0830: A5 0A        	lda	<L89+2
  3564 00:0832: 85 0E        	sta	<L89+2+4
  3565 00:0834: A5 09        	lda	<L89+1
  3566 00:0836: 85 0D        	sta	<L89+1+4
  3567 00:0838: 2B           	pld
  3568 00:0839: 3B           	tsc
  3569 00:083A: 18           	clc
  3570 00:083B: 69 0C 00     	adc	#L89+4
  3571 00:083E: 1B           	tcs
  3572 00:083F: 98           	tya
  3573 00:0840: 6B           	rtl
  Sat Jul 10 2021  1:15                                                Page 71


  3574                        ;}
  3575                        	.line	322
  3576                        	.endblock	322
  3577             00000008   L89	equ	8
  3578             00000001   L90	equ	1
  3579                        	ends
  3580                        	efunc
  3581                        	.endfunc	322,1,8
  3582                        	.line	322
  3583                        	data
  3584                        L88:
  3585 00:03E1: 6B 5F 65 78  	db	$6B,$5F,$65,$78,$65,$63,$5F,$6C,$61,$75,
                    $6E,$63,$68,$50,$72
       00:03E5: 65 63 5F 6C 
       00:03E9: 61 75 6E 63 
       00:03ED: 68 50 72 
  3586 00:03F0: 6F 63 65 73  	db	$6F,$63,$65,$73,$73,$3A,$00,$40,$2F,$63,
                    $6F,$6E,$73,$6F,$6C
       00:03F4: 73 3A 00 40 
       00:03F8: 2F 63 6F 6E 
       00:03FC: 73 6F 6C 
  3587 00:03FF: 65 00 40 2F  	db	$65,$00,$40,$2F,$64,$65,$73,$6B,$74,$6F,
                    $70,$00,$40,$2F,$69
       00:0403: 64 65 73 6B 
       00:0407: 74 6F 70 00 
       00:040B: 40 2F 69 
  3588 00:040E: 64 6C 65 00  	db	$64,$6C,$65,$00,$40,$2F,$63,$61,$6C,$63,
                    $75,$6C,$61,$74,$6F
       00:0412: 40 2F 63 61 
       00:0416: 6C 63 75 6C 
       00:041A: 61 74 6F 
  3589 00:041D: 72 00 40 2F  	db	$72,$00,$40,$2F,$70,$61,$6C,$65,$74,$74,
                    $65,$00
       00:0421: 70 61 6C 65 
       00:0425: 74 74 65 00 
  3590 00:0429:              	ends
  3591                        ;
  3592                        ;PFXPROCESS k_exec_createProcess(LPCHAR commandLin
                    e,FXProcessProc processProc,LPVOID startupArgs)
  3593                        ;{
  3594                        	.line	324
  3595                        	.line	325
  3596                        	code
  3597                        	xdef	~~k_exec_createProcess
  3598                        	func
  3599                        	.function	325
  3600                        ~~k_exec_createProcess:
  3601                        	longa	on
  3602                        	longi	on
  3603 00:0841: 3B           	tsc
  3604 00:0842: 38           	sec
  3605 00:0843: E9 0C 00     	sbc	#L102
  3606 00:0846: 1B           	tcs
  3607 00:0847: 0B           	phd
  3608 00:0848: 5B           	tcd
  3609             00000004   commandLine_0	set	4
  3610             00000008   processProc_0	set	8
  3611             0000000C   startupArgs_0	set	12
  Sat Jul 10 2021  1:15                                                Page 72


  3612                        	.block	325
  3613                        ;	PFXPROCESS process = NULL;
  3614                        ;	PROCESS_ID processId = INVALID_HANDLE;
  3615                        ;
  3616                        ;	if(!processProc)
  3617             00000000   process_1	set	0
  3618             00000004   processId_1	set	4
  3619                        	.sym	process,0,138,1,32,20
  3620                        	.sym	processId,4,18,1,32
  3621                        	.sym	commandLine,4,142,6,32
  3622                        	.sym	processProc,8,641,6,32
  3623                        	.sym	startupArgs,12,129,6,32
  3624 00:0849: 64 05        	stz	<L103+process_1
  3625 00:084B: 64 07        	stz	<L103+process_1+2
  3626 00:084D: A9 FF FF     	lda	#$ffff
  3627 00:0850: 85 09        	sta	<L103+processId_1
  3628 00:0852: A9 FF FF     	lda	#$ffff
  3629 00:0855: 85 0B        	sta	<L103+processId_1+2
  3630                        	.line	329
  3631                        ;		return NULL;
  3632 00:0857: A5 14        	lda	<L102+processProc_0
  3633 00:0859: 05 16        	ora	<L102+processProc_0+2
  3634 00:085B: F0 03        	beq	L105
  3635 00:085D: 82 19 00     	brl	L10039
  3636                        L105:
  3637                        	.line	330
  3638 00:0860: A9 00 00     	lda	#$0
  3639 00:0863: AA           	tax
  3640 00:0864: A9 00 00     	lda	#$0
  3641                        L106:
  3642 00:0867: A8           	tay
  3643 00:0868: A5 0E        	lda	<L102+2
  3644 00:086A: 85 1A        	sta	<L102+2+12
  3645 00:086C: A5 0D        	lda	<L102+1
  3646 00:086E: 85 19        	sta	<L102+1+12
  3647 00:0870: 2B           	pld
  3648 00:0871: 3B           	tsc
  3649 00:0872: 18           	clc
  3650 00:0873: 69 18 00     	adc	#L102+12
  3651 00:0876: 1B           	tcs
  3652 00:0877: 98           	tya
  3653 00:0878: 6B           	rtl
  3654                        ;
  3655                        ;	k_debug_pointer("k_exec_createProcess::processPr
                    oc:",processProc);
  3656                        L10039:
  3657                        	.line	332
  3658 00:0879: D4 16        	pei	<L102+processProc_0+2
  3659 00:087B: D4 14        	pei	<L102+processProc_0
  3660 00:087D: F4 xx xx     	pea	#^L101
  3661 00:0880: F4 xx xx     	pea	#<L101
  3662 00:0883: 22 xx xx xx  	jsl	~~k_debug_pointer
  3663                        ;
  3664                        ;	process = (PFXPROCESS)k_mem_allocate_heap(sizeof
                    (FXPROCESS));
  3665                        	.line	334
  3666 00:0887: F4 64 00     	pea	#<$64
  3667 00:088A: 22 xx xx xx  	jsl	~~k_mem_allocate_heap
  Sat Jul 10 2021  1:15                                                Page 73


  3668 00:088E: 85 05        	sta	<L103+process_1
  3669 00:0890: 86 07        	stx	<L103+process_1+2
  3670                        ;	if(process)
  3671                        	.line	335
  3672                        ;	{
  3673 00:0892: A5 05        	lda	<L103+process_1
  3674 00:0894: 05 07        	ora	<L103+process_1+2
  3675 00:0896: D0 03        	bne	L107
  3676 00:0898: 82 02 01     	brl	L10040
  3677                        L107:
  3678                        	.line	336
  3679                        ;		memset(process,0,sizeof(FXPROCESS));
  3680                        	.line	337
  3681 00:089B: F4 64 00     	pea	#<$64
  3682 00:089E: F4 00 00     	pea	#<$0
  3683 00:08A1: D4 07        	pei	<L103+process_1+2
  3684 00:08A3: D4 05        	pei	<L103+process_1
  3685 00:08A5: 22 xx xx xx  	jsl	~~memset
  3686                        ;		process->cbSize = sizeof(FXPROCESS);
  3687                        	.line	338
  3688 00:08A9: A9 64 00     	lda	#$64
  3689 00:08AC: 87 05        	sta	[<L103+process_1]
  3690                        ;		if(commandLine!=NULL)
  3691                        	.line	339
  3692                        ;		{
  3693 00:08AE: A5 10        	lda	<L102+commandLine_0
  3694 00:08B0: 05 12        	ora	<L102+commandLine_0+2
  3695 00:08B2: D0 03        	bne	L108
  3696 00:08B4: 82 1A 00     	brl	L10041
  3697                        L108:
  3698                        	.line	340
  3699                        ;			process->commandLine = k_string_
                    copy_string(commandLine);
  3700                        	.line	341
  3701 00:08B7: D4 12        	pei	<L102+commandLine_0+2
  3702 00:08B9: D4 10        	pei	<L102+commandLine_0
  3703 00:08BB: 22 xx xx xx  	jsl	~~k_string_copy_string
  3704 00:08BF: 85 01        	sta	<R0
  3705 00:08C1: 86 03        	stx	<R0+2
  3706 00:08C3: A5 01        	lda	<R0
  3707 00:08C5: A0 33 00     	ldy	#$33
  3708 00:08C8: 97 05        	sta	[<L103+process_1],Y
  3709 00:08CA: A5 03        	lda	<R0+2
  3710 00:08CC: A0 35 00     	ldy	#$35
  3711 00:08CF: 97 05        	sta	[<L103+process_1],Y
  3712                        ;		}
  3713                        	.line	342
  3714                        ;		//processId = k_exec_nextprocess(process
                    );
  3715                        ;		process->procId = k_exec_nextprocess(pro
                    cess);
  3716                        L10041:
  3717                        	.line	344
  3718 00:08D1: D4 07        	pei	<L103+process_1+2
  3719 00:08D3: D4 05        	pei	<L103+process_1
  3720 00:08D5: 22 xx xx xx  	jsl	~~k_exec_nextprocess
  3721 00:08D9: 85 01        	sta	<R0
  3722 00:08DB: 86 03        	stx	<R0+2
  Sat Jul 10 2021  1:15                                                Page 74


  3723 00:08DD: A5 01        	lda	<R0
  3724 00:08DF: A0 02 00     	ldy	#$2
  3725 00:08E2: 97 05        	sta	[<L103+process_1],Y
  3726 00:08E4: A5 03        	lda	<R0+2
  3727 00:08E6: A0 04 00     	ldy	#$4
  3728 00:08E9: 97 05        	sta	[<L103+process_1],Y
  3729                        ;		if(process->procId == INVALID_HANDLE)
  3730                        	.line	345
  3731                        ;		{
  3732 00:08EB: A0 02 00     	ldy	#$2
  3733 00:08EE: B7 05        	lda	[<L103+process_1],Y
  3734 00:08F0: C9 FF FF     	cmp	#<$ffffffff
  3735 00:08F3: D0 08        	bne	L109
  3736 00:08F5: A0 04 00     	ldy	#$4
  3737 00:08F8: B7 05        	lda	[<L103+process_1],Y
  3738 00:08FA: C9 FF FF     	cmp	#^$ffffffff
  3739                        L109:
  3740 00:08FD: F0 03        	beq	L110
  3741 00:08FF: 82 1B 00     	brl	L10042
  3742                        L110:
  3743                        	.line	346
  3744                        ;			k_exec_throw_exception(THIS_MODU
                    LE,0x000A0000,"Kernel returned invalid process id.",-1);
  3745                        	.line	347
  3746 00:0902: F4 FF FF     	pea	#<$ffffffff
  3747 00:0905: F4 xx xx     	pea	#^L101+35
  3748 00:0908: F4 xx xx     	pea	#<L101+35
  3749 00:090B: F4 0A 00     	pea	#^$a0000
  3750 00:090E: F4 00 00     	pea	#<$a0000
  3751 00:0911: AD xx xx     	lda	|~~THIS_MODULE+2
  3752 00:0914: 48           	pha
  3753 00:0915: AD xx xx     	lda	|~~THIS_MODULE
  3754 00:0918: 48           	pha
  3755 00:0919: 22 xx xx xx  	jsl	~~k_exec_throw_exception
  3756                        ;		}
  3757                        	.line	348
  3758                        ;		process->parentId = 0L;
  3759                        L10042:
  3760                        	.line	349
  3761 00:091D: A9 00 00     	lda	#$0
  3762 00:0920: A0 06 00     	ldy	#$6
  3763 00:0923: 97 05        	sta	[<L103+process_1],Y
  3764 00:0925: A9 00 00     	lda	#$0
  3765 00:0928: A0 08 00     	ldy	#$8
  3766 00:092B: 97 05        	sta	[<L103+process_1],Y
  3767                        ;		if(k_exec_get_current_process())
  3768                        	.line	350
  3769                        ;		{
  3770 00:092D: 22 xx xx xx  	jsl	~~k_exec_get_current_process
  3771 00:0931: 85 01        	sta	<R0
  3772 00:0933: 86 03        	stx	<R0+2
  3773 00:0935: A5 01        	lda	<R0
  3774 00:0937: 05 03        	ora	<R0+2
  3775 00:0939: D0 03        	bne	L111
  3776 00:093B: 82 30 00     	brl	L10043
  3777                        L111:
  3778                        	.line	351
  3779                        ;			k_debug_pointer("k_exec_createPr
  Sat Jul 10 2021  1:15                                                Page 75


                    ocess::k_exec_get_current_process:",k_exec_get_current_proce
                    ss());
  3780                        	.line	352
  3781 00:093E: 22 xx xx xx  	jsl	~~k_exec_get_current_process
  3782 00:0942: 85 01        	sta	<R0
  3783 00:0944: 86 03        	stx	<R0+2
  3784 00:0946: DA           	phx
  3785 00:0947: 48           	pha
  3786 00:0948: F4 xx xx     	pea	#^L101+71
  3787 00:094B: F4 xx xx     	pea	#<L101+71
  3788 00:094E: 22 xx xx xx  	jsl	~~k_debug_pointer
  3789                        ;			process->parentId = k_exec_get_c
                    urrent_process()->procId;
  3790                        	.line	353
  3791 00:0952: 22 xx xx xx  	jsl	~~k_exec_get_current_process
  3792 00:0956: 85 01        	sta	<R0
  3793 00:0958: 86 03        	stx	<R0+2
  3794 00:095A: A0 02 00     	ldy	#$2
  3795 00:095D: B7 01        	lda	[<R0],Y
  3796 00:095F: A0 06 00     	ldy	#$6
  3797 00:0962: 97 05        	sta	[<L103+process_1],Y
  3798 00:0964: A0 04 00     	ldy	#$4
  3799 00:0967: B7 01        	lda	[<R0],Y
  3800 00:0969: A0 08 00     	ldy	#$8
  3801 00:096C: 97 05        	sta	[<L103+process_1],Y
  3802                        ;		}
  3803                        	.line	354
  3804                        ;		//process->execProc = k_nodelist_create(
                    PFXNODE_PROCEDURE_TYPE,NULL,processProc,NULL,NULL);
  3805                        ;		process->execProc = processProc;
  3806                        L10043:
  3807                        	.line	356
  3808 00:096E: A5 14        	lda	<L102+processProc_0
  3809 00:0970: A0 5C 00     	ldy	#$5c
  3810 00:0973: 97 05        	sta	[<L103+process_1],Y
  3811 00:0975: A5 16        	lda	<L102+processProc_0+2
  3812 00:0977: A0 5E 00     	ldy	#$5e
  3813 00:097A: 97 05        	sta	[<L103+process_1],Y
  3814                        ;		process->status = PROCESS_STATUS_READY;
  3815                        	.line	357
  3816 00:097C: A9 F0 00     	lda	#$f0
  3817 00:097F: A0 10 00     	ldy	#$10
  3818 00:0982: 97 05        	sta	[<L103+process_1],Y
  3819                        ;		process->foregroundActive = FALSE;
  3820                        	.line	358
  3821 00:0984: E2 20        	sep	#$20
  3822                        	longa	off
  3823 00:0986: A9 00        	lda	#$0
  3824 00:0988: A0 12 00     	ldy	#$12
  3825 00:098B: 97 05        	sta	[<L103+process_1],Y
  3826 00:098D: C2 20        	rep	#$20
  3827                        	longa	on
  3828                        ;		process->startupArgs = startupArgs;
  3829                        	.line	359
  3830 00:098F: A5 18        	lda	<L102+startupArgs_0
  3831 00:0991: A0 60 00     	ldy	#$60
  3832 00:0994: 97 05        	sta	[<L103+process_1],Y
  3833 00:0996: A5 1A        	lda	<L102+startupArgs_0+2
  Sat Jul 10 2021  1:15                                                Page 76


  3834 00:0998: A0 62 00     	ldy	#$62
  3835 00:099B: 97 05        	sta	[<L103+process_1],Y
  3836                        ;		//k_nodelist_naddtolist(_k_execManager_P
                    rocesssList,NL_TYPE_PROCESS,process->procId,process);
  3837                        ;
  3838                        ;		//k_debug_nodelist_list(_k_execManager_P
                    rocesssList,debug_process_node);
  3839                        ;
  3840                        ;		//k_heap_integrity_check();
  3841                        ;
  3842                        ;	}
  3843                        	.line	366
  3844                        ;	return process;
  3845                        L10040:
  3846                        	.line	367
  3847 00:099D: A6 07        	ldx	<L103+process_1+2
  3848 00:099F: A5 05        	lda	<L103+process_1
  3849 00:09A1: 82 C3 FE     	brl	L106
  3850                        ;}
  3851                        	.line	368
  3852                        	.endblock	368
  3853             0000000C   L102	equ	12
  3854             00000005   L103	equ	5
  3855                        	ends
  3856                        	efunc
  3857                        	.endfunc	368,5,12
  3858                        	.line	368
  3859                        	data
  3860                        L101:
  3861 00:0429: 6B 5F 65 78  	db	$6B,$5F,$65,$78,$65,$63,$5F,$63,$72,$65,
                    $61,$74,$65,$50,$72
       00:042D: 65 63 5F 63 
       00:0431: 72 65 61 74 
       00:0435: 65 50 72 
  3862 00:0438: 6F 63 65 73  	db	$6F,$63,$65,$73,$73,$3A,$3A,$70,$72,$6F,
                    $63,$65,$73,$73,$50
       00:043C: 73 3A 3A 70 
       00:0440: 72 6F 63 65 
       00:0444: 73 73 50 
  3863 00:0447: 72 6F 63 3A  	db	$72,$6F,$63,$3A,$00,$4B,$65,$72,$6E,$65,
                    $6C,$20,$72,$65,$74
       00:044B: 00 4B 65 72 
       00:044F: 6E 65 6C 20 
       00:0453: 72 65 74 
  3864 00:0456: 75 72 6E 65  	db	$75,$72,$6E,$65,$64,$20,$69,$6E,$76,$61,
                    $6C,$69,$64,$20,$70
       00:045A: 64 20 69 6E 
       00:045E: 76 61 6C 69 
       00:0462: 64 20 70 
  3865 00:0465: 72 6F 63 65  	db	$72,$6F,$63,$65,$73,$73,$20,$69,$64,$2E,
                    $00,$6B,$5F,$65,$78
       00:0469: 73 73 20 69 
       00:046D: 64 2E 00 6B 
       00:0471: 5F 65 78 
  3866 00:0474: 65 63 5F 63  	db	$65,$63,$5F,$63,$72,$65,$61,$74,$65,$50,
                    $72,$6F,$63,$65,$73
       00:0478: 72 65 61 74 
       00:047C: 65 50 72 6F 
  Sat Jul 10 2021  1:15                                                Page 77


       00:0480: 63 65 73 
  3867 00:0483: 73 3A 3A 6B  	db	$73,$3A,$3A,$6B,$5F,$65,$78,$65,$63,$5F,
                    $67,$65,$74,$5F,$63
       00:0487: 5F 65 78 65 
       00:048B: 63 5F 67 65 
       00:048F: 74 5F 63 
  3868 00:0492: 75 72 72 65  	db	$75,$72,$72,$65,$6E,$74,$5F,$70,$72,$6F,
                    $63,$65,$73,$73,$3A
       00:0496: 6E 74 5F 70 
       00:049A: 72 6F 63 65 
       00:049E: 73 73 3A 
  3869 00:04A1: 00           	db	$00
  3870 00:04A2:              	ends
  3871                        ;
  3872                        ;PFXPROCESS k_exec_set_current_process(PFXPROCESS 
                    currentProcess)
  3873                        ;{
  3874                        	.line	370
  3875                        	.line	371
  3876                        	code
  3877                        	xdef	~~k_exec_set_current_process
  3878                        	func
  3879                        	.function	371
  3880                        ~~k_exec_set_current_process:
  3881                        	longa	on
  3882                        	longi	on
  3883 00:09A4: 3B           	tsc
  3884 00:09A5: 38           	sec
  3885 00:09A6: E9 04 00     	sbc	#L113
  3886 00:09A9: 1B           	tcs
  3887 00:09AA: 0B           	phd
  3888 00:09AB: 5B           	tcd
  3889             00000004   currentProcess_0	set	4
  3890                        	.block	371
  3891                        ;	PFXPROCESS previousProcess = _k_current_Process;
  3892                        ;
  3893                        ;	_k_current_Process = currentProcess;
  3894             00000000   previousProcess_1	set	0
  3895                        	.sym	previousProcess,0,138,1,32,20
  3896                        	.sym	currentProcess,4,138,6,32,20
  3897 00:09AC: AD xx xx     	lda	|~~_k_current_Process
  3898 00:09AF: 85 01        	sta	<L114+previousProcess_1
  3899 00:09B1: AD xx xx     	lda	|~~_k_current_Process+2
  3900 00:09B4: 85 03        	sta	<L114+previousProcess_1+2
  3901                        	.line	374
  3902 00:09B6: A5 08        	lda	<L113+currentProcess_0
  3903 00:09B8: 8D xx xx     	sta	|~~_k_current_Process
  3904 00:09BB: A5 0A        	lda	<L113+currentProcess_0+2
  3905 00:09BD: 8D xx xx     	sta	|~~_k_current_Process+2
  3906                        ;
  3907                        ;	return previousProcess;
  3908                        	.line	376
  3909 00:09C0: A6 03        	ldx	<L114+previousProcess_1+2
  3910 00:09C2: A5 01        	lda	<L114+previousProcess_1
  3911                        L116:
  3912 00:09C4: A8           	tay
  3913 00:09C5: A5 06        	lda	<L113+2
  3914 00:09C7: 85 0A        	sta	<L113+2+4
  Sat Jul 10 2021  1:15                                                Page 78


  3915 00:09C9: A5 05        	lda	<L113+1
  3916 00:09CB: 85 09        	sta	<L113+1+4
  3917 00:09CD: 2B           	pld
  3918 00:09CE: 3B           	tsc
  3919 00:09CF: 18           	clc
  3920 00:09D0: 69 08 00     	adc	#L113+4
  3921 00:09D3: 1B           	tcs
  3922 00:09D4: 98           	tya
  3923 00:09D5: 6B           	rtl
  3924                        ;}
  3925                        	.line	377
  3926                        	.endblock	377
  3927             00000004   L113	equ	4
  3928             00000001   L114	equ	1
  3929                        	ends
  3930                        	efunc
  3931                        	.endfunc	377,1,4
  3932                        	.line	377
  3933                        ;
  3934                        ;PFXPROCESS k_exec_get_current_process(void)
  3935                        ;{
  3936                        	.line	379
  3937                        	.line	380
  3938                        	code
  3939                        	xdef	~~k_exec_get_current_process
  3940                        	func
  3941                        	.function	380
  3942                        ~~k_exec_get_current_process:
  3943                        	longa	on
  3944                        	longi	on
  3945 00:09D6: 3B           	tsc
  3946 00:09D7: 38           	sec
  3947 00:09D8: E9 00 00     	sbc	#L117
  3948 00:09DB: 1B           	tcs
  3949 00:09DC: 0B           	phd
  3950 00:09DD: 5B           	tcd
  3951                        	.block	380
  3952                        ;	return _k_current_Process;
  3953                        	.line	381
  3954 00:09DE: AE xx xx     	ldx	|~~_k_current_Process+2
  3955 00:09E1: AD xx xx     	lda	|~~_k_current_Process
  3956                        L120:
  3957 00:09E4: A8           	tay
  3958 00:09E5: 2B           	pld
  3959 00:09E6: 3B           	tsc
  3960 00:09E7: 18           	clc
  3961 00:09E8: 69 00 00     	adc	#L117
  3962 00:09EB: 1B           	tcs
  3963 00:09EC: 98           	tya
  3964 00:09ED: 6B           	rtl
  3965                        ;}
  3966                        	.line	382
  3967                        	.endblock	382
  3968             00000000   L117	equ	0
  3969             00000001   L118	equ	1
  3970                        	ends
  3971                        	efunc
  3972                        	.endfunc	382,1,0
  Sat Jul 10 2021  1:15                                                Page 79


  3973                        	.line	382
  3974                        ;
  3975                        ;PROCESS_CTX k_exec_setContext(PROCESS_ID processI
                    d,PROCESS_CTX data)
  3976                        ;{
  3977                        	.line	384
  3978                        	.line	385
  3979                        	code
  3980                        	xdef	~~k_exec_setContext
  3981                        	func
  3982                        	.function	385
  3983                        ~~k_exec_setContext:
  3984                        	longa	on
  3985                        	longi	on
  3986 00:09EE: 3B           	tsc
  3987 00:09EF: 38           	sec
  3988 00:09F0: E9 00 00     	sbc	#L121
  3989 00:09F3: 1B           	tcs
  3990 00:09F4: 0B           	phd
  3991 00:09F5: 5B           	tcd
  3992             00000004   processId_0	set	4
  3993             00000008   data_0	set	8
  3994                        	.block	385
  3995                        ;	return NULL;
  3996                        	.sym	processId,4,18,6,32
  3997                        	.sym	data,8,129,6,32
  3998                        	.line	386
  3999 00:09F6: A9 00 00     	lda	#$0
  4000 00:09F9: AA           	tax
  4001 00:09FA: A9 00 00     	lda	#$0
  4002                        L124:
  4003 00:09FD: A8           	tay
  4004 00:09FE: A5 02        	lda	<L121+2
  4005 00:0A00: 85 0A        	sta	<L121+2+8
  4006 00:0A02: A5 01        	lda	<L121+1
  4007 00:0A04: 85 09        	sta	<L121+1+8
  4008 00:0A06: 2B           	pld
  4009 00:0A07: 3B           	tsc
  4010 00:0A08: 18           	clc
  4011 00:0A09: 69 08 00     	adc	#L121+8
  4012 00:0A0C: 1B           	tcs
  4013 00:0A0D: 98           	tya
  4014 00:0A0E: 6B           	rtl
  4015                        ;}
  4016                        	.line	387
  4017                        	.endblock	387
  4018             00000000   L121	equ	0
  4019             00000001   L122	equ	1
  4020                        	ends
  4021                        	efunc
  4022                        	.endfunc	387,1,0
  4023                        	.line	387
  4024                        ;
  4025                        ;PROCESS_CTX k_exec_getContext(PROCESS_ID processI
                    d)
  4026                        ;{
  4027                        	.line	389
  4028                        	.line	390
  Sat Jul 10 2021  1:15                                                Page 80


  4029                        	code
  4030                        	xdef	~~k_exec_getContext
  4031                        	func
  4032                        	.function	390
  4033                        ~~k_exec_getContext:
  4034                        	longa	on
  4035                        	longi	on
  4036 00:0A0F: 3B           	tsc
  4037 00:0A10: 38           	sec
  4038 00:0A11: E9 00 00     	sbc	#L125
  4039 00:0A14: 1B           	tcs
  4040 00:0A15: 0B           	phd
  4041 00:0A16: 5B           	tcd
  4042             00000004   processId_0	set	4
  4043                        	.block	390
  4044                        ;	return NULL;
  4045                        	.sym	processId,4,18,6,32
  4046                        	.line	391
  4047 00:0A17: A9 00 00     	lda	#$0
  4048 00:0A1A: AA           	tax
  4049 00:0A1B: A9 00 00     	lda	#$0
  4050                        L128:
  4051 00:0A1E: A8           	tay
  4052 00:0A1F: A5 02        	lda	<L125+2
  4053 00:0A21: 85 06        	sta	<L125+2+4
  4054 00:0A23: A5 01        	lda	<L125+1
  4055 00:0A25: 85 05        	sta	<L125+1+4
  4056 00:0A27: 2B           	pld
  4057 00:0A28: 3B           	tsc
  4058 00:0A29: 18           	clc
  4059 00:0A2A: 69 04 00     	adc	#L125+4
  4060 00:0A2D: 1B           	tcs
  4061 00:0A2E: 98           	tya
  4062 00:0A2F: 6B           	rtl
  4063                        ;}
  4064                        	.line	392
  4065                        	.endblock	392
  4066             00000000   L125	equ	0
  4067             00000001   L126	equ	1
  4068                        	ends
  4069                        	efunc
  4070                        	.endfunc	392,1,0
  4071                        	.line	392
  4072                        ;//
  4073                        ;//
  4074                        ;//
  4075                        ;//
  4076                        ;BOOL k_exec_signal_sleep(PROCESS_ID processId)
  4077                        ;{
  4078                        	.line	397
  4079                        	.line	398
  4080                        	code
  4081                        	xdef	~~k_exec_signal_sleep
  4082                        	func
  4083                        	.function	398
  4084                        ~~k_exec_signal_sleep:
  4085                        	longa	on
  4086                        	longi	on
  Sat Jul 10 2021  1:15                                                Page 81


  4087 00:0A30: 3B           	tsc
  4088 00:0A31: 38           	sec
  4089 00:0A32: E9 04 00     	sbc	#L129
  4090 00:0A35: 1B           	tcs
  4091 00:0A36: 0B           	phd
  4092 00:0A37: 5B           	tcd
  4093             00000004   processId_0	set	4
  4094                        	.block	398
  4095                        ;	return k_exec_set_signal(processId,PROCESS_STATU
                    S_SLEEPING);
  4096                        	.sym	processId,4,18,6,32
  4097                        	.line	399
  4098 00:0A38: F4 02 00     	pea	#<$2
  4099 00:0A3B: D4 0A        	pei	<L129+processId_0+2
  4100 00:0A3D: D4 08        	pei	<L129+processId_0
  4101 00:0A3F: 22 xx xx xx  	jsl	~~k_exec_set_signal
  4102 00:0A43: E2 20        	sep	#$20
  4103                        	longa	off
  4104 00:0A45: 85 01        	sta	<R0
  4105 00:0A47: C2 20        	rep	#$20
  4106                        	longa	on
  4107 00:0A49: A5 01        	lda	<R0
  4108 00:0A4B: 29 FF 00     	and	#$ff
  4109                        L132:
  4110 00:0A4E: A8           	tay
  4111 00:0A4F: A5 06        	lda	<L129+2
  4112 00:0A51: 85 0A        	sta	<L129+2+4
  4113 00:0A53: A5 05        	lda	<L129+1
  4114 00:0A55: 85 09        	sta	<L129+1+4
  4115 00:0A57: 2B           	pld
  4116 00:0A58: 3B           	tsc
  4117 00:0A59: 18           	clc
  4118 00:0A5A: 69 08 00     	adc	#L129+4
  4119 00:0A5D: 1B           	tcs
  4120 00:0A5E: 98           	tya
  4121 00:0A5F: 6B           	rtl
  4122                        ;}
  4123                        	.line	400
  4124                        	.endblock	400
  4125             00000004   L129	equ	4
  4126             00000005   L130	equ	5
  4127                        	ends
  4128                        	efunc
  4129                        	.endfunc	400,5,4
  4130                        	.line	400
  4131                        ;
  4132                        ;BOOL k_exec_signal_terminate(PROCESS_ID processId
                    )
  4133                        ;{
  4134                        	.line	402
  4135                        	.line	403
  4136                        	code
  4137                        	xdef	~~k_exec_signal_terminate
  4138                        	func
  4139                        	.function	403
  4140                        ~~k_exec_signal_terminate:
  4141                        	longa	on
  4142                        	longi	on
  Sat Jul 10 2021  1:15                                                Page 82


  4143 00:0A60: 3B           	tsc
  4144 00:0A61: 38           	sec
  4145 00:0A62: E9 04 00     	sbc	#L133
  4146 00:0A65: 1B           	tcs
  4147 00:0A66: 0B           	phd
  4148 00:0A67: 5B           	tcd
  4149             00000004   processId_0	set	4
  4150                        	.block	403
  4151                        ;	return k_exec_set_signal(processId,PROCESS_STATU
                    S_TERMINATED);
  4152                        	.sym	processId,4,18,6,32
  4153                        	.line	404
  4154 00:0A68: F4 03 00     	pea	#<$3
  4155 00:0A6B: D4 0A        	pei	<L133+processId_0+2
  4156 00:0A6D: D4 08        	pei	<L133+processId_0
  4157 00:0A6F: 22 xx xx xx  	jsl	~~k_exec_set_signal
  4158 00:0A73: E2 20        	sep	#$20
  4159                        	longa	off
  4160 00:0A75: 85 01        	sta	<R0
  4161 00:0A77: C2 20        	rep	#$20
  4162                        	longa	on
  4163 00:0A79: A5 01        	lda	<R0
  4164 00:0A7B: 29 FF 00     	and	#$ff
  4165                        L136:
  4166 00:0A7E: A8           	tay
  4167 00:0A7F: A5 06        	lda	<L133+2
  4168 00:0A81: 85 0A        	sta	<L133+2+4
  4169 00:0A83: A5 05        	lda	<L133+1
  4170 00:0A85: 85 09        	sta	<L133+1+4
  4171 00:0A87: 2B           	pld
  4172 00:0A88: 3B           	tsc
  4173 00:0A89: 18           	clc
  4174 00:0A8A: 69 08 00     	adc	#L133+4
  4175 00:0A8D: 1B           	tcs
  4176 00:0A8E: 98           	tya
  4177 00:0A8F: 6B           	rtl
  4178                        ;}
  4179                        	.line	405
  4180                        	.endblock	405
  4181             00000004   L133	equ	4
  4182             00000005   L134	equ	5
  4183                        	ends
  4184                        	efunc
  4185                        	.endfunc	405,5,4
  4186                        	.line	405
  4187                        ;
  4188                        ;BOOL k_exec_signal_start(PROCESS_ID processId)
  4189                        ;{
  4190                        	.line	407
  4191                        	.line	408
  4192                        	code
  4193                        	xdef	~~k_exec_signal_start
  4194                        	func
  4195                        	.function	408
  4196                        ~~k_exec_signal_start:
  4197                        	longa	on
  4198                        	longi	on
  4199 00:0A90: 3B           	tsc
  Sat Jul 10 2021  1:15                                                Page 83


  4200 00:0A91: 38           	sec
  4201 00:0A92: E9 04 00     	sbc	#L137
  4202 00:0A95: 1B           	tcs
  4203 00:0A96: 0B           	phd
  4204 00:0A97: 5B           	tcd
  4205             00000004   processId_0	set	4
  4206                        	.block	408
  4207                        ;	return k_exec_set_signal(processId,PROCESS_STATU
                    S_RUNNING);
  4208                        	.sym	processId,4,18,6,32
  4209                        	.line	409
  4210 00:0A98: F4 01 00     	pea	#<$1
  4211 00:0A9B: D4 0A        	pei	<L137+processId_0+2
  4212 00:0A9D: D4 08        	pei	<L137+processId_0
  4213 00:0A9F: 22 xx xx xx  	jsl	~~k_exec_set_signal
  4214 00:0AA3: E2 20        	sep	#$20
  4215                        	longa	off
  4216 00:0AA5: 85 01        	sta	<R0
  4217 00:0AA7: C2 20        	rep	#$20
  4218                        	longa	on
  4219 00:0AA9: A5 01        	lda	<R0
  4220 00:0AAB: 29 FF 00     	and	#$ff
  4221                        L140:
  4222 00:0AAE: A8           	tay
  4223 00:0AAF: A5 06        	lda	<L137+2
  4224 00:0AB1: 85 0A        	sta	<L137+2+4
  4225 00:0AB3: A5 05        	lda	<L137+1
  4226 00:0AB5: 85 09        	sta	<L137+1+4
  4227 00:0AB7: 2B           	pld
  4228 00:0AB8: 3B           	tsc
  4229 00:0AB9: 18           	clc
  4230 00:0ABA: 69 08 00     	adc	#L137+4
  4231 00:0ABD: 1B           	tcs
  4232 00:0ABE: 98           	tya
  4233 00:0ABF: 6B           	rtl
  4234                        ;}
  4235                        	.line	410
  4236                        	.endblock	410
  4237             00000004   L137	equ	4
  4238             00000005   L138	equ	5
  4239                        	ends
  4240                        	efunc
  4241                        	.endfunc	410,5,4
  4242                        	.line	410
  4243                        ;
  4244                        ;BOOL k_exec_signal_wait(PROCESS_ID processId,PPRO
                    CESS_SIGNAL signal)
  4245                        ;{
  4246                        	.line	412
  4247                        	.line	413
  4248                        	code
  4249                        	xdef	~~k_exec_signal_wait
  4250                        	func
  4251                        	.function	413
  4252                        ~~k_exec_signal_wait:
  4253                        	longa	on
  4254                        	longi	on
  4255 00:0AC0: 3B           	tsc
  Sat Jul 10 2021  1:15                                                Page 84


  4256 00:0AC1: 38           	sec
  4257 00:0AC2: E9 04 00     	sbc	#L141
  4258 00:0AC5: 1B           	tcs
  4259 00:0AC6: 0B           	phd
  4260 00:0AC7: 5B           	tcd
  4261             00000004   processId_0	set	4
  4262             00000008   signal_0	set	8
  4263                        	.block	413
  4264                        ;	return k_exec_set_signal(processId,PROCESS_STATU
                    S_WAITING);
  4265                        	.sym	processId,4,18,6,32
  4266                        	.sym	signal,8,138,6,32,9
  4267                        	.line	414
  4268 00:0AC8: F4 F1 00     	pea	#<$f1
  4269 00:0ACB: D4 0A        	pei	<L141+processId_0+2
  4270 00:0ACD: D4 08        	pei	<L141+processId_0
  4271 00:0ACF: 22 xx xx xx  	jsl	~~k_exec_set_signal
  4272 00:0AD3: E2 20        	sep	#$20
  4273                        	longa	off
  4274 00:0AD5: 85 01        	sta	<R0
  4275 00:0AD7: C2 20        	rep	#$20
  4276                        	longa	on
  4277 00:0AD9: A5 01        	lda	<R0
  4278 00:0ADB: 29 FF 00     	and	#$ff
  4279                        L144:
  4280 00:0ADE: A8           	tay
  4281 00:0ADF: A5 06        	lda	<L141+2
  4282 00:0AE1: 85 0E        	sta	<L141+2+8
  4283 00:0AE3: A5 05        	lda	<L141+1
  4284 00:0AE5: 85 0D        	sta	<L141+1+8
  4285 00:0AE7: 2B           	pld
  4286 00:0AE8: 3B           	tsc
  4287 00:0AE9: 18           	clc
  4288 00:0AEA: 69 0C 00     	adc	#L141+8
  4289 00:0AED: 1B           	tcs
  4290 00:0AEE: 98           	tya
  4291 00:0AEF: 6B           	rtl
  4292                        ;}
  4293                        	.line	415
  4294                        	.endblock	415
  4295             00000004   L141	equ	4
  4296             00000005   L142	equ	5
  4297                        	ends
  4298                        	efunc
  4299                        	.endfunc	415,5,4
  4300                        	.line	415
  4301                        ;
  4302                        ;BOOL k_exec_set_signal(PROCESS_ID processId,PROCE
                    SS_STATUS signal)
  4303                        ;{
  4304                        	.line	417
  4305                        	.line	418
  4306                        	code
  4307                        	xdef	~~k_exec_set_signal
  4308                        	func
  4309                        	.function	418
  4310                        ~~k_exec_set_signal:
  4311                        	longa	on
  Sat Jul 10 2021  1:15                                                Page 85


  4312                        	longi	on
  4313 00:0AF0: 3B           	tsc
  4314 00:0AF1: 38           	sec
  4315 00:0AF2: E9 0E 00     	sbc	#L145
  4316 00:0AF5: 1B           	tcs
  4317 00:0AF6: 0B           	phd
  4318 00:0AF7: 5B           	tcd
  4319             00000004   processId_0	set	4
  4320             00000008   signal_0	set	8
  4321                        	.block	418
  4322                        ;	PFXPROCESS p = NULL;
  4323                        ;
  4324                        ;	int index = 0;
  4325                        ;
  4326                        ;	for(index=0;index<MAX_PROCESS;index++)
  4327             00000000   p_1	set	0
  4328             00000004   index_1	set	4
  4329                        	.sym	p,0,138,1,32,20
  4330                        	.sym	index,4,5,1,16
  4331                        	.sym	processId,4,18,6,32
  4332                        	.sym	signal,8,16,6,16
  4333 00:0AF8: 64 09        	stz	<L146+p_1
  4334 00:0AFA: 64 0B        	stz	<L146+p_1+2
  4335 00:0AFC: 64 0D        	stz	<L146+index_1
  4336                        	.line	423
  4337 00:0AFE: 64 0D        	stz	<L146+index_1
  4338                        L10046:
  4339                        ;	{
  4340                        	.line	424
  4341                        ;		if(_k_processList[index] && (_k_processL
                    ist[index]->procId == processId))
  4342                        	.line	425
  4343                        ;		{
  4344 00:0B00: A5 0D        	lda	<L146+index_1
  4345 00:0B02: 0A           	asl	A
  4346 00:0B03: 0A           	asl	A
  4347 00:0B04: 85 01        	sta	<R0
  4348 00:0B06: 18           	clc
  4349 00:0B07: A9 xx xx     	lda	#<~~_k_processList
  4350 00:0B0A: 65 01        	adc	<R0
  4351 00:0B0C: 85 05        	sta	<R1
  4352 00:0B0E: B2 05        	lda	(<R1)
  4353 00:0B10: A0 02 00     	ldy	#$2
  4354 00:0B13: 11 05        	ora	(<R1),Y
  4355 00:0B15: D0 03        	bne	L148
  4356 00:0B17: 82 63 00     	brl	L10047
  4357                        L148:
  4358 00:0B1A: A5 0D        	lda	<L146+index_1
  4359 00:0B1C: 0A           	asl	A
  4360 00:0B1D: 0A           	asl	A
  4361 00:0B1E: 85 01        	sta	<R0
  4362 00:0B20: 18           	clc
  4363 00:0B21: A9 xx xx     	lda	#<~~_k_processList
  4364 00:0B24: 65 01        	adc	<R0
  4365 00:0B26: 85 05        	sta	<R1
  4366 00:0B28: B2 05        	lda	(<R1)
  4367 00:0B2A: 85 01        	sta	<R0
  4368 00:0B2C: A0 02 00     	ldy	#$2
  Sat Jul 10 2021  1:15                                                Page 86


  4369 00:0B2F: B1 05        	lda	(<R1),Y
  4370 00:0B31: 85 03        	sta	<R0+2
  4371 00:0B33: A0 02 00     	ldy	#$2
  4372 00:0B36: B7 01        	lda	[<R0],Y
  4373 00:0B38: C5 12        	cmp	<L145+processId_0
  4374 00:0B3A: D0 07        	bne	L149
  4375 00:0B3C: A0 04 00     	ldy	#$4
  4376 00:0B3F: B7 01        	lda	[<R0],Y
  4377 00:0B41: C5 14        	cmp	<L145+processId_0+2
  4378                        L149:
  4379 00:0B43: F0 03        	beq	L150
  4380 00:0B45: 82 35 00     	brl	L10047
  4381                        L150:
  4382                        	.line	426
  4383                        ;			_k_processList[index]->status = 
                    signal;
  4384                        	.line	427
  4385 00:0B48: A5 0D        	lda	<L146+index_1
  4386 00:0B4A: 0A           	asl	A
  4387 00:0B4B: 0A           	asl	A
  4388 00:0B4C: 85 01        	sta	<R0
  4389 00:0B4E: 18           	clc
  4390 00:0B4F: A9 xx xx     	lda	#<~~_k_processList
  4391 00:0B52: 65 01        	adc	<R0
  4392 00:0B54: 85 05        	sta	<R1
  4393 00:0B56: B2 05        	lda	(<R1)
  4394 00:0B58: 85 01        	sta	<R0
  4395 00:0B5A: A0 02 00     	ldy	#$2
  4396 00:0B5D: B1 05        	lda	(<R1),Y
  4397 00:0B5F: 85 03        	sta	<R0+2
  4398 00:0B61: A5 16        	lda	<L145+signal_0
  4399 00:0B63: A0 10 00     	ldy	#$10
  4400 00:0B66: 97 01        	sta	[<R0],Y
  4401                        ;			return TRUE;
  4402                        	.line	428
  4403 00:0B68: A9 01 00     	lda	#$1
  4404                        L151:
  4405 00:0B6B: A8           	tay
  4406 00:0B6C: A5 10        	lda	<L145+2
  4407 00:0B6E: 85 16        	sta	<L145+2+6
  4408 00:0B70: A5 0F        	lda	<L145+1
  4409 00:0B72: 85 15        	sta	<L145+1+6
  4410 00:0B74: 2B           	pld
  4411 00:0B75: 3B           	tsc
  4412 00:0B76: 18           	clc
  4413 00:0B77: 69 14 00     	adc	#L145+6
  4414 00:0B7A: 1B           	tcs
  4415 00:0B7B: 98           	tya
  4416 00:0B7C: 6B           	rtl
  4417                        ;		}
  4418                        	.line	429
  4419                        ;	}
  4420                        L10047:
  4421                        	.line	430
  4422                        L10044:
  4423 00:0B7D: E6 0D        	inc	<L146+index_1
  4424 00:0B7F: 38           	sec
  4425 00:0B80: A5 0D        	lda	<L146+index_1
  Sat Jul 10 2021  1:15                                                Page 87


  4426 00:0B82: E9 20 00     	sbc	#<$20
  4427 00:0B85: 70 03        	bvs	L152
  4428 00:0B87: 49 00 80     	eor	#$8000
  4429                        L152:
  4430 00:0B8A: 30 03        	bmi	L153
  4431 00:0B8C: 82 71 FF     	brl	L10046
  4432                        L153:
  4433                        L10045:
  4434                        ;
  4435                        ;	return FALSE;
  4436                        	.line	432
  4437 00:0B8F: A9 00 00     	lda	#$0
  4438 00:0B92: 82 D6 FF     	brl	L151
  4439                        ;}
  4440                        	.line	433
  4441                        	.endblock	433
  4442             0000000E   L145	equ	14
  4443             00000009   L146	equ	9
  4444                        	ends
  4445                        	efunc
  4446                        	.endfunc	433,9,14
  4447                        	.line	433
  4448                        ;
  4449                        ;
  4450                        ;VOID k_exec_throw_exception(ULONG ctxId,ULONG err
                    orId,LPVOID exceptionMessage,UINT exMsgSize)
  4451                        ;{
  4452                        	.line	436
  4453                        	.line	437
  4454                        	code
  4455                        	xdef	~~k_exec_throw_exception
  4456                        	func
  4457                        	.function	437
  4458                        ~~k_exec_throw_exception:
  4459                        	longa	on
  4460                        	longi	on
  4461 00:0B95: 3B           	tsc
  4462 00:0B96: 38           	sec
  4463 00:0B97: E9 06 00     	sbc	#L154
  4464 00:0B9A: 1B           	tcs
  4465 00:0B9B: 0B           	phd
  4466 00:0B9C: 5B           	tcd
  4467             00000004   ctxId_0	set	4
  4468             00000008   errorId_0	set	8
  4469             0000000C   exceptionMessage_0	set	12
  4470             00000010   exMsgSize_0	set	16
  4471                        	.block	437
  4472                        ;	UINT len = 0;
  4473                        ;
  4474                        ;	//k_enable_text_mode();
  4475                        ;
  4476                        ;	if(exceptionMessage)
  4477             00000000   len_1	set	0
  4478                        	.sym	len,0,16,1,16
  4479                        	.sym	ctxId,4,18,6,32
  4480                        	.sym	errorId,8,18,6,32
  4481                        	.sym	exceptionMessage,12,129,6,32
  4482                        	.sym	exMsgSize,16,16,6,16
  Sat Jul 10 2021  1:15                                                Page 88


  4483 00:0B9D: 64 05        	stz	<L155+len_1
  4484                        	.line	442
  4485                        ;		k_debug_strings("k_exec_throw_exception:
                    ",(LPSTR)exceptionMessage);
  4486 00:0B9F: A5 12        	lda	<L154+exceptionMessage_0
  4487 00:0BA1: 05 14        	ora	<L154+exceptionMessage_0+2
  4488 00:0BA3: D0 03        	bne	L157
  4489 00:0BA5: 82 0E 00     	brl	L10048
  4490                        L157:
  4491                        	.line	443
  4492 00:0BA8: D4 14        	pei	<L154+exceptionMessage_0+2
  4493 00:0BAA: D4 12        	pei	<L154+exceptionMessage_0
  4494 00:0BAC: F4 xx xx     	pea	#^L112
  4495 00:0BAF: F4 xx xx     	pea	#<L112
  4496 00:0BB2: 22 xx xx xx  	jsl	~~k_debug_strings
  4497                        ;
  4498                        ;	_k_exec_context 	= ctxId;
  4499                        L10048:
  4500                        	.line	445
  4501 00:0BB6: A5 0A        	lda	<L154+ctxId_0
  4502 00:0BB8: 8D xx xx     	sta	|~~_k_exec_context
  4503 00:0BBB: A5 0C        	lda	<L154+ctxId_0+2
  4504 00:0BBD: 8D xx xx     	sta	|~~_k_exec_context+2
  4505                        ;	_k_exec_error		= errorId;
  4506                        	.line	446
  4507 00:0BC0: A5 0E        	lda	<L154+errorId_0
  4508 00:0BC2: 8D xx xx     	sta	|~~_k_exec_error
  4509 00:0BC5: A5 10        	lda	<L154+errorId_0+2
  4510 00:0BC7: 8D xx xx     	sta	|~~_k_exec_error+2
  4511                        ;
  4512                        ;	if(exMsgSize == -1)
  4513                        	.line	448
  4514                        ;	{
  4515 00:0BCA: A5 16        	lda	<L154+exMsgSize_0
  4516 00:0BCC: C9 FF FF     	cmp	#<$ffffffff
  4517 00:0BCF: F0 03        	beq	L158
  4518 00:0BD1: 82 20 00     	brl	L10049
  4519                        L158:
  4520                        	.line	449
  4521                        ;		len = strlen(exceptionMessage);
  4522                        	.line	450
  4523 00:0BD4: D4 14        	pei	<L154+exceptionMessage_0+2
  4524 00:0BD6: D4 12        	pei	<L154+exceptionMessage_0
  4525 00:0BD8: 22 xx xx xx  	jsl	~~strlen
  4526 00:0BDC: 85 05        	sta	<L155+len_1
  4527                        ;		if(len < 64)
  4528                        	.line	451
  4529                        ;			exMsgSize = len;
  4530 00:0BDE: A5 05        	lda	<L155+len_1
  4531 00:0BE0: C9 40 00     	cmp	#<$40
  4532 00:0BE3: 90 03        	bcc	L159
  4533 00:0BE5: 82 07 00     	brl	L10050
  4534                        L159:
  4535                        	.line	452
  4536 00:0BE8: A5 05        	lda	<L155+len_1
  4537 00:0BEA: 85 16        	sta	<L154+exMsgSize_0
  4538                        ;		else
  4539 00:0BEC: 82 05 00     	brl	L10051
  Sat Jul 10 2021  1:15                                                Page 89


  4540                        L10050:
  4541                        ;			exMsgSize = 63;
  4542                        	.line	454
  4543 00:0BEF: A9 3F 00     	lda	#$3f
  4544 00:0BF2: 85 16        	sta	<L154+exMsgSize_0
  4545                        L10051:
  4546                        ;	}
  4547                        	.line	455
  4548                        ;
  4549                        ;	memcpy(_k_exec_message,exceptionMessage,exMsgSiz
                    e);
  4550                        L10049:
  4551                        	.line	457
  4552 00:0BF4: D4 16        	pei	<L154+exMsgSize_0
  4553 00:0BF6: D4 14        	pei	<L154+exceptionMessage_0+2
  4554 00:0BF8: D4 12        	pei	<L154+exceptionMessage_0
  4555 00:0BFA: A9 xx xx     	lda	#<~~_k_exec_message
  4556 00:0BFD: 85 01        	sta	<R0
  4557                        	xref	_BEG_DATA
  4558 00:0BFF: A9 xx xx     	lda	#_BEG_DATA>>16
  4559 00:0C02: 85 03        	sta	<R0+2
  4560 00:0C04: D4 03        	pei	<R0+2
  4561 00:0C06: D4 01        	pei	<R0
  4562 00:0C08: 22 xx xx xx  	jsl	~~memcpy
  4563                        ;
  4564                        ;	asm BRK;
  4565                        	.line	459
  4566                        	asmstart
  4567 00:0C0C: 00 00        	BRK
  4568                        	asmend
  4569                        ;}
  4570                        	.line	460
  4571                        L160:
  4572 00:0C0E: A5 08        	lda	<L154+2
  4573 00:0C10: 85 16        	sta	<L154+2+14
  4574 00:0C12: A5 07        	lda	<L154+1
  4575 00:0C14: 85 15        	sta	<L154+1+14
  4576 00:0C16: 2B           	pld
  4577 00:0C17: 3B           	tsc
  4578 00:0C18: 18           	clc
  4579 00:0C19: 69 14 00     	adc	#L154+14
  4580 00:0C1C: 1B           	tcs
  4581 00:0C1D: 6B           	rtl
  4582                        	.endblock	460
  4583             00000006   L154	equ	6
  4584             00000005   L155	equ	5
  4585                        	ends
  4586                        	efunc
  4587                        	.endfunc	460,5,6
  4588                        	.line	460
  4589                        	data
  4590                        L112:
  4591 00:04A2: 6B 5F 65 78  	db	$6B,$5F,$65,$78,$65,$63,$5F,$74,$68,$72,
                    $6F,$77,$5F,$65,$78
       00:04A6: 65 63 5F 74 
       00:04AA: 68 72 6F 77 
       00:04AE: 5F 65 78 
  4592 00:04B1: 63 65 70 74  	db	$63,$65,$70,$74,$69,$6F,$6E,$3A,$00
  Sat Jul 10 2021  1:15                                                Page 90


       00:04B5: 69 6F 6E 3A 
       00:04B9: 00 
  4593 00:04BA:              	ends
  4594                        ;
  4595                        ;KRESULT k_exec_enable_process_timer(UINT timerId,
                    UINT increment)
  4596                        ;{
  4597                        	.line	462
  4598                        	.line	463
  4599                        	code
  4600                        	xdef	~~k_exec_enable_process_timer
  4601                        	func
  4602                        	.function	463
  4603                        ~~k_exec_enable_process_timer:
  4604                        	longa	on
  4605                        	longi	on
  4606 00:0C1E: 3B           	tsc
  4607 00:0C1F: 38           	sec
  4608 00:0C20: E9 18 00     	sbc	#L162
  4609 00:0C23: 1B           	tcs
  4610 00:0C24: 0B           	phd
  4611 00:0C25: 5B           	tcd
  4612             00000004   timerId_0	set	4
  4613             00000006   increment_0	set	6
  4614                        	.block	463
  4615                        ;	KRESULT kerr = KERR_FAIL;
  4616                        ;	PFXPROCESS p = NULL;
  4617                        ;
  4618                        ;
  4619                        ;	k_debug_integer("k_exec_enable_process_timer::in
                    crement:",increment);
  4620             00000000   kerr_1	set	0
  4621             00000004   p_1	set	4
  4622                        	.sym	kerr,0,18,1,32
  4623                        	.sym	p,4,138,1,32,20
  4624                        	.sym	timerId,4,16,6,16
  4625                        	.sym	increment,6,16,6,16
  4626 00:0C26: A9 00 00     	lda	#$0
  4627 00:0C29: 85 11        	sta	<L163+kerr_1
  4628 00:0C2B: A9 00 80     	lda	#$8000
  4629 00:0C2E: 85 13        	sta	<L163+kerr_1+2
  4630 00:0C30: 64 15        	stz	<L163+p_1
  4631 00:0C32: 64 17        	stz	<L163+p_1+2
  4632                        	.line	468
  4633 00:0C34: D4 1E        	pei	<L162+increment_0
  4634 00:0C36: F4 xx xx     	pea	#^L161
  4635 00:0C39: F4 xx xx     	pea	#<L161
  4636 00:0C3C: 22 xx xx xx  	jsl	~~k_debug_integer
  4637                        ;
  4638                        ;	if(timerId <= PROCESS_TIMER_1)
  4639                        	.line	470
  4640                        ;	{
  4641 00:0C40: A9 01 00     	lda	#$1
  4642 00:0C43: C5 1C        	cmp	<L162+timerId_0
  4643 00:0C45: B0 03        	bcs	L165
  4644 00:0C47: 82 E5 00     	brl	L10052
  4645                        L165:
  4646                        	.line	471
  Sat Jul 10 2021  1:15                                                Page 91


  4647                        ;		p = k_exec_get_current_process();
  4648                        	.line	472
  4649 00:0C4A: 22 xx xx xx  	jsl	~~k_exec_get_current_process
  4650 00:0C4E: 85 15        	sta	<L163+p_1
  4651 00:0C50: 86 17        	stx	<L163+p_1+2
  4652                        ;		if(p)
  4653                        	.line	473
  4654                        ;		{
  4655 00:0C52: A5 15        	lda	<L163+p_1
  4656 00:0C54: 05 17        	ora	<L163+p_1+2
  4657 00:0C56: D0 03        	bne	L166
  4658 00:0C58: 82 D4 00     	brl	L10053
  4659                        L166:
  4660                        	.line	474
  4661                        ;			k_debug_long("k_exec_enable_proc
                    ess_timer::process:",p->procId);
  4662                        	.line	475
  4663 00:0C5B: A0 04 00     	ldy	#$4
  4664 00:0C5E: B7 15        	lda	[<L163+p_1],Y
  4665 00:0C60: 48           	pha
  4666 00:0C61: A0 02 00     	ldy	#$2
  4667 00:0C64: B7 15        	lda	[<L163+p_1],Y
  4668 00:0C66: 48           	pha
  4669 00:0C67: F4 xx xx     	pea	#^L161+40
  4670 00:0C6A: F4 xx xx     	pea	#<L161+40
  4671 00:0C6D: 22 xx xx xx  	jsl	~~k_debug_long
  4672                        ;
  4673                        ;			p->timerAware = TRUE;
  4674                        	.line	477
  4675 00:0C71: E2 20        	sep	#$20
  4676                        	longa	off
  4677 00:0C73: A9 01        	lda	#$1
  4678 00:0C75: A0 47 00     	ldy	#$47
  4679 00:0C78: 97 15        	sta	[<L163+p_1],Y
  4680 00:0C7A: C2 20        	rep	#$20
  4681                        	longa	on
  4682                        ;			p->timerTicks[timerId] = increme
                    nt;
  4683                        	.line	478
  4684 00:0C7C: A5 1C        	lda	<L162+timerId_0
  4685 00:0C7E: 85 05        	sta	<R1
  4686 00:0C80: 64 07        	stz	<R1+2
  4687 00:0C82: D4 07        	pei	<R1+2
  4688 00:0C84: D4 05        	pei	<R1
  4689 00:0C86: A9 01 00     	lda	#$1
  4690                        	xref	~~~lasl
  4691 00:0C89: 22 xx xx xx  	jsl	~~~lasl
  4692 00:0C8D: 85 01        	sta	<R0
  4693 00:0C8F: 86 03        	stx	<R0+2
  4694 00:0C91: 18           	clc
  4695 00:0C92: A9 48 00     	lda	#$48
  4696 00:0C95: 65 15        	adc	<L163+p_1
  4697 00:0C97: 85 09        	sta	<R2
  4698 00:0C99: A9 00 00     	lda	#$0
  4699 00:0C9C: 65 17        	adc	<L163+p_1+2
  4700 00:0C9E: 85 0B        	sta	<R2+2
  4701 00:0CA0: 18           	clc
  4702 00:0CA1: A5 09        	lda	<R2
  Sat Jul 10 2021  1:15                                                Page 92


  4703 00:0CA3: 65 01        	adc	<R0
  4704 00:0CA5: 85 0D        	sta	<R3
  4705 00:0CA7: A5 0B        	lda	<R2+2
  4706 00:0CA9: 65 03        	adc	<R0+2
  4707 00:0CAB: 85 0F        	sta	<R3+2
  4708 00:0CAD: A5 1E        	lda	<L162+increment_0
  4709 00:0CAF: 87 0D        	sta	[<R3]
  4710                        ;			p->timerTickCount[timerId] = inc
                    rement;
  4711                        	.line	479
  4712 00:0CB1: A5 1C        	lda	<L162+timerId_0
  4713 00:0CB3: 85 05        	sta	<R1
  4714 00:0CB5: 64 07        	stz	<R1+2
  4715 00:0CB7: D4 07        	pei	<R1+2
  4716 00:0CB9: D4 05        	pei	<R1
  4717 00:0CBB: A9 01 00     	lda	#$1
  4718                        	xref	~~~lasl
  4719 00:0CBE: 22 xx xx xx  	jsl	~~~lasl
  4720 00:0CC2: 85 01        	sta	<R0
  4721 00:0CC4: 86 03        	stx	<R0+2
  4722 00:0CC6: 18           	clc
  4723 00:0CC7: A9 4C 00     	lda	#$4c
  4724 00:0CCA: 65 15        	adc	<L163+p_1
  4725 00:0CCC: 85 09        	sta	<R2
  4726 00:0CCE: A9 00 00     	lda	#$0
  4727 00:0CD1: 65 17        	adc	<L163+p_1+2
  4728 00:0CD3: 85 0B        	sta	<R2+2
  4729 00:0CD5: 18           	clc
  4730 00:0CD6: A5 09        	lda	<R2
  4731 00:0CD8: 65 01        	adc	<R0
  4732 00:0CDA: 85 0D        	sta	<R3
  4733 00:0CDC: A5 0B        	lda	<R2+2
  4734 00:0CDE: 65 03        	adc	<R0+2
  4735 00:0CE0: 85 0F        	sta	<R3+2
  4736 00:0CE2: A5 1E        	lda	<L162+increment_0
  4737 00:0CE4: 87 0D        	sta	[<R3]
  4738                        ;
  4739                        ;			k_debug_long("k_exec_enable_proc
                    ess_timer::p->timerTicks[timerId]:",p->timerTicks[timerId]);
  4740                        	.line	481
  4741 00:0CE6: A5 1C        	lda	<L162+timerId_0
  4742 00:0CE8: 85 05        	sta	<R1
  4743 00:0CEA: 64 07        	stz	<R1+2
  4744 00:0CEC: D4 07        	pei	<R1+2
  4745 00:0CEE: D4 05        	pei	<R1
  4746 00:0CF0: A9 01 00     	lda	#$1
  4747                        	xref	~~~lasl
  4748 00:0CF3: 22 xx xx xx  	jsl	~~~lasl
  4749 00:0CF7: 85 01        	sta	<R0
  4750 00:0CF9: 86 03        	stx	<R0+2
  4751 00:0CFB: 18           	clc
  4752 00:0CFC: A9 48 00     	lda	#$48
  4753 00:0CFF: 65 15        	adc	<L163+p_1
  4754 00:0D01: 85 09        	sta	<R2
  4755 00:0D03: A9 00 00     	lda	#$0
  4756 00:0D06: 65 17        	adc	<L163+p_1+2
  4757 00:0D08: 85 0B        	sta	<R2+2
  4758 00:0D0A: 18           	clc
  Sat Jul 10 2021  1:15                                                Page 93


  4759 00:0D0B: A5 09        	lda	<R2
  4760 00:0D0D: 65 01        	adc	<R0
  4761 00:0D0F: 85 0D        	sta	<R3
  4762 00:0D11: A5 0B        	lda	<R2+2
  4763 00:0D13: 65 03        	adc	<R0+2
  4764 00:0D15: 85 0F        	sta	<R3+2
  4765 00:0D17: A7 0D        	lda	[<R3]
  4766 00:0D19: 85 01        	sta	<R0
  4767 00:0D1B: 64 03        	stz	<R0+2
  4768 00:0D1D: D4 03        	pei	<R0+2
  4769 00:0D1F: D4 01        	pei	<R0
  4770 00:0D21: F4 xx xx     	pea	#^L161+78
  4771 00:0D24: F4 xx xx     	pea	#<L161+78
  4772 00:0D27: 22 xx xx xx  	jsl	~~k_debug_long
  4773                        ;
  4774                        ;			kerr= KERR_SUCCESS;
  4775                        	.line	483
  4776 00:0D2B: 64 11        	stz	<L163+kerr_1
  4777 00:0D2D: 64 13        	stz	<L163+kerr_1+2
  4778                        ;		}
  4779                        	.line	484
  4780                        ;	}
  4781                        L10053:
  4782                        	.line	485
  4783                        ;	return 0;
  4784                        L10052:
  4785                        	.line	486
  4786 00:0D2F: A9 00 00     	lda	#$0
  4787 00:0D32: AA           	tax
  4788 00:0D33: A9 00 00     	lda	#$0
  4789                        L167:
  4790 00:0D36: A8           	tay
  4791 00:0D37: A5 1A        	lda	<L162+2
  4792 00:0D39: 85 1E        	sta	<L162+2+4
  4793 00:0D3B: A5 19        	lda	<L162+1
  4794 00:0D3D: 85 1D        	sta	<L162+1+4
  4795 00:0D3F: 2B           	pld
  4796 00:0D40: 3B           	tsc
  4797 00:0D41: 18           	clc
  4798 00:0D42: 69 1C 00     	adc	#L162+4
  4799 00:0D45: 1B           	tcs
  4800 00:0D46: 98           	tya
  4801 00:0D47: 6B           	rtl
  4802                        ;}
  4803                        	.line	487
  4804                        	.endblock	487
  4805             00000018   L162	equ	24
  4806             00000011   L163	equ	17
  4807                        	ends
  4808                        	efunc
  4809                        	.endfunc	487,17,24
  4810                        	.line	487
  4811                        	data
  4812                        L161:
  4813 00:04BA: 6B 5F 65 78  	db	$6B,$5F,$65,$78,$65,$63,$5F,$65,$6E,$61,
                    $62,$6C,$65,$5F,$70
       00:04BE: 65 63 5F 65 
       00:04C2: 6E 61 62 6C 
  Sat Jul 10 2021  1:15                                                Page 94


       00:04C6: 65 5F 70 
  4814 00:04C9: 72 6F 63 65  	db	$72,$6F,$63,$65,$73,$73,$5F,$74,$69,$6D,
                    $65,$72,$3A,$3A,$69
       00:04CD: 73 73 5F 74 
       00:04D1: 69 6D 65 72 
       00:04D5: 3A 3A 69 
  4815 00:04D8: 6E 63 72 65  	db	$6E,$63,$72,$65,$6D,$65,$6E,$74,$3A,$00,
                    $6B,$5F,$65,$78,$65
       00:04DC: 6D 65 6E 74 
       00:04E0: 3A 00 6B 5F 
       00:04E4: 65 78 65 
  4816 00:04E7: 63 5F 65 6E  	db	$63,$5F,$65,$6E,$61,$62,$6C,$65,$5F,$70,
                    $72,$6F,$63,$65,$73
       00:04EB: 61 62 6C 65 
       00:04EF: 5F 70 72 6F 
       00:04F3: 63 65 73 
  4817 00:04F6: 73 5F 74 69  	db	$73,$5F,$74,$69,$6D,$65,$72,$3A,$3A,$70,
                    $72,$6F,$63,$65,$73
       00:04FA: 6D 65 72 3A 
       00:04FE: 3A 70 72 6F 
       00:0502: 63 65 73 
  4818 00:0505: 73 3A 00 6B  	db	$73,$3A,$00,$6B,$5F,$65,$78,$65,$63,$5F,
                    $65,$6E,$61,$62,$6C
       00:0509: 5F 65 78 65 
       00:050D: 63 5F 65 6E 
       00:0511: 61 62 6C 
  4819 00:0514: 65 5F 70 72  	db	$65,$5F,$70,$72,$6F,$63,$65,$73,$73,$5F,
                    $74,$69,$6D,$65,$72
       00:0518: 6F 63 65 73 
       00:051C: 73 5F 74 69 
       00:0520: 6D 65 72 
  4820 00:0523: 3A 3A 70 2D  	db	$3A,$3A,$70,$2D,$3E,$74,$69,$6D,$65,$72,
                    $54,$69,$63,$6B,$73
       00:0527: 3E 74 69 6D 
       00:052B: 65 72 54 69 
       00:052F: 63 6B 73 
  4821 00:0532: 5B 74 69 6D  	db	$5B,$74,$69,$6D,$65,$72,$49,$64,$5D,$3A,
                    $00
       00:0536: 65 72 49 64 
       00:053A: 5D 3A 00 
  4822 00:053D:              	ends
  4823                        ;
  4824                        ;
  4825                        ;
  4826                        	.line	489
  4827                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxexec.c",462
  4828                        	xref	~~FXPaletteAccessory
  4829                        	xref	~~FXCalculator
  4830                        	xref	~~DesktopEnvironmentProc
  4831                        	xref	~~k_debug_strings
  4832                        	xref	~~k_debug_byte_array
  4833                        	xref	~~k_debug_hex
  4834                        	xref	~~k_debug_long
  4835                        	xref	~~k_debug_integer
  4836                        	xref	~~k_debug_pointer
  4837                        	xref	~~k_debug_string
  4838                        	xref	~~f_lseek
  Sat Jul 10 2021  1:15                                                Page 95


  4839                        	xref	~~f_read
  4840                        	xref	~~f_open
  4841                        	xref	~~DefConsoleProc
  4842                        	xref	~~k_attach_process_events
  4843                        	xref	~~IdleProc
  4844                        	xref	~~k_mem_deallocate_heap
  4845                        	xref	~~k_mem_allocate_heap
  4846                        	xref	~~k_nodelist_naddtolist
  4847                        	xref	~~k_nodelist_allocate_list
  4848                        	xref	~~k_nodelist_getname
  4849                        	xref	~~k_string_copy_string
  4850                        	xref	~~strlen
  4851                        	xref	~~strcmp
  4852                        	xref	~~memset
  4853                        	xref	~~memcpy
  4854                        	udata
  4855                        ~~_k_processList
  4856 00:0000:              	ds	128
  4857 00:0080:              	ends
  4858                        	udata
  4859                        	xdef	~~_k_exec_message
  4860                        ~~_k_exec_message
  4861 00:0080:              	ds	64
  4862 00:00C0:              	ends
  4863                        	udata
  4864                        	xdef	~~loadModuleHeader
  4865                        ~~loadModuleHeader
  4866 00:00C0:              	ds	20
  4867 00:00D4:              	ends
  4868                        	udata
  4869                        	xdef	~~_k_executive
  4870                        ~~_k_executive
  4871 00:00D4:              	ds	16
  4872 00:00E4:              	ends
  4873                        	.sym	~~k_exec_nextprocess,~~k_exec_nextproces
                    s,82,2,0
  4874                        	.sym	~~Query,~~Query,80,3,0
  4875                        	.sym	~~Configure,~~Configure,80,3,0
  4876                        	.sym	~~Uninit,~~Uninit,65,3,0
  4877                        	.sym	~~Init,~~Init,1089,3,32
  4878                        	.sym	~~THIS_MODULE,~~THIS_MODULE,18,3,32
  4879                        	.sym	~~_k_execManager_ProcesssList,~~_k_execM
                    anager_ProcesssList,138,3,32,6
  4880                        	.sym	~~_exec_Process,~~_exec_Process,138,3,32
                    ,20
  4881                        	.sym	~~_k_current_Process,~~_k_current_Proces
                    s,138,3,32,20
  4882                        	.sym	~~_k_processList,~~_k_processList,1130,3
                    ,32,20,32
  4883                        	.sym	~~_k_exec_message,~~_k_exec_message,110,
                    2,0,64
  4884                        	.sym	~~_k_exec_error,~~_k_exec_error,18,2,32
  4885                        	.sym	~~_k_exec_context,~~_k_exec_context,18,2
                    ,32
  4886                        	.sym	~~loadModuleHeader,~~loadModuleHeader,10
                    ,2,160,82
  4887                        	.sym	~~_k_executive,~~_k_executive,10,2,128,5
                    1
  Sat Jul 10 2021  1:15                                                Page 96


  4888                        	.sym	~~FXPaletteAccessory,~~FXPaletteAccessor
                    y,65,18,0
  4889                        	.sym	~~FXCalculator,~~FXCalculator,65,18,0
  4890                        	.sym	~~DesktopEnvironmentProc,~~DesktopEnviro
                    nmentProc,65,18,0
  4891                        	.sym	PTEXTVIEWDATA,0,138,14,32,125
  4892                        	.sym	TEXTVIEWDATA,0,10,14,32,125
  4893                        	.sym	PDOSHANDLE,0,138,14,32,124
  4894                        	.sym	DOSHANDLE,0,10,14,80,124
  4895                        	.sym	PFXDOSDEVICE,0,138,14,32,122
  4896                        	.sym	FXDOSDEVICE,0,10,14,5744,122
  4897                        	.sym	DOSINITDEVICE,0,641,14,32
  4898                        	.sym	DOSSECTORWRITER,0,654,14,32
  4899                        	.sym	DOSSECTORREADER,0,654,14,32
  4900                        	.sym	PIDENTIFY_DEVICE_DATA,0,138,14,32,121
  4901                        	.sym	IDENTIFY_DEVICE_DATA,0,10,14,4096,121
  4902                        	.sym	PIDSECTOR,0,138,14,32,98
  4903                        	.sym	IDSECTOR,0,10,14,2048,98
  4904                        	.sym	PLFN,0,138,14,32,97
  4905                        	.sym	LFN,0,10,14,256,97
  4906                        	.sym	PFAT16ENTRYLONG,0,138,14,32,96
  4907                        	.sym	FAT16ENTRYLONG,0,10,14,288,96
  4908                        	.sym	PFAT16ENTRY,0,138,14,32,95
  4909                        	.sym	FAT16ENTRY,0,10,14,256,95
  4910                        	.sym	Fat16BootSector,0,10,14,4096,94
  4911                        	.sym	PPARTITIONTABLE,0,138,14,32,93
  4912                        	.sym	PARTITIONTABLE,0,10,14,128,93
  4913                        	.sym	PFATBOOTSECTOR,0,138,14,32,92
  4914                        	.sym	FATBOOTSECTOR,0,10,14,928,92
  4915                        	.sym	fat_BS_t,0,10,14,688,91
  4916                        	.sym	fat_extBS_16_t,0,10,14,192,90
  4917                        	.sym	PFAT32EXT,0,138,14,32,89
  4918                        	.sym	fat_extBS_32_t,0,10,14,416,89
  4919                        	.sym	P_FX_FAT_DIR_INFO,0,138,14,32,88
  4920                        	.sym	FX_FAT_DIR_INFO,0,10,14,256,88
  4921                        	.sym	PFILEINFO,0,138,14,32,87
  4922                        	.sym	FILEINFO,0,10,14,136,87
  4923                        	.sym	PDISKINFO,0,138,14,32,86
  4924                        	.sym	DISKINFO,0,10,14,416,86
  4925                        	.sym	PDIRENTRY,0,138,14,32,85
  4926                        	.sym	DIRENTRY,0,10,14,256,85
  4927                        	.sym	DRESULT,0,5,14,16
  4928                        	.sym	DSTATUS,0,14,14,8
  4929                        	.sym	DEVICEDRIVER_COMMAND,0,656,14,32
  4930                        	.sym	DEVICEDRIVER_UNLOAD,0,654,14,32
  4931                        	.sym	DEVICEDRIVER_WRITE,0,656,14,32
  4932                        	.sym	DEVICEDRIVER_READ,0,656,14,32
  4933                        	.sym	DEVICEDRIVER_LOAD,0,654,14,32
  4934                        	.sym	DEVICEDRIVER_IRQ,0,654,14,32
  4935                        	.sym	PFX_BLOCK_DEVICE_DRIVER,0,138,14,32,84
  4936                        	.sym	FX_BLOCK_DEVICE_DRIVER,0,10,14,808,84
  4937                        	.sym	GETDRIVERDEF,0,8842,14,32,83
  4938                        	.sym	PFX_DEVICE_DRIVER,0,138,14,32,83
  4939                        	.sym	FX_DEVICE_DRIVER,0,10,14,776,83
  4940                        	.sym	~~k_debug_strings,~~k_debug_strings,65,1
                    8,0
  4941                        	.sym	~~k_debug_byte_array,~~k_debug_byte_arra
                    y,65,18,0
  Sat Jul 10 2021  1:15                                                Page 97


  4942                        	.sym	~~k_debug_hex,~~k_debug_hex,65,18,0
  4943                        	.sym	~~k_debug_long,~~k_debug_long,65,18,0
  4944                        	.sym	~~k_debug_integer,~~k_debug_integer,65,1
                    8,0
  4945                        	.sym	~~k_debug_pointer,~~k_debug_pointer,65,1
                    8,0
  4946                        	.sym	~~k_debug_string,~~k_debug_string,65,18,
                    0
  4947                        	.sym	PSEGMENTHEADER,0,138,14,32,82
  4948                        	.sym	SEGMENTHEADER,0,10,14,160,82
  4949                        	.sym	PDEBUGBYTEBITS,0,138,14,32,81
  4950                        	.sym	DEBUGBYTEBITS,0,10,14,8,81
  4951                        	.sym	PFXENVIRONMENT,0,138,14,32,80
  4952                        	.sym	FXENVIRONMENT,0,10,14,96,80
  4953                        	.sym	PFXZEROPAGE,0,138,14,32,79
  4954                        	.sym	FXZEROPAGE,0,10,14,824,79
  4955                        	.sym	KERNELTRAPCALL,0,641,14,32
  4956                        	.sym	PFXKERNEL_API_CALLTABLE,0,138,14,32,78
  4957                        	.sym	FXKERNEL_API_CALLTABLE,0,10,14,8192,78
  4958                        	.sym	~~f_lseek,~~f_lseek,69,18,0
  4959                        	.sym	~~f_read,~~f_read,69,18,0
  4960                        	.sym	~~f_open,~~f_open,69,18,0
  4961                        	.sym	FRESULT,0,5,14,16
  4962                        	.sym	MKFS_PARM,0,10,14,80,77
  4963                        	.sym	FILINFO,0,10,14,2224,76
  4964                        	.sym	DIR,0,10,14,416,75
  4965                        	.sym	FIL,0,10,14,4400,74
  4966                        	.sym	FFOBJID,0,10,14,128,73
  4967                        	.sym	FATFS,0,10,14,4504,72
  4968                        	.sym	LBA_t,0,18,14,32
  4969                        	.sym	FSIZE_t,0,18,14,32
  4970                        	.sym	TCHAR,0,14,14,8
  4971                        	.sym	~~DefConsoleProc,~~DefConsoleProc,65,18,
                    0
  4972                        	.sym	PCOMMANDARGS,0,138,14,32,71
  4973                        	.sym	COMMANDARGS,0,10,14,64,71
  4974                        	.sym	PTOKENIZESTATE,0,133,14,32
  4975                        	.sym	TOKENIZESTATE,0,5,14,16
  4976                        	.sym	PTOKEN,0,138,14,32,70
  4977                        	.sym	TOKEN,0,10,14,64,70
  4978                        	.sym	PTOKENTYPE,0,133,14,32
  4979                        	.sym	TOKENTYPE,0,5,14,16
  4980                        	.sym	FXCommandHandler,0,656,14,32
  4981                        	.sym	PCONSOLECTX,0,138,14,32,69
  4982                        	.sym	CONSOLECTX,0,10,14,1144,69
  4983                        	.sym	PSPINNERCTX,0,138,14,32,68
  4984                        	.sym	SPINNERCTX,0,10,14,48,68
  4985                        	.sym	HCLIP,0,138,14,32,67
  4986                        	.sym	PCLIPBOARD_DATA,0,138,14,32,67
  4987                        	.sym	CLIPBOARD_DATA,0,10,14,168,67
  4988                        	.sym	~~k_attach_process_events,~~k_attach_pro
                    cess_events,69,18,0
  4989                        	.sym	~~IdleProc,~~IdleProc,65,18,0
  4990                        	.sym	PEVENTMANAGER,0,138,14,32,66
  4991                        	.sym	EVENTMANAGER,0,10,14,192,66
  4992                        	.sym	EV_RUN,0,656,14,32
  4993                        	.sym	EV_QUERY_METRIC,0,656,14,32
  4994                        	.sym	EV_CONFIGURE,0,656,14,32
  Sat Jul 10 2021  1:15                                                Page 98


  4995                        	.sym	EV_UNINIT,0,641,14,32
  4996                        	.sym	EV_INIT,0,8833,14,32
  4997                        	.sym	PMOUSE_MSG_STATE,0,138,14,32,65
  4998                        	.sym	MOUSE_MSG_STATE,0,10,14,184,65
  4999                        	.sym	PFXEVENTPROCESS,0,138,14,32,64
  5000                        	.sym	FXEVENTPROCESS,0,10,14,64,64
  5001                        	.sym	PMARSHALDATA,0,139,14,32,63
  5002                        	.sym	MARSHALDATA,0,11,14,32,63
  5003                        	.sym	FXIDLEPROCESS,0,641,14,32
  5004                        	.sym	FXEventProc,0,641,14,32
  5005                        	.sym	PMOUSEMSGDATA,0,138,14,32,62
  5006                        	.sym	MOUSEMSGDATA,0,10,14,64,62
  5007                        	.sym	MSGIRQ,0,5,14,16
  5008                        	.sym	MAINLOOPARGS,0,10,14,16,61
  5009                        	.sym	PEACHCHILD_MSG,0,138,14,32,60
  5010                        	.sym	EACHCHILD_MSG,0,10,14,64,60
  5011                        	.sym	PMSGBOX_DATA,0,138,14,32,59
  5012                        	.sym	MSGBOX_DATA,0,10,14,96,59
  5013                        	.sym	PDESKTOP_DATA,0,138,14,32,58
  5014                        	.sym	DESKTOP_DATA,0,10,14,64,58
  5015                        	.sym	PWINDOWMANAGER,0,138,14,32,57
  5016                        	.sym	WINDOWMANAGER,0,10,14,160,57
  5017                        	.sym	WM_DOPROCS,0,641,14,32
  5018                        	.sym	WM_QUERY_METRIC,0,656,14,32
  5019                        	.sym	WM_CONFIGURE,0,656,14,32
  5020                        	.sym	WM_HANDLE_EVENT,0,8833,14,32
  5021                        	.sym	WM_EVENTS,0,641,14,32
  5022                        	.sym	PCUR_PALETTE_MAP,0,138,14,32,56
  5023                        	.sym	CUR_PALETTE_MAP,0,10,14,400,56
  5024                        	.sym	PCLICKDETECTED,0,138,14,32,55
  5025                        	.sym	CLICKDETECTED,0,10,14,64,55
  5026                        	.sym	OBJECTCLICKED,0,641,14,32
  5027                        	.sym	PIPCPORT,0,138,14,32,54
  5028                        	.sym	IPCPORT,0,10,14,144,54
  5029                        	.sym	~~k_mem_deallocate_heap,~~k_mem_dealloca
                    te_heap,65,18,0
  5030                        	.sym	~~k_mem_allocate_heap,~~k_mem_allocate_h
                    eap,1089,18,32
  5031                        	.sym	MemoryCallback,0,641,14,32
  5032                        	.sym	PFXMEMORYMAP,0,138,14,32,53
  5033                        	.sym	FXMEMORYMAP,0,10,14,2072,53
  5034                        	.sym	UMM_HEAP_INFO,0,10,14,256,52
  5035                        	.sym	FOREACHNODEUNTIL,0,654,14,32
  5036                        	.sym	FOREACHNODE,0,641,14,32
  5037                        	.sym	~~k_nodelist_naddtolist,~~k_nodelist_nad
                    dtolist,1098,18,32,5
  5038                        	.sym	~~k_nodelist_allocate_list,~~k_nodelist_
                    allocate_list,1098,18,32,6
  5039                        	.sym	~~k_nodelist_getname,~~k_nodelist_getnam
                    e,1098,18,32,5
  5040                        	.sym	~~debug_process_node,~~debug_process_nod
                    e,65,2,0
  5041                        	.sym	~~k_deallocate_process_task,~~k_dealloca
                    te_process_task,65,2,0
  5042                        	.sym	~~k_exec_enable_process_timer,~~k_exec_e
                    nable_process_timer,82,2,0
  5043                        	.sym	~~k_exec_set_signal,~~k_exec_set_signal,
                    78,2,0
  Sat Jul 10 2021  1:15                                                Page 99


  5044                        	.sym	~~k_exec_signal_wait,~~k_exec_signal_wai
                    t,78,2,0
  5045                        	.sym	~~k_exec_signal_start,~~k_exec_signal_st
                    art,78,2,0
  5046                        	.sym	~~k_exec_signal_terminate,~~k_exec_signa
                    l_terminate,78,2,0
  5047                        	.sym	~~k_exec_signal_sleep,~~k_exec_signal_sl
                    eep,78,2,0
  5048                        	.sym	~~k_exec_getContext,~~k_exec_getContext,
                    1089,2,32
  5049                        	.sym	~~k_exec_setContext,~~k_exec_setContext,
                    1089,2,32
  5050                        	.sym	~~k_exec_get_current_process,~~k_exec_ge
                    t_current_process,1098,2,32,20
  5051                        	.sym	~~k_exec_set_current_process,~~k_exec_se
                    t_current_process,1098,2,32,20
  5052                        	.sym	~~k_user_CreateProcess,~~k_user_CreatePr
                    ocess,1098,2,32,20
  5053                        	.sym	~~k_exe_device_load_process,~~k_exe_devi
                    ce_load_process,5185,2,32
  5054                        	.sym	~~k_exec_start_process,~~k_exec_start_pr
                    ocess,65,2,0
  5055                        	.sym	~~k_exec_set_process_foreground,~~k_exec
                    _set_process_foreground,65,2,0
  5056                        	.sym	~~k_exec_createProcess,~~k_exec_createPr
                    ocess,1098,2,32,20
  5057                        	.sym	~~k_exec_launchProcess,~~k_exec_launchPr
                    ocess,1098,2,32,20
  5058                        	.sym	~~k_exec_process_list,~~k_exec_process_l
                    ist,9290,2,32,20
  5059                        	.sym	~~k_exec_get_process_byname,~~k_exec_get
                    _process_byname,1098,2,32,20
  5060                        	.sym	~~k_exec_get_process,~~k_exec_get_proces
                    s,1098,2,32,20
  5061                        	.sym	~~k_exec_throw_exception,~~k_exec_throw_
                    exception,65,2,0
  5062                        	.sym	~~k_initalize_executive,~~k_initalize_ex
                    ecutive,1098,2,32,51
  5063                        	.sym	PEXECUTIVE,0,138,14,32,51
  5064                        	.sym	EXECUTIVE,0,10,14,128,51
  5065                        	.sym	EX_QUERY_METRIC,0,656,14,32
  5066                        	.sym	EX_CONFIGURE,0,656,14,32
  5067                        	.sym	EX_UNINIT,0,641,14,32
  5068                        	.sym	EX_INIT,0,8833,14,32
  5069                        	.sym	~~k_string_copy_string,~~k_string_copy_s
                    tring,1102,18,32
  5070                        	.sym	PFXSTRING,0,138,14,32,50
  5071                        	.sym	FXSTRING,0,10,14,64,50
  5072                        	.sym	PFXRFHEADER_FONT,0,138,14,32,49
  5073                        	.sym	FXRFHEADER_FONT,0,10,14,144,49
  5074                        	.sym	PFXRFHEADER,0,138,14,32,48
  5075                        	.sym	FXRFHEADER,0,10,14,72,48
  5076                        	.sym	PFXCOMBUFFER,0,138,14,32,47
  5077                        	.sym	FXCOMBUFFER,0,10,14,2080,47
  5078                        	.sym	PSUBMENULIST,0,138,14,32,46
  5079                        	.sym	SUBMENULIST,0,10,14,40,46
  5080                        	.sym	HSUBMENU,0,7,14,32
  5081                        	.sym	PSUBMENU,0,138,14,32,45
  Sat Jul 10 2021  1:15                                                Page 100


  5082                        	.sym	SUBMENU,0,10,14,64,45
  5083                        	.sym	MenuAction,0,641,14,32
  5084                        	.sym	PMENUANCHOR,0,138,14,32,44
  5085                        	.sym	MENUANCHOR,0,10,14,272,44
  5086                        	.sym	PMSGBOX,0,138,14,32,43
  5087                        	.sym	MSGBOX,0,10,14,144,43
  5088                        	.sym	PTEXTBOX,0,138,14,32,42
  5089                        	.sym	TEXTBOX,0,10,14,144,42
  5090                        	.sym	PLISTBOX,0,138,14,32,41
  5091                        	.sym	LISTBOX,0,10,14,240,41
  5092                        	.sym	PSCROLLBAR,0,138,14,32,40
  5093                        	.sym	SCROLLBAR,0,10,14,240,40
  5094                        	.sym	PBUTTON,0,138,14,32,39
  5095                        	.sym	BUTTON,0,10,14,96,39
  5096                        	.sym	PMENUDROPDOWNDATA,0,138,14,32,38
  5097                        	.sym	MENUDROPDOWNDATA,0,10,14,5152,38
  5098                        	.sym	PMENUTAG,0,138,14,32,37
  5099                        	.sym	MENUTAG,0,10,14,160,37
  5100                        	.sym	PMENU,0,138,14,32,36
  5101                        	.sym	MENU,0,10,14,280,36
  5102                        	.sym	HMENURESOURCE,0,129,14,32
  5103                        	.sym	FONTMETRIC,0,10,14,32,35
  5104                        	.sym	TITLE,0,142,14,32
  5105                        	.sym	PHANDLE,0,1153,14,32
  5106                        	.sym	HANDLE,0,129,14,32
  5107                        	.sym	PWINDOWEX,0,138,14,32,34
  5108                        	.sym	WINDOWEX,0,10,14,3880,34
  5109                        	.sym	PWINDOW,0,138,14,32,33
  5110                        	.sym	WINDOW,0,10,14,3904,33
  5111                        	.sym	PDRAGDATA,0,138,14,32,32
  5112                        	.sym	DRAGDATA,0,10,14,216,32
  5113                        	.sym	PNCCLICKABLE,0,138,14,32,31
  5114                        	.sym	NCCLICKABLE,0,10,14,136,31
  5115                        	.sym	HCLICKABLE,0,7,14,32
  5116                        	.sym	PCLICKABLE,0,138,14,32,30
  5117                        	.sym	CLICKABLE,0,10,14,152,30
  5118                        	.sym	PWNDCLASS,0,138,14,32,29
  5119                        	.sym	WNDCLASS,0,10,14,272,29
  5120                        	.sym	HBRUSH,0,129,14,32
  5121                        	.sym	HCURSOR,0,129,14,32
  5122                        	.sym	HICON,0,129,14,32
  5123                        	.sym	HINSTANCE,0,129,14,32
  5124                        	.sym	FXWndProc,0,654,14,32
  5125                        	.sym	PDRECT,0,138,14,32,28
  5126                        	.sym	DRECT,0,10,14,112,28
  5127                        	.sym	PRECTP,0,138,14,32,27
  5128                        	.sym	RECTP,0,10,14,96,27
  5129                        	.sym	PRECT,0,138,14,32,26
  5130                        	.sym	RECT,0,10,14,112,26
  5131                        	.sym	PPOINT,0,138,14,32,25
  5132                        	.sym	POINT,0,10,14,32,25
  5133                        	.sym	PFXPROPERTY,0,138,14,32,23
  5134                        	.sym	FXPROPERTY,0,10,14,384,23
  5135                        	.sym	PKEYSTATE,0,138,14,32,22
  5136                        	.sym	KEYSTATE,0,10,14,112,22
  5137                        	.sym	SCANCODE,0,14,14,8
  5138                        	.sym	KEYCODE,0,16,14,16
  5139                        	.sym	PFXPROCESSMESSAGE,0,138,14,32,21
  Sat Jul 10 2021  1:15                                                Page 101


  5140                        	.sym	FXPROCESSMESSAGE,0,10,14,112,21
  5141                        	.sym	PFXPROCESS,0,138,14,32,20
  5142                        	.sym	FXPROCESS,0,10,14,800,20
  5143                        	.sym	PDESKTOP_CONTROL,0,138,14,32,19
  5144                        	.sym	DESKTOP_CONTROL,0,10,14,392,19
  5145                        	.sym	PCONSOLE_CONTROL,0,138,14,32,18
  5146                        	.sym	CONSOLE_CONTROL,0,10,14,448,18
  5147                        	.sym	FXProcessProc,0,641,14,32
  5148                        	.sym	PFXCMDMESSAGE,0,138,14,32,17
  5149                        	.sym	FXCMDMESSAGE,0,10,14,304,17
  5150                        	.sym	PFXOSMESSAGE,0,138,14,32,16
  5151                        	.sym	FXOSMESSAGE,0,10,14,304,16
  5152                        	.sym	PINT_REGS,0,138,14,32,15
  5153                        	.sym	INT_REGS,0,10,14,104,15
  5154                        	.sym	TASK_STACK,0,10,14,32,14
  5155                        	.sym	TASK,0,10,14,48,13
  5156                        	.sym	PIRQDATA,0,138,14,32,12
  5157                        	.sym	IRQDATA,0,10,14,48,12
  5158                        	.sym	HMENU,0,129,14,32
  5159                        	.sym	HWND,0,129,14,32
  5160                        	.sym	MSGDATA,0,14,14,8
  5161                        	.sym	MSGDEST,0,18,14,32
  5162                        	.sym	MSGSRC,0,18,14,32
  5163                        	.sym	MSGTYPE,0,16,14,16
  5164                        	.sym	PROCESS_RESOURCE_LIST,0,138,14,32,6
  5165                        	.sym	PROCESS_TLS_LIST,0,138,14,32,6
  5166                        	.sym	SEMAPHORE_LIST,0,138,14,32,6
  5167                        	.sym	FILE_BLOCK_LIST,0,138,14,32,6
  5168                        	.sym	FILE_PATH_LIST,0,138,14,32,6
  5169                        	.sym	PROCEDURE_LIST,0,138,14,32,6
  5170                        	.sym	FILE_HANDLE,0,138,14,32,11
  5171                        	.sym	FILE_BLOCK,0,10,14,552,11
  5172                        	.sym	SEMAPHORE,0,10,14,16,10
  5173                        	.sym	PPROCESS_SIGNAL,0,138,14,32,9
  5174                        	.sym	PROCESS_SIGNAL,0,10,14,16,9
  5175                        	.sym	KRESULT,0,18,14,32
  5176                        	.sym	PKERNEL_ERROR,0,138,14,32,8
  5177                        	.sym	KERNEL_ERROR,0,10,14,32,8
  5178                        	.sym	PROCESS_STATUS,0,16,14,16
  5179                        	.sym	FILE_PATH_NAME,0,142,14,32
  5180                        	.sym	PROCESS_RESOURCE,0,129,14,32
  5181                        	.sym	PROCESS_TLS,0,129,14,32
  5182                        	.sym	PROCESS_CTX,0,129,14,32
  5183                        	.sym	USERID,0,16,14,16
  5184                        	.sym	PROCESS_ID,0,18,14,32
  5185                        	.sym	PROCESS_BANK,0,14,14,8
  5186                        	.sym	PFXQUEUE,0,138,14,32,7
  5187                        	.sym	FXQUEUE,0,10,14,80,7
  5188                        	.sym	PFXNODELIST,0,138,14,32,6
  5189                        	.sym	FXNODELIST,0,10,14,96,6
  5190                        	.sym	NodeListDeallocator,0,641,14,32
  5191                        	.sym	PFXNODE,0,138,14,32,5
  5192                        	.sym	FXNODE,0,10,14,384,5
  5193                        	.sym	PBYTEBITS,0,138,14,32,4
  5194                        	.sym	BYTEBITS,0,10,14,8,4
  5195                        	.sym	HRESULT,0,18,14,32
  5196                        	.sym	LPWCHAR,0,144,14,32
  5197                        	.sym	WCHAR,0,16,14,16
  Sat Jul 10 2021  1:15                                                Page 102


  5198                        	.sym	HCOLOR,0,129,14,32
  5199                        	.sym	HFONT,0,129,14,32
  5200                        	.sym	HDC,0,129,14,32
  5201                        	.sym	HPOINTER,0,129,14,32
  5202                        	.sym	uint32_t,0,18,14,32
  5203                        	.sym	uint8_t,0,14,14,8
  5204                        	.sym	LPBOOL,0,142,14,32
  5205                        	.sym	BOOL,0,14,14,8
  5206                        	.sym	DWORD,0,18,14,32
  5207                        	.sym	ULONG,0,18,14,32
  5208                        	.sym	LPLONG,0,135,14,32
  5209                        	.sym	LONG,0,7,14,32
  5210                        	.sym	PUINT,0,144,14,32
  5211                        	.sym	USHORT,0,16,14,16
  5212                        	.sym	UINT,0,16,14,16
  5213                        	.sym	INT,0,5,14,16
  5214                        	.sym	WORD,0,5,14,16
  5215                        	.sym	PBYTE,0,142,14,32
  5216                        	.sym	BYTE,0,14,14,8
  5217                        	.sym	IOPORT,0,142,14,32
  5218                        	.sym	PUCHAR,0,142,14,32
  5219                        	.sym	UCHAR,0,14,14,8
  5220                        	.sym	LPWCSTR,0,142,14,32
  5221                        	.sym	LPCSTR,0,142,14,32
  5222                        	.sym	LPSTR,0,142,14,32
  5223                        	.sym	LPCHAR,0,142,14,32
  5224                        	.sym	CHAR,0,14,14,8
  5225                        	.sym	LPVOID,0,129,14,32
  5226                        	.sym	VOID,0,1,14,32
  5227                        	.sym	~~strlen,~~strlen,80,18,0
  5228                        	.sym	~~strcmp,~~strcmp,69,18,0
  5229                        	.sym	~~memset,~~memset,1089,18,32
  5230                        	.sym	~~memcpy,~~memcpy,1089,18,32
  5231                        	.sym	Boolean_T,0,5,14,16
  5232                        	.sym	ldiv_t,0,10,14,64,2
  5233                        	.sym	div_t,0,10,14,32,1
  5234                        	.sym	wctype_t,0,16,14,16
  5235                        	.sym	wint_t,0,16,14,16
  5236                        	.sym	wchar_t,0,14,14,8
  5237                        	.sym	ptrdiff_t,0,7,14,32
  5238                        	.sym	size_t,0,16,14,16
  5239                        	end


      Lines assembled: 5239
      Errors: 0
