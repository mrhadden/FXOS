  Sat Jul 10 2021  1:15                                                Page 1


                     ***************************************
                     **      WDC 65C816 Macro Assembler   **
                     **                                   **
                     **     Version 3.49.1- Feb  6 2006    **
                     ***************************************

     1                        ;:ts=8
     2             00000001   R0	equ	1
     3             00000005   R1	equ	5
     4             00000009   R2	equ	9
     5             0000000D   R3	equ	13
     6                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\drivers\DRIVER_FMXIDE.c",0
     7                        ;#include "fxos.h"
     8                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos.h",0
     9                        	.file	"G:\devtools\WDCTools\wdc\Tools\include\
                    stdlib.h",0
    10                        	.file	"G:\devtools\WDCTools\wdc\Tools\include\
                    stddef.h",0
    11                        	.line	88
    12                        	.file	"G:\devtools\WDCTools\wdc\Tools\include\
                    stdlib.h",43
    13                        	.stag	fake1_,32,1
    14                        	.member	quot,0,5,8,16
    15                        	.member	rem,16,5,8,16
    16                        	.eos
    17                        	.stag	fake2_,64,2
    18                        	.member	quot,0,7,8,32
    19                        	.member	rem,32,7,8,32
    20                        	.eos
    21                        	.stag	int_sqrt,32,3
    22                        	.member	sqrt,0,16,8,16
    23                        	.member	frac,16,16,8,16
    24                        	.eos
    25                        	.line	205
    26                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos.h",4
    27                        	.file	"G:\devtools\WDCTools\wdc\Tools\include\
                    string.h",0
    28                        	.line	134
    29                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos.h",5
    30                        	.file	"G:\devtools\WDCTools\wdc\Tools\include\
                    ctype.h",0
    31                        	.line	103
    32                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos.h",6
    33                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxtypes.h",0
    34                        	.stag	_fx_bytebits,8,4
    35                        	.member	b7,0,14,17,1
    36                        	.member	b6,1,14,17,1
    37                        	.member	b5,2,14,17,1
    38                        	.member	b4,3,14,17,1
    39                        	.member	b3,4,14,17,1
    40                        	.member	b2,5,14,17,1
    41                        	.member	b1,6,14,17,1
  Sat Jul 10 2021  1:15                                                Page 2


    42                        	.member	b0,7,14,17,1
    43                        	.eos
    44                        	.stag	_fx_node,384,5
    45                        	.member	type,0,14,8,8
    46                        	.member	Reserved0,8,14,8,8
    47                        	.member	data,16,129,8,32
    48                        	.member	last,48,138,8,32,5
    49                        	.member	next,80,138,8,32,5
    50                        	.member	name,112,110,8,0,32
    51                        	.member	Reserved1,368,16,8,16
    52                        	.eos
    53                        	.stag	_fx_nodelist,96,6
    54                        	.member	listhead,0,138,8,32,5
    55                        	.member	listData,32,129,8,32
    56                        	.member	deallocator,64,641,8,32
    57                        	.eos
    58                        	.stag	_fx_queue,80,7
    59                        	.member	count,0,5,8,16
    60                        	.member	front,16,138,8,32,5
    61                        	.member	rear,48,138,8,32,5
    62                        	.eos
    63                        	.stag	fake8_,32,8
    64                        	.member	subsystem,0,14,8,8
    65                        	.member	level,8,14,8,8
    66                        	.member	error,16,16,8,16
    67                        	.eos
    68                        	.stag	_fx_process_signal,16,9
    69                        	.member	cbSize,0,16,8,16
    70                        	.eos
    71                        	.stag	_fx_semaphore,16,10
    72                        	.member	reserved,0,5,8,16
    73                        	.eos
    74                        	.stag	_fx_fileBlock,552,11
    75                        	.member	openCount,0,16,8,16
    76                        	.member	lockCount,16,16,8,16
    77                        	.member	dirty,32,14,8,8
    78                        	.member	fileBuffer,40,110,8,0,64
    79                        	.eos
    80                        	.stag	_fx_irq_data,48,12
    81                        	.member	line,0,5,8,16
    82                        	.member	keycode,16,142,8,32
    83                        	.eos
    84                        	.stag	_task,48,13
    85                        	.member	SPL,0,14,8,8
    86                        	.member	SPH,8,14,8,8
    87                        	.member	pstack,16,142,8,32
    88                        	.eos
    89                        	.stag	_task_stack,32,14
    90                        	.member	SS,0,142,8,32
    91                        	.eos
    92                        	.stag	int_regs,104,15
    93                        	.member	PB,0,14,8,8
    94                        	.member	PH,8,14,8,8
    95                        	.member	PL,16,14,8,8
    96                        	.member	PP,24,14,8,8
    97                        	.member	DB,32,14,8,8
    98                        	.member	DH,40,14,8,8
    99                        	.member	DL,48,14,8,8
  Sat Jul 10 2021  1:15                                                Page 3


   100                        	.member	AH,56,14,8,8
   101                        	.member	AL,64,14,8,8
   102                        	.member	XH,72,14,8,8
   103                        	.member	XL,80,14,8,8
   104                        	.member	YH,88,14,8,8
   105                        	.member	YL,96,14,8,8
   106                        	.eos
   107                        	.stag	_fx_eventMessage,304,16
   108                        	.member	src,0,18,8,32
   109                        	.member	dest,32,18,8,32
   110                        	.member	type,64,16,8,16
   111                        	.member	hwnd,80,129,8,32
   112                        	.member	pheap,112,129,8,32
   113                        	.member	msgTime,144,18,8,32
   114                        	.member	data,176,110,8,0,16
   115                        	.eos
   116                        	.stag	_fx_cmdMessage,304,17
   117                        	.member	src,0,18,8,32
   118                        	.member	dest,32,18,8,32
   119                        	.member	type,64,16,8,16
   120                        	.member	hwnd,80,129,8,32
   121                        	.member	pheap,112,129,8,32
   122                        	.member	msgTime,144,18,8,32
   123                        	.member	cmdCId,176,16,8,16
   124                        	.member	cmdMId,192,16,8,16
   125                        	.member	parameter1,208,18,8,32
   126                        	.member	parameter2,240,18,8,32
   127                        	.member	parameter3,272,18,8,32
   128                        	.eos
   129                        	.stag	_fx_console_ctl,448,18
   130                        	.member	maxCols,0,5,8,16
   131                        	.member	maxRows,16,5,8,16
   132                        	.member	curX,32,5,8,16
   133                        	.member	curY,48,5,8,16
   134                        	.member	fgColor,64,5,8,16
   135                        	.member	bgColor,80,5,8,16
   136                        	.member	mode,96,14,8,8
   137                        	.member	kbBuffer,104,101,8,0,16
   138                        	.member	screenBuffer,360,142,8,32
   139                        	.member	desktopMode,392,14,8,8
   140                        	.member	lastMouseButton,400,5,8,16
   141                        	.member	lastMouseX,416,5,8,16
   142                        	.member	lastMouseY,432,5,8,16
   143                        	.eos
   144                        	.stag	_fx_desktop_ctl,392,19
   145                        	.member	desktopMode,0,14,8,8
   146                        	.member	cursorCtl,8,5,8,16
   147                        	.member	cursorState,24,5,8,16
   148                        	.member	backgroundColor,40,5,8,16
   149                        	.member	foregroundColor,56,5,8,16
   150                        	.member	menuMode,72,5,8,16
   151                        	.member	lastMouseButton,88,5,8,16
   152                        	.member	lastMouseX,104,5,8,16
   153                        	.member	lastMouseY,120,5,8,16
   154                        	.member	currentDiskName,136,142,8,32
   155                        	.member	diskNodes,168,129,8,32
   156                        	.member	titleNodes,200,129,8,32
   157                        	.member	menuNodes,232,129,8,32
  Sat Jul 10 2021  1:15                                                Page 4


   158                        	.member	iconNodes,264,129,8,32
   159                        	.member	windowNodes,296,129,8,32
   160                        	.member	fontNodes,328,129,8,32
   161                        	.member	wndProc,360,138,8,32,6
   162                        	.eos
   163                        	.stag	_fx_process,800,20
   164                        	.member	cbSize,0,5,8,16
   165                        	.member	procId,16,18,8,32
   166                        	.member	parentId,48,18,8,32
   167                        	.member	ctx,80,129,8,32
   168                        	.member	userId,112,16,8,16
   169                        	.member	status,128,16,8,16
   170                        	.member	foregroundActive,144,14,8,8
   171                        	.member	tls,152,1121,8,32,8
   172                        	.member	commandLine,408,142,8,32
   173                        	.member	semaphores,440,138,8,32,6
   174                        	.member	fileHandles,472,138,8,32,6
   175                        	.member	pathList,504,138,8,32,6
   176                        	.member	resources,536,138,8,32,6
   177                        	.member	timerAware,568,14,8,8
   178                        	.member	timerTicks,576,112,8,0,2
   179                        	.member	timerTickCount,608,112,8,0,2
   180                        	.member	kernelError,640,10,8,32,8
   181                        	.member	consoleCtl,672,138,8,32,18
   182                        	.member	desktopCtl,704,138,8,32,19
   183                        	.member	execProc,736,641,8,32
   184                        	.member	startupArgs,768,129,8,32
   185                        	.eos
   186                        	.stag	_fxProcessMessage,112,21
   187                        	.member	src,0,18,8,32
   188                        	.member	dest,32,18,8,32
   189                        	.member	type,64,16,8,16
   190                        	.member	processInfo,80,138,8,32,20
   191                        	.eos
   192                        	.stag	_k_key_state,112,22
   193                        	.member	scanCode,0,14,8,8
   194                        	.member	isShifted,8,14,8,8
   195                        	.member	isAlt,16,14,8,8
   196                        	.member	isExtended,24,14,8,8
   197                        	.member	isCapsLock,32,14,8,8
   198                        	.member	isNumLock,40,14,8,8
   199                        	.member	isScrollLock,48,14,8,8
   200                        	.member	keyChar,56,16,8,16
   201                        	.member	scanTime,72,18,8,32
   202                        	.member	ledStatus,104,14,8,8
   203                        	.eos
   204                        	.stag	_fx_property,384,23
   205                        	.member	name,0,110,8,0,16
   206                        	.member	value,128,110,8,0,32
   207                        	.eos
   208                        	.utag	_24bitPointer,32,24
   209                        	.member	address,0,142,11,32
   210                        	.member	bytes,0,110,11,0,4
   211                        	.eos
   212                        	.stag	_PointStruct,32,25
   213                        	.member	x,0,5,8,16
   214                        	.member	y,16,5,8,16
   215                        	.eos
  Sat Jul 10 2021  1:15                                                Page 5


   216                        	.stag	_RectStruct,112,26
   217                        	.member	x,0,5,8,16
   218                        	.member	y,16,5,8,16
   219                        	.member	z,32,18,8,32
   220                        	.member	width,64,5,8,16
   221                        	.member	height,80,5,8,16
   222                        	.member	attr,96,5,8,16
   223                        	.eos
   224                        	.stag	fake27_,96,27
   225                        	.member	name,0,142,8,32
   226                        	.member	topLeft,32,10,8,32,25
   227                        	.member	bottomRight,64,10,8,32,25
   228                        	.eos
   229                        	.stag	fake28_,112,28
   230                        	.member	x,0,5,8,16
   231                        	.member	y,16,5,8,16
   232                        	.member	z,32,5,8,16
   233                        	.member	width,48,5,8,16
   234                        	.member	height,64,5,8,16
   235                        	.member	data,80,18,8,32
   236                        	.eos
   237                        	.stag	_k_WindowClass,272,29
   238                        	.member	cbSize,0,16,8,16
   239                        	.member	style,16,16,8,16
   240                        	.member	styleEx,32,16,8,16
   241                        	.member	pWndProc,48,654,8,32
   242                        	.member	hInstance,80,129,8,32
   243                        	.member	hIcon,112,129,8,32
   244                        	.member	hCursor,144,129,8,32
   245                        	.member	hbrBackground,176,129,8,32
   246                        	.member	lpszMenuName,208,142,8,32
   247                        	.member	lpszClassName,240,142,8,32
   248                        	.eos
   249                        	.stag	_ClickableRect,152,30
   250                        	.member	area,0,10,8,112,26
   251                        	.member	z,112,18,8,32
   252                        	.member	enabled,144,14,8,8
   253                        	.eos
   254                        	.stag	_NCClickableRect,136,31
   255                        	.member	area,0,10,8,112,26
   256                        	.member	msgType,112,16,8,16
   257                        	.member	enabled,128,14,8,8
   258                        	.eos
   259                        	.stag	_DragData,216,32
   260                        	.member	area,0,10,8,112,26
   261                        	.member	xoffset,112,5,8,16
   262                        	.member	yoffset,128,5,8,16
   263                        	.member	msgType,144,16,8,16
   264                        	.member	ncAction,160,16,8,16
   265                        	.member	isDrag,176,14,8,8
   266                        	.member	isResize,184,14,8,8
   267                        	.member	canDrag,192,14,8,8
   268                        	.member	canDrop,200,14,8,8
   269                        	.member	didDrag,208,14,8,8
   270                        	.eos
   271                        	.stag	_k_WindowStruct,3904,33
   272                        	.member	cbSize,0,16,8,16
   273                        	.member	style,16,18,8,32
  Sat Jul 10 2021  1:15                                                Page 6


   274                        	.member	styleEx,48,18,8,32
   275                        	.member	win_id,80,5,8,16
   276                        	.member	win_x,96,5,8,16
   277                        	.member	win_y,112,5,8,16
   278                        	.member	win_width,128,5,8,16
   279                        	.member	win_height,144,5,8,16
   280                        	.member	win_xoffset,160,5,8,16
   281                        	.member	win_yoffset,176,5,8,16
   282                        	.member	win_cxoffset,192,5,8,16
   283                        	.member	win_cyoffset,208,5,8,16
   284                        	.member	wndRect,224,10,8,112,26
   285                        	.member	clientRect,336,10,8,112,26
   286                        	.member	nonclientGadgets,448,106,8,0,31,16
   287                        	.member	clickable,2624,129,8,32
   288                        	.member	win_title,2656,110,8,0,32
   289                        	.member	Reserved0,2912,16,8,16
   290                        	.member	win_class,2928,110,8,0,16
   291                        	.member	win_class_name,3056,110,8,0,32
   292                        	.member	nBitmapLayer,3312,16,8,16
   293                        	.member	bgRegion,3328,129,8,32
   294                        	.member	procid,3360,18,8,32
   295                        	.member	pWndClass,3392,138,8,32,29
   296                        	.member	pParentWindow,3424,129,8,32
   297                        	.member	hMenu,3456,129,8,32
   298                        	.member	hPointer,3488,129,8,32
   299                        	.member	hBackground,3520,129,8,32
   300                        	.member	pChildWindows,3552,138,8,32,6
   301                        	.member	pChildHitList,3584,138,8,32,6
   302                        	.member	isVisible,3616,14,8,8
   303                        	.member	windowData,3624,129,8,32
   304                        	.member	clientData,3656,1121,8,32,6
   305                        	.member	isClosed,3848,14,8,8
   306                        	.member	isClosing,3856,14,8,8
   307                        	.member	isDesktop,3864,14,8,8
   308                        	.member	clickableNode,3872,138,8,32,5
   309                        	.eos
   310                        	.stag	_k_WindowStructEx,3880,34
   311                        	.member	cbSize,0,16,8,16
   312                        	.member	style,16,18,8,32
   313                        	.member	styleEx,48,18,8,32
   314                        	.member	win_id,80,5,8,16
   315                        	.member	win_x,96,5,8,16
   316                        	.member	win_y,112,5,8,16
   317                        	.member	win_width,128,5,8,16
   318                        	.member	win_height,144,5,8,16
   319                        	.member	win_xoffset,160,5,8,16
   320                        	.member	win_yoffset,176,5,8,16
   321                        	.member	win_cxoffset,192,5,8,16
   322                        	.member	win_cyoffset,208,5,8,16
   323                        	.member	wndRect,224,10,8,112,26
   324                        	.member	clientRect,336,10,8,112,26
   325                        	.member	nonclientGadgets,448,106,8,0,31,16
   326                        	.member	clickable,2624,129,8,32
   327                        	.member	win_title,2656,110,8,0,32
   328                        	.member	Reserved0,2912,16,8,16
   329                        	.member	win_class,2928,110,8,0,16
   330                        	.member	nBitmapLayer,3056,16,8,16
   331                        	.member	procid,3072,18,8,32
  Sat Jul 10 2021  1:15                                                Page 7


   332                        	.member	pWndClass,3104,138,8,32,29
   333                        	.member	pParentWindow,3136,129,8,32
   334                        	.member	hMenu,3168,129,8,32
   335                        	.member	hPointer,3200,129,8,32
   336                        	.member	hBackground,3232,129,8,32
   337                        	.member	pChildWindows,3264,138,8,32,6
   338                        	.member	pChildHitList,3296,138,8,32,6
   339                        	.member	isVisible,3328,14,8,8
   340                        	.member	windowData,3336,129,8,32
   341                        	.member	clientData,3368,1121,8,32,4
   342                        	.member	isClosed,3496,14,8,8
   343                        	.member	hWnd,3504,129,8,32
   344                        	.member	localRect,3536,10,8,112,26
   345                        	.member	globalRect,3648,10,8,112,26
   346                        	.member	clientOffsetRect,3760,10,8,112,26
   347                        	.member	isDesktop,3872,14,8,8
   348                        	.eos
   349                        	.stag	_FontMetric,32,35
   350                        	.member	width,0,5,8,16
   351                        	.member	height,16,5,8,16
   352                        	.eos
   353                        	.stag	_MenuStruct,280,36
   354                        	.member	cx,0,5,8,16
   355                        	.member	cy,16,5,8,16
   356                        	.member	width,32,5,8,16
   357                        	.member	height,48,5,8,16
   358                        	.member	fcolor,64,14,8,8
   359                        	.member	bcolor,72,14,8,8
   360                        	.member	chromeLeft,80,14,8,8
   361                        	.member	chromeRight1,88,14,8,8
   362                        	.member	chromeRight2,96,14,8,8
   363                        	.member	hFont,104,129,8,32
   364                        	.member	itemId,136,16,8,16
   365                        	.member	pCaption,152,142,8,32
   366                        	.member	subMenus,184,138,8,32,6
   367                        	.member	pBackground,216,129,8,32
   368                        	.member	hWndOwner,248,129,8,32
   369                        	.eos
   370                        	.stag	fake37_,160,37
   371                        	.member	menuId,0,16,8,16
   372                        	.member	caption,16,142,8,32
   373                        	.member	rect,48,10,8,112,26
   374                        	.eos
   375                        	.stag	fake38_,5152,38
   376                        	.member	pParent,0,138,8,32,33
   377                        	.member	rect,32,10,8,112,26
   378                        	.member	captions,144,1134,8,32,24
   379                        	.member	chrome,912,110,8,0,24
   380                        	.member	ids,1104,112,8,0,24
   381                        	.member	clickable,1488,106,8,0,30,24
   382                        	.member	selected,5136,16,8,16
   383                        	.eos
   384                        	.stag	_fx_button_t,96,39
   385                        	.member	pCaption,0,142,8,32
   386                        	.member	cCaption,32,16,8,16
   387                        	.member	data,48,129,8,32
   388                        	.member	captionPixelWidth,80,16,8,16
   389                        	.eos
  Sat Jul 10 2021  1:15                                                Page 8


   390                        	.stag	_fx_scrollbar_t,240,40
   391                        	.member	min,0,16,8,16
   392                        	.member	max,16,16,8,16
   393                        	.member	increment,32,16,8,16
   394                        	.member	stopsize,48,16,8,16
   395                        	.member	location,64,5,8,16
   396                        	.member	state,80,5,8,16
   397                        	.member	rectThumb,96,10,8,112,26
   398                        	.member	data,208,129,8,32
   399                        	.eos
   400                        	.stag	_fx_listbox_t,240,41
   401                        	.member	pos,0,5,8,16
   402                        	.member	selected,16,16,8,16
   403                        	.member	offsetX,32,5,8,16
   404                        	.member	offsetY,48,5,8,16
   405                        	.member	inc,64,5,8,16
   406                        	.member	direction,80,5,8,16
   407                        	.member	top,96,5,8,16
   408                        	.member	bottom,112,5,8,16
   409                        	.member	indexTop,128,5,8,16
   410                        	.member	indexBottom,144,5,8,16
   411                        	.member	maxItems,160,16,8,16
   412                        	.member	fontSet,176,142,8,32
   413                        	.member	data,208,129,8,32
   414                        	.eos
   415                        	.stag	_fx_textbox_t,144,42
   416                        	.member	pos,0,5,8,16
   417                        	.member	selected,16,16,8,16
   418                        	.member	offsetX,32,5,8,16
   419                        	.member	offsetY,48,5,8,16
   420                        	.member	isShifted,64,14,8,8
   421                        	.member	cursorState,72,14,8,8
   422                        	.member	fontSet,80,142,8,32
   423                        	.member	data,112,129,8,32
   424                        	.eos
   425                        	.stag	_fx_msgbox_t,144,43
   426                        	.member	pos,0,5,8,16
   427                        	.member	selected,16,16,8,16
   428                        	.member	offsetX,32,5,8,16
   429                        	.member	offsetY,48,5,8,16
   430                        	.member	isShifted,64,14,8,8
   431                        	.member	cursorState,72,14,8,8
   432                        	.member	fontSet,80,142,8,32
   433                        	.member	data,112,129,8,32
   434                        	.eos
   435                        	.stag	_fx_menuAnchor_t,272,44
   436                        	.member	pCaption,0,142,8,32
   437                        	.member	renderLayoutX,32,16,8,16
   438                        	.member	renderLayoutY,48,16,8,16
   439                        	.member	captionPixelWidth,64,16,8,16
   440                        	.member	data,80,129,8,32
   441                        	.member	droppedWindow,112,138,8,32,33
   442                        	.member	bytes,144,110,8,0,16
   443                        	.eos
   444                        	.stag	_SubMenuStruct,64,45
   445                        	.member	caption,0,142,8,32
   446                        	.member	action,32,641,8,32
   447                        	.eos
  Sat Jul 10 2021  1:15                                                Page 9


   448                        	.stag	_SubMenuListStruct,40,46
   449                        	.member	cMenus,0,14,8,8
   450                        	.member	psubmenus,8,9354,8,32,45
   451                        	.eos
   452                        	.stag	_fx_ComBuffer,2080,47
   453                        	.member	cbSize,0,16,8,16
   454                        	.member	cbBuffer,16,16,8,16
   455                        	.member	buffer,32,110,8,0,256
   456                        	.eos
   457                        	.stag	_fx_resource_header,72,48
   458                        	.member	magic,0,110,8,0,4
   459                        	.member	major,32,14,8,8
   460                        	.member	minor,40,14,8,8
   461                        	.member	type,48,14,8,8
   462                        	.member	reserved,56,14,8,8
   463                        	.member	resheaderSize,64,14,8,8
   464                        	.eos
   465                        	.stag	_fx_resource_header_font,144,49
   466                        	.member	title,0,110,8,0,16
   467                        	.member	height,128,14,8,8
   468                        	.member	width,136,14,8,8
   469                        	.eos
   470                        	.line	1010
   471                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos.h",8
   472                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxstringtable.h",0
   473                        	.line	89
   474                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos.h",9
   475                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxc256u.h",0
   476                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxtypes.h",0
   477                        	.line	1010
   478                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxc256u.h",5
   479                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fmx_vicky.h",0
   480                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxtypes.h",0
   481                        	.line	1010
   482                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fmx_vicky.h",11
   483                        	.line	72
   484                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxc256u.h",6
   485                        	.line	1960
   486                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos.h",16
   487                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxkernel.h",0
   488                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos.h",0
   489                        	.line	30
   490                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxkernel.h",5
   491                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
  Sat Jul 10 2021  1:15                                                Page 10


                    space\FXOSv1\src\fxnode.h",0
   492                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxtypes.h",0
   493                        	.line	1010
   494                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxnode.h",11
   495                        	.line	114
   496                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxkernel.h",6
   497                        	.stag	_fx_api_call_table,8192,50
   498                        	.member	call_table,0,1121,8,32,256
   499                        	.eos
   500                        	.stag	_fx_zero_page,824,51
   501                        	.member	fxos_mouse_byte_0,0,14,8,8
   502                        	.member	fxos_mouse_byte_1,8,14,8,8
   503                        	.member	fxos_mouse_byte_2,16,14,8,8
   504                        	.member	fxos_mouse_byte_t,24,14,8,8
   505                        	.member	fxos_mouse_byte_x_l,32,14,8,8
   506                        	.member	fxos_mouse_byte_x_h,40,14,8,8
   507                        	.member	fxos_mouse_byte_y_l,48,14,8,8
   508                        	.member	fxos_mouse_byte_y_h,56,14,8,8
   509                        	.member	fxos_key_byte_0,64,14,8,8
   510                        	.member	fxos_key_byte_1,72,14,8,8
   511                        	.member	fxos_key_byte_2,80,14,8,8
   512                        	.member	fxos_mouse_ctl,88,14,8,8
   513                        	.member	fxos_mouse_index,96,14,8,8
   514                        	.member	fxos_mouse_status,104,14,8,8
   515                        	.member	fxos_mouse_dbg_1,112,18,8,32
   516                        	.member	fxos_mouse_dbg_2,144,18,8,32
   517                        	.member	fxos_mouse_dbg_3,176,18,8,32
   518                        	.member	fxos_vicky_byte_0,208,14,8,8
   519                        	.member	fxos_vicky_byte_1,216,14,8,8
   520                        	.member	fxos_vicky_byte_2,224,14,8,8
   521                        	.member	VersionMajor,232,16,8,16
   522                        	.member	VersionMinor,248,16,8,16
   523                        	.member	VersionRelease,264,16,8,16
   524                        	.member	topMemory,280,18,8,32
   525                        	.member	bottomMemory,312,18,8,32
   526                        	.member	availableMemory,344,18,8,32
   527                        	.member	availableMemoryK,376,18,8,32
   528                        	.member	availableHeapMemory,408,18,8,32
   529                        	.member	availableHeapMemoryK,440,18,8,32
   530                        	.member	fxos_console_row,472,16,8,16
   531                        	.member	fxos_console_col,488,16,8,16
   532                        	.member	executive,504,129,8,32
   533                        	.member	eventmanager,536,129,8,32
   534                        	.member	devicemanager,568,129,8,32
   535                        	.member	windowmanager,600,129,8,32
   536                        	.member	fxos_kernel_api,632,138,8,32,50
   537                        	.member	fxos_dos_api,664,138,8,32,50
   538                        	.member	fxos_gfx_api,696,138,8,32,50
   539                        	.member	fxos_gui_api,728,138,8,32,50
   540                        	.member	fxos_con_api,760,138,8,32,50
   541                        	.member	fxos_reserved_2_api,792,138,8,32,50
   542                        	.eos
   543                        	.stag	_fx_environment,96,52
   544                        	.member	variables,0,142,8,32
   545                        	.member	reserved1,32,5,8,16
  Sat Jul 10 2021  1:15                                                Page 11


   546                        	.member	reserved2,48,5,8,16
   547                        	.member	reserved3,64,5,8,16
   548                        	.member	reserved4,80,5,8,16
   549                        	.eos
   550                        	.stag	_debug_byte_bits,8,53
   551                        	.member	bit7,0,14,17,1
   552                        	.member	bit6,1,14,17,1
   553                        	.member	bit5,2,14,17,1
   554                        	.member	bit4,3,14,17,1
   555                        	.member	bit3,4,14,17,1
   556                        	.member	bit2,5,14,17,1
   557                        	.member	bit1,6,14,17,1
   558                        	.member	bit0,7,14,17,1
   559                        	.eos
   560                        	.stag	_k_segmentheader,160,54
   561                        	.member	version_major,0,14,8,8
   562                        	.member	version_minor,8,14,8,8
   563                        	.member	length,16,5,8,16
   564                        	.member	segment_start_addr,32,7,8,32
   565                        	.member	segment_end_addr,64,7,8,32
   566                        	.member	segment_size,96,7,8,32
   567                        	.member	main_entry_addr,128,7,8,32
   568                        	.eos
   569                        	.stag	_fx_device_driver,776,55
   570                        	.member	name,0,110,8,0,32
   571                        	.member	version,256,110,8,0,16
   572                        	.member	hmajor,384,110,8,0,8
   573                        	.member	hminor,448,110,8,0,8
   574                        	.member	type,512,14,8,8
   575                        	.member	designation,520,110,8,0,6
   576                        	.member	reserved_1,568,16,8,16
   577                        	.member	f_driver_irq,584,129,8,32
   578                        	.member	driver_context,616,129,8,32
   579                        	.member	f_driver_load,648,129,8,32
   580                        	.member	f_driver_read,680,129,8,32
   581                        	.member	f_driver_write,712,129,8,32
   582                        	.member	f_driver_unload,744,129,8,32
   583                        	.eos
   584                        	.stag	_fx_block_device_driver,808,56
   585                        	.member	name,0,110,8,0,32
   586                        	.member	version,256,110,8,0,16
   587                        	.member	hmajor,384,110,8,0,8
   588                        	.member	hminor,448,110,8,0,8
   589                        	.member	type,512,14,8,8
   590                        	.member	designation,520,110,8,0,6
   591                        	.member	reserved_1,568,16,8,16
   592                        	.member	f_driver_irq,584,129,8,32
   593                        	.member	driver_context,616,129,8,32
   594                        	.member	f_driver_load,648,129,8,32
   595                        	.member	f_driver_read,680,129,8,32
   596                        	.member	f_driver_write,712,129,8,32
   597                        	.member	f_driver_unload,744,129,8,32
   598                        	.member	f_driver_command,776,129,8,32
   599                        	.eos
   600                        	.line	400
   601                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos.h",22
   602                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
  Sat Jul 10 2021  1:15                                                Page 12


                    space\FXOSv1\src\fxconsole.h",0
   603                        	.file	"G:\devtools\WDCTools\wdc\Tools\include\
                    string.h",0
   604                        	.line	134
   605                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxconsole.h",5
   606                        	.file	"G:\devtools\WDCTools\wdc\Tools\include\
                    stdlib.h",0
   607                        	.line	205
   608                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxconsole.h",6
   609                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxtypes.h",0
   610                        	.line	1010
   611                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxconsole.h",7
   612                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxc256u.h",0
   613                        	.line	1960
   614                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxconsole.h",12
   615                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxstring.h",0
   616                        	.file	"G:\devtools\WDCTools\wdc\Tools\include\
                    stdlib.h",0
   617                        	.line	205
   618                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxstring.h",5
   619                        	.file	"G:\devtools\WDCTools\wdc\Tools\include\
                    string.h",0
   620                        	.line	134
   621                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxstring.h",6
   622                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxtypes.h",0
   623                        	.line	1010
   624                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxstring.h",7
   625                        	.stag	_fx_string,64,57
   626                        	.member	size,0,16,8,16
   627                        	.member	pos,16,5,8,16
   628                        	.member	buffer,32,142,8,32
   629                        	.eos
   630                        	.line	139
   631                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxconsole.h",17
   632                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxeventmanager.h",0
   633                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos.h",0
   634                        	.line	30
   635                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxeventmanager.h",5
   636                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxexec.h",0
   637                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxtypes.h",0
   638                        	.line	1010
  Sat Jul 10 2021  1:15                                                Page 13


   639                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxexec.h",5
   640                        	.stag	_fxos_executive_vtable,128,58
   641                        	.member	Init,0,8833,8,32
   642                        	.member	Configure,32,656,8,32
   643                        	.member	Query,64,656,8,32
   644                        	.member	Uninit,96,641,8,32
   645                        	.eos
   646                        	.line	86
   647                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxeventmanager.h",6
   648                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxnode.h",0
   649                        	.line	114
   650                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxeventmanager.h",7
   651                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxconsole.h",0
   652                        	.line	208
   653                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxeventmanager.h",8
   654                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxwindowmanager.h",0
   655                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos.h",0
   656                        	.line	30
   657                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxwindowmanager.h",5
   658                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxmemorymanager.h",0
   659                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos.h",0
   660                        	.line	30
   661                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxmemorymanager.h",5
   662                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\umm_malloc_cfg.h",0
   663                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos_build_parameters.h",0
   664                        	.line	35
   665                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\umm_malloc_cfg.h",8
   666                        	.stag	UMM_HEAP_INFO_t,256,59
   667                        	.member	totalEntries,0,18,8,32
   668                        	.member	usedEntries,32,18,8,32
   669                        	.member	freeEntries,64,18,8,32
   670                        	.member	totalBlocks,96,18,8,32
   671                        	.member	usedBlocks,128,18,8,32
   672                        	.member	freeBlocks,160,18,8,32
   673                        	.member	maxFreeContiguousBlocks,192,18,8,32
   674                        	.member	blockSize,224,18,8,32
   675                        	.eos
   676                        	.line	199
   677                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxmemorymanager.h",6
   678                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\umm_malloc.h",0
   679                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
  Sat Jul 10 2021  1:15                                                Page 14


                    space\FXOSv1\src\fxtypes.h",0
   680                        	.line	1010
   681                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\umm_malloc.h",11
   682                        	.line	24
   683                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxmemorymanager.h",7
   684                        	.stag	_fx_memory_map,2072,60
   685                        	.member	availableMemory,0,18,8,32
   686                        	.member	valid_segments,32,110,8,0,255
   687                        	.eos
   688                        	.stag	_fx_ipc_port,144,61
   689                        	.member	id,0,18,8,32
   690                        	.member	type,32,14,8,8
   691                        	.member	name,40,138,8,32,57
   692                        	.member	time,72,18,8,32
   693                        	.member	queue,104,138,8,32,7
   694                        	.member	reserved_1,136,14,8,8
   695                        	.eos
   696                        	.line	105
   697                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxwindowmanager.h",6
   698                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxeventmanager.h",0
   699                        	.line	564
   700                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxwindowmanager.h",7
   701                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxgui.h",0
   702                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxfont.h",0
   703                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxtypes.h",0
   704                        	.line	1010
   705                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxfont.h",6
   706                        	.line	74
   707                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxgui.h",5
   708                        	.stag	_click_detected,64,62
   709                        	.member	window,0,138,8,32,33
   710                        	.member	handler,32,641,8,32
   711                        	.eos
   712                        	.stag	_current_palette_map,400,63
   713                        	.member	CUR_DESKTOP,0,5,8,16
   714                        	.member	CUR_BACKGROUND,16,5,8,16
   715                        	.member	CUR_FONT,32,5,8,16
   716                        	.member	CUR_SELECTED_FONT,48,5,8,16
   717                        	.member	CUR_HIGHLIGHT_COLOR,64,5,8,16
   718                        	.member	CUR_WINDOWFRAME,80,5,8,16
   719                        	.member	CUR_WINDOWBORDER,96,5,8,16
   720                        	.member	CUR_WINDOWSHADOW,112,5,8,16
   721                        	.member	CUR_MENU,128,5,8,16
   722                        	.member	CUR_GADGET,144,5,8,16
   723                        	.member	CUR_COLOR,160,101,8,0,15
   724                        	.eos
   725                        	.line	359
   726                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
  Sat Jul 10 2021  1:15                                                Page 15


                    space\FXOSv1\src\fxwindowmanager.h",8
   727                        	.stag	_fxos_winman_vtable,160,64
   728                        	.member	Events,0,641,8,32
   729                        	.member	ConfigureWindowManager,32,656,8,32
   730                        	.member	ProcessWindowEvent,64,8833,8,32
   731                        	.member	QueryWindowManager,96,656,8,32
   732                        	.member	DoWndProcs,128,641,8,32
   733                        	.eos
   734                        	.stag	fake65_,64,65
   735                        	.member	type,0,16,8,16
   736                        	.member	size,16,16,8,16
   737                        	.member	desktopAction,32,129,8,32
   738                        	.eos
   739                        	.stag	fake66_,96,66
   740                        	.member	type,0,16,8,16
   741                        	.member	caption,16,138,8,32,57
   742                        	.member	buttonType,48,16,8,16
   743                        	.member	x,64,5,8,16
   744                        	.member	y,80,5,8,16
   745                        	.eos
   746                        	.stag	_childMessage_t,64,67
   747                        	.member	msgType,0,16,8,16
   748                        	.member	msgData,16,129,8,32
   749                        	.member	dataSize,48,16,8,16
   750                        	.eos
   751                        	.line	581
   752                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxeventmanager.h",9
   753                        	.stag	_fx_main_loopvars,16,68
   754                        	.member	dummy,0,5,8,16
   755                        	.eos
   756                        	.stag	_fxMouseMessageData,64,69
   757                        	.member	button1,0,14,8,8
   758                        	.member	button2,8,14,8,8
   759                        	.member	button3,16,14,8,8
   760                        	.member	button4,24,14,8,8
   761                        	.member	x,32,16,8,16
   762                        	.member	y,48,16,8,16
   763                        	.eos
   764                        	.utag	marshalled_data,32,70
   765                        	.member	byteValue,0,14,11,8
   766                        	.member	verbValue,0,110,11,0,2
   767                        	.member	intValue,0,16,11,16
   768                        	.member	longValue,0,18,11,32
   769                        	.member	pointerValue,0,129,11,32
   770                        	.eos
   771                        	.stag	_fx_eventProcess,64,71
   772                        	.member	process,0,138,8,32,20
   773                        	.member	eventProc,32,641,8,32
   774                        	.eos
   775                        	.stag	_mouse_msg_state,184,72
   776                        	.member	lastEvent,0,18,8,32
   777                        	.member	buttonLeftDown,32,14,8,8
   778                        	.member	lastLeftDown,40,18,8,32
   779                        	.member	buttonRightDown,72,14,8,8
   780                        	.member	lastRightDown,80,18,8,32
   781                        	.member	buttonMiddleDown,112,14,8,8
   782                        	.member	lastMiddleDown,120,18,8,32
  Sat Jul 10 2021  1:15                                                Page 16


   783                        	.member	lastX,152,16,8,16
   784                        	.member	lastY,168,16,8,16
   785                        	.eos
   786                        	.stag	_fxos_eventmanager_vtable,192,73
   787                        	.member	EventQueue,0,138,8,32,7
   788                        	.member	Init,32,8833,8,32
   789                        	.member	Run,64,656,8,32
   790                        	.member	Configure,96,656,8,32
   791                        	.member	Query,128,656,8,32
   792                        	.member	Uninit,160,641,8,32
   793                        	.eos
   794                        	.stag	_k_clipboard_data,168,74
   795                        	.member	type,0,14,8,8
   796                        	.member	readable,8,110,8,0,16
   797                        	.member	data,136,129,8,32
   798                        	.eos
   799                        	.line	564
   800                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxconsole.h",18
   801                        	.stag	_fx_spinner_ctx,48,75
   802                        	.member	index,0,5,8,16
   803                        	.member	spinner,16,142,8,32
   804                        	.eos
   805                        	.stag	_fx_console_ctx,1144,76
   806                        	.member	lineBufferIndex,0,5,8,16
   807                        	.member	lineBuffer,16,110,8,0,128
   808                        	.member	isShifted,1040,14,8,8
   809                        	.member	userData,1048,129,8,32
   810                        	.member	screenBuffer,1080,129,8,32
   811                        	.member	Reserved1,1112,129,8,32
   812                        	.eos
   813                        	.stag	_token,64,77
   814                        	.member	type,0,5,8,16
   815                        	.member	depth,16,16,8,16
   816                        	.member	text,32,142,8,32
   817                        	.eos
   818                        	.stag	_command_args,64,78
   819                        	.member	proc,0,656,8,32
   820                        	.member	tokens,32,138,8,32,5
   821                        	.eos
   822                        	.line	208
   823                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos.h",23
   824                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxstring.h",0
   825                        	.line	139
   826                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos.h",24
   827                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxnode.h",0
   828                        	.line	114
   829                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos.h",25
   830                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\ff.h",0
   831                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\ffconf.h",0
   832                        	.line	298
  Sat Jul 10 2021  1:15                                                Page 17


   833                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\ff.h",29
   834                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxtypes.h",0
   835                        	.line	1010
   836                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\ff.h",30
   837                        	.stag	fake79_,4504,79
   838                        	.member	fs_type,0,14,8,8
   839                        	.member	pdrv,8,14,8,8
   840                        	.member	n_fats,16,14,8,8
   841                        	.member	wflag,24,14,8,8
   842                        	.member	fsi_flag,32,14,8,8
   843                        	.member	id,40,5,8,16
   844                        	.member	n_rootdir,56,5,8,16
   845                        	.member	csize,72,5,8,16
   846                        	.member	lfnbuf,88,144,8,32
   847                        	.member	last_clst,120,18,8,32
   848                        	.member	free_clst,152,18,8,32
   849                        	.member	n_fatent,184,18,8,32
   850                        	.member	fsize,216,18,8,32
   851                        	.member	volbase,248,18,8,32
   852                        	.member	fatbase,280,18,8,32
   853                        	.member	dirbase,312,18,8,32
   854                        	.member	database,344,18,8,32
   855                        	.member	winsect,376,18,8,32
   856                        	.member	win,408,110,8,0,512
   857                        	.eos
   858                        	.stag	fake80_,128,80
   859                        	.member	fs,0,138,8,32,79
   860                        	.member	id,32,5,8,16
   861                        	.member	attr,48,14,8,8
   862                        	.member	stat,56,14,8,8
   863                        	.member	sclust,64,18,8,32
   864                        	.member	objsize,96,18,8,32
   865                        	.eos
   866                        	.stag	fake81_,4400,81
   867                        	.member	obj,0,10,8,128,80
   868                        	.member	flag,128,14,8,8
   869                        	.member	err,136,14,8,8
   870                        	.member	fptr,144,18,8,32
   871                        	.member	clust,176,18,8,32
   872                        	.member	sect,208,18,8,32
   873                        	.member	dir_sect,240,18,8,32
   874                        	.member	dir_ptr,272,142,8,32
   875                        	.member	buf,304,110,8,0,512
   876                        	.eos
   877                        	.stag	fake82_,416,82
   878                        	.member	obj,0,10,8,128,80
   879                        	.member	dptr,128,18,8,32
   880                        	.member	clust,160,18,8,32
   881                        	.member	sect,192,18,8,32
   882                        	.member	dir,224,142,8,32
   883                        	.member	fn,256,110,8,0,12
   884                        	.member	blk_ofs,352,18,8,32
   885                        	.member	pat,384,142,8,32
   886                        	.eos
   887                        	.stag	fake83_,2224,83
  Sat Jul 10 2021  1:15                                                Page 18


   888                        	.member	fsize,0,18,8,32
   889                        	.member	fdate,32,5,8,16
   890                        	.member	ftime,48,5,8,16
   891                        	.member	fattrib,64,14,8,8
   892                        	.member	altname,72,110,8,0,13
   893                        	.member	fname,176,110,8,0,256
   894                        	.eos
   895                        	.stag	fake84_,80,84
   896                        	.member	fmt,0,14,8,8
   897                        	.member	n_fat,8,14,8,8
   898                        	.member	align,16,16,8,16
   899                        	.member	n_root,32,16,8,16
   900                        	.member	au_size,48,18,8,32
   901                        	.eos
   902                        	.line	429
   903                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos.h",26
   904                        	.line	30
   905                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\drivers\DRIVER_FMXIDE.c",1
   906                        ;#include "fxdos.h"
   907                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxdos.h",0
   908                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxtypes.h",0
   909                        	.line	1010
   910                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxdos.h",5
   911                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\ff.h",0
   912                        	.line	429
   913                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxdos.h",6
   914                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\diskio.h",0
   915                        	.line	85
   916                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxdos.h",7
   917                        	.stag	_fx_sd_direntry,256,85
   918                        	.member	filename,0,110,8,0,11
   919                        	.member	type,88,14,8,8
   920                        	.member	attrs,96,110,8,0,20
   921                        	.eos
   922                        	.stag	_fx_info,416,86
   923                        	.member	stgName,0,110,8,0,32
   924                        	.member	Reserved1,256,14,8,8
   925                        	.member	stgType,264,16,8,16
   926                        	.member	Reserved2,280,14,8,8
   927                        	.member	stgReserved,288,110,8,0,16
   928                        	.eos
   929                        	.stag	_fx_fileinfo,136,87
   930                        	.member	type,0,14,8,8
   931                        	.member	pFilename,8,142,8,32
   932                        	.member	lSize,40,18,8,32
   933                        	.member	lcreateDate,72,18,8,32
   934                        	.member	lchangeDate,104,18,8,32
   935                        	.eos
   936                        	.stag	_FX_FAT_DIR_INFO,256,88
  Sat Jul 10 2021  1:15                                                Page 19


   937                        	.member	DIR_Name,0,110,8,0,11
   938                        	.member	DIR_Attr,88,14,8,8
   939                        	.member	DIR_NTRes,96,14,8,8
   940                        	.member	DIR_CrtTimeTenth,104,14,8,8
   941                        	.member	DIR_CrtTime,112,16,8,16
   942                        	.member	DIR_CrtDate,128,16,8,16
   943                        	.member	DIR_LstAccDate,144,16,8,16
   944                        	.member	DIR_FstClusHI,160,16,8,16
   945                        	.member	DIR_WrtTime,176,16,8,16
   946                        	.member	DIR_WrtDate,192,16,8,16
   947                        	.member	DIR_FstClusLO,208,16,8,16
   948                        	.member	DIR_FileSize,224,18,8,32
   949                        	.eos
   950                        	.stag	fat_extBS_32,416,89
   951                        	.member	table_size_32,0,18,8,32
   952                        	.member	extended_flags,32,16,8,16
   953                        	.member	fat_version,48,16,8,16
   954                        	.member	root_cluster,64,18,8,32
   955                        	.member	fat_info,96,16,8,16
   956                        	.member	backup_BS_sector,112,16,8,16
   957                        	.member	reserved_0,128,110,8,0,12
   958                        	.member	drive_number,224,14,8,8
   959                        	.member	reserved_1,232,14,8,8
   960                        	.member	boot_signature,240,14,8,8
   961                        	.member	volume_id,248,16,8,16
   962                        	.member	volume_label,264,110,8,0,11
   963                        	.member	fat_type_label,352,110,8,0,8
   964                        	.eos
   965                        	.stag	fat_extBS_16,192,90
   966                        	.member	bios_drive_num,0,14,8,8
   967                        	.member	reserved1,8,14,8,8
   968                        	.member	boot_signature,16,14,8,8
   969                        	.member	volume_id,24,16,8,16
   970                        	.member	volume_label,40,110,8,0,11
   971                        	.member	fat_type_label,128,110,8,0,8
   972                        	.eos
   973                        	.stag	fat_BS,688,91
   974                        	.member	bootjmp,0,110,8,0,3
   975                        	.member	oem_name,24,110,8,0,8
   976                        	.member	bytes_per_sector,88,16,8,16
   977                        	.member	sectors_per_cluster,104,14,8,8
   978                        	.member	reserved_sector_count,112,16,8,16
   979                        	.member	table_count,128,14,8,8
   980                        	.member	root_entry_count,136,16,8,16
   981                        	.member	total_sectors_16,152,16,8,16
   982                        	.member	media_type,168,14,8,8
   983                        	.member	table_size_16,176,16,8,16
   984                        	.member	sectors_per_track,192,16,8,16
   985                        	.member	head_side_count,208,16,8,16
   986                        	.member	hidden_sector_count,224,16,8,16
   987                        	.member	total_sectors_32,240,16,8,16
   988                        	.member	extended_section,256,110,8,0,54
   989                        	.eos
   990                        	.stag	__FATBootSector,928,92
   991                        	.member	bootjmp,0,110,8,0,3
   992                        	.member	oem_name,24,110,8,0,8
   993                        	.member	bytes_per_sector,88,16,8,16
   994                        	.member	sectors_per_cluster,104,14,8,8
  Sat Jul 10 2021  1:15                                                Page 20


   995                        	.member	reserved_sector_count,112,16,8,16
   996                        	.member	fat_table_count,128,14,8,8
   997                        	.member	root_entry_count,136,16,8,16
   998                        	.member	total_sectors_16,152,16,8,16
   999                        	.member	media_type,168,14,8,8
  1000                        	.member	sectors_per_fat,176,16,8,16
  1001                        	.member	sectors_per_track,192,16,8,16
  1002                        	.member	head_side_count,208,16,8,16
  1003                        	.member	hidden_sector_count,224,18,8,32
  1004                        	.member	total_sectors_32,256,18,8,32
  1005                        	.member	drive_number,288,14,8,8
  1006                        	.member	reserved1,296,14,8,8
  1007                        	.member	boot_sig,304,14,8,8
  1008                        	.member	vol_id,312,18,8,32
  1009                        	.member	vol_name,344,110,8,0,11
  1010                        	.member	file_system_type,432,110,8,0,8
  1011                        	.member	extended_section,496,110,8,0,54
  1012                        	.eos
  1013                        	.stag	__PARTITIONTABLE,128,93
  1014                        	.member	first_byte,0,14,8,8
  1015                        	.member	start_chs,8,110,8,0,3
  1016                        	.member	partition_type,32,14,8,8
  1017                        	.member	end_chs,40,110,8,0,3
  1018                        	.member	start_sector,64,18,8,32
  1019                        	.member	length_sectors,96,18,8,32
  1020                        	.eos
  1021                        	.stag	fake94_,4096,94
  1022                        	.member	jmp,0,110,8,0,3
  1023                        	.member	oem,24,110,8,0,8
  1024                        	.member	sector_size,88,15,8,16
  1025                        	.member	sectors_per_cluster,104,14,8,8
  1026                        	.member	reserved_sectors,112,15,8,16
  1027                        	.member	number_ok_dos_fats,128,14,8,8
  1028                        	.member	root_dir_entries,136,15,8,16
  1029                        	.member	total_sectors_short,152,15,8,16
  1030                        	.member	media_descriptor,168,14,8,8
  1031                        	.member	fat_size_sectors,176,15,8,16
  1032                        	.member	sectors_per_track,192,15,8,16
  1033                        	.member	number_ok_dos_heads,208,15,8,16
  1034                        	.member	hidden_sectors,224,18,8,32
  1035                        	.member	total_sectors_long,256,18,8,32
  1036                        	.member	drive_number,288,14,8,8
  1037                        	.member	current_head,296,14,8,8
  1038                        	.member	boot_signature,304,14,8,8
  1039                        	.member	volume_id,312,18,8,32
  1040                        	.member	volume_label,344,110,8,0,11
  1041                        	.member	fs_type,432,110,8,0,8
  1042                        	.member	boot_code,496,110,8,0,448
  1043                        	.member	boot_sector_signature,4080,15,8,16
  1044                        	.eos
  1045                        	.stag	__FAT16ENTRY,256,95
  1046                        	.member	filename,0,110,8,0,8
  1047                        	.member	ext,64,110,8,0,3
  1048                        	.member	attributes,88,14,8,8
  1049                        	.member	reserved,96,110,8,0,10
  1050                        	.member	modify_time,176,16,8,16
  1051                        	.member	modify_date,192,16,8,16
  1052                        	.member	starting_cluster,208,16,8,16
  Sat Jul 10 2021  1:15                                                Page 21


  1053                        	.member	file_size,224,18,8,32
  1054                        	.eos
  1055                        	.stag	__FAT16ENTRYLONG,288,96
  1056                        	.member	filename,0,110,8,0,8
  1057                        	.member	ext,64,110,8,0,3
  1058                        	.member	attributes,88,14,8,8
  1059                        	.member	reserved,96,110,8,0,10
  1060                        	.member	modify_time,176,16,8,16
  1061                        	.member	modify_date,192,16,8,16
  1062                        	.member	starting_cluster,208,16,8,16
  1063                        	.member	file_size,224,18,8,32
  1064                        	.member	plongfileName,256,142,8,32
  1065                        	.eos
  1066                        	.stag	_LongFileName,256,97
  1067                        	.member	sequenceNo,0,14,8,8
  1068                        	.member	fileName_Part1,8,110,8,0,10
  1069                        	.member	fileattribute,88,14,8,8
  1070                        	.member	type,96,14,8,8
  1071                        	.member	checksum,104,14,8,8
  1072                        	.member	fileName_Part2,112,110,8,0,12
  1073                        	.member	fstclusLO,208,5,8,16
  1074                        	.member	fileName_Part3,224,110,8,0,4
  1075                        	.eos
  1076                        	.stag	_IDSECTOR,2048,98
  1077                        	.member	wGenConfig,0,16,8,16
  1078                        	.member	wNumCyls,16,16,8,16
  1079                        	.member	wReserved,32,16,8,16
  1080                        	.member	wNumHeads,48,16,8,16
  1081                        	.member	wBytesPerTrack,64,16,8,16
  1082                        	.member	wBytesPerSector,80,16,8,16
  1083                        	.member	wSectorsPerTrack,96,16,8,16
  1084                        	.member	wVendorUnique,112,112,8,0,3
  1085                        	.member	sSerialNumber,160,110,8,0,20
  1086                        	.member	wBufferType,320,16,8,16
  1087                        	.member	wBufferSize,336,16,8,16
  1088                        	.member	wECCSize,352,16,8,16
  1089                        	.member	sFirmwareRev,368,110,8,0,8
  1090                        	.member	sModelNumber,432,110,8,0,40
  1091                        	.member	wMoreVendorUnique,752,16,8,16
  1092                        	.member	wDoubleWordIO,768,16,8,16
  1093                        	.member	wCapabilities,784,16,8,16
  1094                        	.member	wReserved1,800,16,8,16
  1095                        	.member	wPIOTiming,816,16,8,16
  1096                        	.member	wDMATiming,832,16,8,16
  1097                        	.member	wBS,848,16,8,16
  1098                        	.member	wNumCurrentCyls,864,16,8,16
  1099                        	.member	wNumCurrentHeads,880,16,8,16
  1100                        	.member	wNumCurrentSectorsPerTrack,896,16,8,16
  1101                        	.member	ulCurrentSectorCapacity,912,18,8,32
  1102                        	.member	wMultSectorStuff,944,16,8,16
  1103                        	.member	ulTotalAddressableSectors,960,18,8,32
  1104                        	.member	wSingleWordDMA,992,16,8,16
  1105                        	.member	wMultiWordDMA,1008,16,8,16
  1106                        	.member	bReserved,1024,110,8,0,128
  1107                        	.eos
  1108                        	.stag	fake99_,16,99
  1109                        	.member	Reserved1,0,16,17,1
  1110                        	.member	Retired3,1,16,17,1
  Sat Jul 10 2021  1:15                                                Page 22


  1111                        	.member	ResponseIncomplete,2,16,17,1
  1112                        	.member	Retired2,3,16,17,3
  1113                        	.member	FixedDevice,6,16,17,1
  1114                        	.member	RemovableMedia,7,16,17,1
  1115                        	.member	Retired1,8,16,17,7
  1116                        	.member	DeviceType,15,16,17,1
  1117                        	.eos
  1118                        	.stag	fake100_,16,100
  1119                        	.member	FeatureSupported,0,16,17,1
  1120                        	.member	Reserved,1,16,17,15
  1121                        	.eos
  1122                        	.stag	fake101_,32,101
  1123                        	.member	CurrentLongPhysicalSectorAlignment,0,14,
                    17,2
  1124                        	.member	ReservedByte49,2,14,17,6
  1125                        	.member	DmaSupported,8,14,17,1
  1126                        	.member	LbaSupported,9,14,17,1
  1127                        	.member	IordyDisable,10,14,17,1
  1128                        	.member	IordySupported,11,14,17,1
  1129                        	.member	Reserved1,12,14,17,1
  1130                        	.member	StandybyTimerSupport,13,14,17,1
  1131                        	.member	Reserved2,14,14,17,2
  1132                        	.member	ReservedWord50,16,16,8,16
  1133                        	.eos
  1134                        	.stag	fake102_,16,102
  1135                        	.member	ZonedCapabilities,0,16,17,2
  1136                        	.member	NonVolatileWriteCache,2,16,17,1
  1137                        	.member	ExtendedUserAddressableSectorsSupported,
                    3,16,17,1
  1138                        	.member	DeviceEncryptsAllUserData,4,16,17,1
  1139                        	.member	ReadZeroAfterTrimSupported,5,16,17,1
  1140                        	.member	Optional28BitCommandsSupported,6,16,17,1
  1141                        	.member	IEEE1667,7,16,17,1
  1142                        	.member	DownloadMicrocodeDmaSupported,8,16,17,1
  1143                        	.member	SetMaxSetPasswordUnlockDmaSupported,9,16
                    ,17,1
  1144                        	.member	WriteBufferDmaSupported,10,16,17,1
  1145                        	.member	ReadBufferDmaSupported,11,16,17,1
  1146                        	.member	DeviceConfigIdentifySetDmaSupported,12,1
                    6,17,1
  1147                        	.member	LPSAERCSupported,13,16,17,1
  1148                        	.member	DeterministicReadAfterTrimSupported,14,1
                    6,17,1
  1149                        	.member	CFastSpecSupported,15,16,17,1
  1150                        	.eos
  1151                        	.stag	fake103_,32,103
  1152                        	.member	Reserved0,0,16,17,1
  1153                        	.member	SataGen1,1,16,17,1
  1154                        	.member	SataGen2,2,16,17,1
  1155                        	.member	SataGen3,3,16,17,1
  1156                        	.member	Reserved1,4,16,17,4
  1157                        	.member	NCQ,8,16,17,1
  1158                        	.member	HIPM,9,16,17,1
  1159                        	.member	PhyEvents,10,16,17,1
  1160                        	.member	NcqUnload,11,16,17,1
  1161                        	.member	NcqPriority,12,16,17,1
  1162                        	.member	HostAutoPS,13,16,17,1
  1163                        	.member	DeviceAutoPS,14,16,17,1
  Sat Jul 10 2021  1:15                                                Page 23


  1164                        	.member	ReadLogDMA,15,16,17,1
  1165                        	.member	Reserved2,16,16,17,1
  1166                        	.member	CurrentSpeed,17,16,17,3
  1167                        	.member	NcqStreaming,20,16,17,1
  1168                        	.member	NcqQueueMgmt,21,16,17,1
  1169                        	.member	NcqReceiveSend,22,16,17,1
  1170                        	.member	DEVSLPtoReducedPwrState,23,16,17,1
  1171                        	.member	Reserved3,24,16,17,8
  1172                        	.eos
  1173                        	.stag	fake104_,16,104
  1174                        	.member	Reserved0,0,16,17,1
  1175                        	.member	NonZeroOffsets,1,16,17,1
  1176                        	.member	DmaSetupAutoActivate,2,16,17,1
  1177                        	.member	DIPM,3,16,17,1
  1178                        	.member	InOrderData,4,16,17,1
  1179                        	.member	HardwareFeatureControl,5,16,17,1
  1180                        	.member	SoftwareSettingsPreservation,6,16,17,1
  1181                        	.member	NCQAutosense,7,16,17,1
  1182                        	.member	DEVSLP,8,16,17,1
  1183                        	.member	HybridInformation,9,16,17,1
  1184                        	.member	Reserved1,10,16,17,6
  1185                        	.eos
  1186                        	.stag	fake105_,16,105
  1187                        	.member	Reserved0,0,16,17,1
  1188                        	.member	NonZeroOffsets,1,16,17,1
  1189                        	.member	DmaSetupAutoActivate,2,16,17,1
  1190                        	.member	DIPM,3,16,17,1
  1191                        	.member	InOrderData,4,16,17,1
  1192                        	.member	HardwareFeatureControl,5,16,17,1
  1193                        	.member	SoftwareSettingsPreservation,6,16,17,1
  1194                        	.member	DeviceAutoPS,7,16,17,1
  1195                        	.member	DEVSLP,8,16,17,1
  1196                        	.member	HybridInformation,9,16,17,1
  1197                        	.member	Reserved1,10,16,17,6
  1198                        	.eos
  1199                        	.stag	fake106_,48,106
  1200                        	.member	SmartCommands,0,16,17,1
  1201                        	.member	SecurityMode,1,16,17,1
  1202                        	.member	RemovableMediaFeature,2,16,17,1
  1203                        	.member	PowerManagement,3,16,17,1
  1204                        	.member	Reserved1,4,16,17,1
  1205                        	.member	WriteCache,5,16,17,1
  1206                        	.member	LookAhead,6,16,17,1
  1207                        	.member	ReleaseInterrupt,7,16,17,1
  1208                        	.member	ServiceInterrupt,8,16,17,1
  1209                        	.member	DeviceReset,9,16,17,1
  1210                        	.member	HostProtectedArea,10,16,17,1
  1211                        	.member	Obsolete1,11,16,17,1
  1212                        	.member	WriteBuffer,12,16,17,1
  1213                        	.member	ReadBuffer,13,16,17,1
  1214                        	.member	Nop,14,16,17,1
  1215                        	.member	Obsolete2,15,16,17,1
  1216                        	.member	DownloadMicrocode,16,16,17,1
  1217                        	.member	DmaQueued,17,16,17,1
  1218                        	.member	Cfa,18,16,17,1
  1219                        	.member	AdvancedPm,19,16,17,1
  1220                        	.member	Msn,20,16,17,1
  1221                        	.member	PowerUpInStandby,21,16,17,1
  Sat Jul 10 2021  1:15                                                Page 24


  1222                        	.member	ManualPowerUp,22,16,17,1
  1223                        	.member	Reserved2,23,16,17,1
  1224                        	.member	SetMax,24,16,17,1
  1225                        	.member	Acoustics,25,16,17,1
  1226                        	.member	BigLba,26,16,17,1
  1227                        	.member	DeviceConfigOverlay,27,16,17,1
  1228                        	.member	FlushCache,28,16,17,1
  1229                        	.member	FlushCacheExt,29,16,17,1
  1230                        	.member	WordValid83,30,16,17,2
  1231                        	.member	SmartErrorLog,32,16,17,1
  1232                        	.member	SmartSelfTest,33,16,17,1
  1233                        	.member	MediaSerialNumber,34,16,17,1
  1234                        	.member	MediaCardPassThrough,35,16,17,1
  1235                        	.member	StreamingFeature,36,16,17,1
  1236                        	.member	GpLogging,37,16,17,1
  1237                        	.member	WriteFua,38,16,17,1
  1238                        	.member	WriteQueuedFua,39,16,17,1
  1239                        	.member	WWN64Bit,40,16,17,1
  1240                        	.member	URGReadStream,41,16,17,1
  1241                        	.member	URGWriteStream,42,16,17,1
  1242                        	.member	ReservedForTechReport,43,16,17,2
  1243                        	.member	IdleWithUnloadFeature,45,16,17,1
  1244                        	.member	WordValid,46,16,17,2
  1245                        	.eos
  1246                        	.stag	fake107_,48,107
  1247                        	.member	SmartCommands,0,16,17,1
  1248                        	.member	SecurityMode,1,16,17,1
  1249                        	.member	RemovableMediaFeature,2,16,17,1
  1250                        	.member	PowerManagement,3,16,17,1
  1251                        	.member	Reserved1,4,16,17,1
  1252                        	.member	WriteCache,5,16,17,1
  1253                        	.member	LookAhead,6,16,17,1
  1254                        	.member	ReleaseInterrupt,7,16,17,1
  1255                        	.member	ServiceInterrupt,8,16,17,1
  1256                        	.member	DeviceReset,9,16,17,1
  1257                        	.member	HostProtectedArea,10,16,17,1
  1258                        	.member	Obsolete1,11,16,17,1
  1259                        	.member	WriteBuffer,12,16,17,1
  1260                        	.member	ReadBuffer,13,16,17,1
  1261                        	.member	Nop,14,16,17,1
  1262                        	.member	Obsolete2,15,16,17,1
  1263                        	.member	DownloadMicrocode,16,16,17,1
  1264                        	.member	DmaQueued,17,16,17,1
  1265                        	.member	Cfa,18,16,17,1
  1266                        	.member	AdvancedPm,19,16,17,1
  1267                        	.member	Msn,20,16,17,1
  1268                        	.member	PowerUpInStandby,21,16,17,1
  1269                        	.member	ManualPowerUp,22,16,17,1
  1270                        	.member	Reserved2,23,16,17,1
  1271                        	.member	SetMax,24,16,17,1
  1272                        	.member	Acoustics,25,16,17,1
  1273                        	.member	BigLba,26,16,17,1
  1274                        	.member	DeviceConfigOverlay,27,16,17,1
  1275                        	.member	FlushCache,28,16,17,1
  1276                        	.member	FlushCacheExt,29,16,17,1
  1277                        	.member	Resrved3,30,16,17,1
  1278                        	.member	Words119_120Valid,31,16,17,1
  1279                        	.member	SmartErrorLog,32,16,17,1
  Sat Jul 10 2021  1:15                                                Page 25


  1280                        	.member	SmartSelfTest,33,16,17,1
  1281                        	.member	MediaSerialNumber,34,16,17,1
  1282                        	.member	MediaCardPassThrough,35,16,17,1
  1283                        	.member	StreamingFeature,36,16,17,1
  1284                        	.member	GpLogging,37,16,17,1
  1285                        	.member	WriteFua,38,16,17,1
  1286                        	.member	WriteQueuedFua,39,16,17,1
  1287                        	.member	WWN64Bit,40,16,17,1
  1288                        	.member	URGReadStream,41,16,17,1
  1289                        	.member	URGWriteStream,42,16,17,1
  1290                        	.member	ReservedForTechReport,43,16,17,2
  1291                        	.member	IdleWithUnloadFeature,45,16,17,1
  1292                        	.member	Reserved4,46,16,17,2
  1293                        	.eos
  1294                        	.stag	fake108_,16,108
  1295                        	.member	TimeRequired,0,16,17,15
  1296                        	.member	ExtendedTimeReported,15,16,17,1
  1297                        	.eos
  1298                        	.stag	fake109_,16,109
  1299                        	.member	TimeRequired,0,16,17,15
  1300                        	.member	ExtendedTimeReported,15,16,17,1
  1301                        	.eos
  1302                        	.stag	fake110_,16,110
  1303                        	.member	LogicalSectorsPerPhysicalSector,0,16,17,
                    4
  1304                        	.member	Reserved0,4,16,17,8
  1305                        	.member	LogicalSectorLongerThan256Words,12,16,17
                    ,1
  1306                        	.member	MultipleLogicalSectorsPerPhysicalSector,
                    13,16,17,1
  1307                        	.member	Reserved1,14,16,17,2
  1308                        	.eos
  1309                        	.stag	fake111_,16,111
  1310                        	.member	ReservedForDrqTechnicalReport,0,16,17,1
  1311                        	.member	WriteReadVerify,1,16,17,1
  1312                        	.member	WriteUncorrectableExt,2,16,17,1
  1313                        	.member	ReadWriteLogDmaExt,3,16,17,1
  1314                        	.member	DownloadMicrocodeMode3,4,16,17,1
  1315                        	.member	FreefallControl,5,16,17,1
  1316                        	.member	SenseDataReporting,6,16,17,1
  1317                        	.member	ExtendedPowerConditions,7,16,17,1
  1318                        	.member	Reserved0,8,16,17,6
  1319                        	.member	WordValid,14,16,17,2
  1320                        	.eos
  1321                        	.stag	fake112_,16,112
  1322                        	.member	ReservedForDrqTechnicalReport,0,16,17,1
  1323                        	.member	WriteReadVerify,1,16,17,1
  1324                        	.member	WriteUncorrectableExt,2,16,17,1
  1325                        	.member	ReadWriteLogDmaExt,3,16,17,1
  1326                        	.member	DownloadMicrocodeMode3,4,16,17,1
  1327                        	.member	FreefallControl,5,16,17,1
  1328                        	.member	SenseDataReporting,6,16,17,1
  1329                        	.member	ExtendedPowerConditions,7,16,17,1
  1330                        	.member	Reserved0,8,16,17,6
  1331                        	.member	Reserved1,14,16,17,2
  1332                        	.eos
  1333                        	.stag	fake113_,16,113
  1334                        	.member	SecuritySupported,0,16,17,1
  Sat Jul 10 2021  1:15                                                Page 26


  1335                        	.member	SecurityEnabled,1,16,17,1
  1336                        	.member	SecurityLocked,2,16,17,1
  1337                        	.member	SecurityFrozen,3,16,17,1
  1338                        	.member	SecurityCountExpired,4,16,17,1
  1339                        	.member	EnhancedSecurityEraseSupported,5,16,17,1
  1340                        	.member	Reserved0,6,16,17,2
  1341                        	.member	SecurityLevel,8,16,17,1
  1342                        	.member	Reserved1,9,16,17,7
  1343                        	.eos
  1344                        	.stag	fake114_,16,114
  1345                        	.member	MaximumCurrentInMA,0,16,17,12
  1346                        	.member	CfaPowerMode1Disabled,12,16,17,1
  1347                        	.member	CfaPowerMode1Required,13,16,17,1
  1348                        	.member	Reserved0,14,16,17,1
  1349                        	.member	Word160Supported,15,16,17,1
  1350                        	.eos
  1351                        	.stag	fake115_,16,115
  1352                        	.member	SupportsTrim,0,16,17,1
  1353                        	.member	Reserved0,1,16,17,15
  1354                        	.eos
  1355                        	.stag	fake116_,16,116
  1356                        	.member	Supported,0,16,17,1
  1357                        	.member	Reserved0,1,16,17,1
  1358                        	.member	WriteSameSuported,2,16,17,1
  1359                        	.member	ErrorRecoveryControlSupported,3,16,17,1
  1360                        	.member	FeatureControlSuported,4,16,17,1
  1361                        	.member	DataTablesSuported,5,16,17,1
  1362                        	.member	Reserved1,6,16,17,6
  1363                        	.member	VendorSpecific,12,16,17,4
  1364                        	.eos
  1365                        	.stag	fake117_,16,117
  1366                        	.member	AlignmentOfLogicalWithinPhysical,0,16,17
                    ,14
  1367                        	.member	Word209Supported,14,16,17,1
  1368                        	.member	Reserved0,15,16,17,1
  1369                        	.eos
  1370                        	.stag	fake118_,16,118
  1371                        	.member	NVCachePowerModeEnabled,0,16,17,1
  1372                        	.member	Reserved0,1,16,17,3
  1373                        	.member	NVCacheFeatureSetEnabled,4,16,17,1
  1374                        	.member	Reserved1,5,16,17,3
  1375                        	.member	NVCachePowerModeVersion,8,16,17,4
  1376                        	.member	NVCacheFeatureSetVersion,12,16,17,4
  1377                        	.eos
  1378                        	.stag	fake119_,16,119
  1379                        	.member	NVCacheEstimatedTimeToSpinUpInSeconds,0,
                    14,8,8
  1380                        	.member	Reserved,8,14,8,8
  1381                        	.eos
  1382                        	.stag	fake120_,16,120
  1383                        	.member	MajorVersion,0,16,17,12
  1384                        	.member	TransportType,12,16,17,4
  1385                        	.eos
  1386                        	.stag	_IDENTIFY_DEVICE_DATA,4096,121
  1387                        	.member	GeneralConfiguration,0,10,8,16,99
  1388                        	.member	NumCylinders,16,16,8,16
  1389                        	.member	SpecificConfiguration,32,16,8,16
  1390                        	.member	NumHeads,48,16,8,16
  Sat Jul 10 2021  1:15                                                Page 27


  1391                        	.member	Retired1Bytes,64,110,8,0,4
  1392                        	.member	NumSectorsPerTrack,96,16,8,16
  1393                        	.member	VendorUnique1Bytes,112,110,8,0,6
  1394                        	.member	SerialNumber,160,110,8,0,20
  1395                        	.member	Retired2,320,112,8,0,2
  1396                        	.member	Obsolete1,352,16,8,16
  1397                        	.member	FirmwareRevision,368,110,8,0,8
  1398                        	.member	ModelNumber,432,110,8,0,40
  1399                        	.member	MaximumBlockTransfer,752,14,8,8
  1400                        	.member	VendorUnique2,760,14,8,8
  1401                        	.member	TrustedComputing,768,10,8,16,100
  1402                        	.member	Capabilities,784,10,8,32,101
  1403                        	.member	ObsoleteWords51,816,112,8,0,2
  1404                        	.member	TranslationFieldsValid,848,16,17,3
  1405                        	.member	Reserved3,851,16,17,5
  1406                        	.member	FreeFallControlSensitivity,856,16,17,8
  1407                        	.member	NumberOfCurrentCylinders,864,16,8,16
  1408                        	.member	NumberOfCurrentHeads,880,16,8,16
  1409                        	.member	CurrentSectorsPerTrack,896,16,8,16
  1410                        	.member	CurrentSectorCapacity,912,18,8,32
  1411                        	.member	CurrentMultiSectorSetting,944,14,8,8
  1412                        	.member	MultiSectorSettingValid,952,14,17,1
  1413                        	.member	ReservedByte59,953,14,17,3
  1414                        	.member	SanitizeFeatureSupported,956,14,17,1
  1415                        	.member	CryptoScrambleExtCommandSupported,957,14
                    ,17,1
  1416                        	.member	OverwriteExtCommandSupported,958,14,17,1
  1417                        	.member	BlockEraseExtCommandSupported,959,14,17,
                    1
  1418                        	.member	UserAddressableSectors,960,18,8,32
  1419                        	.member	ObsoleteWord62,992,16,8,16
  1420                        	.member	MultiWordDMASupport,1008,16,17,8
  1421                        	.member	MultiWordDMAActive,1016,16,17,8
  1422                        	.member	AdvancedPIOModes,1024,16,17,8
  1423                        	.member	ReservedByte64,1032,16,17,8
  1424                        	.member	MinimumMWXferCycleTime,1040,16,8,16
  1425                        	.member	RecommendedMWXferCycleTime,1056,16,8,16
  1426                        	.member	MinimumPIOCycleTime,1072,16,8,16
  1427                        	.member	MinimumPIOCycleTimeIORDY,1088,16,8,16
  1428                        	.member	AdditionalSupported,1104,10,8,16,102
  1429                        	.member	ReservedWords70,1120,112,8,0,5
  1430                        	.member	QueueDepth,1200,16,17,5
  1431                        	.member	ReservedWord75,1205,16,17,11
  1432                        	.member	SerialAtaCapabilities,1216,10,8,32,103
  1433                        	.member	SerialAtaFeaturesSupported,1248,10,8,16,
                    104
  1434                        	.member	SerialAtaFeaturesEnabled,1264,10,8,16,10
                    5
  1435                        	.member	MajorRevision,1280,16,8,16
  1436                        	.member	MinorRevision,1296,16,8,16
  1437                        	.member	CommandSetSupport,1312,10,8,48,106
  1438                        	.member	CommandSetActive,1360,10,8,48,107
  1439                        	.member	UltraDMASupport,1408,16,17,8
  1440                        	.member	UltraDMAActive,1416,16,17,8
  1441                        	.member	NormalSecurityEraseUnit,1424,10,8,16,108
  1442                        	.member	EnhancedSecurityEraseUnit,1440,10,8,16,1
                    09
  1443                        	.member	CurrentAPMLevel,1456,16,17,8
  Sat Jul 10 2021  1:15                                                Page 28


  1444                        	.member	ReservedWord91,1464,16,17,8
  1445                        	.member	MasterPasswordID,1472,16,8,16
  1446                        	.member	HardwareResetResult,1488,16,8,16
  1447                        	.member	CurrentAcousticValue,1504,16,17,8
  1448                        	.member	RecommendedAcousticValue,1512,16,17,8
  1449                        	.member	StreamMinRequestSize,1520,16,8,16
  1450                        	.member	StreamingTransferTimeDMA,1536,16,8,16
  1451                        	.member	StreamingAccessLatencyDMAPIO,1552,16,8,1
                    6
  1452                        	.member	StreamingPerfGranularity,1568,18,8,32
  1453                        	.member	Max48BitLBA,1600,114,8,0,2
  1454                        	.member	StreamingTransferTime,1664,16,8,16
  1455                        	.member	DsmCap,1680,16,8,16
  1456                        	.member	PhysicalLogicalSectorSize,1696,10,8,16,1
                    10
  1457                        	.member	InterSeekDelay,1712,16,8,16
  1458                        	.member	WorldWideName,1728,112,8,0,4
  1459                        	.member	ReservedForWorldWideName128,1792,112,8,0
                    ,4
  1460                        	.member	ReservedForTlcTechnicalReport,1856,16,8,
                    16
  1461                        	.member	WordsPerLogicalSector,1872,112,8,0,2
  1462                        	.member	CommandSetSupportExt,1904,10,8,16,111
  1463                        	.member	CommandSetActiveExt,1920,10,8,16,112
  1464                        	.member	ReservedForExpandedSupportandActive,1936
                    ,112,8,0,6
  1465                        	.member	MsnSupport,2032,16,17,2
  1466                        	.member	ReservedWord127,2034,16,17,14
  1467                        	.member	SecurityStatus,2048,10,8,16,113
  1468                        	.member	ReservedWord129,2064,112,8,0,31
  1469                        	.member	CfaPowerMode1,2560,10,8,16,114
  1470                        	.member	ReservedForCfaWord161,2576,112,8,0,7
  1471                        	.member	NominalFormFactor,2688,16,17,4
  1472                        	.member	ReservedWord168,2692,16,17,12
  1473                        	.member	DataSetManagementFeature,2704,10,8,16,11
                    5
  1474                        	.member	AdditionalProductID,2720,112,8,0,4
  1475                        	.member	ReservedForCfaWord174,2784,112,8,0,2
  1476                        	.member	CurrentMediaSerialNumber,2816,112,8,0,30
  1477                        	.member	SCTCommandTransport,3296,10,8,16,116
  1478                        	.member	ReservedWord207,3312,112,8,0,2
  1479                        	.member	BlockAlignment,3344,10,8,16,117
  1480                        	.member	WriteReadVerifySectorCountMode3Only,3360
                    ,112,8,0,2
  1481                        	.member	WriteReadVerifySectorCountMode2Only,3392
                    ,112,8,0,2
  1482                        	.member	NVCacheCapabilities,3424,10,8,16,118
  1483                        	.member	NVCacheSizeLSW,3440,16,8,16
  1484                        	.member	NVCacheSizeMSW,3456,16,8,16
  1485                        	.member	NominalMediaRotationRate,3472,16,8,16
  1486                        	.member	ReservedWord218,3488,16,8,16
  1487                        	.member	NVCacheOptions,3504,10,8,16,119
  1488                        	.member	WriteReadVerifySectorCountMode,3520,16,1
                    7,8
  1489                        	.member	ReservedWord220,3528,16,17,8
  1490                        	.member	ReservedWord221,3536,16,8,16
  1491                        	.member	TransportMajorVersion,3552,10,8,16,120
  1492                        	.member	TransportMinorVersion,3568,16,8,16
  Sat Jul 10 2021  1:15                                                Page 29


  1493                        	.member	ReservedWord224,3584,112,8,0,6
  1494                        	.member	ExtendedNumberOfUserAddressableSectors,3
                    680,114,8,0,2
  1495                        	.member	MinBlocksPerDownloadMicrocodeMode03,3744
                    ,16,8,16
  1496                        	.member	MaxBlocksPerDownloadMicrocodeMode03,3760
                    ,16,8,16
  1497                        	.member	ReservedWord236,3776,112,8,0,19
  1498                        	.member	Signature,4080,16,17,8
  1499                        	.member	CheckSum,4088,16,17,8
  1500                        	.eos
  1501                        	.stag	_FXDosDevice,5744,122
  1502                        	.member	type,0,14,8,8
  1503                        	.member	initialized,8,14,8,8
  1504                        	.member	devdata,16,129,8,32
  1505                        	.member	devstatus,48,14,8,8
  1506                        	.member	bootSector,56,10,8,928,92
  1507                        	.member	partitionTable,984,10,8,128,93
  1508                        	.member	fileAllocationTable,1112,110,8,0,512
  1509                        	.member	bsOffset,5208,18,8,32
  1510                        	.member	rootDirSectors,5240,18,8,32
  1511                        	.member	root_entry_count,5272,5,8,16
  1512                        	.member	rootEntriesPerPage,5288,5,8,16
  1513                        	.member	sectors_per_cluster,5304,5,8,16
  1514                        	.member	firstDataSector,5320,18,8,32
  1515                        	.member	fatTableOffset,5352,18,8,32
  1516                        	.member	volume_name,5384,110,8,0,12
  1517                        	.member	root_volume_name,5480,110,8,0,12
  1518                        	.member	errorCode,5576,14,8,8
  1519                        	.member	pfInit,5584,641,8,32
  1520                        	.member	pfReset,5616,641,8,32
  1521                        	.member	pfUninit,5648,641,8,32
  1522                        	.member	pfReader,5680,654,8,32
  1523                        	.member	pfWriter,5712,654,8,32
  1524                        	.eos
  1525                        	.utag	item,32,123
  1526                        	.member	dir,0,138,11,32,82
  1527                        	.member	file,0,138,11,32,81
  1528                        	.member	fileInfo,0,138,11,32,83
  1529                        	.eos
  1530                        	.stag	_dos_handle,80,124
  1531                        	.member	fs,0,138,8,32,79
  1532                        	.member	fr,32,5,8,16
  1533                        	.member	path,48,142,8,32
  1534                        	.eos
  1535                        	.line	800
  1536                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\drivers\DRIVER_FMXIDE.c",2
  1537                        ;#include "fxmemorymanager.h"
  1538                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxmemorymanager.h",0
  1539                        	.line	105
  1540                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\drivers\DRIVER_FMXIDE.c",3
  1541                        ;#include "ff.h";
  1542                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\ff.h",0
  1543                        	.line	429
  Sat Jul 10 2021  1:15                                                Page 30


  1544                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\drivers\DRIVER_FMXIDE.c",4
  1545                        ;#include "mindrvr.h"
  1546                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\mindrvr.h",0
  1547                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos.h",0
  1548                        	.line	30
  1549                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\mindrvr.h",35
  1550                        	.stag	REG_CMD_INFO,328,125
  1551                        	.member	cmd,0,14,8,8
  1552                        	.member	fr,8,16,8,16
  1553                        	.member	sc,24,16,8,16
  1554                        	.member	sn,40,16,8,16
  1555                        	.member	cl,56,16,8,16
  1556                        	.member	ch,72,16,8,16
  1557                        	.member	dh,88,14,8,8
  1558                        	.member	dc,96,14,8,8
  1559                        	.member	ns,104,7,8,32
  1560                        	.member	mc,136,5,8,16
  1561                        	.member	lbaSize,152,14,8,8
  1562                        	.member	lbaLow,160,18,8,32
  1563                        	.member	lbaHigh,192,18,8,32
  1564                        	.member	st,224,14,8,8
  1565                        	.member	as,232,14,8,8
  1566                        	.member	er,240,14,8,8
  1567                        	.member	ec,248,14,8,8
  1568                        	.member	to,256,14,8,8
  1569                        	.member	totalBytesXfer,264,7,8,32
  1570                        	.member	drqPackets,296,7,8,32
  1571                        	.eos
  1572                        	.line	475
  1573                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\drivers\DRIVER_FMXIDE.c",5
  1574                        ;#include "ata.h"
  1575                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\ata.h",0
  1576                        	.file	"G:\devtools\WDCTools\wdc\Tools\include\
                    stdint.h",0
  1577                        	.line	92
  1578                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\ata.h",4
  1579                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos.h",0
  1580                        	.line	30
  1581                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\ata.h",5
  1582                        	.stag	fake126_,8,126
  1583                        	.member	drive,0,14,8,8
  1584                        	.eos
  1585                        	.line	94
  1586                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\drivers\DRIVER_FMXIDE.c",6
  1587                        ;
  1588                        ;
  1589                        ;static CHAR szIndentity[512];
  1590                        ;
  Sat Jul 10 2021  1:15                                                Page 31


  1591                        ;//PARTITION VolToPart[] = {{0,1}};
  1592                        ;
  1593                        ;
  1594                        ;#include "drivers/DRIVER_IDE.h"
  1595                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\drivers/DRIVER_IDE.h",0
  1596                        IDES04	section	offset $04:17C0
  1597 04:17C0:              	ends
  1598                        	data
  1599                        ~~_k_driver_base:
  1600 00:0000: C0 17 04 00  	dl	$417C0
  1601 00:0004:              	ends
  1602                        	.line	7
  1603                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\drivers\DRIVER_FMXIDE.c",14
  1604                        ;//#pragma section CODE=FMXIDE,offset $08:B000
  1605                        ;
  1606                        ;static UCHAR k_hd_initialize(void);
  1607                        ;static UCHAR k_hd_uninitialize(void);
  1608                        ;static UCHAR k_hd_read_sector(unsigned long offse
                    t,LPCHAR receiveBuffer);
  1609                        ;static UCHAR k_hd_write_sector(unsigned long offs
                    et,LPCHAR receiveBuffer);
  1610                        ;static UCHAR k_hd_send_command(UINT command,LPVOI
                    D buffer);
  1611                        ;
  1612                        ;static FX_BLOCK_DEVICE_DRIVER DRIVER_FMXIDE = {"D
                    RIVER_FMXIDE\0",
  1613                        	data
  1614                        ~~DRIVER_FMXIDE:
  1615 00:0004: 44 52 49 56  	db	$44,$52,$49,$56,$45,$52,$5F,$46,$4D,$58
       00:0008: 45 52 5F 46 
       00:000C: 4D 58 
  1616 00:000E: 49 44 45 00  	db	$49,$44,$45,$0,$0
       00:0012: 00 
  1617 00:0013:              	ds	17
  1618                        ;							
                    				"v1.0.0\0",
  1619 00:0024: 76 31 2E 30  	db	$76,$31,$2E,$30,$2E,$30,$0,$0
       00:0028: 2E 30 00 00 
  1620 00:002C:              	ds	8
  1621                        ;							
                    				"A\0", //"C\0",
  1622 00:0034: 41 00 00     	db	$41,$0,$0
  1623 00:0037:              	ds	5
  1624                        ;							
                    				"1\0", // "4\0",
  1625 00:003C: 31 00 00     	db	$31,$0,$0
  1626 00:003F:              	ds	5
  1627                        ;							
                    				DRIVER_TYPE_IDE,
  1628 00:0044: 08           	db	$8
  1629                        ;							
                    				"HD:\0",
  1630 00:0045: 48 44 3A 00  	db	$48,$44,$3A,$0,$0
       00:0049: 00 
  1631 00:004A:              	ds	1
  1632                        ;							
  Sat Jul 10 2021  1:15                                                Page 32


                    				0,
  1633 00:004B: 00 00        	dw	$0
  1634                        ;							
                    				NULL,
  1635 00:004D: 00 00 00 00  	dl	$0
  1636                        ;							
                    				NULL,
  1637 00:0051: 00 00 00 00  	dl	$0
  1638                        ;							
                    				k_hd_initialize,
  1639 00:0055: E0 1C 04 00  	dl	~~k_hd_initialize
  1640                        ;							
                    				k_hd_read_sector,
  1641 00:0059: 7E 1A 04 00  	dl	~~k_hd_read_sector
  1642                        ;							
                    				k_hd_write_sector,
  1643 00:005D: D4 1B 04 00  	dl	~~k_hd_write_sector
  1644                        ;							
                    				NULL,
  1645 00:0061: 00 00 00 00  	dl	$0
  1646                        ;							
                    				k_hd_uninitialize
  1647                        ;							
                    	          };
  1648 00:0065: 3D 1D 04 00  	dl	~~k_hd_uninitialize
  1649 00:0069:              	ends
  1650                        ;
  1651                        ;PFX_DEVICE_DRIVER DEVICE_HD = &DRIVER_FMXIDE;
  1652                        	data
  1653                        	xdef	~~DEVICE_HD
  1654                        ~~DEVICE_HD:
  1655 00:0069: xx xx xx xx  	dl	~~DRIVER_FMXIDE
  1656 00:006D:              	ends
  1657                        ;
  1658                        ;static PFX_DEVICE_DRIVER f_get_driver(LPCSTR majo
                    r,LPCSTR minor)
  1659                        ;{
  1660                        	.line	41
  1661                        	.line	42
  1662                        	IDES04
  1663                        	func
  1664                        	.function	42
  1665                        ~~f_get_driver:
  1666                        	longa	on
  1667                        	longi	on
  1668 04:17C0: 3B           	tsc
  1669 04:17C1: 38           	sec
  1670 04:17C2: E9 04 00     	sbc	#L2
  1671 04:17C5: 1B           	tcs
  1672 04:17C6: 0B           	phd
  1673 04:17C7: 5B           	tcd
  1674             00000004   major_0	set	4
  1675             00000008   minor_0	set	8
  1676                        	.block	42
  1677                        ;	return &DRIVER_FMXIDE;
  1678                        	.sym	major,4,142,6,32
  1679                        	.sym	minor,8,142,6,32
  1680                        	.line	43
  Sat Jul 10 2021  1:15                                                Page 33


  1681 04:17C8: A9 xx xx     	lda	#<~~DRIVER_FMXIDE
  1682 04:17CB: 85 01        	sta	<R0
  1683                        	xref	_BEG_DATA
  1684 04:17CD: A9 xx xx     	lda	#_BEG_DATA>>16
  1685 04:17D0: 85 03        	sta	<R0+2
  1686 04:17D2: A6 03        	ldx	<R0+2
  1687 04:17D4: A5 01        	lda	<R0
  1688                        L5:
  1689 04:17D6: A8           	tay
  1690 04:17D7: A5 06        	lda	<L2+2
  1691 04:17D9: 85 0E        	sta	<L2+2+8
  1692 04:17DB: A5 05        	lda	<L2+1
  1693 04:17DD: 85 0D        	sta	<L2+1+8
  1694 04:17DF: 2B           	pld
  1695 04:17E0: 3B           	tsc
  1696 04:17E1: 18           	clc
  1697 04:17E2: 69 0C 00     	adc	#L2+8
  1698 04:17E5: 1B           	tcs
  1699 04:17E6: 98           	tya
  1700 04:17E7: 6B           	rtl
  1701                        ;}
  1702                        	.line	44
  1703                        	.endblock	44
  1704             00000004   L2	equ	4
  1705             00000005   L3	equ	5
  1706 04:17E8:              	ends
  1707                        	efunc
  1708                        	.endfunc	44,5,4
  1709                        	.line	44
  1710                        ;
  1711                        ;static VOID k_drive_wait_drq(VOID)
  1712                        ;{
  1713                        	.line	46
  1714                        	.line	47
  1715                        	IDES04
  1716                        	func
  1717                        	.function	47
  1718                        ~~k_drive_wait_drq:
  1719                        	longa	on
  1720                        	longi	on
  1721 04:17E8: 3B           	tsc
  1722 04:17E9: 38           	sec
  1723 04:17EA: E9 04 00     	sbc	#L6
  1724 04:17ED: 1B           	tcs
  1725 04:17EE: 0B           	phd
  1726 04:17EF: 5B           	tcd
  1727                        	.block	47
  1728                        ;	while((IDE_CMD_STAT[0] & IDE_STAT_DRQ) != IDE_ST
                    AT_DRQ)
  1729                        	.line	48
  1730                        L10001:
  1731 04:17F0: AF 37 E8 AF  	lda	>11528247
  1732 04:17F4: 29 08 00     	and	#<$8
  1733 04:17F7: 85 01        	sta	<R0
  1734 04:17F9: A5 01        	lda	<R0
  1735 04:17FB: C9 08 00     	cmp	#<$8
  1736 04:17FE: D0 03        	bne	L9
  1737 04:1800: 82 03 00     	brl	L10002
  Sat Jul 10 2021  1:15                                                Page 34


  1738                        L9:
  1739                        ;	{
  1740                        	.line	49
  1741                        ;
  1742                        ;	}
  1743                        	.line	51
  1744 04:1803: 82 EA FF     	brl	L10001
  1745                        L10002:
  1746                        ;
  1747                        ;	return;
  1748                        	.line	53
  1749                        L10:
  1750 04:1806: 2B           	pld
  1751 04:1807: 3B           	tsc
  1752 04:1808: 18           	clc
  1753 04:1809: 69 04 00     	adc	#L6
  1754 04:180C: 1B           	tcs
  1755 04:180D: 6B           	rtl
  1756                        ;}
  1757                        	.line	54
  1758                        	.endblock	54
  1759             00000004   L6	equ	4
  1760             00000005   L7	equ	5
  1761 04:180E:              	ends
  1762                        	efunc
  1763                        	.endfunc	54,5,4
  1764                        	.line	54
  1765                        ;
  1766                        ;static UINT k_drive_wait_dsc(VOID)
  1767                        ;{
  1768                        	.line	56
  1769                        	.line	57
  1770                        	IDES04
  1771                        	func
  1772                        	.function	57
  1773                        ~~k_drive_wait_dsc:
  1774                        	longa	on
  1775                        	longi	on
  1776 04:180E: 3B           	tsc
  1777 04:180F: 38           	sec
  1778 04:1810: E9 05 00     	sbc	#L11
  1779 04:1813: 1B           	tcs
  1780 04:1814: 0B           	phd
  1781 04:1815: 5B           	tcd
  1782                        	.block	57
  1783                        ;	UCHAR code = 0;
  1784                        ;
  1785                        ;	code = IDE_CMD_STAT[0];
  1786             00000000   code_1	set	0
  1787                        	.sym	code,0,14,1,8
  1788 04:1816: E2 20        	sep	#$20
  1789                        	longa	off
  1790 04:1818: 64 05        	stz	<L12+code_1
  1791 04:181A: C2 20        	rep	#$20
  1792                        	longa	on
  1793                        	.line	60
  1794 04:181C: E2 20        	sep	#$20
  1795                        	longa	off
  Sat Jul 10 2021  1:15                                                Page 35


  1796 04:181E: AF 37 E8 AF  	lda	>11528247
  1797 04:1822: 85 05        	sta	<L12+code_1
  1798 04:1824: C2 20        	rep	#$20
  1799                        	longa	on
  1800                        ;	while((code & IDE_STAT_DSC) != IDE_STAT_DSC)
  1801                        	.line	61
  1802                        L10003:
  1803 04:1826: A5 05        	lda	<L12+code_1
  1804 04:1828: 29 10 00     	and	#<$10
  1805 04:182B: 85 01        	sta	<R0
  1806 04:182D: A5 01        	lda	<R0
  1807 04:182F: C9 10 00     	cmp	#<$10
  1808 04:1832: D0 03        	bne	L14
  1809 04:1834: 82 27 00     	brl	L10004
  1810                        L14:
  1811                        ;	{
  1812                        	.line	62
  1813                        ;		if(code & IDE_STAT_DF)
  1814                        	.line	63
  1815                        ;		{
  1816 04:1837: E2 20        	sep	#$20
  1817                        	longa	off
  1818 04:1839: A5 05        	lda	<L12+code_1
  1819 04:183B: 29 20        	and	#<$20
  1820 04:183D: C2 20        	rep	#$20
  1821                        	longa	on
  1822 04:183F: D0 03        	bne	L15
  1823 04:1841: 82 0D 00     	brl	L10005
  1824                        L15:
  1825                        	.line	64
  1826                        ;			//DebugHex("k_drive_wait_dsc:err
                    or:",code);
  1827                        ;			return IDE_STAT_DF;
  1828                        	.line	66
  1829 04:1844: A9 20 00     	lda	#$20
  1830                        L16:
  1831 04:1847: A8           	tay
  1832 04:1848: 2B           	pld
  1833 04:1849: 3B           	tsc
  1834 04:184A: 18           	clc
  1835 04:184B: 69 05 00     	adc	#L11
  1836 04:184E: 1B           	tcs
  1837 04:184F: 98           	tya
  1838 04:1850: 6B           	rtl
  1839                        ;		}
  1840                        	.line	67
  1841                        ;		code = IDE_CMD_STAT[0];
  1842                        L10005:
  1843                        	.line	68
  1844 04:1851: E2 20        	sep	#$20
  1845                        	longa	off
  1846 04:1853: AF 37 E8 AF  	lda	>11528247
  1847 04:1857: 85 05        	sta	<L12+code_1
  1848 04:1859: C2 20        	rep	#$20
  1849                        	longa	on
  1850                        ;	}
  1851                        	.line	69
  1852 04:185B: 82 C8 FF     	brl	L10003
  Sat Jul 10 2021  1:15                                                Page 36


  1853                        L10004:
  1854                        ;
  1855                        ;	return 0;
  1856                        	.line	71
  1857 04:185E: A9 00 00     	lda	#$0
  1858 04:1861: 82 E3 FF     	brl	L16
  1859                        ;}
  1860                        	.line	72
  1861                        	.endblock	72
  1862             00000005   L11	equ	5
  1863             00000005   L12	equ	5
  1864 04:1864:              	ends
  1865                        	efunc
  1866                        	.endfunc	72,5,5
  1867                        	.line	72
  1868                        ;
  1869                        ;static VOID k_drive_ready(VOID)
  1870                        ;{
  1871                        	.line	74
  1872                        	.line	75
  1873                        	IDES04
  1874                        	func
  1875                        	.function	75
  1876                        ~~k_drive_ready:
  1877                        	longa	on
  1878                        	longi	on
  1879 04:1864: 3B           	tsc
  1880 04:1865: 38           	sec
  1881 04:1866: E9 04 00     	sbc	#L17
  1882 04:1869: 1B           	tcs
  1883 04:186A: 0B           	phd
  1884 04:186B: 5B           	tcd
  1885                        	.block	75
  1886                        ;	//DebugOut("***k_drive_ready\r\n");
  1887                        ;
  1888                        ;	while((IDE_CMD_STAT[0] & IDE_STAT_DRDY) == IDE_S
                    TAT_DRDY);
  1889                        	.line	78
  1890                        L10006:
  1891 04:186C: AF 37 E8 AF  	lda	>11528247
  1892 04:1870: 29 40 00     	and	#<$40
  1893 04:1873: 85 01        	sta	<R0
  1894 04:1875: A5 01        	lda	<R0
  1895 04:1877: C9 40 00     	cmp	#<$40
  1896 04:187A: F0 03        	beq	L20
  1897 04:187C: 82 03 00     	brl	L10007
  1898                        L20:
  1899                        	.line	78
  1900 04:187F: 82 EA FF     	brl	L10006
  1901                        L10007:
  1902                        ;
  1903                        ;	return;
  1904                        	.line	80
  1905                        L21:
  1906 04:1882: 2B           	pld
  1907 04:1883: 3B           	tsc
  1908 04:1884: 18           	clc
  1909 04:1885: 69 04 00     	adc	#L17
  Sat Jul 10 2021  1:15                                                Page 37


  1910 04:1888: 1B           	tcs
  1911 04:1889: 6B           	rtl
  1912                        ;}
  1913                        	.line	81
  1914                        	.endblock	81
  1915             00000004   L17	equ	4
  1916             00000005   L18	equ	5
  1917 04:188A:              	ends
  1918                        	efunc
  1919                        	.endfunc	81,5,4
  1920                        	.line	81
  1921                        ;
  1922                        ;static UINT k_drive_not_busy_or_drq(VOID)
  1923                        ;{
  1924                        	.line	83
  1925                        	.line	84
  1926                        	IDES04
  1927                        	func
  1928                        	.function	84
  1929                        ~~k_drive_not_busy_or_drq:
  1930                        	longa	on
  1931                        	longi	on
  1932 04:188A: 3B           	tsc
  1933 04:188B: 38           	sec
  1934 04:188C: E9 02 00     	sbc	#L22
  1935 04:188F: 1B           	tcs
  1936 04:1890: 0B           	phd
  1937 04:1891: 5B           	tcd
  1938                        	.block	84
  1939                        ;	BYTE 	code = 0;
  1940                        ;	UCHAR 	safety = 8096;
  1941                        ;	//DebugOut("***k_drive_not_busy_or_drq\r\n");
  1942                        ;
  1943                        ;	code = IDE_CMD_STAT[0];
  1944             00000000   code_1	set	0
  1945             00000001   safety_1	set	1
  1946                        	.sym	code,0,14,1,8
  1947                        	.sym	safety,1,14,1,8
  1948 04:1892: E2 20        	sep	#$20
  1949                        	longa	off
  1950 04:1894: 64 01        	stz	<L23+code_1
  1951 04:1896: C2 20        	rep	#$20
  1952                        	longa	on
  1953 04:1898: E2 20        	sep	#$20
  1954                        	longa	off
  1955 04:189A: A9 A0        	lda	#$a0
  1956 04:189C: 85 02        	sta	<L23+safety_1
  1957 04:189E: C2 20        	rep	#$20
  1958                        	longa	on
  1959                        	.line	89
  1960 04:18A0: E2 20        	sep	#$20
  1961                        	longa	off
  1962 04:18A2: AF 37 E8 AF  	lda	>11528247
  1963 04:18A6: 85 01        	sta	<L23+code_1
  1964 04:18A8: C2 20        	rep	#$20
  1965                        	longa	on
  1966                        ;	while((code & (IDE_STAT_BSY | IDE_STAT_DRQ)) != 
                    0)
  Sat Jul 10 2021  1:15                                                Page 38


  1967                        	.line	90
  1968                        L10008:
  1969 04:18AA: E2 20        	sep	#$20
  1970                        	longa	off
  1971 04:18AC: A5 01        	lda	<L23+code_1
  1972 04:18AE: 29 88        	and	#<$88
  1973 04:18B0: C2 20        	rep	#$20
  1974                        	longa	on
  1975 04:18B2: D0 03        	bne	L25
  1976 04:18B4: 82 2F 00     	brl	L10009
  1977                        L25:
  1978                        ;	{
  1979                        	.line	91
  1980                        ;		code = IDE_CMD_STAT[0];
  1981                        	.line	92
  1982 04:18B7: E2 20        	sep	#$20
  1983                        	longa	off
  1984 04:18B9: AF 37 E8 AF  	lda	>11528247
  1985 04:18BD: 85 01        	sta	<L23+code_1
  1986 04:18BF: C2 20        	rep	#$20
  1987                        	longa	on
  1988                        ;		//DebugHex("***k_drive_ready_not_busy:",
                    code);
  1989                        ;		safety--;
  1990                        	.line	94
  1991 04:18C1: E2 20        	sep	#$20
  1992                        	longa	off
  1993 04:18C3: C6 02        	dec	<L23+safety_1
  1994 04:18C5: C2 20        	rep	#$20
  1995                        	longa	on
  1996                        ;		if(safety < 1)
  1997                        	.line	95
  1998                        ;		{
  1999 04:18C7: E2 20        	sep	#$20
  2000                        	longa	off
  2001 04:18C9: A5 02        	lda	<L23+safety_1
  2002 04:18CB: C9 01        	cmp	#<$1
  2003 04:18CD: C2 20        	rep	#$20
  2004                        	longa	on
  2005 04:18CF: 90 03        	bcc	L26
  2006 04:18D1: 82 0F 00     	brl	L10010
  2007                        L26:
  2008                        	.line	96
  2009                        ;			//DebugHex("***k_drive_ready_not
                    _busy abort:",code);
  2010                        ;			return code;
  2011                        	.line	98
  2012 04:18D4: A5 01        	lda	<L23+code_1
  2013 04:18D6: 29 FF 00     	and	#$ff
  2014                        L27:
  2015 04:18D9: A8           	tay
  2016 04:18DA: 2B           	pld
  2017 04:18DB: 3B           	tsc
  2018 04:18DC: 18           	clc
  2019 04:18DD: 69 02 00     	adc	#L22
  2020 04:18E0: 1B           	tcs
  2021 04:18E1: 98           	tya
  2022 04:18E2: 6B           	rtl
  Sat Jul 10 2021  1:15                                                Page 39


  2023                        ;		}
  2024                        	.line	99
  2025                        ;	}
  2026                        L10010:
  2027                        	.line	100
  2028 04:18E3: 82 C4 FF     	brl	L10008
  2029                        L10009:
  2030                        ;
  2031                        ;	return 0;
  2032                        	.line	102
  2033 04:18E6: A9 00 00     	lda	#$0
  2034 04:18E9: 82 ED FF     	brl	L27
  2035                        ;}
  2036                        	.line	103
  2037                        	.endblock	103
  2038             00000002   L22	equ	2
  2039             00000001   L23	equ	1
  2040 04:18EC:              	ends
  2041                        	efunc
  2042                        	.endfunc	103,1,2
  2043                        	.line	103
  2044                        ;
  2045                        ;static UINT k_drive_ready_not_busy(VOID)
  2046                        ;{
  2047                        	.line	105
  2048                        	.line	106
  2049                        	IDES04
  2050                        	func
  2051                        	.function	106
  2052                        ~~k_drive_ready_not_busy:
  2053                        	longa	on
  2054                        	longi	on
  2055 04:18EC: 3B           	tsc
  2056 04:18ED: 38           	sec
  2057 04:18EE: E9 06 00     	sbc	#L28
  2058 04:18F1: 1B           	tcs
  2059 04:18F2: 0B           	phd
  2060 04:18F3: 5B           	tcd
  2061                        	.block	106
  2062                        ;	BYTE 	code = 0;
  2063                        ;	UCHAR 	safety = 8096;
  2064                        ;	//DebugOut("***k_drive_ready_not_busy\r\n");
  2065                        ;
  2066                        ;	code = IDE_CMD_STAT[0];
  2067             00000000   code_1	set	0
  2068             00000001   safety_1	set	1
  2069                        	.sym	code,0,14,1,8
  2070                        	.sym	safety,1,14,1,8
  2071 04:18F4: E2 20        	sep	#$20
  2072                        	longa	off
  2073 04:18F6: 64 05        	stz	<L29+code_1
  2074 04:18F8: C2 20        	rep	#$20
  2075                        	longa	on
  2076 04:18FA: E2 20        	sep	#$20
  2077                        	longa	off
  2078 04:18FC: A9 A0        	lda	#$a0
  2079 04:18FE: 85 06        	sta	<L29+safety_1
  2080 04:1900: C2 20        	rep	#$20
  Sat Jul 10 2021  1:15                                                Page 40


  2081                        	longa	on
  2082                        	.line	111
  2083 04:1902: E2 20        	sep	#$20
  2084                        	longa	off
  2085 04:1904: AF 37 E8 AF  	lda	>11528247
  2086 04:1908: 85 05        	sta	<L29+code_1
  2087 04:190A: C2 20        	rep	#$20
  2088                        	longa	on
  2089                        ;	while((code & (IDE_STAT_BSY | IDE_STAT_DRDY)) !=
                     IDE_STAT_DRDY)
  2090                        	.line	112
  2091                        L10011:
  2092 04:190C: A5 05        	lda	<L29+code_1
  2093 04:190E: 29 C0 00     	and	#<$c0
  2094 04:1911: 85 01        	sta	<R0
  2095 04:1913: A5 01        	lda	<R0
  2096 04:1915: C9 40 00     	cmp	#<$40
  2097 04:1918: D0 03        	bne	L31
  2098 04:191A: 82 2F 00     	brl	L10012
  2099                        L31:
  2100                        ;	{
  2101                        	.line	113
  2102                        ;		code = IDE_CMD_STAT[0];
  2103                        	.line	114
  2104 04:191D: E2 20        	sep	#$20
  2105                        	longa	off
  2106 04:191F: AF 37 E8 AF  	lda	>11528247
  2107 04:1923: 85 05        	sta	<L29+code_1
  2108 04:1925: C2 20        	rep	#$20
  2109                        	longa	on
  2110                        ;		//DebugHex("***k_drive_ready_not_busy:",
                    code);
  2111                        ;		safety--;
  2112                        	.line	116
  2113 04:1927: E2 20        	sep	#$20
  2114                        	longa	off
  2115 04:1929: C6 06        	dec	<L29+safety_1
  2116 04:192B: C2 20        	rep	#$20
  2117                        	longa	on
  2118                        ;		if(safety < 1)
  2119                        	.line	117
  2120                        ;		{
  2121 04:192D: E2 20        	sep	#$20
  2122                        	longa	off
  2123 04:192F: A5 06        	lda	<L29+safety_1
  2124 04:1931: C9 01        	cmp	#<$1
  2125 04:1933: C2 20        	rep	#$20
  2126                        	longa	on
  2127 04:1935: 90 03        	bcc	L32
  2128 04:1937: 82 0F 00     	brl	L10013
  2129                        L32:
  2130                        	.line	118
  2131                        ;			//DebugHex("***k_drive_ready_not
                    _busy abort:",code);
  2132                        ;			return code;
  2133                        	.line	120
  2134 04:193A: A5 05        	lda	<L29+code_1
  2135 04:193C: 29 FF 00     	and	#$ff
  Sat Jul 10 2021  1:15                                                Page 41


  2136                        L33:
  2137 04:193F: A8           	tay
  2138 04:1940: 2B           	pld
  2139 04:1941: 3B           	tsc
  2140 04:1942: 18           	clc
  2141 04:1943: 69 06 00     	adc	#L28
  2142 04:1946: 1B           	tcs
  2143 04:1947: 98           	tya
  2144 04:1948: 6B           	rtl
  2145                        ;		}
  2146                        	.line	121
  2147                        ;	}
  2148                        L10013:
  2149                        	.line	122
  2150 04:1949: 82 C0 FF     	brl	L10011
  2151                        L10012:
  2152                        ;
  2153                        ;	return 0;
  2154                        	.line	124
  2155 04:194C: A9 00 00     	lda	#$0
  2156 04:194F: 82 ED FF     	brl	L33
  2157                        ;}
  2158                        	.line	125
  2159                        	.endblock	125
  2160             00000006   L28	equ	6
  2161             00000005   L29	equ	5
  2162 04:1952:              	ends
  2163                        	efunc
  2164                        	.endfunc	125,5,6
  2165                        	.line	125
  2166                        ;
  2167                        ;static VOID k_drive_busy(VOID)
  2168                        ;{
  2169                        	.line	127
  2170                        	.line	128
  2171                        	IDES04
  2172                        	func
  2173                        	.function	128
  2174                        ~~k_drive_busy:
  2175                        	longa	on
  2176                        	longi	on
  2177 04:1952: 3B           	tsc
  2178 04:1953: 38           	sec
  2179 04:1954: E9 04 00     	sbc	#L34
  2180 04:1957: 1B           	tcs
  2181 04:1958: 0B           	phd
  2182 04:1959: 5B           	tcd
  2183                        	.block	128
  2184                        ;	//DebugOut("***k_drive_busy\r\n");
  2185                        ;
  2186                        ;	while((IDE_CMD_STAT[0] & IDE_STAT_BSY) == IDE_ST
                    AT_BSY);
  2187                        	.line	131
  2188                        L10014:
  2189 04:195A: AF 37 E8 AF  	lda	>11528247
  2190 04:195E: 29 80 00     	and	#<$80
  2191 04:1961: 85 01        	sta	<R0
  2192 04:1963: A5 01        	lda	<R0
  Sat Jul 10 2021  1:15                                                Page 42


  2193 04:1965: C9 80 00     	cmp	#<$80
  2194 04:1968: F0 03        	beq	L37
  2195 04:196A: 82 03 00     	brl	L10015
  2196                        L37:
  2197                        	.line	131
  2198 04:196D: 82 EA FF     	brl	L10014
  2199                        L10015:
  2200                        ;
  2201                        ;	return;
  2202                        	.line	133
  2203                        L38:
  2204 04:1970: 2B           	pld
  2205 04:1971: 3B           	tsc
  2206 04:1972: 18           	clc
  2207 04:1973: 69 04 00     	adc	#L34
  2208 04:1976: 1B           	tcs
  2209 04:1977: 6B           	rtl
  2210                        ;}
  2211                        	.line	134
  2212                        	.endblock	134
  2213             00000004   L34	equ	4
  2214             00000005   L35	equ	5
  2215 04:1978:              	ends
  2216                        	efunc
  2217                        	.endfunc	134,5,4
  2218                        	.line	134
  2219                        ;
  2220                        ;
  2221                        ;void k_hd_diagnostic(void)
  2222                        ;{
  2223                        	.line	137
  2224                        	.line	138
  2225                        	IDES04
  2226                        	xdef	~~k_hd_diagnostic
  2227                        	func
  2228                        	.function	138
  2229                        ~~k_hd_diagnostic:
  2230                        	longa	on
  2231                        	longi	on
  2232 04:1978: 3B           	tsc
  2233 04:1979: 38           	sec
  2234 04:197A: E9 01 00     	sbc	#L39
  2235 04:197D: 1B           	tcs
  2236 04:197E: 0B           	phd
  2237 04:197F: 5B           	tcd
  2238                        	.block	138
  2239                        ;	UCHAR sts = 0x00;
  2240                        ;
  2241                        ;	k_drive_ready_not_busy();
  2242             00000000   sts_1	set	0
  2243                        	.sym	sts,0,14,1,8
  2244 04:1980: E2 20        	sep	#$20
  2245                        	longa	off
  2246 04:1982: 64 01        	stz	<L40+sts_1
  2247 04:1984: C2 20        	rep	#$20
  2248                        	longa	on
  2249                        	.line	141
  2250 04:1986: 22 EC 18 04  	jsl	~~k_drive_ready_not_busy
  Sat Jul 10 2021  1:15                                                Page 43


  2251                        ;
  2252                        ;	IDE_CMD_STAT[0] = 0x90;
  2253                        	.line	143
  2254 04:198A: E2 20        	sep	#$20
  2255                        	longa	off
  2256 04:198C: A9 90        	lda	#$90
  2257 04:198E: 8F 37 E8 AF  	sta	>11528247
  2258 04:1992: C2 20        	rep	#$20
  2259                        	longa	on
  2260                        ;
  2261                        ;	k_drive_busy();
  2262                        	.line	145
  2263 04:1994: 22 52 19 04  	jsl	~~k_drive_busy
  2264                        ;
  2265                        ;	sts = IDE_ERROR[0];
  2266                        	.line	147
  2267 04:1998: E2 20        	sep	#$20
  2268                        	longa	off
  2269 04:199A: AF 31 E8 AF  	lda	>11528241
  2270 04:199E: 85 01        	sta	<L40+sts_1
  2271 04:19A0: C2 20        	rep	#$20
  2272                        	longa	on
  2273                        ;	//DebugHex("k_ide_diagnostic:code:",sts);
  2274                        ;
  2275                        ;	//k_ide_isbusy();
  2276                        ;
  2277                        ;	return;
  2278                        	.line	152
  2279                        L42:
  2280 04:19A2: 2B           	pld
  2281 04:19A3: 3B           	tsc
  2282 04:19A4: 18           	clc
  2283 04:19A5: 69 01 00     	adc	#L39
  2284 04:19A8: 1B           	tcs
  2285 04:19A9: 6B           	rtl
  2286                        ;}
  2287                        	.line	153
  2288                        	.endblock	153
  2289             00000001   L39	equ	1
  2290             00000001   L40	equ	1
  2291 04:19AA:              	ends
  2292                        	efunc
  2293                        	.endfunc	153,1,1
  2294                        	.line	153
  2295                        ;
  2296                        ;UINT k_hd_get_id(VOID)
  2297                        ;{
  2298                        	.line	155
  2299                        	.line	156
  2300                        	IDES04
  2301                        	xdef	~~k_hd_get_id
  2302                        	func
  2303                        	.function	156
  2304                        ~~k_hd_get_id:
  2305                        	longa	on
  2306                        	longi	on
  2307 04:19AA: 3B           	tsc
  2308 04:19AB: 38           	sec
  Sat Jul 10 2021  1:15                                                Page 44


  2309 04:19AC: E9 0A 00     	sbc	#L43
  2310 04:19AF: 1B           	tcs
  2311 04:19B0: 0B           	phd
  2312 04:19B1: 5B           	tcd
  2313                        	.block	156
  2314                        ;	int x;
  2315                        ;	PIDSECTOR pid = NULL;
  2316                        ;	PFATBOOTSECTOR pmbr = NULL;
  2317                        ;
  2318                        ;	k_debug_string("***k_hd_get_id\r\n");
  2319             00000000   x_1	set	0
  2320             00000002   pid_1	set	2
  2321             00000006   pmbr_1	set	6
  2322                        	.sym	x,0,5,1,16
  2323                        	.sym	pid,2,138,1,32,98
  2324                        	.sym	pmbr,6,138,1,32,92
  2325 04:19B2: 64 03        	stz	<L44+pid_1
  2326 04:19B4: 64 05        	stz	<L44+pid_1+2
  2327 04:19B6: 64 07        	stz	<L44+pmbr_1
  2328 04:19B8: 64 09        	stz	<L44+pmbr_1+2
  2329                        	.line	161
  2330 04:19BA: F4 xx xx     	pea	#^L1
  2331 04:19BD: F4 xx xx     	pea	#<L1
  2332 04:19C0: 22 xx xx xx  	jsl	~~k_debug_string
  2333                        ;
  2334                        ;	k_drive_ready_not_busy();
  2335                        	.line	163
  2336 04:19C4: 22 EC 18 04  	jsl	~~k_drive_ready_not_busy
  2337                        ;
  2338                        ;	IDE_HEAD[0] = 0xE0;
  2339                        	.line	165
  2340 04:19C8: E2 20        	sep	#$20
  2341                        	longa	off
  2342 04:19CA: A9 E0        	lda	#$e0
  2343 04:19CC: 8F 36 E8 AF  	sta	>11528246
  2344 04:19D0: C2 20        	rep	#$20
  2345                        	longa	on
  2346                        ;
  2347                        ;	k_drive_ready_not_busy();
  2348                        	.line	167
  2349 04:19D2: 22 EC 18 04  	jsl	~~k_drive_ready_not_busy
  2350                        ;
  2351                        ;    IDE_SECT_CNT[0] = 0;
  2352                        	.line	169
  2353 04:19D6: E2 20        	sep	#$20
  2354                        	longa	off
  2355 04:19D8: A9 00        	lda	#$0
  2356 04:19DA: 8F 32 E8 AF  	sta	>11528242
  2357 04:19DE: C2 20        	rep	#$20
  2358                        	longa	on
  2359                        ;    IDE_SECT_SRT[0] = 0;
  2360                        	.line	170
  2361 04:19E0: E2 20        	sep	#$20
  2362                        	longa	off
  2363 04:19E2: A9 00        	lda	#$0
  2364 04:19E4: 8F 33 E8 AF  	sta	>11528243
  2365 04:19E8: C2 20        	rep	#$20
  2366                        	longa	on
  Sat Jul 10 2021  1:15                                                Page 45


  2367                        ;    IDE_CLDR_LO[0] = 0;
  2368                        	.line	171
  2369 04:19EA: E2 20        	sep	#$20
  2370                        	longa	off
  2371 04:19EC: A9 00        	lda	#$0
  2372 04:19EE: 8F 34 E8 AF  	sta	>11528244
  2373 04:19F2: C2 20        	rep	#$20
  2374                        	longa	on
  2375                        ;    IDE_CLDR_HI[0] = 0;
  2376                        	.line	172
  2377 04:19F4: E2 20        	sep	#$20
  2378                        	longa	off
  2379 04:19F6: A9 00        	lda	#$0
  2380 04:19F8: 8F 35 E8 AF  	sta	>11528245
  2381 04:19FC: C2 20        	rep	#$20
  2382                        	longa	on
  2383                        ;
  2384                        ;    IDE_CMD_STAT[0] = IDE_CMD_IDENTIFY;
  2385                        	.line	174
  2386 04:19FE: E2 20        	sep	#$20
  2387                        	longa	off
  2388 04:1A00: A9 EC        	lda	#$ec
  2389 04:1A02: 8F 37 E8 AF  	sta	>11528247
  2390 04:1A06: C2 20        	rep	#$20
  2391                        	longa	on
  2392                        ;
  2393                        ;	asm NOP;
  2394                        	.line	176
  2395                        	asmstart
  2396 04:1A08: EA           	NOP
  2397                        	asmend
  2398                        ;	asm NOP;
  2399                        	.line	177
  2400                        	asmstart
  2401 04:1A09: EA           	NOP
  2402                        	asmend
  2403                        ;	asm NOP;
  2404                        	.line	178
  2405                        	asmstart
  2406 04:1A0A: EA           	NOP
  2407                        	asmend
  2408                        ;	asm NOP;
  2409                        	.line	179
  2410                        	asmstart
  2411 04:1A0B: EA           	NOP
  2412                        	asmend
  2413                        ;	asm NOP;
  2414                        	.line	180
  2415                        	asmstart
  2416 04:1A0C: EA           	NOP
  2417                        	asmend
  2418                        ;	asm NOP;
  2419                        	.line	181
  2420                        	asmstart
  2421 04:1A0D: EA           	NOP
  2422                        	asmend
  2423                        ;	asm NOP;
  2424                        	.line	182
  Sat Jul 10 2021  1:15                                                Page 46


  2425                        	asmstart
  2426 04:1A0E: EA           	NOP
  2427                        	asmend
  2428                        ;	asm NOP;
  2429                        	.line	183
  2430                        	asmstart
  2431 04:1A0F: EA           	NOP
  2432                        	asmend
  2433                        ;	asm NOP;
  2434                        	.line	184
  2435                        	asmstart
  2436 04:1A10: EA           	NOP
  2437                        	asmend
  2438                        ;	asm NOP;
  2439                        	.line	185
  2440                        	asmstart
  2441 04:1A11: EA           	NOP
  2442                        	asmend
  2443                        ;
  2444                        ;    k_drive_busy();
  2445                        	.line	187
  2446 04:1A12: 22 52 19 04  	jsl	~~k_drive_busy
  2447                        ;
  2448                        ;    k_drive_wait_dsc();
  2449                        	.line	189
  2450 04:1A16: 22 0E 18 04  	jsl	~~k_drive_wait_dsc
  2451                        ;
  2452                        ;
  2453                        ;	for(x=0;x<(512 - 0);x+=2)
  2454                        	.line	192
  2455 04:1A1A: 64 01        	stz	<L44+x_1
  2456                        L10018:
  2457                        ;	{
  2458                        	.line	193
  2459                        ;		szIndentity[x]   = IDE_DATA_LO[0];
  2460                        	.line	194
  2461 04:1A1C: E2 20        	sep	#$20
  2462                        	longa	off
  2463 04:1A1E: AF 38 E8 AF  	lda	>11528248
  2464 04:1A22: A6 01        	ldx	<L44+x_1
  2465 04:1A24: 9D xx xx     	sta	|~~szIndentity,X
  2466 04:1A27: C2 20        	rep	#$20
  2467                        	longa	on
  2468                        ;		szIndentity[x+1] = IDE_DATA_HI[0];
  2469                        	.line	195
  2470 04:1A29: E2 20        	sep	#$20
  2471                        	longa	off
  2472 04:1A2B: AF 39 E8 AF  	lda	>11528249
  2473 04:1A2F: A6 01        	ldx	<L44+x_1
  2474 04:1A31: 9D xx xx     	sta	|~~szIndentity+1,X
  2475 04:1A34: C2 20        	rep	#$20
  2476                        	longa	on
  2477                        ;	}
  2478                        	.line	196
  2479                        L10016:
  2480 04:1A36: E6 01        	inc	<L44+x_1
  2481 04:1A38: E6 01        	inc	<L44+x_1
  2482 04:1A3A: 38           	sec
  Sat Jul 10 2021  1:15                                                Page 47


  2483 04:1A3B: A5 01        	lda	<L44+x_1
  2484 04:1A3D: E9 00 02     	sbc	#<$200
  2485 04:1A40: 70 03        	bvs	L46
  2486 04:1A42: 49 00 80     	eor	#$8000
  2487                        L46:
  2488 04:1A45: 30 03        	bmi	L47
  2489 04:1A47: 82 D2 FF     	brl	L10018
  2490                        L47:
  2491                        L10017:
  2492                        ;
  2493                        ;	/*
  2494                        ;    for(x=0;x<SDC_BUFFER_SIZE;x++)
  2495                        ;	{
  2496                        ;		szIndentity[x] = IDE_DATA_LO[0];
  2497                        ;	}
  2498                        ;	*/
  2499                        ;	//k_debug_byte_array("k_hd_get_id::DebugByteArra
                    y:",szIndentity,512);
  2500                        ;
  2501                        ;	pid = ((PIDSECTOR)szIndentity);
  2502                        	.line	206
  2503 04:1A4A: A9 xx xx     	lda	#<~~szIndentity
  2504 04:1A4D: 85 03        	sta	<L44+pid_1
  2505                        	xref	_BEG_DATA
  2506 04:1A4F: A9 xx xx     	lda	#_BEG_DATA>>16
  2507 04:1A52: 85 05        	sta	<L44+pid_1+2
  2508                        ;
  2509                        ;
  2510                        ;	//DebugMessageN("sSerialNumber:",pid->sSerialNum
                    ber,20);
  2511                        ;//	DebugMessageN("sModelNumbers:",pid->sMod
                    elNumber,40);
  2512                        ;//	DebugMessageN("sFirmwareRev:",pid->sFirm
                    wareRev,8);
  2513                        ;	//DebugLong("AvailSectors:",pid->ulTotalAddressa
                    bleSectors);
  2514                        ;
  2515                        ;
  2516                        ;	//k_hd_read_sector(0L,szIndentity);
  2517                        ;	//k_debug_byte_array("k_hd_get_id::MBR:",szInden
                    tity,512);
  2518                        ;
  2519                        ;	//pmbr =  ((PFATBOOTSECTOR)szIndentity);
  2520                        ;
  2521                        ;	//k_hd_check_drive(szIndentity);
  2522                        ;
  2523                        ;	return 0;
  2524                        	.line	222
  2525 04:1A54: A9 00 00     	lda	#$0
  2526                        L48:
  2527 04:1A57: A8           	tay
  2528 04:1A58: 2B           	pld
  2529 04:1A59: 3B           	tsc
  2530 04:1A5A: 18           	clc
  2531 04:1A5B: 69 0A 00     	adc	#L43
  2532 04:1A5E: 1B           	tcs
  2533 04:1A5F: 98           	tya
  2534 04:1A60: 6B           	rtl
  Sat Jul 10 2021  1:15                                                Page 48


  2535                        ;/*
  2536                        ;IDE_IDENTIFY    .proc
  2537                        ;                PHY
  2538                        ;                PHB
  2539                        ;                PHD
  2540                        ;                PHP
  2541                        ;
  2542                        ;                TRACE "IDE_IDENTIFY"
  2543                        ;
  2544                        ;                setdbr 0
  2545                        ;                setdp SDOS_VARIABLES
  2546                        ;
  2547                        ;                setas
  2548                        ;
  2549                        ;                JSR IDE_DRV_READY_NOTBUSY       ;
                     Wait until the IDE is clear to accept commands
  2550                        ;
  2551                        ;                LDA BIOS_LBA+3                  ;
                     Get the high bits of the LBA
  2552                        ;                AND #$07
  2553                        ;                ORA #%10100000                  ;
                     Select DEV=0 and LBA mode = 1
  2554                        ;                STA @l IDE_HEAD                 ;
                     Ensure master is selected
  2555                        ;
  2556                        ;                JSR IDE_DRV_READY_NOTBUSY       ;
                     And wait for it to take effect
  2557                        ;
  2558                        ;                setas
  2559                        ;                LDA #0                          ;
                     Clear sector count and LBA
  2560                        ;                STA @l IDE_SECT_CNT
  2561                        ;                STA @l IDE_SECT_SRT
  2562                        ;                STA @l IDE_CLDR_LO
  2563                        ;                STA @l IDE_CLDR_HI
  2564                        ;
  2565                        ;                LDA #IDE_CMD_IDENTIFY           ;
                     The IDENTIFY command
  2566                        ;                STA @l IDE_CMD_STAT             ;
                     Check the status
  2567                        ;                BEQ no_media                    ;
                     If 0: there is no drive
  2568                        ;
  2569                        ;                JSR IDE_DRIVE_BSY               ;
                     Othewise: wait for drive to not be busy
  2570                        ;
  2571                        ;                ; LDA @l IDE_CLDR_LO             
                     ; Validate cylinder hi and low are 0
  2572                        ;                ; BNE not_ata
  2573                        ;                ; LDA @l IDE_CLDR_HI
  2574                        ;                ; BNE not_ata                    
                     ; If not: it's not an ATA drive
  2575                        ;
  2576                        ;                JSR IDE_DRV_READY_NOTBUSY       ;
                     Wait for the device to be ready
  2577                        ;                BCC ret_failure                 ;
                     If an error occurred, return it
  2578                        ;
  Sat Jul 10 2021  1:15                                                Page 49


  2579                        ;                setaxl
  2580                        ;                LDY #0
  2581                        ;read_loop       LDA @l IDE_DATA_LO              ;
                     Get the word of data from the device
  2582                        ;                STA [BIOS_BUFF_PTR],Y           ;
                     Save it to the buffer
  2583                        ;                INY                             ;
                     Move to the next position
  2584                        ;                INY
  2585                        ;                CPY #512
  2586                        ;                BNE read_loop
  2587                        ;
  2588                        ;ret_success     setas
  2589                        ;                LDA #0
  2590                        ;                STA BIOS_STATUS
  2591                        ;                STA @w FDC_ST0
  2592                        ;
  2593                        ;                PLP                             ;
                     Return success
  2594                        ;                PLD
  2595                        ;                PLB
  2596                        ;                PLY
  2597                        ;                SEC
  2598                        ;                RTL
  2599                        ; */
  2600                        ;
  2601                        ;}
  2602                        	.line	289
  2603                        	.endblock	289
  2604             0000000A   L43	equ	10
  2605             00000001   L44	equ	1
  2606 04:1A61:              	ends
  2607                        	efunc
  2608                        	.endfunc	289,1,10
  2609                        	.line	289
  2610                        	data
  2611                        L1:
  2612 00:006D: 2A 2A 2A 6B  	db	$2A,$2A,$2A,$6B,$5F,$68,$64,$5F,$67,$65,
                    $74,$5F,$69,$64,$0D
       00:0071: 5F 68 64 5F 
       00:0075: 67 65 74 5F 
       00:0079: 69 64 0D 
  2613 00:007C: 0A 00        	db	$0A,$00
  2614 00:007E:              	ends
  2615                        ;
  2616                        ;UCHAR k_hd_send_command(UINT command,LPVOID buffe
                    r)
  2617                        ;{
  2618                        	.line	291
  2619                        	.line	292
  2620                        	IDES04
  2621                        	xdef	~~k_hd_send_command
  2622                        	func
  2623                        	.function	292
  2624                        ~~k_hd_send_command:
  2625                        	longa	on
  2626                        	longi	on
  2627 04:1A61: 3B           	tsc
  Sat Jul 10 2021  1:15                                                Page 50


  2628 04:1A62: 38           	sec
  2629 04:1A63: E9 00 00     	sbc	#L50
  2630 04:1A66: 1B           	tcs
  2631 04:1A67: 0B           	phd
  2632 04:1A68: 5B           	tcd
  2633             00000004   command_0	set	4
  2634             00000006   buffer_0	set	6
  2635                        	.block	292
  2636                        ;	return 0;
  2637                        	.sym	command,4,16,6,16
  2638                        	.sym	buffer,6,129,6,32
  2639                        	.line	293
  2640 04:1A69: A9 00 00     	lda	#$0
  2641                        L53:
  2642 04:1A6C: A8           	tay
  2643 04:1A6D: A5 02        	lda	<L50+2
  2644 04:1A6F: 85 08        	sta	<L50+2+6
  2645 04:1A71: A5 01        	lda	<L50+1
  2646 04:1A73: 85 07        	sta	<L50+1+6
  2647 04:1A75: 2B           	pld
  2648 04:1A76: 3B           	tsc
  2649 04:1A77: 18           	clc
  2650 04:1A78: 69 06 00     	adc	#L50+6
  2651 04:1A7B: 1B           	tcs
  2652 04:1A7C: 98           	tya
  2653 04:1A7D: 6B           	rtl
  2654                        ;}
  2655                        	.line	294
  2656                        	.endblock	294
  2657             00000000   L50	equ	0
  2658             00000001   L51	equ	1
  2659 04:1A7E:              	ends
  2660                        	efunc
  2661                        	.endfunc	294,1,0
  2662                        	.line	294
  2663                        ;
  2664                        ;
  2665                        ;
  2666                        ;
  2667                        ;UCHAR k_hd_read_sector(unsigned long offset,LPCHA
                    R receiveBuffer)
  2668                        ;{
  2669                        	.line	299
  2670                        	.line	300
  2671                        	IDES04
  2672                        	xdef	~~k_hd_read_sector
  2673                        	func
  2674                        	.function	300
  2675                        ~~k_hd_read_sector:
  2676                        	longa	on
  2677                        	longi	on
  2678 04:1A7E: 3B           	tsc
  2679 04:1A7F: 38           	sec
  2680 04:1A80: E9 10 00     	sbc	#L54
  2681 04:1A83: 1B           	tcs
  2682 04:1A84: 0B           	phd
  2683 04:1A85: 5B           	tcd
  2684             00000004   offset_0	set	4
  Sat Jul 10 2021  1:15                                                Page 51


  2685             00000008   receiveBuffer_0	set	8
  2686                        	.block	300
  2687                        ;	UCHAR	errorCode = 0;
  2688                        ;	BYTE	workaround = 0;
  2689                        ;	int index;
  2690                        ;
  2691                        ;	PUINT puint = (PUINT)receiveBuffer;
  2692                        ;
  2693                        ;	//DebugOut("***k_hd_read_sector\r\n");
  2694                        ;
  2695                        ;	//k_debug_long("***k_hd_read_sector:",offset);
  2696                        ;	//DebugHex("***k_hd_read_sector:HEAD:",((H32BYTE
                    (offset)) | 0xE0));
  2697                        ;	//DebugHex("***k_hd_read_sector:HEAD PIO:",(0x1F
                    6, 0xE0 | (0xE0 << 4) | ((offset >> 24) & 0x0F)));
  2698                        ;
  2699                        ;	//IDE_CMD_STAT[0] = 0;
  2700                        ;	//k_drive_ready();
  2701                        ;
  2702                        ;	//DebugHex("***k_hd_read_sector:WAIT:",1);
  2703                        ;	k_drive_ready_not_busy();
  2704             00000000   errorCode_1	set	0
  2705             00000001   workaround_1	set	1
  2706             00000002   index_1	set	2
  2707             00000004   puint_1	set	4
  2708                        	.sym	errorCode,0,14,1,8
  2709                        	.sym	workaround,1,14,1,8
  2710                        	.sym	index,2,5,1,16
  2711                        	.sym	puint,4,144,1,32
  2712                        	.sym	offset,4,18,6,32
  2713                        	.sym	receiveBuffer,8,142,6,32
  2714 04:1A86: E2 20        	sep	#$20
  2715                        	longa	off
  2716 04:1A88: 64 09        	stz	<L55+errorCode_1
  2717 04:1A8A: C2 20        	rep	#$20
  2718                        	longa	on
  2719 04:1A8C: E2 20        	sep	#$20
  2720                        	longa	off
  2721 04:1A8E: 64 0A        	stz	<L55+workaround_1
  2722 04:1A90: C2 20        	rep	#$20
  2723                        	longa	on
  2724 04:1A92: A5 18        	lda	<L54+receiveBuffer_0
  2725 04:1A94: 85 0D        	sta	<L55+puint_1
  2726 04:1A96: A5 1A        	lda	<L54+receiveBuffer_0+2
  2727 04:1A98: 85 0F        	sta	<L55+puint_1+2
  2728                        	.line	317
  2729 04:1A9A: 22 EC 18 04  	jsl	~~k_drive_ready_not_busy
  2730                        ;
  2731                        ;	IDE_HEAD[0] = (0x1F6, 0xE0 | (0xE0 << 4) | ((off
                    set >> 24) & 0x0F));//((H32BYTE(offset)) | 0xE0);
  2732                        	.line	319
  2733 04:1A9E: D4 16        	pei	<L54+offset_0+2
  2734 04:1AA0: D4 14        	pei	<L54+offset_0
  2735 04:1AA2: A9 18 00     	lda	#$18
  2736                        	xref	~~~llsr
  2737 04:1AA5: 22 xx xx xx  	jsl	~~~llsr
  2738 04:1AA9: 85 01        	sta	<R0
  2739 04:1AAB: 86 03        	stx	<R0+2
  Sat Jul 10 2021  1:15                                                Page 52


  2740 04:1AAD: A5 01        	lda	<R0
  2741 04:1AAF: 29 0F 00     	and	#<$f
  2742 04:1AB2: 85 05        	sta	<R1
  2743 04:1AB4: 64 07        	stz	<R1+2
  2744 04:1AB6: A5 05        	lda	<R1
  2745 04:1AB8: 09 E0 0E     	ora	#<$ee0
  2746 04:1ABB: 85 01        	sta	<R0
  2747 04:1ABD: A5 07        	lda	<R1+2
  2748 04:1ABF: 85 03        	sta	<R0+2
  2749 04:1AC1: E2 20        	sep	#$20
  2750                        	longa	off
  2751 04:1AC3: A5 01        	lda	<R0
  2752 04:1AC5: 8F 36 E8 AF  	sta	>11528246
  2753 04:1AC9: C2 20        	rep	#$20
  2754                        	longa	on
  2755                        ;
  2756                        ;	//k_debug_hex("***k_hd_read_sector:WAIT:",IDE_CM
                    D_STAT[0]);
  2757                        ;	k_drive_ready_not_busy();
  2758                        	.line	322
  2759 04:1ACB: 22 EC 18 04  	jsl	~~k_drive_ready_not_busy
  2760                        ;
  2761                        ;	//IDE_FEATURE [0]  = 0;
  2762                        ;	IDE_SECT_CNT[0]  = 1;
  2763                        	.line	325
  2764 04:1ACF: E2 20        	sep	#$20
  2765                        	longa	off
  2766 04:1AD1: A9 01        	lda	#$1
  2767 04:1AD3: 8F 32 E8 AF  	sta	>11528242
  2768 04:1AD7: C2 20        	rep	#$20
  2769                        	longa	on
  2770                        ;	IDE_SECT_SRT[0]  = L24BYTE(offset);
  2771                        	.line	326
  2772 04:1AD9: E2 20        	sep	#$20
  2773                        	longa	off
  2774 04:1ADB: A5 14        	lda	<L54+offset_0
  2775 04:1ADD: 8F 33 E8 AF  	sta	>11528243
  2776 04:1AE1: C2 20        	rep	#$20
  2777                        	longa	on
  2778                        ;	IDE_CLDR_LO [0]  = M24BYTE(offset);
  2779                        	.line	327
  2780 04:1AE3: D4 16        	pei	<L54+offset_0+2
  2781 04:1AE5: D4 14        	pei	<L54+offset_0
  2782 04:1AE7: A9 08 00     	lda	#$8
  2783                        	xref	~~~llsr
  2784 04:1AEA: 22 xx xx xx  	jsl	~~~llsr
  2785 04:1AEE: 85 01        	sta	<R0
  2786 04:1AF0: 86 03        	stx	<R0+2
  2787 04:1AF2: A5 01        	lda	<R0
  2788 04:1AF4: 29 FF 00     	and	#<$ff
  2789 04:1AF7: 85 05        	sta	<R1
  2790 04:1AF9: 64 07        	stz	<R1+2
  2791 04:1AFB: E2 20        	sep	#$20
  2792                        	longa	off
  2793 04:1AFD: A5 05        	lda	<R1
  2794 04:1AFF: 8F 34 E8 AF  	sta	>11528244
  2795 04:1B03: C2 20        	rep	#$20
  2796                        	longa	on
  Sat Jul 10 2021  1:15                                                Page 53


  2797                        ;	IDE_CLDR_HI [0]  = H24BYTE(offset);
  2798                        	.line	328
  2799 04:1B05: D4 16        	pei	<L54+offset_0+2
  2800 04:1B07: D4 14        	pei	<L54+offset_0
  2801 04:1B09: A9 10 00     	lda	#$10
  2802                        	xref	~~~llsr
  2803 04:1B0C: 22 xx xx xx  	jsl	~~~llsr
  2804 04:1B10: 85 01        	sta	<R0
  2805 04:1B12: 86 03        	stx	<R0+2
  2806 04:1B14: A5 01        	lda	<R0
  2807 04:1B16: 29 FF 00     	and	#<$ff
  2808 04:1B19: 85 05        	sta	<R1
  2809 04:1B1B: 64 07        	stz	<R1+2
  2810 04:1B1D: E2 20        	sep	#$20
  2811                        	longa	off
  2812 04:1B1F: A5 05        	lda	<R1
  2813 04:1B21: 8F 35 E8 AF  	sta	>11528245
  2814 04:1B25: C2 20        	rep	#$20
  2815                        	longa	on
  2816                        ;
  2817                        ;	IDE_CMD_STAT[0] = IDE_CMD_READRETRY_SECTOR;// ID
                    E_CMD_READRETRY_SECTOR; //IDE_CMD_READ_SECTOR;
  2818                        	.line	330
  2819 04:1B27: E2 20        	sep	#$20
  2820                        	longa	off
  2821 04:1B29: A9 20        	lda	#$20
  2822 04:1B2B: 8F 37 E8 AF  	sta	>11528247
  2823 04:1B2F: C2 20        	rep	#$20
  2824                        	longa	on
  2825                        ;
  2826                        ;
  2827                        ;
  2828                        ;
  2829                        ;	asm NOP;
  2830                        	.line	335
  2831                        	asmstart
  2832 04:1B31: EA           	NOP
  2833                        	asmend
  2834                        ;	asm NOP;
  2835                        	.line	336
  2836                        	asmstart
  2837 04:1B32: EA           	NOP
  2838                        	asmend
  2839                        ;	asm NOP;
  2840                        	.line	337
  2841                        	asmstart
  2842 04:1B33: EA           	NOP
  2843                        	asmend
  2844                        ;	asm NOP;
  2845                        	.line	338
  2846                        	asmstart
  2847 04:1B34: EA           	NOP
  2848                        	asmend
  2849                        ;	asm NOP;
  2850                        	.line	339
  2851                        	asmstart
  2852 04:1B35: EA           	NOP
  2853                        	asmend
  Sat Jul 10 2021  1:15                                                Page 54


  2854                        ;
  2855                        ;	//k_drive_busy();
  2856                        ;
  2857                        ;
  2858                        ;	//k_debug_hex("***k_hd_read_sector:WAIT:",3);
  2859                        ;	//k_debug_hex("***k_hd_read_sector:CODE:",IDE_CM
                    D_STAT[0]);
  2860                        ;
  2861                        ;	//k_drive_ready();
  2862                        ;	//if(k_drive_wait_dsc())
  2863                        ;	//	return FR_DISK_ERR;
  2864                        ;
  2865                        ;	if(k_drive_wait_dsc())
  2866                        	.line	351
  2867                        ;			return FR_DISK_ERR;
  2868 04:1B36: 22 0E 18 04  	jsl	~~k_drive_wait_dsc
  2869 04:1B3A: AA           	tax
  2870 04:1B3B: D0 03        	bne	L57
  2871 04:1B3D: 82 15 00     	brl	L10019
  2872                        L57:
  2873                        	.line	352
  2874 04:1B40: A9 01 00     	lda	#$1
  2875                        L58:
  2876 04:1B43: A8           	tay
  2877 04:1B44: A5 12        	lda	<L54+2
  2878 04:1B46: 85 1A        	sta	<L54+2+8
  2879 04:1B48: A5 11        	lda	<L54+1
  2880 04:1B4A: 85 19        	sta	<L54+1+8
  2881 04:1B4C: 2B           	pld
  2882 04:1B4D: 3B           	tsc
  2883 04:1B4E: 18           	clc
  2884 04:1B4F: 69 18 00     	adc	#L54+8
  2885 04:1B52: 1B           	tcs
  2886 04:1B53: 98           	tya
  2887 04:1B54: 6B           	rtl
  2888                        ;
  2889                        ;	k_drive_wait_drq();
  2890                        L10019:
  2891                        	.line	354
  2892 04:1B55: 22 E8 17 04  	jsl	~~k_drive_wait_drq
  2893                        ;
  2894                        ;
  2895                        ;	//k_debug_hex("***k_hd_read_sector:WAIT:",4);
  2896                        ;	//k_debug_hex("***k_hd_read_sector:CODE:",IDE_CM
                    D_STAT[0]);
  2897                        ;
  2898                        ;
  2899                        ;	//errorCode = k_drive_ready_not_busy();
  2900                        ;	if(errorCode == 0)
  2901                        	.line	362
  2902                        ;	{
  2903 04:1B59: A5 09        	lda	<L55+errorCode_1
  2904 04:1B5B: 29 FF 00     	and	#$ff
  2905 04:1B5E: F0 03        	beq	L59
  2906 04:1B60: 82 36 00     	brl	L10020
  2907                        L59:
  2908                        	.line	363
  2909                        ;		//workaround = IDE_DATA[0];
  Sat Jul 10 2021  1:15                                                Page 55


  2910                        ;		//DebugHex("***k_hd_read_sector:workarou
                    nd:",workaround);
  2911                        ;
  2912                        ;		/*
  2913                        ;		for(index = 0;index < 511;index+=2)
  2914                        ;		{
  2915                        ;			receiveBuffer[index+1]   = IDE_D
                    ATA_LO[0];
  2916                        ;			receiveBuffer[index] = IDE_DATA_
                    HI[0];
  2917                        ;		}
  2918                        ;		*/
  2919                        ;
  2920                        ;
  2921                        ;		/*
  2922                        ;		for(index = 0;index < 512;index++)
  2923                        ;		{
  2924                        ;			receiveBuffer[index] = IDE_DATA[
                    0];
  2925                        ;		}
  2926                        ;		*/
  2927                        ;
  2928                        ;
  2929                        ;		for(index = 0;index < 512;index+=2)
  2930                        	.line	384
  2931 04:1B63: 64 0B        	stz	<L55+index_1
  2932                        L10023:
  2933                        ;		{
  2934                        	.line	385
  2935                        ;			receiveBuffer[index]   = IDE_DAT
                    A_LO[0];
  2936                        	.line	386
  2937 04:1B65: E2 20        	sep	#$20
  2938                        	longa	off
  2939 04:1B67: AF 38 E8 AF  	lda	>11528248
  2940 04:1B6B: A4 0B        	ldy	<L55+index_1
  2941 04:1B6D: 97 18        	sta	[<L54+receiveBuffer_0],Y
  2942 04:1B6F: C2 20        	rep	#$20
  2943                        	longa	on
  2944                        ;			receiveBuffer[index+1] = IDE_DAT
                    A_HI[0];
  2945                        	.line	387
  2946 04:1B71: A5 0B        	lda	<L55+index_1
  2947 04:1B73: 1A           	ina
  2948 04:1B74: 85 01        	sta	<R0
  2949 04:1B76: E2 20        	sep	#$20
  2950                        	longa	off
  2951 04:1B78: AF 39 E8 AF  	lda	>11528249
  2952 04:1B7C: A4 01        	ldy	<R0
  2953 04:1B7E: 97 18        	sta	[<L54+receiveBuffer_0],Y
  2954 04:1B80: C2 20        	rep	#$20
  2955                        	longa	on
  2956                        ;		}
  2957                        	.line	388
  2958                        L10021:
  2959 04:1B82: E6 0B        	inc	<L55+index_1
  2960 04:1B84: E6 0B        	inc	<L55+index_1
  2961 04:1B86: 38           	sec
  Sat Jul 10 2021  1:15                                                Page 56


  2962 04:1B87: A5 0B        	lda	<L55+index_1
  2963 04:1B89: E9 00 02     	sbc	#<$200
  2964 04:1B8C: 70 03        	bvs	L60
  2965 04:1B8E: 49 00 80     	eor	#$8000
  2966                        L60:
  2967 04:1B91: 30 03        	bmi	L61
  2968 04:1B93: 82 CF FF     	brl	L10023
  2969                        L61:
  2970                        L10022:
  2971                        ;		//k_debug_hex("***k_hd_read_sector:510:"
                    ,receiveBuffer[510]);
  2972                        ;		//k_debug_hex("***k_hd_read_sector:511:"
                    ,receiveBuffer[511]);
  2973                        ;		//k_debug_integer("LAST UINT:",*((PUINT)
                    &receiveBuffer[510]));
  2974                        ;
  2975                        ;		/*
  2976                        ;		for(index = 0;index < 256;index++)
  2977                        ;		{
  2978                        ;			puint[index] = *((PUINT)IDE_DATA
                    _LO);
  2979                        ;		}
  2980                        ;		*/
  2981                        ;	}
  2982                        	.line	399
  2983                        ;	else
  2984 04:1B96: 82 33 00     	brl	L10024
  2985                        L10020:
  2986                        ;	{
  2987                        	.line	401
  2988                        ;		for(index = 0;index < 511;index+=2)
  2989                        	.line	402
  2990 04:1B99: 64 0B        	stz	<L55+index_1
  2991                        L10027:
  2992                        ;		{
  2993                        	.line	403
  2994                        ;			receiveBuffer[index]   = IDE_DAT
                    A_LO[0];
  2995                        	.line	404
  2996 04:1B9B: E2 20        	sep	#$20
  2997                        	longa	off
  2998 04:1B9D: AF 38 E8 AF  	lda	>11528248
  2999 04:1BA1: A4 0B        	ldy	<L55+index_1
  3000 04:1BA3: 97 18        	sta	[<L54+receiveBuffer_0],Y
  3001 04:1BA5: C2 20        	rep	#$20
  3002                        	longa	on
  3003                        ;			receiveBuffer[index+1] = IDE_DAT
                    A_HI[0];
  3004                        	.line	405
  3005 04:1BA7: A5 0B        	lda	<L55+index_1
  3006 04:1BA9: 1A           	ina
  3007 04:1BAA: 85 01        	sta	<R0
  3008 04:1BAC: E2 20        	sep	#$20
  3009                        	longa	off
  3010 04:1BAE: AF 39 E8 AF  	lda	>11528249
  3011 04:1BB2: A4 01        	ldy	<R0
  3012 04:1BB4: 97 18        	sta	[<L54+receiveBuffer_0],Y
  3013 04:1BB6: C2 20        	rep	#$20
  Sat Jul 10 2021  1:15                                                Page 57


  3014                        	longa	on
  3015                        ;
  3016                        ;		}
  3017                        	.line	407
  3018                        L10025:
  3019 04:1BB8: E6 0B        	inc	<L55+index_1
  3020 04:1BBA: E6 0B        	inc	<L55+index_1
  3021 04:1BBC: 38           	sec
  3022 04:1BBD: A5 0B        	lda	<L55+index_1
  3023 04:1BBF: E9 FF 01     	sbc	#<$1ff
  3024 04:1BC2: 70 03        	bvs	L62
  3025 04:1BC4: 49 00 80     	eor	#$8000
  3026                        L62:
  3027 04:1BC7: 30 03        	bmi	L63
  3028 04:1BC9: 82 CF FF     	brl	L10027
  3029                        L63:
  3030                        L10026:
  3031                        ;
  3032                        ;	}
  3033                        	.line	409
  3034                        L10024:
  3035                        ;
  3036                        ;	//k_debug_byte_array("k_hd_read_sector::DebugByt
                    eArray:\r\n",receiveBuffer,512);
  3037                        ;/*
  3038                        ;
  3039                        ;
  3040                        ;                JSR IDE_DRV_READY_NOTBUSY       ;
                     Wait until the IDE is clear to accept commands
  3041                        ;
  3042                        ;                LDA BIOS_LBA+3                  ;
                     Get the high bits of the LBA
  3043                        ;                AND #$07
  3044                        ;                ORA #%11100000                  ;
                     Select DEV=0 and LBA mode = 1
  3045                        ;                STA @l IDE_HEAD                 ;
                     Ensure master is selected
  3046                        ;
  3047                        ;                JSR IDE_DRV_READY_NOTBUSY       ;
                     And wait for it to take effect
  3048                        ;
  3049                        ;                setas
  3050                        ;                LDA #1                          ;
                     Set that we want one sector
  3051                        ;                STA @l IDE_SECT_CNT
  3052                        ;
  3053                        ;                LDA BIOS_LBA                    ;
                     Set the lower bits of the LBA
  3054                        ;                STA @l IDE_SECT_SRT
  3055                        ;
  3056                        ;                LDA BIOS_LBA+1
  3057                        ;                STA @l IDE_CLDR_LO
  3058                        ;
  3059                        ;                LDA BIOS_LBA+2
  3060                        ;                STA @l IDE_CLDR_HI
  3061                        ;
  3062                        ;                LDA #IDE_CMD_READ_SECTOR        ;
                     The READ SECTOR command
  Sat Jul 10 2021  1:15                                                Page 58


  3063                        ;                STA @l IDE_CMD_STAT
  3064                        ;
  3065                        ;                NOP                             ;
                     Wait about 500ns
  3066                        ;                NOP
  3067                        ;                NOP
  3068                        ;                NOP
  3069                        ;
  3070                        ;                JSR IDE_DRV_READY_NOTBUSY       ;
                     Wait for the device to be ready
  3071                        ;                BCC ret_failure                 ;
                     If an error occurred, return it
  3072                        ;.if ( TARGET_SYS == SYS_C256_FMX )
  3073                        ;                setas
  3074                        ;                LDA @l IDE_DATA                 ;
                     Read and toss out one byte from the 8-bit interface
  3075                        ;.endif
  3076                        ;                LDY #0
  3077                        ;                setaxl
  3078                        ;read_loop       LDA @l IDE_DATA_LO              ;
                     Get the word of data from the device
  3079                        ;                STA [BIOS_BUFF_PTR],Y           ;
                     Save it to the buffer
  3080                        ;                INY                             ;
                     Move to the next position
  3081                        ;                INY
  3082                        ;                CPY #512
  3083                        ;                BNE read_loop
  3084                        ;
  3085                        ;                NOP                             ;
                     Wait about 500ns
  3086                        ;                NOP
  3087                        ;                NOP
  3088                        ;                NOP
  3089                        ;
  3090                        ;ret_success     setas
  3091                        ;                LDA #0
  3092                        ;                STA BIOS_STATUS
  3093                        ;                STA @w FDC_ST0
  3094                        ;
  3095                        ;                PLP                             ;
                     Return success
  3096                        ;                PLD
  3097                        ;                PLB
  3098                        ;                PLY
  3099                        ;                SEC
  3100                        ;                RTL
  3101                        ;
  3102                        ;ret_failure     setas
  3103                        ;                LDA @l IDE_ERROR
  3104                        ;                STA @w FDC_ST0
  3105                        ;
  3106                        ;                ; TODO: determine if there was a 
                    timeout
  3107                        ;
  3108                        ;                LDA #BIOS_ERR_READ
  3109                        ;                STA BIOS_STATUS
  3110                        ;
  Sat Jul 10 2021  1:15                                                Page 59


  3111                        ;                PLP
  3112                        ;                PLD
  3113                        ;                PLB
  3114                        ;                PLY
  3115                        ;                CLC
  3116                        ;                RTL
  3117                        ;                .pend
  3118                        ; */
  3119                        ;
  3120                        ;
  3121                        ;	return errorCode;
  3122                        	.line	496
  3123 04:1BCC: A5 09        	lda	<L55+errorCode_1
  3124 04:1BCE: 29 FF 00     	and	#$ff
  3125 04:1BD1: 82 6F FF     	brl	L58
  3126                        ;}
  3127                        	.line	497
  3128                        	.endblock	497
  3129             00000010   L54	equ	16
  3130             00000009   L55	equ	9
  3131 04:1BD4:              	ends
  3132                        	efunc
  3133                        	.endfunc	497,9,16
  3134                        	.line	497
  3135                        ;
  3136                        ;UCHAR k_hd_write_sector(unsigned long offset,LPCH
                    AR sendBuffer)
  3137                        ;{
  3138                        	.line	499
  3139                        	.line	500
  3140                        	IDES04
  3141                        	xdef	~~k_hd_write_sector
  3142                        	func
  3143                        	.function	500
  3144                        ~~k_hd_write_sector:
  3145                        	longa	on
  3146                        	longi	on
  3147 04:1BD4: 3B           	tsc
  3148 04:1BD5: 38           	sec
  3149 04:1BD6: E9 0C 00     	sbc	#L64
  3150 04:1BD9: 1B           	tcs
  3151 04:1BDA: 0B           	phd
  3152 04:1BDB: 5B           	tcd
  3153             00000004   offset_0	set	4
  3154             00000008   sendBuffer_0	set	8
  3155                        	.block	500
  3156                        ;	UCHAR	errorCode = 0;
  3157                        ;	UCHAR	s;
  3158                        ;	UINT	index;
  3159                        ;
  3160                        ;	//k_debug_long("k_hd_write_sector::offset:",offs
                    et);
  3161                        ;	//k_debug_byte_array("k_hd_write_sector::sendBuf
                    fer:",sendBuffer,512);
  3162                        ;
  3163                        ;	k_drive_ready_not_busy();
  3164             00000000   errorCode_1	set	0
  3165             00000001   s_1	set	1
  Sat Jul 10 2021  1:15                                                Page 60


  3166             00000002   index_1	set	2
  3167                        	.sym	errorCode,0,14,1,8
  3168                        	.sym	s,1,14,1,8
  3169                        	.sym	index,2,16,1,16
  3170                        	.sym	offset,4,18,6,32
  3171                        	.sym	sendBuffer,8,142,6,32
  3172 04:1BDC: E2 20        	sep	#$20
  3173                        	longa	off
  3174 04:1BDE: 64 09        	stz	<L65+errorCode_1
  3175 04:1BE0: C2 20        	rep	#$20
  3176                        	longa	on
  3177                        	.line	508
  3178 04:1BE2: 22 EC 18 04  	jsl	~~k_drive_ready_not_busy
  3179                        ;
  3180                        ;	IDE_HEAD[0] = (0x1F6, 0xE0 | (0xE0 << 4) | ((off
                    set >> 24) & 0x0F));//((H32BYTE(offset)) | 0xE0);
  3181                        	.line	510
  3182 04:1BE6: D4 12        	pei	<L64+offset_0+2
  3183 04:1BE8: D4 10        	pei	<L64+offset_0
  3184 04:1BEA: A9 18 00     	lda	#$18
  3185                        	xref	~~~llsr
  3186 04:1BED: 22 xx xx xx  	jsl	~~~llsr
  3187 04:1BF1: 85 01        	sta	<R0
  3188 04:1BF3: 86 03        	stx	<R0+2
  3189 04:1BF5: A5 01        	lda	<R0
  3190 04:1BF7: 29 0F 00     	and	#<$f
  3191 04:1BFA: 85 05        	sta	<R1
  3192 04:1BFC: 64 07        	stz	<R1+2
  3193 04:1BFE: A5 05        	lda	<R1
  3194 04:1C00: 09 E0 0E     	ora	#<$ee0
  3195 04:1C03: 85 01        	sta	<R0
  3196 04:1C05: A5 07        	lda	<R1+2
  3197 04:1C07: 85 03        	sta	<R0+2
  3198 04:1C09: E2 20        	sep	#$20
  3199                        	longa	off
  3200 04:1C0B: A5 01        	lda	<R0
  3201 04:1C0D: 8F 36 E8 AF  	sta	>11528246
  3202 04:1C11: C2 20        	rep	#$20
  3203                        	longa	on
  3204                        ;
  3205                        ;	//k_debug_hex("***k_hd_read_sector:WAIT:",IDE_CM
                    D_STAT[0]);
  3206                        ;	k_drive_ready_not_busy();
  3207                        	.line	513
  3208 04:1C13: 22 EC 18 04  	jsl	~~k_drive_ready_not_busy
  3209                        ;
  3210                        ;	//IDE_FEATURE [0]  = 0;
  3211                        ;	IDE_SECT_CNT[0]  = 1;
  3212                        	.line	516
  3213 04:1C17: E2 20        	sep	#$20
  3214                        	longa	off
  3215 04:1C19: A9 01        	lda	#$1
  3216 04:1C1B: 8F 32 E8 AF  	sta	>11528242
  3217 04:1C1F: C2 20        	rep	#$20
  3218                        	longa	on
  3219                        ;	IDE_SECT_SRT[0]  = L24BYTE(offset);
  3220                        	.line	517
  3221 04:1C21: E2 20        	sep	#$20
  Sat Jul 10 2021  1:15                                                Page 61


  3222                        	longa	off
  3223 04:1C23: A5 10        	lda	<L64+offset_0
  3224 04:1C25: 8F 33 E8 AF  	sta	>11528243
  3225 04:1C29: C2 20        	rep	#$20
  3226                        	longa	on
  3227                        ;	IDE_CLDR_LO [0]  = M24BYTE(offset);
  3228                        	.line	518
  3229 04:1C2B: D4 12        	pei	<L64+offset_0+2
  3230 04:1C2D: D4 10        	pei	<L64+offset_0
  3231 04:1C2F: A9 08 00     	lda	#$8
  3232                        	xref	~~~llsr
  3233 04:1C32: 22 xx xx xx  	jsl	~~~llsr
  3234 04:1C36: 85 01        	sta	<R0
  3235 04:1C38: 86 03        	stx	<R0+2
  3236 04:1C3A: A5 01        	lda	<R0
  3237 04:1C3C: 29 FF 00     	and	#<$ff
  3238 04:1C3F: 85 05        	sta	<R1
  3239 04:1C41: 64 07        	stz	<R1+2
  3240 04:1C43: E2 20        	sep	#$20
  3241                        	longa	off
  3242 04:1C45: A5 05        	lda	<R1
  3243 04:1C47: 8F 34 E8 AF  	sta	>11528244
  3244 04:1C4B: C2 20        	rep	#$20
  3245                        	longa	on
  3246                        ;	IDE_CLDR_HI [0]  = H24BYTE(offset);
  3247                        	.line	519
  3248 04:1C4D: D4 12        	pei	<L64+offset_0+2
  3249 04:1C4F: D4 10        	pei	<L64+offset_0
  3250 04:1C51: A9 10 00     	lda	#$10
  3251                        	xref	~~~llsr
  3252 04:1C54: 22 xx xx xx  	jsl	~~~llsr
  3253 04:1C58: 85 01        	sta	<R0
  3254 04:1C5A: 86 03        	stx	<R0+2
  3255 04:1C5C: A5 01        	lda	<R0
  3256 04:1C5E: 29 FF 00     	and	#<$ff
  3257 04:1C61: 85 05        	sta	<R1
  3258 04:1C63: 64 07        	stz	<R1+2
  3259 04:1C65: E2 20        	sep	#$20
  3260                        	longa	off
  3261 04:1C67: A5 05        	lda	<R1
  3262 04:1C69: 8F 35 E8 AF  	sta	>11528245
  3263 04:1C6D: C2 20        	rep	#$20
  3264                        	longa	on
  3265                        ;
  3266                        ;	IDE_CMD_STAT[0] = IDE_CMD_WRITE_SECTOR;
  3267                        	.line	521
  3268 04:1C6F: E2 20        	sep	#$20
  3269                        	longa	off
  3270 04:1C71: A9 30        	lda	#$30
  3271 04:1C73: 8F 37 E8 AF  	sta	>11528247
  3272 04:1C77: C2 20        	rep	#$20
  3273                        	longa	on
  3274                        ;
  3275                        ;	asm NOP;
  3276                        	.line	523
  3277                        	asmstart
  3278 04:1C79: EA           	NOP
  3279                        	asmend
  Sat Jul 10 2021  1:15                                                Page 62


  3280                        ;	asm NOP;
  3281                        	.line	524
  3282                        	asmstart
  3283 04:1C7A: EA           	NOP
  3284                        	asmend
  3285                        ;	asm NOP;
  3286                        	.line	525
  3287                        	asmstart
  3288 04:1C7B: EA           	NOP
  3289                        	asmend
  3290                        ;	asm NOP;
  3291                        	.line	526
  3292                        	asmstart
  3293 04:1C7C: EA           	NOP
  3294                        	asmend
  3295                        ;	asm NOP;
  3296                        	.line	527
  3297                        	asmstart
  3298 04:1C7D: EA           	NOP
  3299                        	asmend
  3300                        ;
  3301                        ;	if(k_drive_wait_dsc())
  3302                        	.line	529
  3303                        ;		return FR_DISK_ERR;
  3304 04:1C7E: 22 0E 18 04  	jsl	~~k_drive_wait_dsc
  3305 04:1C82: AA           	tax
  3306 04:1C83: D0 03        	bne	L67
  3307 04:1C85: 82 15 00     	brl	L10028
  3308                        L67:
  3309                        	.line	530
  3310 04:1C88: A9 01 00     	lda	#$1
  3311                        L68:
  3312 04:1C8B: A8           	tay
  3313 04:1C8C: A5 0E        	lda	<L64+2
  3314 04:1C8E: 85 16        	sta	<L64+2+8
  3315 04:1C90: A5 0D        	lda	<L64+1
  3316 04:1C92: 85 15        	sta	<L64+1+8
  3317 04:1C94: 2B           	pld
  3318 04:1C95: 3B           	tsc
  3319 04:1C96: 18           	clc
  3320 04:1C97: 69 14 00     	adc	#L64+8
  3321 04:1C9A: 1B           	tcs
  3322 04:1C9B: 98           	tya
  3323 04:1C9C: 6B           	rtl
  3324                        ;
  3325                        ;	k_drive_wait_drq();
  3326                        L10028:
  3327                        	.line	532
  3328 04:1C9D: 22 E8 17 04  	jsl	~~k_drive_wait_drq
  3329                        ;
  3330                        ;
  3331                        ;	if(errorCode == 0)
  3332                        	.line	535
  3333                        ;	{
  3334 04:1CA1: A5 09        	lda	<L65+errorCode_1
  3335 04:1CA3: 29 FF 00     	and	#$ff
  3336 04:1CA6: F0 03        	beq	L69
  3337 04:1CA8: 82 2D 00     	brl	L10029
  Sat Jul 10 2021  1:15                                                Page 63


  3338                        L69:
  3339                        	.line	536
  3340                        ;		for(index = 0;index < 512;index+=2)
  3341                        	.line	537
  3342 04:1CAB: 64 0B        	stz	<L65+index_1
  3343                        L10032:
  3344                        ;		{
  3345                        	.line	538
  3346                        ;			IDE_DATA_LO[0] = sendBuffer[inde
                    x];
  3347                        	.line	539
  3348 04:1CAD: E2 20        	sep	#$20
  3349                        	longa	off
  3350 04:1CAF: A4 0B        	ldy	<L65+index_1
  3351 04:1CB1: B7 14        	lda	[<L64+sendBuffer_0],Y
  3352 04:1CB3: 8F 38 E8 AF  	sta	>11528248
  3353 04:1CB7: C2 20        	rep	#$20
  3354                        	longa	on
  3355                        ;			IDE_DATA_HI[0] = sendBuffer[inde
                    x+1];
  3356                        	.line	540
  3357 04:1CB9: A5 0B        	lda	<L65+index_1
  3358 04:1CBB: 1A           	ina
  3359 04:1CBC: 85 01        	sta	<R0
  3360 04:1CBE: E2 20        	sep	#$20
  3361                        	longa	off
  3362 04:1CC0: A4 01        	ldy	<R0
  3363 04:1CC2: B7 14        	lda	[<L64+sendBuffer_0],Y
  3364 04:1CC4: 8F 39 E8 AF  	sta	>11528249
  3365 04:1CC8: C2 20        	rep	#$20
  3366                        	longa	on
  3367                        ;		}
  3368                        	.line	541
  3369                        L10030:
  3370 04:1CCA: E6 0B        	inc	<L65+index_1
  3371 04:1CCC: E6 0B        	inc	<L65+index_1
  3372 04:1CCE: A5 0B        	lda	<L65+index_1
  3373 04:1CD0: C9 00 02     	cmp	#<$200
  3374 04:1CD3: B0 03        	bcs	L70
  3375 04:1CD5: 82 D5 FF     	brl	L10032
  3376                        L70:
  3377                        L10031:
  3378                        ;	}
  3379                        	.line	542
  3380                        ;
  3381                        ;	return errorCode;
  3382                        L10029:
  3383                        	.line	544
  3384 04:1CD8: A5 09        	lda	<L65+errorCode_1
  3385 04:1CDA: 29 FF 00     	and	#$ff
  3386 04:1CDD: 82 AB FF     	brl	L68
  3387                        ;}
  3388                        	.line	545
  3389                        	.endblock	545
  3390             0000000C   L64	equ	12
  3391             00000009   L65	equ	9
  3392 04:1CE0:              	ends
  3393                        	efunc
  Sat Jul 10 2021  1:15                                                Page 64


  3394                        	.endfunc	545,9,12
  3395                        	.line	545
  3396                        ;
  3397                        ;UCHAR k_hd_initialize(void)
  3398                        ;{
  3399                        	.line	547
  3400                        	.line	548
  3401                        	IDES04
  3402                        	xdef	~~k_hd_initialize
  3403                        	func
  3404                        	.function	548
  3405                        ~~k_hd_initialize:
  3406                        	longa	on
  3407                        	longi	on
  3408 04:1CE0: 3B           	tsc
  3409 04:1CE1: 38           	sec
  3410 04:1CE2: E9 02 00     	sbc	#L71
  3411 04:1CE5: 1B           	tcs
  3412 04:1CE6: 0B           	phd
  3413 04:1CE7: 5B           	tcd
  3414                        	.block	548
  3415                        ;	UCHAR s;
  3416                        ;	UCHAR errorCode;
  3417                        ;
  3418                        ;
  3419                        ;	//DebugOut("***k_hd_initialize\r\n");
  3420                        ;
  3421                        ;	k_drive_ready_not_busy();
  3422             00000000   s_1	set	0
  3423             00000001   errorCode_1	set	1
  3424                        	.sym	s,0,14,1,8
  3425                        	.sym	errorCode,1,14,1,8
  3426                        	.line	555
  3427 04:1CE8: 22 EC 18 04  	jsl	~~k_drive_ready_not_busy
  3428                        ;
  3429                        ;	IDE_CMD_STAT[0] = 0;
  3430                        	.line	557
  3431 04:1CEC: E2 20        	sep	#$20
  3432                        	longa	off
  3433 04:1CEE: A9 00        	lda	#$0
  3434 04:1CF0: 8F 37 E8 AF  	sta	>11528247
  3435 04:1CF4: C2 20        	rep	#$20
  3436                        	longa	on
  3437                        ;
  3438                        ;	k_drive_busy();
  3439                        	.line	559
  3440 04:1CF6: 22 52 19 04  	jsl	~~k_drive_busy
  3441                        ;
  3442                        ;	IDE_HEAD[0] 	= 0xE0;
  3443                        	.line	561
  3444 04:1CFA: E2 20        	sep	#$20
  3445                        	longa	off
  3446 04:1CFC: A9 E0        	lda	#$e0
  3447 04:1CFE: 8F 36 E8 AF  	sta	>11528246
  3448 04:1D02: C2 20        	rep	#$20
  3449                        	longa	on
  3450                        ;	IDE_SECT_CNT[0] = 0x01;
  3451                        	.line	562
  Sat Jul 10 2021  1:15                                                Page 65


  3452 04:1D04: E2 20        	sep	#$20
  3453                        	longa	off
  3454 04:1D06: A9 01        	lda	#$1
  3455 04:1D08: 8F 32 E8 AF  	sta	>11528242
  3456 04:1D0C: C2 20        	rep	#$20
  3457                        	longa	on
  3458                        ;	IDE_CLDR_LO[0]  = 0x00;
  3459                        	.line	563
  3460 04:1D0E: E2 20        	sep	#$20
  3461                        	longa	off
  3462 04:1D10: A9 00        	lda	#$0
  3463 04:1D12: 8F 34 E8 AF  	sta	>11528244
  3464 04:1D16: C2 20        	rep	#$20
  3465                        	longa	on
  3466                        ;	IDE_CLDR_HI[0]  = 0x00;
  3467                        	.line	564
  3468 04:1D18: E2 20        	sep	#$20
  3469                        	longa	off
  3470 04:1D1A: A9 00        	lda	#$0
  3471 04:1D1C: 8F 35 E8 AF  	sta	>11528245
  3472 04:1D20: C2 20        	rep	#$20
  3473                        	longa	on
  3474                        ;	IDE_SECT_SRT[0] = 0x00;
  3475                        	.line	565
  3476 04:1D22: E2 20        	sep	#$20
  3477                        	longa	off
  3478 04:1D24: A9 00        	lda	#$0
  3479 04:1D26: 8F 33 E8 AF  	sta	>11528243
  3480 04:1D2A: C2 20        	rep	#$20
  3481                        	longa	on
  3482                        ;
  3483                        ;	//k_drive_ready_not_busy();
  3484                        ;
  3485                        ;	//k_debug_hex("k_hd_initialize:code:",IDE_CMD_ST
                    AT[0]);
  3486                        ;	k_hd_get_id();
  3487                        	.line	570
  3488 04:1D2C: 22 AA 19 04  	jsl	~~k_hd_get_id
  3489                        ;
  3490                        ;    return TRUE;
  3491                        	.line	572
  3492 04:1D30: A9 01 00     	lda	#$1
  3493                        L74:
  3494 04:1D33: A8           	tay
  3495 04:1D34: 2B           	pld
  3496 04:1D35: 3B           	tsc
  3497 04:1D36: 18           	clc
  3498 04:1D37: 69 02 00     	adc	#L71
  3499 04:1D3A: 1B           	tcs
  3500 04:1D3B: 98           	tya
  3501 04:1D3C: 6B           	rtl
  3502                        ;}
  3503                        	.line	573
  3504                        	.endblock	573
  3505             00000002   L71	equ	2
  3506             00000001   L72	equ	1
  3507 04:1D3D:              	ends
  3508                        	efunc
  Sat Jul 10 2021  1:15                                                Page 66


  3509                        	.endfunc	573,1,2
  3510                        	.line	573
  3511                        ;
  3512                        ;UCHAR k_hd_uninitialize(VOID)
  3513                        ;{
  3514                        	.line	575
  3515                        	.line	576
  3516                        	IDES04
  3517                        	xdef	~~k_hd_uninitialize
  3518                        	func
  3519                        	.function	576
  3520                        ~~k_hd_uninitialize:
  3521                        	longa	on
  3522                        	longi	on
  3523 04:1D3D: 3B           	tsc
  3524 04:1D3E: 38           	sec
  3525 04:1D3F: E9 00 00     	sbc	#L75
  3526 04:1D42: 1B           	tcs
  3527 04:1D43: 0B           	phd
  3528 04:1D44: 5B           	tcd
  3529                        	.block	576
  3530                        ;	return 0;
  3531                        	.line	577
  3532 04:1D45: A9 00 00     	lda	#$0
  3533                        L78:
  3534 04:1D48: A8           	tay
  3535 04:1D49: 2B           	pld
  3536 04:1D4A: 3B           	tsc
  3537 04:1D4B: 18           	clc
  3538 04:1D4C: 69 00 00     	adc	#L75
  3539 04:1D4F: 1B           	tcs
  3540 04:1D50: 98           	tya
  3541 04:1D51: 6B           	rtl
  3542                        ;}
  3543                        	.line	578
  3544                        	.endblock	578
  3545             00000000   L75	equ	0
  3546             00000001   L76	equ	1
  3547 04:1D52:              	ends
  3548                        	efunc
  3549                        	.endfunc	578,1,0
  3550                        	.line	578
  3551                        ;
  3552                        ;
  3553                        ;
  3554                        ;
  3555                        ;/*
  3556                        ;.cpu "65816"
  3557                        ;
  3558                        ;;/// IDENTIFY DEVICE Structure: (T13/1699-D Revis
                    ion 6a)
  3559                        ;IDE_ID .struct
  3560                        ;General_Config        .word $0000
  3561                        ;Obsolete0             .word $0000
  3562                        ;Specific_Config       .word $0000
  3563                        ;Obsolete1             .word $0000
  3564                        ;Retired0              .word $0000
  3565                        ;Retired1              .word $0000
  Sat Jul 10 2021  1:15                                                Page 67


  3566                        ;Obsolete2             .word $0000
  3567                        ;Reserved_CFlash0      .word $0000
  3568                        ;Reserved_CFlash1      .word $0000
  3569                        ;Retired2              .word $0000
  3570                        ;Serial_Number_String  .byte $00, $00, $00, $00, $
                    00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $
                    00, $00, $00, $00
  3571                        ;Retired3              .word $0000, $0000
  3572                        ;Obsolete3             .word $0000
  3573                        ;Firmware_Rev_String   .byte $00, $00, $00, $00, $
                    00, $00, $00, $00
  3574                        ;Model_Number_String   .byte $00, $00, $00, $00, $
                    00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
  3575                        ;                      .byte $00, $00, $00, $00, $
                    00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
  3576                        ;                      .byte $00, $00, $00, $00, $
                    00, $00, $00, $00
  3577                        ;Max_Number_Logic_Sec  .word $0000
  3578                        ;Trusted_Comp_Feature  .word $0000
  3579                        ;Capabilities          .word $0000, $0000
  3580                        ;Obsolete4             .word $0000, $0000
  3581                        ;Free_Fall_Control     .word $0000
  3582                        ;Obsolete5             .word $0000, $0000, $0000, 
                    $0000, $0000
  3583                        ;Reserved0             .word $0000
  3584                        ;Total_Addy_Logic_Sec  .word $0000, $0000
  3585                        ;Obsolete6             .word $0000
  3586                        ;Reserved1             .word $0000, $0000
  3587                        ;Min_Multiword_DMA_Trf .word $0000
  3588                        ;Manu_Recommended_Mult .word $0000
  3589                        ;Min_PIO_Trf           .word $0000      ; Word 67
  3590                        ;Min_PIO_Trf_with_IORD .word $0000      ; Word 68
  3591                        ;Reserved2             .word $0000, $0000
  3592                        ;Reserved3             .word $0000, $0000, $0000, 
                    $0000
  3593                        ;Queue_Dept            .word $0000
  3594                        ;SATA_Capabilities     .word $0000
  3595                        ;Reserved_SATA         .word $0000
  3596                        ;Sup_Feat_SATA         .word $0000
  3597                        ;Sup_Feat_SATA_Enabled .word $0000    ; Word 79
  3598                        ;Major_Version_Number  .word $0000    ; Word 80
  3599                        ;Minor_Version_Number  .word $0000    ; Word 81
  3600                        ;Cmd_And_Features_Sup  .word $0000, $0000, $0000, 
                    $0000, $0000, $0000
  3601                        ;UDMA_Modes            .word $0000
  3602                        ;Reserved4             .word $0000, $0000 ; Word 8
                    9
  3603                        ;Current_APM_Level     .word $0000
  3604                        ;Master_Password_Ident .word $0000
  3605                        ;Hardware_Reset_Result .word $0000
  3606                        ;Current_AAM_Value     .word $0000  ; Word 94
  3607                        ;Stream_Min_Req_Size   .word $0000  ; Word 95
  3608                        ;Stream_Trf_Time_DMA   .word $0000  ; Word 96
  3609                        ;Stream_Access_Lat     .word $0000
  3610                        ;Streaming_Perf_Gran   .word $0000, $0000
  3611                        ;Tot_Num_Add_Logic_Sec .word $0000, $0000, $0000, 
                    $0000
  3612                        ;Streaming_Trf_Time    .word $0000 ; Word 104
  Sat Jul 10 2021  1:15                                                Page 68


  3613                        ;Reserved5             .word $0000 ; Word 105
  3614                        ;.ends
  3615                        ;
  3616                        ;IDE_TEST        .proc
  3617                        ;                PHP
  3618                        ;
  3619                        ;                setal
  3620                        ;                LDA #<>DOS_SECTOR
  3621                        ;                STA @l BIOS_BUFF_PTR
  3622                        ;                LDA #`DOS_SECTOR
  3623                        ;                STA @l BIOS_BUFF_PTR+2
  3624                        ;
  3625                        ;                JSL IDE_IDENTIFY
  3626                        ;                BCS id_ok
  3627                        ;
  3628                        ;                TRACE "Error getting drive identi
                    ty"
  3629                        ;                BRL done
  3630                        ;
  3631                        ;id_ok           TRACE "Found an IDE drive:"
  3632                        ;                TRACE "Model: "
  3633                        ;                setxl
  3634                        ;                setas
  3635                        ;                LDY #40
  3636                        ;                LDX #27*2
  3637                        ;pr_model        LDA DOS_SECTOR+1,X
  3638                        ;                JSL PUTC
  3639                        ;                LDA DOS_SECTOR,X
  3640                        ;                JSL PUTC
  3641                        ;                INX
  3642                        ;                INX
  3643                        ;                DEY
  3644                        ;                DEY
  3645                        ;                BNE pr_model
  3646                        ;
  3647                        ;                TRACE "S/N: "
  3648                        ;                setxl
  3649                        ;                setas
  3650                        ;                LDY #20
  3651                        ;                LDX #10*2
  3652                        ;pr_serial       LDA DOS_SECTOR+1,X
  3653                        ;                JSL PUTC
  3654                        ;                LDA DOS_SECTOR,X
  3655                        ;                JSL PUTC
  3656                        ;                INX
  3657                        ;                INX
  3658                        ;                DEY
  3659                        ;                DEY
  3660                        ;                BNE pr_serial
  3661                        ;                JSL PRINTCR
  3662                        ;
  3663                        ;;                 setaxl
  3664                        ;;                 LDA #1                 ; Set LB
                    A = 1
  3665                        ;;                 STA @l BIOS_LBA
  3666                        ;;                 LDA #0
  3667                        ;;                 STA @l BIOS_LBA+2
  3668                        ;
  Sat Jul 10 2021  1:15                                                Page 69


  3669                        ;;                 LDA #<>DOS_SECTOR
  3670                        ;;                 STA @l BIOS_BUFF_PTR
  3671                        ;;                 LDA #`DOS_SECTOR
  3672                        ;;                 STA @l BIOS_BUFF_PTR+2
  3673                        ;
  3674                        ;;                 LDX #0                  ; Initi
                    alize the block to some recognizable data
  3675                        ;;                 LDA #$5AA5
  3676                        ;; init_loop       STA DOS_SECTOR,X
  3677                        ;;                 INX
  3678                        ;;                 INX
  3679                        ;;                 CPX #512
  3680                        ;;                 BNE init_loop
  3681                        ;
  3682                        ;;                 JSL IDE_PUTBLOCK        ; Attem
                    pt to write the block
  3683                        ;;                 BCS read_sect1
  3684                        ;
  3685                        ;;                 TRACE "Could not write sector #
                    1."
  3686                        ;;                 JSL PRINTCR
  3687                        ;;                 BRA done
  3688                        ;
  3689                        ;read_sect1      setal
  3690                        ;                LDA #0                 ; Set LBA 
                    = 0
  3691                        ;                STA @l BIOS_LBA
  3692                        ;                LDA #0
  3693                        ;                STA @l BIOS_LBA+2
  3694                        ;
  3695                        ;                LDA #<>DOS_BOOT_SECTOR
  3696                        ;                STA @l BIOS_BUFF_PTR
  3697                        ;                LDA #`DOS_BOOT_SECTOR
  3698                        ;                STA @l BIOS_BUFF_PTR+2
  3699                        ;
  3700                        ;                JSL IDE_GETBLOCK        ; Attempt
                     to read the block
  3701                        ;                BCS all_ok
  3702                        ;
  3703                        ;                TRACE "Could not read sector #0."
  3704                        ;                JSL PRINTCR
  3705                        ;                BRA done
  3706                        ;
  3707                        ;all_ok          TRACE "OK"
  3708                        ;                JSL PRINTCR
  3709                        ;
  3710                        ;                BRK
  3711                        ;
  3712                        ;done            PLP
  3713                        ;                RTL
  3714                        ;                .pend
  3715                        ;
  3716                        ;;///
  3717                        ;; the 512Byte Data is Temporary dumped in the sam
                    e Buffer for the SDCard
  3718                        ;;SDOS_BLK_BEGIN @00:0400
  3719                        ;;////////////////////////////////////////////////
                    ////////
  Sat Jul 10 2021  1:15                                                Page 70


  3720                        ;; IDE_INIT
  3721                        ;; Init the HDD
  3722                        ;; Inputs:
  3723                        ;;  None
  3724                        ;; Affects:
  3725                        ;;   None
  3726                        ;;////////////////////////////////////////////////
                    /////////
  3727                        ;IDE_INIT
  3728                        ;             ; setas
  3729                        ;             ; ; Init Drive
  3730                        ;             ; JSR IDE_DRIVE_BSY ; Check to see i
                    f drive is busy
  3731                        ;             ; LDA #$00
  3732                        ;             ; STA IDE_CLDR_HI
  3733                        ;             ; STA IDE_CLDR_LO
  3734                        ;             ; STA IDE_SECT_CNT
  3735                        ;             ; LDA #$01
  3736                        ;             ; STA IDE_SECT_SRT
  3737                        ;             ; LDA #$A0 ; HEAD 0 - Select Master 
                    Drive
  3738                        ;             ; STA IDE_HEAD
  3739                        ;             ; JSR IDE_DRV_READY_NOTBUSY
  3740                        ;             ; RTL
  3741                        ;
  3742                        ;             setas
  3743                        ;              ; Init Drive
  3744                        ;              LDA #$00
  3745                        ;              STA IDE_CMD_STAT
  3746                        ;
  3747                        ;              JSR IDE_DRIVE_BSY ; Check to see if
                     drive is busy
  3748                        ;              LDA #$E0 ; HEAD 0 - Select Master D
                    rive
  3749                        ;              STA IDE_HEAD
  3750                        ;              LDA #$01
  3751                        ;              STA IDE_SECT_CNT
  3752                        ;              LDA #$00
  3753                        ;              STA IDE_SECT_SRT
  3754                        ;              STA IDE_CLDR_LO
  3755                        ;              STA IDE_CLDR_HI
  3756                        ;              JSR IDE_DRV_READY_NOTBUSY
  3757                        ;              RTL
  3758                        ;
  3759                        ;;
  3760                        ;;////////////////////////////////////////////////
                    ////////
  3761                        ;; IDE_DRIVE_BLOCK_BSY
  3762                        ;; Check to see if it the drive is Busy (BSY = 1'b
                    0 == Not Busy)
  3763                        ;; Inputs:
  3764                        ;;  None
  3765                        ;; Affects:
  3766                        ;;   A
  3767                        ;;////////////////////////////////////////////////
                    /////////
  3768                        ;IDE_DRIVE_BSY   .proc
  3769                        ;                PHP
  Sat Jul 10 2021  1:15                                                Page 71


  3770                        ;
  3771                        ;                TRACE "IDE_DRIVE_BSY"
  3772                        ;
  3773                        ;                setas
  3774                        ;loop            LDA @l IDE_CMD_STAT
  3775                        ;                AND #IDE_STAT_BSY         ; Check
                     for RDY Bit, this needs to be 1'b1
  3776                        ;                CMP #IDE_STAT_BSY         ; If no
                    t go read again
  3777                        ;                BEQ loop
  3778                        ;
  3779                        ;                PLP
  3780                        ;                RTS
  3781                        ;                .pend
  3782                        ;
  3783                        ;;////////////////////////////////////////////////
                    ////////
  3784                        ;; IDE_DRIVE_READY
  3785                        ;; Indicates that the drive is capabable to respon
                    d to a command
  3786                        ;; Inputs:
  3787                        ;;  None
  3788                        ;; Affects:
  3789                        ;;   A
  3790                        ;;////////////////////////////////////////////////
                    /////////
  3791                        ;IDE_DRIVE_READY .proc
  3792                        ;                PHP
  3793                        ;
  3794                        ;                TRACE "IDE_DRIVE_READY"
  3795                        ;
  3796                        ;                setas
  3797                        ;loop            LDA @l IDE_CMD_STAT
  3798                        ;                AND #IDE_STAT_DRDY          ; Che
                    ck to see if the Busy Signal is Cleared
  3799                        ;                CMP #IDE_STAT_DRDY          ; if 
                    it is still one, then go back to read again.
  3800                        ;                BNE loop
  3801                        ;
  3802                        ;                PLP
  3803                        ;                RTS
  3804                        ;                .pend
  3805                        ;
  3806                        ;;////////////////////////////////////////////////
                    ////////
  3807                        ;; IDE_DRIVE_READY
  3808                        ;; Indicates that the drive is capabable to respon
                    d to a command
  3809                        ;;
  3810                        ;; Inputs:
  3811                        ;;  None
  3812                        ;;
  3813                        ;; Outputs:
  3814                        ;;   C is set on success, clear if there was an er
                    ror (including a timeout)
  3815                        ;;
  3816                        ;; Affects:
  3817                        ;;   A
  Sat Jul 10 2021  1:15                                                Page 72


  3818                        ;;////////////////////////////////////////////////
                    /////////
  3819                        ;IDE_DRV_READY_NOTBUSY   .proc
  3820                        ;                PHP
  3821                        ;
  3822                        ;                TRACE "IDE_DRV_READY_NOTBUSY"
  3823                        ;
  3824                        ;                setas
  3825                        ;loop            LDA @l IDE_CMD_STAT              
                       ; Check the status
  3826                        ;                ; BIT #IDE_STAT_ERR | IDE_STAT_DF
                         ; If an error occurred...
  3827                        ;                ; BNE ret_failure                
                         ; Try to handle the error
  3828                        ;
  3829                        ;                AND #IDE_STAT_BSY | IDE_STAT_DRDY
  3830                        ;                CMP #IDE_STAT_DRDY               
                       ; Is it READY but not BUSY?
  3831                        ;                BNE loop                         
                       ; No: keep waiting
  3832                        ;
  3833                        ;ret_success     PLP                              
                       ; Return success
  3834                        ;                SEC
  3835                        ;                RTS
  3836                        ;
  3837                        ;ret_failure     STA @l FDC_ST1                   
                       ; Save the status code to FDC_ST1
  3838                        ;                PLP                              
                       ; Return failure
  3839                        ;                CLC
  3840                        ;                RTS
  3841                        ;                .pend
  3842                        ;
  3843                        ;;
  3844                        ;;////////////////////////////////////////////////
                    ////////
  3845                        ;; IDE_NOT_DRQ
  3846                        ;; Indicates that the drive is ready to transfer w
                    ord or byte of data
  3847                        ;; Inputs:
  3848                        ;;  None
  3849                        ;; Affects:
  3850                        ;;   A
  3851                        ;;////////////////////////////////////////////////
                    /////////
  3852                        ;IDE_NOT_DRQ     .proc
  3853                        ;                PHP
  3854                        ;
  3855                        ;                TRACE "IDE_NOT_DRQ"
  3856                        ;
  3857                        ;                setas
  3858                        ;loop            LDA @l IDE_CMD_STAT     ; Get the
                     status
  3859                        ;                AND #IDE_STAT_DRQ
  3860                        ;                CMP #IDE_STAT_DRQ       ; Is the 
                    DRQ bit set?
  3861                        ;                BNE loop                ; No: kee
  Sat Jul 10 2021  1:15                                                Page 73


                    p waiting
  3862                        ;
  3863                        ;                PLP
  3864                        ;                RTS
  3865                        ;                .pend
  3866                        ;
  3867                        ;;
  3868                        ;; IDE_IDENTIFY
  3869                        ;; Attempt to fetch the drive's identification
  3870                        ;;
  3871                        ;; Inputs:
  3872                        ;;   BIOS_BUFF_PTR = the address to save the data
  3873                        ;;
  3874                        ;; Outputs:
  3875                        ;;   BIOS_STATUS = The status of the operation.
  3876                        ;;   FDC_ST0 = the error code from the drive, if C
                     was clear
  3877                        ;;   C = set on success, clear on failure
  3878                        ;;
  3879                        ;IDE_IDENTIFY    .proc
  3880                        ;                PHY
  3881                        ;                PHB
  3882                        ;                PHD
  3883                        ;                PHP
  3884                        ;
  3885                        ;                TRACE "IDE_IDENTIFY"
  3886                        ;
  3887                        ;                setdbr 0
  3888                        ;                setdp SDOS_VARIABLES
  3889                        ;
  3890                        ;                setas
  3891                        ;
  3892                        ;                JSR IDE_DRV_READY_NOTBUSY       ;
                     Wait until the IDE is clear to accept commands
  3893                        ;
  3894                        ;                LDA BIOS_LBA+3                  ;
                     Get the high bits of the LBA
  3895                        ;                AND #$07
  3896                        ;                ORA #%10100000                  ;
                     Select DEV=0 and LBA mode = 1
  3897                        ;                STA @l IDE_HEAD                 ;
                     Ensure master is selected
  3898                        ;
  3899                        ;                JSR IDE_DRV_READY_NOTBUSY       ;
                     And wait for it to take effect
  3900                        ;
  3901                        ;                setas
  3902                        ;                LDA #0                          ;
                     Clear sector count and LBA
  3903                        ;                STA @l IDE_SECT_CNT
  3904                        ;                STA @l IDE_SECT_SRT
  3905                        ;                STA @l IDE_CLDR_LO
  3906                        ;                STA @l IDE_CLDR_HI
  3907                        ;
  3908                        ;                LDA #IDE_CMD_IDENTIFY           ;
                     The IDENTIFY command
  3909                        ;                STA @l IDE_CMD_STAT             ;
                     Check the status
  Sat Jul 10 2021  1:15                                                Page 74


  3910                        ;                BEQ no_media                    ;
                     If 0: there is no drive
  3911                        ;
  3912                        ;                JSR IDE_DRIVE_BSY               ;
                     Othewise: wait for drive to not be busy
  3913                        ;
  3914                        ;                ; LDA @l IDE_CLDR_LO             
                     ; Validate cylinder hi and low are 0
  3915                        ;                ; BNE not_ata
  3916                        ;                ; LDA @l IDE_CLDR_HI
  3917                        ;                ; BNE not_ata                    
                     ; If not: it's not an ATA drive
  3918                        ;
  3919                        ;                JSR IDE_DRV_READY_NOTBUSY       ;
                     Wait for the device to be ready
  3920                        ;                BCC ret_failure                 ;
                     If an error occurred, return it
  3921                        ;
  3922                        ;                setaxl
  3923                        ;                LDY #0
  3924                        ;read_loop       LDA @l IDE_DATA_LO              ;
                     Get the word of data from the device
  3925                        ;                STA [BIOS_BUFF_PTR],Y           ;
                     Save it to the buffer
  3926                        ;                INY                             ;
                     Move to the next position
  3927                        ;                INY
  3928                        ;                CPY #512
  3929                        ;                BNE read_loop
  3930                        ;
  3931                        ;ret_success     setas
  3932                        ;                LDA #0
  3933                        ;                STA BIOS_STATUS
  3934                        ;                STA @w FDC_ST0
  3935                        ;
  3936                        ;                PLP                             ;
                     Return success
  3937                        ;                PLD
  3938                        ;                PLB
  3939                        ;                PLY
  3940                        ;                SEC
  3941                        ;                RTL
  3942                        ;
  3943                        ;no_media        setas                           ;
                     Raise error that there is no media
  3944                        ;                LDA #BIOS_ERR_NOMEDIA
  3945                        ;                BRA pass_failure
  3946                        ;
  3947                        ;not_ata         setas                           ;
                     Raise error that the media is not ATA
  3948                        ;                LDA #BIOS_ERR_NOTATA
  3949                        ;                BRA pass_failure
  3950                        ;
  3951                        ;ret_failure     setas                           ;
                     Raise a general error reading data
  3952                        ;                LDA #BIOS_ERR_READ
  3953                        ;
  3954                        ;pass_failure    STA BIOS_STATUS
  Sat Jul 10 2021  1:15                                                Page 75


  3955                        ;
  3956                        ;                LDA @l IDE_ERROR
  3957                        ;                STA @w FDC_ST0
  3958                        ;
  3959                        ;                ; TODO: determine if there was a 
                    timeout
  3960                        ;
  3961                        ;                PLP
  3962                        ;                PLD
  3963                        ;                PLB
  3964                        ;                PLY
  3965                        ;                CLC
  3966                        ;                RTL
  3967                        ;                .pend
  3968                        ;
  3969                        ;;
  3970                        ;; IDE_GETBLOCK
  3971                        ;; Fetch a sector's worth of data from the IDE dri
                    ve
  3972                        ;;
  3973                        ;; Inputs:
  3974                        ;;   BIOS_LBA = the LBA of the sector (absolute ad
                    dress, not relative to partition)
  3975                        ;;   BIOS_BUFF_PTR = the address to save the data
  3976                        ;;
  3977                        ;; Outputs:
  3978                        ;;   BIOS_STATUS = The status of the operation.
  3979                        ;;   FDC_ST0 = the error code from the drive, if C
                     was clear
  3980                        ;;   C = set on success, clear on failure
  3981                        ;;
  3982                        ;IDE_GETBLOCK    .proc
  3983                        ;                PHY
  3984                        ;                PHB
  3985                        ;                PHD
  3986                        ;                PHP
  3987                        ;
  3988                        ;                TRACE "IDE_GETBLOCK"
  3989                        ;
  3990                        ;                setdbr 0
  3991                        ;                setdp SDOS_VARIABLES
  3992                        ;
  3993                        ;                setas
  3994                        ;
  3995                        ;                JSR IDE_DRV_READY_NOTBUSY       ;
                     Wait until the IDE is clear to accept commands
  3996                        ;
  3997                        ;                LDA BIOS_LBA+3                  ;
                     Get the high bits of the LBA
  3998                        ;                AND #$07
  3999                        ;                ORA #%11100000                  ;
                     Select DEV=0 and LBA mode = 1
  4000                        ;                STA @l IDE_HEAD                 ;
                     Ensure master is selected
  4001                        ;
  4002                        ;                JSR IDE_DRV_READY_NOTBUSY       ;
                     And wait for it to take effect
  4003                        ;
  Sat Jul 10 2021  1:15                                                Page 76


  4004                        ;                setas
  4005                        ;                LDA #1                          ;
                     Set that we want one sector
  4006                        ;                STA @l IDE_SECT_CNT
  4007                        ;
  4008                        ;                LDA BIOS_LBA                    ;
                     Set the lower bits of the LBA
  4009                        ;                STA @l IDE_SECT_SRT
  4010                        ;                LDA BIOS_LBA+1
  4011                        ;                STA @l IDE_CLDR_LO
  4012                        ;                LDA BIOS_LBA+2
  4013                        ;                STA @l IDE_CLDR_HI
  4014                        ;
  4015                        ;                LDA #IDE_CMD_READ_SECTOR        ;
                     The READ SECTOR command
  4016                        ;                STA @l IDE_CMD_STAT
  4017                        ;
  4018                        ;                NOP                             ;
                     Wait about 500ns
  4019                        ;                NOP
  4020                        ;                NOP
  4021                        ;                NOP
  4022                        ;
  4023                        ;                JSR IDE_DRV_READY_NOTBUSY       ;
                     Wait for the device to be ready
  4024                        ;                BCC ret_failure                 ;
                     If an error occurred, return it
  4025                        ;.if ( TARGET_SYS == SYS_C256_FMX )
  4026                        ;                setas
  4027                        ;                LDA @l IDE_DATA                 ;
                     Read and toss out one byte from the 8-bit interface
  4028                        ;.endif
  4029                        ;                LDY #0
  4030                        ;                setaxl
  4031                        ;read_loop       LDA @l IDE_DATA_LO              ;
                     Get the word of data from the device
  4032                        ;                STA [BIOS_BUFF_PTR],Y           ;
                     Save it to the buffer
  4033                        ;                INY                             ;
                     Move to the next position
  4034                        ;                INY
  4035                        ;                CPY #512
  4036                        ;                BNE read_loop
  4037                        ;
  4038                        ;                NOP                             ;
                     Wait about 500ns
  4039                        ;                NOP
  4040                        ;                NOP
  4041                        ;                NOP
  4042                        ;
  4043                        ;ret_success     setas
  4044                        ;                LDA #0
  4045                        ;                STA BIOS_STATUS
  4046                        ;                STA @w FDC_ST0
  4047                        ;
  4048                        ;                PLP                             ;
                     Return success
  4049                        ;                PLD
  Sat Jul 10 2021  1:15                                                Page 77


  4050                        ;                PLB
  4051                        ;                PLY
  4052                        ;                SEC
  4053                        ;                RTL
  4054                        ;
  4055                        ;ret_failure     setas
  4056                        ;                LDA @l IDE_ERROR
  4057                        ;                STA @w FDC_ST0
  4058                        ;
  4059                        ;                ; TODO: determine if there was a 
                    timeout
  4060                        ;
  4061                        ;                LDA #BIOS_ERR_READ
  4062                        ;                STA BIOS_STATUS
  4063                        ;
  4064                        ;                PLP
  4065                        ;                PLD
  4066                        ;                PLB
  4067                        ;                PLY
  4068                        ;                CLC
  4069                        ;                RTL
  4070                        ;                .pend
  4071                        ;
  4072                        ;;
  4073                        ;; IDE_PUTBLOCK
  4074                        ;; Write a sector's worth of data to the IDE drive
  4075                        ;;
  4076                        ;; Inputs:
  4077                        ;;   BIOS_LBA = the LBA of the sector (absolute ad
                    dress, not relative to partition)
  4078                        ;;   BIOS_BUFF_PTR = the address containing the da
                    ta
  4079                        ;;
  4080                        ;; Outputs:
  4081                        ;;   BIOS_STATUS = The status of the operation.
  4082                        ;;   FDC_ST0 = the error code from the drive, if C
                     was clear
  4083                        ;;   C = set on success, clear on failure
  4084                        ;;
  4085                        ;IDE_PUTBLOCK    .proc
  4086                        ;                PHY
  4087                        ;                PHB
  4088                        ;                PHD
  4089                        ;                PHP
  4090                        ;
  4091                        ;                TRACE "IDE_PUTBLOCK"
  4092                        ;
  4093                        ;                setdbr 0
  4094                        ;                setdp SDOS_VARIABLES
  4095                        ;
  4096                        ;                setas
  4097                        ;
  4098                        ;                JSR IDE_DRV_READY_NOTBUSY       ;
                     Wait until the IDE is clear to accept commands
  4099                        ;
  4100                        ;                LDA BIOS_LBA+3                  ;
                     Get the high bits of the LBA
  4101                        ;                AND #$07
  Sat Jul 10 2021  1:15                                                Page 78


  4102                        ;                ORA #%11100000                  ;
                     Select DEV=0 and LBA mode = 1
  4103                        ;                STA @l IDE_HEAD                 ;
                     Ensure master is selected
  4104                        ;
  4105                        ;                JSR IDE_DRV_READY_NOTBUSY       ;
                     And wait for it to take effect
  4106                        ;
  4107                        ;                setas
  4108                        ;                LDA #1                          ;
                     Set that we want one sector
  4109                        ;                STA @l IDE_SECT_CNT
  4110                        ;
  4111                        ;                LDA BIOS_LBA                    ;
                     Set the lower bits of the LBA
  4112                        ;                STA @l IDE_SECT_SRT
  4113                        ;                LDA BIOS_LBA+1
  4114                        ;                STA @l IDE_CLDR_LO
  4115                        ;                LDA BIOS_LBA+2
  4116                        ;                STA @l IDE_CLDR_HI
  4117                        ;
  4118                        ;                LDA #IDE_CMD_WRITE_SECTOR       ;
                     The READ SECTOR command
  4119                        ;                STA @l IDE_CMD_STAT
  4120                        ;
  4121                        ;                NOP                             ;
                     Wait about 500ns
  4122                        ;                NOP
  4123                        ;                NOP
  4124                        ;                NOP
  4125                        ;
  4126                        ;                JSR IDE_DRV_READY_NOTBUSY       ;
                     Wait for the device to be ready
  4127                        ;                BCC ret_failure                 ;
                     If an error occurred, return it
  4128                        ;
  4129                        ;                setaxl
  4130                        ;                LDY #0
  4131                        ;read_loop       LDA [BIOS_BUFF_PTR],Y           ;
                     Get the word from the buffer
  4132                        ;                STA @l IDE_DATA_LO              ;
                     Save the word to the device
  4133                        ;                INY                             ;
                     Move to the next position
  4134                        ;                INY
  4135                        ;                CPY #512
  4136                        ;                BNE read_loop
  4137                        ;
  4138                        ;                NOP                             ;
                     Wait about 500ns
  4139                        ;                NOP
  4140                        ;                NOP
  4141                        ;                NOP
  4142                        ;
  4143                        ;                JSR IDE_DRV_READY_NOTBUSY       ;
                     Wait for the device to be ready
  4144                        ;                BCC ret_failure                 ;
                     If an error occurred, return it
  Sat Jul 10 2021  1:15                                                Page 79


  4145                        ;
  4146                        ;                NOP                             ;
                     Wait about 500ns
  4147                        ;                NOP
  4148                        ;                NOP
  4149                        ;                NOP
  4150                        ;
  4151                        ;                LDA @l IDE_CMD_STAT             ;
                     Check the status
  4152                        ;                BIT #IDE_STAT_ERR | IDE_STAT_DF
  4153                        ;                BNE ret_failure                 ;
                     If error: return failure
  4154                        ;
  4155                        ;ret_success     setas
  4156                        ;                LDA #0
  4157                        ;                STA BIOS_STATUS
  4158                        ;                STA @w FDC_ST0
  4159                        ;
  4160                        ;                PLP                             ;
                     Return success
  4161                        ;                PLD
  4162                        ;                PLB
  4163                        ;                PLY
  4164                        ;                SEC
  4165                        ;                RTL
  4166                        ;
  4167                        ;ret_failure     NOP                             ;
                     Wait about 500ns
  4168                        ;                NOP
  4169                        ;                NOP
  4170                        ;                NOP
  4171                        ;
  4172                        ;                setas
  4173                        ;                LDA @l IDE_ERROR
  4174                        ;                BRA save_error
  4175                        ;
  4176                        ;                NOP
  4177                        ;                NOP
  4178                        ;                NOP
  4179                        ;                NOP
  4180                        ;
  4181                        ;                LDA @l IDE_ERROR
  4182                        ;save_error      STA @w FDC_ST0
  4183                        ;
  4184                        ;                ; TODO: determine if there was a 
                    timeout
  4185                        ;
  4186                        ;                LDA #BIOS_ERR_WRITE
  4187                        ;                STA BIOS_STATUS
  4188                        ;
  4189                        ;                PLP
  4190                        ;                PLD
  4191                        ;                PLB
  4192                        ;                PLY
  4193                        ;                CLC
  4194                        ;                RTL
  4195                        ;                .pend
  4196                        ; */
  Sat Jul 10 2021  1:15                                                Page 80


  4197                        ;
  4198                        	.line	1224
  4199                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\drivers\DRIVER_FMXIDE.c",575
  4200                        	xref	~~k_debug_string
  4201                        	udata
  4202                        ~~szIndentity
  4203 00:0000:              	ds	512
  4204 00:0200:              	ends
  4205                        	.sym	~~k_hd_get_id,~~k_hd_get_id,80,2,0
  4206                        	.sym	~~k_hd_diagnostic,~~k_hd_diagnostic,65,2
                    ,0
  4207                        	.sym	~~k_drive_busy,~~k_drive_busy,65,3,0
  4208                        	.sym	~~k_drive_ready_not_busy,~~k_drive_ready
                    _not_busy,80,3,0
  4209                        	.sym	~~k_drive_not_busy_or_drq,~~k_drive_not_
                    busy_or_drq,80,3,0
  4210                        	.sym	~~k_drive_ready,~~k_drive_ready,65,3,0
  4211                        	.sym	~~k_drive_wait_dsc,~~k_drive_wait_dsc,80
                    ,3,0
  4212                        	.sym	~~k_drive_wait_drq,~~k_drive_wait_drq,65
                    ,3,0
  4213                        	.sym	~~f_get_driver,~~f_get_driver,1098,3,32,
                    55
  4214                        	.sym	~~DEVICE_HD,~~DEVICE_HD,138,2,32,55
  4215                        	.sym	~~DRIVER_FMXIDE,~~DRIVER_FMXIDE,10,3,808
                    ,56
  4216                        	.sym	~~k_hd_send_command,~~k_hd_send_command,
                    78,2,0
  4217                        	.sym	~~k_hd_write_sector,~~k_hd_write_sector,
                    78,2,0
  4218                        	.sym	~~k_hd_read_sector,~~k_hd_read_sector,78
                    ,2,0
  4219                        	.sym	~~k_hd_uninitialize,~~k_hd_uninitialize,
                    78,2,0
  4220                        	.sym	~~k_hd_initialize,~~k_hd_initialize,78,2
                    ,0
  4221                        	.sym	~~_k_driver_base,~~_k_driver_base,129,3,
                    32
  4222                        	.sym	~~szIndentity,~~szIndentity,110,3,0,512
  4223                        	.sym	ide_private_data,0,10,14,8,126
  4224                        	.sym	PDOSHANDLE,0,138,14,32,124
  4225                        	.sym	DOSHANDLE,0,10,14,80,124
  4226                        	.sym	PFXDOSDEVICE,0,138,14,32,122
  4227                        	.sym	FXDOSDEVICE,0,10,14,5744,122
  4228                        	.sym	DOSINITDEVICE,0,641,14,32
  4229                        	.sym	DOSSECTORWRITER,0,654,14,32
  4230                        	.sym	DOSSECTORREADER,0,654,14,32
  4231                        	.sym	PIDENTIFY_DEVICE_DATA,0,138,14,32,121
  4232                        	.sym	IDENTIFY_DEVICE_DATA,0,10,14,4096,121
  4233                        	.sym	PIDSECTOR,0,138,14,32,98
  4234                        	.sym	IDSECTOR,0,10,14,2048,98
  4235                        	.sym	PLFN,0,138,14,32,97
  4236                        	.sym	LFN,0,10,14,256,97
  4237                        	.sym	PFAT16ENTRYLONG,0,138,14,32,96
  4238                        	.sym	FAT16ENTRYLONG,0,10,14,288,96
  4239                        	.sym	PFAT16ENTRY,0,138,14,32,95
  4240                        	.sym	FAT16ENTRY,0,10,14,256,95
  Sat Jul 10 2021  1:15                                                Page 81


  4241                        	.sym	Fat16BootSector,0,10,14,4096,94
  4242                        	.sym	PPARTITIONTABLE,0,138,14,32,93
  4243                        	.sym	PARTITIONTABLE,0,10,14,128,93
  4244                        	.sym	PFATBOOTSECTOR,0,138,14,32,92
  4245                        	.sym	FATBOOTSECTOR,0,10,14,928,92
  4246                        	.sym	fat_BS_t,0,10,14,688,91
  4247                        	.sym	fat_extBS_16_t,0,10,14,192,90
  4248                        	.sym	PFAT32EXT,0,138,14,32,89
  4249                        	.sym	fat_extBS_32_t,0,10,14,416,89
  4250                        	.sym	P_FX_FAT_DIR_INFO,0,138,14,32,88
  4251                        	.sym	FX_FAT_DIR_INFO,0,10,14,256,88
  4252                        	.sym	PFILEINFO,0,138,14,32,87
  4253                        	.sym	FILEINFO,0,10,14,136,87
  4254                        	.sym	PDISKINFO,0,138,14,32,86
  4255                        	.sym	DISKINFO,0,10,14,416,86
  4256                        	.sym	PDIRENTRY,0,138,14,32,85
  4257                        	.sym	DIRENTRY,0,10,14,256,85
  4258                        	.sym	DRESULT,0,5,14,16
  4259                        	.sym	DSTATUS,0,14,14,8
  4260                        	.sym	FRESULT,0,5,14,16
  4261                        	.sym	MKFS_PARM,0,10,14,80,84
  4262                        	.sym	FILINFO,0,10,14,2224,83
  4263                        	.sym	DIR,0,10,14,416,82
  4264                        	.sym	FIL,0,10,14,4400,81
  4265                        	.sym	FFOBJID,0,10,14,128,80
  4266                        	.sym	FATFS,0,10,14,4504,79
  4267                        	.sym	LBA_t,0,18,14,32
  4268                        	.sym	FSIZE_t,0,18,14,32
  4269                        	.sym	TCHAR,0,14,14,8
  4270                        	.sym	PCOMMANDARGS,0,138,14,32,78
  4271                        	.sym	COMMANDARGS,0,10,14,64,78
  4272                        	.sym	PTOKENIZESTATE,0,133,14,32
  4273                        	.sym	TOKENIZESTATE,0,5,14,16
  4274                        	.sym	PTOKEN,0,138,14,32,77
  4275                        	.sym	TOKEN,0,10,14,64,77
  4276                        	.sym	PTOKENTYPE,0,133,14,32
  4277                        	.sym	TOKENTYPE,0,5,14,16
  4278                        	.sym	FXCommandHandler,0,656,14,32
  4279                        	.sym	PCONSOLECTX,0,138,14,32,76
  4280                        	.sym	CONSOLECTX,0,10,14,1144,76
  4281                        	.sym	PSPINNERCTX,0,138,14,32,75
  4282                        	.sym	SPINNERCTX,0,10,14,48,75
  4283                        	.sym	HCLIP,0,138,14,32,74
  4284                        	.sym	PCLIPBOARD_DATA,0,138,14,32,74
  4285                        	.sym	CLIPBOARD_DATA,0,10,14,168,74
  4286                        	.sym	PEVENTMANAGER,0,138,14,32,73
  4287                        	.sym	EVENTMANAGER,0,10,14,192,73
  4288                        	.sym	EV_RUN,0,656,14,32
  4289                        	.sym	EV_QUERY_METRIC,0,656,14,32
  4290                        	.sym	EV_CONFIGURE,0,656,14,32
  4291                        	.sym	EV_UNINIT,0,641,14,32
  4292                        	.sym	EV_INIT,0,8833,14,32
  4293                        	.sym	PMOUSE_MSG_STATE,0,138,14,32,72
  4294                        	.sym	MOUSE_MSG_STATE,0,10,14,184,72
  4295                        	.sym	PFXEVENTPROCESS,0,138,14,32,71
  4296                        	.sym	FXEVENTPROCESS,0,10,14,64,71
  4297                        	.sym	PMARSHALDATA,0,139,14,32,70
  4298                        	.sym	MARSHALDATA,0,11,14,32,70
  Sat Jul 10 2021  1:15                                                Page 82


  4299                        	.sym	FXIDLEPROCESS,0,641,14,32
  4300                        	.sym	FXEventProc,0,641,14,32
  4301                        	.sym	PMOUSEMSGDATA,0,138,14,32,69
  4302                        	.sym	MOUSEMSGDATA,0,10,14,64,69
  4303                        	.sym	MSGIRQ,0,5,14,16
  4304                        	.sym	MAINLOOPARGS,0,10,14,16,68
  4305                        	.sym	PEACHCHILD_MSG,0,138,14,32,67
  4306                        	.sym	EACHCHILD_MSG,0,10,14,64,67
  4307                        	.sym	PMSGBOX_DATA,0,138,14,32,66
  4308                        	.sym	MSGBOX_DATA,0,10,14,96,66
  4309                        	.sym	PDESKTOP_DATA,0,138,14,32,65
  4310                        	.sym	DESKTOP_DATA,0,10,14,64,65
  4311                        	.sym	PWINDOWMANAGER,0,138,14,32,64
  4312                        	.sym	WINDOWMANAGER,0,10,14,160,64
  4313                        	.sym	WM_DOPROCS,0,641,14,32
  4314                        	.sym	WM_QUERY_METRIC,0,656,14,32
  4315                        	.sym	WM_CONFIGURE,0,656,14,32
  4316                        	.sym	WM_HANDLE_EVENT,0,8833,14,32
  4317                        	.sym	WM_EVENTS,0,641,14,32
  4318                        	.sym	PCUR_PALETTE_MAP,0,138,14,32,63
  4319                        	.sym	CUR_PALETTE_MAP,0,10,14,400,63
  4320                        	.sym	PCLICKDETECTED,0,138,14,32,62
  4321                        	.sym	CLICKDETECTED,0,10,14,64,62
  4322                        	.sym	OBJECTCLICKED,0,641,14,32
  4323                        	.sym	PIPCPORT,0,138,14,32,61
  4324                        	.sym	IPCPORT,0,10,14,144,61
  4325                        	.sym	MemoryCallback,0,641,14,32
  4326                        	.sym	PFXMEMORYMAP,0,138,14,32,60
  4327                        	.sym	FXMEMORYMAP,0,10,14,2072,60
  4328                        	.sym	UMM_HEAP_INFO,0,10,14,256,59
  4329                        	.sym	PEXECUTIVE,0,138,14,32,58
  4330                        	.sym	EXECUTIVE,0,10,14,128,58
  4331                        	.sym	EX_QUERY_METRIC,0,656,14,32
  4332                        	.sym	EX_CONFIGURE,0,656,14,32
  4333                        	.sym	EX_UNINIT,0,641,14,32
  4334                        	.sym	EX_INIT,0,8833,14,32
  4335                        	.sym	PFXSTRING,0,138,14,32,57
  4336                        	.sym	FXSTRING,0,10,14,64,57
  4337                        	.sym	DEVICEDRIVER_COMMAND,0,656,14,32
  4338                        	.sym	DEVICEDRIVER_UNLOAD,0,654,14,32
  4339                        	.sym	DEVICEDRIVER_WRITE,0,656,14,32
  4340                        	.sym	DEVICEDRIVER_READ,0,656,14,32
  4341                        	.sym	DEVICEDRIVER_LOAD,0,654,14,32
  4342                        	.sym	DEVICEDRIVER_IRQ,0,654,14,32
  4343                        	.sym	PFX_BLOCK_DEVICE_DRIVER,0,138,14,32,56
  4344                        	.sym	FX_BLOCK_DEVICE_DRIVER,0,10,14,808,56
  4345                        	.sym	GETDRIVERDEF,0,8842,14,32,55
  4346                        	.sym	PFX_DEVICE_DRIVER,0,138,14,32,55
  4347                        	.sym	FX_DEVICE_DRIVER,0,10,14,776,55
  4348                        	.sym	~~k_debug_string,~~k_debug_string,65,18,
                    0
  4349                        	.sym	PSEGMENTHEADER,0,138,14,32,54
  4350                        	.sym	SEGMENTHEADER,0,10,14,160,54
  4351                        	.sym	PDEBUGBYTEBITS,0,138,14,32,53
  4352                        	.sym	DEBUGBYTEBITS,0,10,14,8,53
  4353                        	.sym	PFXENVIRONMENT,0,138,14,32,52
  4354                        	.sym	FXENVIRONMENT,0,10,14,96,52
  4355                        	.sym	PFXZEROPAGE,0,138,14,32,51
  Sat Jul 10 2021  1:15                                                Page 83


  4356                        	.sym	FXZEROPAGE,0,10,14,824,51
  4357                        	.sym	KERNELTRAPCALL,0,641,14,32
  4358                        	.sym	PFXKERNEL_API_CALLTABLE,0,138,14,32,50
  4359                        	.sym	FXKERNEL_API_CALLTABLE,0,10,14,8192,50
  4360                        	.sym	FOREACHNODEUNTIL,0,654,14,32
  4361                        	.sym	FOREACHNODE,0,641,14,32
  4362                        	.sym	PFXRFHEADER_FONT,0,138,14,32,49
  4363                        	.sym	FXRFHEADER_FONT,0,10,14,144,49
  4364                        	.sym	PFXRFHEADER,0,138,14,32,48
  4365                        	.sym	FXRFHEADER,0,10,14,72,48
  4366                        	.sym	PFXCOMBUFFER,0,138,14,32,47
  4367                        	.sym	FXCOMBUFFER,0,10,14,2080,47
  4368                        	.sym	PSUBMENULIST,0,138,14,32,46
  4369                        	.sym	SUBMENULIST,0,10,14,40,46
  4370                        	.sym	HSUBMENU,0,7,14,32
  4371                        	.sym	PSUBMENU,0,138,14,32,45
  4372                        	.sym	SUBMENU,0,10,14,64,45
  4373                        	.sym	MenuAction,0,641,14,32
  4374                        	.sym	PMENUANCHOR,0,138,14,32,44
  4375                        	.sym	MENUANCHOR,0,10,14,272,44
  4376                        	.sym	PMSGBOX,0,138,14,32,43
  4377                        	.sym	MSGBOX,0,10,14,144,43
  4378                        	.sym	PTEXTBOX,0,138,14,32,42
  4379                        	.sym	TEXTBOX,0,10,14,144,42
  4380                        	.sym	PLISTBOX,0,138,14,32,41
  4381                        	.sym	LISTBOX,0,10,14,240,41
  4382                        	.sym	PSCROLLBAR,0,138,14,32,40
  4383                        	.sym	SCROLLBAR,0,10,14,240,40
  4384                        	.sym	PBUTTON,0,138,14,32,39
  4385                        	.sym	BUTTON,0,10,14,96,39
  4386                        	.sym	PMENUDROPDOWNDATA,0,138,14,32,38
  4387                        	.sym	MENUDROPDOWNDATA,0,10,14,5152,38
  4388                        	.sym	PMENUTAG,0,138,14,32,37
  4389                        	.sym	MENUTAG,0,10,14,160,37
  4390                        	.sym	PMENU,0,138,14,32,36
  4391                        	.sym	MENU,0,10,14,280,36
  4392                        	.sym	HMENURESOURCE,0,129,14,32
  4393                        	.sym	FONTMETRIC,0,10,14,32,35
  4394                        	.sym	TITLE,0,142,14,32
  4395                        	.sym	PHANDLE,0,1153,14,32
  4396                        	.sym	HANDLE,0,129,14,32
  4397                        	.sym	PWINDOWEX,0,138,14,32,34
  4398                        	.sym	WINDOWEX,0,10,14,3880,34
  4399                        	.sym	PWINDOW,0,138,14,32,33
  4400                        	.sym	WINDOW,0,10,14,3904,33
  4401                        	.sym	PDRAGDATA,0,138,14,32,32
  4402                        	.sym	DRAGDATA,0,10,14,216,32
  4403                        	.sym	PNCCLICKABLE,0,138,14,32,31
  4404                        	.sym	NCCLICKABLE,0,10,14,136,31
  4405                        	.sym	HCLICKABLE,0,7,14,32
  4406                        	.sym	PCLICKABLE,0,138,14,32,30
  4407                        	.sym	CLICKABLE,0,10,14,152,30
  4408                        	.sym	PWNDCLASS,0,138,14,32,29
  4409                        	.sym	WNDCLASS,0,10,14,272,29
  4410                        	.sym	HBRUSH,0,129,14,32
  4411                        	.sym	HCURSOR,0,129,14,32
  4412                        	.sym	HICON,0,129,14,32
  4413                        	.sym	HINSTANCE,0,129,14,32
  Sat Jul 10 2021  1:15                                                Page 84


  4414                        	.sym	FXWndProc,0,654,14,32
  4415                        	.sym	PDRECT,0,138,14,32,28
  4416                        	.sym	DRECT,0,10,14,112,28
  4417                        	.sym	PRECTP,0,138,14,32,27
  4418                        	.sym	RECTP,0,10,14,96,27
  4419                        	.sym	PRECT,0,138,14,32,26
  4420                        	.sym	RECT,0,10,14,112,26
  4421                        	.sym	PPOINT,0,138,14,32,25
  4422                        	.sym	POINT,0,10,14,32,25
  4423                        	.sym	PFXPROPERTY,0,138,14,32,23
  4424                        	.sym	FXPROPERTY,0,10,14,384,23
  4425                        	.sym	PKEYSTATE,0,138,14,32,22
  4426                        	.sym	KEYSTATE,0,10,14,112,22
  4427                        	.sym	SCANCODE,0,14,14,8
  4428                        	.sym	KEYCODE,0,16,14,16
  4429                        	.sym	PFXPROCESSMESSAGE,0,138,14,32,21
  4430                        	.sym	FXPROCESSMESSAGE,0,10,14,112,21
  4431                        	.sym	PFXPROCESS,0,138,14,32,20
  4432                        	.sym	FXPROCESS,0,10,14,800,20
  4433                        	.sym	PDESKTOP_CONTROL,0,138,14,32,19
  4434                        	.sym	DESKTOP_CONTROL,0,10,14,392,19
  4435                        	.sym	PCONSOLE_CONTROL,0,138,14,32,18
  4436                        	.sym	CONSOLE_CONTROL,0,10,14,448,18
  4437                        	.sym	FXProcessProc,0,641,14,32
  4438                        	.sym	PFXCMDMESSAGE,0,138,14,32,17
  4439                        	.sym	FXCMDMESSAGE,0,10,14,304,17
  4440                        	.sym	PFXOSMESSAGE,0,138,14,32,16
  4441                        	.sym	FXOSMESSAGE,0,10,14,304,16
  4442                        	.sym	PINT_REGS,0,138,14,32,15
  4443                        	.sym	INT_REGS,0,10,14,104,15
  4444                        	.sym	TASK_STACK,0,10,14,32,14
  4445                        	.sym	TASK,0,10,14,48,13
  4446                        	.sym	PIRQDATA,0,138,14,32,12
  4447                        	.sym	IRQDATA,0,10,14,48,12
  4448                        	.sym	HMENU,0,129,14,32
  4449                        	.sym	HWND,0,129,14,32
  4450                        	.sym	MSGDATA,0,14,14,8
  4451                        	.sym	MSGDEST,0,18,14,32
  4452                        	.sym	MSGSRC,0,18,14,32
  4453                        	.sym	MSGTYPE,0,16,14,16
  4454                        	.sym	PROCESS_RESOURCE_LIST,0,138,14,32,6
  4455                        	.sym	PROCESS_TLS_LIST,0,138,14,32,6
  4456                        	.sym	SEMAPHORE_LIST,0,138,14,32,6
  4457                        	.sym	FILE_BLOCK_LIST,0,138,14,32,6
  4458                        	.sym	FILE_PATH_LIST,0,138,14,32,6
  4459                        	.sym	PROCEDURE_LIST,0,138,14,32,6
  4460                        	.sym	FILE_HANDLE,0,138,14,32,11
  4461                        	.sym	FILE_BLOCK,0,10,14,552,11
  4462                        	.sym	SEMAPHORE,0,10,14,16,10
  4463                        	.sym	PPROCESS_SIGNAL,0,138,14,32,9
  4464                        	.sym	PROCESS_SIGNAL,0,10,14,16,9
  4465                        	.sym	KRESULT,0,18,14,32
  4466                        	.sym	PKERNEL_ERROR,0,138,14,32,8
  4467                        	.sym	KERNEL_ERROR,0,10,14,32,8
  4468                        	.sym	PROCESS_STATUS,0,16,14,16
  4469                        	.sym	FILE_PATH_NAME,0,142,14,32
  4470                        	.sym	PROCESS_RESOURCE,0,129,14,32
  4471                        	.sym	PROCESS_TLS,0,129,14,32
  Sat Jul 10 2021  1:15                                                Page 85


  4472                        	.sym	PROCESS_CTX,0,129,14,32
  4473                        	.sym	USERID,0,16,14,16
  4474                        	.sym	PROCESS_ID,0,18,14,32
  4475                        	.sym	PROCESS_BANK,0,14,14,8
  4476                        	.sym	PFXQUEUE,0,138,14,32,7
  4477                        	.sym	FXQUEUE,0,10,14,80,7
  4478                        	.sym	PFXNODELIST,0,138,14,32,6
  4479                        	.sym	FXNODELIST,0,10,14,96,6
  4480                        	.sym	NodeListDeallocator,0,641,14,32
  4481                        	.sym	PFXNODE,0,138,14,32,5
  4482                        	.sym	FXNODE,0,10,14,384,5
  4483                        	.sym	PBYTEBITS,0,138,14,32,4
  4484                        	.sym	BYTEBITS,0,10,14,8,4
  4485                        	.sym	HRESULT,0,18,14,32
  4486                        	.sym	LPWCHAR,0,144,14,32
  4487                        	.sym	WCHAR,0,16,14,16
  4488                        	.sym	HCOLOR,0,129,14,32
  4489                        	.sym	HFONT,0,129,14,32
  4490                        	.sym	HDC,0,129,14,32
  4491                        	.sym	HPOINTER,0,129,14,32
  4492                        	.sym	uint32_t,0,18,14,32
  4493                        	.sym	uint8_t,0,14,14,8
  4494                        	.sym	LPBOOL,0,142,14,32
  4495                        	.sym	BOOL,0,14,14,8
  4496                        	.sym	DWORD,0,18,14,32
  4497                        	.sym	ULONG,0,18,14,32
  4498                        	.sym	LPLONG,0,135,14,32
  4499                        	.sym	LONG,0,7,14,32
  4500                        	.sym	PUINT,0,144,14,32
  4501                        	.sym	USHORT,0,16,14,16
  4502                        	.sym	UINT,0,16,14,16
  4503                        	.sym	INT,0,5,14,16
  4504                        	.sym	WORD,0,5,14,16
  4505                        	.sym	PBYTE,0,142,14,32
  4506                        	.sym	BYTE,0,14,14,8
  4507                        	.sym	IOPORT,0,142,14,32
  4508                        	.sym	PUCHAR,0,142,14,32
  4509                        	.sym	UCHAR,0,14,14,8
  4510                        	.sym	LPWCSTR,0,142,14,32
  4511                        	.sym	LPCSTR,0,142,14,32
  4512                        	.sym	LPSTR,0,142,14,32
  4513                        	.sym	LPCHAR,0,142,14,32
  4514                        	.sym	CHAR,0,14,14,8
  4515                        	.sym	LPVOID,0,129,14,32
  4516                        	.sym	VOID,0,1,14,32
  4517                        	.sym	Boolean_T,0,5,14,16
  4518                        	.sym	ldiv_t,0,10,14,64,2
  4519                        	.sym	div_t,0,10,14,32,1
  4520                        	.sym	wctype_t,0,16,14,16
  4521                        	.sym	wint_t,0,16,14,16
  4522                        	.sym	wchar_t,0,14,14,8
  4523                        	.sym	ptrdiff_t,0,7,14,32
  4524                        	.sym	size_t,0,16,14,16
  4525                        	end


      Lines assembled: 4525
      Errors: 0
  Sat Jul 10 2021  1:15                                                Page 86


