  Mon Aug  9 2021 16:52                                                Page 1


                     ***************************************
                     **      WDC 65C816 Macro Assembler   **
                     **                                   **
                     **     Version 3.49.1- Feb  6 2006    **
                     ***************************************

     1                        ;:ts=8
     2             00000001   R0	equ	1
     3             00000005   R1	equ	5
     4             00000009   R2	equ	9
     5             0000000D   R3	equ	13
     6                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\drivers\DRIVER_FMXIDE.c",0
     7                        ;#include "fxos.h"
     8                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxos.h",0
     9                        	.file	"G:\devtools\WDCTools\wdc\Tools\include\
                    stdlib.h",0
    10                        	.file	"G:\devtools\WDCTools\wdc\Tools\include\
                    stddef.h",0
    11                        	.line	88
    12                        	.file	"G:\devtools\WDCTools\wdc\Tools\include\
                    stdlib.h",43
    13                        	.stag	fake1_,32,1
    14                        	.member	quot,0,5,8,16
    15                        	.member	rem,16,5,8,16
    16                        	.eos
    17                        	.stag	fake2_,64,2
    18                        	.member	quot,0,7,8,32
    19                        	.member	rem,32,7,8,32
    20                        	.eos
    21                        	.stag	int_sqrt,32,3
    22                        	.member	sqrt,0,16,8,16
    23                        	.member	frac,16,16,8,16
    24                        	.eos
    25                        	.line	205
    26                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxos.h",4
    27                        	.file	"G:\devtools\WDCTools\wdc\Tools\include\
                    string.h",0
    28                        	.line	134
    29                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxos.h",5
    30                        	.file	"G:\devtools\WDCTools\wdc\Tools\include\
                    ctype.h",0
    31                        	.line	103
    32                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxos.h",6
    33                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxtypes.h",0
    34                        	.stag	_fx_bytebits,8,4
    35                        	.member	b7,0,14,17,1
    36                        	.member	b6,1,14,17,1
    37                        	.member	b5,2,14,17,1
    38                        	.member	b4,3,14,17,1
    39                        	.member	b3,4,14,17,1
    40                        	.member	b2,5,14,17,1
    41                        	.member	b1,6,14,17,1
  Mon Aug  9 2021 16:52                                                Page 2


    42                        	.member	b0,7,14,17,1
    43                        	.eos
    44                        	.stag	_fx_node,384,5
    45                        	.member	type,0,14,8,8
    46                        	.member	Reserved0,8,14,8,8
    47                        	.member	data,16,129,8,32
    48                        	.member	last,48,138,8,32,5
    49                        	.member	next,80,138,8,32,5
    50                        	.member	name,112,110,8,0,32
    51                        	.member	Reserved1,368,16,8,16
    52                        	.eos
    53                        	.stag	_fx_nodelist,96,6
    54                        	.member	listhead,0,138,8,32,5
    55                        	.member	listData,32,129,8,32
    56                        	.member	deallocator,64,641,8,32
    57                        	.eos
    58                        	.stag	_fx_queue,80,7
    59                        	.member	count,0,5,8,16
    60                        	.member	front,16,138,8,32,5
    61                        	.member	rear,48,138,8,32,5
    62                        	.eos
    63                        	.stag	fake8_,32,8
    64                        	.member	subsystem,0,14,8,8
    65                        	.member	level,8,14,8,8
    66                        	.member	error,16,16,8,16
    67                        	.eos
    68                        	.stag	_fx_process_signal,16,9
    69                        	.member	cbSize,0,16,8,16
    70                        	.eos
    71                        	.stag	_fx_semaphore,16,10
    72                        	.member	reserved,0,5,8,16
    73                        	.eos
    74                        	.stag	_fx_fileBlock,552,11
    75                        	.member	openCount,0,16,8,16
    76                        	.member	lockCount,16,16,8,16
    77                        	.member	dirty,32,14,8,8
    78                        	.member	fileBuffer,40,110,8,0,64
    79                        	.eos
    80                        	.stag	_fx_irq_data,48,12
    81                        	.member	line,0,5,8,16
    82                        	.member	keycode,16,142,8,32
    83                        	.eos
    84                        	.stag	_task,48,13
    85                        	.member	SPL,0,14,8,8
    86                        	.member	SPH,8,14,8,8
    87                        	.member	pstack,16,142,8,32
    88                        	.eos
    89                        	.stag	_task_stack,32,14
    90                        	.member	SS,0,142,8,32
    91                        	.eos
    92                        	.stag	int_regs,104,15
    93                        	.member	PB,0,14,8,8
    94                        	.member	PH,8,14,8,8
    95                        	.member	PL,16,14,8,8
    96                        	.member	PP,24,14,8,8
    97                        	.member	DB,32,14,8,8
    98                        	.member	DH,40,14,8,8
    99                        	.member	DL,48,14,8,8
  Mon Aug  9 2021 16:52                                                Page 3


   100                        	.member	AH,56,14,8,8
   101                        	.member	AL,64,14,8,8
   102                        	.member	XH,72,14,8,8
   103                        	.member	XL,80,14,8,8
   104                        	.member	YH,88,14,8,8
   105                        	.member	YL,96,14,8,8
   106                        	.eos
   107                        	.stag	_fx_eventMessage,312,16
   108                        	.member	src,0,18,8,32
   109                        	.member	dest,32,18,8,32
   110                        	.member	type,64,16,8,16
   111                        	.member	hwnd,80,129,8,32
   112                        	.member	pheap,112,129,8,32
   113                        	.member	msgTime,144,18,8,32
   114                        	.member	data,176,110,8,0,16
   115                        	.member	attr,304,14,8,8
   116                        	.eos
   117                        	.stag	_fx_cmdMessage,312,17
   118                        	.member	src,0,18,8,32
   119                        	.member	dest,32,18,8,32
   120                        	.member	type,64,16,8,16
   121                        	.member	hwnd,80,129,8,32
   122                        	.member	pheap,112,129,8,32
   123                        	.member	msgTime,144,18,8,32
   124                        	.member	cmdCId,176,16,8,16
   125                        	.member	cmdMId,192,16,8,16
   126                        	.member	parameter1,208,18,8,32
   127                        	.member	parameter2,240,18,8,32
   128                        	.member	parameter3,272,18,8,32
   129                        	.member	attr,304,14,8,8
   130                        	.eos
   131                        	.stag	_fx_console_ctl,448,18
   132                        	.member	maxCols,0,5,8,16
   133                        	.member	maxRows,16,5,8,16
   134                        	.member	curX,32,5,8,16
   135                        	.member	curY,48,5,8,16
   136                        	.member	fgColor,64,5,8,16
   137                        	.member	bgColor,80,5,8,16
   138                        	.member	mode,96,14,8,8
   139                        	.member	kbBuffer,104,101,8,0,16
   140                        	.member	screenBuffer,360,142,8,32
   141                        	.member	desktopMode,392,14,8,8
   142                        	.member	lastMouseButton,400,5,8,16
   143                        	.member	lastMouseX,416,5,8,16
   144                        	.member	lastMouseY,432,5,8,16
   145                        	.eos
   146                        	.stag	_fx_desktop_ctl,392,19
   147                        	.member	desktopMode,0,14,8,8
   148                        	.member	cursorCtl,8,5,8,16
   149                        	.member	cursorState,24,5,8,16
   150                        	.member	backgroundColor,40,5,8,16
   151                        	.member	foregroundColor,56,5,8,16
   152                        	.member	menuMode,72,5,8,16
   153                        	.member	lastMouseButton,88,5,8,16
   154                        	.member	lastMouseX,104,5,8,16
   155                        	.member	lastMouseY,120,5,8,16
   156                        	.member	currentDiskName,136,142,8,32
   157                        	.member	diskNodes,168,129,8,32
  Mon Aug  9 2021 16:52                                                Page 4


   158                        	.member	titleNodes,200,129,8,32
   159                        	.member	menuNodes,232,129,8,32
   160                        	.member	iconNodes,264,129,8,32
   161                        	.member	windowNodes,296,129,8,32
   162                        	.member	fontNodes,328,129,8,32
   163                        	.member	wndProc,360,138,8,32,6
   164                        	.eos
   165                        	.stag	_fx_process,800,20
   166                        	.member	cbSize,0,5,8,16
   167                        	.member	procId,16,18,8,32
   168                        	.member	parentId,48,18,8,32
   169                        	.member	ctx,80,129,8,32
   170                        	.member	userId,112,16,8,16
   171                        	.member	status,128,16,8,16
   172                        	.member	foregroundActive,144,14,8,8
   173                        	.member	tls,152,1121,8,32,8
   174                        	.member	commandLine,408,142,8,32
   175                        	.member	semaphores,440,138,8,32,6
   176                        	.member	fileHandles,472,138,8,32,6
   177                        	.member	pathList,504,138,8,32,6
   178                        	.member	resources,536,138,8,32,6
   179                        	.member	timerAware,568,14,8,8
   180                        	.member	timerTicks,576,112,8,0,2
   181                        	.member	timerTickCount,608,112,8,0,2
   182                        	.member	kernelError,640,10,8,32,8
   183                        	.member	consoleCtl,672,138,8,32,18
   184                        	.member	desktopCtl,704,138,8,32,19
   185                        	.member	execProc,736,641,8,32
   186                        	.member	startupArgs,768,129,8,32
   187                        	.eos
   188                        	.stag	_fxProcessMessage,112,21
   189                        	.member	src,0,18,8,32
   190                        	.member	dest,32,18,8,32
   191                        	.member	type,64,16,8,16
   192                        	.member	processInfo,80,138,8,32,20
   193                        	.eos
   194                        	.stag	_k_key_state,112,22
   195                        	.member	scanCode,0,14,8,8
   196                        	.member	isShifted,8,14,8,8
   197                        	.member	isAlt,16,14,8,8
   198                        	.member	isExtended,24,14,8,8
   199                        	.member	isCapsLock,32,14,8,8
   200                        	.member	isNumLock,40,14,8,8
   201                        	.member	isScrollLock,48,14,8,8
   202                        	.member	keyChar,56,16,8,16
   203                        	.member	scanTime,72,18,8,32
   204                        	.member	ledStatus,104,14,8,8
   205                        	.eos
   206                        	.stag	_fx_property,384,23
   207                        	.member	name,0,110,8,0,16
   208                        	.member	value,128,110,8,0,32
   209                        	.eos
   210                        	.utag	_24bitPointer,32,24
   211                        	.member	address,0,142,11,32
   212                        	.member	bytes,0,110,11,0,4
   213                        	.eos
   214                        	.stag	_PointStruct,32,25
   215                        	.member	x,0,5,8,16
  Mon Aug  9 2021 16:52                                                Page 5


   216                        	.member	y,16,5,8,16
   217                        	.eos
   218                        	.stag	_RectStruct,112,26
   219                        	.member	x,0,5,8,16
   220                        	.member	y,16,5,8,16
   221                        	.member	z,32,18,8,32
   222                        	.member	width,64,5,8,16
   223                        	.member	height,80,5,8,16
   224                        	.member	attr,96,5,8,16
   225                        	.eos
   226                        	.stag	fake27_,96,27
   227                        	.member	name,0,142,8,32
   228                        	.member	topLeft,32,10,8,32,25
   229                        	.member	bottomRight,64,10,8,32,25
   230                        	.eos
   231                        	.stag	fake28_,112,28
   232                        	.member	x,0,5,8,16
   233                        	.member	y,16,5,8,16
   234                        	.member	z,32,5,8,16
   235                        	.member	width,48,5,8,16
   236                        	.member	height,64,5,8,16
   237                        	.member	data,80,18,8,32
   238                        	.eos
   239                        	.stag	_k_WindowClass,272,29
   240                        	.member	cbSize,0,16,8,16
   241                        	.member	style,16,16,8,16
   242                        	.member	styleEx,32,16,8,16
   243                        	.member	pWndProc,48,654,8,32
   244                        	.member	hInstance,80,129,8,32
   245                        	.member	hIcon,112,129,8,32
   246                        	.member	hCursor,144,129,8,32
   247                        	.member	hbrBackground,176,129,8,32
   248                        	.member	lpszMenuName,208,142,8,32
   249                        	.member	lpszClassName,240,142,8,32
   250                        	.eos
   251                        	.stag	_ClickableRect,152,30
   252                        	.member	area,0,10,8,112,26
   253                        	.member	z,112,18,8,32
   254                        	.member	enabled,144,14,8,8
   255                        	.eos
   256                        	.stag	_NCClickableRect,136,31
   257                        	.member	area,0,10,8,112,26
   258                        	.member	msgType,112,16,8,16
   259                        	.member	enabled,128,14,8,8
   260                        	.eos
   261                        	.stag	_DragData,216,32
   262                        	.member	area,0,10,8,112,26
   263                        	.member	xoffset,112,5,8,16
   264                        	.member	yoffset,128,5,8,16
   265                        	.member	msgType,144,16,8,16
   266                        	.member	ncAction,160,16,8,16
   267                        	.member	isDrag,176,14,8,8
   268                        	.member	isResize,184,14,8,8
   269                        	.member	canDrag,192,14,8,8
   270                        	.member	canDrop,200,14,8,8
   271                        	.member	didDrag,208,14,8,8
   272                        	.eos
   273                        	.stag	_k_WindowStruct,3904,33
  Mon Aug  9 2021 16:52                                                Page 6


   274                        	.member	cbSize,0,16,8,16
   275                        	.member	style,16,18,8,32
   276                        	.member	styleEx,48,18,8,32
   277                        	.member	win_id,80,5,8,16
   278                        	.member	win_x,96,5,8,16
   279                        	.member	win_y,112,5,8,16
   280                        	.member	win_width,128,5,8,16
   281                        	.member	win_height,144,5,8,16
   282                        	.member	win_xoffset,160,5,8,16
   283                        	.member	win_yoffset,176,5,8,16
   284                        	.member	win_cxoffset,192,5,8,16
   285                        	.member	win_cyoffset,208,5,8,16
   286                        	.member	wndRect,224,10,8,112,26
   287                        	.member	clientRect,336,10,8,112,26
   288                        	.member	nonclientGadgets,448,106,8,0,31,16
   289                        	.member	clickable,2624,129,8,32
   290                        	.member	win_title,2656,110,8,0,32
   291                        	.member	Reserved0,2912,16,8,16
   292                        	.member	win_class,2928,110,8,0,16
   293                        	.member	win_class_name,3056,110,8,0,32
   294                        	.member	nBitmapLayer,3312,16,8,16
   295                        	.member	bgRegion,3328,129,8,32
   296                        	.member	procid,3360,18,8,32
   297                        	.member	pWndClass,3392,138,8,32,29
   298                        	.member	pParentWindow,3424,129,8,32
   299                        	.member	hMenu,3456,129,8,32
   300                        	.member	hPointer,3488,129,8,32
   301                        	.member	hBackground,3520,129,8,32
   302                        	.member	pChildWindows,3552,138,8,32,6
   303                        	.member	pChildHitList,3584,138,8,32,6
   304                        	.member	isVisible,3616,14,8,8
   305                        	.member	windowData,3624,129,8,32
   306                        	.member	clientData,3656,1121,8,32,6
   307                        	.member	isClosed,3848,14,8,8
   308                        	.member	isClosing,3856,14,8,8
   309                        	.member	isDesktop,3864,14,8,8
   310                        	.member	clickableNode,3872,138,8,32,5
   311                        	.eos
   312                        	.stag	_k_WindowStructEx,3880,34
   313                        	.member	cbSize,0,16,8,16
   314                        	.member	style,16,18,8,32
   315                        	.member	styleEx,48,18,8,32
   316                        	.member	win_id,80,5,8,16
   317                        	.member	win_x,96,5,8,16
   318                        	.member	win_y,112,5,8,16
   319                        	.member	win_width,128,5,8,16
   320                        	.member	win_height,144,5,8,16
   321                        	.member	win_xoffset,160,5,8,16
   322                        	.member	win_yoffset,176,5,8,16
   323                        	.member	win_cxoffset,192,5,8,16
   324                        	.member	win_cyoffset,208,5,8,16
   325                        	.member	wndRect,224,10,8,112,26
   326                        	.member	clientRect,336,10,8,112,26
   327                        	.member	nonclientGadgets,448,106,8,0,31,16
   328                        	.member	clickable,2624,129,8,32
   329                        	.member	win_title,2656,110,8,0,32
   330                        	.member	Reserved0,2912,16,8,16
   331                        	.member	win_class,2928,110,8,0,16
  Mon Aug  9 2021 16:52                                                Page 7


   332                        	.member	nBitmapLayer,3056,16,8,16
   333                        	.member	procid,3072,18,8,32
   334                        	.member	pWndClass,3104,138,8,32,29
   335                        	.member	pParentWindow,3136,129,8,32
   336                        	.member	hMenu,3168,129,8,32
   337                        	.member	hPointer,3200,129,8,32
   338                        	.member	hBackground,3232,129,8,32
   339                        	.member	pChildWindows,3264,138,8,32,6
   340                        	.member	pChildHitList,3296,138,8,32,6
   341                        	.member	isVisible,3328,14,8,8
   342                        	.member	windowData,3336,129,8,32
   343                        	.member	clientData,3368,1121,8,32,4
   344                        	.member	isClosed,3496,14,8,8
   345                        	.member	hWnd,3504,129,8,32
   346                        	.member	localRect,3536,10,8,112,26
   347                        	.member	globalRect,3648,10,8,112,26
   348                        	.member	clientOffsetRect,3760,10,8,112,26
   349                        	.member	isDesktop,3872,14,8,8
   350                        	.eos
   351                        	.stag	_FontMetric,32,35
   352                        	.member	width,0,5,8,16
   353                        	.member	height,16,5,8,16
   354                        	.eos
   355                        	.stag	_MenuStruct,280,36
   356                        	.member	cx,0,5,8,16
   357                        	.member	cy,16,5,8,16
   358                        	.member	width,32,5,8,16
   359                        	.member	height,48,5,8,16
   360                        	.member	fcolor,64,14,8,8
   361                        	.member	bcolor,72,14,8,8
   362                        	.member	chromeLeft,80,14,8,8
   363                        	.member	chromeRight1,88,14,8,8
   364                        	.member	chromeRight2,96,14,8,8
   365                        	.member	hFont,104,129,8,32
   366                        	.member	itemId,136,16,8,16
   367                        	.member	pCaption,152,142,8,32
   368                        	.member	subMenus,184,138,8,32,6
   369                        	.member	pBackground,216,129,8,32
   370                        	.member	hWndOwner,248,129,8,32
   371                        	.eos
   372                        	.stag	fake37_,160,37
   373                        	.member	menuId,0,16,8,16
   374                        	.member	caption,16,142,8,32
   375                        	.member	rect,48,10,8,112,26
   376                        	.eos
   377                        	.stag	fake38_,5152,38
   378                        	.member	pParent,0,138,8,32,33
   379                        	.member	rect,32,10,8,112,26
   380                        	.member	captions,144,1134,8,32,24
   381                        	.member	chrome,912,110,8,0,24
   382                        	.member	ids,1104,112,8,0,24
   383                        	.member	clickable,1488,106,8,0,30,24
   384                        	.member	selected,5136,16,8,16
   385                        	.eos
   386                        	.stag	_fx_button_t,96,39
   387                        	.member	pCaption,0,142,8,32
   388                        	.member	cCaption,32,16,8,16
   389                        	.member	data,48,129,8,32
  Mon Aug  9 2021 16:52                                                Page 8


   390                        	.member	captionPixelWidth,80,16,8,16
   391                        	.eos
   392                        	.stag	_fx_scrollbar_t,240,40
   393                        	.member	min,0,16,8,16
   394                        	.member	max,16,16,8,16
   395                        	.member	increment,32,16,8,16
   396                        	.member	stopsize,48,16,8,16
   397                        	.member	location,64,5,8,16
   398                        	.member	state,80,5,8,16
   399                        	.member	rectThumb,96,10,8,112,26
   400                        	.member	data,208,129,8,32
   401                        	.eos
   402                        	.stag	_fx_listbox_t,240,41
   403                        	.member	pos,0,5,8,16
   404                        	.member	selected,16,16,8,16
   405                        	.member	offsetX,32,5,8,16
   406                        	.member	offsetY,48,5,8,16
   407                        	.member	inc,64,5,8,16
   408                        	.member	direction,80,5,8,16
   409                        	.member	top,96,5,8,16
   410                        	.member	bottom,112,5,8,16
   411                        	.member	indexTop,128,5,8,16
   412                        	.member	indexBottom,144,5,8,16
   413                        	.member	maxItems,160,16,8,16
   414                        	.member	fontSet,176,142,8,32
   415                        	.member	data,208,129,8,32
   416                        	.eos
   417                        	.stag	_fx_textbox_t,144,42
   418                        	.member	pos,0,5,8,16
   419                        	.member	selected,16,16,8,16
   420                        	.member	offsetX,32,5,8,16
   421                        	.member	offsetY,48,5,8,16
   422                        	.member	isShifted,64,14,8,8
   423                        	.member	cursorState,72,14,8,8
   424                        	.member	fontSet,80,142,8,32
   425                        	.member	data,112,129,8,32
   426                        	.eos
   427                        	.stag	_fx_msgbox_t,144,43
   428                        	.member	pos,0,5,8,16
   429                        	.member	selected,16,16,8,16
   430                        	.member	offsetX,32,5,8,16
   431                        	.member	offsetY,48,5,8,16
   432                        	.member	isShifted,64,14,8,8
   433                        	.member	cursorState,72,14,8,8
   434                        	.member	fontSet,80,142,8,32
   435                        	.member	data,112,129,8,32
   436                        	.eos
   437                        	.stag	_fx_menuAnchor_t,272,44
   438                        	.member	pCaption,0,142,8,32
   439                        	.member	renderLayoutX,32,16,8,16
   440                        	.member	renderLayoutY,48,16,8,16
   441                        	.member	captionPixelWidth,64,16,8,16
   442                        	.member	data,80,129,8,32
   443                        	.member	droppedWindow,112,138,8,32,33
   444                        	.member	bytes,144,110,8,0,16
   445                        	.eos
   446                        	.stag	_SubMenuStruct,64,45
   447                        	.member	caption,0,142,8,32
  Mon Aug  9 2021 16:52                                                Page 9


   448                        	.member	action,32,641,8,32
   449                        	.eos
   450                        	.stag	_SubMenuListStruct,40,46
   451                        	.member	cMenus,0,14,8,8
   452                        	.member	psubmenus,8,9354,8,32,45
   453                        	.eos
   454                        	.stag	_fx_ComBuffer,2080,47
   455                        	.member	cbSize,0,16,8,16
   456                        	.member	cbBuffer,16,16,8,16
   457                        	.member	buffer,32,110,8,0,256
   458                        	.eos
   459                        	.stag	_fx_resource_header,72,48
   460                        	.member	magic,0,110,8,0,4
   461                        	.member	major,32,14,8,8
   462                        	.member	minor,40,14,8,8
   463                        	.member	type,48,14,8,8
   464                        	.member	reserved,56,14,8,8
   465                        	.member	resheaderSize,64,14,8,8
   466                        	.eos
   467                        	.stag	_fx_resource_header_font,144,49
   468                        	.member	title,0,110,8,0,16
   469                        	.member	height,128,14,8,8
   470                        	.member	width,136,14,8,8
   471                        	.eos
   472                        	.stag	_fx_resource_string,32,50
   473                        	.member	locale,0,110,8,0,2
   474                        	.member	entries,16,16,8,16
   475                        	.eos
   476                        	.stag	_fx_resource_string_entry,40,51
   477                        	.member	index,0,16,8,16
   478                        	.member	length,16,16,8,16
   479                        	.member	data,32,14,8,8
   480                        	.eos
   481                        	.line	1064
   482                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxos.h",8
   483                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxstringtable.h",0
   484                        	.line	90
   485                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxos.h",9
   486                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxc256u.h",0
   487                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxtypes.h",0
   488                        	.line	1064
   489                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxc256u.h",5
   490                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fmx_vicky.h",0
   491                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxtypes.h",0
   492                        	.line	1064
   493                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fmx_vicky.h",11
   494                        	.line	72
   495                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxc256u.h",6
  Mon Aug  9 2021 16:52                                                Page 10


   496                        	.line	1960
   497                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxos.h",16
   498                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxkernel.h",0
   499                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxos.h",0
   500                        	.line	30
   501                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxkernel.h",5
   502                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxnode.h",0
   503                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxtypes.h",0
   504                        	.line	1064
   505                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxnode.h",11
   506                        	.line	118
   507                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxkernel.h",6
   508                        	.stag	_fx_api_call_table,8192,52
   509                        	.member	call_table,0,1121,8,32,256
   510                        	.eos
   511                        	.stag	_fx_zero_page_irq_data,32,53
   512                        	.member	data,0,110,8,0,4
   513                        	.eos
   514                        	.stag	_fx_zero_page,720,54
   515                        	.member	fxos_mouse_byte_0,0,14,8,8
   516                        	.member	fxos_mouse_byte_1,8,14,8,8
   517                        	.member	fxos_mouse_byte_2,16,14,8,8
   518                        	.member	fxos_mouse_byte_t,24,14,8,8
   519                        	.member	fxos_mouse_byte_x_l,32,14,8,8
   520                        	.member	fxos_mouse_byte_x_h,40,14,8,8
   521                        	.member	fxos_mouse_byte_y_l,48,14,8,8
   522                        	.member	fxos_mouse_byte_y_h,56,14,8,8
   523                        	.member	fxos_key_byte_0,64,14,8,8
   524                        	.member	fxos_key_byte_1,72,14,8,8
   525                        	.member	fxos_key_byte_2,80,14,8,8
   526                        	.member	fxos_mouse_ctl,88,14,8,8
   527                        	.member	fxos_mouse_index,96,14,8,8
   528                        	.member	fxos_mouse_status,104,14,8,8
   529                        	.member	Endianness,112,16,8,16
   530                        	.member	VersionMajor,128,16,8,16
   531                        	.member	VersionMinor,144,16,8,16
   532                        	.member	VersionRelease,160,16,8,16
   533                        	.member	topMemory,176,18,8,32
   534                        	.member	bottomMemory,208,18,8,32
   535                        	.member	availableMemory,240,18,8,32
   536                        	.member	availableMemoryK,272,18,8,32
   537                        	.member	availableHeapMemory,304,18,8,32
   538                        	.member	availableHeapMemoryK,336,18,8,32
   539                        	.member	fxos_console_row,368,16,8,16
   540                        	.member	fxos_console_col,384,16,8,16
   541                        	.member	executive,400,129,8,32
   542                        	.member	eventmanager,432,129,8,32
   543                        	.member	devicemanager,464,129,8,32
   544                        	.member	windowmanager,496,129,8,32
   545                        	.member	fxos_kernel_api,528,138,8,32,52
  Mon Aug  9 2021 16:52                                                Page 11


   546                        	.member	fxos_dos_api,560,138,8,32,52
   547                        	.member	fxos_gfx_api,592,138,8,32,52
   548                        	.member	fxos_gui_api,624,138,8,32,52
   549                        	.member	fxos_con_api,656,138,8,32,52
   550                        	.member	fxos_reserved_2_api,688,138,8,32,52
   551                        	.eos
   552                        	.stag	_fx_environment,96,55
   553                        	.member	variables,0,142,8,32
   554                        	.member	reserved1,32,5,8,16
   555                        	.member	reserved2,48,5,8,16
   556                        	.member	reserved3,64,5,8,16
   557                        	.member	reserved4,80,5,8,16
   558                        	.eos
   559                        	.stag	_debug_byte_bits,8,56
   560                        	.member	bit7,0,14,17,1
   561                        	.member	bit6,1,14,17,1
   562                        	.member	bit5,2,14,17,1
   563                        	.member	bit4,3,14,17,1
   564                        	.member	bit3,4,14,17,1
   565                        	.member	bit2,5,14,17,1
   566                        	.member	bit1,6,14,17,1
   567                        	.member	bit0,7,14,17,1
   568                        	.eos
   569                        	.stag	_k_segmentheader,160,57
   570                        	.member	version_major,0,14,8,8
   571                        	.member	version_minor,8,14,8,8
   572                        	.member	length,16,5,8,16
   573                        	.member	segment_start_addr,32,7,8,32
   574                        	.member	segment_end_addr,64,7,8,32
   575                        	.member	segment_size,96,7,8,32
   576                        	.member	main_entry_addr,128,7,8,32
   577                        	.eos
   578                        	.stag	_fx_device_driver,776,58
   579                        	.member	name,0,110,8,0,32
   580                        	.member	version,256,110,8,0,16
   581                        	.member	hmajor,384,110,8,0,8
   582                        	.member	hminor,448,110,8,0,8
   583                        	.member	type,512,14,8,8
   584                        	.member	designation,520,110,8,0,6
   585                        	.member	irq_ctl,568,16,8,16
   586                        	.member	f_driver_irq,584,129,8,32
   587                        	.member	driver_context,616,129,8,32
   588                        	.member	f_driver_load,648,129,8,32
   589                        	.member	f_driver_read,680,129,8,32
   590                        	.member	f_driver_write,712,129,8,32
   591                        	.member	f_driver_unload,744,129,8,32
   592                        	.eos
   593                        	.stag	_fx_block_device_driver,808,59
   594                        	.member	name,0,110,8,0,32
   595                        	.member	version,256,110,8,0,16
   596                        	.member	hmajor,384,110,8,0,8
   597                        	.member	hminor,448,110,8,0,8
   598                        	.member	type,512,14,8,8
   599                        	.member	designation,520,110,8,0,6
   600                        	.member	irq_ctl,568,16,8,16
   601                        	.member	f_driver_irq,584,129,8,32
   602                        	.member	driver_context,616,129,8,32
   603                        	.member	f_driver_load,648,129,8,32
  Mon Aug  9 2021 16:52                                                Page 12


   604                        	.member	f_driver_read,680,129,8,32
   605                        	.member	f_driver_write,712,129,8,32
   606                        	.member	f_driver_unload,744,129,8,32
   607                        	.member	f_driver_command,776,129,8,32
   608                        	.eos
   609                        	.stag	_k_irq_chain,128,60
   610                        	.member	handlers,0,5217,8,32,4
   611                        	.eos
   612                        	.line	490
   613                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxos.h",22
   614                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxconsole.h",0
   615                        	.file	"G:\devtools\WDCTools\wdc\Tools\include\
                    string.h",0
   616                        	.line	134
   617                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxconsole.h",5
   618                        	.file	"G:\devtools\WDCTools\wdc\Tools\include\
                    stdlib.h",0
   619                        	.line	205
   620                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxconsole.h",6
   621                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxtypes.h",0
   622                        	.line	1064
   623                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxconsole.h",7
   624                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxc256u.h",0
   625                        	.line	1960
   626                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxconsole.h",12
   627                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxstring.h",0
   628                        	.file	"G:\devtools\WDCTools\wdc\Tools\include\
                    stdlib.h",0
   629                        	.line	205
   630                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxstring.h",5
   631                        	.file	"G:\devtools\WDCTools\wdc\Tools\include\
                    string.h",0
   632                        	.line	134
   633                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxstring.h",6
   634                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxtypes.h",0
   635                        	.line	1064
   636                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxstring.h",7
   637                        	.stag	_fx_string,64,61
   638                        	.member	size,0,16,8,16
   639                        	.member	pos,16,5,8,16
   640                        	.member	buffer,32,142,8,32
   641                        	.eos
   642                        	.line	141
   643                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxconsole.h",17
  Mon Aug  9 2021 16:52                                                Page 13


   644                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxeventmanager.h",0
   645                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxos.h",0
   646                        	.line	30
   647                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxeventmanager.h",5
   648                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxexec.h",0
   649                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxtypes.h",0
   650                        	.line	1064
   651                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxexec.h",5
   652                        	.stag	_fxos_executive_vtable,128,62
   653                        	.member	Init,0,8833,8,32
   654                        	.member	Configure,32,656,8,32
   655                        	.member	Query,64,656,8,32
   656                        	.member	Uninit,96,641,8,32
   657                        	.eos
   658                        	.line	86
   659                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxeventmanager.h",6
   660                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxnode.h",0
   661                        	.line	118
   662                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxeventmanager.h",7
   663                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxconsole.h",0
   664                        	.line	208
   665                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxeventmanager.h",8
   666                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxwindowmanager.h",0
   667                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxos.h",0
   668                        	.line	30
   669                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxwindowmanager.h",5
   670                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxmemorymanager.h",0
   671                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxos.h",0
   672                        	.line	30
   673                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxmemorymanager.h",5
   674                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\umm_malloc_cfg.h",0
   675                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxos_build_parameters.h",0
   676                        	.line	35
   677                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\umm_malloc_cfg.h",8
   678                        	.stag	UMM_HEAP_INFO_t,256,63
   679                        	.member	totalEntries,0,18,8,32
   680                        	.member	usedEntries,32,18,8,32
   681                        	.member	freeEntries,64,18,8,32
  Mon Aug  9 2021 16:52                                                Page 14


   682                        	.member	totalBlocks,96,18,8,32
   683                        	.member	usedBlocks,128,18,8,32
   684                        	.member	freeBlocks,160,18,8,32
   685                        	.member	maxFreeContiguousBlocks,192,18,8,32
   686                        	.member	blockSize,224,18,8,32
   687                        	.eos
   688                        	.line	199
   689                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxmemorymanager.h",6
   690                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\umm_malloc.h",0
   691                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxtypes.h",0
   692                        	.line	1064
   693                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\umm_malloc.h",11
   694                        	.line	24
   695                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxmemorymanager.h",7
   696                        	.stag	_fx_memory_map,2072,64
   697                        	.member	availableMemory,0,18,8,32
   698                        	.member	valid_segments,32,110,8,0,255
   699                        	.eos
   700                        	.stag	_fx_ipc_port,144,65
   701                        	.member	id,0,18,8,32
   702                        	.member	type,32,14,8,8
   703                        	.member	name,40,138,8,32,61
   704                        	.member	time,72,18,8,32
   705                        	.member	queue,104,138,8,32,7
   706                        	.member	reserved_1,136,14,8,8
   707                        	.eos
   708                        	.stag	_k_mem_alloc_header,80,66
   709                        	.member	user,0,14,8,8
   710                        	.member	attr,8,14,8,8
   711                        	.member	size,16,18,8,32
   712                        	.member	virtual,48,129,8,32
   713                        	.eos
   714                        	.line	129
   715                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxwindowmanager.h",6
   716                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxeventmanager.h",0
   717                        	.line	568
   718                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxwindowmanager.h",7
   719                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxgfx.h",0
   720                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxfont.h",0
   721                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxtypes.h",0
   722                        	.line	1064
   723                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxfont.h",6
   724                        	.line	74
   725                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxgfx.h",5
   726                        	.stag	_click_detected,64,67
  Mon Aug  9 2021 16:52                                                Page 15


   727                        	.member	window,0,138,8,32,33
   728                        	.member	handler,32,641,8,32
   729                        	.eos
   730                        	.stag	_current_palette_map,400,68
   731                        	.member	CUR_DESKTOP,0,5,8,16
   732                        	.member	CUR_BACKGROUND,16,5,8,16
   733                        	.member	CUR_FONT,32,5,8,16
   734                        	.member	CUR_SELECTED_FONT,48,5,8,16
   735                        	.member	CUR_HIGHLIGHT_COLOR,64,5,8,16
   736                        	.member	CUR_WINDOWFRAME,80,5,8,16
   737                        	.member	CUR_WINDOWBORDER,96,5,8,16
   738                        	.member	CUR_WINDOWSHADOW,112,5,8,16
   739                        	.member	CUR_MENU,128,5,8,16
   740                        	.member	CUR_GADGET,144,5,8,16
   741                        	.member	CUR_COLOR,160,101,8,0,15
   742                        	.eos
   743                        	.line	359
   744                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxwindowmanager.h",8
   745                        	.stag	_fxos_winman_vtable,160,69
   746                        	.member	Events,0,641,8,32
   747                        	.member	ConfigureWindowManager,32,656,8,32
   748                        	.member	ProcessWindowEvent,64,8833,8,32
   749                        	.member	QueryWindowManager,96,656,8,32
   750                        	.member	DoWndProcs,128,641,8,32
   751                        	.eos
   752                        	.stag	fake70_,64,70
   753                        	.member	type,0,16,8,16
   754                        	.member	size,16,16,8,16
   755                        	.member	desktopAction,32,129,8,32
   756                        	.eos
   757                        	.stag	fake71_,96,71
   758                        	.member	type,0,16,8,16
   759                        	.member	caption,16,138,8,32,61
   760                        	.member	buttonType,48,16,8,16
   761                        	.member	x,64,5,8,16
   762                        	.member	y,80,5,8,16
   763                        	.eos
   764                        	.stag	_childMessage_t,64,72
   765                        	.member	msgType,0,16,8,16
   766                        	.member	msgData,16,129,8,32
   767                        	.member	dataSize,48,16,8,16
   768                        	.eos
   769                        	.line	594
   770                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxeventmanager.h",9
   771                        	.stag	_fx_main_loopvars,16,73
   772                        	.member	dummy,0,5,8,16
   773                        	.eos
   774                        	.stag	_fxMouseMessageData,64,74
   775                        	.member	button1,0,14,8,8
   776                        	.member	button2,8,14,8,8
   777                        	.member	button3,16,14,8,8
   778                        	.member	button4,24,14,8,8
   779                        	.member	x,32,16,8,16
   780                        	.member	y,48,16,8,16
   781                        	.eos
   782                        	.utag	marshalled_data,32,75
  Mon Aug  9 2021 16:52                                                Page 16


   783                        	.member	byteValue,0,14,11,8
   784                        	.member	verbValue,0,110,11,0,2
   785                        	.member	intValue,0,16,11,16
   786                        	.member	longValue,0,18,11,32
   787                        	.member	pointerValue,0,129,11,32
   788                        	.eos
   789                        	.stag	_fx_eventProcess,64,76
   790                        	.member	process,0,138,8,32,20
   791                        	.member	eventProc,32,641,8,32
   792                        	.eos
   793                        	.stag	_mouse_msg_state,184,77
   794                        	.member	lastEvent,0,18,8,32
   795                        	.member	buttonLeftDown,32,14,8,8
   796                        	.member	lastLeftDown,40,18,8,32
   797                        	.member	buttonRightDown,72,14,8,8
   798                        	.member	lastRightDown,80,18,8,32
   799                        	.member	buttonMiddleDown,112,14,8,8
   800                        	.member	lastMiddleDown,120,18,8,32
   801                        	.member	lastX,152,16,8,16
   802                        	.member	lastY,168,16,8,16
   803                        	.eos
   804                        	.stag	_fxos_eventmanager_vtable,192,78
   805                        	.member	EventQueue,0,138,8,32,7
   806                        	.member	Init,32,8833,8,32
   807                        	.member	Run,64,656,8,32
   808                        	.member	Configure,96,656,8,32
   809                        	.member	Query,128,656,8,32
   810                        	.member	Uninit,160,641,8,32
   811                        	.eos
   812                        	.stag	_k_clipboard_data,168,79
   813                        	.member	type,0,14,8,8
   814                        	.member	readable,8,110,8,0,16
   815                        	.member	data,136,129,8,32
   816                        	.eos
   817                        	.line	568
   818                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxconsole.h",18
   819                        	.stag	_fx_spinner_ctx,48,80
   820                        	.member	index,0,5,8,16
   821                        	.member	spinner,16,142,8,32
   822                        	.eos
   823                        	.stag	_fx_console_ctx,1144,81
   824                        	.member	lineBufferIndex,0,5,8,16
   825                        	.member	lineBuffer,16,110,8,0,128
   826                        	.member	isShifted,1040,14,8,8
   827                        	.member	userData,1048,129,8,32
   828                        	.member	screenBuffer,1080,129,8,32
   829                        	.member	Reserved1,1112,129,8,32
   830                        	.eos
   831                        	.stag	_token,64,82
   832                        	.member	type,0,5,8,16
   833                        	.member	depth,16,16,8,16
   834                        	.member	text,32,142,8,32
   835                        	.eos
   836                        	.stag	_command_args,64,83
   837                        	.member	proc,0,656,8,32
   838                        	.member	tokens,32,138,8,32,5
   839                        	.eos
  Mon Aug  9 2021 16:52                                                Page 17


   840                        	.line	208
   841                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxos.h",23
   842                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxstring.h",0
   843                        	.line	141
   844                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxos.h",24
   845                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxnode.h",0
   846                        	.line	118
   847                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxos.h",25
   848                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\ff/ff.h",0
   849                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\ff/ffconf.h",0
   850                        	.line	298
   851                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\ff/ff.h",29
   852                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxtypes.h",0
   853                        	.line	1064
   854                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\ff/ff.h",30
   855                        	.stag	fake84_,4504,84
   856                        	.member	fs_type,0,14,8,8
   857                        	.member	pdrv,8,14,8,8
   858                        	.member	n_fats,16,14,8,8
   859                        	.member	wflag,24,14,8,8
   860                        	.member	fsi_flag,32,14,8,8
   861                        	.member	id,40,5,8,16
   862                        	.member	n_rootdir,56,5,8,16
   863                        	.member	csize,72,5,8,16
   864                        	.member	lfnbuf,88,144,8,32
   865                        	.member	last_clst,120,18,8,32
   866                        	.member	free_clst,152,18,8,32
   867                        	.member	n_fatent,184,18,8,32
   868                        	.member	fsize,216,18,8,32
   869                        	.member	volbase,248,18,8,32
   870                        	.member	fatbase,280,18,8,32
   871                        	.member	dirbase,312,18,8,32
   872                        	.member	database,344,18,8,32
   873                        	.member	winsect,376,18,8,32
   874                        	.member	win,408,110,8,0,512
   875                        	.eos
   876                        	.stag	fake85_,128,85
   877                        	.member	fs,0,138,8,32,84
   878                        	.member	id,32,5,8,16
   879                        	.member	attr,48,14,8,8
   880                        	.member	stat,56,14,8,8
   881                        	.member	sclust,64,18,8,32
   882                        	.member	objsize,96,18,8,32
   883                        	.eos
   884                        	.stag	fake86_,4400,86
   885                        	.member	obj,0,10,8,128,85
   886                        	.member	flag,128,14,8,8
   887                        	.member	err,136,14,8,8
  Mon Aug  9 2021 16:52                                                Page 18


   888                        	.member	fptr,144,18,8,32
   889                        	.member	clust,176,18,8,32
   890                        	.member	sect,208,18,8,32
   891                        	.member	dir_sect,240,18,8,32
   892                        	.member	dir_ptr,272,142,8,32
   893                        	.member	buf,304,110,8,0,512
   894                        	.eos
   895                        	.stag	fake87_,416,87
   896                        	.member	obj,0,10,8,128,85
   897                        	.member	dptr,128,18,8,32
   898                        	.member	clust,160,18,8,32
   899                        	.member	sect,192,18,8,32
   900                        	.member	dir,224,142,8,32
   901                        	.member	fn,256,110,8,0,12
   902                        	.member	blk_ofs,352,18,8,32
   903                        	.member	pat,384,142,8,32
   904                        	.eos
   905                        	.stag	fake88_,2224,88
   906                        	.member	fsize,0,18,8,32
   907                        	.member	fdate,32,5,8,16
   908                        	.member	ftime,48,5,8,16
   909                        	.member	fattrib,64,14,8,8
   910                        	.member	altname,72,110,8,0,13
   911                        	.member	fname,176,110,8,0,256
   912                        	.eos
   913                        	.stag	fake89_,80,89
   914                        	.member	fmt,0,14,8,8
   915                        	.member	n_fat,8,14,8,8
   916                        	.member	align,16,16,8,16
   917                        	.member	n_root,32,16,8,16
   918                        	.member	au_size,48,18,8,32
   919                        	.eos
   920                        	.line	429
   921                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxos.h",26
   922                        	.line	30
   923                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\drivers\DRIVER_FMXIDE.c",1
   924                        ;#include "fxdos.h"
   925                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxdos.h",0
   926                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxtypes.h",0
   927                        	.line	1064
   928                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxdos.h",5
   929                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\ff/ff.h",0
   930                        	.line	429
   931                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxdos.h",6
   932                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\diskio.h",0
   933                        	.line	85
   934                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxdos.h",7
   935                        	.stag	_fx_sd_direntry,256,90
   936                        	.member	filename,0,110,8,0,11
  Mon Aug  9 2021 16:52                                                Page 19


   937                        	.member	type,88,14,8,8
   938                        	.member	attrs,96,110,8,0,20
   939                        	.eos
   940                        	.stag	_fx_info,416,91
   941                        	.member	stgName,0,110,8,0,32
   942                        	.member	Reserved1,256,14,8,8
   943                        	.member	stgType,264,16,8,16
   944                        	.member	Reserved2,280,14,8,8
   945                        	.member	stgReserved,288,110,8,0,16
   946                        	.eos
   947                        	.stag	_fx_fileinfo,136,92
   948                        	.member	type,0,14,8,8
   949                        	.member	pFilename,8,142,8,32
   950                        	.member	lSize,40,18,8,32
   951                        	.member	lcreateDate,72,18,8,32
   952                        	.member	lchangeDate,104,18,8,32
   953                        	.eos
   954                        	.stag	_FX_FAT_DIR_INFO,256,93
   955                        	.member	DIR_Name,0,110,8,0,11
   956                        	.member	DIR_Attr,88,14,8,8
   957                        	.member	DIR_NTRes,96,14,8,8
   958                        	.member	DIR_CrtTimeTenth,104,14,8,8
   959                        	.member	DIR_CrtTime,112,16,8,16
   960                        	.member	DIR_CrtDate,128,16,8,16
   961                        	.member	DIR_LstAccDate,144,16,8,16
   962                        	.member	DIR_FstClusHI,160,16,8,16
   963                        	.member	DIR_WrtTime,176,16,8,16
   964                        	.member	DIR_WrtDate,192,16,8,16
   965                        	.member	DIR_FstClusLO,208,16,8,16
   966                        	.member	DIR_FileSize,224,18,8,32
   967                        	.eos
   968                        	.stag	fat_extBS_32,416,94
   969                        	.member	table_size_32,0,18,8,32
   970                        	.member	extended_flags,32,16,8,16
   971                        	.member	fat_version,48,16,8,16
   972                        	.member	root_cluster,64,18,8,32
   973                        	.member	fat_info,96,16,8,16
   974                        	.member	backup_BS_sector,112,16,8,16
   975                        	.member	reserved_0,128,110,8,0,12
   976                        	.member	drive_number,224,14,8,8
   977                        	.member	reserved_1,232,14,8,8
   978                        	.member	boot_signature,240,14,8,8
   979                        	.member	volume_id,248,16,8,16
   980                        	.member	volume_label,264,110,8,0,11
   981                        	.member	fat_type_label,352,110,8,0,8
   982                        	.eos
   983                        	.stag	fat_extBS_16,192,95
   984                        	.member	bios_drive_num,0,14,8,8
   985                        	.member	reserved1,8,14,8,8
   986                        	.member	boot_signature,16,14,8,8
   987                        	.member	volume_id,24,16,8,16
   988                        	.member	volume_label,40,110,8,0,11
   989                        	.member	fat_type_label,128,110,8,0,8
   990                        	.eos
   991                        	.stag	fat_BS,688,96
   992                        	.member	bootjmp,0,110,8,0,3
   993                        	.member	oem_name,24,110,8,0,8
   994                        	.member	bytes_per_sector,88,16,8,16
  Mon Aug  9 2021 16:52                                                Page 20


   995                        	.member	sectors_per_cluster,104,14,8,8
   996                        	.member	reserved_sector_count,112,16,8,16
   997                        	.member	table_count,128,14,8,8
   998                        	.member	root_entry_count,136,16,8,16
   999                        	.member	total_sectors_16,152,16,8,16
  1000                        	.member	media_type,168,14,8,8
  1001                        	.member	table_size_16,176,16,8,16
  1002                        	.member	sectors_per_track,192,16,8,16
  1003                        	.member	head_side_count,208,16,8,16
  1004                        	.member	hidden_sector_count,224,16,8,16
  1005                        	.member	total_sectors_32,240,16,8,16
  1006                        	.member	extended_section,256,110,8,0,54
  1007                        	.eos
  1008                        	.stag	__FATBootSector,928,97
  1009                        	.member	bootjmp,0,110,8,0,3
  1010                        	.member	oem_name,24,110,8,0,8
  1011                        	.member	bytes_per_sector,88,16,8,16
  1012                        	.member	sectors_per_cluster,104,14,8,8
  1013                        	.member	reserved_sector_count,112,16,8,16
  1014                        	.member	fat_table_count,128,14,8,8
  1015                        	.member	root_entry_count,136,16,8,16
  1016                        	.member	total_sectors_16,152,16,8,16
  1017                        	.member	media_type,168,14,8,8
  1018                        	.member	sectors_per_fat,176,16,8,16
  1019                        	.member	sectors_per_track,192,16,8,16
  1020                        	.member	head_side_count,208,16,8,16
  1021                        	.member	hidden_sector_count,224,18,8,32
  1022                        	.member	total_sectors_32,256,18,8,32
  1023                        	.member	drive_number,288,14,8,8
  1024                        	.member	reserved1,296,14,8,8
  1025                        	.member	boot_sig,304,14,8,8
  1026                        	.member	vol_id,312,18,8,32
  1027                        	.member	vol_name,344,110,8,0,11
  1028                        	.member	file_system_type,432,110,8,0,8
  1029                        	.member	extended_section,496,110,8,0,54
  1030                        	.eos
  1031                        	.stag	__PARTITIONTABLE,128,98
  1032                        	.member	first_byte,0,14,8,8
  1033                        	.member	start_chs,8,110,8,0,3
  1034                        	.member	partition_type,32,14,8,8
  1035                        	.member	end_chs,40,110,8,0,3
  1036                        	.member	start_sector,64,18,8,32
  1037                        	.member	length_sectors,96,18,8,32
  1038                        	.eos
  1039                        	.stag	fake99_,4096,99
  1040                        	.member	jmp,0,110,8,0,3
  1041                        	.member	oem,24,110,8,0,8
  1042                        	.member	sector_size,88,15,8,16
  1043                        	.member	sectors_per_cluster,104,14,8,8
  1044                        	.member	reserved_sectors,112,15,8,16
  1045                        	.member	number_ok_dos_fats,128,14,8,8
  1046                        	.member	root_dir_entries,136,15,8,16
  1047                        	.member	total_sectors_short,152,15,8,16
  1048                        	.member	media_descriptor,168,14,8,8
  1049                        	.member	fat_size_sectors,176,15,8,16
  1050                        	.member	sectors_per_track,192,15,8,16
  1051                        	.member	number_ok_dos_heads,208,15,8,16
  1052                        	.member	hidden_sectors,224,18,8,32
  Mon Aug  9 2021 16:52                                                Page 21


  1053                        	.member	total_sectors_long,256,18,8,32
  1054                        	.member	drive_number,288,14,8,8
  1055                        	.member	current_head,296,14,8,8
  1056                        	.member	boot_signature,304,14,8,8
  1057                        	.member	volume_id,312,18,8,32
  1058                        	.member	volume_label,344,110,8,0,11
  1059                        	.member	fs_type,432,110,8,0,8
  1060                        	.member	boot_code,496,110,8,0,448
  1061                        	.member	boot_sector_signature,4080,15,8,16
  1062                        	.eos
  1063                        	.stag	__FAT16ENTRY,256,100
  1064                        	.member	filename,0,110,8,0,8
  1065                        	.member	ext,64,110,8,0,3
  1066                        	.member	attributes,88,14,8,8
  1067                        	.member	reserved,96,110,8,0,10
  1068                        	.member	modify_time,176,16,8,16
  1069                        	.member	modify_date,192,16,8,16
  1070                        	.member	starting_cluster,208,16,8,16
  1071                        	.member	file_size,224,18,8,32
  1072                        	.eos
  1073                        	.stag	__FAT16ENTRYLONG,288,101
  1074                        	.member	filename,0,110,8,0,8
  1075                        	.member	ext,64,110,8,0,3
  1076                        	.member	attributes,88,14,8,8
  1077                        	.member	reserved,96,110,8,0,10
  1078                        	.member	modify_time,176,16,8,16
  1079                        	.member	modify_date,192,16,8,16
  1080                        	.member	starting_cluster,208,16,8,16
  1081                        	.member	file_size,224,18,8,32
  1082                        	.member	plongfileName,256,142,8,32
  1083                        	.eos
  1084                        	.stag	_LongFileName,256,102
  1085                        	.member	sequenceNo,0,14,8,8
  1086                        	.member	fileName_Part1,8,110,8,0,10
  1087                        	.member	fileattribute,88,14,8,8
  1088                        	.member	type,96,14,8,8
  1089                        	.member	checksum,104,14,8,8
  1090                        	.member	fileName_Part2,112,110,8,0,12
  1091                        	.member	fstclusLO,208,5,8,16
  1092                        	.member	fileName_Part3,224,110,8,0,4
  1093                        	.eos
  1094                        	.stag	_IDSECTOR,2048,103
  1095                        	.member	wGenConfig,0,16,8,16
  1096                        	.member	wNumCyls,16,16,8,16
  1097                        	.member	wReserved,32,16,8,16
  1098                        	.member	wNumHeads,48,16,8,16
  1099                        	.member	wBytesPerTrack,64,16,8,16
  1100                        	.member	wBytesPerSector,80,16,8,16
  1101                        	.member	wSectorsPerTrack,96,16,8,16
  1102                        	.member	wVendorUnique,112,112,8,0,3
  1103                        	.member	sSerialNumber,160,110,8,0,20
  1104                        	.member	wBufferType,320,16,8,16
  1105                        	.member	wBufferSize,336,16,8,16
  1106                        	.member	wECCSize,352,16,8,16
  1107                        	.member	sFirmwareRev,368,110,8,0,8
  1108                        	.member	sModelNumber,432,110,8,0,40
  1109                        	.member	wMoreVendorUnique,752,16,8,16
  1110                        	.member	wDoubleWordIO,768,16,8,16
  Mon Aug  9 2021 16:52                                                Page 22


  1111                        	.member	wCapabilities,784,16,8,16
  1112                        	.member	wReserved1,800,16,8,16
  1113                        	.member	wPIOTiming,816,16,8,16
  1114                        	.member	wDMATiming,832,16,8,16
  1115                        	.member	wBS,848,16,8,16
  1116                        	.member	wNumCurrentCyls,864,16,8,16
  1117                        	.member	wNumCurrentHeads,880,16,8,16
  1118                        	.member	wNumCurrentSectorsPerTrack,896,16,8,16
  1119                        	.member	ulCurrentSectorCapacity,912,18,8,32
  1120                        	.member	wMultSectorStuff,944,16,8,16
  1121                        	.member	ulTotalAddressableSectors,960,18,8,32
  1122                        	.member	wSingleWordDMA,992,16,8,16
  1123                        	.member	wMultiWordDMA,1008,16,8,16
  1124                        	.member	bReserved,1024,110,8,0,128
  1125                        	.eos
  1126                        	.stag	fake104_,16,104
  1127                        	.member	Reserved1,0,16,17,1
  1128                        	.member	Retired3,1,16,17,1
  1129                        	.member	ResponseIncomplete,2,16,17,1
  1130                        	.member	Retired2,3,16,17,3
  1131                        	.member	FixedDevice,6,16,17,1
  1132                        	.member	RemovableMedia,7,16,17,1
  1133                        	.member	Retired1,8,16,17,7
  1134                        	.member	DeviceType,15,16,17,1
  1135                        	.eos
  1136                        	.stag	fake105_,16,105
  1137                        	.member	FeatureSupported,0,16,17,1
  1138                        	.member	Reserved,1,16,17,15
  1139                        	.eos
  1140                        	.stag	fake106_,32,106
  1141                        	.member	CurrentLongPhysicalSectorAlignment,0,14,
                    17,2
  1142                        	.member	ReservedByte49,2,14,17,6
  1143                        	.member	DmaSupported,8,14,17,1
  1144                        	.member	LbaSupported,9,14,17,1
  1145                        	.member	IordyDisable,10,14,17,1
  1146                        	.member	IordySupported,11,14,17,1
  1147                        	.member	Reserved1,12,14,17,1
  1148                        	.member	StandybyTimerSupport,13,14,17,1
  1149                        	.member	Reserved2,14,14,17,2
  1150                        	.member	ReservedWord50,16,16,8,16
  1151                        	.eos
  1152                        	.stag	fake107_,16,107
  1153                        	.member	ZonedCapabilities,0,16,17,2
  1154                        	.member	NonVolatileWriteCache,2,16,17,1
  1155                        	.member	ExtendedUserAddressableSectorsSupported,
                    3,16,17,1
  1156                        	.member	DeviceEncryptsAllUserData,4,16,17,1
  1157                        	.member	ReadZeroAfterTrimSupported,5,16,17,1
  1158                        	.member	Optional28BitCommandsSupported,6,16,17,1
  1159                        	.member	IEEE1667,7,16,17,1
  1160                        	.member	DownloadMicrocodeDmaSupported,8,16,17,1
  1161                        	.member	SetMaxSetPasswordUnlockDmaSupported,9,16
                    ,17,1
  1162                        	.member	WriteBufferDmaSupported,10,16,17,1
  1163                        	.member	ReadBufferDmaSupported,11,16,17,1
  1164                        	.member	DeviceConfigIdentifySetDmaSupported,12,1
                    6,17,1
  Mon Aug  9 2021 16:52                                                Page 23


  1165                        	.member	LPSAERCSupported,13,16,17,1
  1166                        	.member	DeterministicReadAfterTrimSupported,14,1
                    6,17,1
  1167                        	.member	CFastSpecSupported,15,16,17,1
  1168                        	.eos
  1169                        	.stag	fake108_,32,108
  1170                        	.member	Reserved0,0,16,17,1
  1171                        	.member	SataGen1,1,16,17,1
  1172                        	.member	SataGen2,2,16,17,1
  1173                        	.member	SataGen3,3,16,17,1
  1174                        	.member	Reserved1,4,16,17,4
  1175                        	.member	NCQ,8,16,17,1
  1176                        	.member	HIPM,9,16,17,1
  1177                        	.member	PhyEvents,10,16,17,1
  1178                        	.member	NcqUnload,11,16,17,1
  1179                        	.member	NcqPriority,12,16,17,1
  1180                        	.member	HostAutoPS,13,16,17,1
  1181                        	.member	DeviceAutoPS,14,16,17,1
  1182                        	.member	ReadLogDMA,15,16,17,1
  1183                        	.member	Reserved2,16,16,17,1
  1184                        	.member	CurrentSpeed,17,16,17,3
  1185                        	.member	NcqStreaming,20,16,17,1
  1186                        	.member	NcqQueueMgmt,21,16,17,1
  1187                        	.member	NcqReceiveSend,22,16,17,1
  1188                        	.member	DEVSLPtoReducedPwrState,23,16,17,1
  1189                        	.member	Reserved3,24,16,17,8
  1190                        	.eos
  1191                        	.stag	fake109_,16,109
  1192                        	.member	Reserved0,0,16,17,1
  1193                        	.member	NonZeroOffsets,1,16,17,1
  1194                        	.member	DmaSetupAutoActivate,2,16,17,1
  1195                        	.member	DIPM,3,16,17,1
  1196                        	.member	InOrderData,4,16,17,1
  1197                        	.member	HardwareFeatureControl,5,16,17,1
  1198                        	.member	SoftwareSettingsPreservation,6,16,17,1
  1199                        	.member	NCQAutosense,7,16,17,1
  1200                        	.member	DEVSLP,8,16,17,1
  1201                        	.member	HybridInformation,9,16,17,1
  1202                        	.member	Reserved1,10,16,17,6
  1203                        	.eos
  1204                        	.stag	fake110_,16,110
  1205                        	.member	Reserved0,0,16,17,1
  1206                        	.member	NonZeroOffsets,1,16,17,1
  1207                        	.member	DmaSetupAutoActivate,2,16,17,1
  1208                        	.member	DIPM,3,16,17,1
  1209                        	.member	InOrderData,4,16,17,1
  1210                        	.member	HardwareFeatureControl,5,16,17,1
  1211                        	.member	SoftwareSettingsPreservation,6,16,17,1
  1212                        	.member	DeviceAutoPS,7,16,17,1
  1213                        	.member	DEVSLP,8,16,17,1
  1214                        	.member	HybridInformation,9,16,17,1
  1215                        	.member	Reserved1,10,16,17,6
  1216                        	.eos
  1217                        	.stag	fake111_,48,111
  1218                        	.member	SmartCommands,0,16,17,1
  1219                        	.member	SecurityMode,1,16,17,1
  1220                        	.member	RemovableMediaFeature,2,16,17,1
  1221                        	.member	PowerManagement,3,16,17,1
  Mon Aug  9 2021 16:52                                                Page 24


  1222                        	.member	Reserved1,4,16,17,1
  1223                        	.member	WriteCache,5,16,17,1
  1224                        	.member	LookAhead,6,16,17,1
  1225                        	.member	ReleaseInterrupt,7,16,17,1
  1226                        	.member	ServiceInterrupt,8,16,17,1
  1227                        	.member	DeviceReset,9,16,17,1
  1228                        	.member	HostProtectedArea,10,16,17,1
  1229                        	.member	Obsolete1,11,16,17,1
  1230                        	.member	WriteBuffer,12,16,17,1
  1231                        	.member	ReadBuffer,13,16,17,1
  1232                        	.member	Nop,14,16,17,1
  1233                        	.member	Obsolete2,15,16,17,1
  1234                        	.member	DownloadMicrocode,16,16,17,1
  1235                        	.member	DmaQueued,17,16,17,1
  1236                        	.member	Cfa,18,16,17,1
  1237                        	.member	AdvancedPm,19,16,17,1
  1238                        	.member	Msn,20,16,17,1
  1239                        	.member	PowerUpInStandby,21,16,17,1
  1240                        	.member	ManualPowerUp,22,16,17,1
  1241                        	.member	Reserved2,23,16,17,1
  1242                        	.member	SetMax,24,16,17,1
  1243                        	.member	Acoustics,25,16,17,1
  1244                        	.member	BigLba,26,16,17,1
  1245                        	.member	DeviceConfigOverlay,27,16,17,1
  1246                        	.member	FlushCache,28,16,17,1
  1247                        	.member	FlushCacheExt,29,16,17,1
  1248                        	.member	WordValid83,30,16,17,2
  1249                        	.member	SmartErrorLog,32,16,17,1
  1250                        	.member	SmartSelfTest,33,16,17,1
  1251                        	.member	MediaSerialNumber,34,16,17,1
  1252                        	.member	MediaCardPassThrough,35,16,17,1
  1253                        	.member	StreamingFeature,36,16,17,1
  1254                        	.member	GpLogging,37,16,17,1
  1255                        	.member	WriteFua,38,16,17,1
  1256                        	.member	WriteQueuedFua,39,16,17,1
  1257                        	.member	WWN64Bit,40,16,17,1
  1258                        	.member	URGReadStream,41,16,17,1
  1259                        	.member	URGWriteStream,42,16,17,1
  1260                        	.member	ReservedForTechReport,43,16,17,2
  1261                        	.member	IdleWithUnloadFeature,45,16,17,1
  1262                        	.member	WordValid,46,16,17,2
  1263                        	.eos
  1264                        	.stag	fake112_,48,112
  1265                        	.member	SmartCommands,0,16,17,1
  1266                        	.member	SecurityMode,1,16,17,1
  1267                        	.member	RemovableMediaFeature,2,16,17,1
  1268                        	.member	PowerManagement,3,16,17,1
  1269                        	.member	Reserved1,4,16,17,1
  1270                        	.member	WriteCache,5,16,17,1
  1271                        	.member	LookAhead,6,16,17,1
  1272                        	.member	ReleaseInterrupt,7,16,17,1
  1273                        	.member	ServiceInterrupt,8,16,17,1
  1274                        	.member	DeviceReset,9,16,17,1
  1275                        	.member	HostProtectedArea,10,16,17,1
  1276                        	.member	Obsolete1,11,16,17,1
  1277                        	.member	WriteBuffer,12,16,17,1
  1278                        	.member	ReadBuffer,13,16,17,1
  1279                        	.member	Nop,14,16,17,1
  Mon Aug  9 2021 16:52                                                Page 25


  1280                        	.member	Obsolete2,15,16,17,1
  1281                        	.member	DownloadMicrocode,16,16,17,1
  1282                        	.member	DmaQueued,17,16,17,1
  1283                        	.member	Cfa,18,16,17,1
  1284                        	.member	AdvancedPm,19,16,17,1
  1285                        	.member	Msn,20,16,17,1
  1286                        	.member	PowerUpInStandby,21,16,17,1
  1287                        	.member	ManualPowerUp,22,16,17,1
  1288                        	.member	Reserved2,23,16,17,1
  1289                        	.member	SetMax,24,16,17,1
  1290                        	.member	Acoustics,25,16,17,1
  1291                        	.member	BigLba,26,16,17,1
  1292                        	.member	DeviceConfigOverlay,27,16,17,1
  1293                        	.member	FlushCache,28,16,17,1
  1294                        	.member	FlushCacheExt,29,16,17,1
  1295                        	.member	Resrved3,30,16,17,1
  1296                        	.member	Words119_120Valid,31,16,17,1
  1297                        	.member	SmartErrorLog,32,16,17,1
  1298                        	.member	SmartSelfTest,33,16,17,1
  1299                        	.member	MediaSerialNumber,34,16,17,1
  1300                        	.member	MediaCardPassThrough,35,16,17,1
  1301                        	.member	StreamingFeature,36,16,17,1
  1302                        	.member	GpLogging,37,16,17,1
  1303                        	.member	WriteFua,38,16,17,1
  1304                        	.member	WriteQueuedFua,39,16,17,1
  1305                        	.member	WWN64Bit,40,16,17,1
  1306                        	.member	URGReadStream,41,16,17,1
  1307                        	.member	URGWriteStream,42,16,17,1
  1308                        	.member	ReservedForTechReport,43,16,17,2
  1309                        	.member	IdleWithUnloadFeature,45,16,17,1
  1310                        	.member	Reserved4,46,16,17,2
  1311                        	.eos
  1312                        	.stag	fake113_,16,113
  1313                        	.member	TimeRequired,0,16,17,15
  1314                        	.member	ExtendedTimeReported,15,16,17,1
  1315                        	.eos
  1316                        	.stag	fake114_,16,114
  1317                        	.member	TimeRequired,0,16,17,15
  1318                        	.member	ExtendedTimeReported,15,16,17,1
  1319                        	.eos
  1320                        	.stag	fake115_,16,115
  1321                        	.member	LogicalSectorsPerPhysicalSector,0,16,17,
                    4
  1322                        	.member	Reserved0,4,16,17,8
  1323                        	.member	LogicalSectorLongerThan256Words,12,16,17
                    ,1
  1324                        	.member	MultipleLogicalSectorsPerPhysicalSector,
                    13,16,17,1
  1325                        	.member	Reserved1,14,16,17,2
  1326                        	.eos
  1327                        	.stag	fake116_,16,116
  1328                        	.member	ReservedForDrqTechnicalReport,0,16,17,1
  1329                        	.member	WriteReadVerify,1,16,17,1
  1330                        	.member	WriteUncorrectableExt,2,16,17,1
  1331                        	.member	ReadWriteLogDmaExt,3,16,17,1
  1332                        	.member	DownloadMicrocodeMode3,4,16,17,1
  1333                        	.member	FreefallControl,5,16,17,1
  1334                        	.member	SenseDataReporting,6,16,17,1
  Mon Aug  9 2021 16:52                                                Page 26


  1335                        	.member	ExtendedPowerConditions,7,16,17,1
  1336                        	.member	Reserved0,8,16,17,6
  1337                        	.member	WordValid,14,16,17,2
  1338                        	.eos
  1339                        	.stag	fake117_,16,117
  1340                        	.member	ReservedForDrqTechnicalReport,0,16,17,1
  1341                        	.member	WriteReadVerify,1,16,17,1
  1342                        	.member	WriteUncorrectableExt,2,16,17,1
  1343                        	.member	ReadWriteLogDmaExt,3,16,17,1
  1344                        	.member	DownloadMicrocodeMode3,4,16,17,1
  1345                        	.member	FreefallControl,5,16,17,1
  1346                        	.member	SenseDataReporting,6,16,17,1
  1347                        	.member	ExtendedPowerConditions,7,16,17,1
  1348                        	.member	Reserved0,8,16,17,6
  1349                        	.member	Reserved1,14,16,17,2
  1350                        	.eos
  1351                        	.stag	fake118_,16,118
  1352                        	.member	SecuritySupported,0,16,17,1
  1353                        	.member	SecurityEnabled,1,16,17,1
  1354                        	.member	SecurityLocked,2,16,17,1
  1355                        	.member	SecurityFrozen,3,16,17,1
  1356                        	.member	SecurityCountExpired,4,16,17,1
  1357                        	.member	EnhancedSecurityEraseSupported,5,16,17,1
  1358                        	.member	Reserved0,6,16,17,2
  1359                        	.member	SecurityLevel,8,16,17,1
  1360                        	.member	Reserved1,9,16,17,7
  1361                        	.eos
  1362                        	.stag	fake119_,16,119
  1363                        	.member	MaximumCurrentInMA,0,16,17,12
  1364                        	.member	CfaPowerMode1Disabled,12,16,17,1
  1365                        	.member	CfaPowerMode1Required,13,16,17,1
  1366                        	.member	Reserved0,14,16,17,1
  1367                        	.member	Word160Supported,15,16,17,1
  1368                        	.eos
  1369                        	.stag	fake120_,16,120
  1370                        	.member	SupportsTrim,0,16,17,1
  1371                        	.member	Reserved0,1,16,17,15
  1372                        	.eos
  1373                        	.stag	fake121_,16,121
  1374                        	.member	Supported,0,16,17,1
  1375                        	.member	Reserved0,1,16,17,1
  1376                        	.member	WriteSameSuported,2,16,17,1
  1377                        	.member	ErrorRecoveryControlSupported,3,16,17,1
  1378                        	.member	FeatureControlSuported,4,16,17,1
  1379                        	.member	DataTablesSuported,5,16,17,1
  1380                        	.member	Reserved1,6,16,17,6
  1381                        	.member	VendorSpecific,12,16,17,4
  1382                        	.eos
  1383                        	.stag	fake122_,16,122
  1384                        	.member	AlignmentOfLogicalWithinPhysical,0,16,17
                    ,14
  1385                        	.member	Word209Supported,14,16,17,1
  1386                        	.member	Reserved0,15,16,17,1
  1387                        	.eos
  1388                        	.stag	fake123_,16,123
  1389                        	.member	NVCachePowerModeEnabled,0,16,17,1
  1390                        	.member	Reserved0,1,16,17,3
  1391                        	.member	NVCacheFeatureSetEnabled,4,16,17,1
  Mon Aug  9 2021 16:52                                                Page 27


  1392                        	.member	Reserved1,5,16,17,3
  1393                        	.member	NVCachePowerModeVersion,8,16,17,4
  1394                        	.member	NVCacheFeatureSetVersion,12,16,17,4
  1395                        	.eos
  1396                        	.stag	fake124_,16,124
  1397                        	.member	NVCacheEstimatedTimeToSpinUpInSeconds,0,
                    14,8,8
  1398                        	.member	Reserved,8,14,8,8
  1399                        	.eos
  1400                        	.stag	fake125_,16,125
  1401                        	.member	MajorVersion,0,16,17,12
  1402                        	.member	TransportType,12,16,17,4
  1403                        	.eos
  1404                        	.stag	_IDENTIFY_DEVICE_DATA,4096,126
  1405                        	.member	GeneralConfiguration,0,10,8,16,104
  1406                        	.member	NumCylinders,16,16,8,16
  1407                        	.member	SpecificConfiguration,32,16,8,16
  1408                        	.member	NumHeads,48,16,8,16
  1409                        	.member	Retired1Bytes,64,110,8,0,4
  1410                        	.member	NumSectorsPerTrack,96,16,8,16
  1411                        	.member	VendorUnique1Bytes,112,110,8,0,6
  1412                        	.member	SerialNumber,160,110,8,0,20
  1413                        	.member	Retired2,320,112,8,0,2
  1414                        	.member	Obsolete1,352,16,8,16
  1415                        	.member	FirmwareRevision,368,110,8,0,8
  1416                        	.member	ModelNumber,432,110,8,0,40
  1417                        	.member	MaximumBlockTransfer,752,14,8,8
  1418                        	.member	VendorUnique2,760,14,8,8
  1419                        	.member	TrustedComputing,768,10,8,16,105
  1420                        	.member	Capabilities,784,10,8,32,106
  1421                        	.member	ObsoleteWords51,816,112,8,0,2
  1422                        	.member	TranslationFieldsValid,848,16,17,3
  1423                        	.member	Reserved3,851,16,17,5
  1424                        	.member	FreeFallControlSensitivity,856,16,17,8
  1425                        	.member	NumberOfCurrentCylinders,864,16,8,16
  1426                        	.member	NumberOfCurrentHeads,880,16,8,16
  1427                        	.member	CurrentSectorsPerTrack,896,16,8,16
  1428                        	.member	CurrentSectorCapacity,912,18,8,32
  1429                        	.member	CurrentMultiSectorSetting,944,14,8,8
  1430                        	.member	MultiSectorSettingValid,952,14,17,1
  1431                        	.member	ReservedByte59,953,14,17,3
  1432                        	.member	SanitizeFeatureSupported,956,14,17,1
  1433                        	.member	CryptoScrambleExtCommandSupported,957,14
                    ,17,1
  1434                        	.member	OverwriteExtCommandSupported,958,14,17,1
  1435                        	.member	BlockEraseExtCommandSupported,959,14,17,
                    1
  1436                        	.member	UserAddressableSectors,960,18,8,32
  1437                        	.member	ObsoleteWord62,992,16,8,16
  1438                        	.member	MultiWordDMASupport,1008,16,17,8
  1439                        	.member	MultiWordDMAActive,1016,16,17,8
  1440                        	.member	AdvancedPIOModes,1024,16,17,8
  1441                        	.member	ReservedByte64,1032,16,17,8
  1442                        	.member	MinimumMWXferCycleTime,1040,16,8,16
  1443                        	.member	RecommendedMWXferCycleTime,1056,16,8,16
  1444                        	.member	MinimumPIOCycleTime,1072,16,8,16
  1445                        	.member	MinimumPIOCycleTimeIORDY,1088,16,8,16
  1446                        	.member	AdditionalSupported,1104,10,8,16,107
  Mon Aug  9 2021 16:52                                                Page 28


  1447                        	.member	ReservedWords70,1120,112,8,0,5
  1448                        	.member	QueueDepth,1200,16,17,5
  1449                        	.member	ReservedWord75,1205,16,17,11
  1450                        	.member	SerialAtaCapabilities,1216,10,8,32,108
  1451                        	.member	SerialAtaFeaturesSupported,1248,10,8,16,
                    109
  1452                        	.member	SerialAtaFeaturesEnabled,1264,10,8,16,11
                    0
  1453                        	.member	MajorRevision,1280,16,8,16
  1454                        	.member	MinorRevision,1296,16,8,16
  1455                        	.member	CommandSetSupport,1312,10,8,48,111
  1456                        	.member	CommandSetActive,1360,10,8,48,112
  1457                        	.member	UltraDMASupport,1408,16,17,8
  1458                        	.member	UltraDMAActive,1416,16,17,8
  1459                        	.member	NormalSecurityEraseUnit,1424,10,8,16,113
  1460                        	.member	EnhancedSecurityEraseUnit,1440,10,8,16,1
                    14
  1461                        	.member	CurrentAPMLevel,1456,16,17,8
  1462                        	.member	ReservedWord91,1464,16,17,8
  1463                        	.member	MasterPasswordID,1472,16,8,16
  1464                        	.member	HardwareResetResult,1488,16,8,16
  1465                        	.member	CurrentAcousticValue,1504,16,17,8
  1466                        	.member	RecommendedAcousticValue,1512,16,17,8
  1467                        	.member	StreamMinRequestSize,1520,16,8,16
  1468                        	.member	StreamingTransferTimeDMA,1536,16,8,16
  1469                        	.member	StreamingAccessLatencyDMAPIO,1552,16,8,1
                    6
  1470                        	.member	StreamingPerfGranularity,1568,18,8,32
  1471                        	.member	Max48BitLBA,1600,114,8,0,2
  1472                        	.member	StreamingTransferTime,1664,16,8,16
  1473                        	.member	DsmCap,1680,16,8,16
  1474                        	.member	PhysicalLogicalSectorSize,1696,10,8,16,1
                    15
  1475                        	.member	InterSeekDelay,1712,16,8,16
  1476                        	.member	WorldWideName,1728,112,8,0,4
  1477                        	.member	ReservedForWorldWideName128,1792,112,8,0
                    ,4
  1478                        	.member	ReservedForTlcTechnicalReport,1856,16,8,
                    16
  1479                        	.member	WordsPerLogicalSector,1872,112,8,0,2
  1480                        	.member	CommandSetSupportExt,1904,10,8,16,116
  1481                        	.member	CommandSetActiveExt,1920,10,8,16,117
  1482                        	.member	ReservedForExpandedSupportandActive,1936
                    ,112,8,0,6
  1483                        	.member	MsnSupport,2032,16,17,2
  1484                        	.member	ReservedWord127,2034,16,17,14
  1485                        	.member	SecurityStatus,2048,10,8,16,118
  1486                        	.member	ReservedWord129,2064,112,8,0,31
  1487                        	.member	CfaPowerMode1,2560,10,8,16,119
  1488                        	.member	ReservedForCfaWord161,2576,112,8,0,7
  1489                        	.member	NominalFormFactor,2688,16,17,4
  1490                        	.member	ReservedWord168,2692,16,17,12
  1491                        	.member	DataSetManagementFeature,2704,10,8,16,12
                    0
  1492                        	.member	AdditionalProductID,2720,112,8,0,4
  1493                        	.member	ReservedForCfaWord174,2784,112,8,0,2
  1494                        	.member	CurrentMediaSerialNumber,2816,112,8,0,30
  1495                        	.member	SCTCommandTransport,3296,10,8,16,121
  Mon Aug  9 2021 16:52                                                Page 29


  1496                        	.member	ReservedWord207,3312,112,8,0,2
  1497                        	.member	BlockAlignment,3344,10,8,16,122
  1498                        	.member	WriteReadVerifySectorCountMode3Only,3360
                    ,112,8,0,2
  1499                        	.member	WriteReadVerifySectorCountMode2Only,3392
                    ,112,8,0,2
  1500                        	.member	NVCacheCapabilities,3424,10,8,16,123
  1501                        	.member	NVCacheSizeLSW,3440,16,8,16
  1502                        	.member	NVCacheSizeMSW,3456,16,8,16
  1503                        	.member	NominalMediaRotationRate,3472,16,8,16
  1504                        	.member	ReservedWord218,3488,16,8,16
  1505                        	.member	NVCacheOptions,3504,10,8,16,124
  1506                        	.member	WriteReadVerifySectorCountMode,3520,16,1
                    7,8
  1507                        	.member	ReservedWord220,3528,16,17,8
  1508                        	.member	ReservedWord221,3536,16,8,16
  1509                        	.member	TransportMajorVersion,3552,10,8,16,125
  1510                        	.member	TransportMinorVersion,3568,16,8,16
  1511                        	.member	ReservedWord224,3584,112,8,0,6
  1512                        	.member	ExtendedNumberOfUserAddressableSectors,3
                    680,114,8,0,2
  1513                        	.member	MinBlocksPerDownloadMicrocodeMode03,3744
                    ,16,8,16
  1514                        	.member	MaxBlocksPerDownloadMicrocodeMode03,3760
                    ,16,8,16
  1515                        	.member	ReservedWord236,3776,112,8,0,19
  1516                        	.member	Signature,4080,16,17,8
  1517                        	.member	CheckSum,4088,16,17,8
  1518                        	.eos
  1519                        	.stag	_FXDosDevice,5744,127
  1520                        	.member	type,0,14,8,8
  1521                        	.member	initialized,8,14,8,8
  1522                        	.member	devdata,16,129,8,32
  1523                        	.member	devstatus,48,14,8,8
  1524                        	.member	bootSector,56,10,8,928,97
  1525                        	.member	partitionTable,984,10,8,128,98
  1526                        	.member	fileAllocationTable,1112,110,8,0,512
  1527                        	.member	bsOffset,5208,18,8,32
  1528                        	.member	rootDirSectors,5240,18,8,32
  1529                        	.member	root_entry_count,5272,5,8,16
  1530                        	.member	rootEntriesPerPage,5288,5,8,16
  1531                        	.member	sectors_per_cluster,5304,5,8,16
  1532                        	.member	firstDataSector,5320,18,8,32
  1533                        	.member	fatTableOffset,5352,18,8,32
  1534                        	.member	volume_name,5384,110,8,0,12
  1535                        	.member	root_volume_name,5480,110,8,0,12
  1536                        	.member	errorCode,5576,14,8,8
  1537                        	.member	pfInit,5584,641,8,32
  1538                        	.member	pfReset,5616,641,8,32
  1539                        	.member	pfUninit,5648,641,8,32
  1540                        	.member	pfReader,5680,654,8,32
  1541                        	.member	pfWriter,5712,654,8,32
  1542                        	.eos
  1543                        	.utag	item,32,128
  1544                        	.member	dir,0,138,11,32,87
  1545                        	.member	file,0,138,11,32,86
  1546                        	.member	fileInfo,0,138,11,32,88
  1547                        	.eos
  Mon Aug  9 2021 16:52                                                Page 30


  1548                        	.stag	_dos_handle,80,129
  1549                        	.member	fs,0,138,8,32,84
  1550                        	.member	fr,32,5,8,16
  1551                        	.member	path,48,142,8,32
  1552                        	.eos
  1553                        	.stag	fx_file,112,130
  1554                        	.member	fs,0,138,8,32,84
  1555                        	.member	fileInfo,32,138,8,32,88
  1556                        	.member	f,64,138,8,32,86
  1557                        	.member	fr,96,5,8,16
  1558                        	.eos
  1559                        	.line	812
  1560                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\drivers\DRIVER_FMXIDE.c",2
  1561                        ;#include "fxmemorymanager.h"
  1562                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxmemorymanager.h",0
  1563                        	.line	129
  1564                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\drivers\DRIVER_FMXIDE.c",3
  1565                        ;#include "ff/ff.h";
  1566                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\ff/ff.h",0
  1567                        	.line	429
  1568                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\drivers\DRIVER_FMXIDE.c",4
  1569                        ;//#include "ata.h"
  1570                        ;
  1571                        ;
  1572                        ;//static CHAR szIndentity[512];
  1573                        ;
  1574                        ;//PARTITION VolToPart[] = {{0,1}};
  1575                        ;
  1576                        ;#include "drivers/DRIVER.h"
  1577                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\drivers/DRIVER.h",0
  1578                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxos.h",0
  1579                        	.line	30
  1580                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\drivers/DRIVER.h",5
  1581                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxmemorymanager.h",0
  1582                        	.line	129
  1583                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\drivers/DRIVER.h",6
  1584                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxc256u.h",0
  1585                        	.line	1960
  1586                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\drivers/DRIVER.h",104
  1587                        	.line	113
  1588                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\drivers\DRIVER_FMXIDE.c",12
  1589                        ;#include "drivers/DRIVER_IDE.h"
  1590                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\drivers/DRIVER_IDE.h",0
  1591                        IDES04	section	offset $04:17C0
  Mon Aug  9 2021 16:52                                                Page 31


  1592 04:17C0:              	ends
  1593                        	data
  1594                        ~~_k_driver_base:
  1595 00:0000: C0 17 04 00  	dl	$417C0
  1596 00:0004:              	ends
  1597                        	.line	7
  1598                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\drivers\DRIVER_FMXIDE.c",13
  1599                        ;//#pragma section CODE=FMXIDE,offset $08:B000
  1600                        ;
  1601                        ;static UCHAR k_hd_initialize(void);
  1602                        ;static UCHAR k_hd_uninitialize(void);
  1603                        ;static UCHAR k_hd_read_sector(unsigned long offse
                    t,LPCHAR receiveBuffer);
  1604                        ;static UCHAR k_hd_write_sector(unsigned long offs
                    et,LPCHAR receiveBuffer);
  1605                        ;static UCHAR k_hd_send_command(UINT command,LPVOI
                    D buffer);
  1606                        ;
  1607                        ;static FX_BLOCK_DEVICE_DRIVER DRIVER_FMXIDE = {"D
                    RIVER_FMXIDE\0",
  1608                        	data
  1609                        ~~DRIVER_FMXIDE:
  1610 00:0004: 44 52 49 56  	db	$44,$52,$49,$56,$45,$52,$5F,$46,$4D,$58
       00:0008: 45 52 5F 46 
       00:000C: 4D 58 
  1611 00:000E: 49 44 45 00  	db	$49,$44,$45,$0,$0
       00:0012: 00 
  1612 00:0013:              	ds	17
  1613                        ;							
                    				"v1.0.0\0",
  1614 00:0024: 76 31 2E 30  	db	$76,$31,$2E,$30,$2E,$30,$0,$0
       00:0028: 2E 30 00 00 
  1615 00:002C:              	ds	8
  1616                        ;							
                    				"A\0", //"C\0",
  1617 00:0034: 41 00 00     	db	$41,$0,$0
  1618 00:0037:              	ds	5
  1619                        ;							
                    				"1\0", // "4\0",
  1620 00:003C: 31 00 00     	db	$31,$0,$0
  1621 00:003F:              	ds	5
  1622                        ;							
                    				DRIVER_TYPE_IDE,
  1623 00:0044: 08           	db	$8
  1624                        ;							
                    				"HD:\0",
  1625 00:0045: 48 44 3A 00  	db	$48,$44,$3A,$0,$0
       00:0049: 00 
  1626 00:004A:              	ds	1
  1627                        ;							
                    				NOIRQ,
  1628 00:004B: FF FF        	dw	$FFFF
  1629                        ;							
                    				NULL,
  1630 00:004D: 00 00 00 00  	dl	$0
  1631                        ;							
                    				NULL,
  Mon Aug  9 2021 16:52                                                Page 32


  1632 00:0051: 00 00 00 00  	dl	$0
  1633                        ;							
                    				k_hd_initialize,
  1634 00:0055: D0 1C 04 00  	dl	~~k_hd_initialize
  1635                        ;							
                    				k_hd_read_sector,
  1636 00:0059: 6E 1A 04 00  	dl	~~k_hd_read_sector
  1637                        ;							
                    				k_hd_write_sector,
  1638 00:005D: C4 1B 04 00  	dl	~~k_hd_write_sector
  1639                        ;							
                    				NULL,
  1640 00:0061: 00 00 00 00  	dl	$0
  1641                        ;							
                    				k_hd_uninitialize
  1642                        ;							
                    	          };
  1643 00:0065: 2D 1D 04 00  	dl	~~k_hd_uninitialize
  1644 00:0069:              	ends
  1645                        ;
  1646                        ;PFX_DEVICE_DRIVER DEVICE_HD = &DRIVER_FMXIDE;
  1647                        	data
  1648                        	xdef	~~DEVICE_HD
  1649                        ~~DEVICE_HD:
  1650 00:0069: xx xx xx xx  	dl	~~DRIVER_FMXIDE
  1651 00:006D:              	ends
  1652                        ;
  1653                        ;static PFX_DEVICE_DRIVER f_get_driver(LPCSTR majo
                    r,LPCSTR minor)
  1654                        ;{
  1655                        	.line	40
  1656                        	.line	41
  1657                        	IDES04
  1658                        	func
  1659                        	.function	41
  1660                        ~~f_get_driver:
  1661                        	longa	on
  1662                        	longi	on
  1663 04:17C0: 3B           	tsc
  1664 04:17C1: 38           	sec
  1665 04:17C2: E9 04 00     	sbc	#L2
  1666 04:17C5: 1B           	tcs
  1667 04:17C6: 0B           	phd
  1668 04:17C7: 5B           	tcd
  1669             00000004   major_0	set	4
  1670             00000008   minor_0	set	8
  1671                        	.block	41
  1672                        ;	return &DRIVER_FMXIDE;
  1673                        	.sym	major,4,142,6,32
  1674                        	.sym	minor,8,142,6,32
  1675                        	.line	42
  1676 04:17C8: A9 xx xx     	lda	#<~~DRIVER_FMXIDE
  1677 04:17CB: 85 01        	sta	<R0
  1678                        	xref	_BEG_DATA
  1679 04:17CD: A9 xx xx     	lda	#_BEG_DATA>>16
  1680 04:17D0: 85 03        	sta	<R0+2
  1681 04:17D2: A6 03        	ldx	<R0+2
  1682 04:17D4: A5 01        	lda	<R0
  Mon Aug  9 2021 16:52                                                Page 33


  1683                        L5:
  1684 04:17D6: A8           	tay
  1685 04:17D7: A5 06        	lda	<L2+2
  1686 04:17D9: 85 0E        	sta	<L2+2+8
  1687 04:17DB: A5 05        	lda	<L2+1
  1688 04:17DD: 85 0D        	sta	<L2+1+8
  1689 04:17DF: 2B           	pld
  1690 04:17E0: 3B           	tsc
  1691 04:17E1: 18           	clc
  1692 04:17E2: 69 0C 00     	adc	#L2+8
  1693 04:17E5: 1B           	tcs
  1694 04:17E6: 98           	tya
  1695 04:17E7: 6B           	rtl
  1696                        ;}
  1697                        	.line	43
  1698                        	.endblock	43
  1699             00000004   L2	equ	4
  1700             00000005   L3	equ	5
  1701 04:17E8:              	ends
  1702                        	efunc
  1703                        	.endfunc	43,5,4
  1704                        	.line	43
  1705                        ;
  1706                        ;static VOID k_drive_wait_drq(VOID)
  1707                        ;{
  1708                        	.line	45
  1709                        	.line	46
  1710                        	IDES04
  1711                        	func
  1712                        	.function	46
  1713                        ~~k_drive_wait_drq:
  1714                        	longa	on
  1715                        	longi	on
  1716 04:17E8: 3B           	tsc
  1717 04:17E9: 38           	sec
  1718 04:17EA: E9 04 00     	sbc	#L6
  1719 04:17ED: 1B           	tcs
  1720 04:17EE: 0B           	phd
  1721 04:17EF: 5B           	tcd
  1722                        	.block	46
  1723                        ;	while((IDE_CMD_STAT[0] & IDE_STAT_DRQ) != IDE_ST
                    AT_DRQ)
  1724                        	.line	47
  1725                        L10001:
  1726 04:17F0: AF 37 E8 AF  	lda	>11528247
  1727 04:17F4: 29 08 00     	and	#<$8
  1728 04:17F7: 85 01        	sta	<R0
  1729 04:17F9: A5 01        	lda	<R0
  1730 04:17FB: C9 08 00     	cmp	#<$8
  1731 04:17FE: D0 03        	bne	L9
  1732 04:1800: 82 03 00     	brl	L10002
  1733                        L9:
  1734                        ;	{
  1735                        	.line	48
  1736                        ;
  1737                        ;	}
  1738                        	.line	50
  1739 04:1803: 82 EA FF     	brl	L10001
  Mon Aug  9 2021 16:52                                                Page 34


  1740                        L10002:
  1741                        ;
  1742                        ;	return;
  1743                        	.line	52
  1744                        L10:
  1745 04:1806: 2B           	pld
  1746 04:1807: 3B           	tsc
  1747 04:1808: 18           	clc
  1748 04:1809: 69 04 00     	adc	#L6
  1749 04:180C: 1B           	tcs
  1750 04:180D: 6B           	rtl
  1751                        ;}
  1752                        	.line	53
  1753                        	.endblock	53
  1754             00000004   L6	equ	4
  1755             00000005   L7	equ	5
  1756 04:180E:              	ends
  1757                        	efunc
  1758                        	.endfunc	53,5,4
  1759                        	.line	53
  1760                        ;
  1761                        ;static UINT k_drive_wait_dsc(VOID)
  1762                        ;{
  1763                        	.line	55
  1764                        	.line	56
  1765                        	IDES04
  1766                        	func
  1767                        	.function	56
  1768                        ~~k_drive_wait_dsc:
  1769                        	longa	on
  1770                        	longi	on
  1771 04:180E: 3B           	tsc
  1772 04:180F: 38           	sec
  1773 04:1810: E9 05 00     	sbc	#L11
  1774 04:1813: 1B           	tcs
  1775 04:1814: 0B           	phd
  1776 04:1815: 5B           	tcd
  1777                        	.block	56
  1778                        ;	UCHAR code = 0;
  1779                        ;
  1780                        ;	code = IDE_CMD_STAT[0];
  1781             00000000   code_1	set	0
  1782                        	.sym	code,0,14,1,8
  1783 04:1816: E2 20        	sep	#$20
  1784                        	longa	off
  1785 04:1818: 64 05        	stz	<L12+code_1
  1786 04:181A: C2 20        	rep	#$20
  1787                        	longa	on
  1788                        	.line	59
  1789 04:181C: E2 20        	sep	#$20
  1790                        	longa	off
  1791 04:181E: AF 37 E8 AF  	lda	>11528247
  1792 04:1822: 85 05        	sta	<L12+code_1
  1793 04:1824: C2 20        	rep	#$20
  1794                        	longa	on
  1795                        ;	while((code & IDE_STAT_DSC) != IDE_STAT_DSC)
  1796                        	.line	60
  1797                        L10003:
  Mon Aug  9 2021 16:52                                                Page 35


  1798 04:1826: A5 05        	lda	<L12+code_1
  1799 04:1828: 29 10 00     	and	#<$10
  1800 04:182B: 85 01        	sta	<R0
  1801 04:182D: A5 01        	lda	<R0
  1802 04:182F: C9 10 00     	cmp	#<$10
  1803 04:1832: D0 03        	bne	L14
  1804 04:1834: 82 27 00     	brl	L10004
  1805                        L14:
  1806                        ;	{
  1807                        	.line	61
  1808                        ;		if(code & IDE_STAT_DF)
  1809                        	.line	62
  1810                        ;		{
  1811 04:1837: E2 20        	sep	#$20
  1812                        	longa	off
  1813 04:1839: A5 05        	lda	<L12+code_1
  1814 04:183B: 29 20        	and	#<$20
  1815 04:183D: C2 20        	rep	#$20
  1816                        	longa	on
  1817 04:183F: D0 03        	bne	L15
  1818 04:1841: 82 0D 00     	brl	L10005
  1819                        L15:
  1820                        	.line	63
  1821                        ;			//DebugHex("k_drive_wait_dsc:err
                    or:",code);
  1822                        ;			return IDE_STAT_DF;
  1823                        	.line	65
  1824 04:1844: A9 20 00     	lda	#$20
  1825                        L16:
  1826 04:1847: A8           	tay
  1827 04:1848: 2B           	pld
  1828 04:1849: 3B           	tsc
  1829 04:184A: 18           	clc
  1830 04:184B: 69 05 00     	adc	#L11
  1831 04:184E: 1B           	tcs
  1832 04:184F: 98           	tya
  1833 04:1850: 6B           	rtl
  1834                        ;		}
  1835                        	.line	66
  1836                        ;		code = IDE_CMD_STAT[0];
  1837                        L10005:
  1838                        	.line	67
  1839 04:1851: E2 20        	sep	#$20
  1840                        	longa	off
  1841 04:1853: AF 37 E8 AF  	lda	>11528247
  1842 04:1857: 85 05        	sta	<L12+code_1
  1843 04:1859: C2 20        	rep	#$20
  1844                        	longa	on
  1845                        ;	}
  1846                        	.line	68
  1847 04:185B: 82 C8 FF     	brl	L10003
  1848                        L10004:
  1849                        ;
  1850                        ;	return 0;
  1851                        	.line	70
  1852 04:185E: A9 00 00     	lda	#$0
  1853 04:1861: 82 E3 FF     	brl	L16
  1854                        ;}
  Mon Aug  9 2021 16:52                                                Page 36


  1855                        	.line	71
  1856                        	.endblock	71
  1857             00000005   L11	equ	5
  1858             00000005   L12	equ	5
  1859 04:1864:              	ends
  1860                        	efunc
  1861                        	.endfunc	71,5,5
  1862                        	.line	71
  1863                        ;
  1864                        ;static VOID k_drive_ready(VOID)
  1865                        ;{
  1866                        	.line	73
  1867                        	.line	74
  1868                        	IDES04
  1869                        	func
  1870                        	.function	74
  1871                        ~~k_drive_ready:
  1872                        	longa	on
  1873                        	longi	on
  1874 04:1864: 3B           	tsc
  1875 04:1865: 38           	sec
  1876 04:1866: E9 04 00     	sbc	#L17
  1877 04:1869: 1B           	tcs
  1878 04:186A: 0B           	phd
  1879 04:186B: 5B           	tcd
  1880                        	.block	74
  1881                        ;	//DebugOut("***k_drive_ready\r\n");
  1882                        ;
  1883                        ;	while((IDE_CMD_STAT[0] & IDE_STAT_DRDY) == IDE_S
                    TAT_DRDY);
  1884                        	.line	77
  1885                        L10006:
  1886 04:186C: AF 37 E8 AF  	lda	>11528247
  1887 04:1870: 29 40 00     	and	#<$40
  1888 04:1873: 85 01        	sta	<R0
  1889 04:1875: A5 01        	lda	<R0
  1890 04:1877: C9 40 00     	cmp	#<$40
  1891 04:187A: F0 03        	beq	L20
  1892 04:187C: 82 03 00     	brl	L10007
  1893                        L20:
  1894                        	.line	77
  1895 04:187F: 82 EA FF     	brl	L10006
  1896                        L10007:
  1897                        ;
  1898                        ;	return;
  1899                        	.line	79
  1900                        L21:
  1901 04:1882: 2B           	pld
  1902 04:1883: 3B           	tsc
  1903 04:1884: 18           	clc
  1904 04:1885: 69 04 00     	adc	#L17
  1905 04:1888: 1B           	tcs
  1906 04:1889: 6B           	rtl
  1907                        ;}
  1908                        	.line	80
  1909                        	.endblock	80
  1910             00000004   L17	equ	4
  1911             00000005   L18	equ	5
  Mon Aug  9 2021 16:52                                                Page 37


  1912 04:188A:              	ends
  1913                        	efunc
  1914                        	.endfunc	80,5,4
  1915                        	.line	80
  1916                        ;
  1917                        ;static UINT k_drive_not_busy_or_drq(VOID)
  1918                        ;{
  1919                        	.line	82
  1920                        	.line	83
  1921                        	IDES04
  1922                        	func
  1923                        	.function	83
  1924                        ~~k_drive_not_busy_or_drq:
  1925                        	longa	on
  1926                        	longi	on
  1927 04:188A: 3B           	tsc
  1928 04:188B: 38           	sec
  1929 04:188C: E9 02 00     	sbc	#L22
  1930 04:188F: 1B           	tcs
  1931 04:1890: 0B           	phd
  1932 04:1891: 5B           	tcd
  1933                        	.block	83
  1934                        ;	BYTE 	code = 0;
  1935                        ;	UCHAR 	safety = 8096;
  1936                        ;	//DebugOut("***k_drive_not_busy_or_drq\r\n");
  1937                        ;
  1938                        ;	code = IDE_CMD_STAT[0];
  1939             00000000   code_1	set	0
  1940             00000001   safety_1	set	1
  1941                        	.sym	code,0,14,1,8
  1942                        	.sym	safety,1,14,1,8
  1943 04:1892: E2 20        	sep	#$20
  1944                        	longa	off
  1945 04:1894: 64 01        	stz	<L23+code_1
  1946 04:1896: C2 20        	rep	#$20
  1947                        	longa	on
  1948 04:1898: E2 20        	sep	#$20
  1949                        	longa	off
  1950 04:189A: A9 A0        	lda	#$a0
  1951 04:189C: 85 02        	sta	<L23+safety_1
  1952 04:189E: C2 20        	rep	#$20
  1953                        	longa	on
  1954                        	.line	88
  1955 04:18A0: E2 20        	sep	#$20
  1956                        	longa	off
  1957 04:18A2: AF 37 E8 AF  	lda	>11528247
  1958 04:18A6: 85 01        	sta	<L23+code_1
  1959 04:18A8: C2 20        	rep	#$20
  1960                        	longa	on
  1961                        ;	while((code & (IDE_STAT_BSY | IDE_STAT_DRQ)) != 
                    0)
  1962                        	.line	89
  1963                        L10008:
  1964 04:18AA: E2 20        	sep	#$20
  1965                        	longa	off
  1966 04:18AC: A5 01        	lda	<L23+code_1
  1967 04:18AE: 29 88        	and	#<$88
  1968 04:18B0: C2 20        	rep	#$20
  Mon Aug  9 2021 16:52                                                Page 38


  1969                        	longa	on
  1970 04:18B2: D0 03        	bne	L25
  1971 04:18B4: 82 2F 00     	brl	L10009
  1972                        L25:
  1973                        ;	{
  1974                        	.line	90
  1975                        ;		code = IDE_CMD_STAT[0];
  1976                        	.line	91
  1977 04:18B7: E2 20        	sep	#$20
  1978                        	longa	off
  1979 04:18B9: AF 37 E8 AF  	lda	>11528247
  1980 04:18BD: 85 01        	sta	<L23+code_1
  1981 04:18BF: C2 20        	rep	#$20
  1982                        	longa	on
  1983                        ;		//DebugHex("***k_drive_ready_not_busy:",
                    code);
  1984                        ;		safety--;
  1985                        	.line	93
  1986 04:18C1: E2 20        	sep	#$20
  1987                        	longa	off
  1988 04:18C3: C6 02        	dec	<L23+safety_1
  1989 04:18C5: C2 20        	rep	#$20
  1990                        	longa	on
  1991                        ;		if(safety < 1)
  1992                        	.line	94
  1993                        ;		{
  1994 04:18C7: E2 20        	sep	#$20
  1995                        	longa	off
  1996 04:18C9: A5 02        	lda	<L23+safety_1
  1997 04:18CB: C9 01        	cmp	#<$1
  1998 04:18CD: C2 20        	rep	#$20
  1999                        	longa	on
  2000 04:18CF: 90 03        	bcc	L26
  2001 04:18D1: 82 0F 00     	brl	L10010
  2002                        L26:
  2003                        	.line	95
  2004                        ;			//DebugHex("***k_drive_ready_not
                    _busy abort:",code);
  2005                        ;			return code;
  2006                        	.line	97
  2007 04:18D4: A5 01        	lda	<L23+code_1
  2008 04:18D6: 29 FF 00     	and	#$ff
  2009                        L27:
  2010 04:18D9: A8           	tay
  2011 04:18DA: 2B           	pld
  2012 04:18DB: 3B           	tsc
  2013 04:18DC: 18           	clc
  2014 04:18DD: 69 02 00     	adc	#L22
  2015 04:18E0: 1B           	tcs
  2016 04:18E1: 98           	tya
  2017 04:18E2: 6B           	rtl
  2018                        ;		}
  2019                        	.line	98
  2020                        ;	}
  2021                        L10010:
  2022                        	.line	99
  2023 04:18E3: 82 C4 FF     	brl	L10008
  2024                        L10009:
  Mon Aug  9 2021 16:52                                                Page 39


  2025                        ;
  2026                        ;	return 0;
  2027                        	.line	101
  2028 04:18E6: A9 00 00     	lda	#$0
  2029 04:18E9: 82 ED FF     	brl	L27
  2030                        ;}
  2031                        	.line	102
  2032                        	.endblock	102
  2033             00000002   L22	equ	2
  2034             00000001   L23	equ	1
  2035 04:18EC:              	ends
  2036                        	efunc
  2037                        	.endfunc	102,1,2
  2038                        	.line	102
  2039                        ;
  2040                        ;static UINT k_drive_ready_not_busy(VOID)
  2041                        ;{
  2042                        	.line	104
  2043                        	.line	105
  2044                        	IDES04
  2045                        	func
  2046                        	.function	105
  2047                        ~~k_drive_ready_not_busy:
  2048                        	longa	on
  2049                        	longi	on
  2050 04:18EC: 3B           	tsc
  2051 04:18ED: 38           	sec
  2052 04:18EE: E9 06 00     	sbc	#L28
  2053 04:18F1: 1B           	tcs
  2054 04:18F2: 0B           	phd
  2055 04:18F3: 5B           	tcd
  2056                        	.block	105
  2057                        ;	BYTE 	code = 0;
  2058                        ;	UCHAR 	safety = 8096;
  2059                        ;	//DebugOut("***k_drive_ready_not_busy\r\n");
  2060                        ;
  2061                        ;	code = IDE_CMD_STAT[0];
  2062             00000000   code_1	set	0
  2063             00000001   safety_1	set	1
  2064                        	.sym	code,0,14,1,8
  2065                        	.sym	safety,1,14,1,8
  2066 04:18F4: E2 20        	sep	#$20
  2067                        	longa	off
  2068 04:18F6: 64 05        	stz	<L29+code_1
  2069 04:18F8: C2 20        	rep	#$20
  2070                        	longa	on
  2071 04:18FA: E2 20        	sep	#$20
  2072                        	longa	off
  2073 04:18FC: A9 A0        	lda	#$a0
  2074 04:18FE: 85 06        	sta	<L29+safety_1
  2075 04:1900: C2 20        	rep	#$20
  2076                        	longa	on
  2077                        	.line	110
  2078 04:1902: E2 20        	sep	#$20
  2079                        	longa	off
  2080 04:1904: AF 37 E8 AF  	lda	>11528247
  2081 04:1908: 85 05        	sta	<L29+code_1
  2082 04:190A: C2 20        	rep	#$20
  Mon Aug  9 2021 16:52                                                Page 40


  2083                        	longa	on
  2084                        ;	while((code & (IDE_STAT_BSY | IDE_STAT_DRDY)) !=
                     IDE_STAT_DRDY)
  2085                        	.line	111
  2086                        L10011:
  2087 04:190C: A5 05        	lda	<L29+code_1
  2088 04:190E: 29 C0 00     	and	#<$c0
  2089 04:1911: 85 01        	sta	<R0
  2090 04:1913: A5 01        	lda	<R0
  2091 04:1915: C9 40 00     	cmp	#<$40
  2092 04:1918: D0 03        	bne	L31
  2093 04:191A: 82 2F 00     	brl	L10012
  2094                        L31:
  2095                        ;	{
  2096                        	.line	112
  2097                        ;		code = IDE_CMD_STAT[0];
  2098                        	.line	113
  2099 04:191D: E2 20        	sep	#$20
  2100                        	longa	off
  2101 04:191F: AF 37 E8 AF  	lda	>11528247
  2102 04:1923: 85 05        	sta	<L29+code_1
  2103 04:1925: C2 20        	rep	#$20
  2104                        	longa	on
  2105                        ;		//DebugHex("***k_drive_ready_not_busy:",
                    code);
  2106                        ;		safety--;
  2107                        	.line	115
  2108 04:1927: E2 20        	sep	#$20
  2109                        	longa	off
  2110 04:1929: C6 06        	dec	<L29+safety_1
  2111 04:192B: C2 20        	rep	#$20
  2112                        	longa	on
  2113                        ;		if(safety < 1)
  2114                        	.line	116
  2115                        ;		{
  2116 04:192D: E2 20        	sep	#$20
  2117                        	longa	off
  2118 04:192F: A5 06        	lda	<L29+safety_1
  2119 04:1931: C9 01        	cmp	#<$1
  2120 04:1933: C2 20        	rep	#$20
  2121                        	longa	on
  2122 04:1935: 90 03        	bcc	L32
  2123 04:1937: 82 0F 00     	brl	L10013
  2124                        L32:
  2125                        	.line	117
  2126                        ;			//DebugHex("***k_drive_ready_not
                    _busy abort:",code);
  2127                        ;			return code;
  2128                        	.line	119
  2129 04:193A: A5 05        	lda	<L29+code_1
  2130 04:193C: 29 FF 00     	and	#$ff
  2131                        L33:
  2132 04:193F: A8           	tay
  2133 04:1940: 2B           	pld
  2134 04:1941: 3B           	tsc
  2135 04:1942: 18           	clc
  2136 04:1943: 69 06 00     	adc	#L28
  2137 04:1946: 1B           	tcs
  Mon Aug  9 2021 16:52                                                Page 41


  2138 04:1947: 98           	tya
  2139 04:1948: 6B           	rtl
  2140                        ;		}
  2141                        	.line	120
  2142                        ;	}
  2143                        L10013:
  2144                        	.line	121
  2145 04:1949: 82 C0 FF     	brl	L10011
  2146                        L10012:
  2147                        ;
  2148                        ;	return 0;
  2149                        	.line	123
  2150 04:194C: A9 00 00     	lda	#$0
  2151 04:194F: 82 ED FF     	brl	L33
  2152                        ;}
  2153                        	.line	124
  2154                        	.endblock	124
  2155             00000006   L28	equ	6
  2156             00000005   L29	equ	5
  2157 04:1952:              	ends
  2158                        	efunc
  2159                        	.endfunc	124,5,6
  2160                        	.line	124
  2161                        ;
  2162                        ;static VOID k_drive_busy(VOID)
  2163                        ;{
  2164                        	.line	126
  2165                        	.line	127
  2166                        	IDES04
  2167                        	func
  2168                        	.function	127
  2169                        ~~k_drive_busy:
  2170                        	longa	on
  2171                        	longi	on
  2172 04:1952: 3B           	tsc
  2173 04:1953: 38           	sec
  2174 04:1954: E9 04 00     	sbc	#L34
  2175 04:1957: 1B           	tcs
  2176 04:1958: 0B           	phd
  2177 04:1959: 5B           	tcd
  2178                        	.block	127
  2179                        ;	//DebugOut("***k_drive_busy\r\n");
  2180                        ;
  2181                        ;	while((IDE_CMD_STAT[0] & IDE_STAT_BSY) == IDE_ST
                    AT_BSY);
  2182                        	.line	130
  2183                        L10014:
  2184 04:195A: AF 37 E8 AF  	lda	>11528247
  2185 04:195E: 29 80 00     	and	#<$80
  2186 04:1961: 85 01        	sta	<R0
  2187 04:1963: A5 01        	lda	<R0
  2188 04:1965: C9 80 00     	cmp	#<$80
  2189 04:1968: F0 03        	beq	L37
  2190 04:196A: 82 03 00     	brl	L10015
  2191                        L37:
  2192                        	.line	130
  2193 04:196D: 82 EA FF     	brl	L10014
  2194                        L10015:
  Mon Aug  9 2021 16:52                                                Page 42


  2195                        ;
  2196                        ;	return;
  2197                        	.line	132
  2198                        L38:
  2199 04:1970: 2B           	pld
  2200 04:1971: 3B           	tsc
  2201 04:1972: 18           	clc
  2202 04:1973: 69 04 00     	adc	#L34
  2203 04:1976: 1B           	tcs
  2204 04:1977: 6B           	rtl
  2205                        ;}
  2206                        	.line	133
  2207                        	.endblock	133
  2208             00000004   L34	equ	4
  2209             00000005   L35	equ	5
  2210 04:1978:              	ends
  2211                        	efunc
  2212                        	.endfunc	133,5,4
  2213                        	.line	133
  2214                        ;
  2215                        ;
  2216                        ;void k_hd_diagnostic(void)
  2217                        ;{
  2218                        	.line	136
  2219                        	.line	137
  2220                        	IDES04
  2221                        	xdef	~~k_hd_diagnostic
  2222                        	func
  2223                        	.function	137
  2224                        ~~k_hd_diagnostic:
  2225                        	longa	on
  2226                        	longi	on
  2227 04:1978: 3B           	tsc
  2228 04:1979: 38           	sec
  2229 04:197A: E9 01 00     	sbc	#L39
  2230 04:197D: 1B           	tcs
  2231 04:197E: 0B           	phd
  2232 04:197F: 5B           	tcd
  2233                        	.block	137
  2234                        ;	UCHAR sts = 0x00;
  2235                        ;
  2236                        ;	k_drive_ready_not_busy();
  2237             00000000   sts_1	set	0
  2238                        	.sym	sts,0,14,1,8
  2239 04:1980: E2 20        	sep	#$20
  2240                        	longa	off
  2241 04:1982: 64 01        	stz	<L40+sts_1
  2242 04:1984: C2 20        	rep	#$20
  2243                        	longa	on
  2244                        	.line	140
  2245 04:1986: 22 EC 18 04  	jsl	~~k_drive_ready_not_busy
  2246                        ;
  2247                        ;	IDE_CMD_STAT[0] = 0x90;
  2248                        	.line	142
  2249 04:198A: E2 20        	sep	#$20
  2250                        	longa	off
  2251 04:198C: A9 90        	lda	#$90
  2252 04:198E: 8F 37 E8 AF  	sta	>11528247
  Mon Aug  9 2021 16:52                                                Page 43


  2253 04:1992: C2 20        	rep	#$20
  2254                        	longa	on
  2255                        ;
  2256                        ;	k_drive_busy();
  2257                        	.line	144
  2258 04:1994: 22 52 19 04  	jsl	~~k_drive_busy
  2259                        ;
  2260                        ;	sts = IDE_ERROR[0];
  2261                        	.line	146
  2262 04:1998: E2 20        	sep	#$20
  2263                        	longa	off
  2264 04:199A: AF 31 E8 AF  	lda	>11528241
  2265 04:199E: 85 01        	sta	<L40+sts_1
  2266 04:19A0: C2 20        	rep	#$20
  2267                        	longa	on
  2268                        ;	//DebugHex("k_ide_diagnostic:code:",sts);
  2269                        ;
  2270                        ;	//k_ide_isbusy();
  2271                        ;
  2272                        ;	return;
  2273                        	.line	151
  2274                        L42:
  2275 04:19A2: 2B           	pld
  2276 04:19A3: 3B           	tsc
  2277 04:19A4: 18           	clc
  2278 04:19A5: 69 01 00     	adc	#L39
  2279 04:19A8: 1B           	tcs
  2280 04:19A9: 6B           	rtl
  2281                        ;}
  2282                        	.line	152
  2283                        	.endblock	152
  2284             00000001   L39	equ	1
  2285             00000001   L40	equ	1
  2286 04:19AA:              	ends
  2287                        	efunc
  2288                        	.endfunc	152,1,1
  2289                        	.line	152
  2290                        ;
  2291                        ;UINT k_hd_get_id(VOID)
  2292                        ;{
  2293                        	.line	154
  2294                        	.line	155
  2295                        	IDES04
  2296                        	xdef	~~k_hd_get_id
  2297                        	func
  2298                        	.function	155
  2299                        ~~k_hd_get_id:
  2300                        	longa	on
  2301                        	longi	on
  2302 04:19AA: 3B           	tsc
  2303 04:19AB: 38           	sec
  2304 04:19AC: E9 0B 00     	sbc	#L43
  2305 04:19AF: 1B           	tcs
  2306 04:19B0: 0B           	phd
  2307 04:19B1: 5B           	tcd
  2308                        	.block	155
  2309                        ;	int x;
  2310                        ;	BYTE b;
  Mon Aug  9 2021 16:52                                                Page 44


  2311                        ;	PIDSECTOR pid = NULL;
  2312                        ;	PFATBOOTSECTOR pmbr = NULL;
  2313                        ;
  2314                        ;	k_debug_string("***k_hd_get_id\r\n");
  2315             00000000   x_1	set	0
  2316             00000002   b_1	set	2
  2317             00000003   pid_1	set	3
  2318             00000007   pmbr_1	set	7
  2319                        	.sym	x,0,5,1,16
  2320                        	.sym	b,2,14,1,8
  2321                        	.sym	pid,3,138,1,32,103
  2322                        	.sym	pmbr,7,138,1,32,97
  2323 04:19B2: 64 04        	stz	<L44+pid_1
  2324 04:19B4: 64 06        	stz	<L44+pid_1+2
  2325 04:19B6: 64 08        	stz	<L44+pmbr_1
  2326 04:19B8: 64 0A        	stz	<L44+pmbr_1+2
  2327                        	.line	161
  2328 04:19BA: F4 xx xx     	pea	#^L1
  2329 04:19BD: F4 xx xx     	pea	#<L1
  2330 04:19C0: 22 xx xx xx  	jsl	~~k_debug_string
  2331                        ;
  2332                        ;	k_drive_ready_not_busy();
  2333                        	.line	163
  2334 04:19C4: 22 EC 18 04  	jsl	~~k_drive_ready_not_busy
  2335                        ;
  2336                        ;	IDE_HEAD[0] = 0xE0;
  2337                        	.line	165
  2338 04:19C8: E2 20        	sep	#$20
  2339                        	longa	off
  2340 04:19CA: A9 E0        	lda	#$e0
  2341 04:19CC: 8F 36 E8 AF  	sta	>11528246
  2342 04:19D0: C2 20        	rep	#$20
  2343                        	longa	on
  2344                        ;
  2345                        ;	k_drive_ready_not_busy();
  2346                        	.line	167
  2347 04:19D2: 22 EC 18 04  	jsl	~~k_drive_ready_not_busy
  2348                        ;
  2349                        ;    IDE_SECT_CNT[0] = 0;
  2350                        	.line	169
  2351 04:19D6: E2 20        	sep	#$20
  2352                        	longa	off
  2353 04:19D8: A9 00        	lda	#$0
  2354 04:19DA: 8F 32 E8 AF  	sta	>11528242
  2355 04:19DE: C2 20        	rep	#$20
  2356                        	longa	on
  2357                        ;    IDE_SECT_SRT[0] = 0;
  2358                        	.line	170
  2359 04:19E0: E2 20        	sep	#$20
  2360                        	longa	off
  2361 04:19E2: A9 00        	lda	#$0
  2362 04:19E4: 8F 33 E8 AF  	sta	>11528243
  2363 04:19E8: C2 20        	rep	#$20
  2364                        	longa	on
  2365                        ;    IDE_CLDR_LO[0] = 0;
  2366                        	.line	171
  2367 04:19EA: E2 20        	sep	#$20
  2368                        	longa	off
  Mon Aug  9 2021 16:52                                                Page 45


  2369 04:19EC: A9 00        	lda	#$0
  2370 04:19EE: 8F 34 E8 AF  	sta	>11528244
  2371 04:19F2: C2 20        	rep	#$20
  2372                        	longa	on
  2373                        ;    IDE_CLDR_HI[0] = 0;
  2374                        	.line	172
  2375 04:19F4: E2 20        	sep	#$20
  2376                        	longa	off
  2377 04:19F6: A9 00        	lda	#$0
  2378 04:19F8: 8F 35 E8 AF  	sta	>11528245
  2379 04:19FC: C2 20        	rep	#$20
  2380                        	longa	on
  2381                        ;
  2382                        ;    IDE_CMD_STAT[0] = IDE_CMD_IDENTIFY;
  2383                        	.line	174
  2384 04:19FE: E2 20        	sep	#$20
  2385                        	longa	off
  2386 04:1A00: A9 EC        	lda	#$ec
  2387 04:1A02: 8F 37 E8 AF  	sta	>11528247
  2388 04:1A06: C2 20        	rep	#$20
  2389                        	longa	on
  2390                        ;
  2391                        ;	asm NOP;
  2392                        	.line	176
  2393                        	asmstart
  2394 04:1A08: EA           	NOP
  2395                        	asmend
  2396                        ;	asm NOP;
  2397                        	.line	177
  2398                        	asmstart
  2399 04:1A09: EA           	NOP
  2400                        	asmend
  2401                        ;	asm NOP;
  2402                        	.line	178
  2403                        	asmstart
  2404 04:1A0A: EA           	NOP
  2405                        	asmend
  2406                        ;	asm NOP;
  2407                        	.line	179
  2408                        	asmstart
  2409 04:1A0B: EA           	NOP
  2410                        	asmend
  2411                        ;	asm NOP;
  2412                        	.line	180
  2413                        	asmstart
  2414 04:1A0C: EA           	NOP
  2415                        	asmend
  2416                        ;	asm NOP;
  2417                        	.line	181
  2418                        	asmstart
  2419 04:1A0D: EA           	NOP
  2420                        	asmend
  2421                        ;	asm NOP;
  2422                        	.line	182
  2423                        	asmstart
  2424 04:1A0E: EA           	NOP
  2425                        	asmend
  2426                        ;	asm NOP;
  Mon Aug  9 2021 16:52                                                Page 46


  2427                        	.line	183
  2428                        	asmstart
  2429 04:1A0F: EA           	NOP
  2430                        	asmend
  2431                        ;	asm NOP;
  2432                        	.line	184
  2433                        	asmstart
  2434 04:1A10: EA           	NOP
  2435                        	asmend
  2436                        ;	asm NOP;
  2437                        	.line	185
  2438                        	asmstart
  2439 04:1A11: EA           	NOP
  2440                        	asmend
  2441                        ;
  2442                        ;    k_drive_busy();
  2443                        	.line	187
  2444 04:1A12: 22 52 19 04  	jsl	~~k_drive_busy
  2445                        ;
  2446                        ;    k_drive_wait_dsc();
  2447                        	.line	189
  2448 04:1A16: 22 0E 18 04  	jsl	~~k_drive_wait_dsc
  2449                        ;
  2450                        ;
  2451                        ;	for(x=0;x<(512 - 0);x+=2)
  2452                        	.line	192
  2453 04:1A1A: 64 01        	stz	<L44+x_1
  2454                        L10018:
  2455                        ;	{
  2456                        	.line	193
  2457                        ;		b = IDE_DATA_LO[0];// szIndentity[x]   =
                     IDE_DATA_LO[0];
  2458                        	.line	194
  2459 04:1A1C: E2 20        	sep	#$20
  2460                        	longa	off
  2461 04:1A1E: AF 38 E8 AF  	lda	>11528248
  2462 04:1A22: 85 03        	sta	<L44+b_1
  2463 04:1A24: C2 20        	rep	#$20
  2464                        	longa	on
  2465                        ;		b = IDE_DATA_HI[0]; //szIndentity[x+1] =
                     IDE_DATA_HI[0];
  2466                        	.line	195
  2467 04:1A26: E2 20        	sep	#$20
  2468                        	longa	off
  2469 04:1A28: AF 39 E8 AF  	lda	>11528249
  2470 04:1A2C: 85 03        	sta	<L44+b_1
  2471 04:1A2E: C2 20        	rep	#$20
  2472                        	longa	on
  2473                        ;	}
  2474                        	.line	196
  2475                        L10016:
  2476 04:1A30: E6 01        	inc	<L44+x_1
  2477 04:1A32: E6 01        	inc	<L44+x_1
  2478 04:1A34: 38           	sec
  2479 04:1A35: A5 01        	lda	<L44+x_1
  2480 04:1A37: E9 00 02     	sbc	#<$200
  2481 04:1A3A: 70 03        	bvs	L46
  2482 04:1A3C: 49 00 80     	eor	#$8000
  Mon Aug  9 2021 16:52                                                Page 47


  2483                        L46:
  2484 04:1A3F: 30 03        	bmi	L47
  2485 04:1A41: 82 D8 FF     	brl	L10018
  2486                        L47:
  2487                        L10017:
  2488                        ;
  2489                        ;	/*
  2490                        ;    for(x=0;x<SDC_BUFFER_SIZE;x++)
  2491                        ;	{
  2492                        ;		szIndentity[x] = IDE_DATA_LO[0];
  2493                        ;	}
  2494                        ;	*/
  2495                        ;	//k_debug_byte_array("k_hd_get_id::DebugByteArra
                    y:",szIndentity,512);
  2496                        ;
  2497                        ;	//pid = ((PIDSECTOR)szIndentity);
  2498                        ;
  2499                        ;
  2500                        ;	//DebugMessageN("sSerialNumber:",pid->sSerialNum
                    ber,20);
  2501                        ;//	DebugMessageN("sModelNumbers:",pid->sMod
                    elNumber,40);
  2502                        ;//	DebugMessageN("sFirmwareRev:",pid->sFirm
                    wareRev,8);
  2503                        ;	//DebugLong("AvailSectors:",pid->ulTotalAddressa
                    bleSectors);
  2504                        ;
  2505                        ;
  2506                        ;	//k_hd_read_sector(0L,szIndentity);
  2507                        ;	//k_debug_byte_array("k_hd_get_id::MBR:",szInden
                    tity,512);
  2508                        ;
  2509                        ;	//pmbr =  ((PFATBOOTSECTOR)szIndentity);
  2510                        ;
  2511                        ;	//k_hd_check_drive(szIndentity);
  2512                        ;
  2513                        ;	return 0;
  2514                        	.line	222
  2515 04:1A44: A9 00 00     	lda	#$0
  2516                        L48:
  2517 04:1A47: A8           	tay
  2518 04:1A48: 2B           	pld
  2519 04:1A49: 3B           	tsc
  2520 04:1A4A: 18           	clc
  2521 04:1A4B: 69 0B 00     	adc	#L43
  2522 04:1A4E: 1B           	tcs
  2523 04:1A4F: 98           	tya
  2524 04:1A50: 6B           	rtl
  2525                        ;/*
  2526                        ;IDE_IDENTIFY    .proc
  2527                        ;                PHY
  2528                        ;                PHB
  2529                        ;                PHD
  2530                        ;                PHP
  2531                        ;
  2532                        ;                TRACE "IDE_IDENTIFY"
  2533                        ;
  2534                        ;                setdbr 0
  Mon Aug  9 2021 16:52                                                Page 48


  2535                        ;                setdp SDOS_VARIABLES
  2536                        ;
  2537                        ;                setas
  2538                        ;
  2539                        ;                JSR IDE_DRV_READY_NOTBUSY       ;
                     Wait until the IDE is clear to accept commands
  2540                        ;
  2541                        ;                LDA BIOS_LBA+3                  ;
                     Get the high bits of the LBA
  2542                        ;                AND #$07
  2543                        ;                ORA #%10100000                  ;
                     Select DEV=0 and LBA mode = 1
  2544                        ;                STA @l IDE_HEAD                 ;
                     Ensure master is selected
  2545                        ;
  2546                        ;                JSR IDE_DRV_READY_NOTBUSY       ;
                     And wait for it to take effect
  2547                        ;
  2548                        ;                setas
  2549                        ;                LDA #0                          ;
                     Clear sector count and LBA
  2550                        ;                STA @l IDE_SECT_CNT
  2551                        ;                STA @l IDE_SECT_SRT
  2552                        ;                STA @l IDE_CLDR_LO
  2553                        ;                STA @l IDE_CLDR_HI
  2554                        ;
  2555                        ;                LDA #IDE_CMD_IDENTIFY           ;
                     The IDENTIFY command
  2556                        ;                STA @l IDE_CMD_STAT             ;
                     Check the status
  2557                        ;                BEQ no_media                    ;
                     If 0: there is no drive
  2558                        ;
  2559                        ;                JSR IDE_DRIVE_BSY               ;
                     Othewise: wait for drive to not be busy
  2560                        ;
  2561                        ;                ; LDA @l IDE_CLDR_LO             
                     ; Validate cylinder hi and low are 0
  2562                        ;                ; BNE not_ata
  2563                        ;                ; LDA @l IDE_CLDR_HI
  2564                        ;                ; BNE not_ata                    
                     ; If not: it's not an ATA drive
  2565                        ;
  2566                        ;                JSR IDE_DRV_READY_NOTBUSY       ;
                     Wait for the device to be ready
  2567                        ;                BCC ret_failure                 ;
                     If an error occurred, return it
  2568                        ;
  2569                        ;                setaxl
  2570                        ;                LDY #0
  2571                        ;read_loop       LDA @l IDE_DATA_LO              ;
                     Get the word of data from the device
  2572                        ;                STA [BIOS_BUFF_PTR],Y           ;
                     Save it to the buffer
  2573                        ;                INY                             ;
                     Move to the next position
  2574                        ;                INY
  2575                        ;                CPY #512
  Mon Aug  9 2021 16:52                                                Page 49


  2576                        ;                BNE read_loop
  2577                        ;
  2578                        ;ret_success     setas
  2579                        ;                LDA #0
  2580                        ;                STA BIOS_STATUS
  2581                        ;                STA @w FDC_ST0
  2582                        ;
  2583                        ;                PLP                             ;
                     Return success
  2584                        ;                PLD
  2585                        ;                PLB
  2586                        ;                PLY
  2587                        ;                SEC
  2588                        ;                RTL
  2589                        ; */
  2590                        ;
  2591                        ;}
  2592                        	.line	289
  2593                        	.endblock	289
  2594             0000000B   L43	equ	11
  2595             00000001   L44	equ	1
  2596 04:1A51:              	ends
  2597                        	efunc
  2598                        	.endfunc	289,1,11
  2599                        	.line	289
  2600                        	data
  2601                        L1:
  2602 00:006D: 2A 2A 2A 6B  	db	$2A,$2A,$2A,$6B,$5F,$68,$64,$5F,$67,$65,
                    $74,$5F,$69,$64,$0D
       00:0071: 5F 68 64 5F 
       00:0075: 67 65 74 5F 
       00:0079: 69 64 0D 
  2603 00:007C: 0A 00        	db	$0A,$00
  2604 00:007E:              	ends
  2605                        ;
  2606                        ;UCHAR k_hd_send_command(UINT command,LPVOID buffe
                    r)
  2607                        ;{
  2608                        	.line	291
  2609                        	.line	292
  2610                        	IDES04
  2611                        	xdef	~~k_hd_send_command
  2612                        	func
  2613                        	.function	292
  2614                        ~~k_hd_send_command:
  2615                        	longa	on
  2616                        	longi	on
  2617 04:1A51: 3B           	tsc
  2618 04:1A52: 38           	sec
  2619 04:1A53: E9 00 00     	sbc	#L50
  2620 04:1A56: 1B           	tcs
  2621 04:1A57: 0B           	phd
  2622 04:1A58: 5B           	tcd
  2623             00000004   command_0	set	4
  2624             00000006   buffer_0	set	6
  2625                        	.block	292
  2626                        ;	return 0;
  2627                        	.sym	command,4,16,6,16
  Mon Aug  9 2021 16:52                                                Page 50


  2628                        	.sym	buffer,6,129,6,32
  2629                        	.line	293
  2630 04:1A59: A9 00 00     	lda	#$0
  2631                        L53:
  2632 04:1A5C: A8           	tay
  2633 04:1A5D: A5 02        	lda	<L50+2
  2634 04:1A5F: 85 08        	sta	<L50+2+6
  2635 04:1A61: A5 01        	lda	<L50+1
  2636 04:1A63: 85 07        	sta	<L50+1+6
  2637 04:1A65: 2B           	pld
  2638 04:1A66: 3B           	tsc
  2639 04:1A67: 18           	clc
  2640 04:1A68: 69 06 00     	adc	#L50+6
  2641 04:1A6B: 1B           	tcs
  2642 04:1A6C: 98           	tya
  2643 04:1A6D: 6B           	rtl
  2644                        ;}
  2645                        	.line	294
  2646                        	.endblock	294
  2647             00000000   L50	equ	0
  2648             00000001   L51	equ	1
  2649 04:1A6E:              	ends
  2650                        	efunc
  2651                        	.endfunc	294,1,0
  2652                        	.line	294
  2653                        ;
  2654                        ;
  2655                        ;
  2656                        ;
  2657                        ;UCHAR k_hd_read_sector(unsigned long offset,LPCHA
                    R receiveBuffer)
  2658                        ;{
  2659                        	.line	299
  2660                        	.line	300
  2661                        	IDES04
  2662                        	xdef	~~k_hd_read_sector
  2663                        	func
  2664                        	.function	300
  2665                        ~~k_hd_read_sector:
  2666                        	longa	on
  2667                        	longi	on
  2668 04:1A6E: 3B           	tsc
  2669 04:1A6F: 38           	sec
  2670 04:1A70: E9 10 00     	sbc	#L54
  2671 04:1A73: 1B           	tcs
  2672 04:1A74: 0B           	phd
  2673 04:1A75: 5B           	tcd
  2674             00000004   offset_0	set	4
  2675             00000008   receiveBuffer_0	set	8
  2676                        	.block	300
  2677                        ;	UCHAR	errorCode = 0;
  2678                        ;	BYTE	workaround = 0;
  2679                        ;	int index;
  2680                        ;
  2681                        ;	PUINT puint = (PUINT)receiveBuffer;
  2682                        ;
  2683                        ;	//DebugOut("***k_hd_read_sector\r\n");
  2684                        ;
  Mon Aug  9 2021 16:52                                                Page 51


  2685                        ;	//k_debug_long("***k_hd_read_sector:",offset);
  2686                        ;	//DebugHex("***k_hd_read_sector:HEAD:",((H32BYTE
                    (offset)) | 0xE0));
  2687                        ;	//DebugHex("***k_hd_read_sector:HEAD PIO:",(0x1F
                    6, 0xE0 | (0xE0 << 4) | ((offset >> 24) & 0x0F)));
  2688                        ;
  2689                        ;	//IDE_CMD_STAT[0] = 0;
  2690                        ;	//k_drive_ready();
  2691                        ;
  2692                        ;	//DebugHex("***k_hd_read_sector:WAIT:",1);
  2693                        ;	k_drive_ready_not_busy();
  2694             00000000   errorCode_1	set	0
  2695             00000001   workaround_1	set	1
  2696             00000002   index_1	set	2
  2697             00000004   puint_1	set	4
  2698                        	.sym	errorCode,0,14,1,8
  2699                        	.sym	workaround,1,14,1,8
  2700                        	.sym	index,2,5,1,16
  2701                        	.sym	puint,4,144,1,32
  2702                        	.sym	offset,4,18,6,32
  2703                        	.sym	receiveBuffer,8,142,6,32
  2704 04:1A76: E2 20        	sep	#$20
  2705                        	longa	off
  2706 04:1A78: 64 09        	stz	<L55+errorCode_1
  2707 04:1A7A: C2 20        	rep	#$20
  2708                        	longa	on
  2709 04:1A7C: E2 20        	sep	#$20
  2710                        	longa	off
  2711 04:1A7E: 64 0A        	stz	<L55+workaround_1
  2712 04:1A80: C2 20        	rep	#$20
  2713                        	longa	on
  2714 04:1A82: A5 18        	lda	<L54+receiveBuffer_0
  2715 04:1A84: 85 0D        	sta	<L55+puint_1
  2716 04:1A86: A5 1A        	lda	<L54+receiveBuffer_0+2
  2717 04:1A88: 85 0F        	sta	<L55+puint_1+2
  2718                        	.line	317
  2719 04:1A8A: 22 EC 18 04  	jsl	~~k_drive_ready_not_busy
  2720                        ;
  2721                        ;	IDE_HEAD[0] = (0x1F6, 0xE0 | (0xE0 << 4) | ((off
                    set >> 24) & 0x0F));//((H32BYTE(offset)) | 0xE0);
  2722                        	.line	319
  2723 04:1A8E: D4 16        	pei	<L54+offset_0+2
  2724 04:1A90: D4 14        	pei	<L54+offset_0
  2725 04:1A92: A9 18 00     	lda	#$18
  2726                        	xref	~~~llsr
  2727 04:1A95: 22 xx xx xx  	jsl	~~~llsr
  2728 04:1A99: 85 01        	sta	<R0
  2729 04:1A9B: 86 03        	stx	<R0+2
  2730 04:1A9D: A5 01        	lda	<R0
  2731 04:1A9F: 29 0F 00     	and	#<$f
  2732 04:1AA2: 85 05        	sta	<R1
  2733 04:1AA4: 64 07        	stz	<R1+2
  2734 04:1AA6: A5 05        	lda	<R1
  2735 04:1AA8: 09 E0 0E     	ora	#<$ee0
  2736 04:1AAB: 85 01        	sta	<R0
  2737 04:1AAD: A5 07        	lda	<R1+2
  2738 04:1AAF: 85 03        	sta	<R0+2
  2739 04:1AB1: E2 20        	sep	#$20
  Mon Aug  9 2021 16:52                                                Page 52


  2740                        	longa	off
  2741 04:1AB3: A5 01        	lda	<R0
  2742 04:1AB5: 8F 36 E8 AF  	sta	>11528246
  2743 04:1AB9: C2 20        	rep	#$20
  2744                        	longa	on
  2745                        ;
  2746                        ;	//k_debug_hex("***k_hd_read_sector:WAIT:",IDE_CM
                    D_STAT[0]);
  2747                        ;	k_drive_ready_not_busy();
  2748                        	.line	322
  2749 04:1ABB: 22 EC 18 04  	jsl	~~k_drive_ready_not_busy
  2750                        ;
  2751                        ;	//IDE_FEATURE [0]  = 0;
  2752                        ;	IDE_SECT_CNT[0]  = 1;
  2753                        	.line	325
  2754 04:1ABF: E2 20        	sep	#$20
  2755                        	longa	off
  2756 04:1AC1: A9 01        	lda	#$1
  2757 04:1AC3: 8F 32 E8 AF  	sta	>11528242
  2758 04:1AC7: C2 20        	rep	#$20
  2759                        	longa	on
  2760                        ;	IDE_SECT_SRT[0]  = L24BYTE(offset);
  2761                        	.line	326
  2762 04:1AC9: E2 20        	sep	#$20
  2763                        	longa	off
  2764 04:1ACB: A5 14        	lda	<L54+offset_0
  2765 04:1ACD: 8F 33 E8 AF  	sta	>11528243
  2766 04:1AD1: C2 20        	rep	#$20
  2767                        	longa	on
  2768                        ;	IDE_CLDR_LO [0]  = M24BYTE(offset);
  2769                        	.line	327
  2770 04:1AD3: D4 16        	pei	<L54+offset_0+2
  2771 04:1AD5: D4 14        	pei	<L54+offset_0
  2772 04:1AD7: A9 08 00     	lda	#$8
  2773                        	xref	~~~llsr
  2774 04:1ADA: 22 xx xx xx  	jsl	~~~llsr
  2775 04:1ADE: 85 01        	sta	<R0
  2776 04:1AE0: 86 03        	stx	<R0+2
  2777 04:1AE2: A5 01        	lda	<R0
  2778 04:1AE4: 29 FF 00     	and	#<$ff
  2779 04:1AE7: 85 05        	sta	<R1
  2780 04:1AE9: 64 07        	stz	<R1+2
  2781 04:1AEB: E2 20        	sep	#$20
  2782                        	longa	off
  2783 04:1AED: A5 05        	lda	<R1
  2784 04:1AEF: 8F 34 E8 AF  	sta	>11528244
  2785 04:1AF3: C2 20        	rep	#$20
  2786                        	longa	on
  2787                        ;	IDE_CLDR_HI [0]  = H24BYTE(offset);
  2788                        	.line	328
  2789 04:1AF5: D4 16        	pei	<L54+offset_0+2
  2790 04:1AF7: D4 14        	pei	<L54+offset_0
  2791 04:1AF9: A9 10 00     	lda	#$10
  2792                        	xref	~~~llsr
  2793 04:1AFC: 22 xx xx xx  	jsl	~~~llsr
  2794 04:1B00: 85 01        	sta	<R0
  2795 04:1B02: 86 03        	stx	<R0+2
  2796 04:1B04: A5 01        	lda	<R0
  Mon Aug  9 2021 16:52                                                Page 53


  2797 04:1B06: 29 FF 00     	and	#<$ff
  2798 04:1B09: 85 05        	sta	<R1
  2799 04:1B0B: 64 07        	stz	<R1+2
  2800 04:1B0D: E2 20        	sep	#$20
  2801                        	longa	off
  2802 04:1B0F: A5 05        	lda	<R1
  2803 04:1B11: 8F 35 E8 AF  	sta	>11528245
  2804 04:1B15: C2 20        	rep	#$20
  2805                        	longa	on
  2806                        ;
  2807                        ;	IDE_CMD_STAT[0] = IDE_CMD_READRETRY_SECTOR;// ID
                    E_CMD_READRETRY_SECTOR; //IDE_CMD_READ_SECTOR;
  2808                        	.line	330
  2809 04:1B17: E2 20        	sep	#$20
  2810                        	longa	off
  2811 04:1B19: A9 20        	lda	#$20
  2812 04:1B1B: 8F 37 E8 AF  	sta	>11528247
  2813 04:1B1F: C2 20        	rep	#$20
  2814                        	longa	on
  2815                        ;
  2816                        ;
  2817                        ;
  2818                        ;
  2819                        ;	asm NOP;
  2820                        	.line	335
  2821                        	asmstart
  2822 04:1B21: EA           	NOP
  2823                        	asmend
  2824                        ;	asm NOP;
  2825                        	.line	336
  2826                        	asmstart
  2827 04:1B22: EA           	NOP
  2828                        	asmend
  2829                        ;	asm NOP;
  2830                        	.line	337
  2831                        	asmstart
  2832 04:1B23: EA           	NOP
  2833                        	asmend
  2834                        ;	asm NOP;
  2835                        	.line	338
  2836                        	asmstart
  2837 04:1B24: EA           	NOP
  2838                        	asmend
  2839                        ;	asm NOP;
  2840                        	.line	339
  2841                        	asmstart
  2842 04:1B25: EA           	NOP
  2843                        	asmend
  2844                        ;
  2845                        ;	//k_drive_busy();
  2846                        ;
  2847                        ;
  2848                        ;	//k_debug_hex("***k_hd_read_sector:WAIT:",3);
  2849                        ;	//k_debug_hex("***k_hd_read_sector:CODE:",IDE_CM
                    D_STAT[0]);
  2850                        ;
  2851                        ;	//k_drive_ready();
  2852                        ;	//if(k_drive_wait_dsc())
  Mon Aug  9 2021 16:52                                                Page 54


  2853                        ;	//	return FR_DISK_ERR;
  2854                        ;
  2855                        ;	if(k_drive_wait_dsc())
  2856                        	.line	351
  2857                        ;			return FR_DISK_ERR;
  2858 04:1B26: 22 0E 18 04  	jsl	~~k_drive_wait_dsc
  2859 04:1B2A: AA           	tax
  2860 04:1B2B: D0 03        	bne	L57
  2861 04:1B2D: 82 15 00     	brl	L10019
  2862                        L57:
  2863                        	.line	352
  2864 04:1B30: A9 01 00     	lda	#$1
  2865                        L58:
  2866 04:1B33: A8           	tay
  2867 04:1B34: A5 12        	lda	<L54+2
  2868 04:1B36: 85 1A        	sta	<L54+2+8
  2869 04:1B38: A5 11        	lda	<L54+1
  2870 04:1B3A: 85 19        	sta	<L54+1+8
  2871 04:1B3C: 2B           	pld
  2872 04:1B3D: 3B           	tsc
  2873 04:1B3E: 18           	clc
  2874 04:1B3F: 69 18 00     	adc	#L54+8
  2875 04:1B42: 1B           	tcs
  2876 04:1B43: 98           	tya
  2877 04:1B44: 6B           	rtl
  2878                        ;
  2879                        ;	k_drive_wait_drq();
  2880                        L10019:
  2881                        	.line	354
  2882 04:1B45: 22 E8 17 04  	jsl	~~k_drive_wait_drq
  2883                        ;
  2884                        ;
  2885                        ;	//k_debug_hex("***k_hd_read_sector:WAIT:",4);
  2886                        ;	//k_debug_hex("***k_hd_read_sector:CODE:",IDE_CM
                    D_STAT[0]);
  2887                        ;
  2888                        ;
  2889                        ;	//errorCode = k_drive_ready_not_busy();
  2890                        ;	if(errorCode == 0)
  2891                        	.line	362
  2892                        ;	{
  2893 04:1B49: A5 09        	lda	<L55+errorCode_1
  2894 04:1B4B: 29 FF 00     	and	#$ff
  2895 04:1B4E: F0 03        	beq	L59
  2896 04:1B50: 82 36 00     	brl	L10020
  2897                        L59:
  2898                        	.line	363
  2899                        ;		//workaround = IDE_DATA[0];
  2900                        ;		//DebugHex("***k_hd_read_sector:workarou
                    nd:",workaround);
  2901                        ;
  2902                        ;		/*
  2903                        ;		for(index = 0;index < 511;index+=2)
  2904                        ;		{
  2905                        ;			receiveBuffer[index+1]   = IDE_D
                    ATA_LO[0];
  2906                        ;			receiveBuffer[index] = IDE_DATA_
                    HI[0];
  Mon Aug  9 2021 16:52                                                Page 55


  2907                        ;		}
  2908                        ;		*/
  2909                        ;
  2910                        ;
  2911                        ;		/*
  2912                        ;		for(index = 0;index < 512;index++)
  2913                        ;		{
  2914                        ;			receiveBuffer[index] = IDE_DATA[
                    0];
  2915                        ;		}
  2916                        ;		*/
  2917                        ;
  2918                        ;
  2919                        ;		for(index = 0;index < 512;index+=2)
  2920                        	.line	384
  2921 04:1B53: 64 0B        	stz	<L55+index_1
  2922                        L10023:
  2923                        ;		{
  2924                        	.line	385
  2925                        ;			receiveBuffer[index]   = IDE_DAT
                    A_LO[0];
  2926                        	.line	386
  2927 04:1B55: E2 20        	sep	#$20
  2928                        	longa	off
  2929 04:1B57: AF 38 E8 AF  	lda	>11528248
  2930 04:1B5B: A4 0B        	ldy	<L55+index_1
  2931 04:1B5D: 97 18        	sta	[<L54+receiveBuffer_0],Y
  2932 04:1B5F: C2 20        	rep	#$20
  2933                        	longa	on
  2934                        ;			receiveBuffer[index+1] = IDE_DAT
                    A_HI[0];
  2935                        	.line	387
  2936 04:1B61: A5 0B        	lda	<L55+index_1
  2937 04:1B63: 1A           	ina
  2938 04:1B64: 85 01        	sta	<R0
  2939 04:1B66: E2 20        	sep	#$20
  2940                        	longa	off
  2941 04:1B68: AF 39 E8 AF  	lda	>11528249
  2942 04:1B6C: A4 01        	ldy	<R0
  2943 04:1B6E: 97 18        	sta	[<L54+receiveBuffer_0],Y
  2944 04:1B70: C2 20        	rep	#$20
  2945                        	longa	on
  2946                        ;		}
  2947                        	.line	388
  2948                        L10021:
  2949 04:1B72: E6 0B        	inc	<L55+index_1
  2950 04:1B74: E6 0B        	inc	<L55+index_1
  2951 04:1B76: 38           	sec
  2952 04:1B77: A5 0B        	lda	<L55+index_1
  2953 04:1B79: E9 00 02     	sbc	#<$200
  2954 04:1B7C: 70 03        	bvs	L60
  2955 04:1B7E: 49 00 80     	eor	#$8000
  2956                        L60:
  2957 04:1B81: 30 03        	bmi	L61
  2958 04:1B83: 82 CF FF     	brl	L10023
  2959                        L61:
  2960                        L10022:
  2961                        ;		//k_debug_hex("***k_hd_read_sector:510:"
  Mon Aug  9 2021 16:52                                                Page 56


                    ,receiveBuffer[510]);
  2962                        ;		//k_debug_hex("***k_hd_read_sector:511:"
                    ,receiveBuffer[511]);
  2963                        ;		//k_debug_integer("LAST UINT:",*((PUINT)
                    &receiveBuffer[510]));
  2964                        ;
  2965                        ;		/*
  2966                        ;		for(index = 0;index < 256;index++)
  2967                        ;		{
  2968                        ;			puint[index] = *((PUINT)IDE_DATA
                    _LO);
  2969                        ;		}
  2970                        ;		*/
  2971                        ;	}
  2972                        	.line	399
  2973                        ;	else
  2974 04:1B86: 82 33 00     	brl	L10024
  2975                        L10020:
  2976                        ;	{
  2977                        	.line	401
  2978                        ;		for(index = 0;index < 511;index+=2)
  2979                        	.line	402
  2980 04:1B89: 64 0B        	stz	<L55+index_1
  2981                        L10027:
  2982                        ;		{
  2983                        	.line	403
  2984                        ;			receiveBuffer[index]   = IDE_DAT
                    A_LO[0];
  2985                        	.line	404
  2986 04:1B8B: E2 20        	sep	#$20
  2987                        	longa	off
  2988 04:1B8D: AF 38 E8 AF  	lda	>11528248
  2989 04:1B91: A4 0B        	ldy	<L55+index_1
  2990 04:1B93: 97 18        	sta	[<L54+receiveBuffer_0],Y
  2991 04:1B95: C2 20        	rep	#$20
  2992                        	longa	on
  2993                        ;			receiveBuffer[index+1] = IDE_DAT
                    A_HI[0];
  2994                        	.line	405
  2995 04:1B97: A5 0B        	lda	<L55+index_1
  2996 04:1B99: 1A           	ina
  2997 04:1B9A: 85 01        	sta	<R0
  2998 04:1B9C: E2 20        	sep	#$20
  2999                        	longa	off
  3000 04:1B9E: AF 39 E8 AF  	lda	>11528249
  3001 04:1BA2: A4 01        	ldy	<R0
  3002 04:1BA4: 97 18        	sta	[<L54+receiveBuffer_0],Y
  3003 04:1BA6: C2 20        	rep	#$20
  3004                        	longa	on
  3005                        ;
  3006                        ;		}
  3007                        	.line	407
  3008                        L10025:
  3009 04:1BA8: E6 0B        	inc	<L55+index_1
  3010 04:1BAA: E6 0B        	inc	<L55+index_1
  3011 04:1BAC: 38           	sec
  3012 04:1BAD: A5 0B        	lda	<L55+index_1
  3013 04:1BAF: E9 FF 01     	sbc	#<$1ff
  Mon Aug  9 2021 16:52                                                Page 57


  3014 04:1BB2: 70 03        	bvs	L62
  3015 04:1BB4: 49 00 80     	eor	#$8000
  3016                        L62:
  3017 04:1BB7: 30 03        	bmi	L63
  3018 04:1BB9: 82 CF FF     	brl	L10027
  3019                        L63:
  3020                        L10026:
  3021                        ;
  3022                        ;	}
  3023                        	.line	409
  3024                        L10024:
  3025                        ;
  3026                        ;	//k_debug_byte_array("k_hd_read_sector::DebugByt
                    eArray:\r\n",receiveBuffer,512);
  3027                        ;/*
  3028                        ;
  3029                        ;
  3030                        ;                JSR IDE_DRV_READY_NOTBUSY       ;
                     Wait until the IDE is clear to accept commands
  3031                        ;
  3032                        ;                LDA BIOS_LBA+3                  ;
                     Get the high bits of the LBA
  3033                        ;                AND #$07
  3034                        ;                ORA #%11100000                  ;
                     Select DEV=0 and LBA mode = 1
  3035                        ;                STA @l IDE_HEAD                 ;
                     Ensure master is selected
  3036                        ;
  3037                        ;                JSR IDE_DRV_READY_NOTBUSY       ;
                     And wait for it to take effect
  3038                        ;
  3039                        ;                setas
  3040                        ;                LDA #1                          ;
                     Set that we want one sector
  3041                        ;                STA @l IDE_SECT_CNT
  3042                        ;
  3043                        ;                LDA BIOS_LBA                    ;
                     Set the lower bits of the LBA
  3044                        ;                STA @l IDE_SECT_SRT
  3045                        ;
  3046                        ;                LDA BIOS_LBA+1
  3047                        ;                STA @l IDE_CLDR_LO
  3048                        ;
  3049                        ;                LDA BIOS_LBA+2
  3050                        ;                STA @l IDE_CLDR_HI
  3051                        ;
  3052                        ;                LDA #IDE_CMD_READ_SECTOR        ;
                     The READ SECTOR command
  3053                        ;                STA @l IDE_CMD_STAT
  3054                        ;
  3055                        ;                NOP                             ;
                     Wait about 500ns
  3056                        ;                NOP
  3057                        ;                NOP
  3058                        ;                NOP
  3059                        ;
  3060                        ;                JSR IDE_DRV_READY_NOTBUSY       ;
                     Wait for the device to be ready
  Mon Aug  9 2021 16:52                                                Page 58


  3061                        ;                BCC ret_failure                 ;
                     If an error occurred, return it
  3062                        ;.if ( TARGET_SYS == SYS_C256_FMX )
  3063                        ;                setas
  3064                        ;                LDA @l IDE_DATA                 ;
                     Read and toss out one byte from the 8-bit interface
  3065                        ;.endif
  3066                        ;                LDY #0
  3067                        ;                setaxl
  3068                        ;read_loop       LDA @l IDE_DATA_LO              ;
                     Get the word of data from the device
  3069                        ;                STA [BIOS_BUFF_PTR],Y           ;
                     Save it to the buffer
  3070                        ;                INY                             ;
                     Move to the next position
  3071                        ;                INY
  3072                        ;                CPY #512
  3073                        ;                BNE read_loop
  3074                        ;
  3075                        ;                NOP                             ;
                     Wait about 500ns
  3076                        ;                NOP
  3077                        ;                NOP
  3078                        ;                NOP
  3079                        ;
  3080                        ;ret_success     setas
  3081                        ;                LDA #0
  3082                        ;                STA BIOS_STATUS
  3083                        ;                STA @w FDC_ST0
  3084                        ;
  3085                        ;                PLP                             ;
                     Return success
  3086                        ;                PLD
  3087                        ;                PLB
  3088                        ;                PLY
  3089                        ;                SEC
  3090                        ;                RTL
  3091                        ;
  3092                        ;ret_failure     setas
  3093                        ;                LDA @l IDE_ERROR
  3094                        ;                STA @w FDC_ST0
  3095                        ;
  3096                        ;                ; TODO: determine if there was a 
                    timeout
  3097                        ;
  3098                        ;                LDA #BIOS_ERR_READ
  3099                        ;                STA BIOS_STATUS
  3100                        ;
  3101                        ;                PLP
  3102                        ;                PLD
  3103                        ;                PLB
  3104                        ;                PLY
  3105                        ;                CLC
  3106                        ;                RTL
  3107                        ;                .pend
  3108                        ; */
  3109                        ;
  3110                        ;
  Mon Aug  9 2021 16:52                                                Page 59


  3111                        ;	return errorCode;
  3112                        	.line	496
  3113 04:1BBC: A5 09        	lda	<L55+errorCode_1
  3114 04:1BBE: 29 FF 00     	and	#$ff
  3115 04:1BC1: 82 6F FF     	brl	L58
  3116                        ;}
  3117                        	.line	497
  3118                        	.endblock	497
  3119             00000010   L54	equ	16
  3120             00000009   L55	equ	9
  3121 04:1BC4:              	ends
  3122                        	efunc
  3123                        	.endfunc	497,9,16
  3124                        	.line	497
  3125                        ;
  3126                        ;UCHAR k_hd_write_sector(unsigned long offset,LPCH
                    AR sendBuffer)
  3127                        ;{
  3128                        	.line	499
  3129                        	.line	500
  3130                        	IDES04
  3131                        	xdef	~~k_hd_write_sector
  3132                        	func
  3133                        	.function	500
  3134                        ~~k_hd_write_sector:
  3135                        	longa	on
  3136                        	longi	on
  3137 04:1BC4: 3B           	tsc
  3138 04:1BC5: 38           	sec
  3139 04:1BC6: E9 0C 00     	sbc	#L64
  3140 04:1BC9: 1B           	tcs
  3141 04:1BCA: 0B           	phd
  3142 04:1BCB: 5B           	tcd
  3143             00000004   offset_0	set	4
  3144             00000008   sendBuffer_0	set	8
  3145                        	.block	500
  3146                        ;	UCHAR	errorCode = 0;
  3147                        ;	UCHAR	s;
  3148                        ;	UINT	index;
  3149                        ;
  3150                        ;	//k_debug_long("k_hd_write_sector::offset:",offs
                    et);
  3151                        ;	//k_debug_byte_array("k_hd_write_sector::sendBuf
                    fer:",sendBuffer,512);
  3152                        ;
  3153                        ;	k_drive_ready_not_busy();
  3154             00000000   errorCode_1	set	0
  3155             00000001   s_1	set	1
  3156             00000002   index_1	set	2
  3157                        	.sym	errorCode,0,14,1,8
  3158                        	.sym	s,1,14,1,8
  3159                        	.sym	index,2,16,1,16
  3160                        	.sym	offset,4,18,6,32
  3161                        	.sym	sendBuffer,8,142,6,32
  3162 04:1BCC: E2 20        	sep	#$20
  3163                        	longa	off
  3164 04:1BCE: 64 09        	stz	<L65+errorCode_1
  3165 04:1BD0: C2 20        	rep	#$20
  Mon Aug  9 2021 16:52                                                Page 60


  3166                        	longa	on
  3167                        	.line	508
  3168 04:1BD2: 22 EC 18 04  	jsl	~~k_drive_ready_not_busy
  3169                        ;
  3170                        ;	IDE_HEAD[0] = (0x1F6, 0xE0 | (0xE0 << 4) | ((off
                    set >> 24) & 0x0F));//((H32BYTE(offset)) | 0xE0);
  3171                        	.line	510
  3172 04:1BD6: D4 12        	pei	<L64+offset_0+2
  3173 04:1BD8: D4 10        	pei	<L64+offset_0
  3174 04:1BDA: A9 18 00     	lda	#$18
  3175                        	xref	~~~llsr
  3176 04:1BDD: 22 xx xx xx  	jsl	~~~llsr
  3177 04:1BE1: 85 01        	sta	<R0
  3178 04:1BE3: 86 03        	stx	<R0+2
  3179 04:1BE5: A5 01        	lda	<R0
  3180 04:1BE7: 29 0F 00     	and	#<$f
  3181 04:1BEA: 85 05        	sta	<R1
  3182 04:1BEC: 64 07        	stz	<R1+2
  3183 04:1BEE: A5 05        	lda	<R1
  3184 04:1BF0: 09 E0 0E     	ora	#<$ee0
  3185 04:1BF3: 85 01        	sta	<R0
  3186 04:1BF5: A5 07        	lda	<R1+2
  3187 04:1BF7: 85 03        	sta	<R0+2
  3188 04:1BF9: E2 20        	sep	#$20
  3189                        	longa	off
  3190 04:1BFB: A5 01        	lda	<R0
  3191 04:1BFD: 8F 36 E8 AF  	sta	>11528246
  3192 04:1C01: C2 20        	rep	#$20
  3193                        	longa	on
  3194                        ;
  3195                        ;	//k_debug_hex("***k_hd_read_sector:WAIT:",IDE_CM
                    D_STAT[0]);
  3196                        ;	k_drive_ready_not_busy();
  3197                        	.line	513
  3198 04:1C03: 22 EC 18 04  	jsl	~~k_drive_ready_not_busy
  3199                        ;
  3200                        ;	//IDE_FEATURE [0]  = 0;
  3201                        ;	IDE_SECT_CNT[0]  = 1;
  3202                        	.line	516
  3203 04:1C07: E2 20        	sep	#$20
  3204                        	longa	off
  3205 04:1C09: A9 01        	lda	#$1
  3206 04:1C0B: 8F 32 E8 AF  	sta	>11528242
  3207 04:1C0F: C2 20        	rep	#$20
  3208                        	longa	on
  3209                        ;	IDE_SECT_SRT[0]  = L24BYTE(offset);
  3210                        	.line	517
  3211 04:1C11: E2 20        	sep	#$20
  3212                        	longa	off
  3213 04:1C13: A5 10        	lda	<L64+offset_0
  3214 04:1C15: 8F 33 E8 AF  	sta	>11528243
  3215 04:1C19: C2 20        	rep	#$20
  3216                        	longa	on
  3217                        ;	IDE_CLDR_LO [0]  = M24BYTE(offset);
  3218                        	.line	518
  3219 04:1C1B: D4 12        	pei	<L64+offset_0+2
  3220 04:1C1D: D4 10        	pei	<L64+offset_0
  3221 04:1C1F: A9 08 00     	lda	#$8
  Mon Aug  9 2021 16:52                                                Page 61


  3222                        	xref	~~~llsr
  3223 04:1C22: 22 xx xx xx  	jsl	~~~llsr
  3224 04:1C26: 85 01        	sta	<R0
  3225 04:1C28: 86 03        	stx	<R0+2
  3226 04:1C2A: A5 01        	lda	<R0
  3227 04:1C2C: 29 FF 00     	and	#<$ff
  3228 04:1C2F: 85 05        	sta	<R1
  3229 04:1C31: 64 07        	stz	<R1+2
  3230 04:1C33: E2 20        	sep	#$20
  3231                        	longa	off
  3232 04:1C35: A5 05        	lda	<R1
  3233 04:1C37: 8F 34 E8 AF  	sta	>11528244
  3234 04:1C3B: C2 20        	rep	#$20
  3235                        	longa	on
  3236                        ;	IDE_CLDR_HI [0]  = H24BYTE(offset);
  3237                        	.line	519
  3238 04:1C3D: D4 12        	pei	<L64+offset_0+2
  3239 04:1C3F: D4 10        	pei	<L64+offset_0
  3240 04:1C41: A9 10 00     	lda	#$10
  3241                        	xref	~~~llsr
  3242 04:1C44: 22 xx xx xx  	jsl	~~~llsr
  3243 04:1C48: 85 01        	sta	<R0
  3244 04:1C4A: 86 03        	stx	<R0+2
  3245 04:1C4C: A5 01        	lda	<R0
  3246 04:1C4E: 29 FF 00     	and	#<$ff
  3247 04:1C51: 85 05        	sta	<R1
  3248 04:1C53: 64 07        	stz	<R1+2
  3249 04:1C55: E2 20        	sep	#$20
  3250                        	longa	off
  3251 04:1C57: A5 05        	lda	<R1
  3252 04:1C59: 8F 35 E8 AF  	sta	>11528245
  3253 04:1C5D: C2 20        	rep	#$20
  3254                        	longa	on
  3255                        ;
  3256                        ;	IDE_CMD_STAT[0] = IDE_CMD_WRITE_SECTOR;
  3257                        	.line	521
  3258 04:1C5F: E2 20        	sep	#$20
  3259                        	longa	off
  3260 04:1C61: A9 30        	lda	#$30
  3261 04:1C63: 8F 37 E8 AF  	sta	>11528247
  3262 04:1C67: C2 20        	rep	#$20
  3263                        	longa	on
  3264                        ;
  3265                        ;	asm NOP;
  3266                        	.line	523
  3267                        	asmstart
  3268 04:1C69: EA           	NOP
  3269                        	asmend
  3270                        ;	asm NOP;
  3271                        	.line	524
  3272                        	asmstart
  3273 04:1C6A: EA           	NOP
  3274                        	asmend
  3275                        ;	asm NOP;
  3276                        	.line	525
  3277                        	asmstart
  3278 04:1C6B: EA           	NOP
  3279                        	asmend
  Mon Aug  9 2021 16:52                                                Page 62


  3280                        ;	asm NOP;
  3281                        	.line	526
  3282                        	asmstart
  3283 04:1C6C: EA           	NOP
  3284                        	asmend
  3285                        ;	asm NOP;
  3286                        	.line	527
  3287                        	asmstart
  3288 04:1C6D: EA           	NOP
  3289                        	asmend
  3290                        ;
  3291                        ;	if(k_drive_wait_dsc())
  3292                        	.line	529
  3293                        ;		return FR_DISK_ERR;
  3294 04:1C6E: 22 0E 18 04  	jsl	~~k_drive_wait_dsc
  3295 04:1C72: AA           	tax
  3296 04:1C73: D0 03        	bne	L67
  3297 04:1C75: 82 15 00     	brl	L10028
  3298                        L67:
  3299                        	.line	530
  3300 04:1C78: A9 01 00     	lda	#$1
  3301                        L68:
  3302 04:1C7B: A8           	tay
  3303 04:1C7C: A5 0E        	lda	<L64+2
  3304 04:1C7E: 85 16        	sta	<L64+2+8
  3305 04:1C80: A5 0D        	lda	<L64+1
  3306 04:1C82: 85 15        	sta	<L64+1+8
  3307 04:1C84: 2B           	pld
  3308 04:1C85: 3B           	tsc
  3309 04:1C86: 18           	clc
  3310 04:1C87: 69 14 00     	adc	#L64+8
  3311 04:1C8A: 1B           	tcs
  3312 04:1C8B: 98           	tya
  3313 04:1C8C: 6B           	rtl
  3314                        ;
  3315                        ;	k_drive_wait_drq();
  3316                        L10028:
  3317                        	.line	532
  3318 04:1C8D: 22 E8 17 04  	jsl	~~k_drive_wait_drq
  3319                        ;
  3320                        ;
  3321                        ;	if(errorCode == 0)
  3322                        	.line	535
  3323                        ;	{
  3324 04:1C91: A5 09        	lda	<L65+errorCode_1
  3325 04:1C93: 29 FF 00     	and	#$ff
  3326 04:1C96: F0 03        	beq	L69
  3327 04:1C98: 82 2D 00     	brl	L10029
  3328                        L69:
  3329                        	.line	536
  3330                        ;		for(index = 0;index < 512;index+=2)
  3331                        	.line	537
  3332 04:1C9B: 64 0B        	stz	<L65+index_1
  3333                        L10032:
  3334                        ;		{
  3335                        	.line	538
  3336                        ;			IDE_DATA_LO[0] = sendBuffer[inde
                    x];
  Mon Aug  9 2021 16:52                                                Page 63


  3337                        	.line	539
  3338 04:1C9D: E2 20        	sep	#$20
  3339                        	longa	off
  3340 04:1C9F: A4 0B        	ldy	<L65+index_1
  3341 04:1CA1: B7 14        	lda	[<L64+sendBuffer_0],Y
  3342 04:1CA3: 8F 38 E8 AF  	sta	>11528248
  3343 04:1CA7: C2 20        	rep	#$20
  3344                        	longa	on
  3345                        ;			IDE_DATA_HI[0] = sendBuffer[inde
                    x+1];
  3346                        	.line	540
  3347 04:1CA9: A5 0B        	lda	<L65+index_1
  3348 04:1CAB: 1A           	ina
  3349 04:1CAC: 85 01        	sta	<R0
  3350 04:1CAE: E2 20        	sep	#$20
  3351                        	longa	off
  3352 04:1CB0: A4 01        	ldy	<R0
  3353 04:1CB2: B7 14        	lda	[<L64+sendBuffer_0],Y
  3354 04:1CB4: 8F 39 E8 AF  	sta	>11528249
  3355 04:1CB8: C2 20        	rep	#$20
  3356                        	longa	on
  3357                        ;		}
  3358                        	.line	541
  3359                        L10030:
  3360 04:1CBA: E6 0B        	inc	<L65+index_1
  3361 04:1CBC: E6 0B        	inc	<L65+index_1
  3362 04:1CBE: A5 0B        	lda	<L65+index_1
  3363 04:1CC0: C9 00 02     	cmp	#<$200
  3364 04:1CC3: B0 03        	bcs	L70
  3365 04:1CC5: 82 D5 FF     	brl	L10032
  3366                        L70:
  3367                        L10031:
  3368                        ;	}
  3369                        	.line	542
  3370                        ;
  3371                        ;	return errorCode;
  3372                        L10029:
  3373                        	.line	544
  3374 04:1CC8: A5 09        	lda	<L65+errorCode_1
  3375 04:1CCA: 29 FF 00     	and	#$ff
  3376 04:1CCD: 82 AB FF     	brl	L68
  3377                        ;}
  3378                        	.line	545
  3379                        	.endblock	545
  3380             0000000C   L64	equ	12
  3381             00000009   L65	equ	9
  3382 04:1CD0:              	ends
  3383                        	efunc
  3384                        	.endfunc	545,9,12
  3385                        	.line	545
  3386                        ;
  3387                        ;UCHAR k_hd_initialize(void)
  3388                        ;{
  3389                        	.line	547
  3390                        	.line	548
  3391                        	IDES04
  3392                        	xdef	~~k_hd_initialize
  3393                        	func
  Mon Aug  9 2021 16:52                                                Page 64


  3394                        	.function	548
  3395                        ~~k_hd_initialize:
  3396                        	longa	on
  3397                        	longi	on
  3398 04:1CD0: 3B           	tsc
  3399 04:1CD1: 38           	sec
  3400 04:1CD2: E9 02 00     	sbc	#L71
  3401 04:1CD5: 1B           	tcs
  3402 04:1CD6: 0B           	phd
  3403 04:1CD7: 5B           	tcd
  3404                        	.block	548
  3405                        ;	UCHAR s;
  3406                        ;	UCHAR errorCode;
  3407                        ;
  3408                        ;
  3409                        ;	//DebugOut("***k_hd_initialize\r\n");
  3410                        ;
  3411                        ;	k_drive_ready_not_busy();
  3412             00000000   s_1	set	0
  3413             00000001   errorCode_1	set	1
  3414                        	.sym	s,0,14,1,8
  3415                        	.sym	errorCode,1,14,1,8
  3416                        	.line	555
  3417 04:1CD8: 22 EC 18 04  	jsl	~~k_drive_ready_not_busy
  3418                        ;
  3419                        ;	IDE_CMD_STAT[0] = 0;
  3420                        	.line	557
  3421 04:1CDC: E2 20        	sep	#$20
  3422                        	longa	off
  3423 04:1CDE: A9 00        	lda	#$0
  3424 04:1CE0: 8F 37 E8 AF  	sta	>11528247
  3425 04:1CE4: C2 20        	rep	#$20
  3426                        	longa	on
  3427                        ;
  3428                        ;	k_drive_busy();
  3429                        	.line	559
  3430 04:1CE6: 22 52 19 04  	jsl	~~k_drive_busy
  3431                        ;
  3432                        ;	IDE_HEAD[0] 	= 0xE0;
  3433                        	.line	561
  3434 04:1CEA: E2 20        	sep	#$20
  3435                        	longa	off
  3436 04:1CEC: A9 E0        	lda	#$e0
  3437 04:1CEE: 8F 36 E8 AF  	sta	>11528246
  3438 04:1CF2: C2 20        	rep	#$20
  3439                        	longa	on
  3440                        ;	IDE_SECT_CNT[0] = 0x01;
  3441                        	.line	562
  3442 04:1CF4: E2 20        	sep	#$20
  3443                        	longa	off
  3444 04:1CF6: A9 01        	lda	#$1
  3445 04:1CF8: 8F 32 E8 AF  	sta	>11528242
  3446 04:1CFC: C2 20        	rep	#$20
  3447                        	longa	on
  3448                        ;	IDE_CLDR_LO[0]  = 0x00;
  3449                        	.line	563
  3450 04:1CFE: E2 20        	sep	#$20
  3451                        	longa	off
  Mon Aug  9 2021 16:52                                                Page 65


  3452 04:1D00: A9 00        	lda	#$0
  3453 04:1D02: 8F 34 E8 AF  	sta	>11528244
  3454 04:1D06: C2 20        	rep	#$20
  3455                        	longa	on
  3456                        ;	IDE_CLDR_HI[0]  = 0x00;
  3457                        	.line	564
  3458 04:1D08: E2 20        	sep	#$20
  3459                        	longa	off
  3460 04:1D0A: A9 00        	lda	#$0
  3461 04:1D0C: 8F 35 E8 AF  	sta	>11528245
  3462 04:1D10: C2 20        	rep	#$20
  3463                        	longa	on
  3464                        ;	IDE_SECT_SRT[0] = 0x00;
  3465                        	.line	565
  3466 04:1D12: E2 20        	sep	#$20
  3467                        	longa	off
  3468 04:1D14: A9 00        	lda	#$0
  3469 04:1D16: 8F 33 E8 AF  	sta	>11528243
  3470 04:1D1A: C2 20        	rep	#$20
  3471                        	longa	on
  3472                        ;
  3473                        ;	//k_drive_ready_not_busy();
  3474                        ;
  3475                        ;	//k_debug_hex("k_hd_initialize:code:",IDE_CMD_ST
                    AT[0]);
  3476                        ;	k_hd_get_id();
  3477                        	.line	570
  3478 04:1D1C: 22 AA 19 04  	jsl	~~k_hd_get_id
  3479                        ;
  3480                        ;    return TRUE;
  3481                        	.line	572
  3482 04:1D20: A9 01 00     	lda	#$1
  3483                        L74:
  3484 04:1D23: A8           	tay
  3485 04:1D24: 2B           	pld
  3486 04:1D25: 3B           	tsc
  3487 04:1D26: 18           	clc
  3488 04:1D27: 69 02 00     	adc	#L71
  3489 04:1D2A: 1B           	tcs
  3490 04:1D2B: 98           	tya
  3491 04:1D2C: 6B           	rtl
  3492                        ;}
  3493                        	.line	573
  3494                        	.endblock	573
  3495             00000002   L71	equ	2
  3496             00000001   L72	equ	1
  3497 04:1D2D:              	ends
  3498                        	efunc
  3499                        	.endfunc	573,1,2
  3500                        	.line	573
  3501                        ;
  3502                        ;UCHAR k_hd_uninitialize(VOID)
  3503                        ;{
  3504                        	.line	575
  3505                        	.line	576
  3506                        	IDES04
  3507                        	xdef	~~k_hd_uninitialize
  3508                        	func
  Mon Aug  9 2021 16:52                                                Page 66


  3509                        	.function	576
  3510                        ~~k_hd_uninitialize:
  3511                        	longa	on
  3512                        	longi	on
  3513 04:1D2D: 3B           	tsc
  3514 04:1D2E: 38           	sec
  3515 04:1D2F: E9 00 00     	sbc	#L75
  3516 04:1D32: 1B           	tcs
  3517 04:1D33: 0B           	phd
  3518 04:1D34: 5B           	tcd
  3519                        	.block	576
  3520                        ;	return 0;
  3521                        	.line	577
  3522 04:1D35: A9 00 00     	lda	#$0
  3523                        L78:
  3524 04:1D38: A8           	tay
  3525 04:1D39: 2B           	pld
  3526 04:1D3A: 3B           	tsc
  3527 04:1D3B: 18           	clc
  3528 04:1D3C: 69 00 00     	adc	#L75
  3529 04:1D3F: 1B           	tcs
  3530 04:1D40: 98           	tya
  3531 04:1D41: 6B           	rtl
  3532                        ;}
  3533                        	.line	578
  3534                        	.endblock	578
  3535             00000000   L75	equ	0
  3536             00000001   L76	equ	1
  3537 04:1D42:              	ends
  3538                        	efunc
  3539                        	.endfunc	578,1,0
  3540                        	.line	578
  3541                        ;
  3542                        ;
  3543                        ;
  3544                        ;
  3545                        ;/*
  3546                        ;.cpu "65816"
  3547                        ;
  3548                        ;;/// IDENTIFY DEVICE Structure: (T13/1699-D Revis
                    ion 6a)
  3549                        ;IDE_ID .struct
  3550                        ;General_Config        .word $0000
  3551                        ;Obsolete0             .word $0000
  3552                        ;Specific_Config       .word $0000
  3553                        ;Obsolete1             .word $0000
  3554                        ;Retired0              .word $0000
  3555                        ;Retired1              .word $0000
  3556                        ;Obsolete2             .word $0000
  3557                        ;Reserved_CFlash0      .word $0000
  3558                        ;Reserved_CFlash1      .word $0000
  3559                        ;Retired2              .word $0000
  3560                        ;Serial_Number_String  .byte $00, $00, $00, $00, $
                    00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $
                    00, $00, $00, $00
  3561                        ;Retired3              .word $0000, $0000
  3562                        ;Obsolete3             .word $0000
  3563                        ;Firmware_Rev_String   .byte $00, $00, $00, $00, $
  Mon Aug  9 2021 16:52                                                Page 67


                    00, $00, $00, $00
  3564                        ;Model_Number_String   .byte $00, $00, $00, $00, $
                    00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
  3565                        ;                      .byte $00, $00, $00, $00, $
                    00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
  3566                        ;                      .byte $00, $00, $00, $00, $
                    00, $00, $00, $00
  3567                        ;Max_Number_Logic_Sec  .word $0000
  3568                        ;Trusted_Comp_Feature  .word $0000
  3569                        ;Capabilities          .word $0000, $0000
  3570                        ;Obsolete4             .word $0000, $0000
  3571                        ;Free_Fall_Control     .word $0000
  3572                        ;Obsolete5             .word $0000, $0000, $0000, 
                    $0000, $0000
  3573                        ;Reserved0             .word $0000
  3574                        ;Total_Addy_Logic_Sec  .word $0000, $0000
  3575                        ;Obsolete6             .word $0000
  3576                        ;Reserved1             .word $0000, $0000
  3577                        ;Min_Multiword_DMA_Trf .word $0000
  3578                        ;Manu_Recommended_Mult .word $0000
  3579                        ;Min_PIO_Trf           .word $0000      ; Word 67
  3580                        ;Min_PIO_Trf_with_IORD .word $0000      ; Word 68
  3581                        ;Reserved2             .word $0000, $0000
  3582                        ;Reserved3             .word $0000, $0000, $0000, 
                    $0000
  3583                        ;Queue_Dept            .word $0000
  3584                        ;SATA_Capabilities     .word $0000
  3585                        ;Reserved_SATA         .word $0000
  3586                        ;Sup_Feat_SATA         .word $0000
  3587                        ;Sup_Feat_SATA_Enabled .word $0000    ; Word 79
  3588                        ;Major_Version_Number  .word $0000    ; Word 80
  3589                        ;Minor_Version_Number  .word $0000    ; Word 81
  3590                        ;Cmd_And_Features_Sup  .word $0000, $0000, $0000, 
                    $0000, $0000, $0000
  3591                        ;UDMA_Modes            .word $0000
  3592                        ;Reserved4             .word $0000, $0000 ; Word 8
                    9
  3593                        ;Current_APM_Level     .word $0000
  3594                        ;Master_Password_Ident .word $0000
  3595                        ;Hardware_Reset_Result .word $0000
  3596                        ;Current_AAM_Value     .word $0000  ; Word 94
  3597                        ;Stream_Min_Req_Size   .word $0000  ; Word 95
  3598                        ;Stream_Trf_Time_DMA   .word $0000  ; Word 96
  3599                        ;Stream_Access_Lat     .word $0000
  3600                        ;Streaming_Perf_Gran   .word $0000, $0000
  3601                        ;Tot_Num_Add_Logic_Sec .word $0000, $0000, $0000, 
                    $0000
  3602                        ;Streaming_Trf_Time    .word $0000 ; Word 104
  3603                        ;Reserved5             .word $0000 ; Word 105
  3604                        ;.ends
  3605                        ;
  3606                        ;IDE_TEST        .proc
  3607                        ;                PHP
  3608                        ;
  3609                        ;                setal
  3610                        ;                LDA #<>DOS_SECTOR
  3611                        ;                STA @l BIOS_BUFF_PTR
  3612                        ;                LDA #`DOS_SECTOR
  Mon Aug  9 2021 16:52                                                Page 68


  3613                        ;                STA @l BIOS_BUFF_PTR+2
  3614                        ;
  3615                        ;                JSL IDE_IDENTIFY
  3616                        ;                BCS id_ok
  3617                        ;
  3618                        ;                TRACE "Error getting drive identi
                    ty"
  3619                        ;                BRL done
  3620                        ;
  3621                        ;id_ok           TRACE "Found an IDE drive:"
  3622                        ;                TRACE "Model: "
  3623                        ;                setxl
  3624                        ;                setas
  3625                        ;                LDY #40
  3626                        ;                LDX #27*2
  3627                        ;pr_model        LDA DOS_SECTOR+1,X
  3628                        ;                JSL PUTC
  3629                        ;                LDA DOS_SECTOR,X
  3630                        ;                JSL PUTC
  3631                        ;                INX
  3632                        ;                INX
  3633                        ;                DEY
  3634                        ;                DEY
  3635                        ;                BNE pr_model
  3636                        ;
  3637                        ;                TRACE "S/N: "
  3638                        ;                setxl
  3639                        ;                setas
  3640                        ;                LDY #20
  3641                        ;                LDX #10*2
  3642                        ;pr_serial       LDA DOS_SECTOR+1,X
  3643                        ;                JSL PUTC
  3644                        ;                LDA DOS_SECTOR,X
  3645                        ;                JSL PUTC
  3646                        ;                INX
  3647                        ;                INX
  3648                        ;                DEY
  3649                        ;                DEY
  3650                        ;                BNE pr_serial
  3651                        ;                JSL PRINTCR
  3652                        ;
  3653                        ;;                 setaxl
  3654                        ;;                 LDA #1                 ; Set LB
                    A = 1
  3655                        ;;                 STA @l BIOS_LBA
  3656                        ;;                 LDA #0
  3657                        ;;                 STA @l BIOS_LBA+2
  3658                        ;
  3659                        ;;                 LDA #<>DOS_SECTOR
  3660                        ;;                 STA @l BIOS_BUFF_PTR
  3661                        ;;                 LDA #`DOS_SECTOR
  3662                        ;;                 STA @l BIOS_BUFF_PTR+2
  3663                        ;
  3664                        ;;                 LDX #0                  ; Initi
                    alize the block to some recognizable data
  3665                        ;;                 LDA #$5AA5
  3666                        ;; init_loop       STA DOS_SECTOR,X
  3667                        ;;                 INX
  Mon Aug  9 2021 16:52                                                Page 69


  3668                        ;;                 INX
  3669                        ;;                 CPX #512
  3670                        ;;                 BNE init_loop
  3671                        ;
  3672                        ;;                 JSL IDE_PUTBLOCK        ; Attem
                    pt to write the block
  3673                        ;;                 BCS read_sect1
  3674                        ;
  3675                        ;;                 TRACE "Could not write sector #
                    1."
  3676                        ;;                 JSL PRINTCR
  3677                        ;;                 BRA done
  3678                        ;
  3679                        ;read_sect1      setal
  3680                        ;                LDA #0                 ; Set LBA 
                    = 0
  3681                        ;                STA @l BIOS_LBA
  3682                        ;                LDA #0
  3683                        ;                STA @l BIOS_LBA+2
  3684                        ;
  3685                        ;                LDA #<>DOS_BOOT_SECTOR
  3686                        ;                STA @l BIOS_BUFF_PTR
  3687                        ;                LDA #`DOS_BOOT_SECTOR
  3688                        ;                STA @l BIOS_BUFF_PTR+2
  3689                        ;
  3690                        ;                JSL IDE_GETBLOCK        ; Attempt
                     to read the block
  3691                        ;                BCS all_ok
  3692                        ;
  3693                        ;                TRACE "Could not read sector #0."
  3694                        ;                JSL PRINTCR
  3695                        ;                BRA done
  3696                        ;
  3697                        ;all_ok          TRACE "OK"
  3698                        ;                JSL PRINTCR
  3699                        ;
  3700                        ;                BRK
  3701                        ;
  3702                        ;done            PLP
  3703                        ;                RTL
  3704                        ;                .pend
  3705                        ;
  3706                        ;;///
  3707                        ;; the 512Byte Data is Temporary dumped in the sam
                    e Buffer for the SDCard
  3708                        ;;SDOS_BLK_BEGIN @00:0400
  3709                        ;;////////////////////////////////////////////////
                    ////////
  3710                        ;; IDE_INIT
  3711                        ;; Init the HDD
  3712                        ;; Inputs:
  3713                        ;;  None
  3714                        ;; Affects:
  3715                        ;;   None
  3716                        ;;////////////////////////////////////////////////
                    /////////
  3717                        ;IDE_INIT
  3718                        ;             ; setas
  Mon Aug  9 2021 16:52                                                Page 70


  3719                        ;             ; ; Init Drive
  3720                        ;             ; JSR IDE_DRIVE_BSY ; Check to see i
                    f drive is busy
  3721                        ;             ; LDA #$00
  3722                        ;             ; STA IDE_CLDR_HI
  3723                        ;             ; STA IDE_CLDR_LO
  3724                        ;             ; STA IDE_SECT_CNT
  3725                        ;             ; LDA #$01
  3726                        ;             ; STA IDE_SECT_SRT
  3727                        ;             ; LDA #$A0 ; HEAD 0 - Select Master 
                    Drive
  3728                        ;             ; STA IDE_HEAD
  3729                        ;             ; JSR IDE_DRV_READY_NOTBUSY
  3730                        ;             ; RTL
  3731                        ;
  3732                        ;             setas
  3733                        ;              ; Init Drive
  3734                        ;              LDA #$00
  3735                        ;              STA IDE_CMD_STAT
  3736                        ;
  3737                        ;              JSR IDE_DRIVE_BSY ; Check to see if
                     drive is busy
  3738                        ;              LDA #$E0 ; HEAD 0 - Select Master D
                    rive
  3739                        ;              STA IDE_HEAD
  3740                        ;              LDA #$01
  3741                        ;              STA IDE_SECT_CNT
  3742                        ;              LDA #$00
  3743                        ;              STA IDE_SECT_SRT
  3744                        ;              STA IDE_CLDR_LO
  3745                        ;              STA IDE_CLDR_HI
  3746                        ;              JSR IDE_DRV_READY_NOTBUSY
  3747                        ;              RTL
  3748                        ;
  3749                        ;;
  3750                        ;;////////////////////////////////////////////////
                    ////////
  3751                        ;; IDE_DRIVE_BLOCK_BSY
  3752                        ;; Check to see if it the drive is Busy (BSY = 1'b
                    0 == Not Busy)
  3753                        ;; Inputs:
  3754                        ;;  None
  3755                        ;; Affects:
  3756                        ;;   A
  3757                        ;;////////////////////////////////////////////////
                    /////////
  3758                        ;IDE_DRIVE_BSY   .proc
  3759                        ;                PHP
  3760                        ;
  3761                        ;                TRACE "IDE_DRIVE_BSY"
  3762                        ;
  3763                        ;                setas
  3764                        ;loop            LDA @l IDE_CMD_STAT
  3765                        ;                AND #IDE_STAT_BSY         ; Check
                     for RDY Bit, this needs to be 1'b1
  3766                        ;                CMP #IDE_STAT_BSY         ; If no
                    t go read again
  3767                        ;                BEQ loop
  Mon Aug  9 2021 16:52                                                Page 71


  3768                        ;
  3769                        ;                PLP
  3770                        ;                RTS
  3771                        ;                .pend
  3772                        ;
  3773                        ;;////////////////////////////////////////////////
                    ////////
  3774                        ;; IDE_DRIVE_READY
  3775                        ;; Indicates that the drive is capabable to respon
                    d to a command
  3776                        ;; Inputs:
  3777                        ;;  None
  3778                        ;; Affects:
  3779                        ;;   A
  3780                        ;;////////////////////////////////////////////////
                    /////////
  3781                        ;IDE_DRIVE_READY .proc
  3782                        ;                PHP
  3783                        ;
  3784                        ;                TRACE "IDE_DRIVE_READY"
  3785                        ;
  3786                        ;                setas
  3787                        ;loop            LDA @l IDE_CMD_STAT
  3788                        ;                AND #IDE_STAT_DRDY          ; Che
                    ck to see if the Busy Signal is Cleared
  3789                        ;                CMP #IDE_STAT_DRDY          ; if 
                    it is still one, then go back to read again.
  3790                        ;                BNE loop
  3791                        ;
  3792                        ;                PLP
  3793                        ;                RTS
  3794                        ;                .pend
  3795                        ;
  3796                        ;;////////////////////////////////////////////////
                    ////////
  3797                        ;; IDE_DRIVE_READY
  3798                        ;; Indicates that the drive is capabable to respon
                    d to a command
  3799                        ;;
  3800                        ;; Inputs:
  3801                        ;;  None
  3802                        ;;
  3803                        ;; Outputs:
  3804                        ;;   C is set on success, clear if there was an er
                    ror (including a timeout)
  3805                        ;;
  3806                        ;; Affects:
  3807                        ;;   A
  3808                        ;;////////////////////////////////////////////////
                    /////////
  3809                        ;IDE_DRV_READY_NOTBUSY   .proc
  3810                        ;                PHP
  3811                        ;
  3812                        ;                TRACE "IDE_DRV_READY_NOTBUSY"
  3813                        ;
  3814                        ;                setas
  3815                        ;loop            LDA @l IDE_CMD_STAT              
                       ; Check the status
  Mon Aug  9 2021 16:52                                                Page 72


  3816                        ;                ; BIT #IDE_STAT_ERR | IDE_STAT_DF
                         ; If an error occurred...
  3817                        ;                ; BNE ret_failure                
                         ; Try to handle the error
  3818                        ;
  3819                        ;                AND #IDE_STAT_BSY | IDE_STAT_DRDY
  3820                        ;                CMP #IDE_STAT_DRDY               
                       ; Is it READY but not BUSY?
  3821                        ;                BNE loop                         
                       ; No: keep waiting
  3822                        ;
  3823                        ;ret_success     PLP                              
                       ; Return success
  3824                        ;                SEC
  3825                        ;                RTS
  3826                        ;
  3827                        ;ret_failure     STA @l FDC_ST1                   
                       ; Save the status code to FDC_ST1
  3828                        ;                PLP                              
                       ; Return failure
  3829                        ;                CLC
  3830                        ;                RTS
  3831                        ;                .pend
  3832                        ;
  3833                        ;;
  3834                        ;;////////////////////////////////////////////////
                    ////////
  3835                        ;; IDE_NOT_DRQ
  3836                        ;; Indicates that the drive is ready to transfer w
                    ord or byte of data
  3837                        ;; Inputs:
  3838                        ;;  None
  3839                        ;; Affects:
  3840                        ;;   A
  3841                        ;;////////////////////////////////////////////////
                    /////////
  3842                        ;IDE_NOT_DRQ     .proc
  3843                        ;                PHP
  3844                        ;
  3845                        ;                TRACE "IDE_NOT_DRQ"
  3846                        ;
  3847                        ;                setas
  3848                        ;loop            LDA @l IDE_CMD_STAT     ; Get the
                     status
  3849                        ;                AND #IDE_STAT_DRQ
  3850                        ;                CMP #IDE_STAT_DRQ       ; Is the 
                    DRQ bit set?
  3851                        ;                BNE loop                ; No: kee
                    p waiting
  3852                        ;
  3853                        ;                PLP
  3854                        ;                RTS
  3855                        ;                .pend
  3856                        ;
  3857                        ;;
  3858                        ;; IDE_IDENTIFY
  3859                        ;; Attempt to fetch the drive's identification
  3860                        ;;
  Mon Aug  9 2021 16:52                                                Page 73


  3861                        ;; Inputs:
  3862                        ;;   BIOS_BUFF_PTR = the address to save the data
  3863                        ;;
  3864                        ;; Outputs:
  3865                        ;;   BIOS_STATUS = The status of the operation.
  3866                        ;;   FDC_ST0 = the error code from the drive, if C
                     was clear
  3867                        ;;   C = set on success, clear on failure
  3868                        ;;
  3869                        ;IDE_IDENTIFY    .proc
  3870                        ;                PHY
  3871                        ;                PHB
  3872                        ;                PHD
  3873                        ;                PHP
  3874                        ;
  3875                        ;                TRACE "IDE_IDENTIFY"
  3876                        ;
  3877                        ;                setdbr 0
  3878                        ;                setdp SDOS_VARIABLES
  3879                        ;
  3880                        ;                setas
  3881                        ;
  3882                        ;                JSR IDE_DRV_READY_NOTBUSY       ;
                     Wait until the IDE is clear to accept commands
  3883                        ;
  3884                        ;                LDA BIOS_LBA+3                  ;
                     Get the high bits of the LBA
  3885                        ;                AND #$07
  3886                        ;                ORA #%10100000                  ;
                     Select DEV=0 and LBA mode = 1
  3887                        ;                STA @l IDE_HEAD                 ;
                     Ensure master is selected
  3888                        ;
  3889                        ;                JSR IDE_DRV_READY_NOTBUSY       ;
                     And wait for it to take effect
  3890                        ;
  3891                        ;                setas
  3892                        ;                LDA #0                          ;
                     Clear sector count and LBA
  3893                        ;                STA @l IDE_SECT_CNT
  3894                        ;                STA @l IDE_SECT_SRT
  3895                        ;                STA @l IDE_CLDR_LO
  3896                        ;                STA @l IDE_CLDR_HI
  3897                        ;
  3898                        ;                LDA #IDE_CMD_IDENTIFY           ;
                     The IDENTIFY command
  3899                        ;                STA @l IDE_CMD_STAT             ;
                     Check the status
  3900                        ;                BEQ no_media                    ;
                     If 0: there is no drive
  3901                        ;
  3902                        ;                JSR IDE_DRIVE_BSY               ;
                     Othewise: wait for drive to not be busy
  3903                        ;
  3904                        ;                ; LDA @l IDE_CLDR_LO             
                     ; Validate cylinder hi and low are 0
  3905                        ;                ; BNE not_ata
  3906                        ;                ; LDA @l IDE_CLDR_HI
  Mon Aug  9 2021 16:52                                                Page 74


  3907                        ;                ; BNE not_ata                    
                     ; If not: it's not an ATA drive
  3908                        ;
  3909                        ;                JSR IDE_DRV_READY_NOTBUSY       ;
                     Wait for the device to be ready
  3910                        ;                BCC ret_failure                 ;
                     If an error occurred, return it
  3911                        ;
  3912                        ;                setaxl
  3913                        ;                LDY #0
  3914                        ;read_loop       LDA @l IDE_DATA_LO              ;
                     Get the word of data from the device
  3915                        ;                STA [BIOS_BUFF_PTR],Y           ;
                     Save it to the buffer
  3916                        ;                INY                             ;
                     Move to the next position
  3917                        ;                INY
  3918                        ;                CPY #512
  3919                        ;                BNE read_loop
  3920                        ;
  3921                        ;ret_success     setas
  3922                        ;                LDA #0
  3923                        ;                STA BIOS_STATUS
  3924                        ;                STA @w FDC_ST0
  3925                        ;
  3926                        ;                PLP                             ;
                     Return success
  3927                        ;                PLD
  3928                        ;                PLB
  3929                        ;                PLY
  3930                        ;                SEC
  3931                        ;                RTL
  3932                        ;
  3933                        ;no_media        setas                           ;
                     Raise error that there is no media
  3934                        ;                LDA #BIOS_ERR_NOMEDIA
  3935                        ;                BRA pass_failure
  3936                        ;
  3937                        ;not_ata         setas                           ;
                     Raise error that the media is not ATA
  3938                        ;                LDA #BIOS_ERR_NOTATA
  3939                        ;                BRA pass_failure
  3940                        ;
  3941                        ;ret_failure     setas                           ;
                     Raise a general error reading data
  3942                        ;                LDA #BIOS_ERR_READ
  3943                        ;
  3944                        ;pass_failure    STA BIOS_STATUS
  3945                        ;
  3946                        ;                LDA @l IDE_ERROR
  3947                        ;                STA @w FDC_ST0
  3948                        ;
  3949                        ;                ; TODO: determine if there was a 
                    timeout
  3950                        ;
  3951                        ;                PLP
  3952                        ;                PLD
  3953                        ;                PLB
  Mon Aug  9 2021 16:52                                                Page 75


  3954                        ;                PLY
  3955                        ;                CLC
  3956                        ;                RTL
  3957                        ;                .pend
  3958                        ;
  3959                        ;;
  3960                        ;; IDE_GETBLOCK
  3961                        ;; Fetch a sector's worth of data from the IDE dri
                    ve
  3962                        ;;
  3963                        ;; Inputs:
  3964                        ;;   BIOS_LBA = the LBA of the sector (absolute ad
                    dress, not relative to partition)
  3965                        ;;   BIOS_BUFF_PTR = the address to save the data
  3966                        ;;
  3967                        ;; Outputs:
  3968                        ;;   BIOS_STATUS = The status of the operation.
  3969                        ;;   FDC_ST0 = the error code from the drive, if C
                     was clear
  3970                        ;;   C = set on success, clear on failure
  3971                        ;;
  3972                        ;IDE_GETBLOCK    .proc
  3973                        ;                PHY
  3974                        ;                PHB
  3975                        ;                PHD
  3976                        ;                PHP
  3977                        ;
  3978                        ;                TRACE "IDE_GETBLOCK"
  3979                        ;
  3980                        ;                setdbr 0
  3981                        ;                setdp SDOS_VARIABLES
  3982                        ;
  3983                        ;                setas
  3984                        ;
  3985                        ;                JSR IDE_DRV_READY_NOTBUSY       ;
                     Wait until the IDE is clear to accept commands
  3986                        ;
  3987                        ;                LDA BIOS_LBA+3                  ;
                     Get the high bits of the LBA
  3988                        ;                AND #$07
  3989                        ;                ORA #%11100000                  ;
                     Select DEV=0 and LBA mode = 1
  3990                        ;                STA @l IDE_HEAD                 ;
                     Ensure master is selected
  3991                        ;
  3992                        ;                JSR IDE_DRV_READY_NOTBUSY       ;
                     And wait for it to take effect
  3993                        ;
  3994                        ;                setas
  3995                        ;                LDA #1                          ;
                     Set that we want one sector
  3996                        ;                STA @l IDE_SECT_CNT
  3997                        ;
  3998                        ;                LDA BIOS_LBA                    ;
                     Set the lower bits of the LBA
  3999                        ;                STA @l IDE_SECT_SRT
  4000                        ;                LDA BIOS_LBA+1
  4001                        ;                STA @l IDE_CLDR_LO
  Mon Aug  9 2021 16:52                                                Page 76


  4002                        ;                LDA BIOS_LBA+2
  4003                        ;                STA @l IDE_CLDR_HI
  4004                        ;
  4005                        ;                LDA #IDE_CMD_READ_SECTOR        ;
                     The READ SECTOR command
  4006                        ;                STA @l IDE_CMD_STAT
  4007                        ;
  4008                        ;                NOP                             ;
                     Wait about 500ns
  4009                        ;                NOP
  4010                        ;                NOP
  4011                        ;                NOP
  4012                        ;
  4013                        ;                JSR IDE_DRV_READY_NOTBUSY       ;
                     Wait for the device to be ready
  4014                        ;                BCC ret_failure                 ;
                     If an error occurred, return it
  4015                        ;.if ( TARGET_SYS == SYS_C256_FMX )
  4016                        ;                setas
  4017                        ;                LDA @l IDE_DATA                 ;
                     Read and toss out one byte from the 8-bit interface
  4018                        ;.endif
  4019                        ;                LDY #0
  4020                        ;                setaxl
  4021                        ;read_loop       LDA @l IDE_DATA_LO              ;
                     Get the word of data from the device
  4022                        ;                STA [BIOS_BUFF_PTR],Y           ;
                     Save it to the buffer
  4023                        ;                INY                             ;
                     Move to the next position
  4024                        ;                INY
  4025                        ;                CPY #512
  4026                        ;                BNE read_loop
  4027                        ;
  4028                        ;                NOP                             ;
                     Wait about 500ns
  4029                        ;                NOP
  4030                        ;                NOP
  4031                        ;                NOP
  4032                        ;
  4033                        ;ret_success     setas
  4034                        ;                LDA #0
  4035                        ;                STA BIOS_STATUS
  4036                        ;                STA @w FDC_ST0
  4037                        ;
  4038                        ;                PLP                             ;
                     Return success
  4039                        ;                PLD
  4040                        ;                PLB
  4041                        ;                PLY
  4042                        ;                SEC
  4043                        ;                RTL
  4044                        ;
  4045                        ;ret_failure     setas
  4046                        ;                LDA @l IDE_ERROR
  4047                        ;                STA @w FDC_ST0
  4048                        ;
  4049                        ;                ; TODO: determine if there was a 
  Mon Aug  9 2021 16:52                                                Page 77


                    timeout
  4050                        ;
  4051                        ;                LDA #BIOS_ERR_READ
  4052                        ;                STA BIOS_STATUS
  4053                        ;
  4054                        ;                PLP
  4055                        ;                PLD
  4056                        ;                PLB
  4057                        ;                PLY
  4058                        ;                CLC
  4059                        ;                RTL
  4060                        ;                .pend
  4061                        ;
  4062                        ;;
  4063                        ;; IDE_PUTBLOCK
  4064                        ;; Write a sector's worth of data to the IDE drive
  4065                        ;;
  4066                        ;; Inputs:
  4067                        ;;   BIOS_LBA = the LBA of the sector (absolute ad
                    dress, not relative to partition)
  4068                        ;;   BIOS_BUFF_PTR = the address containing the da
                    ta
  4069                        ;;
  4070                        ;; Outputs:
  4071                        ;;   BIOS_STATUS = The status of the operation.
  4072                        ;;   FDC_ST0 = the error code from the drive, if C
                     was clear
  4073                        ;;   C = set on success, clear on failure
  4074                        ;;
  4075                        ;IDE_PUTBLOCK    .proc
  4076                        ;                PHY
  4077                        ;                PHB
  4078                        ;                PHD
  4079                        ;                PHP
  4080                        ;
  4081                        ;                TRACE "IDE_PUTBLOCK"
  4082                        ;
  4083                        ;                setdbr 0
  4084                        ;                setdp SDOS_VARIABLES
  4085                        ;
  4086                        ;                setas
  4087                        ;
  4088                        ;                JSR IDE_DRV_READY_NOTBUSY       ;
                     Wait until the IDE is clear to accept commands
  4089                        ;
  4090                        ;                LDA BIOS_LBA+3                  ;
                     Get the high bits of the LBA
  4091                        ;                AND #$07
  4092                        ;                ORA #%11100000                  ;
                     Select DEV=0 and LBA mode = 1
  4093                        ;                STA @l IDE_HEAD                 ;
                     Ensure master is selected
  4094                        ;
  4095                        ;                JSR IDE_DRV_READY_NOTBUSY       ;
                     And wait for it to take effect
  4096                        ;
  4097                        ;                setas
  4098                        ;                LDA #1                          ;
  Mon Aug  9 2021 16:52                                                Page 78


                     Set that we want one sector
  4099                        ;                STA @l IDE_SECT_CNT
  4100                        ;
  4101                        ;                LDA BIOS_LBA                    ;
                     Set the lower bits of the LBA
  4102                        ;                STA @l IDE_SECT_SRT
  4103                        ;                LDA BIOS_LBA+1
  4104                        ;                STA @l IDE_CLDR_LO
  4105                        ;                LDA BIOS_LBA+2
  4106                        ;                STA @l IDE_CLDR_HI
  4107                        ;
  4108                        ;                LDA #IDE_CMD_WRITE_SECTOR       ;
                     The READ SECTOR command
  4109                        ;                STA @l IDE_CMD_STAT
  4110                        ;
  4111                        ;                NOP                             ;
                     Wait about 500ns
  4112                        ;                NOP
  4113                        ;                NOP
  4114                        ;                NOP
  4115                        ;
  4116                        ;                JSR IDE_DRV_READY_NOTBUSY       ;
                     Wait for the device to be ready
  4117                        ;                BCC ret_failure                 ;
                     If an error occurred, return it
  4118                        ;
  4119                        ;                setaxl
  4120                        ;                LDY #0
  4121                        ;read_loop       LDA [BIOS_BUFF_PTR],Y           ;
                     Get the word from the buffer
  4122                        ;                STA @l IDE_DATA_LO              ;
                     Save the word to the device
  4123                        ;                INY                             ;
                     Move to the next position
  4124                        ;                INY
  4125                        ;                CPY #512
  4126                        ;                BNE read_loop
  4127                        ;
  4128                        ;                NOP                             ;
                     Wait about 500ns
  4129                        ;                NOP
  4130                        ;                NOP
  4131                        ;                NOP
  4132                        ;
  4133                        ;                JSR IDE_DRV_READY_NOTBUSY       ;
                     Wait for the device to be ready
  4134                        ;                BCC ret_failure                 ;
                     If an error occurred, return it
  4135                        ;
  4136                        ;                NOP                             ;
                     Wait about 500ns
  4137                        ;                NOP
  4138                        ;                NOP
  4139                        ;                NOP
  4140                        ;
  4141                        ;                LDA @l IDE_CMD_STAT             ;
                     Check the status
  4142                        ;                BIT #IDE_STAT_ERR | IDE_STAT_DF
  Mon Aug  9 2021 16:52                                                Page 79


  4143                        ;                BNE ret_failure                 ;
                     If error: return failure
  4144                        ;
  4145                        ;ret_success     setas
  4146                        ;                LDA #0
  4147                        ;                STA BIOS_STATUS
  4148                        ;                STA @w FDC_ST0
  4149                        ;
  4150                        ;                PLP                             ;
                     Return success
  4151                        ;                PLD
  4152                        ;                PLB
  4153                        ;                PLY
  4154                        ;                SEC
  4155                        ;                RTL
  4156                        ;
  4157                        ;ret_failure     NOP                             ;
                     Wait about 500ns
  4158                        ;                NOP
  4159                        ;                NOP
  4160                        ;                NOP
  4161                        ;
  4162                        ;                setas
  4163                        ;                LDA @l IDE_ERROR
  4164                        ;                BRA save_error
  4165                        ;
  4166                        ;                NOP
  4167                        ;                NOP
  4168                        ;                NOP
  4169                        ;                NOP
  4170                        ;
  4171                        ;                LDA @l IDE_ERROR
  4172                        ;save_error      STA @w FDC_ST0
  4173                        ;
  4174                        ;                ; TODO: determine if there was a 
                    timeout
  4175                        ;
  4176                        ;                LDA #BIOS_ERR_WRITE
  4177                        ;                STA BIOS_STATUS
  4178                        ;
  4179                        ;                PLP
  4180                        ;                PLD
  4181                        ;                PLB
  4182                        ;                PLY
  4183                        ;                CLC
  4184                        ;                RTL
  4185                        ;                .pend
  4186                        ; */
  4187                        ;
  4188                        	.line	1224
  4189                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\drivers\DRIVER_FMXIDE.c",575
  4190                        	xref	~~k_debug_string
  4191                        	.sym	~~k_hd_get_id,~~k_hd_get_id,80,2,0
  4192                        	.sym	~~k_hd_diagnostic,~~k_hd_diagnostic,65,2
                    ,0
  4193                        	.sym	~~k_drive_busy,~~k_drive_busy,65,3,0
  4194                        	.sym	~~k_drive_ready_not_busy,~~k_drive_ready
  Mon Aug  9 2021 16:52                                                Page 80


                    _not_busy,80,3,0
  4195                        	.sym	~~k_drive_not_busy_or_drq,~~k_drive_not_
                    busy_or_drq,80,3,0
  4196                        	.sym	~~k_drive_ready,~~k_drive_ready,65,3,0
  4197                        	.sym	~~k_drive_wait_dsc,~~k_drive_wait_dsc,80
                    ,3,0
  4198                        	.sym	~~k_drive_wait_drq,~~k_drive_wait_drq,65
                    ,3,0
  4199                        	.sym	~~f_get_driver,~~f_get_driver,1098,3,32,
                    58
  4200                        	.sym	~~DEVICE_HD,~~DEVICE_HD,138,2,32,58
  4201                        	.sym	~~DRIVER_FMXIDE,~~DRIVER_FMXIDE,10,3,808
                    ,59
  4202                        	.sym	~~k_hd_send_command,~~k_hd_send_command,
                    78,2,0
  4203                        	.sym	~~k_hd_write_sector,~~k_hd_write_sector,
                    78,2,0
  4204                        	.sym	~~k_hd_read_sector,~~k_hd_read_sector,78
                    ,2,0
  4205                        	.sym	~~k_hd_uninitialize,~~k_hd_uninitialize,
                    78,2,0
  4206                        	.sym	~~k_hd_initialize,~~k_hd_initialize,78,2
                    ,0
  4207                        	.sym	~~_k_driver_base,~~_k_driver_base,129,3,
                    32
  4208                        	.sym	FILE,0,138,14,32,130
  4209                        	.sym	FILE_POINTER,0,10,14,112,130
  4210                        	.sym	PDOSHANDLE,0,138,14,32,129
  4211                        	.sym	DOSHANDLE,0,10,14,80,129
  4212                        	.sym	PFXDOSDEVICE,0,138,14,32,127
  4213                        	.sym	FXDOSDEVICE,0,10,14,5744,127
  4214                        	.sym	DOSINITDEVICE,0,641,14,32
  4215                        	.sym	DOSSECTORWRITER,0,654,14,32
  4216                        	.sym	DOSSECTORREADER,0,654,14,32
  4217                        	.sym	PIDENTIFY_DEVICE_DATA,0,138,14,32,126
  4218                        	.sym	IDENTIFY_DEVICE_DATA,0,10,14,4096,126
  4219                        	.sym	PIDSECTOR,0,138,14,32,103
  4220                        	.sym	IDSECTOR,0,10,14,2048,103
  4221                        	.sym	PLFN,0,138,14,32,102
  4222                        	.sym	LFN,0,10,14,256,102
  4223                        	.sym	PFAT16ENTRYLONG,0,138,14,32,101
  4224                        	.sym	FAT16ENTRYLONG,0,10,14,288,101
  4225                        	.sym	PFAT16ENTRY,0,138,14,32,100
  4226                        	.sym	FAT16ENTRY,0,10,14,256,100
  4227                        	.sym	Fat16BootSector,0,10,14,4096,99
  4228                        	.sym	PPARTITIONTABLE,0,138,14,32,98
  4229                        	.sym	PARTITIONTABLE,0,10,14,128,98
  4230                        	.sym	PFATBOOTSECTOR,0,138,14,32,97
  4231                        	.sym	FATBOOTSECTOR,0,10,14,928,97
  4232                        	.sym	fat_BS_t,0,10,14,688,96
  4233                        	.sym	fat_extBS_16_t,0,10,14,192,95
  4234                        	.sym	PFAT32EXT,0,138,14,32,94
  4235                        	.sym	fat_extBS_32_t,0,10,14,416,94
  4236                        	.sym	P_FX_FAT_DIR_INFO,0,138,14,32,93
  4237                        	.sym	FX_FAT_DIR_INFO,0,10,14,256,93
  4238                        	.sym	PFILEINFO,0,138,14,32,92
  4239                        	.sym	FILEINFO,0,10,14,136,92
  4240                        	.sym	PDISKINFO,0,138,14,32,91
  Mon Aug  9 2021 16:52                                                Page 81


  4241                        	.sym	DISKINFO,0,10,14,416,91
  4242                        	.sym	PDIRENTRY,0,138,14,32,90
  4243                        	.sym	DIRENTRY,0,10,14,256,90
  4244                        	.sym	DRESULT,0,5,14,16
  4245                        	.sym	DSTATUS,0,14,14,8
  4246                        	.sym	FRESULT,0,5,14,16
  4247                        	.sym	MKFS_PARM,0,10,14,80,89
  4248                        	.sym	FILINFO,0,10,14,2224,88
  4249                        	.sym	DIR,0,10,14,416,87
  4250                        	.sym	FIL,0,10,14,4400,86
  4251                        	.sym	FFOBJID,0,10,14,128,85
  4252                        	.sym	FATFS,0,10,14,4504,84
  4253                        	.sym	LBA_t,0,18,14,32
  4254                        	.sym	FSIZE_t,0,18,14,32
  4255                        	.sym	TCHAR,0,14,14,8
  4256                        	.sym	PCOMMANDARGS,0,138,14,32,83
  4257                        	.sym	COMMANDARGS,0,10,14,64,83
  4258                        	.sym	PTOKENIZESTATE,0,133,14,32
  4259                        	.sym	TOKENIZESTATE,0,5,14,16
  4260                        	.sym	PTOKEN,0,138,14,32,82
  4261                        	.sym	TOKEN,0,10,14,64,82
  4262                        	.sym	PTOKENTYPE,0,133,14,32
  4263                        	.sym	TOKENTYPE,0,5,14,16
  4264                        	.sym	FXCommandHandler,0,656,14,32
  4265                        	.sym	PCONSOLECTX,0,138,14,32,81
  4266                        	.sym	CONSOLECTX,0,10,14,1144,81
  4267                        	.sym	PSPINNERCTX,0,138,14,32,80
  4268                        	.sym	SPINNERCTX,0,10,14,48,80
  4269                        	.sym	HCLIP,0,138,14,32,79
  4270                        	.sym	PCLIPBOARD_DATA,0,138,14,32,79
  4271                        	.sym	CLIPBOARD_DATA,0,10,14,168,79
  4272                        	.sym	PEVENTMANAGER,0,138,14,32,78
  4273                        	.sym	EVENTMANAGER,0,10,14,192,78
  4274                        	.sym	EV_RUN,0,656,14,32
  4275                        	.sym	EV_QUERY_METRIC,0,656,14,32
  4276                        	.sym	EV_CONFIGURE,0,656,14,32
  4277                        	.sym	EV_UNINIT,0,641,14,32
  4278                        	.sym	EV_INIT,0,8833,14,32
  4279                        	.sym	PMOUSE_MSG_STATE,0,138,14,32,77
  4280                        	.sym	MOUSE_MSG_STATE,0,10,14,184,77
  4281                        	.sym	PFXEVENTPROCESS,0,138,14,32,76
  4282                        	.sym	FXEVENTPROCESS,0,10,14,64,76
  4283                        	.sym	FXASYNCPROCESS,0,641,14,32
  4284                        	.sym	PMARSHALDATA,0,139,14,32,75
  4285                        	.sym	MARSHALDATA,0,11,14,32,75
  4286                        	.sym	FXIDLEPROCESS,0,641,14,32
  4287                        	.sym	FXEventProc,0,641,14,32
  4288                        	.sym	PMOUSEMSGDATA,0,138,14,32,74
  4289                        	.sym	MOUSEMSGDATA,0,10,14,64,74
  4290                        	.sym	MSGIRQ,0,5,14,16
  4291                        	.sym	MAINLOOPARGS,0,10,14,16,73
  4292                        	.sym	PEACHCHILD_MSG,0,138,14,32,72
  4293                        	.sym	EACHCHILD_MSG,0,10,14,64,72
  4294                        	.sym	PMSGBOX_DATA,0,138,14,32,71
  4295                        	.sym	MSGBOX_DATA,0,10,14,96,71
  4296                        	.sym	PDESKTOP_DATA,0,138,14,32,70
  4297                        	.sym	DESKTOP_DATA,0,10,14,64,70
  4298                        	.sym	PWINDOWMANAGER,0,138,14,32,69
  Mon Aug  9 2021 16:52                                                Page 82


  4299                        	.sym	WINDOWMANAGER,0,10,14,160,69
  4300                        	.sym	WM_DOPROCS,0,641,14,32
  4301                        	.sym	WM_QUERY_METRIC,0,656,14,32
  4302                        	.sym	WM_CONFIGURE,0,656,14,32
  4303                        	.sym	WM_HANDLE_EVENT,0,8833,14,32
  4304                        	.sym	WM_EVENTS,0,641,14,32
  4305                        	.sym	PCUR_PALETTE_MAP,0,138,14,32,68
  4306                        	.sym	CUR_PALETTE_MAP,0,10,14,400,68
  4307                        	.sym	PCLICKDETECTED,0,138,14,32,67
  4308                        	.sym	CLICKDETECTED,0,10,14,64,67
  4309                        	.sym	OBJECTCLICKED,0,641,14,32
  4310                        	.sym	PALLOCATIONHEADER,0,138,14,32,66
  4311                        	.sym	ALLOCATIONHEADER,0,10,14,80,66
  4312                        	.sym	PIPCPORT,0,138,14,32,65
  4313                        	.sym	IPCPORT,0,10,14,144,65
  4314                        	.sym	MemoryCallback,0,641,14,32
  4315                        	.sym	PFXMEMORYMAP,0,138,14,32,64
  4316                        	.sym	FXMEMORYMAP,0,10,14,2072,64
  4317                        	.sym	UMM_HEAP_INFO,0,10,14,256,63
  4318                        	.sym	PEXECUTIVE,0,138,14,32,62
  4319                        	.sym	EXECUTIVE,0,10,14,128,62
  4320                        	.sym	EX_QUERY_METRIC,0,656,14,32
  4321                        	.sym	EX_CONFIGURE,0,656,14,32
  4322                        	.sym	EX_UNINIT,0,641,14,32
  4323                        	.sym	EX_INIT,0,8833,14,32
  4324                        	.sym	PFXSTRING,0,138,14,32,61
  4325                        	.sym	FXSTRING,0,10,14,64,61
  4326                        	.sym	PIRQCHAIN,0,138,14,32,60
  4327                        	.sym	IRQCHAIN,0,10,14,128,60
  4328                        	.sym	DEVICEDRIVER_COMMAND,0,654,14,32
  4329                        	.sym	DEVICEDRIVER_UNLOAD,0,654,14,32
  4330                        	.sym	DEVICEDRIVER_WRITE,0,654,14,32
  4331                        	.sym	DEVICEDRIVER_READ,0,654,14,32
  4332                        	.sym	DEVICEDRIVER_LOAD,0,654,14,32
  4333                        	.sym	DEVICEDRIVER_IRQ,0,641,14,32
  4334                        	.sym	PFX_BLOCK_DEVICE_DRIVER,0,138,14,32,59
  4335                        	.sym	FX_BLOCK_DEVICE_DRIVER,0,10,14,808,59
  4336                        	.sym	GETDRIVERDEF,0,8842,14,32,58
  4337                        	.sym	PFX_DEVICE_DRIVER,0,138,14,32,58
  4338                        	.sym	FX_DEVICE_DRIVER,0,10,14,776,58
  4339                        	.sym	~~k_debug_string,~~k_debug_string,65,18,
                    0
  4340                        	.sym	PSEGMENTHEADER,0,138,14,32,57
  4341                        	.sym	SEGMENTHEADER,0,10,14,160,57
  4342                        	.sym	PDEBUGBYTEBITS,0,138,14,32,56
  4343                        	.sym	DEBUGBYTEBITS,0,10,14,8,56
  4344                        	.sym	PFXENVIRONMENT,0,138,14,32,55
  4345                        	.sym	FXENVIRONMENT,0,10,14,96,55
  4346                        	.sym	PFXZEROPAGE,0,138,14,32,54
  4347                        	.sym	FXZEROPAGE,0,10,14,720,54
  4348                        	.sym	IRQBUFFER,0,10,14,32,53
  4349                        	.sym	KERNELTRAPCALL,0,641,14,32
  4350                        	.sym	PFXKERNEL_API_CALLTABLE,0,138,14,32,52
  4351                        	.sym	FXKERNEL_API_CALLTABLE,0,10,14,8192,52
  4352                        	.sym	FOREACHNODEUNTIL,0,654,14,32
  4353                        	.sym	FOREACHNODE,0,641,14,32
  4354                        	.sym	PFXRFHEADER_STRING_ENTRY,0,138,14,32,51
  4355                        	.sym	FXRFHEADER_STRING_ENTRY,0,10,14,40,51
  Mon Aug  9 2021 16:52                                                Page 83


  4356                        	.sym	PFXRFHEADER_STRING,0,138,14,32,50
  4357                        	.sym	FXRFHEADER_STRING,0,10,14,32,50
  4358                        	.sym	PFXRFHEADER_FONT,0,138,14,32,49
  4359                        	.sym	FXRFHEADER_FONT,0,10,14,144,49
  4360                        	.sym	PFXRFHEADER,0,138,14,32,48
  4361                        	.sym	FXRFHEADER,0,10,14,72,48
  4362                        	.sym	PFXCOMBUFFER,0,138,14,32,47
  4363                        	.sym	FXCOMBUFFER,0,10,14,2080,47
  4364                        	.sym	PSUBMENULIST,0,138,14,32,46
  4365                        	.sym	SUBMENULIST,0,10,14,40,46
  4366                        	.sym	HSUBMENU,0,7,14,32
  4367                        	.sym	PSUBMENU,0,138,14,32,45
  4368                        	.sym	SUBMENU,0,10,14,64,45
  4369                        	.sym	MenuAction,0,641,14,32
  4370                        	.sym	PMENUANCHOR,0,138,14,32,44
  4371                        	.sym	MENUANCHOR,0,10,14,272,44
  4372                        	.sym	PMSGBOX,0,138,14,32,43
  4373                        	.sym	MSGBOX,0,10,14,144,43
  4374                        	.sym	PTEXTBOX,0,138,14,32,42
  4375                        	.sym	TEXTBOX,0,10,14,144,42
  4376                        	.sym	PLISTBOX,0,138,14,32,41
  4377                        	.sym	LISTBOX,0,10,14,240,41
  4378                        	.sym	PSCROLLBAR,0,138,14,32,40
  4379                        	.sym	SCROLLBAR,0,10,14,240,40
  4380                        	.sym	PBUTTON,0,138,14,32,39
  4381                        	.sym	BUTTON,0,10,14,96,39
  4382                        	.sym	PMENUDROPDOWNDATA,0,138,14,32,38
  4383                        	.sym	MENUDROPDOWNDATA,0,10,14,5152,38
  4384                        	.sym	PMENUTAG,0,138,14,32,37
  4385                        	.sym	MENUTAG,0,10,14,160,37
  4386                        	.sym	PMENU,0,138,14,32,36
  4387                        	.sym	MENU,0,10,14,280,36
  4388                        	.sym	HMENURESOURCE,0,129,14,32
  4389                        	.sym	FONTMETRIC,0,10,14,32,35
  4390                        	.sym	TITLE,0,142,14,32
  4391                        	.sym	PHANDLE,0,1153,14,32
  4392                        	.sym	HANDLE,0,129,14,32
  4393                        	.sym	PWINDOWEX,0,138,14,32,34
  4394                        	.sym	WINDOWEX,0,10,14,3880,34
  4395                        	.sym	PWINDOW,0,138,14,32,33
  4396                        	.sym	WINDOW,0,10,14,3904,33
  4397                        	.sym	PDRAGDATA,0,138,14,32,32
  4398                        	.sym	DRAGDATA,0,10,14,216,32
  4399                        	.sym	PNCCLICKABLE,0,138,14,32,31
  4400                        	.sym	NCCLICKABLE,0,10,14,136,31
  4401                        	.sym	HCLICKABLE,0,7,14,32
  4402                        	.sym	PCLICKABLE,0,138,14,32,30
  4403                        	.sym	CLICKABLE,0,10,14,152,30
  4404                        	.sym	PWNDCLASS,0,138,14,32,29
  4405                        	.sym	WNDCLASS,0,10,14,272,29
  4406                        	.sym	HBRUSH,0,129,14,32
  4407                        	.sym	HCURSOR,0,129,14,32
  4408                        	.sym	HICON,0,129,14,32
  4409                        	.sym	HINSTANCE,0,129,14,32
  4410                        	.sym	FXWndProc,0,654,14,32
  4411                        	.sym	PDRECT,0,138,14,32,28
  4412                        	.sym	DRECT,0,10,14,112,28
  4413                        	.sym	PRECTP,0,138,14,32,27
  Mon Aug  9 2021 16:52                                                Page 84


  4414                        	.sym	RECTP,0,10,14,96,27
  4415                        	.sym	PRECT,0,138,14,32,26
  4416                        	.sym	RECT,0,10,14,112,26
  4417                        	.sym	PPOINT,0,138,14,32,25
  4418                        	.sym	POINT,0,10,14,32,25
  4419                        	.sym	PFXPROPERTY,0,138,14,32,23
  4420                        	.sym	FXPROPERTY,0,10,14,384,23
  4421                        	.sym	PKEYSTATE,0,138,14,32,22
  4422                        	.sym	KEYSTATE,0,10,14,112,22
  4423                        	.sym	SCANCODE,0,14,14,8
  4424                        	.sym	KEYCODE,0,16,14,16
  4425                        	.sym	PFXPROCESSMESSAGE,0,138,14,32,21
  4426                        	.sym	FXPROCESSMESSAGE,0,10,14,112,21
  4427                        	.sym	PFXPROCESS,0,138,14,32,20
  4428                        	.sym	FXPROCESS,0,10,14,800,20
  4429                        	.sym	PDESKTOP_CONTROL,0,138,14,32,19
  4430                        	.sym	DESKTOP_CONTROL,0,10,14,392,19
  4431                        	.sym	PCONSOLE_CONTROL,0,138,14,32,18
  4432                        	.sym	CONSOLE_CONTROL,0,10,14,448,18
  4433                        	.sym	FXProcessProc,0,641,14,32
  4434                        	.sym	PFXCMDMESSAGE,0,138,14,32,17
  4435                        	.sym	FXCMDMESSAGE,0,10,14,312,17
  4436                        	.sym	PFXOSMESSAGE,0,138,14,32,16
  4437                        	.sym	FXOSMESSAGE,0,10,14,312,16
  4438                        	.sym	PINT_REGS,0,138,14,32,15
  4439                        	.sym	INT_REGS,0,10,14,104,15
  4440                        	.sym	TASK_STACK,0,10,14,32,14
  4441                        	.sym	TASK,0,10,14,48,13
  4442                        	.sym	PIRQDATA,0,138,14,32,12
  4443                        	.sym	IRQDATA,0,10,14,48,12
  4444                        	.sym	HMENU,0,129,14,32
  4445                        	.sym	HWND,0,129,14,32
  4446                        	.sym	MSGDATA,0,14,14,8
  4447                        	.sym	MSGDEST,0,18,14,32
  4448                        	.sym	MSGSRC,0,18,14,32
  4449                        	.sym	MSGTYPE,0,16,14,16
  4450                        	.sym	PROCESS_RESOURCE_LIST,0,138,14,32,6
  4451                        	.sym	PROCESS_TLS_LIST,0,138,14,32,6
  4452                        	.sym	SEMAPHORE_LIST,0,138,14,32,6
  4453                        	.sym	FILE_BLOCK_LIST,0,138,14,32,6
  4454                        	.sym	FILE_PATH_LIST,0,138,14,32,6
  4455                        	.sym	PROCEDURE_LIST,0,138,14,32,6
  4456                        	.sym	FILE_HANDLE,0,138,14,32,11
  4457                        	.sym	FILE_BLOCK,0,10,14,552,11
  4458                        	.sym	SEMAPHORE,0,10,14,16,10
  4459                        	.sym	PPROCESS_SIGNAL,0,138,14,32,9
  4460                        	.sym	PROCESS_SIGNAL,0,10,14,16,9
  4461                        	.sym	KRESULT,0,18,14,32
  4462                        	.sym	PKERNEL_ERROR,0,138,14,32,8
  4463                        	.sym	KERNEL_ERROR,0,10,14,32,8
  4464                        	.sym	PROCESS_STATUS,0,16,14,16
  4465                        	.sym	FILE_PATH_NAME,0,142,14,32
  4466                        	.sym	PROCESS_RESOURCE,0,129,14,32
  4467                        	.sym	PROCESS_TLS,0,129,14,32
  4468                        	.sym	PROCESS_CTX,0,129,14,32
  4469                        	.sym	USERID,0,16,14,16
  4470                        	.sym	PROCESS_ID,0,18,14,32
  4471                        	.sym	PROCESS_BANK,0,14,14,8
  Mon Aug  9 2021 16:52                                                Page 85


  4472                        	.sym	PFXQUEUE,0,138,14,32,7
  4473                        	.sym	FXQUEUE,0,10,14,80,7
  4474                        	.sym	PFXNODELIST,0,138,14,32,6
  4475                        	.sym	FXNODELIST,0,10,14,96,6
  4476                        	.sym	NodeListDeallocator,0,641,14,32
  4477                        	.sym	PFXNODE,0,138,14,32,5
  4478                        	.sym	FXNODE,0,10,14,384,5
  4479                        	.sym	PBYTEBITS,0,138,14,32,4
  4480                        	.sym	BYTEBITS,0,10,14,8,4
  4481                        	.sym	HRESULT,0,18,14,32
  4482                        	.sym	LPWCHAR,0,144,14,32
  4483                        	.sym	WCHAR,0,16,14,16
  4484                        	.sym	HSTRINGTABLE,0,129,14,32
  4485                        	.sym	HCOLOR,0,129,14,32
  4486                        	.sym	HFONT,0,129,14,32
  4487                        	.sym	HDC,0,129,14,32
  4488                        	.sym	HPOINTER,0,129,14,32
  4489                        	.sym	uint32_t,0,18,14,32
  4490                        	.sym	uint8_t,0,14,14,8
  4491                        	.sym	LPBOOL,0,142,14,32
  4492                        	.sym	BOOL,0,14,14,8
  4493                        	.sym	DWORD,0,18,14,32
  4494                        	.sym	ULONG,0,18,14,32
  4495                        	.sym	LPLONG,0,135,14,32
  4496                        	.sym	LONG,0,7,14,32
  4497                        	.sym	PUINT,0,144,14,32
  4498                        	.sym	USHORT,0,16,14,16
  4499                        	.sym	UINT,0,16,14,16
  4500                        	.sym	INT,0,5,14,16
  4501                        	.sym	WORD,0,5,14,16
  4502                        	.sym	PBYTE,0,142,14,32
  4503                        	.sym	BYTE,0,14,14,8
  4504                        	.sym	IOPORT,0,142,14,32
  4505                        	.sym	PUCHAR,0,142,14,32
  4506                        	.sym	UCHAR,0,14,14,8
  4507                        	.sym	LPWCSTR,0,142,14,32
  4508                        	.sym	LPCSTR,0,142,14,32
  4509                        	.sym	LPSTR,0,142,14,32
  4510                        	.sym	LPCHAR,0,142,14,32
  4511                        	.sym	CHAR,0,14,14,8
  4512                        	.sym	PUINT_32,0,146,14,32
  4513                        	.sym	UINT_32,0,18,14,32
  4514                        	.sym	PUINT_16,0,144,14,32
  4515                        	.sym	UINT_16,0,16,14,16
  4516                        	.sym	PUINT_8,0,142,14,32
  4517                        	.sym	UINT_8,0,14,14,8
  4518                        	.sym	LPVOID,0,129,14,32
  4519                        	.sym	VOID,0,1,14,32
  4520                        	.sym	Boolean_T,0,5,14,16
  4521                        	.sym	ldiv_t,0,10,14,64,2
  4522                        	.sym	div_t,0,10,14,32,1
  4523                        	.sym	wctype_t,0,16,14,16
  4524                        	.sym	wint_t,0,16,14,16
  4525                        	.sym	wchar_t,0,14,14,8
  4526                        	.sym	ptrdiff_t,0,7,14,32
  4527                        	.sym	size_t,0,16,14,16
  4528                        	end

  Mon Aug  9 2021 16:52                                                Page 86



      Lines assembled: 4528
      Errors: 0
