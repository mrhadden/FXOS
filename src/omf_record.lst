  Mon Sep 27 2021  9:39                                                Page 1


                     ***************************************
                     **      WDC 65C816 Macro Assembler   **
                     **                                   **
                     **     Version 1.00- Aug 10 2021    **
                     ***************************************

     1                        ;:ts=8
     2             00000001   R0	equ	1
     3             00000005   R1	equ	5
     4             00000009   R2	equ	9
     5             0000000D   R3	equ	13
     6                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\omf/OMF_Record.c",0
     7                        ;/************************************************
                    ************************/
     8                        ;/*                                               
                                           */
     9                        ;/*  OMF_Record.c : Module pour le décodage des Re
                    cord des Segments OMF. */
    10                        ;/*                                               
                                           */
    11                        ;/************************************************
                    ************************/
    12                        ;/*  Auteur : Olivier ZARDINI  *  Brutal Deluxe So
                    ftware  *  Avril 2013  */
    13                        ;/************************************************
                    ************************/
    14                        ;
    15                        ;#include "omf/OMF_Record.h"
    16                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\omf/OMF_Record.h",0
    17                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxtypes.h",0
    18                        	.stag	_fx_bytebits,8,1
    19                        	.member	b7,0,14,17,1
    20                        	.member	b6,1,14,17,1
    21                        	.member	b5,2,14,17,1
    22                        	.member	b4,3,14,17,1
    23                        	.member	b3,4,14,17,1
    24                        	.member	b2,5,14,17,1
    25                        	.member	b1,6,14,17,1
    26                        	.member	b0,7,14,17,1
    27                        	.eos
    28                        	.stag	_fx_node,384,2
    29                        	.member	type,0,14,8,8
    30                        	.member	Reserved0,8,14,8,8
    31                        	.member	data,16,129,8,32
    32                        	.member	last,48,138,8,32,2
    33                        	.member	next,80,138,8,32,2
    34                        	.member	name,112,110,8,0,32
    35                        	.member	Reserved1,368,16,8,16
    36                        	.eos
    37                        	.stag	_fx_nodelist,96,3
    38                        	.member	listhead,0,138,8,32,2
    39                        	.member	listData,32,129,8,32
    40                        	.member	deallocator,64,641,8,32
    41                        	.eos
    42                        	.stag	_fx_queue,80,4
  Mon Sep 27 2021  9:39                                                Page 2


    43                        	.member	count,0,5,8,16
    44                        	.member	front,16,138,8,32,2
    45                        	.member	rear,48,138,8,32,2
    46                        	.eos
    47                        	.stag	fake5_,32,5
    48                        	.member	subsystem,0,14,8,8
    49                        	.member	level,8,14,8,8
    50                        	.member	error,16,16,8,16
    51                        	.eos
    52                        	.stag	_fx_process_signal,16,6
    53                        	.member	cbSize,0,16,8,16
    54                        	.eos
    55                        	.stag	_fx_semaphore,16,7
    56                        	.member	reserved,0,5,8,16
    57                        	.eos
    58                        	.stag	_fx_fileBlock,552,8
    59                        	.member	openCount,0,16,8,16
    60                        	.member	lockCount,16,16,8,16
    61                        	.member	dirty,32,14,8,8
    62                        	.member	fileBuffer,40,110,8,0,64
    63                        	.eos
    64                        	.stag	_fx_irq_data,48,9
    65                        	.member	line,0,5,8,16
    66                        	.member	keycode,16,142,8,32
    67                        	.eos
    68                        	.stag	_task,48,10
    69                        	.member	SPL,0,14,8,8
    70                        	.member	SPH,8,14,8,8
    71                        	.member	pstack,16,142,8,32
    72                        	.eos
    73                        	.stag	_task_stack,32,11
    74                        	.member	SS,0,142,8,32
    75                        	.eos
    76                        	.stag	int_regs,104,12
    77                        	.member	PB,0,14,8,8
    78                        	.member	PH,8,14,8,8
    79                        	.member	PL,16,14,8,8
    80                        	.member	PP,24,14,8,8
    81                        	.member	DB,32,14,8,8
    82                        	.member	DH,40,14,8,8
    83                        	.member	DL,48,14,8,8
    84                        	.member	AH,56,14,8,8
    85                        	.member	AL,64,14,8,8
    86                        	.member	XH,72,14,8,8
    87                        	.member	XL,80,14,8,8
    88                        	.member	YH,88,14,8,8
    89                        	.member	YL,96,14,8,8
    90                        	.eos
    91                        	.stag	_fx_eventMessage,312,13
    92                        	.member	src,0,18,8,32
    93                        	.member	dest,32,18,8,32
    94                        	.member	type,64,16,8,16
    95                        	.member	hwnd,80,129,8,32
    96                        	.member	pheap,112,129,8,32
    97                        	.member	msgTime,144,18,8,32
    98                        	.member	data,176,110,8,0,16
    99                        	.member	attr,304,14,8,8
   100                        	.eos
  Mon Sep 27 2021  9:39                                                Page 3


   101                        	.stag	_fx_cmdMessage,312,14
   102                        	.member	src,0,18,8,32
   103                        	.member	dest,32,18,8,32
   104                        	.member	type,64,16,8,16
   105                        	.member	hwnd,80,129,8,32
   106                        	.member	pheap,112,129,8,32
   107                        	.member	msgTime,144,18,8,32
   108                        	.member	cmdCId,176,16,8,16
   109                        	.member	cmdMId,192,16,8,16
   110                        	.member	parameter1,208,18,8,32
   111                        	.member	parameter2,240,18,8,32
   112                        	.member	parameter3,272,18,8,32
   113                        	.member	attr,304,14,8,8
   114                        	.eos
   115                        	.stag	_fx_console_ctl,448,15
   116                        	.member	maxCols,0,5,8,16
   117                        	.member	maxRows,16,5,8,16
   118                        	.member	curX,32,5,8,16
   119                        	.member	curY,48,5,8,16
   120                        	.member	fgColor,64,5,8,16
   121                        	.member	bgColor,80,5,8,16
   122                        	.member	mode,96,14,8,8
   123                        	.member	kbBuffer,104,101,8,0,16
   124                        	.member	screenBuffer,360,142,8,32
   125                        	.member	desktopMode,392,14,8,8
   126                        	.member	lastMouseButton,400,5,8,16
   127                        	.member	lastMouseX,416,5,8,16
   128                        	.member	lastMouseY,432,5,8,16
   129                        	.eos
   130                        	.stag	_fx_desktop_ctl,392,16
   131                        	.member	desktopMode,0,14,8,8
   132                        	.member	cursorCtl,8,5,8,16
   133                        	.member	cursorState,24,5,8,16
   134                        	.member	backgroundColor,40,5,8,16
   135                        	.member	foregroundColor,56,5,8,16
   136                        	.member	menuMode,72,5,8,16
   137                        	.member	lastMouseButton,88,5,8,16
   138                        	.member	lastMouseX,104,5,8,16
   139                        	.member	lastMouseY,120,5,8,16
   140                        	.member	currentDiskName,136,142,8,32
   141                        	.member	diskNodes,168,129,8,32
   142                        	.member	titleNodes,200,129,8,32
   143                        	.member	menuNodes,232,129,8,32
   144                        	.member	iconNodes,264,129,8,32
   145                        	.member	windowNodes,296,129,8,32
   146                        	.member	fontNodes,328,129,8,32
   147                        	.member	wndProc,360,138,8,32,3
   148                        	.eos
   149                        	.stag	_fx_process,800,17
   150                        	.member	cbSize,0,5,8,16
   151                        	.member	procId,16,18,8,32
   152                        	.member	parentId,48,18,8,32
   153                        	.member	ctx,80,129,8,32
   154                        	.member	userId,112,16,8,16
   155                        	.member	status,128,16,8,16
   156                        	.member	foregroundActive,144,14,8,8
   157                        	.member	tls,152,1121,8,32,8
   158                        	.member	commandLine,408,142,8,32
  Mon Sep 27 2021  9:39                                                Page 4


   159                        	.member	semaphores,440,138,8,32,3
   160                        	.member	fileHandles,472,138,8,32,3
   161                        	.member	pathList,504,138,8,32,3
   162                        	.member	resources,536,138,8,32,3
   163                        	.member	timerAware,568,14,8,8
   164                        	.member	timerTicks,576,112,8,0,2
   165                        	.member	timerTickCount,608,112,8,0,2
   166                        	.member	kernelError,640,10,8,32,5
   167                        	.member	consoleCtl,672,138,8,32,15
   168                        	.member	desktopCtl,704,138,8,32,16
   169                        	.member	execProc,736,641,8,32
   170                        	.member	startupArgs,768,129,8,32
   171                        	.eos
   172                        	.stag	_fxProcessMessage,112,18
   173                        	.member	src,0,18,8,32
   174                        	.member	dest,32,18,8,32
   175                        	.member	type,64,16,8,16
   176                        	.member	processInfo,80,138,8,32,17
   177                        	.eos
   178                        	.stag	_k_key_state,112,19
   179                        	.member	scanCode,0,14,8,8
   180                        	.member	isShifted,8,14,8,8
   181                        	.member	isAlt,16,14,8,8
   182                        	.member	isExtended,24,14,8,8
   183                        	.member	isCapsLock,32,14,8,8
   184                        	.member	isNumLock,40,14,8,8
   185                        	.member	isScrollLock,48,14,8,8
   186                        	.member	keyChar,56,16,8,16
   187                        	.member	scanTime,72,18,8,32
   188                        	.member	ledStatus,104,14,8,8
   189                        	.eos
   190                        	.stag	_fx_property,384,20
   191                        	.member	name,0,110,8,0,16
   192                        	.member	value,128,110,8,0,32
   193                        	.eos
   194                        	.utag	_24bitPointer,32,21
   195                        	.member	address,0,142,11,32
   196                        	.member	bytes,0,110,11,0,4
   197                        	.eos
   198                        	.stag	_PointStruct,32,22
   199                        	.member	x,0,5,8,16
   200                        	.member	y,16,5,8,16
   201                        	.eos
   202                        	.stag	_RectStruct,112,23
   203                        	.member	x,0,5,8,16
   204                        	.member	y,16,5,8,16
   205                        	.member	z,32,18,8,32
   206                        	.member	width,64,5,8,16
   207                        	.member	height,80,5,8,16
   208                        	.member	attr,96,5,8,16
   209                        	.eos
   210                        	.stag	fake24_,96,24
   211                        	.member	name,0,142,8,32
   212                        	.member	topLeft,32,10,8,32,22
   213                        	.member	bottomRight,64,10,8,32,22
   214                        	.eos
   215                        	.stag	fake25_,112,25
   216                        	.member	x,0,5,8,16
  Mon Sep 27 2021  9:39                                                Page 5


   217                        	.member	y,16,5,8,16
   218                        	.member	z,32,5,8,16
   219                        	.member	width,48,5,8,16
   220                        	.member	height,64,5,8,16
   221                        	.member	data,80,18,8,32
   222                        	.eos
   223                        	.stag	_k_WindowClass,272,26
   224                        	.member	cbSize,0,16,8,16
   225                        	.member	style,16,16,8,16
   226                        	.member	styleEx,32,16,8,16
   227                        	.member	pWndProc,48,654,8,32
   228                        	.member	hInstance,80,129,8,32
   229                        	.member	hIcon,112,129,8,32
   230                        	.member	hCursor,144,129,8,32
   231                        	.member	hbrBackground,176,129,8,32
   232                        	.member	lpszMenuName,208,142,8,32
   233                        	.member	lpszClassName,240,142,8,32
   234                        	.eos
   235                        	.stag	_ClickableRect,152,27
   236                        	.member	area,0,10,8,112,23
   237                        	.member	z,112,18,8,32
   238                        	.member	enabled,144,14,8,8
   239                        	.eos
   240                        	.stag	_NCClickableRect,136,28
   241                        	.member	area,0,10,8,112,23
   242                        	.member	msgType,112,16,8,16
   243                        	.member	enabled,128,14,8,8
   244                        	.eos
   245                        	.stag	_DragData,216,29
   246                        	.member	area,0,10,8,112,23
   247                        	.member	xoffset,112,5,8,16
   248                        	.member	yoffset,128,5,8,16
   249                        	.member	msgType,144,16,8,16
   250                        	.member	ncAction,160,16,8,16
   251                        	.member	isDrag,176,14,8,8
   252                        	.member	isResize,184,14,8,8
   253                        	.member	canDrag,192,14,8,8
   254                        	.member	canDrop,200,14,8,8
   255                        	.member	didDrag,208,14,8,8
   256                        	.eos
   257                        	.stag	_k_WindowStruct,3904,30
   258                        	.member	cbSize,0,16,8,16
   259                        	.member	style,16,18,8,32
   260                        	.member	styleEx,48,18,8,32
   261                        	.member	win_id,80,5,8,16
   262                        	.member	win_x,96,5,8,16
   263                        	.member	win_y,112,5,8,16
   264                        	.member	win_width,128,5,8,16
   265                        	.member	win_height,144,5,8,16
   266                        	.member	win_xoffset,160,5,8,16
   267                        	.member	win_yoffset,176,5,8,16
   268                        	.member	win_cxoffset,192,5,8,16
   269                        	.member	win_cyoffset,208,5,8,16
   270                        	.member	wndRect,224,10,8,112,23
   271                        	.member	clientRect,336,10,8,112,23
   272                        	.member	nonclientGadgets,448,106,8,0,28,16
   273                        	.member	clickable,2624,129,8,32
   274                        	.member	win_title,2656,110,8,0,32
  Mon Sep 27 2021  9:39                                                Page 6


   275                        	.member	Reserved0,2912,16,8,16
   276                        	.member	win_class,2928,110,8,0,16
   277                        	.member	win_class_name,3056,110,8,0,32
   278                        	.member	nBitmapLayer,3312,16,8,16
   279                        	.member	bgRegion,3328,129,8,32
   280                        	.member	procid,3360,18,8,32
   281                        	.member	pWndClass,3392,138,8,32,26
   282                        	.member	pParentWindow,3424,129,8,32
   283                        	.member	hMenu,3456,129,8,32
   284                        	.member	hPointer,3488,129,8,32
   285                        	.member	hBackground,3520,129,8,32
   286                        	.member	pChildWindows,3552,138,8,32,3
   287                        	.member	pChildHitList,3584,138,8,32,3
   288                        	.member	isVisible,3616,14,8,8
   289                        	.member	windowData,3624,129,8,32
   290                        	.member	clientData,3656,1121,8,32,6
   291                        	.member	isClosed,3848,14,8,8
   292                        	.member	isClosing,3856,14,8,8
   293                        	.member	isDesktop,3864,14,8,8
   294                        	.member	clickableNode,3872,138,8,32,2
   295                        	.eos
   296                        	.stag	_k_WindowStructEx,3880,31
   297                        	.member	cbSize,0,16,8,16
   298                        	.member	style,16,18,8,32
   299                        	.member	styleEx,48,18,8,32
   300                        	.member	win_id,80,5,8,16
   301                        	.member	win_x,96,5,8,16
   302                        	.member	win_y,112,5,8,16
   303                        	.member	win_width,128,5,8,16
   304                        	.member	win_height,144,5,8,16
   305                        	.member	win_xoffset,160,5,8,16
   306                        	.member	win_yoffset,176,5,8,16
   307                        	.member	win_cxoffset,192,5,8,16
   308                        	.member	win_cyoffset,208,5,8,16
   309                        	.member	wndRect,224,10,8,112,23
   310                        	.member	clientRect,336,10,8,112,23
   311                        	.member	nonclientGadgets,448,106,8,0,28,16
   312                        	.member	clickable,2624,129,8,32
   313                        	.member	win_title,2656,110,8,0,32
   314                        	.member	Reserved0,2912,16,8,16
   315                        	.member	win_class,2928,110,8,0,16
   316                        	.member	nBitmapLayer,3056,16,8,16
   317                        	.member	procid,3072,18,8,32
   318                        	.member	pWndClass,3104,138,8,32,26
   319                        	.member	pParentWindow,3136,129,8,32
   320                        	.member	hMenu,3168,129,8,32
   321                        	.member	hPointer,3200,129,8,32
   322                        	.member	hBackground,3232,129,8,32
   323                        	.member	pChildWindows,3264,138,8,32,3
   324                        	.member	pChildHitList,3296,138,8,32,3
   325                        	.member	isVisible,3328,14,8,8
   326                        	.member	windowData,3336,129,8,32
   327                        	.member	clientData,3368,1121,8,32,4
   328                        	.member	isClosed,3496,14,8,8
   329                        	.member	hWnd,3504,129,8,32
   330                        	.member	localRect,3536,10,8,112,23
   331                        	.member	globalRect,3648,10,8,112,23
   332                        	.member	clientOffsetRect,3760,10,8,112,23
  Mon Sep 27 2021  9:39                                                Page 7


   333                        	.member	isDesktop,3872,14,8,8
   334                        	.eos
   335                        	.stag	_FontMetric,32,32
   336                        	.member	width,0,5,8,16
   337                        	.member	height,16,5,8,16
   338                        	.eos
   339                        	.stag	_MenuStruct,280,33
   340                        	.member	cx,0,5,8,16
   341                        	.member	cy,16,5,8,16
   342                        	.member	width,32,5,8,16
   343                        	.member	height,48,5,8,16
   344                        	.member	fcolor,64,14,8,8
   345                        	.member	bcolor,72,14,8,8
   346                        	.member	chromeLeft,80,14,8,8
   347                        	.member	chromeRight1,88,14,8,8
   348                        	.member	chromeRight2,96,14,8,8
   349                        	.member	hFont,104,129,8,32
   350                        	.member	itemId,136,16,8,16
   351                        	.member	pCaption,152,142,8,32
   352                        	.member	subMenus,184,138,8,32,3
   353                        	.member	pBackground,216,129,8,32
   354                        	.member	hWndOwner,248,129,8,32
   355                        	.eos
   356                        	.stag	fake34_,160,34
   357                        	.member	menuId,0,16,8,16
   358                        	.member	caption,16,142,8,32
   359                        	.member	rect,48,10,8,112,23
   360                        	.eos
   361                        	.stag	fake35_,5152,35
   362                        	.member	pParent,0,138,8,32,30
   363                        	.member	rect,32,10,8,112,23
   364                        	.member	captions,144,1134,8,32,24
   365                        	.member	chrome,912,110,8,0,24
   366                        	.member	ids,1104,112,8,0,24
   367                        	.member	clickable,1488,106,8,0,27,24
   368                        	.member	selected,5136,16,8,16
   369                        	.eos
   370                        	.stag	_fx_button_t,96,36
   371                        	.member	pCaption,0,142,8,32
   372                        	.member	cCaption,32,16,8,16
   373                        	.member	data,48,129,8,32
   374                        	.member	captionPixelWidth,80,16,8,16
   375                        	.eos
   376                        	.stag	_fx_scrollbar_t,240,37
   377                        	.member	min,0,16,8,16
   378                        	.member	max,16,16,8,16
   379                        	.member	increment,32,16,8,16
   380                        	.member	stopsize,48,16,8,16
   381                        	.member	location,64,5,8,16
   382                        	.member	state,80,5,8,16
   383                        	.member	rectThumb,96,10,8,112,23
   384                        	.member	data,208,129,8,32
   385                        	.eos
   386                        	.stag	_fx_listbox_t,240,38
   387                        	.member	pos,0,5,8,16
   388                        	.member	selected,16,16,8,16
   389                        	.member	offsetX,32,5,8,16
   390                        	.member	offsetY,48,5,8,16
  Mon Sep 27 2021  9:39                                                Page 8


   391                        	.member	inc,64,5,8,16
   392                        	.member	direction,80,5,8,16
   393                        	.member	top,96,5,8,16
   394                        	.member	bottom,112,5,8,16
   395                        	.member	indexTop,128,5,8,16
   396                        	.member	indexBottom,144,5,8,16
   397                        	.member	maxItems,160,16,8,16
   398                        	.member	fontSet,176,142,8,32
   399                        	.member	data,208,129,8,32
   400                        	.eos
   401                        	.stag	_fx_textbox_t,144,39
   402                        	.member	pos,0,5,8,16
   403                        	.member	selected,16,16,8,16
   404                        	.member	offsetX,32,5,8,16
   405                        	.member	offsetY,48,5,8,16
   406                        	.member	isShifted,64,14,8,8
   407                        	.member	cursorState,72,14,8,8
   408                        	.member	fontSet,80,142,8,32
   409                        	.member	data,112,129,8,32
   410                        	.eos
   411                        	.stag	_fx_msgbox_t,144,40
   412                        	.member	pos,0,5,8,16
   413                        	.member	selected,16,16,8,16
   414                        	.member	offsetX,32,5,8,16
   415                        	.member	offsetY,48,5,8,16
   416                        	.member	isShifted,64,14,8,8
   417                        	.member	cursorState,72,14,8,8
   418                        	.member	fontSet,80,142,8,32
   419                        	.member	data,112,129,8,32
   420                        	.eos
   421                        	.stag	_fx_menuAnchor_t,272,41
   422                        	.member	pCaption,0,142,8,32
   423                        	.member	renderLayoutX,32,16,8,16
   424                        	.member	renderLayoutY,48,16,8,16
   425                        	.member	captionPixelWidth,64,16,8,16
   426                        	.member	data,80,129,8,32
   427                        	.member	droppedWindow,112,138,8,32,30
   428                        	.member	bytes,144,110,8,0,16
   429                        	.eos
   430                        	.stag	_SubMenuStruct,64,42
   431                        	.member	caption,0,142,8,32
   432                        	.member	action,32,641,8,32
   433                        	.eos
   434                        	.stag	_SubMenuListStruct,40,43
   435                        	.member	cMenus,0,14,8,8
   436                        	.member	psubmenus,8,9354,8,32,42
   437                        	.eos
   438                        	.stag	_fx_ComBuffer,2080,44
   439                        	.member	cbSize,0,16,8,16
   440                        	.member	cbBuffer,16,16,8,16
   441                        	.member	buffer,32,110,8,0,256
   442                        	.eos
   443                        	.stag	_fx_resource_header,72,45
   444                        	.member	magic,0,110,8,0,4
   445                        	.member	major,32,14,8,8
   446                        	.member	minor,40,14,8,8
   447                        	.member	type,48,14,8,8
   448                        	.member	reserved,56,14,8,8
  Mon Sep 27 2021  9:39                                                Page 9


   449                        	.member	resheaderSize,64,14,8,8
   450                        	.eos
   451                        	.stag	_fx_resource_header_font,144,46
   452                        	.member	title,0,110,8,0,16
   453                        	.member	height,128,14,8,8
   454                        	.member	width,136,14,8,8
   455                        	.eos
   456                        	.stag	_fx_resource_string,32,47
   457                        	.member	locale,0,110,8,0,2
   458                        	.member	entries,16,16,8,16
   459                        	.eos
   460                        	.stag	_fx_resource_string_entry,40,48
   461                        	.member	index,0,16,8,16
   462                        	.member	length,16,16,8,16
   463                        	.member	data,32,14,8,8
   464                        	.eos
   465                        	.line	1064
   466                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\omf/OMF_Record.h",8
   467                        	.stag	omf_body_record,168,49
   468                        	.member	FileOffset,0,18,8,32
   469                        	.member	SegmentOffset,32,18,8,32
   470                        	.member	operation_code,64,14,8,8
   471                        	.member	length,72,5,8,16
   472                        	.member	record_data,88,129,8,32
   473                        	.member	processed,120,5,8,16
   474                        	.member	next,136,138,8,32,49
   475                        	.eos
   476                        	.stag	subrecord_SuperReloc2,16520,50
   477                        	.member	FileOffset,0,18,8,32
   478                        	.member	SegmentOffset,32,18,8,32
   479                        	.member	Count,64,14,8,8
   480                        	.member	ByteCnt,72,14,8,8
   481                        	.member	BitShiftCnt,80,14,8,8
   482                        	.member	nb_address,88,5,8,16
   483                        	.member	OffsetPatch,104,114,8,0,256
   484                        	.member	OffsetReference,8296,114,8,0,256
   485                        	.member	next,16488,138,8,32,50
   486                        	.eos
   487                        	.stag	subrecord_SuperReloc3,16520,51
   488                        	.member	FileOffset,0,18,8,32
   489                        	.member	SegmentOffset,32,18,8,32
   490                        	.member	Count,64,14,8,8
   491                        	.member	ByteCnt,72,14,8,8
   492                        	.member	BitShiftCnt,80,14,8,8
   493                        	.member	nb_address,88,5,8,16
   494                        	.member	OffsetPatch,104,114,8,0,256
   495                        	.member	OffsetReference,8296,114,8,0,256
   496                        	.member	next,16488,138,8,32,51
   497                        	.eos
   498                        	.stag	subrecord_SuperInterseg1,20632,52
   499                        	.member	FileOffset,0,18,8,32
   500                        	.member	SegmentOffset,32,18,8,32
   501                        	.member	Count,64,14,8,8
   502                        	.member	ByteCnt,72,14,8,8
   503                        	.member	BitShiftCnt,80,14,8,8
   504                        	.member	FileNum,88,5,8,16
   505                        	.member	nb_address,104,5,8,16
  Mon Sep 27 2021  9:39                                                Page 10


   506                        	.member	OffsetPatch,120,114,8,0,256
   507                        	.member	OffsetReference,8312,114,8,0,256
   508                        	.member	SegNum,16504,101,8,0,256
   509                        	.member	next,20600,138,8,32,52
   510                        	.eos
   511                        	.stag	subrecord_SuperInterseg212,20632,53
   512                        	.member	FileOffset,0,18,8,32
   513                        	.member	SegmentOffset,32,18,8,32
   514                        	.member	Count,64,14,8,8
   515                        	.member	ByteCnt,72,14,8,8
   516                        	.member	BitShiftCnt,80,14,8,8
   517                        	.member	FileNum,88,5,8,16
   518                        	.member	nb_address,104,5,8,16
   519                        	.member	OffsetPatch,120,114,8,0,256
   520                        	.member	OffsetReference,8312,114,8,0,256
   521                        	.member	SegNum,16504,101,8,0,256
   522                        	.member	next,20600,138,8,32,53
   523                        	.eos
   524                        	.stag	subrecord_SuperInterseg1324,16544,54
   525                        	.member	FileOffset,0,18,8,32
   526                        	.member	SegmentOffset,32,18,8,32
   527                        	.member	Count,64,14,8,8
   528                        	.member	ByteCnt,72,14,8,8
   529                        	.member	BitShiftCnt,80,14,8,8
   530                        	.member	SegNum,88,14,8,8
   531                        	.member	FileNum,96,5,8,16
   532                        	.member	nb_address,112,5,8,16
   533                        	.member	OffsetPatch,128,114,8,0,256
   534                        	.member	OffsetReference,8320,114,8,0,256
   535                        	.member	next,16512,138,8,32,54
   536                        	.eos
   537                        	.stag	subrecord_SuperInterseg2536,16544,55
   538                        	.member	FileOffset,0,18,8,32
   539                        	.member	SegmentOffset,32,18,8,32
   540                        	.member	Count,64,14,8,8
   541                        	.member	ByteCnt,72,14,8,8
   542                        	.member	BitShiftCnt,80,14,8,8
   543                        	.member	SegNum,88,14,8,8
   544                        	.member	FileNum,96,5,8,16
   545                        	.member	nb_address,112,5,8,16
   546                        	.member	OffsetPatch,128,114,8,0,256
   547                        	.member	OffsetReference,8320,114,8,0,256
   548                        	.member	next,16512,138,8,32,55
   549                        	.eos
   550                        	.stag	record_END,72,56
   551                        	.member	FileOffset,0,18,8,32
   552                        	.member	SegmentOffset,32,18,8,32
   553                        	.member	operation_code,64,14,8,8
   554                        	.eos
   555                        	.stag	record_CONST,112,57
   556                        	.member	FileOffset,0,18,8,32
   557                        	.member	SegmentOffset,32,18,8,32
   558                        	.member	operation_code,64,14,8,8
   559                        	.member	ByteCnt,72,14,8,8
   560                        	.member	data,80,142,8,32
   561                        	.eos
   562                        	.stag	record_ALIGN,72,58
   563                        	.member	FileOffset,0,18,8,32
  Mon Sep 27 2021  9:39                                                Page 11


   564                        	.member	SegmentOffset,32,18,8,32
   565                        	.member	operation_code,64,14,8,8
   566                        	.eos
   567                        	.stag	record_ORG,72,59
   568                        	.member	FileOffset,0,18,8,32
   569                        	.member	SegmentOffset,32,18,8,32
   570                        	.member	operation_code,64,14,8,8
   571                        	.eos
   572                        	.stag	record_RELOC,152,60
   573                        	.member	FileOffset,0,18,8,32
   574                        	.member	SegmentOffset,32,18,8,32
   575                        	.member	operation_code,64,14,8,8
   576                        	.member	ByteCnt,72,14,8,8
   577                        	.member	BitShiftCnt,80,14,8,8
   578                        	.member	OffsetPatch,88,18,8,32
   579                        	.member	OffsetReference,120,18,8,32
   580                        	.eos
   581                        	.stag	record_INTERSEG,184,61
   582                        	.member	FileOffset,0,18,8,32
   583                        	.member	SegmentOffset,32,18,8,32
   584                        	.member	operation_code,64,14,8,8
   585                        	.member	ByteCnt,72,14,8,8
   586                        	.member	BitShiftCnt,80,14,8,8
   587                        	.member	OffsetPatch,88,18,8,32
   588                        	.member	FileNum,120,5,8,16
   589                        	.member	SegNum,136,5,8,16
   590                        	.member	OffsetReference,152,18,8,32
   591                        	.eos
   592                        	.stag	record_USING,72,62
   593                        	.member	FileOffset,0,18,8,32
   594                        	.member	SegmentOffset,32,18,8,32
   595                        	.member	operation_code,64,14,8,8
   596                        	.eos
   597                        	.stag	record_STRONG,72,63
   598                        	.member	FileOffset,0,18,8,32
   599                        	.member	SegmentOffset,32,18,8,32
   600                        	.member	operation_code,64,14,8,8
   601                        	.eos
   602                        	.stag	record_GLOBAL,72,64
   603                        	.member	FileOffset,0,18,8,32
   604                        	.member	SegmentOffset,32,18,8,32
   605                        	.member	operation_code,64,14,8,8
   606                        	.eos
   607                        	.stag	record_GEQU,72,65
   608                        	.member	FileOffset,0,18,8,32
   609                        	.member	SegmentOffset,32,18,8,32
   610                        	.member	operation_code,64,14,8,8
   611                        	.eos
   612                        	.stag	record_MEM,72,66
   613                        	.member	FileOffset,0,18,8,32
   614                        	.member	SegmentOffset,32,18,8,32
   615                        	.member	operation_code,64,14,8,8
   616                        	.eos
   617                        	.stag	record_EXPR,72,67
   618                        	.member	FileOffset,0,18,8,32
   619                        	.member	SegmentOffset,32,18,8,32
   620                        	.member	operation_code,64,14,8,8
   621                        	.eos
  Mon Sep 27 2021  9:39                                                Page 12


   622                        	.stag	record_ZEXPR,72,68
   623                        	.member	FileOffset,0,18,8,32
   624                        	.member	SegmentOffset,32,18,8,32
   625                        	.member	operation_code,64,14,8,8
   626                        	.eos
   627                        	.stag	record_BEXPR,72,69
   628                        	.member	FileOffset,0,18,8,32
   629                        	.member	SegmentOffset,32,18,8,32
   630                        	.member	operation_code,64,14,8,8
   631                        	.eos
   632                        	.stag	record_RELEXPR,72,70
   633                        	.member	FileOffset,0,18,8,32
   634                        	.member	SegmentOffset,32,18,8,32
   635                        	.member	operation_code,64,14,8,8
   636                        	.eos
   637                        	.stag	record_LOCAL,72,71
   638                        	.member	FileOffset,0,18,8,32
   639                        	.member	SegmentOffset,32,18,8,32
   640                        	.member	operation_code,64,14,8,8
   641                        	.eos
   642                        	.stag	record_EQU,72,72
   643                        	.member	FileOffset,0,18,8,32
   644                        	.member	SegmentOffset,32,18,8,32
   645                        	.member	operation_code,64,14,8,8
   646                        	.eos
   647                        	.stag	record_DS,104,73
   648                        	.member	FileOffset,0,18,8,32
   649                        	.member	SegmentOffset,32,18,8,32
   650                        	.member	operation_code,64,14,8,8
   651                        	.member	nb_zero_byte,72,18,8,32
   652                        	.eos
   653                        	.stag	record_LCONST,136,74
   654                        	.member	FileOffset,0,18,8,32
   655                        	.member	SegmentOffset,32,18,8,32
   656                        	.member	operation_code,64,14,8,8
   657                        	.member	ByteCnt,72,18,8,32
   658                        	.member	data,104,142,8,32
   659                        	.eos
   660                        	.stag	record_LEXPR,72,75
   661                        	.member	FileOffset,0,18,8,32
   662                        	.member	SegmentOffset,32,18,8,32
   663                        	.member	operation_code,64,14,8,8
   664                        	.eos
   665                        	.stag	record_ENTRY,72,76
   666                        	.member	FileOffset,0,18,8,32
   667                        	.member	SegmentOffset,32,18,8,32
   668                        	.member	operation_code,64,14,8,8
   669                        	.eos
   670                        	.stag	record_cRELOC,152,77
   671                        	.member	FileOffset,0,18,8,32
   672                        	.member	SegmentOffset,32,18,8,32
   673                        	.member	operation_code,64,14,8,8
   674                        	.member	ByteCnt,72,14,8,8
   675                        	.member	BitShiftCnt,80,14,8,8
   676                        	.member	OffsetPatch,88,18,8,32
   677                        	.member	OffsetReference,120,18,8,32
   678                        	.eos
   679                        	.stag	record_cINTERSEG,176,78
  Mon Sep 27 2021  9:39                                                Page 13


   680                        	.member	FileOffset,0,18,8,32
   681                        	.member	SegmentOffset,32,18,8,32
   682                        	.member	operation_code,64,14,8,8
   683                        	.member	ByteCnt,72,14,8,8
   684                        	.member	BitShiftCnt,80,14,8,8
   685                        	.member	OffsetPatch,88,18,8,32
   686                        	.member	FileNum,120,5,8,16
   687                        	.member	SegNum,136,14,8,8
   688                        	.member	OffsetReference,144,18,8,32
   689                        	.eos
   690                        	.stag	record_SUPER,592,79
   691                        	.member	FileOffset,0,18,8,32
   692                        	.member	SegmentOffset,32,18,8,32
   693                        	.member	operation_code,64,14,8,8
   694                        	.member	ByteCnt,72,18,8,32
   695                        	.member	RecordType,104,14,8,8
   696                        	.member	nb_SuperReloc2,112,5,8,16
   697                        	.member	first_SuperReloc2,128,138,8,32,50
   698                        	.member	last_SuperReloc2,160,138,8,32,50
   699                        	.member	nb_SuperReloc3,192,5,8,16
   700                        	.member	first_SuperReloc3,208,138,8,32,51
   701                        	.member	last_SuperReloc3,240,138,8,32,51
   702                        	.member	nb_SuperInterseg1,272,5,8,16
   703                        	.member	first_SuperInterseg1,288,138,8,32,52
   704                        	.member	last_SuperInterseg1,320,138,8,32,52
   705                        	.member	nb_SuperInterseg212,352,5,8,16
   706                        	.member	first_SuperInterseg212,368,138,8,32,53
   707                        	.member	last_SuperInterseg212,400,138,8,32,53
   708                        	.member	nb_SuperInterseg1324,432,5,8,16
   709                        	.member	first_SuperInterseg1324,448,138,8,32,54
   710                        	.member	last_SuperInterseg1324,480,138,8,32,54
   711                        	.member	nb_SuperInterseg2536,512,5,8,16
   712                        	.member	first_SuperInterseg2536,528,138,8,32,55
   713                        	.member	last_SuperInterseg2536,560,138,8,32,55
   714                        	.eos
   715                        	.stag	record_General,72,80
   716                        	.member	FileOffset,0,18,8,32
   717                        	.member	SegmentOffset,32,18,8,32
   718                        	.member	operation_code,64,14,8,8
   719                        	.eos
   720                        	.stag	record_Experimental,72,81
   721                        	.member	FileOffset,0,18,8,32
   722                        	.member	SegmentOffset,32,18,8,32
   723                        	.member	operation_code,64,14,8,8
   724                        	.eos
   725                        	.stag	omf_reloc,128,82
   726                        	.member	ByteCnt,0,14,8,8
   727                        	.member	BitShiftCnt,8,14,8,8
   728                        	.member	OffsetPatch,16,18,8,32
   729                        	.member	OffsetReference,48,18,8,32
   730                        	.member	origin,80,5,8,16
   731                        	.member	next,96,138,8,32,82
   732                        	.eos
   733                        	.stag	omf_interseg,160,83
   734                        	.member	ByteCnt,0,14,8,8
   735                        	.member	BitShiftCnt,8,14,8,8
   736                        	.member	OffsetPatch,16,18,8,32
   737                        	.member	OffsetReference,48,18,8,32
  Mon Sep 27 2021  9:39                                                Page 14


   738                        	.member	FileNum,80,5,8,16
   739                        	.member	SegNum,96,5,8,16
   740                        	.member	origin,112,5,8,16
   741                        	.member	next,128,138,8,32,83
   742                        	.eos
   743                        	.line	458
   744                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\omf/OMF_Record.c",9
   745                        ;
   746                        ;#include "fxos.h"
   747                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxos.h",0
   748                        	.file	"G:\devtools\WDCTools\wdc\Tools\include\
                    stdlib.h",0
   749                        	.file	"G:\devtools\WDCTools\wdc\Tools\include\
                    stddef.h",0
   750                        	.line	88
   751                        	.file	"G:\devtools\WDCTools\wdc\Tools\include\
                    stdlib.h",43
   752                        	.stag	fake84_,32,84
   753                        	.member	quot,0,5,8,16
   754                        	.member	rem,16,5,8,16
   755                        	.eos
   756                        	.stag	fake85_,64,85
   757                        	.member	quot,0,7,8,32
   758                        	.member	rem,32,7,8,32
   759                        	.eos
   760                        	.stag	int_sqrt,32,86
   761                        	.member	sqrt,0,16,8,16
   762                        	.member	frac,16,16,8,16
   763                        	.eos
   764                        	.line	205
   765                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxos.h",4
   766                        	.file	"G:\devtools\WDCTools\wdc\Tools\include\
                    string.h",0
   767                        	.line	134
   768                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxos.h",5
   769                        	.file	"G:\devtools\WDCTools\wdc\Tools\include\
                    ctype.h",0
   770                        	.line	103
   771                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxos.h",6
   772                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxtypes.h",0
   773                        	.line	1064
   774                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxos.h",8
   775                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxstringtable.h",0
   776                        	.line	90
   777                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxos.h",9
   778                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxc256u.h",0
   779                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxtypes.h",0
  Mon Sep 27 2021  9:39                                                Page 15


   780                        	.line	1064
   781                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxc256u.h",5
   782                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fmx_vicky.h",0
   783                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxtypes.h",0
   784                        	.line	1064
   785                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fmx_vicky.h",11
   786                        	.line	72
   787                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxc256u.h",6
   788                        	.line	1963
   789                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxos.h",16
   790                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxkernel.h",0
   791                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxos.h",0
   792                        	.line	30
   793                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxkernel.h",5
   794                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxnode.h",0
   795                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxtypes.h",0
   796                        	.line	1064
   797                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxnode.h",11
   798                        	.line	118
   799                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxkernel.h",6
   800                        	.stag	_fx_api_call_table,8192,87
   801                        	.member	call_table,0,1121,8,32,256
   802                        	.eos
   803                        	.stag	_fx_zero_page_irq_data,32,88
   804                        	.member	data,0,110,8,0,4
   805                        	.eos
   806                        	.stag	_fx_zero_page,720,89
   807                        	.member	fxos_mouse_byte_0,0,14,8,8
   808                        	.member	fxos_mouse_byte_1,8,14,8,8
   809                        	.member	fxos_mouse_byte_2,16,14,8,8
   810                        	.member	fxos_mouse_byte_t,24,14,8,8
   811                        	.member	fxos_mouse_byte_x_l,32,14,8,8
   812                        	.member	fxos_mouse_byte_x_h,40,14,8,8
   813                        	.member	fxos_mouse_byte_y_l,48,14,8,8
   814                        	.member	fxos_mouse_byte_y_h,56,14,8,8
   815                        	.member	fxos_key_byte_0,64,14,8,8
   816                        	.member	fxos_key_byte_1,72,14,8,8
   817                        	.member	fxos_key_byte_2,80,14,8,8
   818                        	.member	fxos_mouse_ctl,88,14,8,8
   819                        	.member	fxos_mouse_index,96,14,8,8
   820                        	.member	fxos_mouse_status,104,14,8,8
   821                        	.member	Endianness,112,16,8,16
   822                        	.member	VersionMajor,128,16,8,16
   823                        	.member	VersionMinor,144,16,8,16
   824                        	.member	VersionRelease,160,16,8,16
  Mon Sep 27 2021  9:39                                                Page 16


   825                        	.member	topMemory,176,18,8,32
   826                        	.member	bottomMemory,208,18,8,32
   827                        	.member	availableMemory,240,18,8,32
   828                        	.member	availableMemoryK,272,18,8,32
   829                        	.member	availableHeapMemory,304,18,8,32
   830                        	.member	availableHeapMemoryK,336,18,8,32
   831                        	.member	fxos_console_row,368,16,8,16
   832                        	.member	fxos_console_col,384,16,8,16
   833                        	.member	executive,400,129,8,32
   834                        	.member	eventmanager,432,129,8,32
   835                        	.member	devicemanager,464,129,8,32
   836                        	.member	windowmanager,496,129,8,32
   837                        	.member	fxos_kernel_api,528,138,8,32,87
   838                        	.member	fxos_dos_api,560,138,8,32,87
   839                        	.member	fxos_gfx_api,592,138,8,32,87
   840                        	.member	fxos_gui_api,624,138,8,32,87
   841                        	.member	fxos_con_api,656,138,8,32,87
   842                        	.member	fxos_reserved_2_api,688,138,8,32,87
   843                        	.eos
   844                        	.stag	_fx_environment,96,90
   845                        	.member	variables,0,142,8,32
   846                        	.member	reserved1,32,5,8,16
   847                        	.member	reserved2,48,5,8,16
   848                        	.member	reserved3,64,5,8,16
   849                        	.member	reserved4,80,5,8,16
   850                        	.eos
   851                        	.stag	_debug_byte_bits,8,91
   852                        	.member	bit7,0,14,17,1
   853                        	.member	bit6,1,14,17,1
   854                        	.member	bit5,2,14,17,1
   855                        	.member	bit4,3,14,17,1
   856                        	.member	bit3,4,14,17,1
   857                        	.member	bit2,5,14,17,1
   858                        	.member	bit1,6,14,17,1
   859                        	.member	bit0,7,14,17,1
   860                        	.eos
   861                        	.stag	_k_segmentheader,160,92
   862                        	.member	version_major,0,14,8,8
   863                        	.member	version_minor,8,14,8,8
   864                        	.member	length,16,5,8,16
   865                        	.member	segment_start_addr,32,7,8,32
   866                        	.member	segment_end_addr,64,7,8,32
   867                        	.member	segment_size,96,7,8,32
   868                        	.member	main_entry_addr,128,7,8,32
   869                        	.eos
   870                        	.stag	_fx_device_driver,776,93
   871                        	.member	name,0,110,8,0,32
   872                        	.member	version,256,110,8,0,16
   873                        	.member	hmajor,384,110,8,0,8
   874                        	.member	hminor,448,110,8,0,8
   875                        	.member	type,512,14,8,8
   876                        	.member	designation,520,110,8,0,6
   877                        	.member	irq_ctl,568,16,8,16
   878                        	.member	f_driver_irq,584,129,8,32
   879                        	.member	driver_context,616,129,8,32
   880                        	.member	f_driver_load,648,129,8,32
   881                        	.member	f_driver_read,680,129,8,32
   882                        	.member	f_driver_write,712,129,8,32
  Mon Sep 27 2021  9:39                                                Page 17


   883                        	.member	f_driver_unload,744,129,8,32
   884                        	.eos
   885                        	.stag	_fx_block_device_driver,808,94
   886                        	.member	name,0,110,8,0,32
   887                        	.member	version,256,110,8,0,16
   888                        	.member	hmajor,384,110,8,0,8
   889                        	.member	hminor,448,110,8,0,8
   890                        	.member	type,512,14,8,8
   891                        	.member	designation,520,110,8,0,6
   892                        	.member	irq_ctl,568,16,8,16
   893                        	.member	f_driver_irq,584,129,8,32
   894                        	.member	driver_context,616,129,8,32
   895                        	.member	f_driver_load,648,129,8,32
   896                        	.member	f_driver_read,680,129,8,32
   897                        	.member	f_driver_write,712,129,8,32
   898                        	.member	f_driver_unload,744,129,8,32
   899                        	.member	f_driver_command,776,129,8,32
   900                        	.eos
   901                        	.stag	_k_irq_chain,128,95
   902                        	.member	handlers,0,5217,8,32,4
   903                        	.eos
   904                        	.line	475
   905                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxos.h",22
   906                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxconsole.h",0
   907                        	.file	"G:\devtools\WDCTools\wdc\Tools\include\
                    string.h",0
   908                        	.line	134
   909                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxconsole.h",5
   910                        	.file	"G:\devtools\WDCTools\wdc\Tools\include\
                    stdlib.h",0
   911                        	.line	205
   912                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxconsole.h",6
   913                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxtypes.h",0
   914                        	.line	1064
   915                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxconsole.h",7
   916                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxc256u.h",0
   917                        	.line	1963
   918                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxconsole.h",12
   919                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxstring.h",0
   920                        	.file	"G:\devtools\WDCTools\wdc\Tools\include\
                    stdlib.h",0
   921                        	.line	205
   922                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxstring.h",5
   923                        	.file	"G:\devtools\WDCTools\wdc\Tools\include\
                    string.h",0
   924                        	.line	134
   925                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxstring.h",6
  Mon Sep 27 2021  9:39                                                Page 18


   926                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxtypes.h",0
   927                        	.line	1064
   928                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxstring.h",7
   929                        	.stag	_fx_string,64,96
   930                        	.member	size,0,16,8,16
   931                        	.member	pos,16,5,8,16
   932                        	.member	buffer,32,142,8,32
   933                        	.eos
   934                        	.line	141
   935                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxconsole.h",17
   936                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxeventmanager.h",0
   937                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxos.h",0
   938                        	.line	30
   939                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxeventmanager.h",5
   940                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxexec.h",0
   941                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxtypes.h",0
   942                        	.line	1064
   943                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxexec.h",5
   944                        	.stag	_fxos_executive_vtable,128,97
   945                        	.member	Init,0,8833,8,32
   946                        	.member	Configure,32,656,8,32
   947                        	.member	Query,64,656,8,32
   948                        	.member	Uninit,96,641,8,32
   949                        	.eos
   950                        	.line	86
   951                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxeventmanager.h",6
   952                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxnode.h",0
   953                        	.line	118
   954                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxeventmanager.h",7
   955                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxconsole.h",0
   956                        	.line	208
   957                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxeventmanager.h",8
   958                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxwindowmanager.h",0
   959                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxos.h",0
   960                        	.line	30
   961                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxwindowmanager.h",5
   962                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxmemorymanager.h",0
   963                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxos.h",0
   964                        	.line	30
  Mon Sep 27 2021  9:39                                                Page 19


   965                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxmemorymanager.h",5
   966                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\umm_malloc_cfg.h",0
   967                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxos_build_parameters.h",0
   968                        	.line	35
   969                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\umm_malloc_cfg.h",8
   970                        	.stag	UMM_HEAP_INFO_t,256,98
   971                        	.member	totalEntries,0,18,8,32
   972                        	.member	usedEntries,32,18,8,32
   973                        	.member	freeEntries,64,18,8,32
   974                        	.member	totalBlocks,96,18,8,32
   975                        	.member	usedBlocks,128,18,8,32
   976                        	.member	freeBlocks,160,18,8,32
   977                        	.member	maxFreeContiguousBlocks,192,18,8,32
   978                        	.member	blockSize,224,18,8,32
   979                        	.eos
   980                        	.line	199
   981                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxmemorymanager.h",6
   982                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\umm_malloc.h",0
   983                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxtypes.h",0
   984                        	.line	1064
   985                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\umm_malloc.h",11
   986                        	.line	24
   987                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxmemorymanager.h",7
   988                        	.stag	_fx_memory_map,2072,99
   989                        	.member	availableMemory,0,18,8,32
   990                        	.member	valid_segments,32,110,8,0,255
   991                        	.eos
   992                        	.stag	_fx_ipc_port,144,100
   993                        	.member	id,0,18,8,32
   994                        	.member	type,32,14,8,8
   995                        	.member	name,40,138,8,32,96
   996                        	.member	time,72,18,8,32
   997                        	.member	queue,104,138,8,32,4
   998                        	.member	reserved_1,136,14,8,8
   999                        	.eos
  1000                        	.stag	_k_mem_alloc_header,80,101
  1001                        	.member	user,0,14,8,8
  1002                        	.member	attr,8,14,8,8
  1003                        	.member	size,16,18,8,32
  1004                        	.member	virtual,48,129,8,32
  1005                        	.eos
  1006                        	.line	129
  1007                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxwindowmanager.h",6
  1008                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxeventmanager.h",0
  1009                        	.line	572
  1010                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxwindowmanager.h",7
  Mon Sep 27 2021  9:39                                                Page 20


  1011                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxgfx.h",0
  1012                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxfont.h",0
  1013                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxtypes.h",0
  1014                        	.line	1064
  1015                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxfont.h",6
  1016                        	.line	74
  1017                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxgfx.h",5
  1018                        	.stag	_click_detected,64,102
  1019                        	.member	window,0,138,8,32,30
  1020                        	.member	handler,32,641,8,32
  1021                        	.eos
  1022                        	.stag	_current_palette_map,400,103
  1023                        	.member	CUR_DESKTOP,0,5,8,16
  1024                        	.member	CUR_BACKGROUND,16,5,8,16
  1025                        	.member	CUR_FONT,32,5,8,16
  1026                        	.member	CUR_SELECTED_FONT,48,5,8,16
  1027                        	.member	CUR_HIGHLIGHT_COLOR,64,5,8,16
  1028                        	.member	CUR_WINDOWFRAME,80,5,8,16
  1029                        	.member	CUR_WINDOWBORDER,96,5,8,16
  1030                        	.member	CUR_WINDOWSHADOW,112,5,8,16
  1031                        	.member	CUR_MENU,128,5,8,16
  1032                        	.member	CUR_GADGET,144,5,8,16
  1033                        	.member	CUR_COLOR,160,101,8,0,15
  1034                        	.eos
  1035                        	.line	370
  1036                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxwindowmanager.h",8
  1037                        	.stag	_fxos_winman_vtable,160,104
  1038                        	.member	Events,0,641,8,32
  1039                        	.member	ConfigureWindowManager,32,656,8,32
  1040                        	.member	ProcessWindowEvent,64,8833,8,32
  1041                        	.member	QueryWindowManager,96,656,8,32
  1042                        	.member	DoWndProcs,128,641,8,32
  1043                        	.eos
  1044                        	.stag	fake105_,64,105
  1045                        	.member	type,0,16,8,16
  1046                        	.member	size,16,16,8,16
  1047                        	.member	desktopAction,32,129,8,32
  1048                        	.eos
  1049                        	.stag	fake106_,96,106
  1050                        	.member	type,0,16,8,16
  1051                        	.member	caption,16,138,8,32,96
  1052                        	.member	buttonType,48,16,8,16
  1053                        	.member	x,64,5,8,16
  1054                        	.member	y,80,5,8,16
  1055                        	.eos
  1056                        	.stag	_childMessage_t,64,107
  1057                        	.member	msgType,0,16,8,16
  1058                        	.member	msgData,16,129,8,32
  1059                        	.member	dataSize,48,16,8,16
  1060                        	.eos
  1061                        	.line	594
  1062                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
  Mon Sep 27 2021  9:39                                                Page 21


                    space\FXOS-Beta\src\fxeventmanager.h",9
  1063                        	.stag	_fx_main_loopvars,16,108
  1064                        	.member	dummy,0,5,8,16
  1065                        	.eos
  1066                        	.stag	_fxMouseMessageData,64,109
  1067                        	.member	button1,0,14,8,8
  1068                        	.member	button2,8,14,8,8
  1069                        	.member	button3,16,14,8,8
  1070                        	.member	button4,24,14,8,8
  1071                        	.member	x,32,16,8,16
  1072                        	.member	y,48,16,8,16
  1073                        	.eos
  1074                        	.utag	marshalled_data,32,110
  1075                        	.member	byteValue,0,14,11,8
  1076                        	.member	verbValue,0,110,11,0,2
  1077                        	.member	intValue,0,16,11,16
  1078                        	.member	longValue,0,18,11,32
  1079                        	.member	pointerValue,0,129,11,32
  1080                        	.eos
  1081                        	.stag	_fx_eventProcess,64,111
  1082                        	.member	process,0,138,8,32,17
  1083                        	.member	eventProc,32,641,8,32
  1084                        	.eos
  1085                        	.stag	_mouse_msg_state,184,112
  1086                        	.member	lastEvent,0,18,8,32
  1087                        	.member	buttonLeftDown,32,14,8,8
  1088                        	.member	lastLeftDown,40,18,8,32
  1089                        	.member	buttonRightDown,72,14,8,8
  1090                        	.member	lastRightDown,80,18,8,32
  1091                        	.member	buttonMiddleDown,112,14,8,8
  1092                        	.member	lastMiddleDown,120,18,8,32
  1093                        	.member	lastX,152,16,8,16
  1094                        	.member	lastY,168,16,8,16
  1095                        	.eos
  1096                        	.stag	_fxos_eventmanager_vtable,192,113
  1097                        	.member	EventQueue,0,138,8,32,4
  1098                        	.member	Init,32,8833,8,32
  1099                        	.member	Run,64,656,8,32
  1100                        	.member	Configure,96,656,8,32
  1101                        	.member	Query,128,656,8,32
  1102                        	.member	Uninit,160,641,8,32
  1103                        	.eos
  1104                        	.stag	_k_clipboard_data,168,114
  1105                        	.member	type,0,14,8,8
  1106                        	.member	readable,8,110,8,0,16
  1107                        	.member	data,136,129,8,32
  1108                        	.eos
  1109                        	.line	572
  1110                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxconsole.h",18
  1111                        	.stag	_fx_spinner_ctx,48,115
  1112                        	.member	index,0,5,8,16
  1113                        	.member	spinner,16,142,8,32
  1114                        	.eos
  1115                        	.stag	_fx_console_ctx,1144,116
  1116                        	.member	lineBufferIndex,0,5,8,16
  1117                        	.member	lineBuffer,16,110,8,0,128
  1118                        	.member	isShifted,1040,14,8,8
  Mon Sep 27 2021  9:39                                                Page 22


  1119                        	.member	userData,1048,129,8,32
  1120                        	.member	screenBuffer,1080,129,8,32
  1121                        	.member	Reserved1,1112,129,8,32
  1122                        	.eos
  1123                        	.stag	_token,64,117
  1124                        	.member	type,0,5,8,16
  1125                        	.member	depth,16,16,8,16
  1126                        	.member	text,32,142,8,32
  1127                        	.eos
  1128                        	.stag	_command_args,64,118
  1129                        	.member	proc,0,656,8,32
  1130                        	.member	tokens,32,138,8,32,2
  1131                        	.eos
  1132                        	.line	208
  1133                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxos.h",23
  1134                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxstring.h",0
  1135                        	.line	141
  1136                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxos.h",24
  1137                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxnode.h",0
  1138                        	.line	118
  1139                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxos.h",25
  1140                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\ff/ff.h",0
  1141                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\ff/ffconf.h",0
  1142                        	.line	298
  1143                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\ff/ff.h",29
  1144                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxtypes.h",0
  1145                        	.line	1064
  1146                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\ff/ff.h",30
  1147                        	.stag	fake119_,4504,119
  1148                        	.member	fs_type,0,14,8,8
  1149                        	.member	pdrv,8,14,8,8
  1150                        	.member	n_fats,16,14,8,8
  1151                        	.member	wflag,24,14,8,8
  1152                        	.member	fsi_flag,32,14,8,8
  1153                        	.member	id,40,5,8,16
  1154                        	.member	n_rootdir,56,5,8,16
  1155                        	.member	csize,72,5,8,16
  1156                        	.member	lfnbuf,88,144,8,32
  1157                        	.member	last_clst,120,18,8,32
  1158                        	.member	free_clst,152,18,8,32
  1159                        	.member	n_fatent,184,18,8,32
  1160                        	.member	fsize,216,18,8,32
  1161                        	.member	volbase,248,18,8,32
  1162                        	.member	fatbase,280,18,8,32
  1163                        	.member	dirbase,312,18,8,32
  1164                        	.member	database,344,18,8,32
  1165                        	.member	winsect,376,18,8,32
  1166                        	.member	win,408,110,8,0,512
  Mon Sep 27 2021  9:39                                                Page 23


  1167                        	.eos
  1168                        	.stag	fake120_,128,120
  1169                        	.member	fs,0,138,8,32,119
  1170                        	.member	id,32,5,8,16
  1171                        	.member	attr,48,14,8,8
  1172                        	.member	stat,56,14,8,8
  1173                        	.member	sclust,64,18,8,32
  1174                        	.member	objsize,96,18,8,32
  1175                        	.eos
  1176                        	.stag	fake121_,4400,121
  1177                        	.member	obj,0,10,8,128,120
  1178                        	.member	flag,128,14,8,8
  1179                        	.member	err,136,14,8,8
  1180                        	.member	fptr,144,18,8,32
  1181                        	.member	clust,176,18,8,32
  1182                        	.member	sect,208,18,8,32
  1183                        	.member	dir_sect,240,18,8,32
  1184                        	.member	dir_ptr,272,142,8,32
  1185                        	.member	buf,304,110,8,0,512
  1186                        	.eos
  1187                        	.stag	fake122_,416,122
  1188                        	.member	obj,0,10,8,128,120
  1189                        	.member	dptr,128,18,8,32
  1190                        	.member	clust,160,18,8,32
  1191                        	.member	sect,192,18,8,32
  1192                        	.member	dir,224,142,8,32
  1193                        	.member	fn,256,110,8,0,12
  1194                        	.member	blk_ofs,352,18,8,32
  1195                        	.member	pat,384,142,8,32
  1196                        	.eos
  1197                        	.stag	fake123_,2224,123
  1198                        	.member	fsize,0,18,8,32
  1199                        	.member	fdate,32,5,8,16
  1200                        	.member	ftime,48,5,8,16
  1201                        	.member	fattrib,64,14,8,8
  1202                        	.member	altname,72,110,8,0,13
  1203                        	.member	fname,176,110,8,0,256
  1204                        	.eos
  1205                        	.stag	fake124_,80,124
  1206                        	.member	fmt,0,14,8,8
  1207                        	.member	n_fat,8,14,8,8
  1208                        	.member	align,16,16,8,16
  1209                        	.member	n_root,32,16,8,16
  1210                        	.member	au_size,48,18,8,32
  1211                        	.eos
  1212                        	.line	429
  1213                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxos.h",26
  1214                        	.line	30
  1215                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\omf/OMF_Record.c",11
  1216                        ;//#include <stdlib.h>
  1217                        ;//#include <string.h>
  1218                        ;
  1219                        ;#include "omf/OMF_Dc_Memory.h"
  1220                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\omf/OMF_Dc_Memory.h",0
  1221                        	.line	24
  Mon Sep 27 2021  9:39                                                Page 24


  1222                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\omf/OMF_Record.c",15
  1223                        ;#include "omf/OMF_Dc_Shared.h"
  1224                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\omf/OMF_Dc_Shared.h",0
  1225                        	.line	18
  1226                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\omf/OMF_Record.c",16
  1227                        ;#include "omf/OMF_Load.h"
  1228                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\omf/OMF_Load.h",0
  1229                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxtypes.h",0
  1230                        	.line	1064
  1231                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\omf/OMF_Load.h",9
  1232                        	.stag	omf_segment_header,20984,125
  1233                        	.member	FileOffset,0,18,8,32
  1234                        	.member	SegmentOffset,32,18,8,32
  1235                        	.member	BlockCnt,64,18,8,32
  1236                        	.member	ByteCnt,96,18,8,32
  1237                        	.member	ResSpc,128,18,8,32
  1238                        	.member	Length,160,18,8,32
  1239                        	.member	Type,192,14,8,8
  1240                        	.member	undefine_1,200,14,8,8
  1241                        	.member	LabLen,208,14,8,8
  1242                        	.member	NumLen,216,14,8,8
  1243                        	.member	Version,224,14,8,8
  1244                        	.member	BankSize,232,18,8,32
  1245                        	.member	Kind,264,5,8,16
  1246                        	.member	undefine_2,280,14,8,8
  1247                        	.member	undefine_3,288,14,8,8
  1248                        	.member	Org,296,18,8,32
  1249                        	.member	Align,328,18,8,32
  1250                        	.member	NumSEx,360,14,8,8
  1251                        	.member	LCBank,368,14,8,8
  1252                        	.member	undefine_4,376,14,8,8
  1253                        	.member	SegNum,384,5,8,16
  1254                        	.member	EntryPointOffset,400,18,8,32
  1255                        	.member	DispNameOffset,432,5,8,16
  1256                        	.member	DispDataOffset,448,5,8,16
  1257                        	.member	TempOrgLength,464,5,8,16
  1258                        	.member	TempOrg,480,110,8,0,2048
  1259                        	.member	LoadName,16864,110,8,0,256
  1260                        	.member	SegName,18912,110,8,0,256
  1261                        	.member	undefine_5,20960,14,8,8
  1262                        	.member	undefine_6,20968,14,8,8
  1263                        	.member	undefine_7,20976,14,8,8
  1264                        	.eos
  1265                        	.stag	omf_segment,21288,126
  1266                        	.member	header,0,10,8,20984,125
  1267                        	.member	nb_record,20984,5,8,16
  1268                        	.member	first_record,21000,138,8,32,49
  1269                        	.member	last_record,21032,138,8,32,49
  1270                        	.member	data_offset,21064,5,8,16
  1271                        	.member	data_length,21080,5,8,16
  1272                        	.member	data,21096,142,8,32
  1273                        	.member	reloc_offset,21128,5,8,16
  Mon Sep 27 2021  9:39                                                Page 25


  1274                        	.member	reloc_length,21144,5,8,16
  1275                        	.member	nb_reloc,21160,5,8,16
  1276                        	.member	tab_reloc,21176,1162,8,32,82
  1277                        	.member	nb_interseg,21208,5,8,16
  1278                        	.member	tab_interseg,21224,1162,8,32,83
  1279                        	.member	next,21256,138,8,32,126
  1280                        	.eos
  1281                        	.stag	omf_file,192,127
  1282                        	.member	file_path,0,142,8,32
  1283                        	.member	file_name,32,142,8,32
  1284                        	.member	data_length,64,5,8,16
  1285                        	.member	data,80,142,8,32
  1286                        	.member	nb_segment,112,5,8,16
  1287                        	.member	first_segment,128,138,8,32,126
  1288                        	.member	last_segment,160,138,8,32,126
  1289                        	.eos
  1290                        	.line	113
  1291                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\omf/OMF_Record.c",17
  1292                        ;
  1293                        ;static void *DecodeRecordEND(unsigned char *,int,
                    int,int *);
  1294                        ;static void *DecodeRecordCONST(unsigned char *,in
                    t,int,int *);
  1295                        ;static void *DecodeRecordALIGN(unsigned char *,in
                    t,int,int *);
  1296                        ;static void *DecodeRecordORG(unsigned char *,int,
                    int,int *);
  1297                        ;static void *DecodeRecordRELOC(unsigned char *,in
                    t,int,int *);
  1298                        ;static void *DecodeRecordINTERSEG(unsigned char *
                    ,int,int,int *);
  1299                        ;static void *DecodeRecordUSING(unsigned char *,in
                    t,int,int *);
  1300                        ;static void *DecodeRecordSTRONG(unsigned char *,i
                    nt,int,int *);
  1301                        ;static void *DecodeRecordGLOBAL(unsigned char *,i
                    nt,int,int *);
  1302                        ;static void *DecodeRecordGEQU(unsigned char *,int
                    ,int,int *);
  1303                        ;static void *DecodeRecordMEM(unsigned char *,int,
                    int,int *);
  1304                        ;static void *DecodeRecordEXPR(unsigned char *,int
                    ,int,int *);
  1305                        ;static void *DecodeRecordZEXPR(unsigned char *,in
                    t,int,int *);
  1306                        ;static void *DecodeRecordBEXPR(unsigned char *,in
                    t,int,int *);
  1307                        ;static void *DecodeRecordRELEXPR(unsigned char *,
                    int,int,int *);
  1308                        ;static void *DecodeRecordLOCAL(unsigned char *,in
                    t,int,int *);
  1309                        ;static void *DecodeRecordEQU(unsigned char *,int,
                    int,int *);
  1310                        ;static void *DecodeRecordDS(unsigned char *,int,i
                    nt,int *);
  1311                        ;static void *DecodeRecordLCONST(unsigned char *,i
                    nt,int,int *);
  Mon Sep 27 2021  9:39                                                Page 26


  1312                        ;static void *DecodeRecordLEXPR(unsigned char *,in
                    t,int,int *);
  1313                        ;static void *DecodeRecordENTRY(unsigned char *,in
                    t,int,int *);
  1314                        ;static void *DecodeRecordcRELOC(unsigned char *,i
                    nt,int,int *);
  1315                        ;static void *DecodeRecordcINTERSEG(unsigned char 
                    *,int,int,int *);
  1316                        ;static void *DecodeRecordSUPER(unsigned char *,in
                    t,int,unsigned char *,int,int *,struct omf_segment *);
  1317                        ;static void *DecodeRecordGeneral(unsigned char *,
                    int,int,int *);
  1318                        ;static void *DecodeRecordExperimental(unsigned ch
                    ar *,int,int,int *);
  1319                        ;
  1320                        ;static struct subrecord_SuperReloc2 *DecodeSuperR
                    eloc2(unsigned char *,unsigned char *,int,BYTE *,int *,struc
                    t omf_segment *);
  1321                        ;static struct subrecord_SuperReloc3 *DecodeSuperR
                    eloc3(unsigned char *,unsigned char *,int,BYTE *,int *,struc
                    t omf_segment *);
  1322                        ;static struct subrecord_SuperInterseg1 *DecodeSup
                    erInterseg1(unsigned char *,unsigned char *,int,BYTE *,int *
                    ,struct omf_segment *);
  1323                        ;static struct subrecord_SuperInterseg212 *DecodeS
                    uperInterseg212(unsigned char *,BYTE,unsigned char *,int,BYT
                    E *,int *,struct omf_segment *);
  1324                        ;static struct subrecord_SuperInterseg1324 *Decode
                    SuperInterseg1324(unsigned char *,BYTE,unsigned char *,int,B
                    YTE *,int *,struct omf_segment *);
  1325                        ;static struct subrecord_SuperInterseg2536 *Decode
                    SuperInterseg2536(unsigned char *,BYTE,unsigned char *,int,B
                    YTE *,int *,struct omf_segment *);
  1326                        ;
  1327                        ;static void AddReloc(BYTE,BYTE,DWORD,DWORD,int);
  1328                        ;static void AddInterseg(BYTE,BYTE,DWORD,DWORD,WOR
                    D,WORD,int);
  1329                        ;
  1330                        ;static void mem_free_END(struct record_END *);
  1331                        ;static void mem_free_CONST(struct record_CONST *)
                    ;
  1332                        ;static void mem_free_ALIGN(struct record_ALIGN *)
                    ;
  1333                        ;static void mem_free_ORG(struct record_ORG *);
  1334                        ;static void mem_free_RELOC(struct record_RELOC *)
                    ;
  1335                        ;static void mem_free_INTERSEG(struct record_INTER
                    SEG *);
  1336                        ;static void mem_free_USING(struct record_USING *)
                    ;
  1337                        ;static void mem_free_STRONG(struct record_STRONG 
                    *);
  1338                        ;static void mem_free_GLOBAL(struct record_GLOBAL 
                    *);
  1339                        ;static void mem_free_GEQU(struct record_GEQU *);
  1340                        ;static void mem_free_MEM(struct record_MEM *);
  1341                        ;static void mem_free_EXPR(struct record_EXPR *);
  1342                        ;static void mem_free_ZEXPR(struct record_ZEXPR *)
  Mon Sep 27 2021  9:39                                                Page 27


                    ;
  1343                        ;static void mem_free_BEXPR(struct record_BEXPR *)
                    ;
  1344                        ;static void mem_free_RELEXPR(struct record_RELEXP
                    R *);
  1345                        ;static void mem_free_LOCAL(struct record_LOCAL *)
                    ;
  1346                        ;static void mem_free_EQU(struct record_EQU *);
  1347                        ;static void mem_free_DS(struct record_DS *);
  1348                        ;static void mem_free_LCONST(struct record_LCONST 
                    *);
  1349                        ;static void mem_free_LEXPR(struct record_LEXPR *)
                    ;
  1350                        ;static void mem_free_ENTRY(struct record_ENTRY *)
                    ;
  1351                        ;static void mem_free_cRELOC(struct record_cRELOC 
                    *);
  1352                        ;static void mem_free_cINTERSEG(struct record_cINT
                    ERSEG *);
  1353                        ;static void mem_free_SUPER(struct record_SUPER *)
                    ;
  1354                        ;static void mem_free_General(struct record_Genera
                    l *);
  1355                        ;static void mem_free_Experimental(struct record_E
                    xperimental *);
  1356                        ;
  1357                        ;#pragma section CODE=LOADER,offset $9:7000
  1358                        LOADER	section	offset $9:7000
  1359 09:7000:              	ends
  1360                        ;
  1361                        ;/************************************************
                    ****************/
  1362                        ;/*  DecodeOneRecord() :  Décode un Record du Body
                     d'un Segment. */
  1363                        ;/************************************************
                    ****************/
  1364                        ;struct omf_body_record *DecodeOneRecord(unsigned 
                    char *data, int segment_num, int file_offset, int segment_of
                    fset, unsigned char *lconst, int lconst_length, int *record_
                    length_rtn, struct omf_segment *current_segment)
  1365                        ;{
  1366                        	.line	88
  1367                        	.line	89
  1368                        	LOADER
  1369                        	xdef	~~DecodeOneRecord
  1370                        	func
  1371                        	.function	89
  1372                        ~~DecodeOneRecord:
  1373                        	longa	on
  1374                        	longi	on
  1375 09:7000: 3B           	tsc
  1376 09:7001: 38           	sec
  1377 09:7002: E9 08 00     	sbc	#L2
  1378 09:7005: 1B           	tcs
  1379 09:7006: 0B           	phd
  1380 09:7007: 5B           	tcd
  1381             00000004   data_0	set	4
  1382             00000008   segment_num_0	set	8
  Mon Sep 27 2021  9:39                                                Page 28


  1383             0000000A   file_offset_0	set	10
  1384             0000000C   segment_offset_0	set	12
  1385             0000000E   lconst_0	set	14
  1386             00000012   lconst_length_0	set	18
  1387             00000014   record_length_rtn_0	set	20
  1388             00000018   current_segment_0	set	24
  1389                        	.block	89
  1390                        ;  struct omf_body_record *current_record;
  1391                        ;
  1392                        ;  /* Allocation mémoire */
  1393                        ;  current_record = (struct omf_body_record *) k_c
                    alloc(1,sizeof(struct omf_body_record));
  1394             00000000   current_record_1	set	0
  1395                        	.sym	current_record,0,138,1,32,49
  1396                        	.sym	data,4,142,6,32
  1397                        	.sym	segment_num,8,5,6,16
  1398                        	.sym	file_offset,10,5,6,16
  1399                        	.sym	segment_offset,12,5,6,16
  1400                        	.sym	lconst,14,142,6,32
  1401                        	.sym	lconst_length,18,5,6,16
  1402                        	.sym	record_length_rtn,20,133,6,32
  1403                        	.sym	current_segment,24,138,6,32,126
  1404                        	.line	93
  1405 09:7008: F4 15 00     	pea	#<$15
  1406 09:700B: F4 01 00     	pea	#<$1
  1407 09:700E: 22 xx xx xx  	jsl	~~k_calloc
  1408 09:7012: 85 05        	sta	<L3+current_record_1
  1409 09:7014: 86 07        	stx	<L3+current_record_1+2
  1410                        ;  if(current_record == NULL)
  1411                        	.line	94
  1412                        ;    {
  1413 09:7016: A5 05        	lda	<L3+current_record_1
  1414 09:7018: 05 07        	ora	<L3+current_record_1+2
  1415 09:701A: F0 03        	beq	L5
  1416 09:701C: 82 19 00     	brl	L10001
  1417                        L5:
  1418                        	.line	95
  1419                        ;      ////printf("Error : Impossible to allocate 
                    memory to process Segment #%02X Body Record.\n",current_segm
                    ent->header.SegNum);
  1420                        ;      return(NULL);
  1421                        	.line	97
  1422 09:701F: A9 00 00     	lda	#$0
  1423 09:7022: AA           	tax
  1424 09:7023: A9 00 00     	lda	#$0
  1425                        L6:
  1426 09:7026: A8           	tay
  1427 09:7027: A5 0A        	lda	<L2+2
  1428 09:7029: 85 22        	sta	<L2+2+24
  1429 09:702B: A5 09        	lda	<L2+1
  1430 09:702D: 85 21        	sta	<L2+1+24
  1431 09:702F: 2B           	pld
  1432 09:7030: 3B           	tsc
  1433 09:7031: 18           	clc
  1434 09:7032: 69 20 00     	adc	#L2+24
  1435 09:7035: 1B           	tcs
  1436 09:7036: 98           	tya
  1437 09:7037: 6B           	rtl
  Mon Sep 27 2021  9:39                                                Page 29


  1438                        ;    }
  1439                        	.line	98
  1440                        ;
  1441                        ;  /* Operation code */
  1442                        ;  current_record->operation_code = data[0];
  1443                        L10001:
  1444                        	.line	101
  1445 09:7038: E2 20        	sep	#$20
  1446                        	longa	off
  1447 09:703A: A7 0C        	lda	[<L2+data_0]
  1448 09:703C: A0 08 00     	ldy	#$8
  1449 09:703F: 97 05        	sta	[<L3+current_record_1],Y
  1450 09:7041: C2 20        	rep	#$20
  1451                        	longa	on
  1452                        ;
  1453                        ;  /** Données du Record **/
  1454                        ;  if(current_record->operation_code == 0x00)
  1455                        	.line	104
  1456                        ;    current_record->record_data = DecodeRecordEND
                    (data,file_offset,segment_offset,record_length_rtn);
  1457 09:7043: A0 08 00     	ldy	#$8
  1458 09:7046: B7 05        	lda	[<L3+current_record_1],Y
  1459 09:7048: 29 FF 00     	and	#$ff
  1460 09:704B: F0 03        	beq	L7
  1461 09:704D: 82 25 00     	brl	L10002
  1462                        L7:
  1463                        	.line	105
  1464 09:7050: D4 1E        	pei	<L2+record_length_rtn_0+2
  1465 09:7052: D4 1C        	pei	<L2+record_length_rtn_0
  1466 09:7054: D4 14        	pei	<L2+segment_offset_0
  1467 09:7056: D4 12        	pei	<L2+file_offset_0
  1468 09:7058: D4 0E        	pei	<L2+data_0+2
  1469 09:705A: D4 0C        	pei	<L2+data_0
  1470 09:705C: 22 2B 7F 09  	jsl	~~DecodeRecordEND
  1471 09:7060: 85 01        	sta	<R0
  1472 09:7062: 86 03        	stx	<R0+2
  1473 09:7064: A5 01        	lda	<R0
  1474 09:7066: A0 0B 00     	ldy	#$b
  1475 09:7069: 97 05        	sta	[<L3+current_record_1],Y
  1476 09:706B: A5 03        	lda	<R0+2
  1477 09:706D: A0 0D 00     	ldy	#$d
  1478 09:7070: 97 05        	sta	[<L3+current_record_1],Y
  1479                        ;  else if(current_record->operation_code >= 0x01 
                    && current_record->operation_code <= 0xDF)
  1480 09:7072: 82 69 05     	brl	L10003
  1481                        L10002:
  1482                        	.line	106
  1483                        ;    current_record->record_data = DecodeRecordCON
                    ST(data,file_offset,segment_offset,record_length_rtn);
  1484 09:7075: E2 20        	sep	#$20
  1485                        	longa	off
  1486 09:7077: A0 08 00     	ldy	#$8
  1487 09:707A: B7 05        	lda	[<L3+current_record_1],Y
  1488 09:707C: C9 01        	cmp	#<$1
  1489 09:707E: C2 20        	rep	#$20
  1490                        	longa	on
  1491 09:7080: B0 03        	bcs	L8
  1492 09:7082: 82 35 00     	brl	L10004
  Mon Sep 27 2021  9:39                                                Page 30


  1493                        L8:
  1494 09:7085: E2 20        	sep	#$20
  1495                        	longa	off
  1496 09:7087: A9 DF        	lda	#$df
  1497 09:7089: A0 08 00     	ldy	#$8
  1498 09:708C: D7 05        	cmp	[<L3+current_record_1],Y
  1499 09:708E: C2 20        	rep	#$20
  1500                        	longa	on
  1501 09:7090: B0 03        	bcs	L9
  1502 09:7092: 82 25 00     	brl	L10004
  1503                        L9:
  1504                        	.line	107
  1505 09:7095: D4 1E        	pei	<L2+record_length_rtn_0+2
  1506 09:7097: D4 1C        	pei	<L2+record_length_rtn_0
  1507 09:7099: D4 14        	pei	<L2+segment_offset_0
  1508 09:709B: D4 12        	pei	<L2+file_offset_0
  1509 09:709D: D4 0E        	pei	<L2+data_0+2
  1510 09:709F: D4 0C        	pei	<L2+data_0
  1511 09:70A1: 22 AB 7F 09  	jsl	~~DecodeRecordCONST
  1512 09:70A5: 85 01        	sta	<R0
  1513 09:70A7: 86 03        	stx	<R0+2
  1514 09:70A9: A5 01        	lda	<R0
  1515 09:70AB: A0 0B 00     	ldy	#$b
  1516 09:70AE: 97 05        	sta	[<L3+current_record_1],Y
  1517 09:70B0: A5 03        	lda	<R0+2
  1518 09:70B2: A0 0D 00     	ldy	#$d
  1519 09:70B5: 97 05        	sta	[<L3+current_record_1],Y
  1520                        ;  else if(current_record->operation_code == 0xE0)
  1521 09:70B7: 82 24 05     	brl	L10005
  1522                        L10004:
  1523                        	.line	108
  1524                        ;    current_record->record_data = DecodeRecordALI
                    GN(data,file_offset,segment_offset,record_length_rtn);
  1525 09:70BA: E2 20        	sep	#$20
  1526                        	longa	off
  1527 09:70BC: A0 08 00     	ldy	#$8
  1528 09:70BF: B7 05        	lda	[<L3+current_record_1],Y
  1529 09:70C1: C9 E0        	cmp	#<$e0
  1530 09:70C3: C2 20        	rep	#$20
  1531                        	longa	on
  1532 09:70C5: F0 03        	beq	L10
  1533 09:70C7: 82 25 00     	brl	L10006
  1534                        L10:
  1535                        	.line	109
  1536 09:70CA: D4 1E        	pei	<L2+record_length_rtn_0+2
  1537 09:70CC: D4 1C        	pei	<L2+record_length_rtn_0
  1538 09:70CE: D4 14        	pei	<L2+segment_offset_0
  1539 09:70D0: D4 12        	pei	<L2+file_offset_0
  1540 09:70D2: D4 0E        	pei	<L2+data_0+2
  1541 09:70D4: D4 0C        	pei	<L2+data_0
  1542 09:70D6: 22 AF 80 09  	jsl	~~DecodeRecordALIGN
  1543 09:70DA: 85 01        	sta	<R0
  1544 09:70DC: 86 03        	stx	<R0+2
  1545 09:70DE: A5 01        	lda	<R0
  1546 09:70E0: A0 0B 00     	ldy	#$b
  1547 09:70E3: 97 05        	sta	[<L3+current_record_1],Y
  1548 09:70E5: A5 03        	lda	<R0+2
  1549 09:70E7: A0 0D 00     	ldy	#$d
  Mon Sep 27 2021  9:39                                                Page 31


  1550 09:70EA: 97 05        	sta	[<L3+current_record_1],Y
  1551                        ;  else if(current_record->operation_code == 0xE1)
  1552 09:70EC: 82 EF 04     	brl	L10007
  1553                        L10006:
  1554                        	.line	110
  1555                        ;    current_record->record_data = DecodeRecordORG
                    (data,file_offset,segment_offset,record_length_rtn);
  1556 09:70EF: E2 20        	sep	#$20
  1557                        	longa	off
  1558 09:70F1: A0 08 00     	ldy	#$8
  1559 09:70F4: B7 05        	lda	[<L3+current_record_1],Y
  1560 09:70F6: C9 E1        	cmp	#<$e1
  1561 09:70F8: C2 20        	rep	#$20
  1562                        	longa	on
  1563 09:70FA: F0 03        	beq	L11
  1564 09:70FC: 82 25 00     	brl	L10008
  1565                        L11:
  1566                        	.line	111
  1567 09:70FF: D4 1E        	pei	<L2+record_length_rtn_0+2
  1568 09:7101: D4 1C        	pei	<L2+record_length_rtn_0
  1569 09:7103: D4 14        	pei	<L2+segment_offset_0
  1570 09:7105: D4 12        	pei	<L2+file_offset_0
  1571 09:7107: D4 0E        	pei	<L2+data_0+2
  1572 09:7109: D4 0C        	pei	<L2+data_0
  1573 09:710B: 22 2A 81 09  	jsl	~~DecodeRecordORG
  1574 09:710F: 85 01        	sta	<R0
  1575 09:7111: 86 03        	stx	<R0+2
  1576 09:7113: A5 01        	lda	<R0
  1577 09:7115: A0 0B 00     	ldy	#$b
  1578 09:7118: 97 05        	sta	[<L3+current_record_1],Y
  1579 09:711A: A5 03        	lda	<R0+2
  1580 09:711C: A0 0D 00     	ldy	#$d
  1581 09:711F: 97 05        	sta	[<L3+current_record_1],Y
  1582                        ;  else if(current_record->operation_code == 0xE2)
  1583 09:7121: 82 BA 04     	brl	L10009
  1584                        L10008:
  1585                        	.line	112
  1586                        ;    current_record->record_data = DecodeRecordREL
                    OC(data,file_offset,segment_offset,record_length_rtn);
  1587 09:7124: E2 20        	sep	#$20
  1588                        	longa	off
  1589 09:7126: A0 08 00     	ldy	#$8
  1590 09:7129: B7 05        	lda	[<L3+current_record_1],Y
  1591 09:712B: C9 E2        	cmp	#<$e2
  1592 09:712D: C2 20        	rep	#$20
  1593                        	longa	on
  1594 09:712F: F0 03        	beq	L12
  1595 09:7131: 82 25 00     	brl	L10010
  1596                        L12:
  1597                        	.line	113
  1598 09:7134: D4 1E        	pei	<L2+record_length_rtn_0+2
  1599 09:7136: D4 1C        	pei	<L2+record_length_rtn_0
  1600 09:7138: D4 14        	pei	<L2+segment_offset_0
  1601 09:713A: D4 12        	pei	<L2+file_offset_0
  1602 09:713C: D4 0E        	pei	<L2+data_0+2
  1603 09:713E: D4 0C        	pei	<L2+data_0
  1604 09:7140: 22 A5 81 09  	jsl	~~DecodeRecordRELOC
  1605 09:7144: 85 01        	sta	<R0
  Mon Sep 27 2021  9:39                                                Page 32


  1606 09:7146: 86 03        	stx	<R0+2
  1607 09:7148: A5 01        	lda	<R0
  1608 09:714A: A0 0B 00     	ldy	#$b
  1609 09:714D: 97 05        	sta	[<L3+current_record_1],Y
  1610 09:714F: A5 03        	lda	<R0+2
  1611 09:7151: A0 0D 00     	ldy	#$d
  1612 09:7154: 97 05        	sta	[<L3+current_record_1],Y
  1613                        ;  else if(current_record->operation_code == 0xE3)
  1614 09:7156: 82 85 04     	brl	L10011
  1615                        L10010:
  1616                        	.line	114
  1617                        ;    current_record->record_data = DecodeRecordINT
                    ERSEG(data,file_offset,segment_offset,record_length_rtn);
  1618 09:7159: E2 20        	sep	#$20
  1619                        	longa	off
  1620 09:715B: A0 08 00     	ldy	#$8
  1621 09:715E: B7 05        	lda	[<L3+current_record_1],Y
  1622 09:7160: C9 E3        	cmp	#<$e3
  1623 09:7162: C2 20        	rep	#$20
  1624                        	longa	on
  1625 09:7164: F0 03        	beq	L13
  1626 09:7166: 82 25 00     	brl	L10012
  1627                        L13:
  1628                        	.line	115
  1629 09:7169: D4 1E        	pei	<L2+record_length_rtn_0+2
  1630 09:716B: D4 1C        	pei	<L2+record_length_rtn_0
  1631 09:716D: D4 14        	pei	<L2+segment_offset_0
  1632 09:716F: D4 12        	pei	<L2+file_offset_0
  1633 09:7171: D4 0E        	pei	<L2+data_0+2
  1634 09:7173: D4 0C        	pei	<L2+data_0
  1635 09:7175: 22 C6 82 09  	jsl	~~DecodeRecordINTERSEG
  1636 09:7179: 85 01        	sta	<R0
  1637 09:717B: 86 03        	stx	<R0+2
  1638 09:717D: A5 01        	lda	<R0
  1639 09:717F: A0 0B 00     	ldy	#$b
  1640 09:7182: 97 05        	sta	[<L3+current_record_1],Y
  1641 09:7184: A5 03        	lda	<R0+2
  1642 09:7186: A0 0D 00     	ldy	#$d
  1643 09:7189: 97 05        	sta	[<L3+current_record_1],Y
  1644                        ;  else if(current_record->operation_code == 0xE4)
  1645 09:718B: 82 50 04     	brl	L10013
  1646                        L10012:
  1647                        	.line	116
  1648                        ;    current_record->record_data = DecodeRecordUSI
                    NG(data,file_offset,segment_offset,record_length_rtn);
  1649 09:718E: E2 20        	sep	#$20
  1650                        	longa	off
  1651 09:7190: A0 08 00     	ldy	#$8
  1652 09:7193: B7 05        	lda	[<L3+current_record_1],Y
  1653 09:7195: C9 E4        	cmp	#<$e4
  1654 09:7197: C2 20        	rep	#$20
  1655                        	longa	on
  1656 09:7199: F0 03        	beq	L14
  1657 09:719B: 82 25 00     	brl	L10014
  1658                        L14:
  1659                        	.line	117
  1660 09:719E: D4 1E        	pei	<L2+record_length_rtn_0+2
  1661 09:71A0: D4 1C        	pei	<L2+record_length_rtn_0
  Mon Sep 27 2021  9:39                                                Page 33


  1662 09:71A2: D4 14        	pei	<L2+segment_offset_0
  1663 09:71A4: D4 12        	pei	<L2+file_offset_0
  1664 09:71A6: D4 0E        	pei	<L2+data_0+2
  1665 09:71A8: D4 0C        	pei	<L2+data_0
  1666 09:71AA: 22 4D 84 09  	jsl	~~DecodeRecordUSING
  1667 09:71AE: 85 01        	sta	<R0
  1668 09:71B0: 86 03        	stx	<R0+2
  1669 09:71B2: A5 01        	lda	<R0
  1670 09:71B4: A0 0B 00     	ldy	#$b
  1671 09:71B7: 97 05        	sta	[<L3+current_record_1],Y
  1672 09:71B9: A5 03        	lda	<R0+2
  1673 09:71BB: A0 0D 00     	ldy	#$d
  1674 09:71BE: 97 05        	sta	[<L3+current_record_1],Y
  1675                        ;  else if(current_record->operation_code == 0xE5)
  1676 09:71C0: 82 1B 04     	brl	L10015
  1677                        L10014:
  1678                        	.line	118
  1679                        ;    current_record->record_data = DecodeRecordSTR
                    ONG(data,file_offset,segment_offset,record_length_rtn);
  1680 09:71C3: E2 20        	sep	#$20
  1681                        	longa	off
  1682 09:71C5: A0 08 00     	ldy	#$8
  1683 09:71C8: B7 05        	lda	[<L3+current_record_1],Y
  1684 09:71CA: C9 E5        	cmp	#<$e5
  1685 09:71CC: C2 20        	rep	#$20
  1686                        	longa	on
  1687 09:71CE: F0 03        	beq	L15
  1688 09:71D0: 82 25 00     	brl	L10016
  1689                        L15:
  1690                        	.line	119
  1691 09:71D3: D4 1E        	pei	<L2+record_length_rtn_0+2
  1692 09:71D5: D4 1C        	pei	<L2+record_length_rtn_0
  1693 09:71D7: D4 14        	pei	<L2+segment_offset_0
  1694 09:71D9: D4 12        	pei	<L2+file_offset_0
  1695 09:71DB: D4 0E        	pei	<L2+data_0+2
  1696 09:71DD: D4 0C        	pei	<L2+data_0
  1697 09:71DF: 22 C8 84 09  	jsl	~~DecodeRecordSTRONG
  1698 09:71E3: 85 01        	sta	<R0
  1699 09:71E5: 86 03        	stx	<R0+2
  1700 09:71E7: A5 01        	lda	<R0
  1701 09:71E9: A0 0B 00     	ldy	#$b
  1702 09:71EC: 97 05        	sta	[<L3+current_record_1],Y
  1703 09:71EE: A5 03        	lda	<R0+2
  1704 09:71F0: A0 0D 00     	ldy	#$d
  1705 09:71F3: 97 05        	sta	[<L3+current_record_1],Y
  1706                        ;  else if(current_record->operation_code == 0xE6)
  1707 09:71F5: 82 E6 03     	brl	L10017
  1708                        L10016:
  1709                        	.line	120
  1710                        ;    current_record->record_data = DecodeRecordGLO
                    BAL(data,file_offset,segment_offset,record_length_rtn);
  1711 09:71F8: E2 20        	sep	#$20
  1712                        	longa	off
  1713 09:71FA: A0 08 00     	ldy	#$8
  1714 09:71FD: B7 05        	lda	[<L3+current_record_1],Y
  1715 09:71FF: C9 E6        	cmp	#<$e6
  1716 09:7201: C2 20        	rep	#$20
  1717                        	longa	on
  Mon Sep 27 2021  9:39                                                Page 34


  1718 09:7203: F0 03        	beq	L16
  1719 09:7205: 82 25 00     	brl	L10018
  1720                        L16:
  1721                        	.line	121
  1722 09:7208: D4 1E        	pei	<L2+record_length_rtn_0+2
  1723 09:720A: D4 1C        	pei	<L2+record_length_rtn_0
  1724 09:720C: D4 14        	pei	<L2+segment_offset_0
  1725 09:720E: D4 12        	pei	<L2+file_offset_0
  1726 09:7210: D4 0E        	pei	<L2+data_0+2
  1727 09:7212: D4 0C        	pei	<L2+data_0
  1728 09:7214: 22 43 85 09  	jsl	~~DecodeRecordGLOBAL
  1729 09:7218: 85 01        	sta	<R0
  1730 09:721A: 86 03        	stx	<R0+2
  1731 09:721C: A5 01        	lda	<R0
  1732 09:721E: A0 0B 00     	ldy	#$b
  1733 09:7221: 97 05        	sta	[<L3+current_record_1],Y
  1734 09:7223: A5 03        	lda	<R0+2
  1735 09:7225: A0 0D 00     	ldy	#$d
  1736 09:7228: 97 05        	sta	[<L3+current_record_1],Y
  1737                        ;  else if(current_record->operation_code == 0xE7)
  1738 09:722A: 82 B1 03     	brl	L10019
  1739                        L10018:
  1740                        	.line	122
  1741                        ;    current_record->record_data = DecodeRecordGEQ
                    U(data,file_offset,segment_offset,record_length_rtn);
  1742 09:722D: E2 20        	sep	#$20
  1743                        	longa	off
  1744 09:722F: A0 08 00     	ldy	#$8
  1745 09:7232: B7 05        	lda	[<L3+current_record_1],Y
  1746 09:7234: C9 E7        	cmp	#<$e7
  1747 09:7236: C2 20        	rep	#$20
  1748                        	longa	on
  1749 09:7238: F0 03        	beq	L17
  1750 09:723A: 82 25 00     	brl	L10020
  1751                        L17:
  1752                        	.line	123
  1753 09:723D: D4 1E        	pei	<L2+record_length_rtn_0+2
  1754 09:723F: D4 1C        	pei	<L2+record_length_rtn_0
  1755 09:7241: D4 14        	pei	<L2+segment_offset_0
  1756 09:7243: D4 12        	pei	<L2+file_offset_0
  1757 09:7245: D4 0E        	pei	<L2+data_0+2
  1758 09:7247: D4 0C        	pei	<L2+data_0
  1759 09:7249: 22 BE 85 09  	jsl	~~DecodeRecordGEQU
  1760 09:724D: 85 01        	sta	<R0
  1761 09:724F: 86 03        	stx	<R0+2
  1762 09:7251: A5 01        	lda	<R0
  1763 09:7253: A0 0B 00     	ldy	#$b
  1764 09:7256: 97 05        	sta	[<L3+current_record_1],Y
  1765 09:7258: A5 03        	lda	<R0+2
  1766 09:725A: A0 0D 00     	ldy	#$d
  1767 09:725D: 97 05        	sta	[<L3+current_record_1],Y
  1768                        ;  else if(current_record->operation_code == 0xE8)
  1769 09:725F: 82 7C 03     	brl	L10021
  1770                        L10020:
  1771                        	.line	124
  1772                        ;    current_record->record_data = DecodeRecordMEM
                    (data,file_offset,segment_offset,record_length_rtn);
  1773 09:7262: E2 20        	sep	#$20
  Mon Sep 27 2021  9:39                                                Page 35


  1774                        	longa	off
  1775 09:7264: A0 08 00     	ldy	#$8
  1776 09:7267: B7 05        	lda	[<L3+current_record_1],Y
  1777 09:7269: C9 E8        	cmp	#<$e8
  1778 09:726B: C2 20        	rep	#$20
  1779                        	longa	on
  1780 09:726D: F0 03        	beq	L18
  1781 09:726F: 82 25 00     	brl	L10022
  1782                        L18:
  1783                        	.line	125
  1784 09:7272: D4 1E        	pei	<L2+record_length_rtn_0+2
  1785 09:7274: D4 1C        	pei	<L2+record_length_rtn_0
  1786 09:7276: D4 14        	pei	<L2+segment_offset_0
  1787 09:7278: D4 12        	pei	<L2+file_offset_0
  1788 09:727A: D4 0E        	pei	<L2+data_0+2
  1789 09:727C: D4 0C        	pei	<L2+data_0
  1790 09:727E: 22 39 86 09  	jsl	~~DecodeRecordMEM
  1791 09:7282: 85 01        	sta	<R0
  1792 09:7284: 86 03        	stx	<R0+2
  1793 09:7286: A5 01        	lda	<R0
  1794 09:7288: A0 0B 00     	ldy	#$b
  1795 09:728B: 97 05        	sta	[<L3+current_record_1],Y
  1796 09:728D: A5 03        	lda	<R0+2
  1797 09:728F: A0 0D 00     	ldy	#$d
  1798 09:7292: 97 05        	sta	[<L3+current_record_1],Y
  1799                        ;  else if(current_record->operation_code == 0xEB)
  1800 09:7294: 82 47 03     	brl	L10023
  1801                        L10022:
  1802                        	.line	126
  1803                        ;    current_record->record_data = DecodeRecordEXP
                    R(data,file_offset,segment_offset,record_length_rtn);
  1804 09:7297: E2 20        	sep	#$20
  1805                        	longa	off
  1806 09:7299: A0 08 00     	ldy	#$8
  1807 09:729C: B7 05        	lda	[<L3+current_record_1],Y
  1808 09:729E: C9 EB        	cmp	#<$eb
  1809 09:72A0: C2 20        	rep	#$20
  1810                        	longa	on
  1811 09:72A2: F0 03        	beq	L19
  1812 09:72A4: 82 25 00     	brl	L10024
  1813                        L19:
  1814                        	.line	127
  1815 09:72A7: D4 1E        	pei	<L2+record_length_rtn_0+2
  1816 09:72A9: D4 1C        	pei	<L2+record_length_rtn_0
  1817 09:72AB: D4 14        	pei	<L2+segment_offset_0
  1818 09:72AD: D4 12        	pei	<L2+file_offset_0
  1819 09:72AF: D4 0E        	pei	<L2+data_0+2
  1820 09:72B1: D4 0C        	pei	<L2+data_0
  1821 09:72B3: 22 B4 86 09  	jsl	~~DecodeRecordEXPR
  1822 09:72B7: 85 01        	sta	<R0
  1823 09:72B9: 86 03        	stx	<R0+2
  1824 09:72BB: A5 01        	lda	<R0
  1825 09:72BD: A0 0B 00     	ldy	#$b
  1826 09:72C0: 97 05        	sta	[<L3+current_record_1],Y
  1827 09:72C2: A5 03        	lda	<R0+2
  1828 09:72C4: A0 0D 00     	ldy	#$d
  1829 09:72C7: 97 05        	sta	[<L3+current_record_1],Y
  1830                        ;  else if(current_record->operation_code == 0xEC)
  Mon Sep 27 2021  9:39                                                Page 36


  1831 09:72C9: 82 12 03     	brl	L10025
  1832                        L10024:
  1833                        	.line	128
  1834                        ;    current_record->record_data = DecodeRecordZEX
                    PR(data,file_offset,segment_offset,record_length_rtn);
  1835 09:72CC: E2 20        	sep	#$20
  1836                        	longa	off
  1837 09:72CE: A0 08 00     	ldy	#$8
  1838 09:72D1: B7 05        	lda	[<L3+current_record_1],Y
  1839 09:72D3: C9 EC        	cmp	#<$ec
  1840 09:72D5: C2 20        	rep	#$20
  1841                        	longa	on
  1842 09:72D7: F0 03        	beq	L20
  1843 09:72D9: 82 25 00     	brl	L10026
  1844                        L20:
  1845                        	.line	129
  1846 09:72DC: D4 1E        	pei	<L2+record_length_rtn_0+2
  1847 09:72DE: D4 1C        	pei	<L2+record_length_rtn_0
  1848 09:72E0: D4 14        	pei	<L2+segment_offset_0
  1849 09:72E2: D4 12        	pei	<L2+file_offset_0
  1850 09:72E4: D4 0E        	pei	<L2+data_0+2
  1851 09:72E6: D4 0C        	pei	<L2+data_0
  1852 09:72E8: 22 2F 87 09  	jsl	~~DecodeRecordZEXPR
  1853 09:72EC: 85 01        	sta	<R0
  1854 09:72EE: 86 03        	stx	<R0+2
  1855 09:72F0: A5 01        	lda	<R0
  1856 09:72F2: A0 0B 00     	ldy	#$b
  1857 09:72F5: 97 05        	sta	[<L3+current_record_1],Y
  1858 09:72F7: A5 03        	lda	<R0+2
  1859 09:72F9: A0 0D 00     	ldy	#$d
  1860 09:72FC: 97 05        	sta	[<L3+current_record_1],Y
  1861                        ;  else if(current_record->operation_code == 0xED)
  1862 09:72FE: 82 DD 02     	brl	L10027
  1863                        L10026:
  1864                        	.line	130
  1865                        ;    current_record->record_data = DecodeRecordBEX
                    PR(data,file_offset,segment_offset,record_length_rtn);
  1866 09:7301: E2 20        	sep	#$20
  1867                        	longa	off
  1868 09:7303: A0 08 00     	ldy	#$8
  1869 09:7306: B7 05        	lda	[<L3+current_record_1],Y
  1870 09:7308: C9 ED        	cmp	#<$ed
  1871 09:730A: C2 20        	rep	#$20
  1872                        	longa	on
  1873 09:730C: F0 03        	beq	L21
  1874 09:730E: 82 25 00     	brl	L10028
  1875                        L21:
  1876                        	.line	131
  1877 09:7311: D4 1E        	pei	<L2+record_length_rtn_0+2
  1878 09:7313: D4 1C        	pei	<L2+record_length_rtn_0
  1879 09:7315: D4 14        	pei	<L2+segment_offset_0
  1880 09:7317: D4 12        	pei	<L2+file_offset_0
  1881 09:7319: D4 0E        	pei	<L2+data_0+2
  1882 09:731B: D4 0C        	pei	<L2+data_0
  1883 09:731D: 22 AA 87 09  	jsl	~~DecodeRecordBEXPR
  1884 09:7321: 85 01        	sta	<R0
  1885 09:7323: 86 03        	stx	<R0+2
  1886 09:7325: A5 01        	lda	<R0
  Mon Sep 27 2021  9:39                                                Page 37


  1887 09:7327: A0 0B 00     	ldy	#$b
  1888 09:732A: 97 05        	sta	[<L3+current_record_1],Y
  1889 09:732C: A5 03        	lda	<R0+2
  1890 09:732E: A0 0D 00     	ldy	#$d
  1891 09:7331: 97 05        	sta	[<L3+current_record_1],Y
  1892                        ;  else if(current_record->operation_code == 0xEE)
  1893 09:7333: 82 A8 02     	brl	L10029
  1894                        L10028:
  1895                        	.line	132
  1896                        ;    current_record->record_data = DecodeRecordREL
                    EXPR(data,file_offset,segment_offset,record_length_rtn);
  1897 09:7336: E2 20        	sep	#$20
  1898                        	longa	off
  1899 09:7338: A0 08 00     	ldy	#$8
  1900 09:733B: B7 05        	lda	[<L3+current_record_1],Y
  1901 09:733D: C9 EE        	cmp	#<$ee
  1902 09:733F: C2 20        	rep	#$20
  1903                        	longa	on
  1904 09:7341: F0 03        	beq	L22
  1905 09:7343: 82 25 00     	brl	L10030
  1906                        L22:
  1907                        	.line	133
  1908 09:7346: D4 1E        	pei	<L2+record_length_rtn_0+2
  1909 09:7348: D4 1C        	pei	<L2+record_length_rtn_0
  1910 09:734A: D4 14        	pei	<L2+segment_offset_0
  1911 09:734C: D4 12        	pei	<L2+file_offset_0
  1912 09:734E: D4 0E        	pei	<L2+data_0+2
  1913 09:7350: D4 0C        	pei	<L2+data_0
  1914 09:7352: 22 25 88 09  	jsl	~~DecodeRecordRELEXPR
  1915 09:7356: 85 01        	sta	<R0
  1916 09:7358: 86 03        	stx	<R0+2
  1917 09:735A: A5 01        	lda	<R0
  1918 09:735C: A0 0B 00     	ldy	#$b
  1919 09:735F: 97 05        	sta	[<L3+current_record_1],Y
  1920 09:7361: A5 03        	lda	<R0+2
  1921 09:7363: A0 0D 00     	ldy	#$d
  1922 09:7366: 97 05        	sta	[<L3+current_record_1],Y
  1923                        ;  else if(current_record->operation_code == 0xEF)
  1924 09:7368: 82 73 02     	brl	L10031
  1925                        L10030:
  1926                        	.line	134
  1927                        ;    current_record->record_data = DecodeRecordLOC
                    AL(data,file_offset,segment_offset,record_length_rtn);
  1928 09:736B: E2 20        	sep	#$20
  1929                        	longa	off
  1930 09:736D: A0 08 00     	ldy	#$8
  1931 09:7370: B7 05        	lda	[<L3+current_record_1],Y
  1932 09:7372: C9 EF        	cmp	#<$ef
  1933 09:7374: C2 20        	rep	#$20
  1934                        	longa	on
  1935 09:7376: F0 03        	beq	L23
  1936 09:7378: 82 25 00     	brl	L10032
  1937                        L23:
  1938                        	.line	135
  1939 09:737B: D4 1E        	pei	<L2+record_length_rtn_0+2
  1940 09:737D: D4 1C        	pei	<L2+record_length_rtn_0
  1941 09:737F: D4 14        	pei	<L2+segment_offset_0
  1942 09:7381: D4 12        	pei	<L2+file_offset_0
  Mon Sep 27 2021  9:39                                                Page 38


  1943 09:7383: D4 0E        	pei	<L2+data_0+2
  1944 09:7385: D4 0C        	pei	<L2+data_0
  1945 09:7387: 22 A0 88 09  	jsl	~~DecodeRecordLOCAL
  1946 09:738B: 85 01        	sta	<R0
  1947 09:738D: 86 03        	stx	<R0+2
  1948 09:738F: A5 01        	lda	<R0
  1949 09:7391: A0 0B 00     	ldy	#$b
  1950 09:7394: 97 05        	sta	[<L3+current_record_1],Y
  1951 09:7396: A5 03        	lda	<R0+2
  1952 09:7398: A0 0D 00     	ldy	#$d
  1953 09:739B: 97 05        	sta	[<L3+current_record_1],Y
  1954                        ;  else if(current_record->operation_code == 0xF0)
  1955 09:739D: 82 3E 02     	brl	L10033
  1956                        L10032:
  1957                        	.line	136
  1958                        ;    current_record->record_data = DecodeRecordEQU
                    (data,file_offset,segment_offset,record_length_rtn);
  1959 09:73A0: E2 20        	sep	#$20
  1960                        	longa	off
  1961 09:73A2: A0 08 00     	ldy	#$8
  1962 09:73A5: B7 05        	lda	[<L3+current_record_1],Y
  1963 09:73A7: C9 F0        	cmp	#<$f0
  1964 09:73A9: C2 20        	rep	#$20
  1965                        	longa	on
  1966 09:73AB: F0 03        	beq	L24
  1967 09:73AD: 82 25 00     	brl	L10034
  1968                        L24:
  1969                        	.line	137
  1970 09:73B0: D4 1E        	pei	<L2+record_length_rtn_0+2
  1971 09:73B2: D4 1C        	pei	<L2+record_length_rtn_0
  1972 09:73B4: D4 14        	pei	<L2+segment_offset_0
  1973 09:73B6: D4 12        	pei	<L2+file_offset_0
  1974 09:73B8: D4 0E        	pei	<L2+data_0+2
  1975 09:73BA: D4 0C        	pei	<L2+data_0
  1976 09:73BC: 22 1B 89 09  	jsl	~~DecodeRecordEQU
  1977 09:73C0: 85 01        	sta	<R0
  1978 09:73C2: 86 03        	stx	<R0+2
  1979 09:73C4: A5 01        	lda	<R0
  1980 09:73C6: A0 0B 00     	ldy	#$b
  1981 09:73C9: 97 05        	sta	[<L3+current_record_1],Y
  1982 09:73CB: A5 03        	lda	<R0+2
  1983 09:73CD: A0 0D 00     	ldy	#$d
  1984 09:73D0: 97 05        	sta	[<L3+current_record_1],Y
  1985                        ;  else if(current_record->operation_code == 0xF1)
  1986 09:73D2: 82 09 02     	brl	L10035
  1987                        L10034:
  1988                        	.line	138
  1989                        ;    current_record->record_data = DecodeRecordDS(
                    data,file_offset,segment_offset,record_length_rtn);
  1990 09:73D5: E2 20        	sep	#$20
  1991                        	longa	off
  1992 09:73D7: A0 08 00     	ldy	#$8
  1993 09:73DA: B7 05        	lda	[<L3+current_record_1],Y
  1994 09:73DC: C9 F1        	cmp	#<$f1
  1995 09:73DE: C2 20        	rep	#$20
  1996                        	longa	on
  1997 09:73E0: F0 03        	beq	L25
  1998 09:73E2: 82 25 00     	brl	L10036
  Mon Sep 27 2021  9:39                                                Page 39


  1999                        L25:
  2000                        	.line	139
  2001 09:73E5: D4 1E        	pei	<L2+record_length_rtn_0+2
  2002 09:73E7: D4 1C        	pei	<L2+record_length_rtn_0
  2003 09:73E9: D4 14        	pei	<L2+segment_offset_0
  2004 09:73EB: D4 12        	pei	<L2+file_offset_0
  2005 09:73ED: D4 0E        	pei	<L2+data_0+2
  2006 09:73EF: D4 0C        	pei	<L2+data_0
  2007 09:73F1: 22 96 89 09  	jsl	~~DecodeRecordDS
  2008 09:73F5: 85 01        	sta	<R0
  2009 09:73F7: 86 03        	stx	<R0+2
  2010 09:73F9: A5 01        	lda	<R0
  2011 09:73FB: A0 0B 00     	ldy	#$b
  2012 09:73FE: 97 05        	sta	[<L3+current_record_1],Y
  2013 09:7400: A5 03        	lda	<R0+2
  2014 09:7402: A0 0D 00     	ldy	#$d
  2015 09:7405: 97 05        	sta	[<L3+current_record_1],Y
  2016                        ;  else if(current_record->operation_code == 0xF2)
  2017 09:7407: 82 D4 01     	brl	L10037
  2018                        L10036:
  2019                        	.line	140
  2020                        ;    current_record->record_data = DecodeRecordLCO
                    NST(data,file_offset,segment_offset,record_length_rtn);
  2021 09:740A: E2 20        	sep	#$20
  2022                        	longa	off
  2023 09:740C: A0 08 00     	ldy	#$8
  2024 09:740F: B7 05        	lda	[<L3+current_record_1],Y
  2025 09:7411: C9 F2        	cmp	#<$f2
  2026 09:7413: C2 20        	rep	#$20
  2027                        	longa	on
  2028 09:7415: F0 03        	beq	L26
  2029 09:7417: 82 25 00     	brl	L10038
  2030                        L26:
  2031                        	.line	141
  2032 09:741A: D4 1E        	pei	<L2+record_length_rtn_0+2
  2033 09:741C: D4 1C        	pei	<L2+record_length_rtn_0
  2034 09:741E: D4 14        	pei	<L2+segment_offset_0
  2035 09:7420: D4 12        	pei	<L2+file_offset_0
  2036 09:7422: D4 0E        	pei	<L2+data_0+2
  2037 09:7424: D4 0C        	pei	<L2+data_0
  2038 09:7426: 22 43 8A 09  	jsl	~~DecodeRecordLCONST
  2039 09:742A: 85 01        	sta	<R0
  2040 09:742C: 86 03        	stx	<R0+2
  2041 09:742E: A5 01        	lda	<R0
  2042 09:7430: A0 0B 00     	ldy	#$b
  2043 09:7433: 97 05        	sta	[<L3+current_record_1],Y
  2044 09:7435: A5 03        	lda	<R0+2
  2045 09:7437: A0 0D 00     	ldy	#$d
  2046 09:743A: 97 05        	sta	[<L3+current_record_1],Y
  2047                        ;  else if(current_record->operation_code == 0xF3)
  2048 09:743C: 82 9F 01     	brl	L10039
  2049                        L10038:
  2050                        	.line	142
  2051                        ;    current_record->record_data = DecodeRecordLEX
                    PR(data,file_offset,segment_offset,record_length_rtn);
  2052 09:743F: E2 20        	sep	#$20
  2053                        	longa	off
  2054 09:7441: A0 08 00     	ldy	#$8
  Mon Sep 27 2021  9:39                                                Page 40


  2055 09:7444: B7 05        	lda	[<L3+current_record_1],Y
  2056 09:7446: C9 F3        	cmp	#<$f3
  2057 09:7448: C2 20        	rep	#$20
  2058                        	longa	on
  2059 09:744A: F0 03        	beq	L27
  2060 09:744C: 82 25 00     	brl	L10040
  2061                        L27:
  2062                        	.line	143
  2063 09:744F: D4 1E        	pei	<L2+record_length_rtn_0+2
  2064 09:7451: D4 1C        	pei	<L2+record_length_rtn_0
  2065 09:7453: D4 14        	pei	<L2+segment_offset_0
  2066 09:7455: D4 12        	pei	<L2+file_offset_0
  2067 09:7457: D4 0E        	pei	<L2+data_0+2
  2068 09:7459: D4 0C        	pei	<L2+data_0
  2069 09:745B: 22 6D 8B 09  	jsl	~~DecodeRecordLEXPR
  2070 09:745F: 85 01        	sta	<R0
  2071 09:7461: 86 03        	stx	<R0+2
  2072 09:7463: A5 01        	lda	<R0
  2073 09:7465: A0 0B 00     	ldy	#$b
  2074 09:7468: 97 05        	sta	[<L3+current_record_1],Y
  2075 09:746A: A5 03        	lda	<R0+2
  2076 09:746C: A0 0D 00     	ldy	#$d
  2077 09:746F: 97 05        	sta	[<L3+current_record_1],Y
  2078                        ;  else if(current_record->operation_code == 0xF4)
  2079 09:7471: 82 6A 01     	brl	L10041
  2080                        L10040:
  2081                        	.line	144
  2082                        ;    current_record->record_data = DecodeRecordENT
                    RY(data,file_offset,segment_offset,record_length_rtn);
  2083 09:7474: E2 20        	sep	#$20
  2084                        	longa	off
  2085 09:7476: A0 08 00     	ldy	#$8
  2086 09:7479: B7 05        	lda	[<L3+current_record_1],Y
  2087 09:747B: C9 F4        	cmp	#<$f4
  2088 09:747D: C2 20        	rep	#$20
  2089                        	longa	on
  2090 09:747F: F0 03        	beq	L28
  2091 09:7481: 82 25 00     	brl	L10042
  2092                        L28:
  2093                        	.line	145
  2094 09:7484: D4 1E        	pei	<L2+record_length_rtn_0+2
  2095 09:7486: D4 1C        	pei	<L2+record_length_rtn_0
  2096 09:7488: D4 14        	pei	<L2+segment_offset_0
  2097 09:748A: D4 12        	pei	<L2+file_offset_0
  2098 09:748C: D4 0E        	pei	<L2+data_0+2
  2099 09:748E: D4 0C        	pei	<L2+data_0
  2100 09:7490: 22 E8 8B 09  	jsl	~~DecodeRecordENTRY
  2101 09:7494: 85 01        	sta	<R0
  2102 09:7496: 86 03        	stx	<R0+2
  2103 09:7498: A5 01        	lda	<R0
  2104 09:749A: A0 0B 00     	ldy	#$b
  2105 09:749D: 97 05        	sta	[<L3+current_record_1],Y
  2106 09:749F: A5 03        	lda	<R0+2
  2107 09:74A1: A0 0D 00     	ldy	#$d
  2108 09:74A4: 97 05        	sta	[<L3+current_record_1],Y
  2109                        ;  else if(current_record->operation_code == 0xF5)
  2110 09:74A6: 82 35 01     	brl	L10043
  2111                        L10042:
  Mon Sep 27 2021  9:39                                                Page 41


  2112                        	.line	146
  2113                        ;    current_record->record_data = DecodeRecordcRE
                    LOC(data,file_offset,segment_offset,record_length_rtn);
  2114 09:74A9: E2 20        	sep	#$20
  2115                        	longa	off
  2116 09:74AB: A0 08 00     	ldy	#$8
  2117 09:74AE: B7 05        	lda	[<L3+current_record_1],Y
  2118 09:74B0: C9 F5        	cmp	#<$f5
  2119 09:74B2: C2 20        	rep	#$20
  2120                        	longa	on
  2121 09:74B4: F0 03        	beq	L29
  2122 09:74B6: 82 25 00     	brl	L10044
  2123                        L29:
  2124                        	.line	147
  2125 09:74B9: D4 1E        	pei	<L2+record_length_rtn_0+2
  2126 09:74BB: D4 1C        	pei	<L2+record_length_rtn_0
  2127 09:74BD: D4 14        	pei	<L2+segment_offset_0
  2128 09:74BF: D4 12        	pei	<L2+file_offset_0
  2129 09:74C1: D4 0E        	pei	<L2+data_0+2
  2130 09:74C3: D4 0C        	pei	<L2+data_0
  2131 09:74C5: 22 63 8C 09  	jsl	~~DecodeRecordcRELOC
  2132 09:74C9: 85 01        	sta	<R0
  2133 09:74CB: 86 03        	stx	<R0+2
  2134 09:74CD: A5 01        	lda	<R0
  2135 09:74CF: A0 0B 00     	ldy	#$b
  2136 09:74D2: 97 05        	sta	[<L3+current_record_1],Y
  2137 09:74D4: A5 03        	lda	<R0+2
  2138 09:74D6: A0 0D 00     	ldy	#$d
  2139 09:74D9: 97 05        	sta	[<L3+current_record_1],Y
  2140                        ;  else if(current_record->operation_code == 0xF6)
  2141 09:74DB: 82 00 01     	brl	L10045
  2142                        L10044:
  2143                        	.line	148
  2144                        ;    current_record->record_data = DecodeRecordcIN
                    TERSEG(data,file_offset,segment_offset,record_length_rtn);
  2145 09:74DE: E2 20        	sep	#$20
  2146                        	longa	off
  2147 09:74E0: A0 08 00     	ldy	#$8
  2148 09:74E3: B7 05        	lda	[<L3+current_record_1],Y
  2149 09:74E5: C9 F6        	cmp	#<$f6
  2150 09:74E7: C2 20        	rep	#$20
  2151                        	longa	on
  2152 09:74E9: F0 03        	beq	L30
  2153 09:74EB: 82 25 00     	brl	L10046
  2154                        L30:
  2155                        	.line	149
  2156 09:74EE: D4 1E        	pei	<L2+record_length_rtn_0+2
  2157 09:74F0: D4 1C        	pei	<L2+record_length_rtn_0
  2158 09:74F2: D4 14        	pei	<L2+segment_offset_0
  2159 09:74F4: D4 12        	pei	<L2+file_offset_0
  2160 09:74F6: D4 0E        	pei	<L2+data_0+2
  2161 09:74F8: D4 0C        	pei	<L2+data_0
  2162 09:74FA: 22 A4 8D 09  	jsl	~~DecodeRecordcINTERSEG
  2163 09:74FE: 85 01        	sta	<R0
  2164 09:7500: 86 03        	stx	<R0+2
  2165 09:7502: A5 01        	lda	<R0
  2166 09:7504: A0 0B 00     	ldy	#$b
  2167 09:7507: 97 05        	sta	[<L3+current_record_1],Y
  Mon Sep 27 2021  9:39                                                Page 42


  2168 09:7509: A5 03        	lda	<R0+2
  2169 09:750B: A0 0D 00     	ldy	#$d
  2170 09:750E: 97 05        	sta	[<L3+current_record_1],Y
  2171                        ;  else if(current_record->operation_code == 0xF7)
  2172 09:7510: 82 CB 00     	brl	L10047
  2173                        L10046:
  2174                        	.line	150
  2175                        ;    current_record->record_data = DecodeRecordSUP
                    ER(data,file_offset,segment_offset,lconst,lconst_length,reco
                    rd_length_rtn,current_segment);
  2176 09:7513: E2 20        	sep	#$20
  2177                        	longa	off
  2178 09:7515: A0 08 00     	ldy	#$8
  2179 09:7518: B7 05        	lda	[<L3+current_record_1],Y
  2180 09:751A: C9 F7        	cmp	#<$f7
  2181 09:751C: C2 20        	rep	#$20
  2182                        	longa	on
  2183 09:751E: F0 03        	beq	L31
  2184 09:7520: 82 2F 00     	brl	L10048
  2185                        L31:
  2186                        	.line	151
  2187 09:7523: D4 22        	pei	<L2+current_segment_0+2
  2188 09:7525: D4 20        	pei	<L2+current_segment_0
  2189 09:7527: D4 1E        	pei	<L2+record_length_rtn_0+2
  2190 09:7529: D4 1C        	pei	<L2+record_length_rtn_0
  2191 09:752B: D4 1A        	pei	<L2+lconst_length_0
  2192 09:752D: D4 18        	pei	<L2+lconst_0+2
  2193 09:752F: D4 16        	pei	<L2+lconst_0
  2194 09:7531: D4 14        	pei	<L2+segment_offset_0
  2195 09:7533: D4 12        	pei	<L2+file_offset_0
  2196 09:7535: D4 0E        	pei	<L2+data_0+2
  2197 09:7537: D4 0C        	pei	<L2+data_0
  2198 09:7539: 22 0A 8F 09  	jsl	~~DecodeRecordSUPER
  2199 09:753D: 85 01        	sta	<R0
  2200 09:753F: 86 03        	stx	<R0+2
  2201 09:7541: A5 01        	lda	<R0
  2202 09:7543: A0 0B 00     	ldy	#$b
  2203 09:7546: 97 05        	sta	[<L3+current_record_1],Y
  2204 09:7548: A5 03        	lda	<R0+2
  2205 09:754A: A0 0D 00     	ldy	#$d
  2206 09:754D: 97 05        	sta	[<L3+current_record_1],Y
  2207                        ;  else if(current_record->operation_code == 0xFB)
  2208 09:754F: 82 8C 00     	brl	L10049
  2209                        L10048:
  2210                        	.line	152
  2211                        ;    current_record->record_data = DecodeRecordGen
                    eral(data,file_offset,segment_offset,record_length_rtn);
  2212 09:7552: E2 20        	sep	#$20
  2213                        	longa	off
  2214 09:7554: A0 08 00     	ldy	#$8
  2215 09:7557: B7 05        	lda	[<L3+current_record_1],Y
  2216 09:7559: C9 FB        	cmp	#<$fb
  2217 09:755B: C2 20        	rep	#$20
  2218                        	longa	on
  2219 09:755D: F0 03        	beq	L32
  2220 09:755F: 82 25 00     	brl	L10050
  2221                        L32:
  2222                        	.line	153
  Mon Sep 27 2021  9:39                                                Page 43


  2223 09:7562: D4 1E        	pei	<L2+record_length_rtn_0+2
  2224 09:7564: D4 1C        	pei	<L2+record_length_rtn_0
  2225 09:7566: D4 14        	pei	<L2+segment_offset_0
  2226 09:7568: D4 12        	pei	<L2+file_offset_0
  2227 09:756A: D4 0E        	pei	<L2+data_0+2
  2228 09:756C: D4 0C        	pei	<L2+data_0
  2229 09:756E: 22 FD 95 09  	jsl	~~DecodeRecordGeneral
  2230 09:7572: 85 01        	sta	<R0
  2231 09:7574: 86 03        	stx	<R0+2
  2232 09:7576: A5 01        	lda	<R0
  2233 09:7578: A0 0B 00     	ldy	#$b
  2234 09:757B: 97 05        	sta	[<L3+current_record_1],Y
  2235 09:757D: A5 03        	lda	<R0+2
  2236 09:757F: A0 0D 00     	ldy	#$d
  2237 09:7582: 97 05        	sta	[<L3+current_record_1],Y
  2238                        ;  else if(current_record->operation_code >= 0xFC 
                    && current_record->operation_code <= 0xFF)
  2239 09:7584: 82 57 00     	brl	L10051
  2240                        L10050:
  2241                        	.line	154
  2242                        ;    current_record->record_data = DecodeRecordExp
                    erimental(data,file_offset,segment_offset,record_length_rtn)
                    ;
  2243 09:7587: E2 20        	sep	#$20
  2244                        	longa	off
  2245 09:7589: A0 08 00     	ldy	#$8
  2246 09:758C: B7 05        	lda	[<L3+current_record_1],Y
  2247 09:758E: C9 FC        	cmp	#<$fc
  2248 09:7590: C2 20        	rep	#$20
  2249                        	longa	on
  2250 09:7592: B0 03        	bcs	L33
  2251 09:7594: 82 35 00     	brl	L10052
  2252                        L33:
  2253 09:7597: E2 20        	sep	#$20
  2254                        	longa	off
  2255 09:7599: A9 FF        	lda	#$ff
  2256 09:759B: A0 08 00     	ldy	#$8
  2257 09:759E: D7 05        	cmp	[<L3+current_record_1],Y
  2258 09:75A0: C2 20        	rep	#$20
  2259                        	longa	on
  2260 09:75A2: B0 03        	bcs	L34
  2261 09:75A4: 82 25 00     	brl	L10052
  2262                        L34:
  2263                        	.line	155
  2264 09:75A7: D4 1E        	pei	<L2+record_length_rtn_0+2
  2265 09:75A9: D4 1C        	pei	<L2+record_length_rtn_0
  2266 09:75AB: D4 14        	pei	<L2+segment_offset_0
  2267 09:75AD: D4 12        	pei	<L2+file_offset_0
  2268 09:75AF: D4 0E        	pei	<L2+data_0+2
  2269 09:75B1: D4 0C        	pei	<L2+data_0
  2270 09:75B3: 22 78 96 09  	jsl	~~DecodeRecordExperimental
  2271 09:75B7: 85 01        	sta	<R0
  2272 09:75B9: 86 03        	stx	<R0+2
  2273 09:75BB: A5 01        	lda	<R0
  2274 09:75BD: A0 0B 00     	ldy	#$b
  2275 09:75C0: 97 05        	sta	[<L3+current_record_1],Y
  2276 09:75C2: A5 03        	lda	<R0+2
  2277 09:75C4: A0 0D 00     	ldy	#$d
  Mon Sep 27 2021  9:39                                                Page 44


  2278 09:75C7: 97 05        	sta	[<L3+current_record_1],Y
  2279                        ;  else
  2280 09:75C9: 82 12 00     	brl	L10053
  2281                        L10052:
  2282                        ;    {
  2283                        	.line	157
  2284                        ;      /* Operation Code inconnu */
  2285                        ;      ////printf("Error : Unknow Record Operation
                     Code %02X for Segment #%02X at offset %d.\n",current_record
                    ->operation_code,segment_num,file_offset);
  2286                        ;      mem_free_record(current_record);
  2287                        	.line	160
  2288 09:75CC: D4 07        	pei	<L3+current_record_1+2
  2289 09:75CE: D4 05        	pei	<L3+current_record_1
  2290 09:75D0: 22 5A 7B 09  	jsl	~~mem_free_record
  2291                        ;      return(NULL);
  2292                        	.line	161
  2293 09:75D4: A9 00 00     	lda	#$0
  2294 09:75D7: AA           	tax
  2295 09:75D8: A9 00 00     	lda	#$0
  2296 09:75DB: 82 48 FA     	brl	L6
  2297                        ;    }
  2298                        	.line	162
  2299                        L10053:
  2300                        L10051:
  2301                        L10049:
  2302                        L10047:
  2303                        L10045:
  2304                        L10043:
  2305                        L10041:
  2306                        L10039:
  2307                        L10037:
  2308                        L10035:
  2309                        L10033:
  2310                        L10031:
  2311                        L10029:
  2312                        L10027:
  2313                        L10025:
  2314                        L10023:
  2315                        L10021:
  2316                        L10019:
  2317                        L10017:
  2318                        L10015:
  2319                        L10013:
  2320                        L10011:
  2321                        L10009:
  2322                        L10007:
  2323                        L10005:
  2324                        L10003:
  2325                        ;
  2326                        ;  /* Valide le Record */
  2327                        ;  if(current_record->record_data == NULL)
  2328                        	.line	165
  2329                        ;    {
  2330 09:75DE: A0 0B 00     	ldy	#$b
  2331 09:75E1: B7 05        	lda	[<L3+current_record_1],Y
  2332 09:75E3: A0 0D 00     	ldy	#$d
  2333 09:75E6: 17 05        	ora	[<L3+current_record_1],Y
  Mon Sep 27 2021  9:39                                                Page 45


  2334 09:75E8: F0 03        	beq	L35
  2335 09:75EA: 82 12 00     	brl	L10054
  2336                        L35:
  2337                        	.line	166
  2338                        ;      mem_free_record(current_record);
  2339                        	.line	167
  2340 09:75ED: D4 07        	pei	<L3+current_record_1+2
  2341 09:75EF: D4 05        	pei	<L3+current_record_1
  2342 09:75F1: 22 5A 7B 09  	jsl	~~mem_free_record
  2343                        ;      return(NULL);
  2344                        	.line	168
  2345 09:75F5: A9 00 00     	lda	#$0
  2346 09:75F8: AA           	tax
  2347 09:75F9: A9 00 00     	lda	#$0
  2348 09:75FC: 82 27 FA     	brl	L6
  2349                        ;    }
  2350                        	.line	169
  2351                        ;
  2352                        ;  /* Longueur du Record */
  2353                        ;  current_record->length = *record_length_rtn;
  2354                        L10054:
  2355                        	.line	172
  2356 09:75FF: A7 1C        	lda	[<L2+record_length_rtn_0]
  2357 09:7601: A0 09 00     	ldy	#$9
  2358 09:7604: 97 05        	sta	[<L3+current_record_1],Y
  2359                        ;
  2360                        ;  /* Renvoie le Record */
  2361                        ;  return(current_record);
  2362                        	.line	175
  2363 09:7606: A6 07        	ldx	<L3+current_record_1+2
  2364 09:7608: A5 05        	lda	<L3+current_record_1
  2365 09:760A: 82 19 FA     	brl	L6
  2366                        ;}
  2367                        	.line	176
  2368                        	.endblock	176
  2369             00000008   L2	equ	8
  2370             00000005   L3	equ	5
  2371 09:760D:              	ends
  2372                        	efunc
  2373                        	.endfunc	176,5,8
  2374                        	.line	176
  2375                        ;
  2376                        ;
  2377                        ;/************************************************
                    ***********************************/
  2378                        ;/*  GetRecordName() :  Revoie le nom d'un Record 
                    par rapport à son Operation Code. */
  2379                        ;/************************************************
                    ***********************************/
  2380                        ;char *GetRecordName(BYTE operation_code, BYTE Rec
                    ordType)
  2381                        ;{
  2382                        	.line	182
  2383                        	.line	183
  2384                        	LOADER
  2385                        	xdef	~~GetRecordName
  2386                        	func
  2387                        	.function	183
  Mon Sep 27 2021  9:39                                                Page 46


  2388                        ~~GetRecordName:
  2389                        	longa	on
  2390                        	longi	on
  2391 09:760D: 3B           	tsc
  2392 09:760E: 38           	sec
  2393 09:760F: E9 08 00     	sbc	#L36
  2394 09:7612: 1B           	tcs
  2395 09:7613: 0B           	phd
  2396 09:7614: 5B           	tcd
  2397             00000004   operation_code_0	set	4
  2398             00000006   RecordType_0	set	6
  2399                        	.block	183
  2400                        ;  static char record_name[256];
  2401                        	udata
  2402                        L10055:
  2403 00:0000:              	ds	256
  2404 00:0100:              	ends
  2405                        ;
  2406                        ;  /* Renvoi le nom du Record */
  2407                        ;  if(operation_code == 0x00)
  2408                        	.sym	record_name,10055,110,19,0,256
  2409                        	.sym	operation_code,4,14,6,8
  2410                        	.sym	RecordType,6,14,6,8
  2411                        	.line	187
  2412                        ;    strcpy(record_name,"END");
  2413 09:7615: A5 0C        	lda	<L36+operation_code_0
  2414 09:7617: 29 FF 00     	and	#$ff
  2415 09:761A: F0 03        	beq	L39
  2416 09:761C: 82 1B 00     	brl	L10056
  2417                        L39:
  2418                        	.line	188
  2419 09:761F: F4 xx xx     	pea	#^L1
  2420 09:7622: F4 xx xx     	pea	#<L1
  2421 09:7625: A9 xx xx     	lda	#<L10055
  2422 09:7628: 85 01        	sta	<R0
  2423                        	xref	_BEG_DATA
  2424 09:762A: A9 xx xx     	lda	#_BEG_DATA>>16
  2425 09:762D: 85 03        	sta	<R0+2
  2426 09:762F: D4 03        	pei	<R0+2
  2427 09:7631: D4 01        	pei	<R0
  2428 09:7633: 22 xx xx xx  	jsl	~~strcpy
  2429                        ;  else if(operation_code >= 0x01 && operation_cod
                    e <= 0xDF)
  2430 09:7637: 82 20 04     	brl	L10057
  2431                        L10056:
  2432                        	.line	189
  2433                        ;    strcpy(record_name,"CONST");
  2434 09:763A: E2 20        	sep	#$20
  2435                        	longa	off
  2436 09:763C: A5 0C        	lda	<L36+operation_code_0
  2437 09:763E: C9 01        	cmp	#<$1
  2438 09:7640: C2 20        	rep	#$20
  2439                        	longa	on
  2440 09:7642: B0 03        	bcs	L40
  2441 09:7644: 82 28 00     	brl	L10058
  2442                        L40:
  2443 09:7647: E2 20        	sep	#$20
  2444                        	longa	off
  Mon Sep 27 2021  9:39                                                Page 47


  2445 09:7649: A9 DF        	lda	#$df
  2446 09:764B: C5 0C        	cmp	<L36+operation_code_0
  2447 09:764D: C2 20        	rep	#$20
  2448                        	longa	on
  2449 09:764F: B0 03        	bcs	L41
  2450 09:7651: 82 1B 00     	brl	L10058
  2451                        L41:
  2452                        	.line	190
  2453 09:7654: F4 xx xx     	pea	#^L1+4
  2454 09:7657: F4 xx xx     	pea	#<L1+4
  2455 09:765A: A9 xx xx     	lda	#<L10055
  2456 09:765D: 85 01        	sta	<R0
  2457                        	xref	_BEG_DATA
  2458 09:765F: A9 xx xx     	lda	#_BEG_DATA>>16
  2459 09:7662: 85 03        	sta	<R0+2
  2460 09:7664: D4 03        	pei	<R0+2
  2461 09:7666: D4 01        	pei	<R0
  2462 09:7668: 22 xx xx xx  	jsl	~~strcpy
  2463                        ;  else if(operation_code == 0xE0)
  2464 09:766C: 82 EB 03     	brl	L10059
  2465                        L10058:
  2466                        	.line	191
  2467                        ;    strcpy(record_name,"ALIGN");
  2468 09:766F: E2 20        	sep	#$20
  2469                        	longa	off
  2470 09:7671: A5 0C        	lda	<L36+operation_code_0
  2471 09:7673: C9 E0        	cmp	#<$e0
  2472 09:7675: C2 20        	rep	#$20
  2473                        	longa	on
  2474 09:7677: F0 03        	beq	L42
  2475 09:7679: 82 1B 00     	brl	L10060
  2476                        L42:
  2477                        	.line	192
  2478 09:767C: F4 xx xx     	pea	#^L1+10
  2479 09:767F: F4 xx xx     	pea	#<L1+10
  2480 09:7682: A9 xx xx     	lda	#<L10055
  2481 09:7685: 85 01        	sta	<R0
  2482                        	xref	_BEG_DATA
  2483 09:7687: A9 xx xx     	lda	#_BEG_DATA>>16
  2484 09:768A: 85 03        	sta	<R0+2
  2485 09:768C: D4 03        	pei	<R0+2
  2486 09:768E: D4 01        	pei	<R0
  2487 09:7690: 22 xx xx xx  	jsl	~~strcpy
  2488                        ;  else if(operation_code == 0xE1)
  2489 09:7694: 82 C3 03     	brl	L10061
  2490                        L10060:
  2491                        	.line	193
  2492                        ;    strcpy(record_name,"ORG");
  2493 09:7697: E2 20        	sep	#$20
  2494                        	longa	off
  2495 09:7699: A5 0C        	lda	<L36+operation_code_0
  2496 09:769B: C9 E1        	cmp	#<$e1
  2497 09:769D: C2 20        	rep	#$20
  2498                        	longa	on
  2499 09:769F: F0 03        	beq	L43
  2500 09:76A1: 82 1B 00     	brl	L10062
  2501                        L43:
  2502                        	.line	194
  Mon Sep 27 2021  9:39                                                Page 48


  2503 09:76A4: F4 xx xx     	pea	#^L1+16
  2504 09:76A7: F4 xx xx     	pea	#<L1+16
  2505 09:76AA: A9 xx xx     	lda	#<L10055
  2506 09:76AD: 85 01        	sta	<R0
  2507                        	xref	_BEG_DATA
  2508 09:76AF: A9 xx xx     	lda	#_BEG_DATA>>16
  2509 09:76B2: 85 03        	sta	<R0+2
  2510 09:76B4: D4 03        	pei	<R0+2
  2511 09:76B6: D4 01        	pei	<R0
  2512 09:76B8: 22 xx xx xx  	jsl	~~strcpy
  2513                        ;  else if(operation_code == 0xE2)
  2514 09:76BC: 82 9B 03     	brl	L10063
  2515                        L10062:
  2516                        	.line	195
  2517                        ;    strcpy(record_name,"RELOC");
  2518 09:76BF: E2 20        	sep	#$20
  2519                        	longa	off
  2520 09:76C1: A5 0C        	lda	<L36+operation_code_0
  2521 09:76C3: C9 E2        	cmp	#<$e2
  2522 09:76C5: C2 20        	rep	#$20
  2523                        	longa	on
  2524 09:76C7: F0 03        	beq	L44
  2525 09:76C9: 82 1B 00     	brl	L10064
  2526                        L44:
  2527                        	.line	196
  2528 09:76CC: F4 xx xx     	pea	#^L1+20
  2529 09:76CF: F4 xx xx     	pea	#<L1+20
  2530 09:76D2: A9 xx xx     	lda	#<L10055
  2531 09:76D5: 85 01        	sta	<R0
  2532                        	xref	_BEG_DATA
  2533 09:76D7: A9 xx xx     	lda	#_BEG_DATA>>16
  2534 09:76DA: 85 03        	sta	<R0+2
  2535 09:76DC: D4 03        	pei	<R0+2
  2536 09:76DE: D4 01        	pei	<R0
  2537 09:76E0: 22 xx xx xx  	jsl	~~strcpy
  2538                        ;  else if(operation_code == 0xE3)
  2539 09:76E4: 82 73 03     	brl	L10065
  2540                        L10064:
  2541                        	.line	197
  2542                        ;    strcpy(record_name,"INTERSEG");
  2543 09:76E7: E2 20        	sep	#$20
  2544                        	longa	off
  2545 09:76E9: A5 0C        	lda	<L36+operation_code_0
  2546 09:76EB: C9 E3        	cmp	#<$e3
  2547 09:76ED: C2 20        	rep	#$20
  2548                        	longa	on
  2549 09:76EF: F0 03        	beq	L45
  2550 09:76F1: 82 1B 00     	brl	L10066
  2551                        L45:
  2552                        	.line	198
  2553 09:76F4: F4 xx xx     	pea	#^L1+26
  2554 09:76F7: F4 xx xx     	pea	#<L1+26
  2555 09:76FA: A9 xx xx     	lda	#<L10055
  2556 09:76FD: 85 01        	sta	<R0
  2557                        	xref	_BEG_DATA
  2558 09:76FF: A9 xx xx     	lda	#_BEG_DATA>>16
  2559 09:7702: 85 03        	sta	<R0+2
  2560 09:7704: D4 03        	pei	<R0+2
  Mon Sep 27 2021  9:39                                                Page 49


  2561 09:7706: D4 01        	pei	<R0
  2562 09:7708: 22 xx xx xx  	jsl	~~strcpy
  2563                        ;  else if(operation_code == 0xE4)
  2564 09:770C: 82 4B 03     	brl	L10067
  2565                        L10066:
  2566                        	.line	199
  2567                        ;    strcpy(record_name,"USING");
  2568 09:770F: E2 20        	sep	#$20
  2569                        	longa	off
  2570 09:7711: A5 0C        	lda	<L36+operation_code_0
  2571 09:7713: C9 E4        	cmp	#<$e4
  2572 09:7715: C2 20        	rep	#$20
  2573                        	longa	on
  2574 09:7717: F0 03        	beq	L46
  2575 09:7719: 82 1B 00     	brl	L10068
  2576                        L46:
  2577                        	.line	200
  2578 09:771C: F4 xx xx     	pea	#^L1+35
  2579 09:771F: F4 xx xx     	pea	#<L1+35
  2580 09:7722: A9 xx xx     	lda	#<L10055
  2581 09:7725: 85 01        	sta	<R0
  2582                        	xref	_BEG_DATA
  2583 09:7727: A9 xx xx     	lda	#_BEG_DATA>>16
  2584 09:772A: 85 03        	sta	<R0+2
  2585 09:772C: D4 03        	pei	<R0+2
  2586 09:772E: D4 01        	pei	<R0
  2587 09:7730: 22 xx xx xx  	jsl	~~strcpy
  2588                        ;  else if(operation_code == 0xE5)
  2589 09:7734: 82 23 03     	brl	L10069
  2590                        L10068:
  2591                        	.line	201
  2592                        ;    strcpy(record_name,"STRONG");
  2593 09:7737: E2 20        	sep	#$20
  2594                        	longa	off
  2595 09:7739: A5 0C        	lda	<L36+operation_code_0
  2596 09:773B: C9 E5        	cmp	#<$e5
  2597 09:773D: C2 20        	rep	#$20
  2598                        	longa	on
  2599 09:773F: F0 03        	beq	L47
  2600 09:7741: 82 1B 00     	brl	L10070
  2601                        L47:
  2602                        	.line	202
  2603 09:7744: F4 xx xx     	pea	#^L1+41
  2604 09:7747: F4 xx xx     	pea	#<L1+41
  2605 09:774A: A9 xx xx     	lda	#<L10055
  2606 09:774D: 85 01        	sta	<R0
  2607                        	xref	_BEG_DATA
  2608 09:774F: A9 xx xx     	lda	#_BEG_DATA>>16
  2609 09:7752: 85 03        	sta	<R0+2
  2610 09:7754: D4 03        	pei	<R0+2
  2611 09:7756: D4 01        	pei	<R0
  2612 09:7758: 22 xx xx xx  	jsl	~~strcpy
  2613                        ;  else if(operation_code == 0xE6)
  2614 09:775C: 82 FB 02     	brl	L10071
  2615                        L10070:
  2616                        	.line	203
  2617                        ;    strcpy(record_name,"GLOBAL");
  2618 09:775F: E2 20        	sep	#$20
  Mon Sep 27 2021  9:39                                                Page 50


  2619                        	longa	off
  2620 09:7761: A5 0C        	lda	<L36+operation_code_0
  2621 09:7763: C9 E6        	cmp	#<$e6
  2622 09:7765: C2 20        	rep	#$20
  2623                        	longa	on
  2624 09:7767: F0 03        	beq	L48
  2625 09:7769: 82 1B 00     	brl	L10072
  2626                        L48:
  2627                        	.line	204
  2628 09:776C: F4 xx xx     	pea	#^L1+48
  2629 09:776F: F4 xx xx     	pea	#<L1+48
  2630 09:7772: A9 xx xx     	lda	#<L10055
  2631 09:7775: 85 01        	sta	<R0
  2632                        	xref	_BEG_DATA
  2633 09:7777: A9 xx xx     	lda	#_BEG_DATA>>16
  2634 09:777A: 85 03        	sta	<R0+2
  2635 09:777C: D4 03        	pei	<R0+2
  2636 09:777E: D4 01        	pei	<R0
  2637 09:7780: 22 xx xx xx  	jsl	~~strcpy
  2638                        ;  else if(operation_code == 0xE7)
  2639 09:7784: 82 D3 02     	brl	L10073
  2640                        L10072:
  2641                        	.line	205
  2642                        ;    strcpy(record_name,"GEQU");
  2643 09:7787: E2 20        	sep	#$20
  2644                        	longa	off
  2645 09:7789: A5 0C        	lda	<L36+operation_code_0
  2646 09:778B: C9 E7        	cmp	#<$e7
  2647 09:778D: C2 20        	rep	#$20
  2648                        	longa	on
  2649 09:778F: F0 03        	beq	L49
  2650 09:7791: 82 1B 00     	brl	L10074
  2651                        L49:
  2652                        	.line	206
  2653 09:7794: F4 xx xx     	pea	#^L1+55
  2654 09:7797: F4 xx xx     	pea	#<L1+55
  2655 09:779A: A9 xx xx     	lda	#<L10055
  2656 09:779D: 85 01        	sta	<R0
  2657                        	xref	_BEG_DATA
  2658 09:779F: A9 xx xx     	lda	#_BEG_DATA>>16
  2659 09:77A2: 85 03        	sta	<R0+2
  2660 09:77A4: D4 03        	pei	<R0+2
  2661 09:77A6: D4 01        	pei	<R0
  2662 09:77A8: 22 xx xx xx  	jsl	~~strcpy
  2663                        ;  else if(operation_code == 0xE8)
  2664 09:77AC: 82 AB 02     	brl	L10075
  2665                        L10074:
  2666                        	.line	207
  2667                        ;    strcpy(record_name,"MEM");
  2668 09:77AF: E2 20        	sep	#$20
  2669                        	longa	off
  2670 09:77B1: A5 0C        	lda	<L36+operation_code_0
  2671 09:77B3: C9 E8        	cmp	#<$e8
  2672 09:77B5: C2 20        	rep	#$20
  2673                        	longa	on
  2674 09:77B7: F0 03        	beq	L50
  2675 09:77B9: 82 1B 00     	brl	L10076
  2676                        L50:
  Mon Sep 27 2021  9:39                                                Page 51


  2677                        	.line	208
  2678 09:77BC: F4 xx xx     	pea	#^L1+60
  2679 09:77BF: F4 xx xx     	pea	#<L1+60
  2680 09:77C2: A9 xx xx     	lda	#<L10055
  2681 09:77C5: 85 01        	sta	<R0
  2682                        	xref	_BEG_DATA
  2683 09:77C7: A9 xx xx     	lda	#_BEG_DATA>>16
  2684 09:77CA: 85 03        	sta	<R0+2
  2685 09:77CC: D4 03        	pei	<R0+2
  2686 09:77CE: D4 01        	pei	<R0
  2687 09:77D0: 22 xx xx xx  	jsl	~~strcpy
  2688                        ;  else if(operation_code == 0xEB)
  2689 09:77D4: 82 83 02     	brl	L10077
  2690                        L10076:
  2691                        	.line	209
  2692                        ;    strcpy(record_name,"EXPR");
  2693 09:77D7: E2 20        	sep	#$20
  2694                        	longa	off
  2695 09:77D9: A5 0C        	lda	<L36+operation_code_0
  2696 09:77DB: C9 EB        	cmp	#<$eb
  2697 09:77DD: C2 20        	rep	#$20
  2698                        	longa	on
  2699 09:77DF: F0 03        	beq	L51
  2700 09:77E1: 82 1B 00     	brl	L10078
  2701                        L51:
  2702                        	.line	210
  2703 09:77E4: F4 xx xx     	pea	#^L1+64
  2704 09:77E7: F4 xx xx     	pea	#<L1+64
  2705 09:77EA: A9 xx xx     	lda	#<L10055
  2706 09:77ED: 85 01        	sta	<R0
  2707                        	xref	_BEG_DATA
  2708 09:77EF: A9 xx xx     	lda	#_BEG_DATA>>16
  2709 09:77F2: 85 03        	sta	<R0+2
  2710 09:77F4: D4 03        	pei	<R0+2
  2711 09:77F6: D4 01        	pei	<R0
  2712 09:77F8: 22 xx xx xx  	jsl	~~strcpy
  2713                        ;  else if(operation_code == 0xEC)
  2714 09:77FC: 82 5B 02     	brl	L10079
  2715                        L10078:
  2716                        	.line	211
  2717                        ;    strcpy(record_name,"ZEXPR");
  2718 09:77FF: E2 20        	sep	#$20
  2719                        	longa	off
  2720 09:7801: A5 0C        	lda	<L36+operation_code_0
  2721 09:7803: C9 EC        	cmp	#<$ec
  2722 09:7805: C2 20        	rep	#$20
  2723                        	longa	on
  2724 09:7807: F0 03        	beq	L52
  2725 09:7809: 82 1B 00     	brl	L10080
  2726                        L52:
  2727                        	.line	212
  2728 09:780C: F4 xx xx     	pea	#^L1+69
  2729 09:780F: F4 xx xx     	pea	#<L1+69
  2730 09:7812: A9 xx xx     	lda	#<L10055
  2731 09:7815: 85 01        	sta	<R0
  2732                        	xref	_BEG_DATA
  2733 09:7817: A9 xx xx     	lda	#_BEG_DATA>>16
  2734 09:781A: 85 03        	sta	<R0+2
  Mon Sep 27 2021  9:39                                                Page 52


  2735 09:781C: D4 03        	pei	<R0+2
  2736 09:781E: D4 01        	pei	<R0
  2737 09:7820: 22 xx xx xx  	jsl	~~strcpy
  2738                        ;  else if(operation_code == 0xED)
  2739 09:7824: 82 33 02     	brl	L10081
  2740                        L10080:
  2741                        	.line	213
  2742                        ;    strcpy(record_name,"BEXPR");
  2743 09:7827: E2 20        	sep	#$20
  2744                        	longa	off
  2745 09:7829: A5 0C        	lda	<L36+operation_code_0
  2746 09:782B: C9 ED        	cmp	#<$ed
  2747 09:782D: C2 20        	rep	#$20
  2748                        	longa	on
  2749 09:782F: F0 03        	beq	L53
  2750 09:7831: 82 1B 00     	brl	L10082
  2751                        L53:
  2752                        	.line	214
  2753 09:7834: F4 xx xx     	pea	#^L1+75
  2754 09:7837: F4 xx xx     	pea	#<L1+75
  2755 09:783A: A9 xx xx     	lda	#<L10055
  2756 09:783D: 85 01        	sta	<R0
  2757                        	xref	_BEG_DATA
  2758 09:783F: A9 xx xx     	lda	#_BEG_DATA>>16
  2759 09:7842: 85 03        	sta	<R0+2
  2760 09:7844: D4 03        	pei	<R0+2
  2761 09:7846: D4 01        	pei	<R0
  2762 09:7848: 22 xx xx xx  	jsl	~~strcpy
  2763                        ;  else if(operation_code == 0xEE)
  2764 09:784C: 82 0B 02     	brl	L10083
  2765                        L10082:
  2766                        	.line	215
  2767                        ;    strcpy(record_name,"RELEXPR");
  2768 09:784F: E2 20        	sep	#$20
  2769                        	longa	off
  2770 09:7851: A5 0C        	lda	<L36+operation_code_0
  2771 09:7853: C9 EE        	cmp	#<$ee
  2772 09:7855: C2 20        	rep	#$20
  2773                        	longa	on
  2774 09:7857: F0 03        	beq	L54
  2775 09:7859: 82 1B 00     	brl	L10084
  2776                        L54:
  2777                        	.line	216
  2778 09:785C: F4 xx xx     	pea	#^L1+81
  2779 09:785F: F4 xx xx     	pea	#<L1+81
  2780 09:7862: A9 xx xx     	lda	#<L10055
  2781 09:7865: 85 01        	sta	<R0
  2782                        	xref	_BEG_DATA
  2783 09:7867: A9 xx xx     	lda	#_BEG_DATA>>16
  2784 09:786A: 85 03        	sta	<R0+2
  2785 09:786C: D4 03        	pei	<R0+2
  2786 09:786E: D4 01        	pei	<R0
  2787 09:7870: 22 xx xx xx  	jsl	~~strcpy
  2788                        ;  else if(operation_code == 0xEF)
  2789 09:7874: 82 E3 01     	brl	L10085
  2790                        L10084:
  2791                        	.line	217
  2792                        ;    strcpy(record_name,"LOCAL");
  Mon Sep 27 2021  9:39                                                Page 53


  2793 09:7877: E2 20        	sep	#$20
  2794                        	longa	off
  2795 09:7879: A5 0C        	lda	<L36+operation_code_0
  2796 09:787B: C9 EF        	cmp	#<$ef
  2797 09:787D: C2 20        	rep	#$20
  2798                        	longa	on
  2799 09:787F: F0 03        	beq	L55
  2800 09:7881: 82 1B 00     	brl	L10086
  2801                        L55:
  2802                        	.line	218
  2803 09:7884: F4 xx xx     	pea	#^L1+89
  2804 09:7887: F4 xx xx     	pea	#<L1+89
  2805 09:788A: A9 xx xx     	lda	#<L10055
  2806 09:788D: 85 01        	sta	<R0
  2807                        	xref	_BEG_DATA
  2808 09:788F: A9 xx xx     	lda	#_BEG_DATA>>16
  2809 09:7892: 85 03        	sta	<R0+2
  2810 09:7894: D4 03        	pei	<R0+2
  2811 09:7896: D4 01        	pei	<R0
  2812 09:7898: 22 xx xx xx  	jsl	~~strcpy
  2813                        ;  else if(operation_code == 0xF0)
  2814 09:789C: 82 BB 01     	brl	L10087
  2815                        L10086:
  2816                        	.line	219
  2817                        ;    strcpy(record_name,"EQU");
  2818 09:789F: E2 20        	sep	#$20
  2819                        	longa	off
  2820 09:78A1: A5 0C        	lda	<L36+operation_code_0
  2821 09:78A3: C9 F0        	cmp	#<$f0
  2822 09:78A5: C2 20        	rep	#$20
  2823                        	longa	on
  2824 09:78A7: F0 03        	beq	L56
  2825 09:78A9: 82 1B 00     	brl	L10088
  2826                        L56:
  2827                        	.line	220
  2828 09:78AC: F4 xx xx     	pea	#^L1+95
  2829 09:78AF: F4 xx xx     	pea	#<L1+95
  2830 09:78B2: A9 xx xx     	lda	#<L10055
  2831 09:78B5: 85 01        	sta	<R0
  2832                        	xref	_BEG_DATA
  2833 09:78B7: A9 xx xx     	lda	#_BEG_DATA>>16
  2834 09:78BA: 85 03        	sta	<R0+2
  2835 09:78BC: D4 03        	pei	<R0+2
  2836 09:78BE: D4 01        	pei	<R0
  2837 09:78C0: 22 xx xx xx  	jsl	~~strcpy
  2838                        ;  else if(operation_code == 0xF1)
  2839 09:78C4: 82 93 01     	brl	L10089
  2840                        L10088:
  2841                        	.line	221
  2842                        ;    strcpy(record_name,"DS");
  2843 09:78C7: E2 20        	sep	#$20
  2844                        	longa	off
  2845 09:78C9: A5 0C        	lda	<L36+operation_code_0
  2846 09:78CB: C9 F1        	cmp	#<$f1
  2847 09:78CD: C2 20        	rep	#$20
  2848                        	longa	on
  2849 09:78CF: F0 03        	beq	L57
  2850 09:78D1: 82 1B 00     	brl	L10090
  Mon Sep 27 2021  9:39                                                Page 54


  2851                        L57:
  2852                        	.line	222
  2853 09:78D4: F4 xx xx     	pea	#^L1+99
  2854 09:78D7: F4 xx xx     	pea	#<L1+99
  2855 09:78DA: A9 xx xx     	lda	#<L10055
  2856 09:78DD: 85 01        	sta	<R0
  2857                        	xref	_BEG_DATA
  2858 09:78DF: A9 xx xx     	lda	#_BEG_DATA>>16
  2859 09:78E2: 85 03        	sta	<R0+2
  2860 09:78E4: D4 03        	pei	<R0+2
  2861 09:78E6: D4 01        	pei	<R0
  2862 09:78E8: 22 xx xx xx  	jsl	~~strcpy
  2863                        ;  else if(operation_code == 0xF2)
  2864 09:78EC: 82 6B 01     	brl	L10091
  2865                        L10090:
  2866                        	.line	223
  2867                        ;    strcpy(record_name,"LCONST");
  2868 09:78EF: E2 20        	sep	#$20
  2869                        	longa	off
  2870 09:78F1: A5 0C        	lda	<L36+operation_code_0
  2871 09:78F3: C9 F2        	cmp	#<$f2
  2872 09:78F5: C2 20        	rep	#$20
  2873                        	longa	on
  2874 09:78F7: F0 03        	beq	L58
  2875 09:78F9: 82 1B 00     	brl	L10092
  2876                        L58:
  2877                        	.line	224
  2878 09:78FC: F4 xx xx     	pea	#^L1+102
  2879 09:78FF: F4 xx xx     	pea	#<L1+102
  2880 09:7902: A9 xx xx     	lda	#<L10055
  2881 09:7905: 85 01        	sta	<R0
  2882                        	xref	_BEG_DATA
  2883 09:7907: A9 xx xx     	lda	#_BEG_DATA>>16
  2884 09:790A: 85 03        	sta	<R0+2
  2885 09:790C: D4 03        	pei	<R0+2
  2886 09:790E: D4 01        	pei	<R0
  2887 09:7910: 22 xx xx xx  	jsl	~~strcpy
  2888                        ;  else if(operation_code == 0xF3)
  2889 09:7914: 82 43 01     	brl	L10093
  2890                        L10092:
  2891                        	.line	225
  2892                        ;    strcpy(record_name,"LEXPR");
  2893 09:7917: E2 20        	sep	#$20
  2894                        	longa	off
  2895 09:7919: A5 0C        	lda	<L36+operation_code_0
  2896 09:791B: C9 F3        	cmp	#<$f3
  2897 09:791D: C2 20        	rep	#$20
  2898                        	longa	on
  2899 09:791F: F0 03        	beq	L59
  2900 09:7921: 82 1B 00     	brl	L10094
  2901                        L59:
  2902                        	.line	226
  2903 09:7924: F4 xx xx     	pea	#^L1+109
  2904 09:7927: F4 xx xx     	pea	#<L1+109
  2905 09:792A: A9 xx xx     	lda	#<L10055
  2906 09:792D: 85 01        	sta	<R0
  2907                        	xref	_BEG_DATA
  2908 09:792F: A9 xx xx     	lda	#_BEG_DATA>>16
  Mon Sep 27 2021  9:39                                                Page 55


  2909 09:7932: 85 03        	sta	<R0+2
  2910 09:7934: D4 03        	pei	<R0+2
  2911 09:7936: D4 01        	pei	<R0
  2912 09:7938: 22 xx xx xx  	jsl	~~strcpy
  2913                        ;  else if(operation_code == 0xF4)
  2914 09:793C: 82 1B 01     	brl	L10095
  2915                        L10094:
  2916                        	.line	227
  2917                        ;    strcpy(record_name,"ENTRY");
  2918 09:793F: E2 20        	sep	#$20
  2919                        	longa	off
  2920 09:7941: A5 0C        	lda	<L36+operation_code_0
  2921 09:7943: C9 F4        	cmp	#<$f4
  2922 09:7945: C2 20        	rep	#$20
  2923                        	longa	on
  2924 09:7947: F0 03        	beq	L60
  2925 09:7949: 82 1B 00     	brl	L10096
  2926                        L60:
  2927                        	.line	228
  2928 09:794C: F4 xx xx     	pea	#^L1+115
  2929 09:794F: F4 xx xx     	pea	#<L1+115
  2930 09:7952: A9 xx xx     	lda	#<L10055
  2931 09:7955: 85 01        	sta	<R0
  2932                        	xref	_BEG_DATA
  2933 09:7957: A9 xx xx     	lda	#_BEG_DATA>>16
  2934 09:795A: 85 03        	sta	<R0+2
  2935 09:795C: D4 03        	pei	<R0+2
  2936 09:795E: D4 01        	pei	<R0
  2937 09:7960: 22 xx xx xx  	jsl	~~strcpy
  2938                        ;  else if(operation_code == 0xF5)
  2939 09:7964: 82 F3 00     	brl	L10097
  2940                        L10096:
  2941                        	.line	229
  2942                        ;    strcpy(record_name,"cRELOC");
  2943 09:7967: E2 20        	sep	#$20
  2944                        	longa	off
  2945 09:7969: A5 0C        	lda	<L36+operation_code_0
  2946 09:796B: C9 F5        	cmp	#<$f5
  2947 09:796D: C2 20        	rep	#$20
  2948                        	longa	on
  2949 09:796F: F0 03        	beq	L61
  2950 09:7971: 82 1B 00     	brl	L10098
  2951                        L61:
  2952                        	.line	230
  2953 09:7974: F4 xx xx     	pea	#^L1+121
  2954 09:7977: F4 xx xx     	pea	#<L1+121
  2955 09:797A: A9 xx xx     	lda	#<L10055
  2956 09:797D: 85 01        	sta	<R0
  2957                        	xref	_BEG_DATA
  2958 09:797F: A9 xx xx     	lda	#_BEG_DATA>>16
  2959 09:7982: 85 03        	sta	<R0+2
  2960 09:7984: D4 03        	pei	<R0+2
  2961 09:7986: D4 01        	pei	<R0
  2962 09:7988: 22 xx xx xx  	jsl	~~strcpy
  2963                        ;  else if(operation_code == 0xF6)
  2964 09:798C: 82 CB 00     	brl	L10099
  2965                        L10098:
  2966                        	.line	231
  Mon Sep 27 2021  9:39                                                Page 56


  2967                        ;    strcpy(record_name,"cINTERSEG");
  2968 09:798F: E2 20        	sep	#$20
  2969                        	longa	off
  2970 09:7991: A5 0C        	lda	<L36+operation_code_0
  2971 09:7993: C9 F6        	cmp	#<$f6
  2972 09:7995: C2 20        	rep	#$20
  2973                        	longa	on
  2974 09:7997: F0 03        	beq	L62
  2975 09:7999: 82 1B 00     	brl	L10100
  2976                        L62:
  2977                        	.line	232
  2978 09:799C: F4 xx xx     	pea	#^L1+128
  2979 09:799F: F4 xx xx     	pea	#<L1+128
  2980 09:79A2: A9 xx xx     	lda	#<L10055
  2981 09:79A5: 85 01        	sta	<R0
  2982                        	xref	_BEG_DATA
  2983 09:79A7: A9 xx xx     	lda	#_BEG_DATA>>16
  2984 09:79AA: 85 03        	sta	<R0+2
  2985 09:79AC: D4 03        	pei	<R0+2
  2986 09:79AE: D4 01        	pei	<R0
  2987 09:79B0: 22 xx xx xx  	jsl	~~strcpy
  2988                        ;  else if(operation_code == 0xF7)
  2989 09:79B4: 82 A3 00     	brl	L10101
  2990                        L10100:
  2991                        	.line	233
  2992                        ;    strcpy(record_name,GetSUPERType(RecordType));
  2993 09:79B7: E2 20        	sep	#$20
  2994                        	longa	off
  2995 09:79B9: A5 0C        	lda	<L36+operation_code_0
  2996 09:79BB: C9 F7        	cmp	#<$f7
  2997 09:79BD: C2 20        	rep	#$20
  2998                        	longa	on
  2999 09:79BF: F0 03        	beq	L63
  3000 09:79C1: 82 21 00     	brl	L10102
  3001                        L63:
  3002                        	.line	234
  3003 09:79C4: D4 0E        	pei	<L36+RecordType_0
  3004 09:79C6: 22 7A 7A 09  	jsl	~~GetSUPERType
  3005 09:79CA: 85 01        	sta	<R0
  3006 09:79CC: 86 03        	stx	<R0+2
  3007 09:79CE: DA           	phx
  3008 09:79CF: 48           	pha
  3009 09:79D0: A9 xx xx     	lda	#<L10055
  3010 09:79D3: 85 05        	sta	<R1
  3011                        	xref	_BEG_DATA
  3012 09:79D5: A9 xx xx     	lda	#_BEG_DATA>>16
  3013 09:79D8: 85 07        	sta	<R1+2
  3014 09:79DA: D4 07        	pei	<R1+2
  3015 09:79DC: D4 05        	pei	<R1
  3016 09:79DE: 22 xx xx xx  	jsl	~~strcpy
  3017                        ;  else if(operation_code == 0xFB)
  3018 09:79E2: 82 75 00     	brl	L10103
  3019                        L10102:
  3020                        	.line	235
  3021                        ;    strcpy(record_name,"General");
  3022 09:79E5: E2 20        	sep	#$20
  3023                        	longa	off
  3024 09:79E7: A5 0C        	lda	<L36+operation_code_0
  Mon Sep 27 2021  9:39                                                Page 57


  3025 09:79E9: C9 FB        	cmp	#<$fb
  3026 09:79EB: C2 20        	rep	#$20
  3027                        	longa	on
  3028 09:79ED: F0 03        	beq	L64
  3029 09:79EF: 82 1B 00     	brl	L10104
  3030                        L64:
  3031                        	.line	236
  3032 09:79F2: F4 xx xx     	pea	#^L1+138
  3033 09:79F5: F4 xx xx     	pea	#<L1+138
  3034 09:79F8: A9 xx xx     	lda	#<L10055
  3035 09:79FB: 85 01        	sta	<R0
  3036                        	xref	_BEG_DATA
  3037 09:79FD: A9 xx xx     	lda	#_BEG_DATA>>16
  3038 09:7A00: 85 03        	sta	<R0+2
  3039 09:7A02: D4 03        	pei	<R0+2
  3040 09:7A04: D4 01        	pei	<R0
  3041 09:7A06: 22 xx xx xx  	jsl	~~strcpy
  3042                        ;  else if(operation_code >= 0xFC && operation_cod
                    e <= 0xFF)
  3043 09:7A0A: 82 4D 00     	brl	L10105
  3044                        L10104:
  3045                        	.line	237
  3046                        ;    strcpy(record_name,"Experimental");
  3047 09:7A0D: E2 20        	sep	#$20
  3048                        	longa	off
  3049 09:7A0F: A5 0C        	lda	<L36+operation_code_0
  3050 09:7A11: C9 FC        	cmp	#<$fc
  3051 09:7A13: C2 20        	rep	#$20
  3052                        	longa	on
  3053 09:7A15: B0 03        	bcs	L65
  3054 09:7A17: 82 28 00     	brl	L10106
  3055                        L65:
  3056 09:7A1A: E2 20        	sep	#$20
  3057                        	longa	off
  3058 09:7A1C: A9 FF        	lda	#$ff
  3059 09:7A1E: C5 0C        	cmp	<L36+operation_code_0
  3060 09:7A20: C2 20        	rep	#$20
  3061                        	longa	on
  3062 09:7A22: B0 03        	bcs	L66
  3063 09:7A24: 82 1B 00     	brl	L10106
  3064                        L66:
  3065                        	.line	238
  3066 09:7A27: F4 xx xx     	pea	#^L1+146
  3067 09:7A2A: F4 xx xx     	pea	#<L1+146
  3068 09:7A2D: A9 xx xx     	lda	#<L10055
  3069 09:7A30: 85 01        	sta	<R0
  3070                        	xref	_BEG_DATA
  3071 09:7A32: A9 xx xx     	lda	#_BEG_DATA>>16
  3072 09:7A35: 85 03        	sta	<R0+2
  3073 09:7A37: D4 03        	pei	<R0+2
  3074 09:7A39: D4 01        	pei	<R0
  3075 09:7A3B: 22 xx xx xx  	jsl	~~strcpy
  3076                        ;  else
  3077 09:7A3F: 82 18 00     	brl	L10107
  3078                        L10106:
  3079                        ;    strcpy(record_name,"Unknown");
  3080                        	.line	240
  3081 09:7A42: F4 xx xx     	pea	#^L1+159
  Mon Sep 27 2021  9:39                                                Page 58


  3082 09:7A45: F4 xx xx     	pea	#<L1+159
  3083 09:7A48: A9 xx xx     	lda	#<L10055
  3084 09:7A4B: 85 01        	sta	<R0
  3085                        	xref	_BEG_DATA
  3086 09:7A4D: A9 xx xx     	lda	#_BEG_DATA>>16
  3087 09:7A50: 85 03        	sta	<R0+2
  3088 09:7A52: D4 03        	pei	<R0+2
  3089 09:7A54: D4 01        	pei	<R0
  3090 09:7A56: 22 xx xx xx  	jsl	~~strcpy
  3091                        L10107:
  3092                        L10105:
  3093                        L10103:
  3094                        L10101:
  3095                        L10099:
  3096                        L10097:
  3097                        L10095:
  3098                        L10093:
  3099                        L10091:
  3100                        L10089:
  3101                        L10087:
  3102                        L10085:
  3103                        L10083:
  3104                        L10081:
  3105                        L10079:
  3106                        L10077:
  3107                        L10075:
  3108                        L10073:
  3109                        L10071:
  3110                        L10069:
  3111                        L10067:
  3112                        L10065:
  3113                        L10063:
  3114                        L10061:
  3115                        L10059:
  3116                        L10057:
  3117                        ;
  3118                        ;  /* Renvoie le nom */
  3119                        ;  return(&record_name[0]);
  3120                        	.line	243
  3121 09:7A5A: A9 xx xx     	lda	#<L10055
  3122 09:7A5D: 85 01        	sta	<R0
  3123                        	xref	_BEG_DATA
  3124 09:7A5F: A9 xx xx     	lda	#_BEG_DATA>>16
  3125 09:7A62: 85 03        	sta	<R0+2
  3126 09:7A64: A6 03        	ldx	<R0+2
  3127 09:7A66: A5 01        	lda	<R0
  3128                        L67:
  3129 09:7A68: A8           	tay
  3130 09:7A69: A5 0A        	lda	<L36+2
  3131 09:7A6B: 85 0E        	sta	<L36+2+4
  3132 09:7A6D: A5 09        	lda	<L36+1
  3133 09:7A6F: 85 0D        	sta	<L36+1+4
  3134 09:7A71: 2B           	pld
  3135 09:7A72: 3B           	tsc
  3136 09:7A73: 18           	clc
  3137 09:7A74: 69 0C 00     	adc	#L36+4
  3138 09:7A77: 1B           	tcs
  3139 09:7A78: 98           	tya
  Mon Sep 27 2021  9:39                                                Page 59


  3140 09:7A79: 6B           	rtl
  3141                        ;}
  3142                        	.line	244
  3143                        	.endblock	244
  3144             00000008   L36	equ	8
  3145             00000009   L37	equ	9
  3146 09:7A7A:              	ends
  3147                        	efunc
  3148                        	.endfunc	244,9,8
  3149                        	.line	244
  3150                        	data
  3151                        L1:
  3152 00:0000: 45 4E 44 00  	db	$45,$4E,$44,$00,$43,$4F,$4E,$53,$54,$00,
                    $41,$4C,$49,$47,$4E
       00:0004: 43 4F 4E 53 
       00:0008: 54 00 41 4C 
       00:000C: 49 47 4E 
  3153 00:000F: 00 4F 52 47  	db	$00,$4F,$52,$47,$00,$52,$45,$4C,$4F,$43,
                    $00,$49,$4E,$54,$45
       00:0013: 00 52 45 4C 
       00:0017: 4F 43 00 49 
       00:001B: 4E 54 45 
  3154 00:001E: 52 53 45 47  	db	$52,$53,$45,$47,$00,$55,$53,$49,$4E,$47,
                    $00,$53,$54,$52,$4F
       00:0022: 00 55 53 49 
       00:0026: 4E 47 00 53 
       00:002A: 54 52 4F 
  3155 00:002D: 4E 47 00 47  	db	$4E,$47,$00,$47,$4C,$4F,$42,$41,$4C,$00,
                    $47,$45,$51,$55,$00
       00:0031: 4C 4F 42 41 
       00:0035: 4C 00 47 45 
       00:0039: 51 55 00 
  3156 00:003C: 4D 45 4D 00  	db	$4D,$45,$4D,$00,$45,$58,$50,$52,$00,$5A,
                    $45,$58,$50,$52,$00
       00:0040: 45 58 50 52 
       00:0044: 00 5A 45 58 
       00:0048: 50 52 00 
  3157 00:004B: 42 45 58 50  	db	$42,$45,$58,$50,$52,$00,$52,$45,$4C,$45,
                    $58,$50,$52,$00,$4C
       00:004F: 52 00 52 45 
       00:0053: 4C 45 58 50 
       00:0057: 52 00 4C 
  3158 00:005A: 4F 43 41 4C  	db	$4F,$43,$41,$4C,$00,$45,$51,$55,$00,$44,
                    $53,$00,$4C,$43,$4F
       00:005E: 00 45 51 55 
       00:0062: 00 44 53 00 
       00:0066: 4C 43 4F 
  3159 00:0069: 4E 53 54 00  	db	$4E,$53,$54,$00,$4C,$45,$58,$50,$52,$00,
                    $45,$4E,$54,$52,$59
       00:006D: 4C 45 58 50 
       00:0071: 52 00 45 4E 
       00:0075: 54 52 59 
  3160 00:0078: 00 63 52 45  	db	$00,$63,$52,$45,$4C,$4F,$43,$00,$63,$49,
                    $4E,$54,$45,$52,$53
       00:007C: 4C 4F 43 00 
       00:0080: 63 49 4E 54 
       00:0084: 45 52 53 
  3161 00:0087: 45 47 00 47  	db	$45,$47,$00,$47,$65,$6E,$65,$72,$61,$6C,
  Mon Sep 27 2021  9:39                                                Page 60


                    $00,$45,$78,$70,$65
       00:008B: 65 6E 65 72 
       00:008F: 61 6C 00 45 
       00:0093: 78 70 65 
  3162 00:0096: 72 69 6D 65  	db	$72,$69,$6D,$65,$6E,$74,$61,$6C,$00,$55,
                    $6E,$6B,$6E,$6F,$77
       00:009A: 6E 74 61 6C 
       00:009E: 00 55 6E 6B 
       00:00A2: 6E 6F 77 
  3163 00:00A5: 6E 00        	db	$6E,$00
  3164 00:00A7:              	ends
  3165                        ;
  3166                        ;
  3167                        ;/************************************************
                    ******/
  3168                        ;/*  GetSUPERType() :  Décode le Type du Record SU
                    PER. */
  3169                        ;/************************************************
                    ******/
  3170                        ;char *GetSUPERType(BYTE Type)
  3171                        ;{
  3172                        	.line	250
  3173                        	.line	251
  3174                        	LOADER
  3175                        	xdef	~~GetSUPERType
  3176                        	func
  3177                        	.function	251
  3178                        ~~GetSUPERType:
  3179                        	longa	on
  3180                        	longi	on
  3181 09:7A7A: 3B           	tsc
  3182 09:7A7B: 38           	sec
  3183 09:7A7C: E9 04 00     	sbc	#L69
  3184 09:7A7F: 1B           	tcs
  3185 09:7A80: 0B           	phd
  3186 09:7A81: 5B           	tcd
  3187             00000004   Type_0	set	4
  3188                        	.block	251
  3189                        ;  static char type_txt[256];
  3190                        	udata
  3191                        L10108:
  3192 00:0100:              	ds	256
  3193 00:0200:              	ends
  3194                        ;
  3195                        ;  /* On ne veut pas du Type */
  3196                        ;  if(Type == 0xFF)
  3197                        	.sym	type_txt,10108,110,19,0,256
  3198                        	.sym	Type,4,14,6,8
  3199                        	.line	255
  3200                        ;    {
  3201 09:7A82: E2 20        	sep	#$20
  3202                        	longa	off
  3203 09:7A84: A5 08        	lda	<L69+Type_0
  3204 09:7A86: C9 FF        	cmp	#<$ff
  3205 09:7A88: C2 20        	rep	#$20
  3206                        	longa	on
  3207 09:7A8A: F0 03        	beq	L72
  3208 09:7A8C: 82 38 00     	brl	L10109
  Mon Sep 27 2021  9:39                                                Page 61


  3209                        L72:
  3210                        	.line	256
  3211                        ;      strcpy(type_txt,"SUPER");
  3212                        	.line	257
  3213 09:7A8F: F4 xx xx     	pea	#^L68
  3214 09:7A92: F4 xx xx     	pea	#<L68
  3215 09:7A95: A9 xx xx     	lda	#<L10108
  3216 09:7A98: 85 01        	sta	<R0
  3217                        	xref	_BEG_DATA
  3218 09:7A9A: A9 xx xx     	lda	#_BEG_DATA>>16
  3219 09:7A9D: 85 03        	sta	<R0+2
  3220 09:7A9F: D4 03        	pei	<R0+2
  3221 09:7AA1: D4 01        	pei	<R0
  3222 09:7AA3: 22 xx xx xx  	jsl	~~strcpy
  3223                        ;      return(&type_txt[0]);
  3224                        	.line	258
  3225 09:7AA7: A9 xx xx     	lda	#<L10108
  3226 09:7AAA: 85 01        	sta	<R0
  3227                        	xref	_BEG_DATA
  3228 09:7AAC: A9 xx xx     	lda	#_BEG_DATA>>16
  3229 09:7AAF: 85 03        	sta	<R0+2
  3230 09:7AB1: A6 03        	ldx	<R0+2
  3231 09:7AB3: A5 01        	lda	<R0
  3232                        L73:
  3233 09:7AB5: A8           	tay
  3234 09:7AB6: A5 06        	lda	<L69+2
  3235 09:7AB8: 85 08        	sta	<L69+2+2
  3236 09:7ABA: A5 05        	lda	<L69+1
  3237 09:7ABC: 85 07        	sta	<L69+1+2
  3238 09:7ABE: 2B           	pld
  3239 09:7ABF: 3B           	tsc
  3240 09:7AC0: 18           	clc
  3241 09:7AC1: 69 06 00     	adc	#L69+2
  3242 09:7AC4: 1B           	tcs
  3243 09:7AC5: 98           	tya
  3244 09:7AC6: 6B           	rtl
  3245                        ;    }
  3246                        	.line	259
  3247                        ;
  3248                        ;  /** Décode le type du SUPER **/
  3249                        ;  if(Type == 0x00)
  3250                        L10109:
  3251                        	.line	262
  3252                        ;    strcpy(type_txt,"SUPER RELOC2");
  3253 09:7AC7: A5 08        	lda	<L69+Type_0
  3254 09:7AC9: 29 FF 00     	and	#$ff
  3255 09:7ACC: F0 03        	beq	L74
  3256 09:7ACE: 82 1B 00     	brl	L10110
  3257                        L74:
  3258                        	.line	263
  3259 09:7AD1: F4 xx xx     	pea	#^L68+6
  3260 09:7AD4: F4 xx xx     	pea	#<L68+6
  3261 09:7AD7: A9 xx xx     	lda	#<L10108
  3262 09:7ADA: 85 01        	sta	<R0
  3263                        	xref	_BEG_DATA
  3264 09:7ADC: A9 xx xx     	lda	#_BEG_DATA>>16
  3265 09:7ADF: 85 03        	sta	<R0+2
  3266 09:7AE1: D4 03        	pei	<R0+2
  Mon Sep 27 2021  9:39                                                Page 62


  3267 09:7AE3: D4 01        	pei	<R0
  3268 09:7AE5: 22 xx xx xx  	jsl	~~strcpy
  3269                        ;  else if(Type == 0x01)
  3270 09:7AE9: 82 5D 00     	brl	L10111
  3271                        L10110:
  3272                        	.line	264
  3273                        ;    strcpy(type_txt,"SUPER RELOC3");
  3274 09:7AEC: E2 20        	sep	#$20
  3275                        	longa	off
  3276 09:7AEE: A5 08        	lda	<L69+Type_0
  3277 09:7AF0: C9 01        	cmp	#<$1
  3278 09:7AF2: C2 20        	rep	#$20
  3279                        	longa	on
  3280 09:7AF4: F0 03        	beq	L75
  3281 09:7AF6: 82 1B 00     	brl	L10112
  3282                        L75:
  3283                        	.line	265
  3284 09:7AF9: F4 xx xx     	pea	#^L68+19
  3285 09:7AFC: F4 xx xx     	pea	#<L68+19
  3286 09:7AFF: A9 xx xx     	lda	#<L10108
  3287 09:7B02: 85 01        	sta	<R0
  3288                        	xref	_BEG_DATA
  3289 09:7B04: A9 xx xx     	lda	#_BEG_DATA>>16
  3290 09:7B07: 85 03        	sta	<R0+2
  3291 09:7B09: D4 03        	pei	<R0+2
  3292 09:7B0B: D4 01        	pei	<R0
  3293 09:7B0D: 22 xx xx xx  	jsl	~~strcpy
  3294                        ;  else if(Type >= 0x02 && Type <= 0x25)   /* 37 *
                    /
  3295 09:7B11: 82 35 00     	brl	L10113
  3296                        L10112:
  3297                        	.line	266
  3298                        ;  {
  3299 09:7B14: E2 20        	sep	#$20
  3300                        	longa	off
  3301 09:7B16: A5 08        	lda	<L69+Type_0
  3302 09:7B18: C9 02        	cmp	#<$2
  3303 09:7B1A: C2 20        	rep	#$20
  3304                        	longa	on
  3305 09:7B1C: B0 03        	bcs	L76
  3306 09:7B1E: 82 10 00     	brl	L10114
  3307                        L76:
  3308 09:7B21: E2 20        	sep	#$20
  3309                        	longa	off
  3310 09:7B23: A9 25        	lda	#$25
  3311 09:7B25: C5 08        	cmp	<L69+Type_0
  3312 09:7B27: C2 20        	rep	#$20
  3313                        	longa	on
  3314 09:7B29: B0 03        	bcs	L77
  3315 09:7B2B: 82 03 00     	brl	L10114
  3316                        L77:
  3317                        	.line	267
  3318                        ;	  //printf(type_txt,"SUPER INTERSEG%d",Type-1);
  3319                        ;
  3320                        ;  }
  3321                        	.line	270
  3322                        ;  else
  3323 09:7B2E: 82 18 00     	brl	L10115
  Mon Sep 27 2021  9:39                                                Page 63


  3324                        L10114:
  3325                        ;    strcpy(type_txt," SUPER Unknown");
  3326                        	.line	272
  3327 09:7B31: F4 xx xx     	pea	#^L68+32
  3328 09:7B34: F4 xx xx     	pea	#<L68+32
  3329 09:7B37: A9 xx xx     	lda	#<L10108
  3330 09:7B3A: 85 01        	sta	<R0
  3331                        	xref	_BEG_DATA
  3332 09:7B3C: A9 xx xx     	lda	#_BEG_DATA>>16
  3333 09:7B3F: 85 03        	sta	<R0+2
  3334 09:7B41: D4 03        	pei	<R0+2
  3335 09:7B43: D4 01        	pei	<R0
  3336 09:7B45: 22 xx xx xx  	jsl	~~strcpy
  3337                        L10115:
  3338                        L10113:
  3339                        L10111:
  3340                        ;
  3341                        ;  /* Renvoi le Texte */
  3342                        ;  return(&type_txt[0]);
  3343                        	.line	275
  3344 09:7B49: A9 xx xx     	lda	#<L10108
  3345 09:7B4C: 85 01        	sta	<R0
  3346                        	xref	_BEG_DATA
  3347 09:7B4E: A9 xx xx     	lda	#_BEG_DATA>>16
  3348 09:7B51: 85 03        	sta	<R0+2
  3349 09:7B53: A6 03        	ldx	<R0+2
  3350 09:7B55: A5 01        	lda	<R0
  3351 09:7B57: 82 5B FF     	brl	L73
  3352                        ;}
  3353                        	.line	276
  3354                        	.endblock	276
  3355             00000004   L69	equ	4
  3356             00000005   L70	equ	5
  3357 09:7B5A:              	ends
  3358                        	efunc
  3359                        	.endfunc	276,5,4
  3360                        	.line	276
  3361                        	data
  3362                        L68:
  3363 00:00A7: 53 55 50 45  	db	$53,$55,$50,$45,$52,$00,$53,$55,$50,$45,
                    $52,$20,$52,$45,$4C
       00:00AB: 52 00 53 55 
       00:00AF: 50 45 52 20 
       00:00B3: 52 45 4C 
  3364 00:00B6: 4F 43 32 00  	db	$4F,$43,$32,$00,$53,$55,$50,$45,$52,$20,
                    $52,$45,$4C,$4F,$43
       00:00BA: 53 55 50 45 
       00:00BE: 52 20 52 45 
       00:00C2: 4C 4F 43 
  3365 00:00C5: 33 00 20 53  	db	$33,$00,$20,$53,$55,$50,$45,$52,$20,$55,
                    $6E,$6B,$6E,$6F,$77
       00:00C9: 55 50 45 52 
       00:00CD: 20 55 6E 6B 
       00:00D1: 6E 6F 77 
  3366 00:00D4: 6E 00        	db	$6E,$00
  3367 00:00D6:              	ends
  3368                        ;
  3369                        ;
  Mon Sep 27 2021  9:39                                                Page 64


  3370                        ;/************************************************
                    *****************************/
  3371                        ;/*  mem_free_record() :  Libération mémoire de la
                     structure omf_body_record. */
  3372                        ;/************************************************
                    *****************************/
  3373                        ;void mem_free_record(struct omf_body_record *curr
                    ent_record)
  3374                        ;{
  3375                        	.line	282
  3376                        	.line	283
  3377                        	LOADER
  3378                        	xdef	~~mem_free_record
  3379                        	func
  3380                        	.function	283
  3381                        ~~mem_free_record:
  3382                        	longa	on
  3383                        	longi	on
  3384 09:7B5A: 3B           	tsc
  3385 09:7B5B: 38           	sec
  3386 09:7B5C: E9 00 00     	sbc	#L79
  3387 09:7B5F: 1B           	tcs
  3388 09:7B60: 0B           	phd
  3389 09:7B61: 5B           	tcd
  3390             00000004   current_record_0	set	4
  3391                        	.block	283
  3392                        ;  if(current_record)
  3393                        	.sym	current_record,4,138,6,32,49
  3394                        	.line	284
  3395                        ;    {
  3396 09:7B62: A5 04        	lda	<L79+current_record_0
  3397 09:7B64: 05 06        	ora	<L79+current_record_0+2
  3398 09:7B66: D0 03        	bne	L82
  3399 09:7B68: 82 B0 03     	brl	L10116
  3400                        L82:
  3401                        	.line	285
  3402                        ;      if(current_record->operation_code == 0x00)
  3403                        	.line	286
  3404                        ;        mem_free_END((struct record_END *) curren
                    t_record->record_data);
  3405 09:7B6B: A0 08 00     	ldy	#$8
  3406 09:7B6E: B7 04        	lda	[<L79+current_record_0],Y
  3407 09:7B70: 29 FF 00     	and	#$ff
  3408 09:7B73: F0 03        	beq	L83
  3409 09:7B75: 82 13 00     	brl	L10117
  3410                        L83:
  3411                        	.line	287
  3412 09:7B78: A0 0D 00     	ldy	#$d
  3413 09:7B7B: B7 04        	lda	[<L79+current_record_0],Y
  3414 09:7B7D: 48           	pha
  3415 09:7B7E: A0 0B 00     	ldy	#$b
  3416 09:7B81: B7 04        	lda	[<L79+current_record_0],Y
  3417 09:7B83: 48           	pha
  3418 09:7B84: 22 2D AD 09  	jsl	~~mem_free_END
  3419                        ;      else if(current_record->operation_code >= 0
                    x01 && current_record->operation_code <= 0xDF)
  3420 09:7B88: 82 88 03     	brl	L10118
  3421                        L10117:
  Mon Sep 27 2021  9:39                                                Page 65


  3422                        	.line	288
  3423                        ;        mem_free_CONST((struct record_CONST *) cu
                    rrent_record->record_data);
  3424 09:7B8B: E2 20        	sep	#$20
  3425                        	longa	off
  3426 09:7B8D: A0 08 00     	ldy	#$8
  3427 09:7B90: B7 04        	lda	[<L79+current_record_0],Y
  3428 09:7B92: C9 01        	cmp	#<$1
  3429 09:7B94: C2 20        	rep	#$20
  3430                        	longa	on
  3431 09:7B96: B0 03        	bcs	L84
  3432 09:7B98: 82 23 00     	brl	L10119
  3433                        L84:
  3434 09:7B9B: E2 20        	sep	#$20
  3435                        	longa	off
  3436 09:7B9D: A9 DF        	lda	#$df
  3437 09:7B9F: A0 08 00     	ldy	#$8
  3438 09:7BA2: D7 04        	cmp	[<L79+current_record_0],Y
  3439 09:7BA4: C2 20        	rep	#$20
  3440                        	longa	on
  3441 09:7BA6: B0 03        	bcs	L85
  3442 09:7BA8: 82 13 00     	brl	L10119
  3443                        L85:
  3444                        	.line	289
  3445 09:7BAB: A0 0D 00     	ldy	#$d
  3446 09:7BAE: B7 04        	lda	[<L79+current_record_0],Y
  3447 09:7BB0: 48           	pha
  3448 09:7BB1: A0 0B 00     	ldy	#$b
  3449 09:7BB4: B7 04        	lda	[<L79+current_record_0],Y
  3450 09:7BB6: 48           	pha
  3451 09:7BB7: 22 56 AD 09  	jsl	~~mem_free_CONST
  3452                        ;      else if(current_record->operation_code == 0
                    xE0)
  3453 09:7BBB: 82 55 03     	brl	L10120
  3454                        L10119:
  3455                        	.line	290
  3456                        ;        mem_free_ALIGN((struct record_ALIGN *) cu
                    rrent_record->record_data);
  3457 09:7BBE: E2 20        	sep	#$20
  3458                        	longa	off
  3459 09:7BC0: A0 08 00     	ldy	#$8
  3460 09:7BC3: B7 04        	lda	[<L79+current_record_0],Y
  3461 09:7BC5: C9 E0        	cmp	#<$e0
  3462 09:7BC7: C2 20        	rep	#$20
  3463                        	longa	on
  3464 09:7BC9: F0 03        	beq	L86
  3465 09:7BCB: 82 13 00     	brl	L10121
  3466                        L86:
  3467                        	.line	291
  3468 09:7BCE: A0 0D 00     	ldy	#$d
  3469 09:7BD1: B7 04        	lda	[<L79+current_record_0],Y
  3470 09:7BD3: 48           	pha
  3471 09:7BD4: A0 0B 00     	ldy	#$b
  3472 09:7BD7: B7 04        	lda	[<L79+current_record_0],Y
  3473 09:7BD9: 48           	pha
  3474 09:7BDA: 22 9E AD 09  	jsl	~~mem_free_ALIGN
  3475                        ;      else if(current_record->operation_code == 0
                    xE1)
  Mon Sep 27 2021  9:39                                                Page 66


  3476 09:7BDE: 82 32 03     	brl	L10122
  3477                        L10121:
  3478                        	.line	292
  3479                        ;        mem_free_ORG((struct record_ORG *) curren
                    t_record->record_data);
  3480 09:7BE1: E2 20        	sep	#$20
  3481                        	longa	off
  3482 09:7BE3: A0 08 00     	ldy	#$8
  3483 09:7BE6: B7 04        	lda	[<L79+current_record_0],Y
  3484 09:7BE8: C9 E1        	cmp	#<$e1
  3485 09:7BEA: C2 20        	rep	#$20
  3486                        	longa	on
  3487 09:7BEC: F0 03        	beq	L87
  3488 09:7BEE: 82 13 00     	brl	L10123
  3489                        L87:
  3490                        	.line	293
  3491 09:7BF1: A0 0D 00     	ldy	#$d
  3492 09:7BF4: B7 04        	lda	[<L79+current_record_0],Y
  3493 09:7BF6: 48           	pha
  3494 09:7BF7: A0 0B 00     	ldy	#$b
  3495 09:7BFA: B7 04        	lda	[<L79+current_record_0],Y
  3496 09:7BFC: 48           	pha
  3497 09:7BFD: 22 C7 AD 09  	jsl	~~mem_free_ORG
  3498                        ;      else if(current_record->operation_code == 0
                    xE2)
  3499 09:7C01: 82 0F 03     	brl	L10124
  3500                        L10123:
  3501                        	.line	294
  3502                        ;        mem_free_RELOC((struct record_RELOC *) cu
                    rrent_record->record_data);
  3503 09:7C04: E2 20        	sep	#$20
  3504                        	longa	off
  3505 09:7C06: A0 08 00     	ldy	#$8
  3506 09:7C09: B7 04        	lda	[<L79+current_record_0],Y
  3507 09:7C0B: C9 E2        	cmp	#<$e2
  3508 09:7C0D: C2 20        	rep	#$20
  3509                        	longa	on
  3510 09:7C0F: F0 03        	beq	L88
  3511 09:7C11: 82 13 00     	brl	L10125
  3512                        L88:
  3513                        	.line	295
  3514 09:7C14: A0 0D 00     	ldy	#$d
  3515 09:7C17: B7 04        	lda	[<L79+current_record_0],Y
  3516 09:7C19: 48           	pha
  3517 09:7C1A: A0 0B 00     	ldy	#$b
  3518 09:7C1D: B7 04        	lda	[<L79+current_record_0],Y
  3519 09:7C1F: 48           	pha
  3520 09:7C20: 22 F0 AD 09  	jsl	~~mem_free_RELOC
  3521                        ;      else if(current_record->operation_code == 0
                    xE3)
  3522 09:7C24: 82 EC 02     	brl	L10126
  3523                        L10125:
  3524                        	.line	296
  3525                        ;        mem_free_INTERSEG((struct record_INTERSEG
                     *) current_record->record_data);
  3526 09:7C27: E2 20        	sep	#$20
  3527                        	longa	off
  3528 09:7C29: A0 08 00     	ldy	#$8
  Mon Sep 27 2021  9:39                                                Page 67


  3529 09:7C2C: B7 04        	lda	[<L79+current_record_0],Y
  3530 09:7C2E: C9 E3        	cmp	#<$e3
  3531 09:7C30: C2 20        	rep	#$20
  3532                        	longa	on
  3533 09:7C32: F0 03        	beq	L89
  3534 09:7C34: 82 13 00     	brl	L10127
  3535                        L89:
  3536                        	.line	297
  3537 09:7C37: A0 0D 00     	ldy	#$d
  3538 09:7C3A: B7 04        	lda	[<L79+current_record_0],Y
  3539 09:7C3C: 48           	pha
  3540 09:7C3D: A0 0B 00     	ldy	#$b
  3541 09:7C40: B7 04        	lda	[<L79+current_record_0],Y
  3542 09:7C42: 48           	pha
  3543 09:7C43: 22 19 AE 09  	jsl	~~mem_free_INTERSEG
  3544                        ;      else if(current_record->operation_code == 0
                    xE4)
  3545 09:7C47: 82 C9 02     	brl	L10128
  3546                        L10127:
  3547                        	.line	298
  3548                        ;        mem_free_USING((struct record_USING *) cu
                    rrent_record->record_data);
  3549 09:7C4A: E2 20        	sep	#$20
  3550                        	longa	off
  3551 09:7C4C: A0 08 00     	ldy	#$8
  3552 09:7C4F: B7 04        	lda	[<L79+current_record_0],Y
  3553 09:7C51: C9 E4        	cmp	#<$e4
  3554 09:7C53: C2 20        	rep	#$20
  3555                        	longa	on
  3556 09:7C55: F0 03        	beq	L90
  3557 09:7C57: 82 13 00     	brl	L10129
  3558                        L90:
  3559                        	.line	299
  3560 09:7C5A: A0 0D 00     	ldy	#$d
  3561 09:7C5D: B7 04        	lda	[<L79+current_record_0],Y
  3562 09:7C5F: 48           	pha
  3563 09:7C60: A0 0B 00     	ldy	#$b
  3564 09:7C63: B7 04        	lda	[<L79+current_record_0],Y
  3565 09:7C65: 48           	pha
  3566 09:7C66: 22 42 AE 09  	jsl	~~mem_free_USING
  3567                        ;      else if(current_record->operation_code == 0
                    xE5)
  3568 09:7C6A: 82 A6 02     	brl	L10130
  3569                        L10129:
  3570                        	.line	300
  3571                        ;        mem_free_STRONG((struct record_STRONG *) 
                    current_record->record_data);
  3572 09:7C6D: E2 20        	sep	#$20
  3573                        	longa	off
  3574 09:7C6F: A0 08 00     	ldy	#$8
  3575 09:7C72: B7 04        	lda	[<L79+current_record_0],Y
  3576 09:7C74: C9 E5        	cmp	#<$e5
  3577 09:7C76: C2 20        	rep	#$20
  3578                        	longa	on
  3579 09:7C78: F0 03        	beq	L91
  3580 09:7C7A: 82 13 00     	brl	L10131
  3581                        L91:
  3582                        	.line	301
  Mon Sep 27 2021  9:39                                                Page 68


  3583 09:7C7D: A0 0D 00     	ldy	#$d
  3584 09:7C80: B7 04        	lda	[<L79+current_record_0],Y
  3585 09:7C82: 48           	pha
  3586 09:7C83: A0 0B 00     	ldy	#$b
  3587 09:7C86: B7 04        	lda	[<L79+current_record_0],Y
  3588 09:7C88: 48           	pha
  3589 09:7C89: 22 6B AE 09  	jsl	~~mem_free_STRONG
  3590                        ;      else if(current_record->operation_code == 0
                    xE6)
  3591 09:7C8D: 82 83 02     	brl	L10132
  3592                        L10131:
  3593                        	.line	302
  3594                        ;        mem_free_GLOBAL((struct record_GLOBAL *) 
                    current_record->record_data);
  3595 09:7C90: E2 20        	sep	#$20
  3596                        	longa	off
  3597 09:7C92: A0 08 00     	ldy	#$8
  3598 09:7C95: B7 04        	lda	[<L79+current_record_0],Y
  3599 09:7C97: C9 E6        	cmp	#<$e6
  3600 09:7C99: C2 20        	rep	#$20
  3601                        	longa	on
  3602 09:7C9B: F0 03        	beq	L92
  3603 09:7C9D: 82 13 00     	brl	L10133
  3604                        L92:
  3605                        	.line	303
  3606 09:7CA0: A0 0D 00     	ldy	#$d
  3607 09:7CA3: B7 04        	lda	[<L79+current_record_0],Y
  3608 09:7CA5: 48           	pha
  3609 09:7CA6: A0 0B 00     	ldy	#$b
  3610 09:7CA9: B7 04        	lda	[<L79+current_record_0],Y
  3611 09:7CAB: 48           	pha
  3612 09:7CAC: 22 94 AE 09  	jsl	~~mem_free_GLOBAL
  3613                        ;      else if(current_record->operation_code == 0
                    xE7)
  3614 09:7CB0: 82 60 02     	brl	L10134
  3615                        L10133:
  3616                        	.line	304
  3617                        ;        mem_free_GEQU((struct record_GEQU *) curr
                    ent_record->record_data);
  3618 09:7CB3: E2 20        	sep	#$20
  3619                        	longa	off
  3620 09:7CB5: A0 08 00     	ldy	#$8
  3621 09:7CB8: B7 04        	lda	[<L79+current_record_0],Y
  3622 09:7CBA: C9 E7        	cmp	#<$e7
  3623 09:7CBC: C2 20        	rep	#$20
  3624                        	longa	on
  3625 09:7CBE: F0 03        	beq	L93
  3626 09:7CC0: 82 13 00     	brl	L10135
  3627                        L93:
  3628                        	.line	305
  3629 09:7CC3: A0 0D 00     	ldy	#$d
  3630 09:7CC6: B7 04        	lda	[<L79+current_record_0],Y
  3631 09:7CC8: 48           	pha
  3632 09:7CC9: A0 0B 00     	ldy	#$b
  3633 09:7CCC: B7 04        	lda	[<L79+current_record_0],Y
  3634 09:7CCE: 48           	pha
  3635 09:7CCF: 22 BD AE 09  	jsl	~~mem_free_GEQU
  3636                        ;      else if(current_record->operation_code == 0
  Mon Sep 27 2021  9:39                                                Page 69


                    xE8)
  3637 09:7CD3: 82 3D 02     	brl	L10136
  3638                        L10135:
  3639                        	.line	306
  3640                        ;        mem_free_MEM((struct record_MEM *) curren
                    t_record->record_data);
  3641 09:7CD6: E2 20        	sep	#$20
  3642                        	longa	off
  3643 09:7CD8: A0 08 00     	ldy	#$8
  3644 09:7CDB: B7 04        	lda	[<L79+current_record_0],Y
  3645 09:7CDD: C9 E8        	cmp	#<$e8
  3646 09:7CDF: C2 20        	rep	#$20
  3647                        	longa	on
  3648 09:7CE1: F0 03        	beq	L94
  3649 09:7CE3: 82 13 00     	brl	L10137
  3650                        L94:
  3651                        	.line	307
  3652 09:7CE6: A0 0D 00     	ldy	#$d
  3653 09:7CE9: B7 04        	lda	[<L79+current_record_0],Y
  3654 09:7CEB: 48           	pha
  3655 09:7CEC: A0 0B 00     	ldy	#$b
  3656 09:7CEF: B7 04        	lda	[<L79+current_record_0],Y
  3657 09:7CF1: 48           	pha
  3658 09:7CF2: 22 E6 AE 09  	jsl	~~mem_free_MEM
  3659                        ;      else if(current_record->operation_code == 0
                    xEB)
  3660 09:7CF6: 82 1A 02     	brl	L10138
  3661                        L10137:
  3662                        	.line	308
  3663                        ;        mem_free_EXPR((struct record_EXPR *) curr
                    ent_record->record_data);
  3664 09:7CF9: E2 20        	sep	#$20
  3665                        	longa	off
  3666 09:7CFB: A0 08 00     	ldy	#$8
  3667 09:7CFE: B7 04        	lda	[<L79+current_record_0],Y
  3668 09:7D00: C9 EB        	cmp	#<$eb
  3669 09:7D02: C2 20        	rep	#$20
  3670                        	longa	on
  3671 09:7D04: F0 03        	beq	L95
  3672 09:7D06: 82 13 00     	brl	L10139
  3673                        L95:
  3674                        	.line	309
  3675 09:7D09: A0 0D 00     	ldy	#$d
  3676 09:7D0C: B7 04        	lda	[<L79+current_record_0],Y
  3677 09:7D0E: 48           	pha
  3678 09:7D0F: A0 0B 00     	ldy	#$b
  3679 09:7D12: B7 04        	lda	[<L79+current_record_0],Y
  3680 09:7D14: 48           	pha
  3681 09:7D15: 22 0F AF 09  	jsl	~~mem_free_EXPR
  3682                        ;      else if(current_record->operation_code == 0
                    xEC)
  3683 09:7D19: 82 F7 01     	brl	L10140
  3684                        L10139:
  3685                        	.line	310
  3686                        ;        mem_free_ZEXPR((struct record_ZEXPR *) cu
                    rrent_record->record_data);
  3687 09:7D1C: E2 20        	sep	#$20
  3688                        	longa	off
  Mon Sep 27 2021  9:39                                                Page 70


  3689 09:7D1E: A0 08 00     	ldy	#$8
  3690 09:7D21: B7 04        	lda	[<L79+current_record_0],Y
  3691 09:7D23: C9 EC        	cmp	#<$ec
  3692 09:7D25: C2 20        	rep	#$20
  3693                        	longa	on
  3694 09:7D27: F0 03        	beq	L96
  3695 09:7D29: 82 13 00     	brl	L10141
  3696                        L96:
  3697                        	.line	311
  3698 09:7D2C: A0 0D 00     	ldy	#$d
  3699 09:7D2F: B7 04        	lda	[<L79+current_record_0],Y
  3700 09:7D31: 48           	pha
  3701 09:7D32: A0 0B 00     	ldy	#$b
  3702 09:7D35: B7 04        	lda	[<L79+current_record_0],Y
  3703 09:7D37: 48           	pha
  3704 09:7D38: 22 38 AF 09  	jsl	~~mem_free_ZEXPR
  3705                        ;      else if(current_record->operation_code == 0
                    xED)
  3706 09:7D3C: 82 D4 01     	brl	L10142
  3707                        L10141:
  3708                        	.line	312
  3709                        ;        mem_free_BEXPR((struct record_BEXPR *) cu
                    rrent_record->record_data);
  3710 09:7D3F: E2 20        	sep	#$20
  3711                        	longa	off
  3712 09:7D41: A0 08 00     	ldy	#$8
  3713 09:7D44: B7 04        	lda	[<L79+current_record_0],Y
  3714 09:7D46: C9 ED        	cmp	#<$ed
  3715 09:7D48: C2 20        	rep	#$20
  3716                        	longa	on
  3717 09:7D4A: F0 03        	beq	L97
  3718 09:7D4C: 82 13 00     	brl	L10143
  3719                        L97:
  3720                        	.line	313
  3721 09:7D4F: A0 0D 00     	ldy	#$d
  3722 09:7D52: B7 04        	lda	[<L79+current_record_0],Y
  3723 09:7D54: 48           	pha
  3724 09:7D55: A0 0B 00     	ldy	#$b
  3725 09:7D58: B7 04        	lda	[<L79+current_record_0],Y
  3726 09:7D5A: 48           	pha
  3727 09:7D5B: 22 61 AF 09  	jsl	~~mem_free_BEXPR
  3728                        ;      else if(current_record->operation_code == 0
                    xEE)
  3729 09:7D5F: 82 B1 01     	brl	L10144
  3730                        L10143:
  3731                        	.line	314
  3732                        ;        mem_free_RELEXPR((struct record_RELEXPR *
                    ) current_record->record_data);
  3733 09:7D62: E2 20        	sep	#$20
  3734                        	longa	off
  3735 09:7D64: A0 08 00     	ldy	#$8
  3736 09:7D67: B7 04        	lda	[<L79+current_record_0],Y
  3737 09:7D69: C9 EE        	cmp	#<$ee
  3738 09:7D6B: C2 20        	rep	#$20
  3739                        	longa	on
  3740 09:7D6D: F0 03        	beq	L98
  3741 09:7D6F: 82 13 00     	brl	L10145
  3742                        L98:
  Mon Sep 27 2021  9:39                                                Page 71


  3743                        	.line	315
  3744 09:7D72: A0 0D 00     	ldy	#$d
  3745 09:7D75: B7 04        	lda	[<L79+current_record_0],Y
  3746 09:7D77: 48           	pha
  3747 09:7D78: A0 0B 00     	ldy	#$b
  3748 09:7D7B: B7 04        	lda	[<L79+current_record_0],Y
  3749 09:7D7D: 48           	pha
  3750 09:7D7E: 22 8A AF 09  	jsl	~~mem_free_RELEXPR
  3751                        ;      else if(current_record->operation_code == 0
                    xEF)
  3752 09:7D82: 82 8E 01     	brl	L10146
  3753                        L10145:
  3754                        	.line	316
  3755                        ;        mem_free_LOCAL((struct record_LOCAL *) cu
                    rrent_record->record_data);
  3756 09:7D85: E2 20        	sep	#$20
  3757                        	longa	off
  3758 09:7D87: A0 08 00     	ldy	#$8
  3759 09:7D8A: B7 04        	lda	[<L79+current_record_0],Y
  3760 09:7D8C: C9 EF        	cmp	#<$ef
  3761 09:7D8E: C2 20        	rep	#$20
  3762                        	longa	on
  3763 09:7D90: F0 03        	beq	L99
  3764 09:7D92: 82 13 00     	brl	L10147
  3765                        L99:
  3766                        	.line	317
  3767 09:7D95: A0 0D 00     	ldy	#$d
  3768 09:7D98: B7 04        	lda	[<L79+current_record_0],Y
  3769 09:7D9A: 48           	pha
  3770 09:7D9B: A0 0B 00     	ldy	#$b
  3771 09:7D9E: B7 04        	lda	[<L79+current_record_0],Y
  3772 09:7DA0: 48           	pha
  3773 09:7DA1: 22 B3 AF 09  	jsl	~~mem_free_LOCAL
  3774                        ;      else if(current_record->operation_code == 0
                    xF0)
  3775 09:7DA5: 82 6B 01     	brl	L10148
  3776                        L10147:
  3777                        	.line	318
  3778                        ;        mem_free_EQU((struct record_EQU *) curren
                    t_record->record_data);
  3779 09:7DA8: E2 20        	sep	#$20
  3780                        	longa	off
  3781 09:7DAA: A0 08 00     	ldy	#$8
  3782 09:7DAD: B7 04        	lda	[<L79+current_record_0],Y
  3783 09:7DAF: C9 F0        	cmp	#<$f0
  3784 09:7DB1: C2 20        	rep	#$20
  3785                        	longa	on
  3786 09:7DB3: F0 03        	beq	L100
  3787 09:7DB5: 82 13 00     	brl	L10149
  3788                        L100:
  3789                        	.line	319
  3790 09:7DB8: A0 0D 00     	ldy	#$d
  3791 09:7DBB: B7 04        	lda	[<L79+current_record_0],Y
  3792 09:7DBD: 48           	pha
  3793 09:7DBE: A0 0B 00     	ldy	#$b
  3794 09:7DC1: B7 04        	lda	[<L79+current_record_0],Y
  3795 09:7DC3: 48           	pha
  3796 09:7DC4: 22 DC AF 09  	jsl	~~mem_free_EQU
  Mon Sep 27 2021  9:39                                                Page 72


  3797                        ;      else if(current_record->operation_code == 0
                    xF1)
  3798 09:7DC8: 82 48 01     	brl	L10150
  3799                        L10149:
  3800                        	.line	320
  3801                        ;        mem_free_DS((struct record_DS *) current_
                    record->record_data);
  3802 09:7DCB: E2 20        	sep	#$20
  3803                        	longa	off
  3804 09:7DCD: A0 08 00     	ldy	#$8
  3805 09:7DD0: B7 04        	lda	[<L79+current_record_0],Y
  3806 09:7DD2: C9 F1        	cmp	#<$f1
  3807 09:7DD4: C2 20        	rep	#$20
  3808                        	longa	on
  3809 09:7DD6: F0 03        	beq	L101
  3810 09:7DD8: 82 13 00     	brl	L10151
  3811                        L101:
  3812                        	.line	321
  3813 09:7DDB: A0 0D 00     	ldy	#$d
  3814 09:7DDE: B7 04        	lda	[<L79+current_record_0],Y
  3815 09:7DE0: 48           	pha
  3816 09:7DE1: A0 0B 00     	ldy	#$b
  3817 09:7DE4: B7 04        	lda	[<L79+current_record_0],Y
  3818 09:7DE6: 48           	pha
  3819 09:7DE7: 22 05 B0 09  	jsl	~~mem_free_DS
  3820                        ;      else if(current_record->operation_code == 0
                    xF2)
  3821 09:7DEB: 82 25 01     	brl	L10152
  3822                        L10151:
  3823                        	.line	322
  3824                        ;        mem_free_LCONST((struct record_LCONST *) 
                    current_record->record_data);
  3825 09:7DEE: E2 20        	sep	#$20
  3826                        	longa	off
  3827 09:7DF0: A0 08 00     	ldy	#$8
  3828 09:7DF3: B7 04        	lda	[<L79+current_record_0],Y
  3829 09:7DF5: C9 F2        	cmp	#<$f2
  3830 09:7DF7: C2 20        	rep	#$20
  3831                        	longa	on
  3832 09:7DF9: F0 03        	beq	L102
  3833 09:7DFB: 82 13 00     	brl	L10153
  3834                        L102:
  3835                        	.line	323
  3836 09:7DFE: A0 0D 00     	ldy	#$d
  3837 09:7E01: B7 04        	lda	[<L79+current_record_0],Y
  3838 09:7E03: 48           	pha
  3839 09:7E04: A0 0B 00     	ldy	#$b
  3840 09:7E07: B7 04        	lda	[<L79+current_record_0],Y
  3841 09:7E09: 48           	pha
  3842 09:7E0A: 22 2E B0 09  	jsl	~~mem_free_LCONST
  3843                        ;      else if(current_record->operation_code == 0
                    xF3)
  3844 09:7E0E: 82 02 01     	brl	L10154
  3845                        L10153:
  3846                        	.line	324
  3847                        ;        mem_free_LEXPR((struct record_LEXPR *) cu
                    rrent_record->record_data);
  3848 09:7E11: E2 20        	sep	#$20
  Mon Sep 27 2021  9:39                                                Page 73


  3849                        	longa	off
  3850 09:7E13: A0 08 00     	ldy	#$8
  3851 09:7E16: B7 04        	lda	[<L79+current_record_0],Y
  3852 09:7E18: C9 F3        	cmp	#<$f3
  3853 09:7E1A: C2 20        	rep	#$20
  3854                        	longa	on
  3855 09:7E1C: F0 03        	beq	L103
  3856 09:7E1E: 82 13 00     	brl	L10155
  3857                        L103:
  3858                        	.line	325
  3859 09:7E21: A0 0D 00     	ldy	#$d
  3860 09:7E24: B7 04        	lda	[<L79+current_record_0],Y
  3861 09:7E26: 48           	pha
  3862 09:7E27: A0 0B 00     	ldy	#$b
  3863 09:7E2A: B7 04        	lda	[<L79+current_record_0],Y
  3864 09:7E2C: 48           	pha
  3865 09:7E2D: 22 76 B0 09  	jsl	~~mem_free_LEXPR
  3866                        ;      else if(current_record->operation_code == 0
                    xF4)
  3867 09:7E31: 82 DF 00     	brl	L10156
  3868                        L10155:
  3869                        	.line	326
  3870                        ;        mem_free_ENTRY((struct record_ENTRY *) cu
                    rrent_record->record_data);
  3871 09:7E34: E2 20        	sep	#$20
  3872                        	longa	off
  3873 09:7E36: A0 08 00     	ldy	#$8
  3874 09:7E39: B7 04        	lda	[<L79+current_record_0],Y
  3875 09:7E3B: C9 F4        	cmp	#<$f4
  3876 09:7E3D: C2 20        	rep	#$20
  3877                        	longa	on
  3878 09:7E3F: F0 03        	beq	L104
  3879 09:7E41: 82 13 00     	brl	L10157
  3880                        L104:
  3881                        	.line	327
  3882 09:7E44: A0 0D 00     	ldy	#$d
  3883 09:7E47: B7 04        	lda	[<L79+current_record_0],Y
  3884 09:7E49: 48           	pha
  3885 09:7E4A: A0 0B 00     	ldy	#$b
  3886 09:7E4D: B7 04        	lda	[<L79+current_record_0],Y
  3887 09:7E4F: 48           	pha
  3888 09:7E50: 22 9F B0 09  	jsl	~~mem_free_ENTRY
  3889                        ;      else if(current_record->operation_code == 0
                    xF5)
  3890 09:7E54: 82 BC 00     	brl	L10158
  3891                        L10157:
  3892                        	.line	328
  3893                        ;        mem_free_cRELOC((struct record_cRELOC *) 
                    current_record->record_data);
  3894 09:7E57: E2 20        	sep	#$20
  3895                        	longa	off
  3896 09:7E59: A0 08 00     	ldy	#$8
  3897 09:7E5C: B7 04        	lda	[<L79+current_record_0],Y
  3898 09:7E5E: C9 F5        	cmp	#<$f5
  3899 09:7E60: C2 20        	rep	#$20
  3900                        	longa	on
  3901 09:7E62: F0 03        	beq	L105
  3902 09:7E64: 82 13 00     	brl	L10159
  Mon Sep 27 2021  9:39                                                Page 74


  3903                        L105:
  3904                        	.line	329
  3905 09:7E67: A0 0D 00     	ldy	#$d
  3906 09:7E6A: B7 04        	lda	[<L79+current_record_0],Y
  3907 09:7E6C: 48           	pha
  3908 09:7E6D: A0 0B 00     	ldy	#$b
  3909 09:7E70: B7 04        	lda	[<L79+current_record_0],Y
  3910 09:7E72: 48           	pha
  3911 09:7E73: 22 C8 B0 09  	jsl	~~mem_free_cRELOC
  3912                        ;      else if(current_record->operation_code == 0
                    xF6)
  3913 09:7E77: 82 99 00     	brl	L10160
  3914                        L10159:
  3915                        	.line	330
  3916                        ;        mem_free_cINTERSEG((struct record_cINTERS
                    EG *) current_record->record_data);
  3917 09:7E7A: E2 20        	sep	#$20
  3918                        	longa	off
  3919 09:7E7C: A0 08 00     	ldy	#$8
  3920 09:7E7F: B7 04        	lda	[<L79+current_record_0],Y
  3921 09:7E81: C9 F6        	cmp	#<$f6
  3922 09:7E83: C2 20        	rep	#$20
  3923                        	longa	on
  3924 09:7E85: F0 03        	beq	L106
  3925 09:7E87: 82 13 00     	brl	L10161
  3926                        L106:
  3927                        	.line	331
  3928 09:7E8A: A0 0D 00     	ldy	#$d
  3929 09:7E8D: B7 04        	lda	[<L79+current_record_0],Y
  3930 09:7E8F: 48           	pha
  3931 09:7E90: A0 0B 00     	ldy	#$b
  3932 09:7E93: B7 04        	lda	[<L79+current_record_0],Y
  3933 09:7E95: 48           	pha
  3934 09:7E96: 22 F1 B0 09  	jsl	~~mem_free_cINTERSEG
  3935                        ;      else if(current_record->operation_code == 0
                    xF7)
  3936 09:7E9A: 82 76 00     	brl	L10162
  3937                        L10161:
  3938                        	.line	332
  3939                        ;        mem_free_SUPER((struct record_SUPER *) cu
                    rrent_record->record_data);
  3940 09:7E9D: E2 20        	sep	#$20
  3941                        	longa	off
  3942 09:7E9F: A0 08 00     	ldy	#$8
  3943 09:7EA2: B7 04        	lda	[<L79+current_record_0],Y
  3944 09:7EA4: C9 F7        	cmp	#<$f7
  3945 09:7EA6: C2 20        	rep	#$20
  3946                        	longa	on
  3947 09:7EA8: F0 03        	beq	L107
  3948 09:7EAA: 82 13 00     	brl	L10163
  3949                        L107:
  3950                        	.line	333
  3951 09:7EAD: A0 0D 00     	ldy	#$d
  3952 09:7EB0: B7 04        	lda	[<L79+current_record_0],Y
  3953 09:7EB2: 48           	pha
  3954 09:7EB3: A0 0B 00     	ldy	#$b
  3955 09:7EB6: B7 04        	lda	[<L79+current_record_0],Y
  3956 09:7EB8: 48           	pha
  Mon Sep 27 2021  9:39                                                Page 75


  3957 09:7EB9: 22 1A B1 09  	jsl	~~mem_free_SUPER
  3958                        ;      else if(current_record->operation_code == 0
                    xFB)
  3959 09:7EBD: 82 53 00     	brl	L10164
  3960                        L10163:
  3961                        	.line	334
  3962                        ;        mem_free_General((struct record_General *
                    ) current_record->record_data);
  3963 09:7EC0: E2 20        	sep	#$20
  3964                        	longa	off
  3965 09:7EC2: A0 08 00     	ldy	#$8
  3966 09:7EC5: B7 04        	lda	[<L79+current_record_0],Y
  3967 09:7EC7: C9 FB        	cmp	#<$fb
  3968 09:7EC9: C2 20        	rep	#$20
  3969                        	longa	on
  3970 09:7ECB: F0 03        	beq	L108
  3971 09:7ECD: 82 13 00     	brl	L10165
  3972                        L108:
  3973                        	.line	335
  3974 09:7ED0: A0 0D 00     	ldy	#$d
  3975 09:7ED3: B7 04        	lda	[<L79+current_record_0],Y
  3976 09:7ED5: 48           	pha
  3977 09:7ED6: A0 0B 00     	ldy	#$b
  3978 09:7ED9: B7 04        	lda	[<L79+current_record_0],Y
  3979 09:7EDB: 48           	pha
  3980 09:7EDC: 22 7B B1 09  	jsl	~~mem_free_General
  3981                        ;      else if(current_record->operation_code >= 0
                    xFC && current_record->operation_code <= 0xFF)
  3982 09:7EE0: 82 30 00     	brl	L10166
  3983                        L10165:
  3984                        	.line	336
  3985                        ;        mem_free_Experimental((struct record_Expe
                    rimental *) current_record->record_data);
  3986 09:7EE3: E2 20        	sep	#$20
  3987                        	longa	off
  3988 09:7EE5: A0 08 00     	ldy	#$8
  3989 09:7EE8: B7 04        	lda	[<L79+current_record_0],Y
  3990 09:7EEA: C9 FC        	cmp	#<$fc
  3991 09:7EEC: C2 20        	rep	#$20
  3992                        	longa	on
  3993 09:7EEE: B0 03        	bcs	L109
  3994 09:7EF0: 82 20 00     	brl	L10167
  3995                        L109:
  3996 09:7EF3: E2 20        	sep	#$20
  3997                        	longa	off
  3998 09:7EF5: A9 FF        	lda	#$ff
  3999 09:7EF7: A0 08 00     	ldy	#$8
  4000 09:7EFA: D7 04        	cmp	[<L79+current_record_0],Y
  4001 09:7EFC: C2 20        	rep	#$20
  4002                        	longa	on
  4003 09:7EFE: B0 03        	bcs	L110
  4004 09:7F00: 82 10 00     	brl	L10167
  4005                        L110:
  4006                        	.line	337
  4007 09:7F03: A0 0D 00     	ldy	#$d
  4008 09:7F06: B7 04        	lda	[<L79+current_record_0],Y
  4009 09:7F08: 48           	pha
  4010 09:7F09: A0 0B 00     	ldy	#$b
  Mon Sep 27 2021  9:39                                                Page 76


  4011 09:7F0C: B7 04        	lda	[<L79+current_record_0],Y
  4012 09:7F0E: 48           	pha
  4013 09:7F0F: 22 A4 B1 09  	jsl	~~mem_free_Experimental
  4014                        ;
  4015                        ;      k_free(current_record);
  4016                        L10167:
  4017                        L10166:
  4018                        L10164:
  4019                        L10162:
  4020                        L10160:
  4021                        L10158:
  4022                        L10156:
  4023                        L10154:
  4024                        L10152:
  4025                        L10150:
  4026                        L10148:
  4027                        L10146:
  4028                        L10144:
  4029                        L10142:
  4030                        L10140:
  4031                        L10138:
  4032                        L10136:
  4033                        L10134:
  4034                        L10132:
  4035                        L10130:
  4036                        L10128:
  4037                        L10126:
  4038                        L10124:
  4039                        L10122:
  4040                        L10120:
  4041                        L10118:
  4042                        	.line	339
  4043 09:7F13: D4 06        	pei	<L79+current_record_0+2
  4044 09:7F15: D4 04        	pei	<L79+current_record_0
  4045 09:7F17: 22 xx xx xx  	jsl	~~k_free
  4046                        ;    }
  4047                        	.line	340
  4048                        ;}
  4049                        L10116:
  4050                        	.line	341
  4051                        L111:
  4052 09:7F1B: A5 02        	lda	<L79+2
  4053 09:7F1D: 85 06        	sta	<L79+2+4
  4054 09:7F1F: A5 01        	lda	<L79+1
  4055 09:7F21: 85 05        	sta	<L79+1+4
  4056 09:7F23: 2B           	pld
  4057 09:7F24: 3B           	tsc
  4058 09:7F25: 18           	clc
  4059 09:7F26: 69 04 00     	adc	#L79+4
  4060 09:7F29: 1B           	tcs
  4061 09:7F2A: 6B           	rtl
  4062                        	.endblock	341
  4063             00000000   L79	equ	0
  4064             00000001   L80	equ	1
  4065 09:7F2B:              	ends
  4066                        	efunc
  4067                        	.endfunc	341,1,0
  4068                        	.line	341
  Mon Sep 27 2021  9:39                                                Page 77


  4069                        ;
  4070                        ;
  4071                        ;/************************************************
                    */
  4072                        ;/*  DecodeRecordEND() :  Décodage du Record END. 
                    */
  4073                        ;/************************************************
                    */
  4074                        ;static void *DecodeRecordEND(unsigned char *data,
                     int file_offset, int segment_offset, int *record_length_rtn
                    )
  4075                        ;{
  4076                        	.line	347
  4077                        	.line	348
  4078                        	LOADER
  4079                        	func
  4080                        	.function	348
  4081                        ~~DecodeRecordEND:
  4082                        	longa	on
  4083                        	longi	on
  4084 09:7F2B: 3B           	tsc
  4085 09:7F2C: 38           	sec
  4086 09:7F2D: E9 08 00     	sbc	#L112
  4087 09:7F30: 1B           	tcs
  4088 09:7F31: 0B           	phd
  4089 09:7F32: 5B           	tcd
  4090             00000004   data_0	set	4
  4091             00000008   file_offset_0	set	8
  4092             0000000A   segment_offset_0	set	10
  4093             0000000C   record_length_rtn_0	set	12
  4094                        	.block	348
  4095                        ;  struct record_END *current_record;
  4096                        ;
  4097                        ;  /* Allocation mémoire */
  4098                        ;  current_record = (struct record_END *) k_calloc
                    (1,sizeof(struct record_END));
  4099             00000000   current_record_1	set	0
  4100                        	.sym	current_record,0,138,1,32,56
  4101                        	.sym	data,4,142,6,32
  4102                        	.sym	file_offset,8,5,6,16
  4103                        	.sym	segment_offset,10,5,6,16
  4104                        	.sym	record_length_rtn,12,133,6,32
  4105                        	.line	352
  4106 09:7F33: F4 09 00     	pea	#<$9
  4107 09:7F36: F4 01 00     	pea	#<$1
  4108 09:7F39: 22 xx xx xx  	jsl	~~k_calloc
  4109 09:7F3D: 85 05        	sta	<L113+current_record_1
  4110 09:7F3F: 86 07        	stx	<L113+current_record_1+2
  4111                        ;  if(current_record == NULL)
  4112                        	.line	353
  4113                        ;    {
  4114 09:7F41: A5 05        	lda	<L113+current_record_1
  4115 09:7F43: 05 07        	ora	<L113+current_record_1+2
  4116 09:7F45: F0 03        	beq	L115
  4117 09:7F47: 82 19 00     	brl	L10168
  4118                        L115:
  4119                        	.line	354
  4120                        ;      //printf("Error : Impossible to allocate me
  Mon Sep 27 2021  9:39                                                Page 78


                    mory to process Segment Body Record.\n");
  4121                        ;      return(NULL);
  4122                        	.line	356
  4123 09:7F4A: A9 00 00     	lda	#$0
  4124 09:7F4D: AA           	tax
  4125 09:7F4E: A9 00 00     	lda	#$0
  4126                        L116:
  4127 09:7F51: A8           	tay
  4128 09:7F52: A5 0A        	lda	<L112+2
  4129 09:7F54: 85 16        	sta	<L112+2+12
  4130 09:7F56: A5 09        	lda	<L112+1
  4131 09:7F58: 85 15        	sta	<L112+1+12
  4132 09:7F5A: 2B           	pld
  4133 09:7F5B: 3B           	tsc
  4134 09:7F5C: 18           	clc
  4135 09:7F5D: 69 14 00     	adc	#L112+12
  4136 09:7F60: 1B           	tcs
  4137 09:7F61: 98           	tya
  4138 09:7F62: 6B           	rtl
  4139                        ;    }
  4140                        	.line	357
  4141                        ;
  4142                        ;  /* Offset */
  4143                        ;  current_record->FileOffset = (DWORD) file_offse
                    t;
  4144                        L10168:
  4145                        	.line	360
  4146 09:7F63: A0 00 00     	ldy	#$0
  4147 09:7F66: A5 10        	lda	<L112+file_offset_0
  4148 09:7F68: 10 01        	bpl	L117
  4149 09:7F6A: 88           	dey
  4150                        L117:
  4151 09:7F6B: 85 01        	sta	<R0
  4152 09:7F6D: 84 03        	sty	<R0+2
  4153 09:7F6F: A5 01        	lda	<R0
  4154 09:7F71: 87 05        	sta	[<L113+current_record_1]
  4155 09:7F73: A5 03        	lda	<R0+2
  4156 09:7F75: A0 02 00     	ldy	#$2
  4157 09:7F78: 97 05        	sta	[<L113+current_record_1],Y
  4158                        ;  current_record->SegmentOffset = (DWORD) segment
                    _offset;
  4159                        	.line	361
  4160 09:7F7A: A0 00 00     	ldy	#$0
  4161 09:7F7D: A5 12        	lda	<L112+segment_offset_0
  4162 09:7F7F: 10 01        	bpl	L118
  4163 09:7F81: 88           	dey
  4164                        L118:
  4165 09:7F82: 85 01        	sta	<R0
  4166 09:7F84: 84 03        	sty	<R0+2
  4167 09:7F86: A5 01        	lda	<R0
  4168 09:7F88: A0 04 00     	ldy	#$4
  4169 09:7F8B: 97 05        	sta	[<L113+current_record_1],Y
  4170 09:7F8D: A5 03        	lda	<R0+2
  4171 09:7F8F: A0 06 00     	ldy	#$6
  4172 09:7F92: 97 05        	sta	[<L113+current_record_1],Y
  4173                        ;
  4174                        ;  /* Operation Code */
  4175                        ;  current_record->operation_code = data[0];
  Mon Sep 27 2021  9:39                                                Page 79


  4176                        	.line	364
  4177 09:7F94: E2 20        	sep	#$20
  4178                        	longa	off
  4179 09:7F96: A7 0C        	lda	[<L112+data_0]
  4180 09:7F98: A0 08 00     	ldy	#$8
  4181 09:7F9B: 97 05        	sta	[<L113+current_record_1],Y
  4182 09:7F9D: C2 20        	rep	#$20
  4183                        	longa	on
  4184                        ;
  4185                        ;  /* Renvoie la structure */
  4186                        ;  *record_length_rtn = 1;
  4187                        	.line	367
  4188 09:7F9F: A9 01 00     	lda	#$1
  4189 09:7FA2: 87 14        	sta	[<L112+record_length_rtn_0]
  4190                        ;  return(current_record);
  4191                        	.line	368
  4192 09:7FA4: A6 07        	ldx	<L113+current_record_1+2
  4193 09:7FA6: A5 05        	lda	<L113+current_record_1
  4194 09:7FA8: 82 A6 FF     	brl	L116
  4195                        ;}
  4196                        	.line	369
  4197                        	.endblock	369
  4198             00000008   L112	equ	8
  4199             00000005   L113	equ	5
  4200 09:7FAB:              	ends
  4201                        	efunc
  4202                        	.endfunc	369,5,8
  4203                        	.line	369
  4204                        ;
  4205                        ;
  4206                        ;/************************************************
                    *****/
  4207                        ;/*  DecodeRecordCONST() :  Décodage du Record CON
                    ST. */
  4208                        ;/************************************************
                    *****/
  4209                        ;static void *DecodeRecordCONST(unsigned char *dat
                    a, int file_offset, int segment_offset, int *record_length_r
                    tn)
  4210                        ;{
  4211                        	.line	375
  4212                        	.line	376
  4213                        	LOADER
  4214                        	func
  4215                        	.function	376
  4216                        ~~DecodeRecordCONST:
  4217                        	longa	on
  4218                        	longi	on
  4219 09:7FAB: 3B           	tsc
  4220 09:7FAC: 38           	sec
  4221 09:7FAD: E9 08 00     	sbc	#L119
  4222 09:7FB0: 1B           	tcs
  4223 09:7FB1: 0B           	phd
  4224 09:7FB2: 5B           	tcd
  4225             00000004   data_0	set	4
  4226             00000008   file_offset_0	set	8
  4227             0000000A   segment_offset_0	set	10
  4228             0000000C   record_length_rtn_0	set	12
  Mon Sep 27 2021  9:39                                                Page 80


  4229                        	.block	376
  4230                        ;  struct record_CONST *current_record;
  4231                        ;
  4232                        ;  /* Allocation mémoire */
  4233                        ;  current_record = (struct record_CONST *) k_call
                    oc(1,sizeof(struct record_CONST));
  4234             00000000   current_record_1	set	0
  4235                        	.sym	current_record,0,138,1,32,57
  4236                        	.sym	data,4,142,6,32
  4237                        	.sym	file_offset,8,5,6,16
  4238                        	.sym	segment_offset,10,5,6,16
  4239                        	.sym	record_length_rtn,12,133,6,32
  4240                        	.line	380
  4241 09:7FB3: F4 0E 00     	pea	#<$e
  4242 09:7FB6: F4 01 00     	pea	#<$1
  4243 09:7FB9: 22 xx xx xx  	jsl	~~k_calloc
  4244 09:7FBD: 85 05        	sta	<L120+current_record_1
  4245 09:7FBF: 86 07        	stx	<L120+current_record_1+2
  4246                        ;  if(current_record == NULL)
  4247                        	.line	381
  4248                        ;    {
  4249 09:7FC1: A5 05        	lda	<L120+current_record_1
  4250 09:7FC3: 05 07        	ora	<L120+current_record_1+2
  4251 09:7FC5: F0 03        	beq	L122
  4252 09:7FC7: 82 19 00     	brl	L10169
  4253                        L122:
  4254                        	.line	382
  4255                        ;      //printf("Error : Impossible to allocate me
                    mory to process Segment Body Record.\n");
  4256                        ;      return(NULL);
  4257                        	.line	384
  4258 09:7FCA: A9 00 00     	lda	#$0
  4259 09:7FCD: AA           	tax
  4260 09:7FCE: A9 00 00     	lda	#$0
  4261                        L123:
  4262 09:7FD1: A8           	tay
  4263 09:7FD2: A5 0A        	lda	<L119+2
  4264 09:7FD4: 85 16        	sta	<L119+2+12
  4265 09:7FD6: A5 09        	lda	<L119+1
  4266 09:7FD8: 85 15        	sta	<L119+1+12
  4267 09:7FDA: 2B           	pld
  4268 09:7FDB: 3B           	tsc
  4269 09:7FDC: 18           	clc
  4270 09:7FDD: 69 14 00     	adc	#L119+12
  4271 09:7FE0: 1B           	tcs
  4272 09:7FE1: 98           	tya
  4273 09:7FE2: 6B           	rtl
  4274                        ;    }
  4275                        	.line	385
  4276                        ;
  4277                        ;  /* Offset */
  4278                        ;  current_record->FileOffset = (DWORD) file_offse
                    t;
  4279                        L10169:
  4280                        	.line	388
  4281 09:7FE3: A0 00 00     	ldy	#$0
  4282 09:7FE6: A5 10        	lda	<L119+file_offset_0
  4283 09:7FE8: 10 01        	bpl	L124
  Mon Sep 27 2021  9:39                                                Page 81


  4284 09:7FEA: 88           	dey
  4285                        L124:
  4286 09:7FEB: 85 01        	sta	<R0
  4287 09:7FED: 84 03        	sty	<R0+2
  4288 09:7FEF: A5 01        	lda	<R0
  4289 09:7FF1: 87 05        	sta	[<L120+current_record_1]
  4290 09:7FF3: A5 03        	lda	<R0+2
  4291 09:7FF5: A0 02 00     	ldy	#$2
  4292 09:7FF8: 97 05        	sta	[<L120+current_record_1],Y
  4293                        ;  current_record->SegmentOffset = (DWORD) segment
                    _offset;
  4294                        	.line	389
  4295 09:7FFA: A0 00 00     	ldy	#$0
  4296 09:7FFD: A5 12        	lda	<L119+segment_offset_0
  4297 09:7FFF: 10 01        	bpl	L125
  4298 09:8001: 88           	dey
  4299                        L125:
  4300 09:8002: 85 01        	sta	<R0
  4301 09:8004: 84 03        	sty	<R0+2
  4302 09:8006: A5 01        	lda	<R0
  4303 09:8008: A0 04 00     	ldy	#$4
  4304 09:800B: 97 05        	sta	[<L120+current_record_1],Y
  4305 09:800D: A5 03        	lda	<R0+2
  4306 09:800F: A0 06 00     	ldy	#$6
  4307 09:8012: 97 05        	sta	[<L120+current_record_1],Y
  4308                        ;
  4309                        ;  /* Operation Code : 0x01 - 0xDF */
  4310                        ;  current_record->operation_code = data[0];
  4311                        	.line	392
  4312 09:8014: E2 20        	sep	#$20
  4313                        	longa	off
  4314 09:8016: A7 0C        	lda	[<L119+data_0]
  4315 09:8018: A0 08 00     	ldy	#$8
  4316 09:801B: 97 05        	sta	[<L120+current_record_1],Y
  4317 09:801D: C2 20        	rep	#$20
  4318                        	longa	on
  4319                        ;
  4320                        ;  /** Zone de Data qui n'a pas besoin d'être relo
                    gée **/
  4321                        ;  current_record->ByteCnt = data[0];
  4322                        	.line	395
  4323 09:801F: E2 20        	sep	#$20
  4324                        	longa	off
  4325 09:8021: A7 0C        	lda	[<L119+data_0]
  4326 09:8023: A0 09 00     	ldy	#$9
  4327 09:8026: 97 05        	sta	[<L120+current_record_1],Y
  4328 09:8028: C2 20        	rep	#$20
  4329                        	longa	on
  4330                        ;
  4331                        ;  /* Allocation mémoire */
  4332                        ;  current_record->data = (unsigned char *) k_call
                    oc(current_record->ByteCnt,sizeof(unsigned char));
  4333                        	.line	398
  4334 09:802A: F4 01 00     	pea	#<$1
  4335 09:802D: A0 09 00     	ldy	#$9
  4336 09:8030: B7 05        	lda	[<L120+current_record_1],Y
  4337 09:8032: 29 FF 00     	and	#$ff
  4338 09:8035: 48           	pha
  Mon Sep 27 2021  9:39                                                Page 82


  4339 09:8036: 22 xx xx xx  	jsl	~~k_calloc
  4340 09:803A: 85 01        	sta	<R0
  4341 09:803C: 86 03        	stx	<R0+2
  4342 09:803E: A5 01        	lda	<R0
  4343 09:8040: A0 0A 00     	ldy	#$a
  4344 09:8043: 97 05        	sta	[<L120+current_record_1],Y
  4345 09:8045: A5 03        	lda	<R0+2
  4346 09:8047: A0 0C 00     	ldy	#$c
  4347 09:804A: 97 05        	sta	[<L120+current_record_1],Y
  4348                        ;  if(current_record->data == NULL)
  4349                        	.line	399
  4350                        ;    {
  4351 09:804C: A0 0A 00     	ldy	#$a
  4352 09:804F: B7 05        	lda	[<L120+current_record_1],Y
  4353 09:8051: A0 0C 00     	ldy	#$c
  4354 09:8054: 17 05        	ora	[<L120+current_record_1],Y
  4355 09:8056: F0 03        	beq	L126
  4356 09:8058: 82 12 00     	brl	L10170
  4357                        L126:
  4358                        	.line	400
  4359                        ;      //printf("Error : Impossible to allocate me
                    mory to process Segment Body Record LCONST : %d bytes requir
                    ed.\n",current_record->ByteCnt);
  4360                        ;      mem_free_CONST(current_record);
  4361                        	.line	402
  4362 09:805B: D4 07        	pei	<L120+current_record_1+2
  4363 09:805D: D4 05        	pei	<L120+current_record_1
  4364 09:805F: 22 56 AD 09  	jsl	~~mem_free_CONST
  4365                        ;      return(NULL);
  4366                        	.line	403
  4367 09:8063: A9 00 00     	lda	#$0
  4368 09:8066: AA           	tax
  4369 09:8067: A9 00 00     	lda	#$0
  4370 09:806A: 82 64 FF     	brl	L123
  4371                        ;    }
  4372                        	.line	404
  4373                        ;  
  4374                        ;  /* Copie les Data */
  4375                        ;  memcpy(current_record->data,&data[1],current_re
                    cord->ByteCnt);
  4376                        L10170:
  4377                        	.line	407
  4378 09:806D: A0 09 00     	ldy	#$9
  4379 09:8070: B7 05        	lda	[<L120+current_record_1],Y
  4380 09:8072: 29 FF 00     	and	#$ff
  4381 09:8075: 48           	pha
  4382 09:8076: 18           	clc
  4383 09:8077: A9 01 00     	lda	#$1
  4384 09:807A: 65 0C        	adc	<L119+data_0
  4385 09:807C: 85 01        	sta	<R0
  4386 09:807E: A9 00 00     	lda	#$0
  4387 09:8081: 65 0E        	adc	<L119+data_0+2
  4388 09:8083: 85 03        	sta	<R0+2
  4389 09:8085: D4 03        	pei	<R0+2
  4390 09:8087: D4 01        	pei	<R0
  4391 09:8089: A0 0C 00     	ldy	#$c
  4392 09:808C: B7 05        	lda	[<L120+current_record_1],Y
  4393 09:808E: 48           	pha
  Mon Sep 27 2021  9:39                                                Page 83


  4394 09:808F: A0 0A 00     	ldy	#$a
  4395 09:8092: B7 05        	lda	[<L120+current_record_1],Y
  4396 09:8094: 48           	pha
  4397 09:8095: 22 xx xx xx  	jsl	~~memcpy
  4398                        ;
  4399                        ;  /* Renvoie la structure */
  4400                        ;  *record_length_rtn = 1 + current_record->ByteCn
                    t;
  4401                        	.line	410
  4402 09:8099: A0 09 00     	ldy	#$9
  4403 09:809C: B7 05        	lda	[<L120+current_record_1],Y
  4404 09:809E: 29 FF 00     	and	#$ff
  4405 09:80A1: 85 01        	sta	<R0
  4406 09:80A3: A5 01        	lda	<R0
  4407 09:80A5: 1A           	ina
  4408 09:80A6: 87 14        	sta	[<L119+record_length_rtn_0]
  4409                        ;  return(current_record);
  4410                        	.line	411
  4411 09:80A8: A6 07        	ldx	<L120+current_record_1+2
  4412 09:80AA: A5 05        	lda	<L120+current_record_1
  4413 09:80AC: 82 22 FF     	brl	L123
  4414                        ;}
  4415                        	.line	412
  4416                        	.endblock	412
  4417             00000008   L119	equ	8
  4418             00000005   L120	equ	5
  4419 09:80AF:              	ends
  4420                        	efunc
  4421                        	.endfunc	412,5,8
  4422                        	.line	412
  4423                        ;
  4424                        ;
  4425                        ;/************************************************
                    *****/
  4426                        ;/*  DecodeRecordALIGN() :  Décodage du Record ALI
                    GN. */
  4427                        ;/************************************************
                    *****/
  4428                        ;static void *DecodeRecordALIGN(unsigned char *dat
                    a, int file_offset, int segment_offset, int *record_length_r
                    tn)
  4429                        ;{
  4430                        	.line	418
  4431                        	.line	419
  4432                        	LOADER
  4433                        	func
  4434                        	.function	419
  4435                        ~~DecodeRecordALIGN:
  4436                        	longa	on
  4437                        	longi	on
  4438 09:80AF: 3B           	tsc
  4439 09:80B0: 38           	sec
  4440 09:80B1: E9 08 00     	sbc	#L127
  4441 09:80B4: 1B           	tcs
  4442 09:80B5: 0B           	phd
  4443 09:80B6: 5B           	tcd
  4444             00000004   data_0	set	4
  4445             00000008   file_offset_0	set	8
  Mon Sep 27 2021  9:39                                                Page 84


  4446             0000000A   segment_offset_0	set	10
  4447             0000000C   record_length_rtn_0	set	12
  4448                        	.block	419
  4449                        ;  struct record_ALIGN *current_record;
  4450                        ;
  4451                        ;  /* Allocation mémoire */
  4452                        ;  current_record = (struct record_ALIGN *) k_call
                    oc(1,sizeof(struct record_ALIGN));
  4453             00000000   current_record_1	set	0
  4454                        	.sym	current_record,0,138,1,32,58
  4455                        	.sym	data,4,142,6,32
  4456                        	.sym	file_offset,8,5,6,16
  4457                        	.sym	segment_offset,10,5,6,16
  4458                        	.sym	record_length_rtn,12,133,6,32
  4459                        	.line	423
  4460 09:80B7: F4 09 00     	pea	#<$9
  4461 09:80BA: F4 01 00     	pea	#<$1
  4462 09:80BD: 22 xx xx xx  	jsl	~~k_calloc
  4463 09:80C1: 85 05        	sta	<L128+current_record_1
  4464 09:80C3: 86 07        	stx	<L128+current_record_1+2
  4465                        ;  if(current_record == NULL)
  4466                        	.line	424
  4467                        ;    {
  4468 09:80C5: A5 05        	lda	<L128+current_record_1
  4469 09:80C7: 05 07        	ora	<L128+current_record_1+2
  4470 09:80C9: F0 03        	beq	L130
  4471 09:80CB: 82 19 00     	brl	L10171
  4472                        L130:
  4473                        	.line	425
  4474                        ;      //printf("Error : Impossible to allocate me
                    mory to process Segment Body Record.\n");
  4475                        ;      return(NULL);
  4476                        	.line	427
  4477 09:80CE: A9 00 00     	lda	#$0
  4478 09:80D1: AA           	tax
  4479 09:80D2: A9 00 00     	lda	#$0
  4480                        L131:
  4481 09:80D5: A8           	tay
  4482 09:80D6: A5 0A        	lda	<L127+2
  4483 09:80D8: 85 16        	sta	<L127+2+12
  4484 09:80DA: A5 09        	lda	<L127+1
  4485 09:80DC: 85 15        	sta	<L127+1+12
  4486 09:80DE: 2B           	pld
  4487 09:80DF: 3B           	tsc
  4488 09:80E0: 18           	clc
  4489 09:80E1: 69 14 00     	adc	#L127+12
  4490 09:80E4: 1B           	tcs
  4491 09:80E5: 98           	tya
  4492 09:80E6: 6B           	rtl
  4493                        ;    }
  4494                        	.line	428
  4495                        ;
  4496                        ;  /* Offset */
  4497                        ;  current_record->FileOffset = (DWORD) file_offse
                    t;
  4498                        L10171:
  4499                        	.line	431
  4500 09:80E7: A0 00 00     	ldy	#$0
  Mon Sep 27 2021  9:39                                                Page 85


  4501 09:80EA: A5 10        	lda	<L127+file_offset_0
  4502 09:80EC: 10 01        	bpl	L132
  4503 09:80EE: 88           	dey
  4504                        L132:
  4505 09:80EF: 85 01        	sta	<R0
  4506 09:80F1: 84 03        	sty	<R0+2
  4507 09:80F3: A5 01        	lda	<R0
  4508 09:80F5: 87 05        	sta	[<L128+current_record_1]
  4509 09:80F7: A5 03        	lda	<R0+2
  4510 09:80F9: A0 02 00     	ldy	#$2
  4511 09:80FC: 97 05        	sta	[<L128+current_record_1],Y
  4512                        ;  current_record->SegmentOffset = (DWORD) segment
                    _offset;
  4513                        	.line	432
  4514 09:80FE: A0 00 00     	ldy	#$0
  4515 09:8101: A5 12        	lda	<L127+segment_offset_0
  4516 09:8103: 10 01        	bpl	L133
  4517 09:8105: 88           	dey
  4518                        L133:
  4519 09:8106: 85 01        	sta	<R0
  4520 09:8108: 84 03        	sty	<R0+2
  4521 09:810A: A5 01        	lda	<R0
  4522 09:810C: A0 04 00     	ldy	#$4
  4523 09:810F: 97 05        	sta	[<L128+current_record_1],Y
  4524 09:8111: A5 03        	lda	<R0+2
  4525 09:8113: A0 06 00     	ldy	#$6
  4526 09:8116: 97 05        	sta	[<L128+current_record_1],Y
  4527                        ;
  4528                        ;  /* Operation Code */
  4529                        ;  current_record->operation_code = data[0];
  4530                        	.line	435
  4531 09:8118: E2 20        	sep	#$20
  4532                        	longa	off
  4533 09:811A: A7 0C        	lda	[<L127+data_0]
  4534 09:811C: A0 08 00     	ldy	#$8
  4535 09:811F: 97 05        	sta	[<L128+current_record_1],Y
  4536 09:8121: C2 20        	rep	#$20
  4537                        	longa	on
  4538                        ;
  4539                        ;  /* Renvoie la structure */
  4540                        ;  return(current_record);
  4541                        	.line	438
  4542 09:8123: A6 07        	ldx	<L128+current_record_1+2
  4543 09:8125: A5 05        	lda	<L128+current_record_1
  4544 09:8127: 82 AB FF     	brl	L131
  4545                        ;}
  4546                        	.line	439
  4547                        	.endblock	439
  4548             00000008   L127	equ	8
  4549             00000005   L128	equ	5
  4550 09:812A:              	ends
  4551                        	efunc
  4552                        	.endfunc	439,5,8
  4553                        	.line	439
  4554                        ;
  4555                        ;
  4556                        ;/************************************************
                    */
  Mon Sep 27 2021  9:39                                                Page 86


  4557                        ;/*  DecodeRecordORG() :  Décodage du Record ORG. 
                    */
  4558                        ;/************************************************
                    */
  4559                        ;static void *DecodeRecordORG(unsigned char *data,
                     int file_offset, int segment_offset, int *record_length_rtn
                    )
  4560                        ;{  
  4561                        	.line	445
  4562                        	.line	446
  4563                        	LOADER
  4564                        	func
  4565                        	.function	446
  4566                        ~~DecodeRecordORG:
  4567                        	longa	on
  4568                        	longi	on
  4569 09:812A: 3B           	tsc
  4570 09:812B: 38           	sec
  4571 09:812C: E9 08 00     	sbc	#L134
  4572 09:812F: 1B           	tcs
  4573 09:8130: 0B           	phd
  4574 09:8131: 5B           	tcd
  4575             00000004   data_0	set	4
  4576             00000008   file_offset_0	set	8
  4577             0000000A   segment_offset_0	set	10
  4578             0000000C   record_length_rtn_0	set	12
  4579                        	.block	446
  4580                        ;  struct record_ORG *current_record;
  4581                        ;
  4582                        ;  /* Allocation mémoire */
  4583                        ;  current_record = (struct record_ORG *) k_calloc
                    (1,sizeof(struct record_ORG));
  4584             00000000   current_record_1	set	0
  4585                        	.sym	current_record,0,138,1,32,59
  4586                        	.sym	data,4,142,6,32
  4587                        	.sym	file_offset,8,5,6,16
  4588                        	.sym	segment_offset,10,5,6,16
  4589                        	.sym	record_length_rtn,12,133,6,32
  4590                        	.line	450
  4591 09:8132: F4 09 00     	pea	#<$9
  4592 09:8135: F4 01 00     	pea	#<$1
  4593 09:8138: 22 xx xx xx  	jsl	~~k_calloc
  4594 09:813C: 85 05        	sta	<L135+current_record_1
  4595 09:813E: 86 07        	stx	<L135+current_record_1+2
  4596                        ;  if(current_record == NULL)
  4597                        	.line	451
  4598                        ;    {
  4599 09:8140: A5 05        	lda	<L135+current_record_1
  4600 09:8142: 05 07        	ora	<L135+current_record_1+2
  4601 09:8144: F0 03        	beq	L137
  4602 09:8146: 82 19 00     	brl	L10172
  4603                        L137:
  4604                        	.line	452
  4605                        ;      //printf("Error : Impossible to allocate me
                    mory to process Segment Body Record.\n");
  4606                        ;      return(NULL);
  4607                        	.line	454
  4608 09:8149: A9 00 00     	lda	#$0
  Mon Sep 27 2021  9:39                                                Page 87


  4609 09:814C: AA           	tax
  4610 09:814D: A9 00 00     	lda	#$0
  4611                        L138:
  4612 09:8150: A8           	tay
  4613 09:8151: A5 0A        	lda	<L134+2
  4614 09:8153: 85 16        	sta	<L134+2+12
  4615 09:8155: A5 09        	lda	<L134+1
  4616 09:8157: 85 15        	sta	<L134+1+12
  4617 09:8159: 2B           	pld
  4618 09:815A: 3B           	tsc
  4619 09:815B: 18           	clc
  4620 09:815C: 69 14 00     	adc	#L134+12
  4621 09:815F: 1B           	tcs
  4622 09:8160: 98           	tya
  4623 09:8161: 6B           	rtl
  4624                        ;    }
  4625                        	.line	455
  4626                        ;
  4627                        ;  /* Offset */
  4628                        ;  current_record->FileOffset = (DWORD) file_offse
                    t;
  4629                        L10172:
  4630                        	.line	458
  4631 09:8162: A0 00 00     	ldy	#$0
  4632 09:8165: A5 10        	lda	<L134+file_offset_0
  4633 09:8167: 10 01        	bpl	L139
  4634 09:8169: 88           	dey
  4635                        L139:
  4636 09:816A: 85 01        	sta	<R0
  4637 09:816C: 84 03        	sty	<R0+2
  4638 09:816E: A5 01        	lda	<R0
  4639 09:8170: 87 05        	sta	[<L135+current_record_1]
  4640 09:8172: A5 03        	lda	<R0+2
  4641 09:8174: A0 02 00     	ldy	#$2
  4642 09:8177: 97 05        	sta	[<L135+current_record_1],Y
  4643                        ;  current_record->SegmentOffset = (DWORD) segment
                    _offset;
  4644                        	.line	459
  4645 09:8179: A0 00 00     	ldy	#$0
  4646 09:817C: A5 12        	lda	<L134+segment_offset_0
  4647 09:817E: 10 01        	bpl	L140
  4648 09:8180: 88           	dey
  4649                        L140:
  4650 09:8181: 85 01        	sta	<R0
  4651 09:8183: 84 03        	sty	<R0+2
  4652 09:8185: A5 01        	lda	<R0
  4653 09:8187: A0 04 00     	ldy	#$4
  4654 09:818A: 97 05        	sta	[<L135+current_record_1],Y
  4655 09:818C: A5 03        	lda	<R0+2
  4656 09:818E: A0 06 00     	ldy	#$6
  4657 09:8191: 97 05        	sta	[<L135+current_record_1],Y
  4658                        ;
  4659                        ;  /* Operation Code */
  4660                        ;  current_record->operation_code = data[0];
  4661                        	.line	462
  4662 09:8193: E2 20        	sep	#$20
  4663                        	longa	off
  4664 09:8195: A7 0C        	lda	[<L134+data_0]
  Mon Sep 27 2021  9:39                                                Page 88


  4665 09:8197: A0 08 00     	ldy	#$8
  4666 09:819A: 97 05        	sta	[<L135+current_record_1],Y
  4667 09:819C: C2 20        	rep	#$20
  4668                        	longa	on
  4669                        ;
  4670                        ;  /* Renvoie la structure */
  4671                        ;  return(current_record);
  4672                        	.line	465
  4673 09:819E: A6 07        	ldx	<L135+current_record_1+2
  4674 09:81A0: A5 05        	lda	<L135+current_record_1
  4675 09:81A2: 82 AB FF     	brl	L138
  4676                        ;}
  4677                        	.line	466
  4678                        	.endblock	466
  4679             00000008   L134	equ	8
  4680             00000005   L135	equ	5
  4681 09:81A5:              	ends
  4682                        	efunc
  4683                        	.endfunc	466,5,8
  4684                        	.line	466
  4685                        ;
  4686                        ;
  4687                        ;/************************************************
                    *****/
  4688                        ;/*  DecodeRecordRELOC() :  Décodage du Record REL
                    OC. */
  4689                        ;/************************************************
                    *****/
  4690                        ;static void *DecodeRecordRELOC(unsigned char *dat
                    a, int file_offset, int segment_offset, int *record_length_r
                    tn)
  4691                        ;{
  4692                        	.line	472
  4693                        	.line	473
  4694                        	LOADER
  4695                        	func
  4696                        	.function	473
  4697                        ~~DecodeRecordRELOC:
  4698                        	longa	on
  4699                        	longi	on
  4700 09:81A5: 3B           	tsc
  4701 09:81A6: 38           	sec
  4702 09:81A7: E9 0C 00     	sbc	#L141
  4703 09:81AA: 1B           	tcs
  4704 09:81AB: 0B           	phd
  4705 09:81AC: 5B           	tcd
  4706             00000004   data_0	set	4
  4707             00000008   file_offset_0	set	8
  4708             0000000A   segment_offset_0	set	10
  4709             0000000C   record_length_rtn_0	set	12
  4710                        	.block	473
  4711                        ;  struct record_RELOC *current_record;
  4712                        ;
  4713                        ;  /* Allocation mémoire */
  4714                        ;  current_record = (struct record_RELOC *) k_call
                    oc(1,sizeof(struct record_RELOC));
  4715             00000000   current_record_1	set	0
  4716                        	.sym	current_record,0,138,1,32,60
  Mon Sep 27 2021  9:39                                                Page 89


  4717                        	.sym	data,4,142,6,32
  4718                        	.sym	file_offset,8,5,6,16
  4719                        	.sym	segment_offset,10,5,6,16
  4720                        	.sym	record_length_rtn,12,133,6,32
  4721                        	.line	477
  4722 09:81AD: F4 13 00     	pea	#<$13
  4723 09:81B0: F4 01 00     	pea	#<$1
  4724 09:81B3: 22 xx xx xx  	jsl	~~k_calloc
  4725 09:81B7: 85 09        	sta	<L142+current_record_1
  4726 09:81B9: 86 0B        	stx	<L142+current_record_1+2
  4727                        ;  if(current_record == NULL)
  4728                        	.line	478
  4729                        ;    {
  4730 09:81BB: A5 09        	lda	<L142+current_record_1
  4731 09:81BD: 05 0B        	ora	<L142+current_record_1+2
  4732 09:81BF: F0 03        	beq	L144
  4733 09:81C1: 82 19 00     	brl	L10173
  4734                        L144:
  4735                        	.line	479
  4736                        ;      //printf("Error : Impossible to allocate me
                    mory to process Segment Body Record.\n");
  4737                        ;      return(NULL);
  4738                        	.line	481
  4739 09:81C4: A9 00 00     	lda	#$0
  4740 09:81C7: AA           	tax
  4741 09:81C8: A9 00 00     	lda	#$0
  4742                        L145:
  4743 09:81CB: A8           	tay
  4744 09:81CC: A5 0E        	lda	<L141+2
  4745 09:81CE: 85 1A        	sta	<L141+2+12
  4746 09:81D0: A5 0D        	lda	<L141+1
  4747 09:81D2: 85 19        	sta	<L141+1+12
  4748 09:81D4: 2B           	pld
  4749 09:81D5: 3B           	tsc
  4750 09:81D6: 18           	clc
  4751 09:81D7: 69 18 00     	adc	#L141+12
  4752 09:81DA: 1B           	tcs
  4753 09:81DB: 98           	tya
  4754 09:81DC: 6B           	rtl
  4755                        ;    }
  4756                        	.line	482
  4757                        ;
  4758                        ;  /* Offset */
  4759                        ;  current_record->FileOffset = (DWORD) file_offse
                    t;
  4760                        L10173:
  4761                        	.line	485
  4762 09:81DD: A0 00 00     	ldy	#$0
  4763 09:81E0: A5 14        	lda	<L141+file_offset_0
  4764 09:81E2: 10 01        	bpl	L146
  4765 09:81E4: 88           	dey
  4766                        L146:
  4767 09:81E5: 85 01        	sta	<R0
  4768 09:81E7: 84 03        	sty	<R0+2
  4769 09:81E9: A5 01        	lda	<R0
  4770 09:81EB: 87 09        	sta	[<L142+current_record_1]
  4771 09:81ED: A5 03        	lda	<R0+2
  4772 09:81EF: A0 02 00     	ldy	#$2
  Mon Sep 27 2021  9:39                                                Page 90


  4773 09:81F2: 97 09        	sta	[<L142+current_record_1],Y
  4774                        ;  current_record->SegmentOffset = (DWORD) segment
                    _offset;
  4775                        	.line	486
  4776 09:81F4: A0 00 00     	ldy	#$0
  4777 09:81F7: A5 16        	lda	<L141+segment_offset_0
  4778 09:81F9: 10 01        	bpl	L147
  4779 09:81FB: 88           	dey
  4780                        L147:
  4781 09:81FC: 85 01        	sta	<R0
  4782 09:81FE: 84 03        	sty	<R0+2
  4783 09:8200: A5 01        	lda	<R0
  4784 09:8202: A0 04 00     	ldy	#$4
  4785 09:8205: 97 09        	sta	[<L142+current_record_1],Y
  4786 09:8207: A5 03        	lda	<R0+2
  4787 09:8209: A0 06 00     	ldy	#$6
  4788 09:820C: 97 09        	sta	[<L142+current_record_1],Y
  4789                        ;
  4790                        ;  /* Operation Code */
  4791                        ;  current_record->operation_code = data[0];
  4792                        	.line	489
  4793 09:820E: E2 20        	sep	#$20
  4794                        	longa	off
  4795 09:8210: A7 10        	lda	[<L141+data_0]
  4796 09:8212: A0 08 00     	ldy	#$8
  4797 09:8215: 97 09        	sta	[<L142+current_record_1],Y
  4798 09:8217: C2 20        	rep	#$20
  4799                        	longa	on
  4800                        ;
  4801                        ;  /* Récupère les données */
  4802                        ;  current_record->ByteCnt = data[1];
  4803                        	.line	492
  4804 09:8219: E2 20        	sep	#$20
  4805                        	longa	off
  4806 09:821B: A0 01 00     	ldy	#$1
  4807 09:821E: B7 10        	lda	[<L141+data_0],Y
  4808 09:8220: A0 09 00     	ldy	#$9
  4809 09:8223: 97 09        	sta	[<L142+current_record_1],Y
  4810 09:8225: C2 20        	rep	#$20
  4811                        	longa	on
  4812                        ;  current_record->BitShiftCnt = data[2];
  4813                        	.line	493
  4814 09:8227: E2 20        	sep	#$20
  4815                        	longa	off
  4816 09:8229: A0 02 00     	ldy	#$2
  4817 09:822C: B7 10        	lda	[<L141+data_0],Y
  4818 09:822E: A0 0A 00     	ldy	#$a
  4819 09:8231: 97 09        	sta	[<L142+current_record_1],Y
  4820 09:8233: C2 20        	rep	#$20
  4821                        	longa	on
  4822                        ;  memcpy(&current_record->OffsetPatch,&data[3],si
                    zeof(DWORD));
  4823                        	.line	494
  4824 09:8235: F4 04 00     	pea	#<$4
  4825 09:8238: 18           	clc
  4826 09:8239: A9 03 00     	lda	#$3
  4827 09:823C: 65 10        	adc	<L141+data_0
  4828 09:823E: 85 01        	sta	<R0
  Mon Sep 27 2021  9:39                                                Page 91


  4829 09:8240: A9 00 00     	lda	#$0
  4830 09:8243: 65 12        	adc	<L141+data_0+2
  4831 09:8245: 85 03        	sta	<R0+2
  4832 09:8247: D4 03        	pei	<R0+2
  4833 09:8249: D4 01        	pei	<R0
  4834 09:824B: 18           	clc
  4835 09:824C: A9 0B 00     	lda	#$b
  4836 09:824F: 65 09        	adc	<L142+current_record_1
  4837 09:8251: 85 05        	sta	<R1
  4838 09:8253: A9 00 00     	lda	#$0
  4839 09:8256: 65 0B        	adc	<L142+current_record_1+2
  4840 09:8258: 85 07        	sta	<R1+2
  4841 09:825A: D4 07        	pei	<R1+2
  4842 09:825C: D4 05        	pei	<R1
  4843 09:825E: 22 xx xx xx  	jsl	~~memcpy
  4844                        ;  memcpy(&current_record->OffsetReference,&data[7
                    ],sizeof(DWORD));
  4845                        	.line	495
  4846 09:8262: F4 04 00     	pea	#<$4
  4847 09:8265: 18           	clc
  4848 09:8266: A9 07 00     	lda	#$7
  4849 09:8269: 65 10        	adc	<L141+data_0
  4850 09:826B: 85 01        	sta	<R0
  4851 09:826D: A9 00 00     	lda	#$0
  4852 09:8270: 65 12        	adc	<L141+data_0+2
  4853 09:8272: 85 03        	sta	<R0+2
  4854 09:8274: D4 03        	pei	<R0+2
  4855 09:8276: D4 01        	pei	<R0
  4856 09:8278: 18           	clc
  4857 09:8279: A9 0F 00     	lda	#$f
  4858 09:827C: 65 09        	adc	<L142+current_record_1
  4859 09:827E: 85 05        	sta	<R1
  4860 09:8280: A9 00 00     	lda	#$0
  4861 09:8283: 65 0B        	adc	<L142+current_record_1+2
  4862 09:8285: 85 07        	sta	<R1+2
  4863 09:8287: D4 07        	pei	<R1+2
  4864 09:8289: D4 05        	pei	<R1
  4865 09:828B: 22 xx xx xx  	jsl	~~memcpy
  4866                        ;
  4867                        ;  /* Conserve ce RELOC */
  4868                        ;  AddReloc(current_record->ByteCnt,current_record
                    ->BitShiftCnt,current_record->OffsetPatch,current_record->Of
                    fsetReference,RECORD_RELOC);
  4869                        	.line	498
  4870 09:828F: F4 01 00     	pea	#<$1
  4871 09:8292: A0 11 00     	ldy	#$11
  4872 09:8295: B7 09        	lda	[<L142+current_record_1],Y
  4873 09:8297: 48           	pha
  4874 09:8298: A0 0F 00     	ldy	#$f
  4875 09:829B: B7 09        	lda	[<L142+current_record_1],Y
  4876 09:829D: 48           	pha
  4877 09:829E: A0 0D 00     	ldy	#$d
  4878 09:82A1: B7 09        	lda	[<L142+current_record_1],Y
  4879 09:82A3: 48           	pha
  4880 09:82A4: A0 0B 00     	ldy	#$b
  4881 09:82A7: B7 09        	lda	[<L142+current_record_1],Y
  4882 09:82A9: 48           	pha
  4883 09:82AA: A0 0A 00     	ldy	#$a
  Mon Sep 27 2021  9:39                                                Page 92


  4884 09:82AD: B7 09        	lda	[<L142+current_record_1],Y
  4885 09:82AF: 48           	pha
  4886 09:82B0: A0 09 00     	ldy	#$9
  4887 09:82B3: B7 09        	lda	[<L142+current_record_1],Y
  4888 09:82B5: 48           	pha
  4889 09:82B6: 22 33 AC 09  	jsl	~~AddReloc
  4890                        ;
  4891                        ;  /* Renvoie la structure */
  4892                        ;  *record_length_rtn = 3*sizeof(BYTE) + 2*sizeof(
                    DWORD);
  4893                        	.line	501
  4894 09:82BA: A9 0B 00     	lda	#$b
  4895 09:82BD: 87 18        	sta	[<L141+record_length_rtn_0]
  4896                        ;  return(current_record);
  4897                        	.line	502
  4898 09:82BF: A6 0B        	ldx	<L142+current_record_1+2
  4899 09:82C1: A5 09        	lda	<L142+current_record_1
  4900 09:82C3: 82 05 FF     	brl	L145
  4901                        ;}
  4902                        	.line	503
  4903                        	.endblock	503
  4904             0000000C   L141	equ	12
  4905             00000009   L142	equ	9
  4906 09:82C6:              	ends
  4907                        	efunc
  4908                        	.endfunc	503,9,12
  4909                        	.line	503
  4910                        ;
  4911                        ;
  4912                        ;/************************************************
                    ***********/
  4913                        ;/*  DecodeRecordINTERSEG() :  Décodage du Record 
                    INTERSEG. */
  4914                        ;/************************************************
                    ***********/
  4915                        ;static void *DecodeRecordINTERSEG(unsigned char *
                    data, int file_offset, int segment_offset, int *record_lengt
                    h_rtn)
  4916                        ;{
  4917                        	.line	509
  4918                        	.line	510
  4919                        	LOADER
  4920                        	func
  4921                        	.function	510
  4922                        ~~DecodeRecordINTERSEG:
  4923                        	longa	on
  4924                        	longi	on
  4925 09:82C6: 3B           	tsc
  4926 09:82C7: 38           	sec
  4927 09:82C8: E9 0C 00     	sbc	#L148
  4928 09:82CB: 1B           	tcs
  4929 09:82CC: 0B           	phd
  4930 09:82CD: 5B           	tcd
  4931             00000004   data_0	set	4
  4932             00000008   file_offset_0	set	8
  4933             0000000A   segment_offset_0	set	10
  4934             0000000C   record_length_rtn_0	set	12
  4935                        	.block	510
  Mon Sep 27 2021  9:39                                                Page 93


  4936                        ;  struct record_INTERSEG *current_record;
  4937                        ;
  4938                        ;  /* Allocation mémoire */
  4939                        ;  current_record = (struct record_INTERSEG *) k_c
                    alloc(1,sizeof(struct record_INTERSEG));
  4940             00000000   current_record_1	set	0
  4941                        	.sym	current_record,0,138,1,32,61
  4942                        	.sym	data,4,142,6,32
  4943                        	.sym	file_offset,8,5,6,16
  4944                        	.sym	segment_offset,10,5,6,16
  4945                        	.sym	record_length_rtn,12,133,6,32
  4946                        	.line	514
  4947 09:82CE: F4 17 00     	pea	#<$17
  4948 09:82D1: F4 01 00     	pea	#<$1
  4949 09:82D4: 22 xx xx xx  	jsl	~~k_calloc
  4950 09:82D8: 85 09        	sta	<L149+current_record_1
  4951 09:82DA: 86 0B        	stx	<L149+current_record_1+2
  4952                        ;  if(current_record == NULL)
  4953                        	.line	515
  4954                        ;    {
  4955 09:82DC: A5 09        	lda	<L149+current_record_1
  4956 09:82DE: 05 0B        	ora	<L149+current_record_1+2
  4957 09:82E0: F0 03        	beq	L151
  4958 09:82E2: 82 19 00     	brl	L10174
  4959                        L151:
  4960                        	.line	516
  4961                        ;      //printf("Error : Impossible to allocate me
                    mory to process Segment Body Record.\n");
  4962                        ;      return(NULL);
  4963                        	.line	518
  4964 09:82E5: A9 00 00     	lda	#$0
  4965 09:82E8: AA           	tax
  4966 09:82E9: A9 00 00     	lda	#$0
  4967                        L152:
  4968 09:82EC: A8           	tay
  4969 09:82ED: A5 0E        	lda	<L148+2
  4970 09:82EF: 85 1A        	sta	<L148+2+12
  4971 09:82F1: A5 0D        	lda	<L148+1
  4972 09:82F3: 85 19        	sta	<L148+1+12
  4973 09:82F5: 2B           	pld
  4974 09:82F6: 3B           	tsc
  4975 09:82F7: 18           	clc
  4976 09:82F8: 69 18 00     	adc	#L148+12
  4977 09:82FB: 1B           	tcs
  4978 09:82FC: 98           	tya
  4979 09:82FD: 6B           	rtl
  4980                        ;    }
  4981                        	.line	519
  4982                        ;
  4983                        ;  /* Offset */
  4984                        ;  current_record->FileOffset = (DWORD) file_offse
                    t;
  4985                        L10174:
  4986                        	.line	522
  4987 09:82FE: A0 00 00     	ldy	#$0
  4988 09:8301: A5 14        	lda	<L148+file_offset_0
  4989 09:8303: 10 01        	bpl	L153
  4990 09:8305: 88           	dey
  Mon Sep 27 2021  9:39                                                Page 94


  4991                        L153:
  4992 09:8306: 85 01        	sta	<R0
  4993 09:8308: 84 03        	sty	<R0+2
  4994 09:830A: A5 01        	lda	<R0
  4995 09:830C: 87 09        	sta	[<L149+current_record_1]
  4996 09:830E: A5 03        	lda	<R0+2
  4997 09:8310: A0 02 00     	ldy	#$2
  4998 09:8313: 97 09        	sta	[<L149+current_record_1],Y
  4999                        ;  current_record->SegmentOffset = (DWORD) segment
                    _offset;
  5000                        	.line	523
  5001 09:8315: A0 00 00     	ldy	#$0
  5002 09:8318: A5 16        	lda	<L148+segment_offset_0
  5003 09:831A: 10 01        	bpl	L154
  5004 09:831C: 88           	dey
  5005                        L154:
  5006 09:831D: 85 01        	sta	<R0
  5007 09:831F: 84 03        	sty	<R0+2
  5008 09:8321: A5 01        	lda	<R0
  5009 09:8323: A0 04 00     	ldy	#$4
  5010 09:8326: 97 09        	sta	[<L149+current_record_1],Y
  5011 09:8328: A5 03        	lda	<R0+2
  5012 09:832A: A0 06 00     	ldy	#$6
  5013 09:832D: 97 09        	sta	[<L149+current_record_1],Y
  5014                        ;
  5015                        ;  /* Operation Code */
  5016                        ;  current_record->operation_code = data[0];
  5017                        	.line	526
  5018 09:832F: E2 20        	sep	#$20
  5019                        	longa	off
  5020 09:8331: A7 10        	lda	[<L148+data_0]
  5021 09:8333: A0 08 00     	ldy	#$8
  5022 09:8336: 97 09        	sta	[<L149+current_record_1],Y
  5023 09:8338: C2 20        	rep	#$20
  5024                        	longa	on
  5025                        ;
  5026                        ;  /** Récupère les informations **/
  5027                        ;  current_record->ByteCnt = data[1];
  5028                        	.line	529
  5029 09:833A: E2 20        	sep	#$20
  5030                        	longa	off
  5031 09:833C: A0 01 00     	ldy	#$1
  5032 09:833F: B7 10        	lda	[<L148+data_0],Y
  5033 09:8341: A0 09 00     	ldy	#$9
  5034 09:8344: 97 09        	sta	[<L149+current_record_1],Y
  5035 09:8346: C2 20        	rep	#$20
  5036                        	longa	on
  5037                        ;  current_record->BitShiftCnt = data[2];
  5038                        	.line	530
  5039 09:8348: E2 20        	sep	#$20
  5040                        	longa	off
  5041 09:834A: A0 02 00     	ldy	#$2
  5042 09:834D: B7 10        	lda	[<L148+data_0],Y
  5043 09:834F: A0 0A 00     	ldy	#$a
  5044 09:8352: 97 09        	sta	[<L149+current_record_1],Y
  5045 09:8354: C2 20        	rep	#$20
  5046                        	longa	on
  5047                        ;  memcpy(&current_record->OffsetPatch,&data[3],si
  Mon Sep 27 2021  9:39                                                Page 95


                    zeof(DWORD));
  5048                        	.line	531
  5049 09:8356: F4 04 00     	pea	#<$4
  5050 09:8359: 18           	clc
  5051 09:835A: A9 03 00     	lda	#$3
  5052 09:835D: 65 10        	adc	<L148+data_0
  5053 09:835F: 85 01        	sta	<R0
  5054 09:8361: A9 00 00     	lda	#$0
  5055 09:8364: 65 12        	adc	<L148+data_0+2
  5056 09:8366: 85 03        	sta	<R0+2
  5057 09:8368: D4 03        	pei	<R0+2
  5058 09:836A: D4 01        	pei	<R0
  5059 09:836C: 18           	clc
  5060 09:836D: A9 0B 00     	lda	#$b
  5061 09:8370: 65 09        	adc	<L149+current_record_1
  5062 09:8372: 85 05        	sta	<R1
  5063 09:8374: A9 00 00     	lda	#$0
  5064 09:8377: 65 0B        	adc	<L149+current_record_1+2
  5065 09:8379: 85 07        	sta	<R1+2
  5066 09:837B: D4 07        	pei	<R1+2
  5067 09:837D: D4 05        	pei	<R1
  5068 09:837F: 22 xx xx xx  	jsl	~~memcpy
  5069                        ;  memcpy(&current_record->FileNum,&data[7],sizeof
                    (WORD));
  5070                        	.line	532
  5071 09:8383: F4 02 00     	pea	#<$2
  5072 09:8386: 18           	clc
  5073 09:8387: A9 07 00     	lda	#$7
  5074 09:838A: 65 10        	adc	<L148+data_0
  5075 09:838C: 85 01        	sta	<R0
  5076 09:838E: A9 00 00     	lda	#$0
  5077 09:8391: 65 12        	adc	<L148+data_0+2
  5078 09:8393: 85 03        	sta	<R0+2
  5079 09:8395: D4 03        	pei	<R0+2
  5080 09:8397: D4 01        	pei	<R0
  5081 09:8399: 18           	clc
  5082 09:839A: A9 0F 00     	lda	#$f
  5083 09:839D: 65 09        	adc	<L149+current_record_1
  5084 09:839F: 85 05        	sta	<R1
  5085 09:83A1: A9 00 00     	lda	#$0
  5086 09:83A4: 65 0B        	adc	<L149+current_record_1+2
  5087 09:83A6: 85 07        	sta	<R1+2
  5088 09:83A8: D4 07        	pei	<R1+2
  5089 09:83AA: D4 05        	pei	<R1
  5090 09:83AC: 22 xx xx xx  	jsl	~~memcpy
  5091                        ;  memcpy(&current_record->SegNum,&data[9],sizeof(
                    WORD));
  5092                        	.line	533
  5093 09:83B0: F4 02 00     	pea	#<$2
  5094 09:83B3: 18           	clc
  5095 09:83B4: A9 09 00     	lda	#$9
  5096 09:83B7: 65 10        	adc	<L148+data_0
  5097 09:83B9: 85 01        	sta	<R0
  5098 09:83BB: A9 00 00     	lda	#$0
  5099 09:83BE: 65 12        	adc	<L148+data_0+2
  5100 09:83C0: 85 03        	sta	<R0+2
  5101 09:83C2: D4 03        	pei	<R0+2
  5102 09:83C4: D4 01        	pei	<R0
  Mon Sep 27 2021  9:39                                                Page 96


  5103 09:83C6: 18           	clc
  5104 09:83C7: A9 11 00     	lda	#$11
  5105 09:83CA: 65 09        	adc	<L149+current_record_1
  5106 09:83CC: 85 05        	sta	<R1
  5107 09:83CE: A9 00 00     	lda	#$0
  5108 09:83D1: 65 0B        	adc	<L149+current_record_1+2
  5109 09:83D3: 85 07        	sta	<R1+2
  5110 09:83D5: D4 07        	pei	<R1+2
  5111 09:83D7: D4 05        	pei	<R1
  5112 09:83D9: 22 xx xx xx  	jsl	~~memcpy
  5113                        ;  memcpy(&current_record->OffsetReference,&data[1
                    1],sizeof(DWORD));
  5114                        	.line	534
  5115 09:83DD: F4 04 00     	pea	#<$4
  5116 09:83E0: 18           	clc
  5117 09:83E1: A9 0B 00     	lda	#$b
  5118 09:83E4: 65 10        	adc	<L148+data_0
  5119 09:83E6: 85 01        	sta	<R0
  5120 09:83E8: A9 00 00     	lda	#$0
  5121 09:83EB: 65 12        	adc	<L148+data_0+2
  5122 09:83ED: 85 03        	sta	<R0+2
  5123 09:83EF: D4 03        	pei	<R0+2
  5124 09:83F1: D4 01        	pei	<R0
  5125 09:83F3: 18           	clc
  5126 09:83F4: A9 13 00     	lda	#$13
  5127 09:83F7: 65 09        	adc	<L149+current_record_1
  5128 09:83F9: 85 05        	sta	<R1
  5129 09:83FB: A9 00 00     	lda	#$0
  5130 09:83FE: 65 0B        	adc	<L149+current_record_1+2
  5131 09:8400: 85 07        	sta	<R1+2
  5132 09:8402: D4 07        	pei	<R1+2
  5133 09:8404: D4 05        	pei	<R1
  5134 09:8406: 22 xx xx xx  	jsl	~~memcpy
  5135                        ;
  5136                        ;  /* Conserve ce INTERSEG */
  5137                        ;  AddInterseg(current_record->ByteCnt,current_rec
                    ord->BitShiftCnt,current_record->OffsetPatch,current_record-
                    >OffsetReference,current_record->FileNum,current_record->Seg
                    Num,RECORD_INTERSEG);
  5138                        	.line	537
  5139 09:840A: F4 02 00     	pea	#<$2
  5140 09:840D: A0 11 00     	ldy	#$11
  5141 09:8410: B7 09        	lda	[<L149+current_record_1],Y
  5142 09:8412: 48           	pha
  5143 09:8413: A0 0F 00     	ldy	#$f
  5144 09:8416: B7 09        	lda	[<L149+current_record_1],Y
  5145 09:8418: 48           	pha
  5146 09:8419: A0 15 00     	ldy	#$15
  5147 09:841C: B7 09        	lda	[<L149+current_record_1],Y
  5148 09:841E: 48           	pha
  5149 09:841F: A0 13 00     	ldy	#$13
  5150 09:8422: B7 09        	lda	[<L149+current_record_1],Y
  5151 09:8424: 48           	pha
  5152 09:8425: A0 0D 00     	ldy	#$d
  5153 09:8428: B7 09        	lda	[<L149+current_record_1],Y
  5154 09:842A: 48           	pha
  5155 09:842B: A0 0B 00     	ldy	#$b
  5156 09:842E: B7 09        	lda	[<L149+current_record_1],Y
  Mon Sep 27 2021  9:39                                                Page 97


  5157 09:8430: 48           	pha
  5158 09:8431: A0 0A 00     	ldy	#$a
  5159 09:8434: B7 09        	lda	[<L149+current_record_1],Y
  5160 09:8436: 48           	pha
  5161 09:8437: A0 09 00     	ldy	#$9
  5162 09:843A: B7 09        	lda	[<L149+current_record_1],Y
  5163 09:843C: 48           	pha
  5164 09:843D: 22 A9 AC 09  	jsl	~~AddInterseg
  5165                        ;
  5166                        ;  /* Renvoie la structure */
  5167                        ;  *record_length_rtn = 3*sizeof(BYTE) + 2*sizeof(
                    DWORD) + 2*sizeof(WORD);
  5168                        	.line	540
  5169 09:8441: A9 0F 00     	lda	#$f
  5170 09:8444: 87 18        	sta	[<L148+record_length_rtn_0]
  5171                        ;  return(current_record);
  5172                        	.line	541
  5173 09:8446: A6 0B        	ldx	<L149+current_record_1+2
  5174 09:8448: A5 09        	lda	<L149+current_record_1
  5175 09:844A: 82 9F FE     	brl	L152
  5176                        ;}
  5177                        	.line	542
  5178                        	.endblock	542
  5179             0000000C   L148	equ	12
  5180             00000009   L149	equ	9
  5181 09:844D:              	ends
  5182                        	efunc
  5183                        	.endfunc	542,9,12
  5184                        	.line	542
  5185                        ;
  5186                        ;
  5187                        ;/************************************************
                    *****/
  5188                        ;/*  DecodeRecordUSING() :  Décodage du Record USI
                    NG. */
  5189                        ;/************************************************
                    *****/
  5190                        ;static void *DecodeRecordUSING(unsigned char *dat
                    a, int file_offset, int segment_offset, int *record_length_r
                    tn)
  5191                        ;{
  5192                        	.line	548
  5193                        	.line	549
  5194                        	LOADER
  5195                        	func
  5196                        	.function	549
  5197                        ~~DecodeRecordUSING:
  5198                        	longa	on
  5199                        	longi	on
  5200 09:844D: 3B           	tsc
  5201 09:844E: 38           	sec
  5202 09:844F: E9 08 00     	sbc	#L155
  5203 09:8452: 1B           	tcs
  5204 09:8453: 0B           	phd
  5205 09:8454: 5B           	tcd
  5206             00000004   data_0	set	4
  5207             00000008   file_offset_0	set	8
  5208             0000000A   segment_offset_0	set	10
  Mon Sep 27 2021  9:39                                                Page 98


  5209             0000000C   record_length_rtn_0	set	12
  5210                        	.block	549
  5211                        ;  struct record_USING *current_record;
  5212                        ;
  5213                        ;  /* Allocation mémoire */
  5214                        ;  current_record = (struct record_USING *) k_call
                    oc(1,sizeof(struct record_USING));
  5215             00000000   current_record_1	set	0
  5216                        	.sym	current_record,0,138,1,32,62
  5217                        	.sym	data,4,142,6,32
  5218                        	.sym	file_offset,8,5,6,16
  5219                        	.sym	segment_offset,10,5,6,16
  5220                        	.sym	record_length_rtn,12,133,6,32
  5221                        	.line	553
  5222 09:8455: F4 09 00     	pea	#<$9
  5223 09:8458: F4 01 00     	pea	#<$1
  5224 09:845B: 22 xx xx xx  	jsl	~~k_calloc
  5225 09:845F: 85 05        	sta	<L156+current_record_1
  5226 09:8461: 86 07        	stx	<L156+current_record_1+2
  5227                        ;  if(current_record == NULL)
  5228                        	.line	554
  5229                        ;    {
  5230 09:8463: A5 05        	lda	<L156+current_record_1
  5231 09:8465: 05 07        	ora	<L156+current_record_1+2
  5232 09:8467: F0 03        	beq	L158
  5233 09:8469: 82 19 00     	brl	L10175
  5234                        L158:
  5235                        	.line	555
  5236                        ;      //printf("Error : Impossible to allocate me
                    mory to process Segment Body Record.\n");
  5237                        ;      return(NULL);
  5238                        	.line	557
  5239 09:846C: A9 00 00     	lda	#$0
  5240 09:846F: AA           	tax
  5241 09:8470: A9 00 00     	lda	#$0
  5242                        L159:
  5243 09:8473: A8           	tay
  5244 09:8474: A5 0A        	lda	<L155+2
  5245 09:8476: 85 16        	sta	<L155+2+12
  5246 09:8478: A5 09        	lda	<L155+1
  5247 09:847A: 85 15        	sta	<L155+1+12
  5248 09:847C: 2B           	pld
  5249 09:847D: 3B           	tsc
  5250 09:847E: 18           	clc
  5251 09:847F: 69 14 00     	adc	#L155+12
  5252 09:8482: 1B           	tcs
  5253 09:8483: 98           	tya
  5254 09:8484: 6B           	rtl
  5255                        ;    }
  5256                        	.line	558
  5257                        ;
  5258                        ;
  5259                        ;  /* Offset */
  5260                        ;  current_record->FileOffset = (DWORD) file_offse
                    t;
  5261                        L10175:
  5262                        	.line	562
  5263 09:8485: A0 00 00     	ldy	#$0
  Mon Sep 27 2021  9:39                                                Page 99


  5264 09:8488: A5 10        	lda	<L155+file_offset_0
  5265 09:848A: 10 01        	bpl	L160
  5266 09:848C: 88           	dey
  5267                        L160:
  5268 09:848D: 85 01        	sta	<R0
  5269 09:848F: 84 03        	sty	<R0+2
  5270 09:8491: A5 01        	lda	<R0
  5271 09:8493: 87 05        	sta	[<L156+current_record_1]
  5272 09:8495: A5 03        	lda	<R0+2
  5273 09:8497: A0 02 00     	ldy	#$2
  5274 09:849A: 97 05        	sta	[<L156+current_record_1],Y
  5275                        ;  current_record->SegmentOffset = (DWORD) segment
                    _offset;
  5276                        	.line	563
  5277 09:849C: A0 00 00     	ldy	#$0
  5278 09:849F: A5 12        	lda	<L155+segment_offset_0
  5279 09:84A1: 10 01        	bpl	L161
  5280 09:84A3: 88           	dey
  5281                        L161:
  5282 09:84A4: 85 01        	sta	<R0
  5283 09:84A6: 84 03        	sty	<R0+2
  5284 09:84A8: A5 01        	lda	<R0
  5285 09:84AA: A0 04 00     	ldy	#$4
  5286 09:84AD: 97 05        	sta	[<L156+current_record_1],Y
  5287 09:84AF: A5 03        	lda	<R0+2
  5288 09:84B1: A0 06 00     	ldy	#$6
  5289 09:84B4: 97 05        	sta	[<L156+current_record_1],Y
  5290                        ;
  5291                        ;  /* Operation Code */
  5292                        ;  current_record->operation_code = data[0];
  5293                        	.line	566
  5294 09:84B6: E2 20        	sep	#$20
  5295                        	longa	off
  5296 09:84B8: A7 0C        	lda	[<L155+data_0]
  5297 09:84BA: A0 08 00     	ldy	#$8
  5298 09:84BD: 97 05        	sta	[<L156+current_record_1],Y
  5299 09:84BF: C2 20        	rep	#$20
  5300                        	longa	on
  5301                        ;
  5302                        ;  /* Renvoie la structure */
  5303                        ;  return(current_record);
  5304                        	.line	569
  5305 09:84C1: A6 07        	ldx	<L156+current_record_1+2
  5306 09:84C3: A5 05        	lda	<L156+current_record_1
  5307 09:84C5: 82 AB FF     	brl	L159
  5308                        ;}
  5309                        	.line	570
  5310                        	.endblock	570
  5311             00000008   L155	equ	8
  5312             00000005   L156	equ	5
  5313 09:84C8:              	ends
  5314                        	efunc
  5315                        	.endfunc	570,5,8
  5316                        	.line	570
  5317                        ;
  5318                        ;  
  5319                        ;/************************************************
                    *******/
  Mon Sep 27 2021  9:39                                                Page 100


  5320                        ;/*  DecodeRecordSTRONG() :  Décodage du Record ST
                    RONG. */
  5321                        ;/************************************************
                    *******/
  5322                        ;static void *DecodeRecordSTRONG(unsigned char *da
                    ta, int file_offset, int segment_offset, int *record_length_
                    rtn)
  5323                        ;{
  5324                        	.line	576
  5325                        	.line	577
  5326                        	LOADER
  5327                        	func
  5328                        	.function	577
  5329                        ~~DecodeRecordSTRONG:
  5330                        	longa	on
  5331                        	longi	on
  5332 09:84C8: 3B           	tsc
  5333 09:84C9: 38           	sec
  5334 09:84CA: E9 08 00     	sbc	#L162
  5335 09:84CD: 1B           	tcs
  5336 09:84CE: 0B           	phd
  5337 09:84CF: 5B           	tcd
  5338             00000004   data_0	set	4
  5339             00000008   file_offset_0	set	8
  5340             0000000A   segment_offset_0	set	10
  5341             0000000C   record_length_rtn_0	set	12
  5342                        	.block	577
  5343                        ;  struct record_STRONG *current_record;
  5344                        ;
  5345                        ;  /* Allocation mémoire */
  5346                        ;  current_record = (struct record_STRONG *) k_cal
                    loc(1,sizeof(struct record_STRONG));
  5347             00000000   current_record_1	set	0
  5348                        	.sym	current_record,0,138,1,32,63
  5349                        	.sym	data,4,142,6,32
  5350                        	.sym	file_offset,8,5,6,16
  5351                        	.sym	segment_offset,10,5,6,16
  5352                        	.sym	record_length_rtn,12,133,6,32
  5353                        	.line	581
  5354 09:84D0: F4 09 00     	pea	#<$9
  5355 09:84D3: F4 01 00     	pea	#<$1
  5356 09:84D6: 22 xx xx xx  	jsl	~~k_calloc
  5357 09:84DA: 85 05        	sta	<L163+current_record_1
  5358 09:84DC: 86 07        	stx	<L163+current_record_1+2
  5359                        ;  if(current_record == NULL)
  5360                        	.line	582
  5361                        ;    {
  5362 09:84DE: A5 05        	lda	<L163+current_record_1
  5363 09:84E0: 05 07        	ora	<L163+current_record_1+2
  5364 09:84E2: F0 03        	beq	L165
  5365 09:84E4: 82 19 00     	brl	L10176
  5366                        L165:
  5367                        	.line	583
  5368                        ;      //printf("Error : Impossible to allocate me
                    mory to process Segment Body Record.\n");
  5369                        ;      return(NULL);
  5370                        	.line	585
  5371 09:84E7: A9 00 00     	lda	#$0
  Mon Sep 27 2021  9:39                                                Page 101


  5372 09:84EA: AA           	tax
  5373 09:84EB: A9 00 00     	lda	#$0
  5374                        L166:
  5375 09:84EE: A8           	tay
  5376 09:84EF: A5 0A        	lda	<L162+2
  5377 09:84F1: 85 16        	sta	<L162+2+12
  5378 09:84F3: A5 09        	lda	<L162+1
  5379 09:84F5: 85 15        	sta	<L162+1+12
  5380 09:84F7: 2B           	pld
  5381 09:84F8: 3B           	tsc
  5382 09:84F9: 18           	clc
  5383 09:84FA: 69 14 00     	adc	#L162+12
  5384 09:84FD: 1B           	tcs
  5385 09:84FE: 98           	tya
  5386 09:84FF: 6B           	rtl
  5387                        ;    }
  5388                        	.line	586
  5389                        ;
  5390                        ;  /* Offset */
  5391                        ;  current_record->FileOffset = (DWORD) file_offse
                    t;
  5392                        L10176:
  5393                        	.line	589
  5394 09:8500: A0 00 00     	ldy	#$0
  5395 09:8503: A5 10        	lda	<L162+file_offset_0
  5396 09:8505: 10 01        	bpl	L167
  5397 09:8507: 88           	dey
  5398                        L167:
  5399 09:8508: 85 01        	sta	<R0
  5400 09:850A: 84 03        	sty	<R0+2
  5401 09:850C: A5 01        	lda	<R0
  5402 09:850E: 87 05        	sta	[<L163+current_record_1]
  5403 09:8510: A5 03        	lda	<R0+2
  5404 09:8512: A0 02 00     	ldy	#$2
  5405 09:8515: 97 05        	sta	[<L163+current_record_1],Y
  5406                        ;  current_record->SegmentOffset = (DWORD) segment
                    _offset;
  5407                        	.line	590
  5408 09:8517: A0 00 00     	ldy	#$0
  5409 09:851A: A5 12        	lda	<L162+segment_offset_0
  5410 09:851C: 10 01        	bpl	L168
  5411 09:851E: 88           	dey
  5412                        L168:
  5413 09:851F: 85 01        	sta	<R0
  5414 09:8521: 84 03        	sty	<R0+2
  5415 09:8523: A5 01        	lda	<R0
  5416 09:8525: A0 04 00     	ldy	#$4
  5417 09:8528: 97 05        	sta	[<L163+current_record_1],Y
  5418 09:852A: A5 03        	lda	<R0+2
  5419 09:852C: A0 06 00     	ldy	#$6
  5420 09:852F: 97 05        	sta	[<L163+current_record_1],Y
  5421                        ;
  5422                        ;  /* Operation Code */
  5423                        ;  current_record->operation_code = data[0];
  5424                        	.line	593
  5425 09:8531: E2 20        	sep	#$20
  5426                        	longa	off
  5427 09:8533: A7 0C        	lda	[<L162+data_0]
  Mon Sep 27 2021  9:39                                                Page 102


  5428 09:8535: A0 08 00     	ldy	#$8
  5429 09:8538: 97 05        	sta	[<L163+current_record_1],Y
  5430 09:853A: C2 20        	rep	#$20
  5431                        	longa	on
  5432                        ;
  5433                        ;  /* Renvoie la structure */
  5434                        ;  return(current_record);
  5435                        	.line	596
  5436 09:853C: A6 07        	ldx	<L163+current_record_1+2
  5437 09:853E: A5 05        	lda	<L163+current_record_1
  5438 09:8540: 82 AB FF     	brl	L166
  5439                        ;}
  5440                        	.line	597
  5441                        	.endblock	597
  5442             00000008   L162	equ	8
  5443             00000005   L163	equ	5
  5444 09:8543:              	ends
  5445                        	efunc
  5446                        	.endfunc	597,5,8
  5447                        	.line	597
  5448                        ;
  5449                        ;
  5450                        ;/************************************************
                    *******/
  5451                        ;/*  DecodeRecordGLOBAL() :  Décodage du Record GL
                    OBAL. */
  5452                        ;/************************************************
                    *******/
  5453                        ;static void *DecodeRecordGLOBAL(unsigned char *da
                    ta, int file_offset, int segment_offset, int *record_length_
                    rtn)
  5454                        ;{
  5455                        	.line	603
  5456                        	.line	604
  5457                        	LOADER
  5458                        	func
  5459                        	.function	604
  5460                        ~~DecodeRecordGLOBAL:
  5461                        	longa	on
  5462                        	longi	on
  5463 09:8543: 3B           	tsc
  5464 09:8544: 38           	sec
  5465 09:8545: E9 08 00     	sbc	#L169
  5466 09:8548: 1B           	tcs
  5467 09:8549: 0B           	phd
  5468 09:854A: 5B           	tcd
  5469             00000004   data_0	set	4
  5470             00000008   file_offset_0	set	8
  5471             0000000A   segment_offset_0	set	10
  5472             0000000C   record_length_rtn_0	set	12
  5473                        	.block	604
  5474                        ;  struct record_GLOBAL *current_record;
  5475                        ;
  5476                        ;  /* Allocation mémoire */
  5477                        ;  current_record = (struct record_GLOBAL *) k_cal
                    loc(1,sizeof(struct record_GLOBAL));
  5478             00000000   current_record_1	set	0
  5479                        	.sym	current_record,0,138,1,32,64
  Mon Sep 27 2021  9:39                                                Page 103


  5480                        	.sym	data,4,142,6,32
  5481                        	.sym	file_offset,8,5,6,16
  5482                        	.sym	segment_offset,10,5,6,16
  5483                        	.sym	record_length_rtn,12,133,6,32
  5484                        	.line	608
  5485 09:854B: F4 09 00     	pea	#<$9
  5486 09:854E: F4 01 00     	pea	#<$1
  5487 09:8551: 22 xx xx xx  	jsl	~~k_calloc
  5488 09:8555: 85 05        	sta	<L170+current_record_1
  5489 09:8557: 86 07        	stx	<L170+current_record_1+2
  5490                        ;  if(current_record == NULL)
  5491                        	.line	609
  5492                        ;    {
  5493 09:8559: A5 05        	lda	<L170+current_record_1
  5494 09:855B: 05 07        	ora	<L170+current_record_1+2
  5495 09:855D: F0 03        	beq	L172
  5496 09:855F: 82 19 00     	brl	L10177
  5497                        L172:
  5498                        	.line	610
  5499                        ;      //printf("Error : Impossible to allocate me
                    mory to process Segment Body Record.\n");
  5500                        ;      return(NULL);
  5501                        	.line	612
  5502 09:8562: A9 00 00     	lda	#$0
  5503 09:8565: AA           	tax
  5504 09:8566: A9 00 00     	lda	#$0
  5505                        L173:
  5506 09:8569: A8           	tay
  5507 09:856A: A5 0A        	lda	<L169+2
  5508 09:856C: 85 16        	sta	<L169+2+12
  5509 09:856E: A5 09        	lda	<L169+1
  5510 09:8570: 85 15        	sta	<L169+1+12
  5511 09:8572: 2B           	pld
  5512 09:8573: 3B           	tsc
  5513 09:8574: 18           	clc
  5514 09:8575: 69 14 00     	adc	#L169+12
  5515 09:8578: 1B           	tcs
  5516 09:8579: 98           	tya
  5517 09:857A: 6B           	rtl
  5518                        ;    }
  5519                        	.line	613
  5520                        ;
  5521                        ;  /* Offset */
  5522                        ;  current_record->FileOffset = (DWORD) file_offse
                    t;
  5523                        L10177:
  5524                        	.line	616
  5525 09:857B: A0 00 00     	ldy	#$0
  5526 09:857E: A5 10        	lda	<L169+file_offset_0
  5527 09:8580: 10 01        	bpl	L174
  5528 09:8582: 88           	dey
  5529                        L174:
  5530 09:8583: 85 01        	sta	<R0
  5531 09:8585: 84 03        	sty	<R0+2
  5532 09:8587: A5 01        	lda	<R0
  5533 09:8589: 87 05        	sta	[<L170+current_record_1]
  5534 09:858B: A5 03        	lda	<R0+2
  5535 09:858D: A0 02 00     	ldy	#$2
  Mon Sep 27 2021  9:39                                                Page 104


  5536 09:8590: 97 05        	sta	[<L170+current_record_1],Y
  5537                        ;  current_record->SegmentOffset = (DWORD) segment
                    _offset;
  5538                        	.line	617
  5539 09:8592: A0 00 00     	ldy	#$0
  5540 09:8595: A5 12        	lda	<L169+segment_offset_0
  5541 09:8597: 10 01        	bpl	L175
  5542 09:8599: 88           	dey
  5543                        L175:
  5544 09:859A: 85 01        	sta	<R0
  5545 09:859C: 84 03        	sty	<R0+2
  5546 09:859E: A5 01        	lda	<R0
  5547 09:85A0: A0 04 00     	ldy	#$4
  5548 09:85A3: 97 05        	sta	[<L170+current_record_1],Y
  5549 09:85A5: A5 03        	lda	<R0+2
  5550 09:85A7: A0 06 00     	ldy	#$6
  5551 09:85AA: 97 05        	sta	[<L170+current_record_1],Y
  5552                        ;
  5553                        ;  /* Operation Code */
  5554                        ;  current_record->operation_code = data[0];
  5555                        	.line	620
  5556 09:85AC: E2 20        	sep	#$20
  5557                        	longa	off
  5558 09:85AE: A7 0C        	lda	[<L169+data_0]
  5559 09:85B0: A0 08 00     	ldy	#$8
  5560 09:85B3: 97 05        	sta	[<L170+current_record_1],Y
  5561 09:85B5: C2 20        	rep	#$20
  5562                        	longa	on
  5563                        ;
  5564                        ;  /* Renvoie la structure */
  5565                        ;  return(current_record);
  5566                        	.line	623
  5567 09:85B7: A6 07        	ldx	<L170+current_record_1+2
  5568 09:85B9: A5 05        	lda	<L170+current_record_1
  5569 09:85BB: 82 AB FF     	brl	L173
  5570                        ;}
  5571                        	.line	624
  5572                        	.endblock	624
  5573             00000008   L169	equ	8
  5574             00000005   L170	equ	5
  5575 09:85BE:              	ends
  5576                        	efunc
  5577                        	.endfunc	624,5,8
  5578                        	.line	624
  5579                        ;
  5580                        ;
  5581                        ;/************************************************
                    ***/
  5582                        ;/*  DecodeRecordGEQU() :  Décodage du Record GEQU
                    . */
  5583                        ;/************************************************
                    ***/
  5584                        ;static void *DecodeRecordGEQU(unsigned char *data
                    , int file_offset, int segment_offset, int *record_length_rt
                    n)
  5585                        ;{
  5586                        	.line	630
  5587                        	.line	631
  Mon Sep 27 2021  9:39                                                Page 105


  5588                        	LOADER
  5589                        	func
  5590                        	.function	631
  5591                        ~~DecodeRecordGEQU:
  5592                        	longa	on
  5593                        	longi	on
  5594 09:85BE: 3B           	tsc
  5595 09:85BF: 38           	sec
  5596 09:85C0: E9 08 00     	sbc	#L176
  5597 09:85C3: 1B           	tcs
  5598 09:85C4: 0B           	phd
  5599 09:85C5: 5B           	tcd
  5600             00000004   data_0	set	4
  5601             00000008   file_offset_0	set	8
  5602             0000000A   segment_offset_0	set	10
  5603             0000000C   record_length_rtn_0	set	12
  5604                        	.block	631
  5605                        ;  struct record_GEQU *current_record;
  5606                        ;
  5607                        ;  /* Allocation mémoire */
  5608                        ;  current_record = (struct record_GEQU *) k_callo
                    c(1,sizeof(struct record_GEQU));
  5609             00000000   current_record_1	set	0
  5610                        	.sym	current_record,0,138,1,32,65
  5611                        	.sym	data,4,142,6,32
  5612                        	.sym	file_offset,8,5,6,16
  5613                        	.sym	segment_offset,10,5,6,16
  5614                        	.sym	record_length_rtn,12,133,6,32
  5615                        	.line	635
  5616 09:85C6: F4 09 00     	pea	#<$9
  5617 09:85C9: F4 01 00     	pea	#<$1
  5618 09:85CC: 22 xx xx xx  	jsl	~~k_calloc
  5619 09:85D0: 85 05        	sta	<L177+current_record_1
  5620 09:85D2: 86 07        	stx	<L177+current_record_1+2
  5621                        ;  if(current_record == NULL)
  5622                        	.line	636
  5623                        ;    {
  5624 09:85D4: A5 05        	lda	<L177+current_record_1
  5625 09:85D6: 05 07        	ora	<L177+current_record_1+2
  5626 09:85D8: F0 03        	beq	L179
  5627 09:85DA: 82 19 00     	brl	L10178
  5628                        L179:
  5629                        	.line	637
  5630                        ;      //printf("Error : Impossible to allocate me
                    mory to process Segment Body Record.\n");
  5631                        ;      return(NULL);
  5632                        	.line	639
  5633 09:85DD: A9 00 00     	lda	#$0
  5634 09:85E0: AA           	tax
  5635 09:85E1: A9 00 00     	lda	#$0
  5636                        L180:
  5637 09:85E4: A8           	tay
  5638 09:85E5: A5 0A        	lda	<L176+2
  5639 09:85E7: 85 16        	sta	<L176+2+12
  5640 09:85E9: A5 09        	lda	<L176+1
  5641 09:85EB: 85 15        	sta	<L176+1+12
  5642 09:85ED: 2B           	pld
  5643 09:85EE: 3B           	tsc
  Mon Sep 27 2021  9:39                                                Page 106


  5644 09:85EF: 18           	clc
  5645 09:85F0: 69 14 00     	adc	#L176+12
  5646 09:85F3: 1B           	tcs
  5647 09:85F4: 98           	tya
  5648 09:85F5: 6B           	rtl
  5649                        ;    }
  5650                        	.line	640
  5651                        ;
  5652                        ;  /* Offset */
  5653                        ;  current_record->FileOffset = (DWORD) file_offse
                    t;
  5654                        L10178:
  5655                        	.line	643
  5656 09:85F6: A0 00 00     	ldy	#$0
  5657 09:85F9: A5 10        	lda	<L176+file_offset_0
  5658 09:85FB: 10 01        	bpl	L181
  5659 09:85FD: 88           	dey
  5660                        L181:
  5661 09:85FE: 85 01        	sta	<R0
  5662 09:8600: 84 03        	sty	<R0+2
  5663 09:8602: A5 01        	lda	<R0
  5664 09:8604: 87 05        	sta	[<L177+current_record_1]
  5665 09:8606: A5 03        	lda	<R0+2
  5666 09:8608: A0 02 00     	ldy	#$2
  5667 09:860B: 97 05        	sta	[<L177+current_record_1],Y
  5668                        ;  current_record->SegmentOffset = (DWORD) segment
                    _offset;
  5669                        	.line	644
  5670 09:860D: A0 00 00     	ldy	#$0
  5671 09:8610: A5 12        	lda	<L176+segment_offset_0
  5672 09:8612: 10 01        	bpl	L182
  5673 09:8614: 88           	dey
  5674                        L182:
  5675 09:8615: 85 01        	sta	<R0
  5676 09:8617: 84 03        	sty	<R0+2
  5677 09:8619: A5 01        	lda	<R0
  5678 09:861B: A0 04 00     	ldy	#$4
  5679 09:861E: 97 05        	sta	[<L177+current_record_1],Y
  5680 09:8620: A5 03        	lda	<R0+2
  5681 09:8622: A0 06 00     	ldy	#$6
  5682 09:8625: 97 05        	sta	[<L177+current_record_1],Y
  5683                        ;
  5684                        ;  /* Operation Code */
  5685                        ;  current_record->operation_code = data[0];
  5686                        	.line	647
  5687 09:8627: E2 20        	sep	#$20
  5688                        	longa	off
  5689 09:8629: A7 0C        	lda	[<L176+data_0]
  5690 09:862B: A0 08 00     	ldy	#$8
  5691 09:862E: 97 05        	sta	[<L177+current_record_1],Y
  5692 09:8630: C2 20        	rep	#$20
  5693                        	longa	on
  5694                        ;
  5695                        ;  /* Renvoie la structure */
  5696                        ;  return(current_record);
  5697                        	.line	650
  5698 09:8632: A6 07        	ldx	<L177+current_record_1+2
  5699 09:8634: A5 05        	lda	<L177+current_record_1
  Mon Sep 27 2021  9:39                                                Page 107


  5700 09:8636: 82 AB FF     	brl	L180
  5701                        ;}
  5702                        	.line	651
  5703                        	.endblock	651
  5704             00000008   L176	equ	8
  5705             00000005   L177	equ	5
  5706 09:8639:              	ends
  5707                        	efunc
  5708                        	.endfunc	651,5,8
  5709                        	.line	651
  5710                        ;
  5711                        ;
  5712                        ;/************************************************
                    */
  5713                        ;/*  DecodeRecordMEM() :  Décodage du Record MEM. 
                    */
  5714                        ;/************************************************
                    */
  5715                        ;static void *DecodeRecordMEM(unsigned char *data,
                     int file_offset, int segment_offset, int *record_length_rtn
                    )
  5716                        ;{
  5717                        	.line	657
  5718                        	.line	658
  5719                        	LOADER
  5720                        	func
  5721                        	.function	658
  5722                        ~~DecodeRecordMEM:
  5723                        	longa	on
  5724                        	longi	on
  5725 09:8639: 3B           	tsc
  5726 09:863A: 38           	sec
  5727 09:863B: E9 08 00     	sbc	#L183
  5728 09:863E: 1B           	tcs
  5729 09:863F: 0B           	phd
  5730 09:8640: 5B           	tcd
  5731             00000004   data_0	set	4
  5732             00000008   file_offset_0	set	8
  5733             0000000A   segment_offset_0	set	10
  5734             0000000C   record_length_rtn_0	set	12
  5735                        	.block	658
  5736                        ;  struct record_MEM *current_record;
  5737                        ;
  5738                        ;  /* Allocation mémoire */
  5739                        ;  current_record = (struct record_MEM *) k_calloc
                    (1,sizeof(struct record_MEM));
  5740             00000000   current_record_1	set	0
  5741                        	.sym	current_record,0,138,1,32,66
  5742                        	.sym	data,4,142,6,32
  5743                        	.sym	file_offset,8,5,6,16
  5744                        	.sym	segment_offset,10,5,6,16
  5745                        	.sym	record_length_rtn,12,133,6,32
  5746                        	.line	662
  5747 09:8641: F4 09 00     	pea	#<$9
  5748 09:8644: F4 01 00     	pea	#<$1
  5749 09:8647: 22 xx xx xx  	jsl	~~k_calloc
  5750 09:864B: 85 05        	sta	<L184+current_record_1
  5751 09:864D: 86 07        	stx	<L184+current_record_1+2
  Mon Sep 27 2021  9:39                                                Page 108


  5752                        ;  if(current_record == NULL)
  5753                        	.line	663
  5754                        ;    {
  5755 09:864F: A5 05        	lda	<L184+current_record_1
  5756 09:8651: 05 07        	ora	<L184+current_record_1+2
  5757 09:8653: F0 03        	beq	L186
  5758 09:8655: 82 19 00     	brl	L10179
  5759                        L186:
  5760                        	.line	664
  5761                        ;      //printf("Error : Impossible to allocate me
                    mory to process Segment Body Record.\n");
  5762                        ;      return(NULL);
  5763                        	.line	666
  5764 09:8658: A9 00 00     	lda	#$0
  5765 09:865B: AA           	tax
  5766 09:865C: A9 00 00     	lda	#$0
  5767                        L187:
  5768 09:865F: A8           	tay
  5769 09:8660: A5 0A        	lda	<L183+2
  5770 09:8662: 85 16        	sta	<L183+2+12
  5771 09:8664: A5 09        	lda	<L183+1
  5772 09:8666: 85 15        	sta	<L183+1+12
  5773 09:8668: 2B           	pld
  5774 09:8669: 3B           	tsc
  5775 09:866A: 18           	clc
  5776 09:866B: 69 14 00     	adc	#L183+12
  5777 09:866E: 1B           	tcs
  5778 09:866F: 98           	tya
  5779 09:8670: 6B           	rtl
  5780                        ;    }
  5781                        	.line	667
  5782                        ;
  5783                        ;  /* Offset */
  5784                        ;  current_record->FileOffset = (DWORD) file_offse
                    t;
  5785                        L10179:
  5786                        	.line	670
  5787 09:8671: A0 00 00     	ldy	#$0
  5788 09:8674: A5 10        	lda	<L183+file_offset_0
  5789 09:8676: 10 01        	bpl	L188
  5790 09:8678: 88           	dey
  5791                        L188:
  5792 09:8679: 85 01        	sta	<R0
  5793 09:867B: 84 03        	sty	<R0+2
  5794 09:867D: A5 01        	lda	<R0
  5795 09:867F: 87 05        	sta	[<L184+current_record_1]
  5796 09:8681: A5 03        	lda	<R0+2
  5797 09:8683: A0 02 00     	ldy	#$2
  5798 09:8686: 97 05        	sta	[<L184+current_record_1],Y
  5799                        ;  current_record->SegmentOffset = (DWORD) segment
                    _offset;
  5800                        	.line	671
  5801 09:8688: A0 00 00     	ldy	#$0
  5802 09:868B: A5 12        	lda	<L183+segment_offset_0
  5803 09:868D: 10 01        	bpl	L189
  5804 09:868F: 88           	dey
  5805                        L189:
  5806 09:8690: 85 01        	sta	<R0
  Mon Sep 27 2021  9:39                                                Page 109


  5807 09:8692: 84 03        	sty	<R0+2
  5808 09:8694: A5 01        	lda	<R0
  5809 09:8696: A0 04 00     	ldy	#$4
  5810 09:8699: 97 05        	sta	[<L184+current_record_1],Y
  5811 09:869B: A5 03        	lda	<R0+2
  5812 09:869D: A0 06 00     	ldy	#$6
  5813 09:86A0: 97 05        	sta	[<L184+current_record_1],Y
  5814                        ;
  5815                        ;  /* Operation Code */
  5816                        ;  current_record->operation_code = data[0];
  5817                        	.line	674
  5818 09:86A2: E2 20        	sep	#$20
  5819                        	longa	off
  5820 09:86A4: A7 0C        	lda	[<L183+data_0]
  5821 09:86A6: A0 08 00     	ldy	#$8
  5822 09:86A9: 97 05        	sta	[<L184+current_record_1],Y
  5823 09:86AB: C2 20        	rep	#$20
  5824                        	longa	on
  5825                        ;
  5826                        ;  /* Renvoie la structure */
  5827                        ;  return(current_record);
  5828                        	.line	677
  5829 09:86AD: A6 07        	ldx	<L184+current_record_1+2
  5830 09:86AF: A5 05        	lda	<L184+current_record_1
  5831 09:86B1: 82 AB FF     	brl	L187
  5832                        ;}
  5833                        	.line	678
  5834                        	.endblock	678
  5835             00000008   L183	equ	8
  5836             00000005   L184	equ	5
  5837 09:86B4:              	ends
  5838                        	efunc
  5839                        	.endfunc	678,5,8
  5840                        	.line	678
  5841                        ;
  5842                        ;
  5843                        ;/************************************************
                    ***/
  5844                        ;/*  DecodeRecordEXPR() :  Décodage du Record EXPR
                    . */
  5845                        ;/************************************************
                    ***/
  5846                        ;static void *DecodeRecordEXPR(unsigned char *data
                    , int file_offset, int segment_offset, int *record_length_rt
                    n)
  5847                        ;{
  5848                        	.line	684
  5849                        	.line	685
  5850                        	LOADER
  5851                        	func
  5852                        	.function	685
  5853                        ~~DecodeRecordEXPR:
  5854                        	longa	on
  5855                        	longi	on
  5856 09:86B4: 3B           	tsc
  5857 09:86B5: 38           	sec
  5858 09:86B6: E9 08 00     	sbc	#L190
  5859 09:86B9: 1B           	tcs
  Mon Sep 27 2021  9:39                                                Page 110


  5860 09:86BA: 0B           	phd
  5861 09:86BB: 5B           	tcd
  5862             00000004   data_0	set	4
  5863             00000008   file_offset_0	set	8
  5864             0000000A   segment_offset_0	set	10
  5865             0000000C   record_length_rtn_0	set	12
  5866                        	.block	685
  5867                        ;  struct record_EXPR *current_record;
  5868                        ;
  5869                        ;  /* Allocation mémoire */
  5870                        ;  current_record = (struct record_EXPR *) k_callo
                    c(1,sizeof(struct record_EXPR));
  5871             00000000   current_record_1	set	0
  5872                        	.sym	current_record,0,138,1,32,67
  5873                        	.sym	data,4,142,6,32
  5874                        	.sym	file_offset,8,5,6,16
  5875                        	.sym	segment_offset,10,5,6,16
  5876                        	.sym	record_length_rtn,12,133,6,32
  5877                        	.line	689
  5878 09:86BC: F4 09 00     	pea	#<$9
  5879 09:86BF: F4 01 00     	pea	#<$1
  5880 09:86C2: 22 xx xx xx  	jsl	~~k_calloc
  5881 09:86C6: 85 05        	sta	<L191+current_record_1
  5882 09:86C8: 86 07        	stx	<L191+current_record_1+2
  5883                        ;  if(current_record == NULL)
  5884                        	.line	690
  5885                        ;    {
  5886 09:86CA: A5 05        	lda	<L191+current_record_1
  5887 09:86CC: 05 07        	ora	<L191+current_record_1+2
  5888 09:86CE: F0 03        	beq	L193
  5889 09:86D0: 82 19 00     	brl	L10180
  5890                        L193:
  5891                        	.line	691
  5892                        ;      //printf("Error : Impossible to allocate me
                    mory to process Segment Body Record.\n");
  5893                        ;      return(NULL);
  5894                        	.line	693
  5895 09:86D3: A9 00 00     	lda	#$0
  5896 09:86D6: AA           	tax
  5897 09:86D7: A9 00 00     	lda	#$0
  5898                        L194:
  5899 09:86DA: A8           	tay
  5900 09:86DB: A5 0A        	lda	<L190+2
  5901 09:86DD: 85 16        	sta	<L190+2+12
  5902 09:86DF: A5 09        	lda	<L190+1
  5903 09:86E1: 85 15        	sta	<L190+1+12
  5904 09:86E3: 2B           	pld
  5905 09:86E4: 3B           	tsc
  5906 09:86E5: 18           	clc
  5907 09:86E6: 69 14 00     	adc	#L190+12
  5908 09:86E9: 1B           	tcs
  5909 09:86EA: 98           	tya
  5910 09:86EB: 6B           	rtl
  5911                        ;    }
  5912                        	.line	694
  5913                        ;
  5914                        ;  /* Offset */
  5915                        ;  current_record->FileOffset = (DWORD) file_offse
  Mon Sep 27 2021  9:39                                                Page 111


                    t;
  5916                        L10180:
  5917                        	.line	697
  5918 09:86EC: A0 00 00     	ldy	#$0
  5919 09:86EF: A5 10        	lda	<L190+file_offset_0
  5920 09:86F1: 10 01        	bpl	L195
  5921 09:86F3: 88           	dey
  5922                        L195:
  5923 09:86F4: 85 01        	sta	<R0
  5924 09:86F6: 84 03        	sty	<R0+2
  5925 09:86F8: A5 01        	lda	<R0
  5926 09:86FA: 87 05        	sta	[<L191+current_record_1]
  5927 09:86FC: A5 03        	lda	<R0+2
  5928 09:86FE: A0 02 00     	ldy	#$2
  5929 09:8701: 97 05        	sta	[<L191+current_record_1],Y
  5930                        ;  current_record->SegmentOffset = (DWORD) segment
                    _offset;
  5931                        	.line	698
  5932 09:8703: A0 00 00     	ldy	#$0
  5933 09:8706: A5 12        	lda	<L190+segment_offset_0
  5934 09:8708: 10 01        	bpl	L196
  5935 09:870A: 88           	dey
  5936                        L196:
  5937 09:870B: 85 01        	sta	<R0
  5938 09:870D: 84 03        	sty	<R0+2
  5939 09:870F: A5 01        	lda	<R0
  5940 09:8711: A0 04 00     	ldy	#$4
  5941 09:8714: 97 05        	sta	[<L191+current_record_1],Y
  5942 09:8716: A5 03        	lda	<R0+2
  5943 09:8718: A0 06 00     	ldy	#$6
  5944 09:871B: 97 05        	sta	[<L191+current_record_1],Y
  5945                        ;
  5946                        ;  /* Operation Code */
  5947                        ;  current_record->operation_code = data[0];
  5948                        	.line	701
  5949 09:871D: E2 20        	sep	#$20
  5950                        	longa	off
  5951 09:871F: A7 0C        	lda	[<L190+data_0]
  5952 09:8721: A0 08 00     	ldy	#$8
  5953 09:8724: 97 05        	sta	[<L191+current_record_1],Y
  5954 09:8726: C2 20        	rep	#$20
  5955                        	longa	on
  5956                        ;
  5957                        ;  /* Renvoie la structure */
  5958                        ;  return(current_record);
  5959                        	.line	704
  5960 09:8728: A6 07        	ldx	<L191+current_record_1+2
  5961 09:872A: A5 05        	lda	<L191+current_record_1
  5962 09:872C: 82 AB FF     	brl	L194
  5963                        ;}
  5964                        	.line	705
  5965                        	.endblock	705
  5966             00000008   L190	equ	8
  5967             00000005   L191	equ	5
  5968 09:872F:              	ends
  5969                        	efunc
  5970                        	.endfunc	705,5,8
  5971                        	.line	705
  Mon Sep 27 2021  9:39                                                Page 112


  5972                        ;
  5973                        ;
  5974                        ;/************************************************
                    *****/
  5975                        ;/*  DecodeRecordZEXPR() :  Décodage du Record ZEX
                    PR. */
  5976                        ;/************************************************
                    *****/
  5977                        ;static void *DecodeRecordZEXPR(unsigned char *dat
                    a, int file_offset, int segment_offset, int *record_length_r
                    tn)
  5978                        ;{
  5979                        	.line	711
  5980                        	.line	712
  5981                        	LOADER
  5982                        	func
  5983                        	.function	712
  5984                        ~~DecodeRecordZEXPR:
  5985                        	longa	on
  5986                        	longi	on
  5987 09:872F: 3B           	tsc
  5988 09:8730: 38           	sec
  5989 09:8731: E9 08 00     	sbc	#L197
  5990 09:8734: 1B           	tcs
  5991 09:8735: 0B           	phd
  5992 09:8736: 5B           	tcd
  5993             00000004   data_0	set	4
  5994             00000008   file_offset_0	set	8
  5995             0000000A   segment_offset_0	set	10
  5996             0000000C   record_length_rtn_0	set	12
  5997                        	.block	712
  5998                        ;  struct record_ZEXPR *current_record;
  5999                        ;
  6000                        ;  /* Allocation mémoire */
  6001                        ;  current_record = (struct record_ZEXPR *) k_call
                    oc(1,sizeof(struct record_ZEXPR));
  6002             00000000   current_record_1	set	0
  6003                        	.sym	current_record,0,138,1,32,68
  6004                        	.sym	data,4,142,6,32
  6005                        	.sym	file_offset,8,5,6,16
  6006                        	.sym	segment_offset,10,5,6,16
  6007                        	.sym	record_length_rtn,12,133,6,32
  6008                        	.line	716
  6009 09:8737: F4 09 00     	pea	#<$9
  6010 09:873A: F4 01 00     	pea	#<$1
  6011 09:873D: 22 xx xx xx  	jsl	~~k_calloc
  6012 09:8741: 85 05        	sta	<L198+current_record_1
  6013 09:8743: 86 07        	stx	<L198+current_record_1+2
  6014                        ;  if(current_record == NULL)
  6015                        	.line	717
  6016                        ;    {
  6017 09:8745: A5 05        	lda	<L198+current_record_1
  6018 09:8747: 05 07        	ora	<L198+current_record_1+2
  6019 09:8749: F0 03        	beq	L200
  6020 09:874B: 82 19 00     	brl	L10181
  6021                        L200:
  6022                        	.line	718
  6023                        ;      //printf("Error : Impossible to allocate me
  Mon Sep 27 2021  9:39                                                Page 113


                    mory to process Segment Body Record.\n");
  6024                        ;      return(NULL);
  6025                        	.line	720
  6026 09:874E: A9 00 00     	lda	#$0
  6027 09:8751: AA           	tax
  6028 09:8752: A9 00 00     	lda	#$0
  6029                        L201:
  6030 09:8755: A8           	tay
  6031 09:8756: A5 0A        	lda	<L197+2
  6032 09:8758: 85 16        	sta	<L197+2+12
  6033 09:875A: A5 09        	lda	<L197+1
  6034 09:875C: 85 15        	sta	<L197+1+12
  6035 09:875E: 2B           	pld
  6036 09:875F: 3B           	tsc
  6037 09:8760: 18           	clc
  6038 09:8761: 69 14 00     	adc	#L197+12
  6039 09:8764: 1B           	tcs
  6040 09:8765: 98           	tya
  6041 09:8766: 6B           	rtl
  6042                        ;    }
  6043                        	.line	721
  6044                        ;
  6045                        ;  /* Offset */
  6046                        ;  current_record->FileOffset = (DWORD) file_offse
                    t;
  6047                        L10181:
  6048                        	.line	724
  6049 09:8767: A0 00 00     	ldy	#$0
  6050 09:876A: A5 10        	lda	<L197+file_offset_0
  6051 09:876C: 10 01        	bpl	L202
  6052 09:876E: 88           	dey
  6053                        L202:
  6054 09:876F: 85 01        	sta	<R0
  6055 09:8771: 84 03        	sty	<R0+2
  6056 09:8773: A5 01        	lda	<R0
  6057 09:8775: 87 05        	sta	[<L198+current_record_1]
  6058 09:8777: A5 03        	lda	<R0+2
  6059 09:8779: A0 02 00     	ldy	#$2
  6060 09:877C: 97 05        	sta	[<L198+current_record_1],Y
  6061                        ;  current_record->SegmentOffset = (DWORD) segment
                    _offset;
  6062                        	.line	725
  6063 09:877E: A0 00 00     	ldy	#$0
  6064 09:8781: A5 12        	lda	<L197+segment_offset_0
  6065 09:8783: 10 01        	bpl	L203
  6066 09:8785: 88           	dey
  6067                        L203:
  6068 09:8786: 85 01        	sta	<R0
  6069 09:8788: 84 03        	sty	<R0+2
  6070 09:878A: A5 01        	lda	<R0
  6071 09:878C: A0 04 00     	ldy	#$4
  6072 09:878F: 97 05        	sta	[<L198+current_record_1],Y
  6073 09:8791: A5 03        	lda	<R0+2
  6074 09:8793: A0 06 00     	ldy	#$6
  6075 09:8796: 97 05        	sta	[<L198+current_record_1],Y
  6076                        ;
  6077                        ;  /* Operation Code */
  6078                        ;  current_record->operation_code = data[0];
  Mon Sep 27 2021  9:39                                                Page 114


  6079                        	.line	728
  6080 09:8798: E2 20        	sep	#$20
  6081                        	longa	off
  6082 09:879A: A7 0C        	lda	[<L197+data_0]
  6083 09:879C: A0 08 00     	ldy	#$8
  6084 09:879F: 97 05        	sta	[<L198+current_record_1],Y
  6085 09:87A1: C2 20        	rep	#$20
  6086                        	longa	on
  6087                        ;
  6088                        ;  /* Renvoie la structure */
  6089                        ;  return(current_record);
  6090                        	.line	731
  6091 09:87A3: A6 07        	ldx	<L198+current_record_1+2
  6092 09:87A5: A5 05        	lda	<L198+current_record_1
  6093 09:87A7: 82 AB FF     	brl	L201
  6094                        ;}
  6095                        	.line	732
  6096                        	.endblock	732
  6097             00000008   L197	equ	8
  6098             00000005   L198	equ	5
  6099 09:87AA:              	ends
  6100                        	efunc
  6101                        	.endfunc	732,5,8
  6102                        	.line	732
  6103                        ;
  6104                        ;
  6105                        ;/************************************************
                    *****/
  6106                        ;/*  DecodeRecordBEXPR() :  Décodage du Record BEX
                    PR. */
  6107                        ;/************************************************
                    *****/
  6108                        ;static void *DecodeRecordBEXPR(unsigned char *dat
                    a, int file_offset, int segment_offset, int *record_length_r
                    tn)
  6109                        ;{
  6110                        	.line	738
  6111                        	.line	739
  6112                        	LOADER
  6113                        	func
  6114                        	.function	739
  6115                        ~~DecodeRecordBEXPR:
  6116                        	longa	on
  6117                        	longi	on
  6118 09:87AA: 3B           	tsc
  6119 09:87AB: 38           	sec
  6120 09:87AC: E9 08 00     	sbc	#L204
  6121 09:87AF: 1B           	tcs
  6122 09:87B0: 0B           	phd
  6123 09:87B1: 5B           	tcd
  6124             00000004   data_0	set	4
  6125             00000008   file_offset_0	set	8
  6126             0000000A   segment_offset_0	set	10
  6127             0000000C   record_length_rtn_0	set	12
  6128                        	.block	739
  6129                        ;  struct record_BEXPR *current_record;
  6130                        ;
  6131                        ;  /* Allocation mémoire */
  Mon Sep 27 2021  9:39                                                Page 115


  6132                        ;  current_record = (struct record_BEXPR *) k_call
                    oc(1,sizeof(struct record_BEXPR));
  6133             00000000   current_record_1	set	0
  6134                        	.sym	current_record,0,138,1,32,69
  6135                        	.sym	data,4,142,6,32
  6136                        	.sym	file_offset,8,5,6,16
  6137                        	.sym	segment_offset,10,5,6,16
  6138                        	.sym	record_length_rtn,12,133,6,32
  6139                        	.line	743
  6140 09:87B2: F4 09 00     	pea	#<$9
  6141 09:87B5: F4 01 00     	pea	#<$1
  6142 09:87B8: 22 xx xx xx  	jsl	~~k_calloc
  6143 09:87BC: 85 05        	sta	<L205+current_record_1
  6144 09:87BE: 86 07        	stx	<L205+current_record_1+2
  6145                        ;  if(current_record == NULL)
  6146                        	.line	744
  6147                        ;    {
  6148 09:87C0: A5 05        	lda	<L205+current_record_1
  6149 09:87C2: 05 07        	ora	<L205+current_record_1+2
  6150 09:87C4: F0 03        	beq	L207
  6151 09:87C6: 82 19 00     	brl	L10182
  6152                        L207:
  6153                        	.line	745
  6154                        ;      //printf("Error : Impossible to allocate me
                    mory to process Segment Body Record.\n");
  6155                        ;      return(NULL);
  6156                        	.line	747
  6157 09:87C9: A9 00 00     	lda	#$0
  6158 09:87CC: AA           	tax
  6159 09:87CD: A9 00 00     	lda	#$0
  6160                        L208:
  6161 09:87D0: A8           	tay
  6162 09:87D1: A5 0A        	lda	<L204+2
  6163 09:87D3: 85 16        	sta	<L204+2+12
  6164 09:87D5: A5 09        	lda	<L204+1
  6165 09:87D7: 85 15        	sta	<L204+1+12
  6166 09:87D9: 2B           	pld
  6167 09:87DA: 3B           	tsc
  6168 09:87DB: 18           	clc
  6169 09:87DC: 69 14 00     	adc	#L204+12
  6170 09:87DF: 1B           	tcs
  6171 09:87E0: 98           	tya
  6172 09:87E1: 6B           	rtl
  6173                        ;    }
  6174                        	.line	748
  6175                        ;
  6176                        ;  /* Offset */
  6177                        ;  current_record->FileOffset = (DWORD) file_offse
                    t;
  6178                        L10182:
  6179                        	.line	751
  6180 09:87E2: A0 00 00     	ldy	#$0
  6181 09:87E5: A5 10        	lda	<L204+file_offset_0
  6182 09:87E7: 10 01        	bpl	L209
  6183 09:87E9: 88           	dey
  6184                        L209:
  6185 09:87EA: 85 01        	sta	<R0
  6186 09:87EC: 84 03        	sty	<R0+2
  Mon Sep 27 2021  9:39                                                Page 116


  6187 09:87EE: A5 01        	lda	<R0
  6188 09:87F0: 87 05        	sta	[<L205+current_record_1]
  6189 09:87F2: A5 03        	lda	<R0+2
  6190 09:87F4: A0 02 00     	ldy	#$2
  6191 09:87F7: 97 05        	sta	[<L205+current_record_1],Y
  6192                        ;  current_record->SegmentOffset = (DWORD) segment
                    _offset;
  6193                        	.line	752
  6194 09:87F9: A0 00 00     	ldy	#$0
  6195 09:87FC: A5 12        	lda	<L204+segment_offset_0
  6196 09:87FE: 10 01        	bpl	L210
  6197 09:8800: 88           	dey
  6198                        L210:
  6199 09:8801: 85 01        	sta	<R0
  6200 09:8803: 84 03        	sty	<R0+2
  6201 09:8805: A5 01        	lda	<R0
  6202 09:8807: A0 04 00     	ldy	#$4
  6203 09:880A: 97 05        	sta	[<L205+current_record_1],Y
  6204 09:880C: A5 03        	lda	<R0+2
  6205 09:880E: A0 06 00     	ldy	#$6
  6206 09:8811: 97 05        	sta	[<L205+current_record_1],Y
  6207                        ;
  6208                        ;  /* Operation Code */
  6209                        ;  current_record->operation_code = data[0];
  6210                        	.line	755
  6211 09:8813: E2 20        	sep	#$20
  6212                        	longa	off
  6213 09:8815: A7 0C        	lda	[<L204+data_0]
  6214 09:8817: A0 08 00     	ldy	#$8
  6215 09:881A: 97 05        	sta	[<L205+current_record_1],Y
  6216 09:881C: C2 20        	rep	#$20
  6217                        	longa	on
  6218                        ;
  6219                        ;  /* Renvoie la structure */
  6220                        ;  return(current_record);
  6221                        	.line	758
  6222 09:881E: A6 07        	ldx	<L205+current_record_1+2
  6223 09:8820: A5 05        	lda	<L205+current_record_1
  6224 09:8822: 82 AB FF     	brl	L208
  6225                        ;}
  6226                        	.line	759
  6227                        	.endblock	759
  6228             00000008   L204	equ	8
  6229             00000005   L205	equ	5
  6230 09:8825:              	ends
  6231                        	efunc
  6232                        	.endfunc	759,5,8
  6233                        	.line	759
  6234                        ;
  6235                        ;
  6236                        ;/************************************************
                    ********/
  6237                        ;/*  DecodeRecordRELEXPR() :  Décodage du Record E
                    LEXPR. */
  6238                        ;/************************************************
                    ********/
  6239                        ;static void *DecodeRecordRELEXPR(unsigned char *d
                    ata, int file_offset, int segment_offset, int *record_length
  Mon Sep 27 2021  9:39                                                Page 117


                    _rtn)
  6240                        ;{
  6241                        	.line	765
  6242                        	.line	766
  6243                        	LOADER
  6244                        	func
  6245                        	.function	766
  6246                        ~~DecodeRecordRELEXPR:
  6247                        	longa	on
  6248                        	longi	on
  6249 09:8825: 3B           	tsc
  6250 09:8826: 38           	sec
  6251 09:8827: E9 08 00     	sbc	#L211
  6252 09:882A: 1B           	tcs
  6253 09:882B: 0B           	phd
  6254 09:882C: 5B           	tcd
  6255             00000004   data_0	set	4
  6256             00000008   file_offset_0	set	8
  6257             0000000A   segment_offset_0	set	10
  6258             0000000C   record_length_rtn_0	set	12
  6259                        	.block	766
  6260                        ;  struct record_RELEXPR *current_record;
  6261                        ;
  6262                        ;  /* Allocation mémoire */
  6263                        ;  current_record = (struct record_RELEXPR *) k_ca
                    lloc(1,sizeof(struct record_RELEXPR));
  6264             00000000   current_record_1	set	0
  6265                        	.sym	current_record,0,138,1,32,70
  6266                        	.sym	data,4,142,6,32
  6267                        	.sym	file_offset,8,5,6,16
  6268                        	.sym	segment_offset,10,5,6,16
  6269                        	.sym	record_length_rtn,12,133,6,32
  6270                        	.line	770
  6271 09:882D: F4 09 00     	pea	#<$9
  6272 09:8830: F4 01 00     	pea	#<$1
  6273 09:8833: 22 xx xx xx  	jsl	~~k_calloc
  6274 09:8837: 85 05        	sta	<L212+current_record_1
  6275 09:8839: 86 07        	stx	<L212+current_record_1+2
  6276                        ;  if(current_record == NULL)
  6277                        	.line	771
  6278                        ;    {
  6279 09:883B: A5 05        	lda	<L212+current_record_1
  6280 09:883D: 05 07        	ora	<L212+current_record_1+2
  6281 09:883F: F0 03        	beq	L214
  6282 09:8841: 82 19 00     	brl	L10183
  6283                        L214:
  6284                        	.line	772
  6285                        ;      //printf("Error : Impossible to allocate me
                    mory to process Segment Body Record.\n");
  6286                        ;      return(NULL);
  6287                        	.line	774
  6288 09:8844: A9 00 00     	lda	#$0
  6289 09:8847: AA           	tax
  6290 09:8848: A9 00 00     	lda	#$0
  6291                        L215:
  6292 09:884B: A8           	tay
  6293 09:884C: A5 0A        	lda	<L211+2
  6294 09:884E: 85 16        	sta	<L211+2+12
  Mon Sep 27 2021  9:39                                                Page 118


  6295 09:8850: A5 09        	lda	<L211+1
  6296 09:8852: 85 15        	sta	<L211+1+12
  6297 09:8854: 2B           	pld
  6298 09:8855: 3B           	tsc
  6299 09:8856: 18           	clc
  6300 09:8857: 69 14 00     	adc	#L211+12
  6301 09:885A: 1B           	tcs
  6302 09:885B: 98           	tya
  6303 09:885C: 6B           	rtl
  6304                        ;    }
  6305                        	.line	775
  6306                        ;
  6307                        ;  /* Offset */
  6308                        ;  current_record->FileOffset = (DWORD) file_offse
                    t;
  6309                        L10183:
  6310                        	.line	778
  6311 09:885D: A0 00 00     	ldy	#$0
  6312 09:8860: A5 10        	lda	<L211+file_offset_0
  6313 09:8862: 10 01        	bpl	L216
  6314 09:8864: 88           	dey
  6315                        L216:
  6316 09:8865: 85 01        	sta	<R0
  6317 09:8867: 84 03        	sty	<R0+2
  6318 09:8869: A5 01        	lda	<R0
  6319 09:886B: 87 05        	sta	[<L212+current_record_1]
  6320 09:886D: A5 03        	lda	<R0+2
  6321 09:886F: A0 02 00     	ldy	#$2
  6322 09:8872: 97 05        	sta	[<L212+current_record_1],Y
  6323                        ;  current_record->SegmentOffset = (DWORD) segment
                    _offset;
  6324                        	.line	779
  6325 09:8874: A0 00 00     	ldy	#$0
  6326 09:8877: A5 12        	lda	<L211+segment_offset_0
  6327 09:8879: 10 01        	bpl	L217
  6328 09:887B: 88           	dey
  6329                        L217:
  6330 09:887C: 85 01        	sta	<R0
  6331 09:887E: 84 03        	sty	<R0+2
  6332 09:8880: A5 01        	lda	<R0
  6333 09:8882: A0 04 00     	ldy	#$4
  6334 09:8885: 97 05        	sta	[<L212+current_record_1],Y
  6335 09:8887: A5 03        	lda	<R0+2
  6336 09:8889: A0 06 00     	ldy	#$6
  6337 09:888C: 97 05        	sta	[<L212+current_record_1],Y
  6338                        ;
  6339                        ;  /* Operation Code */
  6340                        ;  current_record->operation_code = data[0];
  6341                        	.line	782
  6342 09:888E: E2 20        	sep	#$20
  6343                        	longa	off
  6344 09:8890: A7 0C        	lda	[<L211+data_0]
  6345 09:8892: A0 08 00     	ldy	#$8
  6346 09:8895: 97 05        	sta	[<L212+current_record_1],Y
  6347 09:8897: C2 20        	rep	#$20
  6348                        	longa	on
  6349                        ;
  6350                        ;  /* Renvoie la structure */
  Mon Sep 27 2021  9:39                                                Page 119


  6351                        ;  return(current_record);
  6352                        	.line	785
  6353 09:8899: A6 07        	ldx	<L212+current_record_1+2
  6354 09:889B: A5 05        	lda	<L212+current_record_1
  6355 09:889D: 82 AB FF     	brl	L215
  6356                        ;}
  6357                        	.line	786
  6358                        	.endblock	786
  6359             00000008   L211	equ	8
  6360             00000005   L212	equ	5
  6361 09:88A0:              	ends
  6362                        	efunc
  6363                        	.endfunc	786,5,8
  6364                        	.line	786
  6365                        ;
  6366                        ;
  6367                        ;/************************************************
                    *****/
  6368                        ;/*  DecodeRecordLOCAL() :  Décodage du Record LOC
                    AL. */
  6369                        ;/************************************************
                    *****/
  6370                        ;static void *DecodeRecordLOCAL(unsigned char *dat
                    a, int file_offset, int segment_offset, int *record_length_r
                    tn)
  6371                        ;{
  6372                        	.line	792
  6373                        	.line	793
  6374                        	LOADER
  6375                        	func
  6376                        	.function	793
  6377                        ~~DecodeRecordLOCAL:
  6378                        	longa	on
  6379                        	longi	on
  6380 09:88A0: 3B           	tsc
  6381 09:88A1: 38           	sec
  6382 09:88A2: E9 08 00     	sbc	#L218
  6383 09:88A5: 1B           	tcs
  6384 09:88A6: 0B           	phd
  6385 09:88A7: 5B           	tcd
  6386             00000004   data_0	set	4
  6387             00000008   file_offset_0	set	8
  6388             0000000A   segment_offset_0	set	10
  6389             0000000C   record_length_rtn_0	set	12
  6390                        	.block	793
  6391                        ;  struct record_LOCAL *current_record;
  6392                        ;
  6393                        ;  /* Allocation mémoire */
  6394                        ;  current_record = (struct record_LOCAL *) k_call
                    oc(1,sizeof(struct record_LOCAL));
  6395             00000000   current_record_1	set	0
  6396                        	.sym	current_record,0,138,1,32,71
  6397                        	.sym	data,4,142,6,32
  6398                        	.sym	file_offset,8,5,6,16
  6399                        	.sym	segment_offset,10,5,6,16
  6400                        	.sym	record_length_rtn,12,133,6,32
  6401                        	.line	797
  6402 09:88A8: F4 09 00     	pea	#<$9
  Mon Sep 27 2021  9:39                                                Page 120


  6403 09:88AB: F4 01 00     	pea	#<$1
  6404 09:88AE: 22 xx xx xx  	jsl	~~k_calloc
  6405 09:88B2: 85 05        	sta	<L219+current_record_1
  6406 09:88B4: 86 07        	stx	<L219+current_record_1+2
  6407                        ;  if(current_record == NULL)
  6408                        	.line	798
  6409                        ;    {
  6410 09:88B6: A5 05        	lda	<L219+current_record_1
  6411 09:88B8: 05 07        	ora	<L219+current_record_1+2
  6412 09:88BA: F0 03        	beq	L221
  6413 09:88BC: 82 19 00     	brl	L10184
  6414                        L221:
  6415                        	.line	799
  6416                        ;      //printf("Error : Impossible to allocate me
                    mory to process Segment Body Record.\n");
  6417                        ;      return(NULL);
  6418                        	.line	801
  6419 09:88BF: A9 00 00     	lda	#$0
  6420 09:88C2: AA           	tax
  6421 09:88C3: A9 00 00     	lda	#$0
  6422                        L222:
  6423 09:88C6: A8           	tay
  6424 09:88C7: A5 0A        	lda	<L218+2
  6425 09:88C9: 85 16        	sta	<L218+2+12
  6426 09:88CB: A5 09        	lda	<L218+1
  6427 09:88CD: 85 15        	sta	<L218+1+12
  6428 09:88CF: 2B           	pld
  6429 09:88D0: 3B           	tsc
  6430 09:88D1: 18           	clc
  6431 09:88D2: 69 14 00     	adc	#L218+12
  6432 09:88D5: 1B           	tcs
  6433 09:88D6: 98           	tya
  6434 09:88D7: 6B           	rtl
  6435                        ;    }
  6436                        	.line	802
  6437                        ;
  6438                        ;  /* Offset */
  6439                        ;  current_record->FileOffset = (DWORD) file_offse
                    t;
  6440                        L10184:
  6441                        	.line	805
  6442 09:88D8: A0 00 00     	ldy	#$0
  6443 09:88DB: A5 10        	lda	<L218+file_offset_0
  6444 09:88DD: 10 01        	bpl	L223
  6445 09:88DF: 88           	dey
  6446                        L223:
  6447 09:88E0: 85 01        	sta	<R0
  6448 09:88E2: 84 03        	sty	<R0+2
  6449 09:88E4: A5 01        	lda	<R0
  6450 09:88E6: 87 05        	sta	[<L219+current_record_1]
  6451 09:88E8: A5 03        	lda	<R0+2
  6452 09:88EA: A0 02 00     	ldy	#$2
  6453 09:88ED: 97 05        	sta	[<L219+current_record_1],Y
  6454                        ;  current_record->SegmentOffset = (DWORD) segment
                    _offset;
  6455                        	.line	806
  6456 09:88EF: A0 00 00     	ldy	#$0
  6457 09:88F2: A5 12        	lda	<L218+segment_offset_0
  Mon Sep 27 2021  9:39                                                Page 121


  6458 09:88F4: 10 01        	bpl	L224
  6459 09:88F6: 88           	dey
  6460                        L224:
  6461 09:88F7: 85 01        	sta	<R0
  6462 09:88F9: 84 03        	sty	<R0+2
  6463 09:88FB: A5 01        	lda	<R0
  6464 09:88FD: A0 04 00     	ldy	#$4
  6465 09:8900: 97 05        	sta	[<L219+current_record_1],Y
  6466 09:8902: A5 03        	lda	<R0+2
  6467 09:8904: A0 06 00     	ldy	#$6
  6468 09:8907: 97 05        	sta	[<L219+current_record_1],Y
  6469                        ;
  6470                        ;  /* Operation Code */
  6471                        ;  current_record->operation_code = data[0];
  6472                        	.line	809
  6473 09:8909: E2 20        	sep	#$20
  6474                        	longa	off
  6475 09:890B: A7 0C        	lda	[<L218+data_0]
  6476 09:890D: A0 08 00     	ldy	#$8
  6477 09:8910: 97 05        	sta	[<L219+current_record_1],Y
  6478 09:8912: C2 20        	rep	#$20
  6479                        	longa	on
  6480                        ;
  6481                        ;  /* Renvoie la structure */
  6482                        ;  return(current_record);
  6483                        	.line	812
  6484 09:8914: A6 07        	ldx	<L219+current_record_1+2
  6485 09:8916: A5 05        	lda	<L219+current_record_1
  6486 09:8918: 82 AB FF     	brl	L222
  6487                        ;}
  6488                        	.line	813
  6489                        	.endblock	813
  6490             00000008   L218	equ	8
  6491             00000005   L219	equ	5
  6492 09:891B:              	ends
  6493                        	efunc
  6494                        	.endfunc	813,5,8
  6495                        	.line	813
  6496                        ;
  6497                        ;
  6498                        ;/************************************************
                    */
  6499                        ;/*  DecodeRecordEQU() :  Décodage du Record EQU. 
                    */
  6500                        ;/************************************************
                    */
  6501                        ;static void *DecodeRecordEQU(unsigned char *data,
                     int file_offset, int segment_offset, int *record_length_rtn
                    )
  6502                        ;{
  6503                        	.line	819
  6504                        	.line	820
  6505                        	LOADER
  6506                        	func
  6507                        	.function	820
  6508                        ~~DecodeRecordEQU:
  6509                        	longa	on
  6510                        	longi	on
  Mon Sep 27 2021  9:39                                                Page 122


  6511 09:891B: 3B           	tsc
  6512 09:891C: 38           	sec
  6513 09:891D: E9 08 00     	sbc	#L225
  6514 09:8920: 1B           	tcs
  6515 09:8921: 0B           	phd
  6516 09:8922: 5B           	tcd
  6517             00000004   data_0	set	4
  6518             00000008   file_offset_0	set	8
  6519             0000000A   segment_offset_0	set	10
  6520             0000000C   record_length_rtn_0	set	12
  6521                        	.block	820
  6522                        ;  struct record_EQU *current_record;
  6523                        ;
  6524                        ;  /* Allocation mémoire */
  6525                        ;  current_record = (struct record_EQU *) k_calloc
                    (1,sizeof(struct record_EQU));
  6526             00000000   current_record_1	set	0
  6527                        	.sym	current_record,0,138,1,32,72
  6528                        	.sym	data,4,142,6,32
  6529                        	.sym	file_offset,8,5,6,16
  6530                        	.sym	segment_offset,10,5,6,16
  6531                        	.sym	record_length_rtn,12,133,6,32
  6532                        	.line	824
  6533 09:8923: F4 09 00     	pea	#<$9
  6534 09:8926: F4 01 00     	pea	#<$1
  6535 09:8929: 22 xx xx xx  	jsl	~~k_calloc
  6536 09:892D: 85 05        	sta	<L226+current_record_1
  6537 09:892F: 86 07        	stx	<L226+current_record_1+2
  6538                        ;  if(current_record == NULL)
  6539                        	.line	825
  6540                        ;    {
  6541 09:8931: A5 05        	lda	<L226+current_record_1
  6542 09:8933: 05 07        	ora	<L226+current_record_1+2
  6543 09:8935: F0 03        	beq	L228
  6544 09:8937: 82 19 00     	brl	L10185
  6545                        L228:
  6546                        	.line	826
  6547                        ;      //printf("Error : Impossible to allocate me
                    mory to process Segment Body Record.\n");
  6548                        ;      return(NULL);
  6549                        	.line	828
  6550 09:893A: A9 00 00     	lda	#$0
  6551 09:893D: AA           	tax
  6552 09:893E: A9 00 00     	lda	#$0
  6553                        L229:
  6554 09:8941: A8           	tay
  6555 09:8942: A5 0A        	lda	<L225+2
  6556 09:8944: 85 16        	sta	<L225+2+12
  6557 09:8946: A5 09        	lda	<L225+1
  6558 09:8948: 85 15        	sta	<L225+1+12
  6559 09:894A: 2B           	pld
  6560 09:894B: 3B           	tsc
  6561 09:894C: 18           	clc
  6562 09:894D: 69 14 00     	adc	#L225+12
  6563 09:8950: 1B           	tcs
  6564 09:8951: 98           	tya
  6565 09:8952: 6B           	rtl
  6566                        ;    }
  Mon Sep 27 2021  9:39                                                Page 123


  6567                        	.line	829
  6568                        ;
  6569                        ;  /* Offset */
  6570                        ;  current_record->FileOffset = (DWORD) file_offse
                    t;
  6571                        L10185:
  6572                        	.line	832
  6573 09:8953: A0 00 00     	ldy	#$0
  6574 09:8956: A5 10        	lda	<L225+file_offset_0
  6575 09:8958: 10 01        	bpl	L230
  6576 09:895A: 88           	dey
  6577                        L230:
  6578 09:895B: 85 01        	sta	<R0
  6579 09:895D: 84 03        	sty	<R0+2
  6580 09:895F: A5 01        	lda	<R0
  6581 09:8961: 87 05        	sta	[<L226+current_record_1]
  6582 09:8963: A5 03        	lda	<R0+2
  6583 09:8965: A0 02 00     	ldy	#$2
  6584 09:8968: 97 05        	sta	[<L226+current_record_1],Y
  6585                        ;  current_record->SegmentOffset = (DWORD) segment
                    _offset;
  6586                        	.line	833
  6587 09:896A: A0 00 00     	ldy	#$0
  6588 09:896D: A5 12        	lda	<L225+segment_offset_0
  6589 09:896F: 10 01        	bpl	L231
  6590 09:8971: 88           	dey
  6591                        L231:
  6592 09:8972: 85 01        	sta	<R0
  6593 09:8974: 84 03        	sty	<R0+2
  6594 09:8976: A5 01        	lda	<R0
  6595 09:8978: A0 04 00     	ldy	#$4
  6596 09:897B: 97 05        	sta	[<L226+current_record_1],Y
  6597 09:897D: A5 03        	lda	<R0+2
  6598 09:897F: A0 06 00     	ldy	#$6
  6599 09:8982: 97 05        	sta	[<L226+current_record_1],Y
  6600                        ;
  6601                        ;  /* Operation Code */
  6602                        ;  current_record->operation_code = data[0];
  6603                        	.line	836
  6604 09:8984: E2 20        	sep	#$20
  6605                        	longa	off
  6606 09:8986: A7 0C        	lda	[<L225+data_0]
  6607 09:8988: A0 08 00     	ldy	#$8
  6608 09:898B: 97 05        	sta	[<L226+current_record_1],Y
  6609 09:898D: C2 20        	rep	#$20
  6610                        	longa	on
  6611                        ;
  6612                        ;  /* Renvoie la structure */
  6613                        ;  return(current_record);
  6614                        	.line	839
  6615 09:898F: A6 07        	ldx	<L226+current_record_1+2
  6616 09:8991: A5 05        	lda	<L226+current_record_1
  6617 09:8993: 82 AB FF     	brl	L229
  6618                        ;}
  6619                        	.line	840
  6620                        	.endblock	840
  6621             00000008   L225	equ	8
  6622             00000005   L226	equ	5
  Mon Sep 27 2021  9:39                                                Page 124


  6623 09:8996:              	ends
  6624                        	efunc
  6625                        	.endfunc	840,5,8
  6626                        	.line	840
  6627                        ;
  6628                        ;
  6629                        ;/***********************************************/
  6630                        ;/*  DecodeRecordDS() :  Décodage du Record DS. */
  6631                        ;/***********************************************/
  6632                        ;static void *DecodeRecordDS(unsigned char *data, 
                    int file_offset, int segment_offset, int *record_length_rtn)
  6633                        ;{
  6634                        	.line	846
  6635                        	.line	847
  6636                        	LOADER
  6637                        	func
  6638                        	.function	847
  6639                        ~~DecodeRecordDS:
  6640                        	longa	on
  6641                        	longi	on
  6642 09:8996: 3B           	tsc
  6643 09:8997: 38           	sec
  6644 09:8998: E9 0C 00     	sbc	#L232
  6645 09:899B: 1B           	tcs
  6646 09:899C: 0B           	phd
  6647 09:899D: 5B           	tcd
  6648             00000004   data_0	set	4
  6649             00000008   file_offset_0	set	8
  6650             0000000A   segment_offset_0	set	10
  6651             0000000C   record_length_rtn_0	set	12
  6652                        	.block	847
  6653                        ;  struct record_DS *current_record;
  6654                        ;
  6655                        ;  /* Allocation mémoire */
  6656                        ;  current_record = (struct record_DS *) k_calloc(
                    1,sizeof(struct record_DS));
  6657             00000000   current_record_1	set	0
  6658                        	.sym	current_record,0,138,1,32,73
  6659                        	.sym	data,4,142,6,32
  6660                        	.sym	file_offset,8,5,6,16
  6661                        	.sym	segment_offset,10,5,6,16
  6662                        	.sym	record_length_rtn,12,133,6,32
  6663                        	.line	851
  6664 09:899E: F4 0D 00     	pea	#<$d
  6665 09:89A1: F4 01 00     	pea	#<$1
  6666 09:89A4: 22 xx xx xx  	jsl	~~k_calloc
  6667 09:89A8: 85 09        	sta	<L233+current_record_1
  6668 09:89AA: 86 0B        	stx	<L233+current_record_1+2
  6669                        ;  if(current_record == NULL)
  6670                        	.line	852
  6671                        ;    {
  6672 09:89AC: A5 09        	lda	<L233+current_record_1
  6673 09:89AE: 05 0B        	ora	<L233+current_record_1+2
  6674 09:89B0: F0 03        	beq	L235
  6675 09:89B2: 82 19 00     	brl	L10186
  6676                        L235:
  6677                        	.line	853
  6678                        ;      //printf("Error : Impossible to allocate me
  Mon Sep 27 2021  9:39                                                Page 125


                    mory to process Segment Body Record.\n");
  6679                        ;      return(NULL);
  6680                        	.line	855
  6681 09:89B5: A9 00 00     	lda	#$0
  6682 09:89B8: AA           	tax
  6683 09:89B9: A9 00 00     	lda	#$0
  6684                        L236:
  6685 09:89BC: A8           	tay
  6686 09:89BD: A5 0E        	lda	<L232+2
  6687 09:89BF: 85 1A        	sta	<L232+2+12
  6688 09:89C1: A5 0D        	lda	<L232+1
  6689 09:89C3: 85 19        	sta	<L232+1+12
  6690 09:89C5: 2B           	pld
  6691 09:89C6: 3B           	tsc
  6692 09:89C7: 18           	clc
  6693 09:89C8: 69 18 00     	adc	#L232+12
  6694 09:89CB: 1B           	tcs
  6695 09:89CC: 98           	tya
  6696 09:89CD: 6B           	rtl
  6697                        ;    }
  6698                        	.line	856
  6699                        ;
  6700                        ;  /* Offset */
  6701                        ;  current_record->FileOffset = (DWORD) file_offse
                    t;
  6702                        L10186:
  6703                        	.line	859
  6704 09:89CE: A0 00 00     	ldy	#$0
  6705 09:89D1: A5 14        	lda	<L232+file_offset_0
  6706 09:89D3: 10 01        	bpl	L237
  6707 09:89D5: 88           	dey
  6708                        L237:
  6709 09:89D6: 85 01        	sta	<R0
  6710 09:89D8: 84 03        	sty	<R0+2
  6711 09:89DA: A5 01        	lda	<R0
  6712 09:89DC: 87 09        	sta	[<L233+current_record_1]
  6713 09:89DE: A5 03        	lda	<R0+2
  6714 09:89E0: A0 02 00     	ldy	#$2
  6715 09:89E3: 97 09        	sta	[<L233+current_record_1],Y
  6716                        ;  current_record->SegmentOffset = (DWORD) segment
                    _offset;
  6717                        	.line	860
  6718 09:89E5: A0 00 00     	ldy	#$0
  6719 09:89E8: A5 16        	lda	<L232+segment_offset_0
  6720 09:89EA: 10 01        	bpl	L238
  6721 09:89EC: 88           	dey
  6722                        L238:
  6723 09:89ED: 85 01        	sta	<R0
  6724 09:89EF: 84 03        	sty	<R0+2
  6725 09:89F1: A5 01        	lda	<R0
  6726 09:89F3: A0 04 00     	ldy	#$4
  6727 09:89F6: 97 09        	sta	[<L233+current_record_1],Y
  6728 09:89F8: A5 03        	lda	<R0+2
  6729 09:89FA: A0 06 00     	ldy	#$6
  6730 09:89FD: 97 09        	sta	[<L233+current_record_1],Y
  6731                        ;
  6732                        ;  /* Operation Code */
  6733                        ;  current_record->operation_code = data[0];
  Mon Sep 27 2021  9:39                                                Page 126


  6734                        	.line	863
  6735 09:89FF: E2 20        	sep	#$20
  6736                        	longa	off
  6737 09:8A01: A7 10        	lda	[<L232+data_0]
  6738 09:8A03: A0 08 00     	ldy	#$8
  6739 09:8A06: 97 09        	sta	[<L233+current_record_1],Y
  6740 09:8A08: C2 20        	rep	#$20
  6741                        	longa	on
  6742                        ;
  6743                        ;  /* Nombre de Byte à $00 */
  6744                        ;  memcpy(&current_record->nb_zero_byte,&data[1],s
                    izeof(DWORD));
  6745                        	.line	866
  6746 09:8A0A: F4 04 00     	pea	#<$4
  6747 09:8A0D: 18           	clc
  6748 09:8A0E: A9 01 00     	lda	#$1
  6749 09:8A11: 65 10        	adc	<L232+data_0
  6750 09:8A13: 85 01        	sta	<R0
  6751 09:8A15: A9 00 00     	lda	#$0
  6752 09:8A18: 65 12        	adc	<L232+data_0+2
  6753 09:8A1A: 85 03        	sta	<R0+2
  6754 09:8A1C: D4 03        	pei	<R0+2
  6755 09:8A1E: D4 01        	pei	<R0
  6756 09:8A20: 18           	clc
  6757 09:8A21: A9 09 00     	lda	#$9
  6758 09:8A24: 65 09        	adc	<L233+current_record_1
  6759 09:8A26: 85 05        	sta	<R1
  6760 09:8A28: A9 00 00     	lda	#$0
  6761 09:8A2B: 65 0B        	adc	<L233+current_record_1+2
  6762 09:8A2D: 85 07        	sta	<R1+2
  6763 09:8A2F: D4 07        	pei	<R1+2
  6764 09:8A31: D4 05        	pei	<R1
  6765 09:8A33: 22 xx xx xx  	jsl	~~memcpy
  6766                        ;
  6767                        ;  /* Renvoie la structure */
  6768                        ;  *record_length_rtn = 1 + sizeof(DWORD);
  6769                        	.line	869
  6770 09:8A37: A9 05 00     	lda	#$5
  6771 09:8A3A: 87 18        	sta	[<L232+record_length_rtn_0]
  6772                        ;  return(current_record);
  6773                        	.line	870
  6774 09:8A3C: A6 0B        	ldx	<L233+current_record_1+2
  6775 09:8A3E: A5 09        	lda	<L233+current_record_1
  6776 09:8A40: 82 79 FF     	brl	L236
  6777                        ;}
  6778                        	.line	871
  6779                        	.endblock	871
  6780             0000000C   L232	equ	12
  6781             00000009   L233	equ	9
  6782 09:8A43:              	ends
  6783                        	efunc
  6784                        	.endfunc	871,9,12
  6785                        	.line	871
  6786                        ;
  6787                        ;
  6788                        ;/************************************************
                    *******/
  6789                        ;/*  DecodeRecordLCONST() :  Décodage du Record LC
  Mon Sep 27 2021  9:39                                                Page 127


                    ONST. */
  6790                        ;/************************************************
                    *******/
  6791                        ;static void *DecodeRecordLCONST(unsigned char *da
                    ta, int file_offset, int segment_offset, int *record_length_
                    rtn)
  6792                        ;{
  6793                        	.line	877
  6794                        	.line	878
  6795                        	LOADER
  6796                        	func
  6797                        	.function	878
  6798                        ~~DecodeRecordLCONST:
  6799                        	longa	on
  6800                        	longi	on
  6801 09:8A43: 3B           	tsc
  6802 09:8A44: 38           	sec
  6803 09:8A45: E9 0C 00     	sbc	#L239
  6804 09:8A48: 1B           	tcs
  6805 09:8A49: 0B           	phd
  6806 09:8A4A: 5B           	tcd
  6807             00000004   data_0	set	4
  6808             00000008   file_offset_0	set	8
  6809             0000000A   segment_offset_0	set	10
  6810             0000000C   record_length_rtn_0	set	12
  6811                        	.block	878
  6812                        ;  struct record_LCONST *current_record;
  6813                        ;
  6814                        ;  /* Allocation mémoire */
  6815                        ;  current_record = (struct record_LCONST *) k_cal
                    loc(1,sizeof(struct record_LCONST));
  6816             00000000   current_record_1	set	0
  6817                        	.sym	current_record,0,138,1,32,74
  6818                        	.sym	data,4,142,6,32
  6819                        	.sym	file_offset,8,5,6,16
  6820                        	.sym	segment_offset,10,5,6,16
  6821                        	.sym	record_length_rtn,12,133,6,32
  6822                        	.line	882
  6823 09:8A4B: F4 11 00     	pea	#<$11
  6824 09:8A4E: F4 01 00     	pea	#<$1
  6825 09:8A51: 22 xx xx xx  	jsl	~~k_calloc
  6826 09:8A55: 85 09        	sta	<L240+current_record_1
  6827 09:8A57: 86 0B        	stx	<L240+current_record_1+2
  6828                        ;  if(current_record == NULL)
  6829                        	.line	883
  6830                        ;    {
  6831 09:8A59: A5 09        	lda	<L240+current_record_1
  6832 09:8A5B: 05 0B        	ora	<L240+current_record_1+2
  6833 09:8A5D: F0 03        	beq	L242
  6834 09:8A5F: 82 19 00     	brl	L10187
  6835                        L242:
  6836                        	.line	884
  6837                        ;      //printf("Error : Impossible to allocate me
                    mory to process Segment Body Record.\n");
  6838                        ;      return(NULL);
  6839                        	.line	886
  6840 09:8A62: A9 00 00     	lda	#$0
  6841 09:8A65: AA           	tax
  Mon Sep 27 2021  9:39                                                Page 128


  6842 09:8A66: A9 00 00     	lda	#$0
  6843                        L243:
  6844 09:8A69: A8           	tay
  6845 09:8A6A: A5 0E        	lda	<L239+2
  6846 09:8A6C: 85 1A        	sta	<L239+2+12
  6847 09:8A6E: A5 0D        	lda	<L239+1
  6848 09:8A70: 85 19        	sta	<L239+1+12
  6849 09:8A72: 2B           	pld
  6850 09:8A73: 3B           	tsc
  6851 09:8A74: 18           	clc
  6852 09:8A75: 69 18 00     	adc	#L239+12
  6853 09:8A78: 1B           	tcs
  6854 09:8A79: 98           	tya
  6855 09:8A7A: 6B           	rtl
  6856                        ;    }
  6857                        	.line	887
  6858                        ;
  6859                        ;  /* Offset */
  6860                        ;  current_record->FileOffset = (DWORD) file_offse
                    t;
  6861                        L10187:
  6862                        	.line	890
  6863 09:8A7B: A0 00 00     	ldy	#$0
  6864 09:8A7E: A5 14        	lda	<L239+file_offset_0
  6865 09:8A80: 10 01        	bpl	L244
  6866 09:8A82: 88           	dey
  6867                        L244:
  6868 09:8A83: 85 01        	sta	<R0
  6869 09:8A85: 84 03        	sty	<R0+2
  6870 09:8A87: A5 01        	lda	<R0
  6871 09:8A89: 87 09        	sta	[<L240+current_record_1]
  6872 09:8A8B: A5 03        	lda	<R0+2
  6873 09:8A8D: A0 02 00     	ldy	#$2
  6874 09:8A90: 97 09        	sta	[<L240+current_record_1],Y
  6875                        ;  current_record->SegmentOffset = (DWORD) segment
                    _offset;
  6876                        	.line	891
  6877 09:8A92: A0 00 00     	ldy	#$0
  6878 09:8A95: A5 16        	lda	<L239+segment_offset_0
  6879 09:8A97: 10 01        	bpl	L245
  6880 09:8A99: 88           	dey
  6881                        L245:
  6882 09:8A9A: 85 01        	sta	<R0
  6883 09:8A9C: 84 03        	sty	<R0+2
  6884 09:8A9E: A5 01        	lda	<R0
  6885 09:8AA0: A0 04 00     	ldy	#$4
  6886 09:8AA3: 97 09        	sta	[<L240+current_record_1],Y
  6887 09:8AA5: A5 03        	lda	<R0+2
  6888 09:8AA7: A0 06 00     	ldy	#$6
  6889 09:8AAA: 97 09        	sta	[<L240+current_record_1],Y
  6890                        ;
  6891                        ;  /* Operation Code : 0xF2 */
  6892                        ;  current_record->operation_code = data[0];
  6893                        	.line	894
  6894 09:8AAC: E2 20        	sep	#$20
  6895                        	longa	off
  6896 09:8AAE: A7 10        	lda	[<L239+data_0]
  6897 09:8AB0: A0 08 00     	ldy	#$8
  Mon Sep 27 2021  9:39                                                Page 129


  6898 09:8AB3: 97 09        	sta	[<L240+current_record_1],Y
  6899 09:8AB5: C2 20        	rep	#$20
  6900                        	longa	on
  6901                        ;
  6902                        ;  /** Zone de Data ou de Code **/
  6903                        ;  memcpy(&current_record->ByteCnt,&data[1],sizeof
                    (DWORD));
  6904                        	.line	897
  6905 09:8AB7: F4 04 00     	pea	#<$4
  6906 09:8ABA: 18           	clc
  6907 09:8ABB: A9 01 00     	lda	#$1
  6908 09:8ABE: 65 10        	adc	<L239+data_0
  6909 09:8AC0: 85 01        	sta	<R0
  6910 09:8AC2: A9 00 00     	lda	#$0
  6911 09:8AC5: 65 12        	adc	<L239+data_0+2
  6912 09:8AC7: 85 03        	sta	<R0+2
  6913 09:8AC9: D4 03        	pei	<R0+2
  6914 09:8ACB: D4 01        	pei	<R0
  6915 09:8ACD: 18           	clc
  6916 09:8ACE: A9 09 00     	lda	#$9
  6917 09:8AD1: 65 09        	adc	<L240+current_record_1
  6918 09:8AD3: 85 05        	sta	<R1
  6919 09:8AD5: A9 00 00     	lda	#$0
  6920 09:8AD8: 65 0B        	adc	<L240+current_record_1+2
  6921 09:8ADA: 85 07        	sta	<R1+2
  6922 09:8ADC: D4 07        	pei	<R1+2
  6923 09:8ADE: D4 05        	pei	<R1
  6924 09:8AE0: 22 xx xx xx  	jsl	~~memcpy
  6925                        ;
  6926                        ;  /* Allocation mémoire */
  6927                        ;  current_record->data = (unsigned char *) k_call
                    oc(current_record->ByteCnt,sizeof(unsigned char));
  6928                        	.line	900
  6929 09:8AE4: F4 01 00     	pea	#<$1
  6930 09:8AE7: A0 09 00     	ldy	#$9
  6931 09:8AEA: B7 09        	lda	[<L240+current_record_1],Y
  6932 09:8AEC: 48           	pha
  6933 09:8AED: 22 xx xx xx  	jsl	~~k_calloc
  6934 09:8AF1: 85 01        	sta	<R0
  6935 09:8AF3: 86 03        	stx	<R0+2
  6936 09:8AF5: A5 01        	lda	<R0
  6937 09:8AF7: A0 0D 00     	ldy	#$d
  6938 09:8AFA: 97 09        	sta	[<L240+current_record_1],Y
  6939 09:8AFC: A5 03        	lda	<R0+2
  6940 09:8AFE: A0 0F 00     	ldy	#$f
  6941 09:8B01: 97 09        	sta	[<L240+current_record_1],Y
  6942                        ;  if(current_record->data == NULL)
  6943                        	.line	901
  6944                        ;    {
  6945 09:8B03: A0 0D 00     	ldy	#$d
  6946 09:8B06: B7 09        	lda	[<L240+current_record_1],Y
  6947 09:8B08: A0 0F 00     	ldy	#$f
  6948 09:8B0B: 17 09        	ora	[<L240+current_record_1],Y
  6949 09:8B0D: F0 03        	beq	L246
  6950 09:8B0F: 82 12 00     	brl	L10188
  6951                        L246:
  6952                        	.line	902
  6953                        ;      //printf("Error : Impossible to allocate me
  Mon Sep 27 2021  9:39                                                Page 130


                    mory to process Segment Body Record LCONST : %d bytes requir
                    ed.\n",current_record->ByteCnt);
  6954                        ;      mem_free_LCONST(current_record);
  6955                        	.line	904
  6956 09:8B12: D4 0B        	pei	<L240+current_record_1+2
  6957 09:8B14: D4 09        	pei	<L240+current_record_1
  6958 09:8B16: 22 2E B0 09  	jsl	~~mem_free_LCONST
  6959                        ;      return(NULL);
  6960                        	.line	905
  6961 09:8B1A: A9 00 00     	lda	#$0
  6962 09:8B1D: AA           	tax
  6963 09:8B1E: A9 00 00     	lda	#$0
  6964 09:8B21: 82 45 FF     	brl	L243
  6965                        ;    }
  6966                        	.line	906
  6967                        ;  
  6968                        ;  /* Copie les Data */
  6969                        ;  memcpy(current_record->data,&data[5],current_re
                    cord->ByteCnt);
  6970                        L10188:
  6971                        	.line	909
  6972 09:8B24: A0 09 00     	ldy	#$9
  6973 09:8B27: B7 09        	lda	[<L240+current_record_1],Y
  6974 09:8B29: 48           	pha
  6975 09:8B2A: 18           	clc
  6976 09:8B2B: A9 05 00     	lda	#$5
  6977 09:8B2E: 65 10        	adc	<L239+data_0
  6978 09:8B30: 85 01        	sta	<R0
  6979 09:8B32: A9 00 00     	lda	#$0
  6980 09:8B35: 65 12        	adc	<L239+data_0+2
  6981 09:8B37: 85 03        	sta	<R0+2
  6982 09:8B39: D4 03        	pei	<R0+2
  6983 09:8B3B: D4 01        	pei	<R0
  6984 09:8B3D: A0 0F 00     	ldy	#$f
  6985 09:8B40: B7 09        	lda	[<L240+current_record_1],Y
  6986 09:8B42: 48           	pha
  6987 09:8B43: A0 0D 00     	ldy	#$d
  6988 09:8B46: B7 09        	lda	[<L240+current_record_1],Y
  6989 09:8B48: 48           	pha
  6990 09:8B49: 22 xx xx xx  	jsl	~~memcpy
  6991                        ;
  6992                        ;  /* Renvoie la structure */
  6993                        ;  *record_length_rtn = 1 + sizeof(DWORD) + curren
                    t_record->ByteCnt;
  6994                        	.line	912
  6995 09:8B4D: 18           	clc
  6996 09:8B4E: A9 05 00     	lda	#$5
  6997 09:8B51: A0 09 00     	ldy	#$9
  6998 09:8B54: 77 09        	adc	[<L240+current_record_1],Y
  6999 09:8B56: 85 01        	sta	<R0
  7000 09:8B58: A9 00 00     	lda	#$0
  7001 09:8B5B: A0 0B 00     	ldy	#$b
  7002 09:8B5E: 77 09        	adc	[<L240+current_record_1],Y
  7003 09:8B60: 85 03        	sta	<R0+2
  7004 09:8B62: A5 01        	lda	<R0
  7005 09:8B64: 87 18        	sta	[<L239+record_length_rtn_0]
  7006                        ;  return(current_record);
  7007                        	.line	913
  Mon Sep 27 2021  9:39                                                Page 131


  7008 09:8B66: A6 0B        	ldx	<L240+current_record_1+2
  7009 09:8B68: A5 09        	lda	<L240+current_record_1
  7010 09:8B6A: 82 FC FE     	brl	L243
  7011                        ;}
  7012                        	.line	914
  7013                        	.endblock	914
  7014             0000000C   L239	equ	12
  7015             00000009   L240	equ	9
  7016 09:8B6D:              	ends
  7017                        	efunc
  7018                        	.endfunc	914,9,12
  7019                        	.line	914
  7020                        ;
  7021                        ;
  7022                        ;/************************************************
                    *****/
  7023                        ;/*  DecodeRecordLEXPR() :  Décodage du Record LEX
                    PR. */
  7024                        ;/************************************************
                    *****/
  7025                        ;static void *DecodeRecordLEXPR(unsigned char *dat
                    a, int file_offset, int segment_offset, int *record_length_r
                    tn)
  7026                        ;{
  7027                        	.line	920
  7028                        	.line	921
  7029                        	LOADER
  7030                        	func
  7031                        	.function	921
  7032                        ~~DecodeRecordLEXPR:
  7033                        	longa	on
  7034                        	longi	on
  7035 09:8B6D: 3B           	tsc
  7036 09:8B6E: 38           	sec
  7037 09:8B6F: E9 08 00     	sbc	#L247
  7038 09:8B72: 1B           	tcs
  7039 09:8B73: 0B           	phd
  7040 09:8B74: 5B           	tcd
  7041             00000004   data_0	set	4
  7042             00000008   file_offset_0	set	8
  7043             0000000A   segment_offset_0	set	10
  7044             0000000C   record_length_rtn_0	set	12
  7045                        	.block	921
  7046                        ;  struct record_LEXPR *current_record;
  7047                        ;
  7048                        ;  /* Allocation mémoire */
  7049                        ;  current_record = (struct record_LEXPR *) k_call
                    oc(1,sizeof(struct record_LEXPR));
  7050             00000000   current_record_1	set	0
  7051                        	.sym	current_record,0,138,1,32,75
  7052                        	.sym	data,4,142,6,32
  7053                        	.sym	file_offset,8,5,6,16
  7054                        	.sym	segment_offset,10,5,6,16
  7055                        	.sym	record_length_rtn,12,133,6,32
  7056                        	.line	925
  7057 09:8B75: F4 09 00     	pea	#<$9
  7058 09:8B78: F4 01 00     	pea	#<$1
  7059 09:8B7B: 22 xx xx xx  	jsl	~~k_calloc
  Mon Sep 27 2021  9:39                                                Page 132


  7060 09:8B7F: 85 05        	sta	<L248+current_record_1
  7061 09:8B81: 86 07        	stx	<L248+current_record_1+2
  7062                        ;  if(current_record == NULL)
  7063                        	.line	926
  7064                        ;    {
  7065 09:8B83: A5 05        	lda	<L248+current_record_1
  7066 09:8B85: 05 07        	ora	<L248+current_record_1+2
  7067 09:8B87: F0 03        	beq	L250
  7068 09:8B89: 82 19 00     	brl	L10189
  7069                        L250:
  7070                        	.line	927
  7071                        ;      //printf("Error : Impossible to allocate me
                    mory to process Segment Body Record.\n");
  7072                        ;      return(NULL);
  7073                        	.line	929
  7074 09:8B8C: A9 00 00     	lda	#$0
  7075 09:8B8F: AA           	tax
  7076 09:8B90: A9 00 00     	lda	#$0
  7077                        L251:
  7078 09:8B93: A8           	tay
  7079 09:8B94: A5 0A        	lda	<L247+2
  7080 09:8B96: 85 16        	sta	<L247+2+12
  7081 09:8B98: A5 09        	lda	<L247+1
  7082 09:8B9A: 85 15        	sta	<L247+1+12
  7083 09:8B9C: 2B           	pld
  7084 09:8B9D: 3B           	tsc
  7085 09:8B9E: 18           	clc
  7086 09:8B9F: 69 14 00     	adc	#L247+12
  7087 09:8BA2: 1B           	tcs
  7088 09:8BA3: 98           	tya
  7089 09:8BA4: 6B           	rtl
  7090                        ;    }
  7091                        	.line	930
  7092                        ;
  7093                        ;  /* Offset */
  7094                        ;  current_record->FileOffset = (DWORD) file_offse
                    t;
  7095                        L10189:
  7096                        	.line	933
  7097 09:8BA5: A0 00 00     	ldy	#$0
  7098 09:8BA8: A5 10        	lda	<L247+file_offset_0
  7099 09:8BAA: 10 01        	bpl	L252
  7100 09:8BAC: 88           	dey
  7101                        L252:
  7102 09:8BAD: 85 01        	sta	<R0
  7103 09:8BAF: 84 03        	sty	<R0+2
  7104 09:8BB1: A5 01        	lda	<R0
  7105 09:8BB3: 87 05        	sta	[<L248+current_record_1]
  7106 09:8BB5: A5 03        	lda	<R0+2
  7107 09:8BB7: A0 02 00     	ldy	#$2
  7108 09:8BBA: 97 05        	sta	[<L248+current_record_1],Y
  7109                        ;  current_record->SegmentOffset = (DWORD) segment
                    _offset;
  7110                        	.line	934
  7111 09:8BBC: A0 00 00     	ldy	#$0
  7112 09:8BBF: A5 12        	lda	<L247+segment_offset_0
  7113 09:8BC1: 10 01        	bpl	L253
  7114 09:8BC3: 88           	dey
  Mon Sep 27 2021  9:39                                                Page 133


  7115                        L253:
  7116 09:8BC4: 85 01        	sta	<R0
  7117 09:8BC6: 84 03        	sty	<R0+2
  7118 09:8BC8: A5 01        	lda	<R0
  7119 09:8BCA: A0 04 00     	ldy	#$4
  7120 09:8BCD: 97 05        	sta	[<L248+current_record_1],Y
  7121 09:8BCF: A5 03        	lda	<R0+2
  7122 09:8BD1: A0 06 00     	ldy	#$6
  7123 09:8BD4: 97 05        	sta	[<L248+current_record_1],Y
  7124                        ;
  7125                        ;  /* Operation Code */
  7126                        ;  current_record->operation_code = data[0];
  7127                        	.line	937
  7128 09:8BD6: E2 20        	sep	#$20
  7129                        	longa	off
  7130 09:8BD8: A7 0C        	lda	[<L247+data_0]
  7131 09:8BDA: A0 08 00     	ldy	#$8
  7132 09:8BDD: 97 05        	sta	[<L248+current_record_1],Y
  7133 09:8BDF: C2 20        	rep	#$20
  7134                        	longa	on
  7135                        ;
  7136                        ;  /* Renvoie la structure */
  7137                        ;  return(current_record);
  7138                        	.line	940
  7139 09:8BE1: A6 07        	ldx	<L248+current_record_1+2
  7140 09:8BE3: A5 05        	lda	<L248+current_record_1
  7141 09:8BE5: 82 AB FF     	brl	L251
  7142                        ;}
  7143                        	.line	941
  7144                        	.endblock	941
  7145             00000008   L247	equ	8
  7146             00000005   L248	equ	5
  7147 09:8BE8:              	ends
  7148                        	efunc
  7149                        	.endfunc	941,5,8
  7150                        	.line	941
  7151                        ;
  7152                        ;
  7153                        ;/************************************************
                    *****/
  7154                        ;/*  DecodeRecordENTRY() :  Décodage du Record ENT
                    RY. */
  7155                        ;/************************************************
                    *****/
  7156                        ;static void *DecodeRecordENTRY(unsigned char *dat
                    a, int file_offset, int segment_offset, int *record_length_r
                    tn)
  7157                        ;{
  7158                        	.line	947
  7159                        	.line	948
  7160                        	LOADER
  7161                        	func
  7162                        	.function	948
  7163                        ~~DecodeRecordENTRY:
  7164                        	longa	on
  7165                        	longi	on
  7166 09:8BE8: 3B           	tsc
  7167 09:8BE9: 38           	sec
  Mon Sep 27 2021  9:39                                                Page 134


  7168 09:8BEA: E9 08 00     	sbc	#L254
  7169 09:8BED: 1B           	tcs
  7170 09:8BEE: 0B           	phd
  7171 09:8BEF: 5B           	tcd
  7172             00000004   data_0	set	4
  7173             00000008   file_offset_0	set	8
  7174             0000000A   segment_offset_0	set	10
  7175             0000000C   record_length_rtn_0	set	12
  7176                        	.block	948
  7177                        ;  struct record_ENTRY *current_record;
  7178                        ;
  7179                        ;  /* Allocation mémoire */
  7180                        ;  current_record = (struct record_ENTRY *) k_call
                    oc(1,sizeof(struct record_ENTRY));
  7181             00000000   current_record_1	set	0
  7182                        	.sym	current_record,0,138,1,32,76
  7183                        	.sym	data,4,142,6,32
  7184                        	.sym	file_offset,8,5,6,16
  7185                        	.sym	segment_offset,10,5,6,16
  7186                        	.sym	record_length_rtn,12,133,6,32
  7187                        	.line	952
  7188 09:8BF0: F4 09 00     	pea	#<$9
  7189 09:8BF3: F4 01 00     	pea	#<$1
  7190 09:8BF6: 22 xx xx xx  	jsl	~~k_calloc
  7191 09:8BFA: 85 05        	sta	<L255+current_record_1
  7192 09:8BFC: 86 07        	stx	<L255+current_record_1+2
  7193                        ;  if(current_record == NULL)
  7194                        	.line	953
  7195                        ;    {
  7196 09:8BFE: A5 05        	lda	<L255+current_record_1
  7197 09:8C00: 05 07        	ora	<L255+current_record_1+2
  7198 09:8C02: F0 03        	beq	L257
  7199 09:8C04: 82 19 00     	brl	L10190
  7200                        L257:
  7201                        	.line	954
  7202                        ;      //printf("Error : Impossible to allocate me
                    mory to process Segment Body Record.\n");
  7203                        ;      return(NULL);
  7204                        	.line	956
  7205 09:8C07: A9 00 00     	lda	#$0
  7206 09:8C0A: AA           	tax
  7207 09:8C0B: A9 00 00     	lda	#$0
  7208                        L258:
  7209 09:8C0E: A8           	tay
  7210 09:8C0F: A5 0A        	lda	<L254+2
  7211 09:8C11: 85 16        	sta	<L254+2+12
  7212 09:8C13: A5 09        	lda	<L254+1
  7213 09:8C15: 85 15        	sta	<L254+1+12
  7214 09:8C17: 2B           	pld
  7215 09:8C18: 3B           	tsc
  7216 09:8C19: 18           	clc
  7217 09:8C1A: 69 14 00     	adc	#L254+12
  7218 09:8C1D: 1B           	tcs
  7219 09:8C1E: 98           	tya
  7220 09:8C1F: 6B           	rtl
  7221                        ;    }
  7222                        	.line	957
  7223                        ;
  Mon Sep 27 2021  9:39                                                Page 135


  7224                        ;  /* Offset */
  7225                        ;  current_record->FileOffset = (DWORD) file_offse
                    t;
  7226                        L10190:
  7227                        	.line	960
  7228 09:8C20: A0 00 00     	ldy	#$0
  7229 09:8C23: A5 10        	lda	<L254+file_offset_0
  7230 09:8C25: 10 01        	bpl	L259
  7231 09:8C27: 88           	dey
  7232                        L259:
  7233 09:8C28: 85 01        	sta	<R0
  7234 09:8C2A: 84 03        	sty	<R0+2
  7235 09:8C2C: A5 01        	lda	<R0
  7236 09:8C2E: 87 05        	sta	[<L255+current_record_1]
  7237 09:8C30: A5 03        	lda	<R0+2
  7238 09:8C32: A0 02 00     	ldy	#$2
  7239 09:8C35: 97 05        	sta	[<L255+current_record_1],Y
  7240                        ;  current_record->SegmentOffset = (DWORD) segment
                    _offset;
  7241                        	.line	961
  7242 09:8C37: A0 00 00     	ldy	#$0
  7243 09:8C3A: A5 12        	lda	<L254+segment_offset_0
  7244 09:8C3C: 10 01        	bpl	L260
  7245 09:8C3E: 88           	dey
  7246                        L260:
  7247 09:8C3F: 85 01        	sta	<R0
  7248 09:8C41: 84 03        	sty	<R0+2
  7249 09:8C43: A5 01        	lda	<R0
  7250 09:8C45: A0 04 00     	ldy	#$4
  7251 09:8C48: 97 05        	sta	[<L255+current_record_1],Y
  7252 09:8C4A: A5 03        	lda	<R0+2
  7253 09:8C4C: A0 06 00     	ldy	#$6
  7254 09:8C4F: 97 05        	sta	[<L255+current_record_1],Y
  7255                        ;
  7256                        ;  /* Operation Code */
  7257                        ;  current_record->operation_code = data[0];
  7258                        	.line	964
  7259 09:8C51: E2 20        	sep	#$20
  7260                        	longa	off
  7261 09:8C53: A7 0C        	lda	[<L254+data_0]
  7262 09:8C55: A0 08 00     	ldy	#$8
  7263 09:8C58: 97 05        	sta	[<L255+current_record_1],Y
  7264 09:8C5A: C2 20        	rep	#$20
  7265                        	longa	on
  7266                        ;
  7267                        ;  /* Renvoie la structure */
  7268                        ;  return(current_record);
  7269                        	.line	967
  7270 09:8C5C: A6 07        	ldx	<L255+current_record_1+2
  7271 09:8C5E: A5 05        	lda	<L255+current_record_1
  7272 09:8C60: 82 AB FF     	brl	L258
  7273                        ;}
  7274                        	.line	968
  7275                        	.endblock	968
  7276             00000008   L254	equ	8
  7277             00000005   L255	equ	5
  7278 09:8C63:              	ends
  7279                        	efunc
  Mon Sep 27 2021  9:39                                                Page 136


  7280                        	.endfunc	968,5,8
  7281                        	.line	968
  7282                        ;
  7283                        ;
  7284                        ;/************************************************
                    *******/
  7285                        ;/*  DecodeRecordcRELOC() :  Décodage du Record cR
                    ELOC. */
  7286                        ;/************************************************
                    *******/
  7287                        ;static void *DecodeRecordcRELOC(unsigned char *da
                    ta, int file_offset, int segment_offset, int *record_length_
                    rtn)
  7288                        ;{
  7289                        	.line	974
  7290                        	.line	975
  7291                        	LOADER
  7292                        	func
  7293                        	.function	975
  7294                        ~~DecodeRecordcRELOC:
  7295                        	longa	on
  7296                        	longi	on
  7297 09:8C63: 3B           	tsc
  7298 09:8C64: 38           	sec
  7299 09:8C65: E9 0A 00     	sbc	#L261
  7300 09:8C68: 1B           	tcs
  7301 09:8C69: 0B           	phd
  7302 09:8C6A: 5B           	tcd
  7303             00000004   data_0	set	4
  7304             00000008   file_offset_0	set	8
  7305             0000000A   segment_offset_0	set	10
  7306             0000000C   record_length_rtn_0	set	12
  7307                        	.block	975
  7308                        ;  WORD one_word;
  7309                        ;  struct record_cRELOC *current_record;
  7310                        ;
  7311                        ;  /* Allocation mémoire */
  7312                        ;  current_record = (struct record_cRELOC *) k_cal
                    loc(1,sizeof(struct record_cRELOC));
  7313             00000000   one_word_1	set	0
  7314             00000002   current_record_1	set	2
  7315                        	.sym	one_word,0,5,1,16
  7316                        	.sym	current_record,2,138,1,32,77
  7317                        	.sym	data,4,142,6,32
  7318                        	.sym	file_offset,8,5,6,16
  7319                        	.sym	segment_offset,10,5,6,16
  7320                        	.sym	record_length_rtn,12,133,6,32
  7321                        	.line	980
  7322 09:8C6B: F4 13 00     	pea	#<$13
  7323 09:8C6E: F4 01 00     	pea	#<$1
  7324 09:8C71: 22 xx xx xx  	jsl	~~k_calloc
  7325 09:8C75: 85 07        	sta	<L262+current_record_1
  7326 09:8C77: 86 09        	stx	<L262+current_record_1+2
  7327                        ;  if(current_record == NULL)
  7328                        	.line	981
  7329                        ;    {
  7330 09:8C79: A5 07        	lda	<L262+current_record_1
  7331 09:8C7B: 05 09        	ora	<L262+current_record_1+2
  Mon Sep 27 2021  9:39                                                Page 137


  7332 09:8C7D: F0 03        	beq	L264
  7333 09:8C7F: 82 19 00     	brl	L10191
  7334                        L264:
  7335                        	.line	982
  7336                        ;      //printf("Error : Impossible to allocate me
                    mory to process Segment Body Record.\n");
  7337                        ;      return(NULL);
  7338                        	.line	984
  7339 09:8C82: A9 00 00     	lda	#$0
  7340 09:8C85: AA           	tax
  7341 09:8C86: A9 00 00     	lda	#$0
  7342                        L265:
  7343 09:8C89: A8           	tay
  7344 09:8C8A: A5 0C        	lda	<L261+2
  7345 09:8C8C: 85 18        	sta	<L261+2+12
  7346 09:8C8E: A5 0B        	lda	<L261+1
  7347 09:8C90: 85 17        	sta	<L261+1+12
  7348 09:8C92: 2B           	pld
  7349 09:8C93: 3B           	tsc
  7350 09:8C94: 18           	clc
  7351 09:8C95: 69 16 00     	adc	#L261+12
  7352 09:8C98: 1B           	tcs
  7353 09:8C99: 98           	tya
  7354 09:8C9A: 6B           	rtl
  7355                        ;    }
  7356                        	.line	985
  7357                        ;
  7358                        ;  /* Offset */
  7359                        ;  current_record->FileOffset = (DWORD) file_offse
                    t;
  7360                        L10191:
  7361                        	.line	988
  7362 09:8C9B: A0 00 00     	ldy	#$0
  7363 09:8C9E: A5 12        	lda	<L261+file_offset_0
  7364 09:8CA0: 10 01        	bpl	L266
  7365 09:8CA2: 88           	dey
  7366                        L266:
  7367 09:8CA3: 85 01        	sta	<R0
  7368 09:8CA5: 84 03        	sty	<R0+2
  7369 09:8CA7: A5 01        	lda	<R0
  7370 09:8CA9: 87 07        	sta	[<L262+current_record_1]
  7371 09:8CAB: A5 03        	lda	<R0+2
  7372 09:8CAD: A0 02 00     	ldy	#$2
  7373 09:8CB0: 97 07        	sta	[<L262+current_record_1],Y
  7374                        ;  current_record->SegmentOffset = (DWORD) segment
                    _offset;
  7375                        	.line	989
  7376 09:8CB2: A0 00 00     	ldy	#$0
  7377 09:8CB5: A5 14        	lda	<L261+segment_offset_0
  7378 09:8CB7: 10 01        	bpl	L267
  7379 09:8CB9: 88           	dey
  7380                        L267:
  7381 09:8CBA: 85 01        	sta	<R0
  7382 09:8CBC: 84 03        	sty	<R0+2
  7383 09:8CBE: A5 01        	lda	<R0
  7384 09:8CC0: A0 04 00     	ldy	#$4
  7385 09:8CC3: 97 07        	sta	[<L262+current_record_1],Y
  7386 09:8CC5: A5 03        	lda	<R0+2
  Mon Sep 27 2021  9:39                                                Page 138


  7387 09:8CC7: A0 06 00     	ldy	#$6
  7388 09:8CCA: 97 07        	sta	[<L262+current_record_1],Y
  7389                        ;
  7390                        ;  /* Operation Code */
  7391                        ;  current_record->operation_code = data[0];
  7392                        	.line	992
  7393 09:8CCC: E2 20        	sep	#$20
  7394                        	longa	off
  7395 09:8CCE: A7 0E        	lda	[<L261+data_0]
  7396 09:8CD0: A0 08 00     	ldy	#$8
  7397 09:8CD3: 97 07        	sta	[<L262+current_record_1],Y
  7398 09:8CD5: C2 20        	rep	#$20
  7399                        	longa	on
  7400                        ;
  7401                        ;  /* Récupère les données */
  7402                        ;  current_record->ByteCnt = data[1];
  7403                        	.line	995
  7404 09:8CD7: E2 20        	sep	#$20
  7405                        	longa	off
  7406 09:8CD9: A0 01 00     	ldy	#$1
  7407 09:8CDC: B7 0E        	lda	[<L261+data_0],Y
  7408 09:8CDE: A0 09 00     	ldy	#$9
  7409 09:8CE1: 97 07        	sta	[<L262+current_record_1],Y
  7410 09:8CE3: C2 20        	rep	#$20
  7411                        	longa	on
  7412                        ;  current_record->BitShiftCnt = data[2];
  7413                        	.line	996
  7414 09:8CE5: E2 20        	sep	#$20
  7415                        	longa	off
  7416 09:8CE7: A0 02 00     	ldy	#$2
  7417 09:8CEA: B7 0E        	lda	[<L261+data_0],Y
  7418 09:8CEC: A0 0A 00     	ldy	#$a
  7419 09:8CEF: 97 07        	sta	[<L262+current_record_1],Y
  7420 09:8CF1: C2 20        	rep	#$20
  7421                        	longa	on
  7422                        ;  memcpy(&one_word,&data[3],sizeof(WORD));
  7423                        	.line	997
  7424 09:8CF3: F4 02 00     	pea	#<$2
  7425 09:8CF6: 18           	clc
  7426 09:8CF7: A9 03 00     	lda	#$3
  7427 09:8CFA: 65 0E        	adc	<L261+data_0
  7428 09:8CFC: 85 01        	sta	<R0
  7429 09:8CFE: A9 00 00     	lda	#$0
  7430 09:8D01: 65 10        	adc	<L261+data_0+2
  7431 09:8D03: 85 03        	sta	<R0+2
  7432 09:8D05: D4 03        	pei	<R0+2
  7433 09:8D07: D4 01        	pei	<R0
  7434 09:8D09: F4 00 00     	pea	#0
  7435 09:8D0C: 18           	clc
  7436 09:8D0D: 7B           	tdc
  7437 09:8D0E: 69 05 00     	adc	#<L262+one_word_1
  7438 09:8D11: 48           	pha
  7439 09:8D12: 22 xx xx xx  	jsl	~~memcpy
  7440                        ;  current_record->OffsetPatch = (DWORD) one_word;
  7441                        	.line	998
  7442 09:8D16: A0 00 00     	ldy	#$0
  7443 09:8D19: A5 05        	lda	<L262+one_word_1
  7444 09:8D1B: 10 01        	bpl	L268
  Mon Sep 27 2021  9:39                                                Page 139


  7445 09:8D1D: 88           	dey
  7446                        L268:
  7447 09:8D1E: 85 01        	sta	<R0
  7448 09:8D20: 84 03        	sty	<R0+2
  7449 09:8D22: A5 01        	lda	<R0
  7450 09:8D24: A0 0B 00     	ldy	#$b
  7451 09:8D27: 97 07        	sta	[<L262+current_record_1],Y
  7452 09:8D29: A5 03        	lda	<R0+2
  7453 09:8D2B: A0 0D 00     	ldy	#$d
  7454 09:8D2E: 97 07        	sta	[<L262+current_record_1],Y
  7455                        ;  memcpy(&one_word,&data[5],sizeof(WORD));
  7456                        	.line	999
  7457 09:8D30: F4 02 00     	pea	#<$2
  7458 09:8D33: 18           	clc
  7459 09:8D34: A9 05 00     	lda	#$5
  7460 09:8D37: 65 0E        	adc	<L261+data_0
  7461 09:8D39: 85 01        	sta	<R0
  7462 09:8D3B: A9 00 00     	lda	#$0
  7463 09:8D3E: 65 10        	adc	<L261+data_0+2
  7464 09:8D40: 85 03        	sta	<R0+2
  7465 09:8D42: D4 03        	pei	<R0+2
  7466 09:8D44: D4 01        	pei	<R0
  7467 09:8D46: F4 00 00     	pea	#0
  7468 09:8D49: 18           	clc
  7469 09:8D4A: 7B           	tdc
  7470 09:8D4B: 69 05 00     	adc	#<L262+one_word_1
  7471 09:8D4E: 48           	pha
  7472 09:8D4F: 22 xx xx xx  	jsl	~~memcpy
  7473                        ;  current_record->OffsetReference = (DWORD) one_w
                    ord;
  7474                        	.line	1000
  7475 09:8D53: A0 00 00     	ldy	#$0
  7476 09:8D56: A5 05        	lda	<L262+one_word_1
  7477 09:8D58: 10 01        	bpl	L269
  7478 09:8D5A: 88           	dey
  7479                        L269:
  7480 09:8D5B: 85 01        	sta	<R0
  7481 09:8D5D: 84 03        	sty	<R0+2
  7482 09:8D5F: A5 01        	lda	<R0
  7483 09:8D61: A0 0F 00     	ldy	#$f
  7484 09:8D64: 97 07        	sta	[<L262+current_record_1],Y
  7485 09:8D66: A5 03        	lda	<R0+2
  7486 09:8D68: A0 11 00     	ldy	#$11
  7487 09:8D6B: 97 07        	sta	[<L262+current_record_1],Y
  7488                        ;
  7489                        ;  /* Conserve ce RELOC */
  7490                        ;  AddReloc(current_record->ByteCnt,current_record
                    ->BitShiftCnt,current_record->OffsetPatch,current_record->Of
                    fsetReference,RECORD_cRELOC);
  7491                        	.line	1003
  7492 09:8D6D: F4 03 00     	pea	#<$3
  7493 09:8D70: A0 11 00     	ldy	#$11
  7494 09:8D73: B7 07        	lda	[<L262+current_record_1],Y
  7495 09:8D75: 48           	pha
  7496 09:8D76: A0 0F 00     	ldy	#$f
  7497 09:8D79: B7 07        	lda	[<L262+current_record_1],Y
  7498 09:8D7B: 48           	pha
  7499 09:8D7C: A0 0D 00     	ldy	#$d
  Mon Sep 27 2021  9:39                                                Page 140


  7500 09:8D7F: B7 07        	lda	[<L262+current_record_1],Y
  7501 09:8D81: 48           	pha
  7502 09:8D82: A0 0B 00     	ldy	#$b
  7503 09:8D85: B7 07        	lda	[<L262+current_record_1],Y
  7504 09:8D87: 48           	pha
  7505 09:8D88: A0 0A 00     	ldy	#$a
  7506 09:8D8B: B7 07        	lda	[<L262+current_record_1],Y
  7507 09:8D8D: 48           	pha
  7508 09:8D8E: A0 09 00     	ldy	#$9
  7509 09:8D91: B7 07        	lda	[<L262+current_record_1],Y
  7510 09:8D93: 48           	pha
  7511 09:8D94: 22 33 AC 09  	jsl	~~AddReloc
  7512                        ;
  7513                        ;  /* Renvoie la structure */
  7514                        ;  *record_length_rtn = 3*sizeof(BYTE) + 2*sizeof(
                    WORD);
  7515                        	.line	1006
  7516 09:8D98: A9 07 00     	lda	#$7
  7517 09:8D9B: 87 16        	sta	[<L261+record_length_rtn_0]
  7518                        ;  return(current_record);
  7519                        	.line	1007
  7520 09:8D9D: A6 09        	ldx	<L262+current_record_1+2
  7521 09:8D9F: A5 07        	lda	<L262+current_record_1
  7522 09:8DA1: 82 E5 FE     	brl	L265
  7523                        ;}
  7524                        	.line	1008
  7525                        	.endblock	1008
  7526             0000000A   L261	equ	10
  7527             00000005   L262	equ	5
  7528 09:8DA4:              	ends
  7529                        	efunc
  7530                        	.endfunc	1008,5,10
  7531                        	.line	1008
  7532                        ;
  7533                        ;
  7534                        ;/************************************************
                    *************/
  7535                        ;/*  DecodeRecordcINTERSEG() :  Décodage du Record
                     cINTERSEG. */
  7536                        ;/************************************************
                    *************/
  7537                        ;static void *DecodeRecordcINTERSEG(unsigned char 
                    *data, int file_offset, int segment_offset, int *record_leng
                    th_rtn)
  7538                        ;{
  7539                        	.line	1014
  7540                        	.line	1015
  7541                        	LOADER
  7542                        	func
  7543                        	.function	1015
  7544                        ~~DecodeRecordcINTERSEG:
  7545                        	longa	on
  7546                        	longi	on
  7547 09:8DA4: 3B           	tsc
  7548 09:8DA5: 38           	sec
  7549 09:8DA6: E9 0A 00     	sbc	#L270
  7550 09:8DA9: 1B           	tcs
  7551 09:8DAA: 0B           	phd
  Mon Sep 27 2021  9:39                                                Page 141


  7552 09:8DAB: 5B           	tcd
  7553             00000004   data_0	set	4
  7554             00000008   file_offset_0	set	8
  7555             0000000A   segment_offset_0	set	10
  7556             0000000C   record_length_rtn_0	set	12
  7557                        	.block	1015
  7558                        ;  WORD one_word;
  7559                        ;  struct record_cINTERSEG *current_record;
  7560                        ;
  7561                        ;  /* Allocation mémoire */
  7562                        ;  current_record = (struct record_cINTERSEG *) k_
                    calloc(1,sizeof(struct record_cINTERSEG));
  7563             00000000   one_word_1	set	0
  7564             00000002   current_record_1	set	2
  7565                        	.sym	one_word,0,5,1,16
  7566                        	.sym	current_record,2,138,1,32,78
  7567                        	.sym	data,4,142,6,32
  7568                        	.sym	file_offset,8,5,6,16
  7569                        	.sym	segment_offset,10,5,6,16
  7570                        	.sym	record_length_rtn,12,133,6,32
  7571                        	.line	1020
  7572 09:8DAC: F4 16 00     	pea	#<$16
  7573 09:8DAF: F4 01 00     	pea	#<$1
  7574 09:8DB2: 22 xx xx xx  	jsl	~~k_calloc
  7575 09:8DB6: 85 07        	sta	<L271+current_record_1
  7576 09:8DB8: 86 09        	stx	<L271+current_record_1+2
  7577                        ;  if(current_record == NULL)
  7578                        	.line	1021
  7579                        ;    {
  7580 09:8DBA: A5 07        	lda	<L271+current_record_1
  7581 09:8DBC: 05 09        	ora	<L271+current_record_1+2
  7582 09:8DBE: F0 03        	beq	L273
  7583 09:8DC0: 82 19 00     	brl	L10192
  7584                        L273:
  7585                        	.line	1022
  7586                        ;      //printf("Error : Impossible to allocate me
                    mory to process Segment Body Record.\n");
  7587                        ;      return(NULL);
  7588                        	.line	1024
  7589 09:8DC3: A9 00 00     	lda	#$0
  7590 09:8DC6: AA           	tax
  7591 09:8DC7: A9 00 00     	lda	#$0
  7592                        L274:
  7593 09:8DCA: A8           	tay
  7594 09:8DCB: A5 0C        	lda	<L270+2
  7595 09:8DCD: 85 18        	sta	<L270+2+12
  7596 09:8DCF: A5 0B        	lda	<L270+1
  7597 09:8DD1: 85 17        	sta	<L270+1+12
  7598 09:8DD3: 2B           	pld
  7599 09:8DD4: 3B           	tsc
  7600 09:8DD5: 18           	clc
  7601 09:8DD6: 69 16 00     	adc	#L270+12
  7602 09:8DD9: 1B           	tcs
  7603 09:8DDA: 98           	tya
  7604 09:8DDB: 6B           	rtl
  7605                        ;    }
  7606                        	.line	1025
  7607                        ;
  Mon Sep 27 2021  9:39                                                Page 142


  7608                        ;  /* Offset */
  7609                        ;  current_record->FileOffset = (DWORD) file_offse
                    t;
  7610                        L10192:
  7611                        	.line	1028
  7612 09:8DDC: A0 00 00     	ldy	#$0
  7613 09:8DDF: A5 12        	lda	<L270+file_offset_0
  7614 09:8DE1: 10 01        	bpl	L275
  7615 09:8DE3: 88           	dey
  7616                        L275:
  7617 09:8DE4: 85 01        	sta	<R0
  7618 09:8DE6: 84 03        	sty	<R0+2
  7619 09:8DE8: A5 01        	lda	<R0
  7620 09:8DEA: 87 07        	sta	[<L271+current_record_1]
  7621 09:8DEC: A5 03        	lda	<R0+2
  7622 09:8DEE: A0 02 00     	ldy	#$2
  7623 09:8DF1: 97 07        	sta	[<L271+current_record_1],Y
  7624                        ;  current_record->SegmentOffset = (DWORD) segment
                    _offset;
  7625                        	.line	1029
  7626 09:8DF3: A0 00 00     	ldy	#$0
  7627 09:8DF6: A5 14        	lda	<L270+segment_offset_0
  7628 09:8DF8: 10 01        	bpl	L276
  7629 09:8DFA: 88           	dey
  7630                        L276:
  7631 09:8DFB: 85 01        	sta	<R0
  7632 09:8DFD: 84 03        	sty	<R0+2
  7633 09:8DFF: A5 01        	lda	<R0
  7634 09:8E01: A0 04 00     	ldy	#$4
  7635 09:8E04: 97 07        	sta	[<L271+current_record_1],Y
  7636 09:8E06: A5 03        	lda	<R0+2
  7637 09:8E08: A0 06 00     	ldy	#$6
  7638 09:8E0B: 97 07        	sta	[<L271+current_record_1],Y
  7639                        ;
  7640                        ;  /* Operation Code */
  7641                        ;  current_record->operation_code = data[0];
  7642                        	.line	1032
  7643 09:8E0D: E2 20        	sep	#$20
  7644                        	longa	off
  7645 09:8E0F: A7 0E        	lda	[<L270+data_0]
  7646 09:8E11: A0 08 00     	ldy	#$8
  7647 09:8E14: 97 07        	sta	[<L271+current_record_1],Y
  7648 09:8E16: C2 20        	rep	#$20
  7649                        	longa	on
  7650                        ;
  7651                        ;  /* File Number toujours à 1 */
  7652                        ;  current_record->FileNum = 1;
  7653                        	.line	1035
  7654 09:8E18: A9 01 00     	lda	#$1
  7655 09:8E1B: A0 0F 00     	ldy	#$f
  7656 09:8E1E: 97 07        	sta	[<L271+current_record_1],Y
  7657                        ;
  7658                        ;  /** Récupère les informations **/
  7659                        ;  current_record->ByteCnt = data[1];
  7660                        	.line	1038
  7661 09:8E20: E2 20        	sep	#$20
  7662                        	longa	off
  7663 09:8E22: A0 01 00     	ldy	#$1
  Mon Sep 27 2021  9:39                                                Page 143


  7664 09:8E25: B7 0E        	lda	[<L270+data_0],Y
  7665 09:8E27: A0 09 00     	ldy	#$9
  7666 09:8E2A: 97 07        	sta	[<L271+current_record_1],Y
  7667 09:8E2C: C2 20        	rep	#$20
  7668                        	longa	on
  7669                        ;  current_record->BitShiftCnt = data[2];
  7670                        	.line	1039
  7671 09:8E2E: E2 20        	sep	#$20
  7672                        	longa	off
  7673 09:8E30: A0 02 00     	ldy	#$2
  7674 09:8E33: B7 0E        	lda	[<L270+data_0],Y
  7675 09:8E35: A0 0A 00     	ldy	#$a
  7676 09:8E38: 97 07        	sta	[<L271+current_record_1],Y
  7677 09:8E3A: C2 20        	rep	#$20
  7678                        	longa	on
  7679                        ;  memcpy(&one_word,&data[3],sizeof(WORD));
  7680                        	.line	1040
  7681 09:8E3C: F4 02 00     	pea	#<$2
  7682 09:8E3F: 18           	clc
  7683 09:8E40: A9 03 00     	lda	#$3
  7684 09:8E43: 65 0E        	adc	<L270+data_0
  7685 09:8E45: 85 01        	sta	<R0
  7686 09:8E47: A9 00 00     	lda	#$0
  7687 09:8E4A: 65 10        	adc	<L270+data_0+2
  7688 09:8E4C: 85 03        	sta	<R0+2
  7689 09:8E4E: D4 03        	pei	<R0+2
  7690 09:8E50: D4 01        	pei	<R0
  7691 09:8E52: F4 00 00     	pea	#0
  7692 09:8E55: 18           	clc
  7693 09:8E56: 7B           	tdc
  7694 09:8E57: 69 05 00     	adc	#<L271+one_word_1
  7695 09:8E5A: 48           	pha
  7696 09:8E5B: 22 xx xx xx  	jsl	~~memcpy
  7697                        ;  current_record->OffsetPatch = (DWORD) one_word;
  7698                        	.line	1041
  7699 09:8E5F: A0 00 00     	ldy	#$0
  7700 09:8E62: A5 05        	lda	<L271+one_word_1
  7701 09:8E64: 10 01        	bpl	L277
  7702 09:8E66: 88           	dey
  7703                        L277:
  7704 09:8E67: 85 01        	sta	<R0
  7705 09:8E69: 84 03        	sty	<R0+2
  7706 09:8E6B: A5 01        	lda	<R0
  7707 09:8E6D: A0 0B 00     	ldy	#$b
  7708 09:8E70: 97 07        	sta	[<L271+current_record_1],Y
  7709 09:8E72: A5 03        	lda	<R0+2
  7710 09:8E74: A0 0D 00     	ldy	#$d
  7711 09:8E77: 97 07        	sta	[<L271+current_record_1],Y
  7712                        ;  current_record->SegNum = data[5];
  7713                        	.line	1042
  7714 09:8E79: E2 20        	sep	#$20
  7715                        	longa	off
  7716 09:8E7B: A0 05 00     	ldy	#$5
  7717 09:8E7E: B7 0E        	lda	[<L270+data_0],Y
  7718 09:8E80: A0 11 00     	ldy	#$11
  7719 09:8E83: 97 07        	sta	[<L271+current_record_1],Y
  7720 09:8E85: C2 20        	rep	#$20
  7721                        	longa	on
  Mon Sep 27 2021  9:39                                                Page 144


  7722                        ;  memcpy(&one_word,&data[6],sizeof(WORD));
  7723                        	.line	1043
  7724 09:8E87: F4 02 00     	pea	#<$2
  7725 09:8E8A: 18           	clc
  7726 09:8E8B: A9 06 00     	lda	#$6
  7727 09:8E8E: 65 0E        	adc	<L270+data_0
  7728 09:8E90: 85 01        	sta	<R0
  7729 09:8E92: A9 00 00     	lda	#$0
  7730 09:8E95: 65 10        	adc	<L270+data_0+2
  7731 09:8E97: 85 03        	sta	<R0+2
  7732 09:8E99: D4 03        	pei	<R0+2
  7733 09:8E9B: D4 01        	pei	<R0
  7734 09:8E9D: F4 00 00     	pea	#0
  7735 09:8EA0: 18           	clc
  7736 09:8EA1: 7B           	tdc
  7737 09:8EA2: 69 05 00     	adc	#<L271+one_word_1
  7738 09:8EA5: 48           	pha
  7739 09:8EA6: 22 xx xx xx  	jsl	~~memcpy
  7740                        ;  current_record->OffsetReference = (DWORD) one_w
                    ord;
  7741                        	.line	1044
  7742 09:8EAA: A0 00 00     	ldy	#$0
  7743 09:8EAD: A5 05        	lda	<L271+one_word_1
  7744 09:8EAF: 10 01        	bpl	L278
  7745 09:8EB1: 88           	dey
  7746                        L278:
  7747 09:8EB2: 85 01        	sta	<R0
  7748 09:8EB4: 84 03        	sty	<R0+2
  7749 09:8EB6: A5 01        	lda	<R0
  7750 09:8EB8: A0 12 00     	ldy	#$12
  7751 09:8EBB: 97 07        	sta	[<L271+current_record_1],Y
  7752 09:8EBD: A5 03        	lda	<R0+2
  7753 09:8EBF: A0 14 00     	ldy	#$14
  7754 09:8EC2: 97 07        	sta	[<L271+current_record_1],Y
  7755                        ;
  7756                        ;  /* Conserve ce INTERSEG */
  7757                        ;  AddInterseg(current_record->ByteCnt,current_rec
                    ord->BitShiftCnt,current_record->OffsetPatch,current_record-
                    >OffsetReference,current_record->FileNum,current_record->Seg
                    Num,RECORD_cINTERSEG);
  7758                        	.line	1047
  7759 09:8EC4: F4 04 00     	pea	#<$4
  7760 09:8EC7: A0 11 00     	ldy	#$11
  7761 09:8ECA: B7 07        	lda	[<L271+current_record_1],Y
  7762 09:8ECC: 29 FF 00     	and	#$ff
  7763 09:8ECF: 48           	pha
  7764 09:8ED0: A0 0F 00     	ldy	#$f
  7765 09:8ED3: B7 07        	lda	[<L271+current_record_1],Y
  7766 09:8ED5: 48           	pha
  7767 09:8ED6: A0 14 00     	ldy	#$14
  7768 09:8ED9: B7 07        	lda	[<L271+current_record_1],Y
  7769 09:8EDB: 48           	pha
  7770 09:8EDC: A0 12 00     	ldy	#$12
  7771 09:8EDF: B7 07        	lda	[<L271+current_record_1],Y
  7772 09:8EE1: 48           	pha
  7773 09:8EE2: A0 0D 00     	ldy	#$d
  7774 09:8EE5: B7 07        	lda	[<L271+current_record_1],Y
  7775 09:8EE7: 48           	pha
  Mon Sep 27 2021  9:39                                                Page 145


  7776 09:8EE8: A0 0B 00     	ldy	#$b
  7777 09:8EEB: B7 07        	lda	[<L271+current_record_1],Y
  7778 09:8EED: 48           	pha
  7779 09:8EEE: A0 0A 00     	ldy	#$a
  7780 09:8EF1: B7 07        	lda	[<L271+current_record_1],Y
  7781 09:8EF3: 48           	pha
  7782 09:8EF4: A0 09 00     	ldy	#$9
  7783 09:8EF7: B7 07        	lda	[<L271+current_record_1],Y
  7784 09:8EF9: 48           	pha
  7785 09:8EFA: 22 A9 AC 09  	jsl	~~AddInterseg
  7786                        ;
  7787                        ;  /* Renvoie la structure */
  7788                        ;  *record_length_rtn = 4*sizeof(BYTE) + 2*sizeof(
                    WORD);
  7789                        	.line	1050
  7790 09:8EFE: A9 08 00     	lda	#$8
  7791 09:8F01: 87 16        	sta	[<L270+record_length_rtn_0]
  7792                        ;  return(current_record);
  7793                        	.line	1051
  7794 09:8F03: A6 09        	ldx	<L271+current_record_1+2
  7795 09:8F05: A5 07        	lda	<L271+current_record_1
  7796 09:8F07: 82 C0 FE     	brl	L274
  7797                        ;}
  7798                        	.line	1052
  7799                        	.endblock	1052
  7800             0000000A   L270	equ	10
  7801             00000005   L271	equ	5
  7802 09:8F0A:              	ends
  7803                        	efunc
  7804                        	.endfunc	1052,5,10
  7805                        	.line	1052
  7806                        ;
  7807                        ;
  7808                        ;/************************************************
                    *****/
  7809                        ;/*  DecodeRecordSUPER() :  Décodage du Record SUP
                    ER. */
  7810                        ;/************************************************
                    *****/
  7811                        ;static void *DecodeRecordSUPER(unsigned char *dat
                    a, int file_offset, int segment_offset, unsigned char *lcons
                    t, int lconst_length, int *record_length_rtn, struct omf_seg
                    ment *current_segment)
  7812                        ;{
  7813                        	.line	1058
  7814                        	.line	1059
  7815                        	LOADER
  7816                        	func
  7817                        	.function	1059
  7818                        ~~DecodeRecordSUPER:
  7819                        	longa	on
  7820                        	longi	on
  7821 09:8F0A: 3B           	tsc
  7822 09:8F0B: 38           	sec
  7823 09:8F0C: E9 29 00     	sbc	#L279
  7824 09:8F0F: 1B           	tcs
  7825 09:8F10: 0B           	phd
  7826 09:8F11: 5B           	tcd
  Mon Sep 27 2021  9:39                                                Page 146


  7827             00000004   data_0	set	4
  7828             00000008   file_offset_0	set	8
  7829             0000000A   segment_offset_0	set	10
  7830             0000000C   lconst_0	set	12
  7831             00000010   lconst_length_0	set	16
  7832             00000012   record_length_rtn_0	set	18
  7833             00000016   current_segment_0	set	22
  7834                        	.block	1059
  7835                        ;  int offset, length;
  7836                        ;  BYTE page;
  7837                        ;  struct record_SUPER *current_record;
  7838                        ;  struct subrecord_SuperReloc2 *current_SuperRelo
                    c2;
  7839                        ;  struct subrecord_SuperReloc3 *current_SuperRelo
                    c3;
  7840                        ;  struct subrecord_SuperInterseg1 *current_SuperI
                    nterseg1;
  7841                        ;  struct subrecord_SuperInterseg212 *current_Supe
                    rInterseg212;
  7842                        ;  struct subrecord_SuperInterseg1324 *current_Sup
                    erInterseg1324;
  7843                        ;  struct subrecord_SuperInterseg2536 *current_Sup
                    erInterseg2536;
  7844                        ;
  7845                        ;  /* Allocation mémoire */
  7846                        ;  current_record = (struct record_SUPER *) k_call
                    oc(1,sizeof(struct record_SUPER));
  7847             00000000   offset_1	set	0
  7848             00000002   length_1	set	2
  7849             00000004   page_1	set	4
  7850             00000005   current_record_1	set	5
  7851             00000009   current_SuperReloc2_1	set	9
  7852             0000000D   current_SuperReloc3_1	set	13
  7853             00000011   current_SuperInterseg1_1	set	17
  7854             00000015   current_SuperInterseg212_1	set	21
  7855             00000019   current_SuperInterseg1324_1	set	25
  7856             0000001D   current_SuperInterseg2536_1	set	29
  7857                        	.sym	offset,0,5,1,16
  7858                        	.sym	length,2,5,1,16
  7859                        	.sym	page,4,14,1,8
  7860                        	.sym	current_record,5,138,1,32,79
  7861                        	.sym	current_SuperReloc2,9,138,1,32,50
  7862                        	.sym	current_SuperReloc3,13,138,1,32,51
  7863                        	.sym	current_SuperInterseg1,17,138,1,32,52
  7864                        	.sym	current_SuperInterseg212,21,138,1,32,53
  7865                        	.sym	current_SuperInterseg1324,25,138,1,32,54
  7866                        	.sym	current_SuperInterseg2536,29,138,1,32,55
  7867                        	.sym	data,4,142,6,32
  7868                        	.sym	file_offset,8,5,6,16
  7869                        	.sym	segment_offset,10,5,6,16
  7870                        	.sym	lconst,12,142,6,32
  7871                        	.sym	lconst_length,16,5,6,16
  7872                        	.sym	record_length_rtn,18,133,6,32
  7873                        	.sym	current_segment,22,138,6,32,126
  7874                        	.line	1071
  7875 09:8F12: F4 4A 00     	pea	#<$4a
  7876 09:8F15: F4 01 00     	pea	#<$1
  7877 09:8F18: 22 xx xx xx  	jsl	~~k_calloc
  Mon Sep 27 2021  9:39                                                Page 147


  7878 09:8F1C: 85 0E        	sta	<L280+current_record_1
  7879 09:8F1E: 86 10        	stx	<L280+current_record_1+2
  7880                        ;  if(current_record == NULL)
  7881                        	.line	1072
  7882                        ;    {
  7883 09:8F20: A5 0E        	lda	<L280+current_record_1
  7884 09:8F22: 05 10        	ora	<L280+current_record_1+2
  7885 09:8F24: F0 03        	beq	L282
  7886 09:8F26: 82 19 00     	brl	L10193
  7887                        L282:
  7888                        	.line	1073
  7889                        ;      //printf("Error : Impossible to allocate me
                    mory to process Segment Body Record.\n");
  7890                        ;      return(NULL);
  7891                        	.line	1075
  7892 09:8F29: A9 00 00     	lda	#$0
  7893 09:8F2C: AA           	tax
  7894 09:8F2D: A9 00 00     	lda	#$0
  7895                        L283:
  7896 09:8F30: A8           	tay
  7897 09:8F31: A5 2B        	lda	<L279+2
  7898 09:8F33: 85 41        	sta	<L279+2+22
  7899 09:8F35: A5 2A        	lda	<L279+1
  7900 09:8F37: 85 40        	sta	<L279+1+22
  7901 09:8F39: 2B           	pld
  7902 09:8F3A: 3B           	tsc
  7903 09:8F3B: 18           	clc
  7904 09:8F3C: 69 3F 00     	adc	#L279+22
  7905 09:8F3F: 1B           	tcs
  7906 09:8F40: 98           	tya
  7907 09:8F41: 6B           	rtl
  7908                        ;    }
  7909                        	.line	1076
  7910                        ;
  7911                        ;  /* Offset */
  7912                        ;  current_record->FileOffset = (DWORD) file_offse
                    t;
  7913                        L10193:
  7914                        	.line	1079
  7915 09:8F42: A0 00 00     	ldy	#$0
  7916 09:8F45: A5 31        	lda	<L279+file_offset_0
  7917 09:8F47: 10 01        	bpl	L284
  7918 09:8F49: 88           	dey
  7919                        L284:
  7920 09:8F4A: 85 01        	sta	<R0
  7921 09:8F4C: 84 03        	sty	<R0+2
  7922 09:8F4E: A5 01        	lda	<R0
  7923 09:8F50: 87 0E        	sta	[<L280+current_record_1]
  7924 09:8F52: A5 03        	lda	<R0+2
  7925 09:8F54: A0 02 00     	ldy	#$2
  7926 09:8F57: 97 0E        	sta	[<L280+current_record_1],Y
  7927                        ;  current_record->SegmentOffset = (DWORD) segment
                    _offset;
  7928                        	.line	1080
  7929 09:8F59: A0 00 00     	ldy	#$0
  7930 09:8F5C: A5 33        	lda	<L279+segment_offset_0
  7931 09:8F5E: 10 01        	bpl	L285
  7932 09:8F60: 88           	dey
  Mon Sep 27 2021  9:39                                                Page 148


  7933                        L285:
  7934 09:8F61: 85 01        	sta	<R0
  7935 09:8F63: 84 03        	sty	<R0+2
  7936 09:8F65: A5 01        	lda	<R0
  7937 09:8F67: A0 04 00     	ldy	#$4
  7938 09:8F6A: 97 0E        	sta	[<L280+current_record_1],Y
  7939 09:8F6C: A5 03        	lda	<R0+2
  7940 09:8F6E: A0 06 00     	ldy	#$6
  7941 09:8F71: 97 0E        	sta	[<L280+current_record_1],Y
  7942                        ;
  7943                        ;  /* Operation Code : 0xF7 */
  7944                        ;  current_record->operation_code = data[0];
  7945                        	.line	1083
  7946 09:8F73: E2 20        	sep	#$20
  7947                        	longa	off
  7948 09:8F75: A7 2D        	lda	[<L279+data_0]
  7949 09:8F77: A0 08 00     	ldy	#$8
  7950 09:8F7A: 97 0E        	sta	[<L280+current_record_1],Y
  7951 09:8F7C: C2 20        	rep	#$20
  7952                        	longa	on
  7953                        ;
  7954                        ;  /* Longueur */
  7955                        ;  memcpy(&current_record->ByteCnt,&data[1],sizeof
                    (DWORD));
  7956                        	.line	1086
  7957 09:8F7E: F4 04 00     	pea	#<$4
  7958 09:8F81: 18           	clc
  7959 09:8F82: A9 01 00     	lda	#$1
  7960 09:8F85: 65 2D        	adc	<L279+data_0
  7961 09:8F87: 85 01        	sta	<R0
  7962 09:8F89: A9 00 00     	lda	#$0
  7963 09:8F8C: 65 2F        	adc	<L279+data_0+2
  7964 09:8F8E: 85 03        	sta	<R0+2
  7965 09:8F90: D4 03        	pei	<R0+2
  7966 09:8F92: D4 01        	pei	<R0
  7967 09:8F94: 18           	clc
  7968 09:8F95: A9 09 00     	lda	#$9
  7969 09:8F98: 65 0E        	adc	<L280+current_record_1
  7970 09:8F9A: 85 05        	sta	<R1
  7971 09:8F9C: A9 00 00     	lda	#$0
  7972 09:8F9F: 65 10        	adc	<L280+current_record_1+2
  7973 09:8FA1: 85 07        	sta	<R1+2
  7974 09:8FA3: D4 07        	pei	<R1+2
  7975 09:8FA5: D4 05        	pei	<R1
  7976 09:8FA7: 22 xx xx xx  	jsl	~~memcpy
  7977                        ;
  7978                        ;  /* Type */
  7979                        ;  current_record->RecordType = data[5];
  7980                        	.line	1089
  7981 09:8FAB: E2 20        	sep	#$20
  7982                        	longa	off
  7983 09:8FAD: A0 05 00     	ldy	#$5
  7984 09:8FB0: B7 2D        	lda	[<L279+data_0],Y
  7985 09:8FB2: A0 0D 00     	ldy	#$d
  7986 09:8FB5: 97 0E        	sta	[<L280+current_record_1],Y
  7987 09:8FB7: C2 20        	rep	#$20
  7988                        	longa	on
  7989                        ;
  Mon Sep 27 2021  9:39                                                Page 149


  7990                        ;  /** Décodage des Sous Record **/
  7991                        ;  if(current_record->RecordType == 0x00)
  7992                        	.line	1092
  7993                        ;    {
  7994 09:8FB9: A0 0D 00     	ldy	#$d
  7995 09:8FBC: B7 0E        	lda	[<L280+current_record_1],Y
  7996 09:8FBE: 29 FF 00     	and	#$ff
  7997 09:8FC1: F0 03        	beq	L286
  7998 09:8FC3: 82 E6 00     	brl	L10194
  7999                        L286:
  8000                        	.line	1093
  8001                        ;      /** Super Reloc2 **/
  8002                        ;      offset = 0;
  8003                        	.line	1095
  8004 09:8FC6: 64 09        	stz	<L280+offset_1
  8005                        ;      page = 0x00;
  8006                        	.line	1096
  8007 09:8FC8: E2 20        	sep	#$20
  8008                        	longa	off
  8009 09:8FCA: 64 0D        	stz	<L280+page_1
  8010 09:8FCC: C2 20        	rep	#$20
  8011                        	longa	on
  8012                        ;      while(1)
  8013                        	.line	1097
  8014                        L10195:
  8015                        ;        {
  8016                        	.line	1098
  8017                        ;          /* Récupère les données */
  8018                        ;          current_SuperReloc2 = DecodeSuperReloc2
                    (&data[1+sizeof(DWORD)+1+offset],lconst,lconst_length,&page,
                    &length,current_segment);
  8019                        	.line	1100
  8020 09:8FCE: D4 41        	pei	<L279+current_segment_0+2
  8021 09:8FD0: D4 3F        	pei	<L279+current_segment_0
  8022 09:8FD2: F4 00 00     	pea	#0
  8023 09:8FD5: 18           	clc
  8024 09:8FD6: 7B           	tdc
  8025 09:8FD7: 69 0B 00     	adc	#<L280+length_1
  8026 09:8FDA: 48           	pha
  8027 09:8FDB: F4 00 00     	pea	#0
  8028 09:8FDE: 18           	clc
  8029 09:8FDF: 7B           	tdc
  8030 09:8FE0: 69 0D 00     	adc	#<L280+page_1
  8031 09:8FE3: 48           	pha
  8032 09:8FE4: D4 39        	pei	<L279+lconst_length_0
  8033 09:8FE6: D4 37        	pei	<L279+lconst_0+2
  8034 09:8FE8: D4 35        	pei	<L279+lconst_0
  8035 09:8FEA: 18           	clc
  8036 09:8FEB: A9 06 00     	lda	#$6
  8037 09:8FEE: 65 09        	adc	<L280+offset_1
  8038 09:8FF0: 85 01        	sta	<R0
  8039 09:8FF2: A5 01        	lda	<R0
  8040 09:8FF4: 85 01        	sta	<R0
  8041 09:8FF6: 64 03        	stz	<R0+2
  8042 09:8FF8: 18           	clc
  8043 09:8FF9: A5 2D        	lda	<L279+data_0
  8044 09:8FFB: 65 01        	adc	<R0
  8045 09:8FFD: 85 05        	sta	<R1
  Mon Sep 27 2021  9:39                                                Page 150


  8046 09:8FFF: A5 2F        	lda	<L279+data_0+2
  8047 09:9001: 65 03        	adc	<R0+2
  8048 09:9003: 85 07        	sta	<R1+2
  8049 09:9005: D4 07        	pei	<R1+2
  8050 09:9007: D4 05        	pei	<R1
  8051 09:9009: 22 F3 96 09  	jsl	~~DecodeSuperReloc2
  8052 09:900D: 85 12        	sta	<L280+current_SuperReloc2_1
  8053 09:900F: 86 14        	stx	<L280+current_SuperReloc2_1+2
  8054                        ;          if(current_SuperReloc2 == NULL)
  8055                        	.line	1101
  8056                        ;            {
  8057 09:9011: A5 12        	lda	<L280+current_SuperReloc2_1
  8058 09:9013: 05 14        	ora	<L280+current_SuperReloc2_1+2
  8059 09:9015: F0 03        	beq	L287
  8060 09:9017: 82 12 00     	brl	L10197
  8061                        L287:
  8062                        	.line	1102
  8063                        ;              mem_free_SUPER(current_record);
  8064                        	.line	1103
  8065 09:901A: D4 10        	pei	<L280+current_record_1+2
  8066 09:901C: D4 0E        	pei	<L280+current_record_1
  8067 09:901E: 22 1A B1 09  	jsl	~~mem_free_SUPER
  8068                        ;              return(NULL);
  8069                        	.line	1104
  8070 09:9022: A9 00 00     	lda	#$0
  8071 09:9025: AA           	tax
  8072 09:9026: A9 00 00     	lda	#$0
  8073 09:9029: 82 04 FF     	brl	L283
  8074                        ;            }
  8075                        	.line	1105
  8076                        ;
  8077                        ;          /* Attache à la liste chainée */
  8078                        ;          if(current_record->first_SuperReloc2 ==
                     NULL)
  8079                        L10197:
  8080                        	.line	1108
  8081                        ;            current_record->first_SuperReloc2 = c
                    urrent_SuperReloc2;
  8082 09:902C: A0 10 00     	ldy	#$10
  8083 09:902F: B7 0E        	lda	[<L280+current_record_1],Y
  8084 09:9031: A0 12 00     	ldy	#$12
  8085 09:9034: 17 0E        	ora	[<L280+current_record_1],Y
  8086 09:9036: F0 03        	beq	L288
  8087 09:9038: 82 11 00     	brl	L10198
  8088                        L288:
  8089                        	.line	1109
  8090 09:903B: A5 12        	lda	<L280+current_SuperReloc2_1
  8091 09:903D: A0 10 00     	ldy	#$10
  8092 09:9040: 97 0E        	sta	[<L280+current_record_1],Y
  8093 09:9042: A5 14        	lda	<L280+current_SuperReloc2_1+2
  8094 09:9044: A0 12 00     	ldy	#$12
  8095 09:9047: 97 0E        	sta	[<L280+current_record_1],Y
  8096                        ;          else
  8097 09:9049: 82 1C 00     	brl	L10199
  8098                        L10198:
  8099                        ;            current_record->last_SuperReloc2->nex
                    t = current_SuperReloc2;
  8100                        	.line	1111
  Mon Sep 27 2021  9:39                                                Page 151


  8101 09:904C: A0 14 00     	ldy	#$14
  8102 09:904F: B7 0E        	lda	[<L280+current_record_1],Y
  8103 09:9051: 85 01        	sta	<R0
  8104 09:9053: A0 16 00     	ldy	#$16
  8105 09:9056: B7 0E        	lda	[<L280+current_record_1],Y
  8106 09:9058: 85 03        	sta	<R0+2
  8107 09:905A: A5 12        	lda	<L280+current_SuperReloc2_1
  8108 09:905C: A0 0D 08     	ldy	#$80d
  8109 09:905F: 97 01        	sta	[<R0],Y
  8110 09:9061: A5 14        	lda	<L280+current_SuperReloc2_1+2
  8111 09:9063: A0 0F 08     	ldy	#$80f
  8112 09:9066: 97 01        	sta	[<R0],Y
  8113                        L10199:
  8114                        ;          current_record->last_SuperReloc2 = curr
                    ent_SuperReloc2;
  8115                        	.line	1112
  8116 09:9068: A5 12        	lda	<L280+current_SuperReloc2_1
  8117 09:906A: A0 14 00     	ldy	#$14
  8118 09:906D: 97 0E        	sta	[<L280+current_record_1],Y
  8119 09:906F: A5 14        	lda	<L280+current_SuperReloc2_1+2
  8120 09:9071: A0 16 00     	ldy	#$16
  8121 09:9074: 97 0E        	sta	[<L280+current_record_1],Y
  8122                        ;          current_record->nb_SuperReloc2++;
  8123                        	.line	1113
  8124 09:9076: A0 0E 00     	ldy	#$e
  8125 09:9079: B7 0E        	lda	[<L280+current_record_1],Y
  8126 09:907B: 1A           	ina
  8127 09:907C: A0 0E 00     	ldy	#$e
  8128 09:907F: 97 0E        	sta	[<L280+current_record_1],Y
  8129                        ;
  8130                        ;          /* SubRecord suivant */
  8131                        ;          offset += length;
  8132                        	.line	1116
  8133 09:9081: 18           	clc
  8134 09:9082: A5 09        	lda	<L280+offset_1
  8135 09:9084: 65 0B        	adc	<L280+length_1
  8136 09:9086: 85 09        	sta	<L280+offset_1
  8137                        ;          if(offset == (int) (current_record->Byt
                    eCnt-1))
  8138                        	.line	1117
  8139                        ;            break;
  8140 09:9088: 18           	clc
  8141 09:9089: A9 FF FF     	lda	#$ffff
  8142 09:908C: A0 09 00     	ldy	#$9
  8143 09:908F: 77 0E        	adc	[<L280+current_record_1],Y
  8144 09:9091: 85 01        	sta	<R0
  8145 09:9093: A9 FF FF     	lda	#$ffff
  8146 09:9096: A0 0B 00     	ldy	#$b
  8147 09:9099: 77 0E        	adc	[<L280+current_record_1],Y
  8148 09:909B: 85 03        	sta	<R0+2
  8149 09:909D: A5 01        	lda	<R0
  8150 09:909F: C5 09        	cmp	<L280+offset_1
  8151 09:90A1: D0 03        	bne	L289
  8152 09:90A3: 82 03 00     	brl	L10196
  8153                        L289:
  8154                        ;        }
  8155                        	.line	1119
  8156 09:90A6: 82 25 FF     	brl	L10195
  Mon Sep 27 2021  9:39                                                Page 152


  8157                        L10196:
  8158                        ;    }
  8159                        	.line	1120
  8160                        ;  else if(current_record->RecordType == 0x01)
  8161 09:90A9: 82 31 05     	brl	L10200
  8162                        L10194:
  8163                        	.line	1121
  8164                        ;    {
  8165 09:90AC: E2 20        	sep	#$20
  8166                        	longa	off
  8167 09:90AE: A0 0D 00     	ldy	#$d
  8168 09:90B1: B7 0E        	lda	[<L280+current_record_1],Y
  8169 09:90B3: C9 01        	cmp	#<$1
  8170 09:90B5: C2 20        	rep	#$20
  8171                        	longa	on
  8172 09:90B7: F0 03        	beq	L290
  8173 09:90B9: 82 E6 00     	brl	L10201
  8174                        L290:
  8175                        	.line	1122
  8176                        ;      /** Super Reloc3 **/
  8177                        ;      offset = 0;
  8178                        	.line	1124
  8179 09:90BC: 64 09        	stz	<L280+offset_1
  8180                        ;      page = 0x00;
  8181                        	.line	1125
  8182 09:90BE: E2 20        	sep	#$20
  8183                        	longa	off
  8184 09:90C0: 64 0D        	stz	<L280+page_1
  8185 09:90C2: C2 20        	rep	#$20
  8186                        	longa	on
  8187                        ;      while(1)
  8188                        	.line	1126
  8189                        L10202:
  8190                        ;        {
  8191                        	.line	1127
  8192                        ;          /* Récupère les données */
  8193                        ;          current_SuperReloc3 = DecodeSuperReloc3
                    (&data[1+sizeof(DWORD)+1+offset],lconst,lconst_length,&page,
                    &length,current_segment);
  8194                        	.line	1129
  8195 09:90C4: D4 41        	pei	<L279+current_segment_0+2
  8196 09:90C6: D4 3F        	pei	<L279+current_segment_0
  8197 09:90C8: F4 00 00     	pea	#0
  8198 09:90CB: 18           	clc
  8199 09:90CC: 7B           	tdc
  8200 09:90CD: 69 0B 00     	adc	#<L280+length_1
  8201 09:90D0: 48           	pha
  8202 09:90D1: F4 00 00     	pea	#0
  8203 09:90D4: 18           	clc
  8204 09:90D5: 7B           	tdc
  8205 09:90D6: 69 0D 00     	adc	#<L280+page_1
  8206 09:90D9: 48           	pha
  8207 09:90DA: D4 39        	pei	<L279+lconst_length_0
  8208 09:90DC: D4 37        	pei	<L279+lconst_0+2
  8209 09:90DE: D4 35        	pei	<L279+lconst_0
  8210 09:90E0: 18           	clc
  8211 09:90E1: A9 06 00     	lda	#$6
  8212 09:90E4: 65 09        	adc	<L280+offset_1
  Mon Sep 27 2021  9:39                                                Page 153


  8213 09:90E6: 85 01        	sta	<R0
  8214 09:90E8: A5 01        	lda	<R0
  8215 09:90EA: 85 01        	sta	<R0
  8216 09:90EC: 64 03        	stz	<R0+2
  8217 09:90EE: 18           	clc
  8218 09:90EF: A5 2D        	lda	<L279+data_0
  8219 09:90F1: 65 01        	adc	<R0
  8220 09:90F3: 85 05        	sta	<R1
  8221 09:90F5: A5 2F        	lda	<L279+data_0+2
  8222 09:90F7: 65 03        	adc	<R0+2
  8223 09:90F9: 85 07        	sta	<R1+2
  8224 09:90FB: D4 07        	pei	<R1+2
  8225 09:90FD: D4 05        	pei	<R1
  8226 09:90FF: 22 12 9A 09  	jsl	~~DecodeSuperReloc3
  8227 09:9103: 85 16        	sta	<L280+current_SuperReloc3_1
  8228 09:9105: 86 18        	stx	<L280+current_SuperReloc3_1+2
  8229                        ;          if(current_SuperReloc3 == NULL)
  8230                        	.line	1130
  8231                        ;            {
  8232 09:9107: A5 16        	lda	<L280+current_SuperReloc3_1
  8233 09:9109: 05 18        	ora	<L280+current_SuperReloc3_1+2
  8234 09:910B: F0 03        	beq	L291
  8235 09:910D: 82 12 00     	brl	L10204
  8236                        L291:
  8237                        	.line	1131
  8238                        ;              mem_free_SUPER(current_record);
  8239                        	.line	1132
  8240 09:9110: D4 10        	pei	<L280+current_record_1+2
  8241 09:9112: D4 0E        	pei	<L280+current_record_1
  8242 09:9114: 22 1A B1 09  	jsl	~~mem_free_SUPER
  8243                        ;              return(NULL);
  8244                        	.line	1133
  8245 09:9118: A9 00 00     	lda	#$0
  8246 09:911B: AA           	tax
  8247 09:911C: A9 00 00     	lda	#$0
  8248 09:911F: 82 0E FE     	brl	L283
  8249                        ;            }
  8250                        	.line	1134
  8251                        ;
  8252                        ;          /* Attache à la liste chainée */
  8253                        ;          if(current_record->first_SuperReloc3 ==
                     NULL)
  8254                        L10204:
  8255                        	.line	1137
  8256                        ;            current_record->first_SuperReloc3 = c
                    urrent_SuperReloc3;
  8257 09:9122: A0 1A 00     	ldy	#$1a
  8258 09:9125: B7 0E        	lda	[<L280+current_record_1],Y
  8259 09:9127: A0 1C 00     	ldy	#$1c
  8260 09:912A: 17 0E        	ora	[<L280+current_record_1],Y
  8261 09:912C: F0 03        	beq	L292
  8262 09:912E: 82 11 00     	brl	L10205
  8263                        L292:
  8264                        	.line	1138
  8265 09:9131: A5 16        	lda	<L280+current_SuperReloc3_1
  8266 09:9133: A0 1A 00     	ldy	#$1a
  8267 09:9136: 97 0E        	sta	[<L280+current_record_1],Y
  8268 09:9138: A5 18        	lda	<L280+current_SuperReloc3_1+2
  Mon Sep 27 2021  9:39                                                Page 154


  8269 09:913A: A0 1C 00     	ldy	#$1c
  8270 09:913D: 97 0E        	sta	[<L280+current_record_1],Y
  8271                        ;          else
  8272 09:913F: 82 1C 00     	brl	L10206
  8273                        L10205:
  8274                        ;            current_record->last_SuperReloc3->nex
                    t = current_SuperReloc3;
  8275                        	.line	1140
  8276 09:9142: A0 1E 00     	ldy	#$1e
  8277 09:9145: B7 0E        	lda	[<L280+current_record_1],Y
  8278 09:9147: 85 01        	sta	<R0
  8279 09:9149: A0 20 00     	ldy	#$20
  8280 09:914C: B7 0E        	lda	[<L280+current_record_1],Y
  8281 09:914E: 85 03        	sta	<R0+2
  8282 09:9150: A5 16        	lda	<L280+current_SuperReloc3_1
  8283 09:9152: A0 0D 08     	ldy	#$80d
  8284 09:9155: 97 01        	sta	[<R0],Y
  8285 09:9157: A5 18        	lda	<L280+current_SuperReloc3_1+2
  8286 09:9159: A0 0F 08     	ldy	#$80f
  8287 09:915C: 97 01        	sta	[<R0],Y
  8288                        L10206:
  8289                        ;          current_record->last_SuperReloc3 = curr
                    ent_SuperReloc3;
  8290                        	.line	1141
  8291 09:915E: A5 16        	lda	<L280+current_SuperReloc3_1
  8292 09:9160: A0 1E 00     	ldy	#$1e
  8293 09:9163: 97 0E        	sta	[<L280+current_record_1],Y
  8294 09:9165: A5 18        	lda	<L280+current_SuperReloc3_1+2
  8295 09:9167: A0 20 00     	ldy	#$20
  8296 09:916A: 97 0E        	sta	[<L280+current_record_1],Y
  8297                        ;          current_record->nb_SuperReloc3++;
  8298                        	.line	1142
  8299 09:916C: A0 18 00     	ldy	#$18
  8300 09:916F: B7 0E        	lda	[<L280+current_record_1],Y
  8301 09:9171: 1A           	ina
  8302 09:9172: A0 18 00     	ldy	#$18
  8303 09:9175: 97 0E        	sta	[<L280+current_record_1],Y
  8304                        ;
  8305                        ;          /* SubRecord suivant */
  8306                        ;          offset += length;
  8307                        	.line	1145
  8308 09:9177: 18           	clc
  8309 09:9178: A5 09        	lda	<L280+offset_1
  8310 09:917A: 65 0B        	adc	<L280+length_1
  8311 09:917C: 85 09        	sta	<L280+offset_1
  8312                        ;          if(offset == (int) (current_record->Byt
                    eCnt-1))
  8313                        	.line	1146
  8314                        ;            break;
  8315 09:917E: 18           	clc
  8316 09:917F: A9 FF FF     	lda	#$ffff
  8317 09:9182: A0 09 00     	ldy	#$9
  8318 09:9185: 77 0E        	adc	[<L280+current_record_1],Y
  8319 09:9187: 85 01        	sta	<R0
  8320 09:9189: A9 FF FF     	lda	#$ffff
  8321 09:918C: A0 0B 00     	ldy	#$b
  8322 09:918F: 77 0E        	adc	[<L280+current_record_1],Y
  8323 09:9191: 85 03        	sta	<R0+2
  Mon Sep 27 2021  9:39                                                Page 155


  8324 09:9193: A5 01        	lda	<R0
  8325 09:9195: C5 09        	cmp	<L280+offset_1
  8326 09:9197: D0 03        	bne	L293
  8327 09:9199: 82 03 00     	brl	L10203
  8328                        L293:
  8329                        ;        }      
  8330                        	.line	1148
  8331 09:919C: 82 25 FF     	brl	L10202
  8332                        L10203:
  8333                        ;    }
  8334                        	.line	1149
  8335                        ;  else if(current_record->RecordType == 0x02)  /*
                     2 */
  8336 09:919F: 82 3B 04     	brl	L10207
  8337                        L10201:
  8338                        	.line	1150
  8339                        ;    {
  8340 09:91A2: E2 20        	sep	#$20
  8341                        	longa	off
  8342 09:91A4: A0 0D 00     	ldy	#$d
  8343 09:91A7: B7 0E        	lda	[<L280+current_record_1],Y
  8344 09:91A9: C9 02        	cmp	#<$2
  8345 09:91AB: C2 20        	rep	#$20
  8346                        	longa	on
  8347 09:91AD: F0 03        	beq	L294
  8348 09:91AF: 82 E6 00     	brl	L10208
  8349                        L294:
  8350                        	.line	1151
  8351                        ;      /** Super Interseg1 **/
  8352                        ;      offset = 0;
  8353                        	.line	1153
  8354 09:91B2: 64 09        	stz	<L280+offset_1
  8355                        ;      page = 0x00;
  8356                        	.line	1154
  8357 09:91B4: E2 20        	sep	#$20
  8358                        	longa	off
  8359 09:91B6: 64 0D        	stz	<L280+page_1
  8360 09:91B8: C2 20        	rep	#$20
  8361                        	longa	on
  8362                        ;      while(1)
  8363                        	.line	1155
  8364                        L10209:
  8365                        ;        {
  8366                        	.line	1156
  8367                        ;          /* Récupère les données */
  8368                        ;          current_SuperInterseg1 = DecodeSuperInt
                    erseg1(&data[1+sizeof(DWORD)+1+offset],lconst,lconst_length,
                    &page,&length,current_segment);
  8369                        	.line	1158
  8370 09:91BA: D4 41        	pei	<L279+current_segment_0+2
  8371 09:91BC: D4 3F        	pei	<L279+current_segment_0
  8372 09:91BE: F4 00 00     	pea	#0
  8373 09:91C1: 18           	clc
  8374 09:91C2: 7B           	tdc
  8375 09:91C3: 69 0B 00     	adc	#<L280+length_1
  8376 09:91C6: 48           	pha
  8377 09:91C7: F4 00 00     	pea	#0
  8378 09:91CA: 18           	clc
  Mon Sep 27 2021  9:39                                                Page 156


  8379 09:91CB: 7B           	tdc
  8380 09:91CC: 69 0D 00     	adc	#<L280+page_1
  8381 09:91CF: 48           	pha
  8382 09:91D0: D4 39        	pei	<L279+lconst_length_0
  8383 09:91D2: D4 37        	pei	<L279+lconst_0+2
  8384 09:91D4: D4 35        	pei	<L279+lconst_0
  8385 09:91D6: 18           	clc
  8386 09:91D7: A9 06 00     	lda	#$6
  8387 09:91DA: 65 09        	adc	<L280+offset_1
  8388 09:91DC: 85 01        	sta	<R0
  8389 09:91DE: A5 01        	lda	<R0
  8390 09:91E0: 85 01        	sta	<R0
  8391 09:91E2: 64 03        	stz	<R0+2
  8392 09:91E4: 18           	clc
  8393 09:91E5: A5 2D        	lda	<L279+data_0
  8394 09:91E7: 65 01        	adc	<R0
  8395 09:91E9: 85 05        	sta	<R1
  8396 09:91EB: A5 2F        	lda	<L279+data_0+2
  8397 09:91ED: 65 03        	adc	<R0+2
  8398 09:91EF: 85 07        	sta	<R1+2
  8399 09:91F1: D4 07        	pei	<R1+2
  8400 09:91F3: D4 05        	pei	<R1
  8401 09:91F5: 22 31 9D 09  	jsl	~~DecodeSuperInterseg1
  8402 09:91F9: 85 1A        	sta	<L280+current_SuperInterseg1_1
  8403 09:91FB: 86 1C        	stx	<L280+current_SuperInterseg1_1+2
  8404                        ;          if(current_SuperInterseg1 == NULL)
  8405                        	.line	1159
  8406                        ;            {
  8407 09:91FD: A5 1A        	lda	<L280+current_SuperInterseg1_1
  8408 09:91FF: 05 1C        	ora	<L280+current_SuperInterseg1_1+2
  8409 09:9201: F0 03        	beq	L295
  8410 09:9203: 82 12 00     	brl	L10211
  8411                        L295:
  8412                        	.line	1160
  8413                        ;              mem_free_SUPER(current_record);
  8414                        	.line	1161
  8415 09:9206: D4 10        	pei	<L280+current_record_1+2
  8416 09:9208: D4 0E        	pei	<L280+current_record_1
  8417 09:920A: 22 1A B1 09  	jsl	~~mem_free_SUPER
  8418                        ;              return(NULL);
  8419                        	.line	1162
  8420 09:920E: A9 00 00     	lda	#$0
  8421 09:9211: AA           	tax
  8422 09:9212: A9 00 00     	lda	#$0
  8423 09:9215: 82 18 FD     	brl	L283
  8424                        ;            }
  8425                        	.line	1163
  8426                        ;
  8427                        ;          /* Attache à la liste chainée */
  8428                        ;          if(current_record->first_SuperInterseg1
                     == NULL)
  8429                        L10211:
  8430                        	.line	1166
  8431                        ;            current_record->first_SuperInterseg1 
                    = current_SuperInterseg1;
  8432 09:9218: A0 24 00     	ldy	#$24
  8433 09:921B: B7 0E        	lda	[<L280+current_record_1],Y
  8434 09:921D: A0 26 00     	ldy	#$26
  Mon Sep 27 2021  9:39                                                Page 157


  8435 09:9220: 17 0E        	ora	[<L280+current_record_1],Y
  8436 09:9222: F0 03        	beq	L296
  8437 09:9224: 82 11 00     	brl	L10212
  8438                        L296:
  8439                        	.line	1167
  8440 09:9227: A5 1A        	lda	<L280+current_SuperInterseg1_1
  8441 09:9229: A0 24 00     	ldy	#$24
  8442 09:922C: 97 0E        	sta	[<L280+current_record_1],Y
  8443 09:922E: A5 1C        	lda	<L280+current_SuperInterseg1_1+2
  8444 09:9230: A0 26 00     	ldy	#$26
  8445 09:9233: 97 0E        	sta	[<L280+current_record_1],Y
  8446                        ;          else
  8447 09:9235: 82 1C 00     	brl	L10213
  8448                        L10212:
  8449                        ;            current_record->last_SuperInterseg1->
                    next = current_SuperInterseg1;
  8450                        	.line	1169
  8451 09:9238: A0 28 00     	ldy	#$28
  8452 09:923B: B7 0E        	lda	[<L280+current_record_1],Y
  8453 09:923D: 85 01        	sta	<R0
  8454 09:923F: A0 2A 00     	ldy	#$2a
  8455 09:9242: B7 0E        	lda	[<L280+current_record_1],Y
  8456 09:9244: 85 03        	sta	<R0+2
  8457 09:9246: A5 1A        	lda	<L280+current_SuperInterseg1_1
  8458 09:9248: A0 0F 0A     	ldy	#$a0f
  8459 09:924B: 97 01        	sta	[<R0],Y
  8460 09:924D: A5 1C        	lda	<L280+current_SuperInterseg1_1+2
  8461 09:924F: A0 11 0A     	ldy	#$a11
  8462 09:9252: 97 01        	sta	[<R0],Y
  8463                        L10213:
  8464                        ;          current_record->last_SuperInterseg1 = c
                    urrent_SuperInterseg1;
  8465                        	.line	1170
  8466 09:9254: A5 1A        	lda	<L280+current_SuperInterseg1_1
  8467 09:9256: A0 28 00     	ldy	#$28
  8468 09:9259: 97 0E        	sta	[<L280+current_record_1],Y
  8469 09:925B: A5 1C        	lda	<L280+current_SuperInterseg1_1+2
  8470 09:925D: A0 2A 00     	ldy	#$2a
  8471 09:9260: 97 0E        	sta	[<L280+current_record_1],Y
  8472                        ;          current_record->nb_SuperInterseg1++;
  8473                        	.line	1171
  8474 09:9262: A0 22 00     	ldy	#$22
  8475 09:9265: B7 0E        	lda	[<L280+current_record_1],Y
  8476 09:9267: 1A           	ina
  8477 09:9268: A0 22 00     	ldy	#$22
  8478 09:926B: 97 0E        	sta	[<L280+current_record_1],Y
  8479                        ;
  8480                        ;          /* SubRecord suivant */
  8481                        ;          offset += length;
  8482                        	.line	1174
  8483 09:926D: 18           	clc
  8484 09:926E: A5 09        	lda	<L280+offset_1
  8485 09:9270: 65 0B        	adc	<L280+length_1
  8486 09:9272: 85 09        	sta	<L280+offset_1
  8487                        ;          if(offset == (int) (current_record->Byt
                    eCnt-1))
  8488                        	.line	1175
  8489                        ;            break;
  Mon Sep 27 2021  9:39                                                Page 158


  8490 09:9274: 18           	clc
  8491 09:9275: A9 FF FF     	lda	#$ffff
  8492 09:9278: A0 09 00     	ldy	#$9
  8493 09:927B: 77 0E        	adc	[<L280+current_record_1],Y
  8494 09:927D: 85 01        	sta	<R0
  8495 09:927F: A9 FF FF     	lda	#$ffff
  8496 09:9282: A0 0B 00     	ldy	#$b
  8497 09:9285: 77 0E        	adc	[<L280+current_record_1],Y
  8498 09:9287: 85 03        	sta	<R0+2
  8499 09:9289: A5 01        	lda	<R0
  8500 09:928B: C5 09        	cmp	<L280+offset_1
  8501 09:928D: D0 03        	bne	L297
  8502 09:928F: 82 03 00     	brl	L10210
  8503                        L297:
  8504                        ;        }  
  8505                        	.line	1177
  8506 09:9292: 82 25 FF     	brl	L10209
  8507                        L10210:
  8508                        ;    }
  8509                        	.line	1178
  8510                        ;  else if(current_record->RecordType >= 0x03 && c
                    urrent_record->RecordType <= 0x0D)  /* 3-13 */
  8511 09:9295: 82 45 03     	brl	L10214
  8512                        L10208:
  8513                        	.line	1179
  8514                        ;    {
  8515 09:9298: E2 20        	sep	#$20
  8516                        	longa	off
  8517 09:929A: A0 0D 00     	ldy	#$d
  8518 09:929D: B7 0E        	lda	[<L280+current_record_1],Y
  8519 09:929F: C9 03        	cmp	#<$3
  8520 09:92A1: C2 20        	rep	#$20
  8521                        	longa	on
  8522 09:92A3: B0 03        	bcs	L298
  8523 09:92A5: 82 07 01     	brl	L10215
  8524                        L298:
  8525 09:92A8: E2 20        	sep	#$20
  8526                        	longa	off
  8527 09:92AA: A9 0D        	lda	#$d
  8528 09:92AC: A0 0D 00     	ldy	#$d
  8529 09:92AF: D7 0E        	cmp	[<L280+current_record_1],Y
  8530 09:92B1: C2 20        	rep	#$20
  8531                        	longa	on
  8532 09:92B3: B0 03        	bcs	L299
  8533 09:92B5: 82 F7 00     	brl	L10215
  8534                        L299:
  8535                        	.line	1180
  8536                        ;      /** Super Interseg 2-12 **/
  8537                        ;      offset = 0;
  8538                        	.line	1182
  8539 09:92B8: 64 09        	stz	<L280+offset_1
  8540                        ;      page = 0x00;
  8541                        	.line	1183
  8542 09:92BA: E2 20        	sep	#$20
  8543                        	longa	off
  8544 09:92BC: 64 0D        	stz	<L280+page_1
  8545 09:92BE: C2 20        	rep	#$20
  8546                        	longa	on
  Mon Sep 27 2021  9:39                                                Page 159


  8547                        ;      while(1)
  8548                        	.line	1184
  8549                        L10216:
  8550                        ;        {
  8551                        	.line	1185
  8552                        ;          /* Récupère les données */
  8553                        ;          current_SuperInterseg212 = DecodeSuperI
                    nterseg212(&data[1+sizeof(DWORD)+1+offset],current_record->R
                    ecordType-1,lconst,lconst_length,&page,&length,current_segme
                    nt);
  8554                        	.line	1187
  8555 09:92C0: D4 41        	pei	<L279+current_segment_0+2
  8556 09:92C2: D4 3F        	pei	<L279+current_segment_0
  8557 09:92C4: F4 00 00     	pea	#0
  8558 09:92C7: 18           	clc
  8559 09:92C8: 7B           	tdc
  8560 09:92C9: 69 0B 00     	adc	#<L280+length_1
  8561 09:92CC: 48           	pha
  8562 09:92CD: F4 00 00     	pea	#0
  8563 09:92D0: 18           	clc
  8564 09:92D1: 7B           	tdc
  8565 09:92D2: 69 0D 00     	adc	#<L280+page_1
  8566 09:92D5: 48           	pha
  8567 09:92D6: D4 39        	pei	<L279+lconst_length_0
  8568 09:92D8: D4 37        	pei	<L279+lconst_0+2
  8569 09:92DA: D4 35        	pei	<L279+lconst_0
  8570 09:92DC: A0 0D 00     	ldy	#$d
  8571 09:92DF: B7 0E        	lda	[<L280+current_record_1],Y
  8572 09:92E1: 29 FF 00     	and	#$ff
  8573 09:92E4: 85 01        	sta	<R0
  8574 09:92E6: 18           	clc
  8575 09:92E7: A9 FF FF     	lda	#$ffff
  8576 09:92EA: 65 01        	adc	<R0
  8577 09:92EC: 48           	pha
  8578 09:92ED: 18           	clc
  8579 09:92EE: A9 06 00     	lda	#$6
  8580 09:92F1: 65 09        	adc	<L280+offset_1
  8581 09:92F3: 85 01        	sta	<R0
  8582 09:92F5: A5 01        	lda	<R0
  8583 09:92F7: 85 01        	sta	<R0
  8584 09:92F9: 64 03        	stz	<R0+2
  8585 09:92FB: 18           	clc
  8586 09:92FC: A5 2D        	lda	<L279+data_0
  8587 09:92FE: 65 01        	adc	<R0
  8588 09:9300: 85 05        	sta	<R1
  8589 09:9302: A5 2F        	lda	<L279+data_0+2
  8590 09:9304: 65 03        	adc	<R0+2
  8591 09:9306: 85 07        	sta	<R1+2
  8592 09:9308: D4 07        	pei	<R1+2
  8593 09:930A: D4 05        	pei	<R1
  8594 09:930C: 22 70 A1 09  	jsl	~~DecodeSuperInterseg212
  8595 09:9310: 85 1E        	sta	<L280+current_SuperInterseg212_1
  8596 09:9312: 86 20        	stx	<L280+current_SuperInterseg212_1+2
  8597                        ;          if(current_SuperInterseg212 == NULL)
  8598                        	.line	1188
  8599                        ;            {
  8600 09:9314: A5 1E        	lda	<L280+current_SuperInterseg212_1
  8601 09:9316: 05 20        	ora	<L280+current_SuperInterseg212_1+2
  Mon Sep 27 2021  9:39                                                Page 160


  8602 09:9318: F0 03        	beq	L300
  8603 09:931A: 82 12 00     	brl	L10218
  8604                        L300:
  8605                        	.line	1189
  8606                        ;              mem_free_SUPER(current_record);
  8607                        	.line	1190
  8608 09:931D: D4 10        	pei	<L280+current_record_1+2
  8609 09:931F: D4 0E        	pei	<L280+current_record_1
  8610 09:9321: 22 1A B1 09  	jsl	~~mem_free_SUPER
  8611                        ;              return(NULL);
  8612                        	.line	1191
  8613 09:9325: A9 00 00     	lda	#$0
  8614 09:9328: AA           	tax
  8615 09:9329: A9 00 00     	lda	#$0
  8616 09:932C: 82 01 FC     	brl	L283
  8617                        ;            }
  8618                        	.line	1192
  8619                        ;
  8620                        ;          /* Attache à la liste chainée */
  8621                        ;          if(current_record->first_SuperInterseg2
                    12 == NULL)
  8622                        L10218:
  8623                        	.line	1195
  8624                        ;            current_record->first_SuperInterseg21
                    2 = current_SuperInterseg212;
  8625 09:932F: A0 2E 00     	ldy	#$2e
  8626 09:9332: B7 0E        	lda	[<L280+current_record_1],Y
  8627 09:9334: A0 30 00     	ldy	#$30
  8628 09:9337: 17 0E        	ora	[<L280+current_record_1],Y
  8629 09:9339: F0 03        	beq	L301
  8630 09:933B: 82 11 00     	brl	L10219
  8631                        L301:
  8632                        	.line	1196
  8633 09:933E: A5 1E        	lda	<L280+current_SuperInterseg212_1
  8634 09:9340: A0 2E 00     	ldy	#$2e
  8635 09:9343: 97 0E        	sta	[<L280+current_record_1],Y
  8636 09:9345: A5 20        	lda	<L280+current_SuperInterseg212_1+2
  8637 09:9347: A0 30 00     	ldy	#$30
  8638 09:934A: 97 0E        	sta	[<L280+current_record_1],Y
  8639                        ;          else
  8640 09:934C: 82 1C 00     	brl	L10220
  8641                        L10219:
  8642                        ;            current_record->last_SuperInterseg212
                    ->next = current_SuperInterseg212;
  8643                        	.line	1198
  8644 09:934F: A0 32 00     	ldy	#$32
  8645 09:9352: B7 0E        	lda	[<L280+current_record_1],Y
  8646 09:9354: 85 01        	sta	<R0
  8647 09:9356: A0 34 00     	ldy	#$34
  8648 09:9359: B7 0E        	lda	[<L280+current_record_1],Y
  8649 09:935B: 85 03        	sta	<R0+2
  8650 09:935D: A5 1E        	lda	<L280+current_SuperInterseg212_1
  8651 09:935F: A0 0F 0A     	ldy	#$a0f
  8652 09:9362: 97 01        	sta	[<R0],Y
  8653 09:9364: A5 20        	lda	<L280+current_SuperInterseg212_1+2
  8654 09:9366: A0 11 0A     	ldy	#$a11
  8655 09:9369: 97 01        	sta	[<R0],Y
  8656                        L10220:
  Mon Sep 27 2021  9:39                                                Page 161


  8657                        ;          current_record->last_SuperInterseg212 =
                     current_SuperInterseg212;
  8658                        	.line	1199
  8659 09:936B: A5 1E        	lda	<L280+current_SuperInterseg212_1
  8660 09:936D: A0 32 00     	ldy	#$32
  8661 09:9370: 97 0E        	sta	[<L280+current_record_1],Y
  8662 09:9372: A5 20        	lda	<L280+current_SuperInterseg212_1+2
  8663 09:9374: A0 34 00     	ldy	#$34
  8664 09:9377: 97 0E        	sta	[<L280+current_record_1],Y
  8665                        ;          current_record->nb_SuperInterseg212++;
  8666                        	.line	1200
  8667 09:9379: A0 2C 00     	ldy	#$2c
  8668 09:937C: B7 0E        	lda	[<L280+current_record_1],Y
  8669 09:937E: 1A           	ina
  8670 09:937F: A0 2C 00     	ldy	#$2c
  8671 09:9382: 97 0E        	sta	[<L280+current_record_1],Y
  8672                        ;
  8673                        ;          /* SubRecord suivant */
  8674                        ;          offset += length;
  8675                        	.line	1203
  8676 09:9384: 18           	clc
  8677 09:9385: A5 09        	lda	<L280+offset_1
  8678 09:9387: 65 0B        	adc	<L280+length_1
  8679 09:9389: 85 09        	sta	<L280+offset_1
  8680                        ;          if(offset == (int) (current_record->Byt
                    eCnt-1))
  8681                        	.line	1204
  8682                        ;            break;
  8683 09:938B: 18           	clc
  8684 09:938C: A9 FF FF     	lda	#$ffff
  8685 09:938F: A0 09 00     	ldy	#$9
  8686 09:9392: 77 0E        	adc	[<L280+current_record_1],Y
  8687 09:9394: 85 01        	sta	<R0
  8688 09:9396: A9 FF FF     	lda	#$ffff
  8689 09:9399: A0 0B 00     	ldy	#$b
  8690 09:939C: 77 0E        	adc	[<L280+current_record_1],Y
  8691 09:939E: 85 03        	sta	<R0+2
  8692 09:93A0: A5 01        	lda	<R0
  8693 09:93A2: C5 09        	cmp	<L280+offset_1
  8694 09:93A4: D0 03        	bne	L302
  8695 09:93A6: 82 03 00     	brl	L10217
  8696                        L302:
  8697                        ;        }
  8698                        	.line	1206
  8699 09:93A9: 82 14 FF     	brl	L10216
  8700                        L10217:
  8701                        ;    }
  8702                        	.line	1207
  8703                        ;  else if(current_record->RecordType >= 0x0E && c
                    urrent_record->RecordType <= 0x19)  /* 14-25 */
  8704 09:93AC: 82 2E 02     	brl	L10221
  8705                        L10215:
  8706                        	.line	1208
  8707                        ;    {
  8708 09:93AF: E2 20        	sep	#$20
  8709                        	longa	off
  8710 09:93B1: A0 0D 00     	ldy	#$d
  8711 09:93B4: B7 0E        	lda	[<L280+current_record_1],Y
  Mon Sep 27 2021  9:39                                                Page 162


  8712 09:93B6: C9 0E        	cmp	#<$e
  8713 09:93B8: C2 20        	rep	#$20
  8714                        	longa	on
  8715 09:93BA: B0 03        	bcs	L303
  8716 09:93BC: 82 07 01     	brl	L10222
  8717                        L303:
  8718 09:93BF: E2 20        	sep	#$20
  8719                        	longa	off
  8720 09:93C1: A9 19        	lda	#$19
  8721 09:93C3: A0 0D 00     	ldy	#$d
  8722 09:93C6: D7 0E        	cmp	[<L280+current_record_1],Y
  8723 09:93C8: C2 20        	rep	#$20
  8724                        	longa	on
  8725 09:93CA: B0 03        	bcs	L304
  8726 09:93CC: 82 F7 00     	brl	L10222
  8727                        L304:
  8728                        	.line	1209
  8729                        ;      /** Super Interseg 13-24 **/
  8730                        ;      offset = 0;
  8731                        	.line	1211
  8732 09:93CF: 64 09        	stz	<L280+offset_1
  8733                        ;      page = 0x00;
  8734                        	.line	1212
  8735 09:93D1: E2 20        	sep	#$20
  8736                        	longa	off
  8737 09:93D3: 64 0D        	stz	<L280+page_1
  8738 09:93D5: C2 20        	rep	#$20
  8739                        	longa	on
  8740                        ;      while(1)
  8741                        	.line	1213
  8742                        L10223:
  8743                        ;        {
  8744                        	.line	1214
  8745                        ;          /* Récupère les données */
  8746                        ;          current_SuperInterseg1324 = DecodeSuper
                    Interseg1324(&data[1+sizeof(DWORD)+1+offset],current_record-
                    >RecordType-1-12,lconst,lconst_length,&page,&length,current_
                    segment);
  8747                        	.line	1216
  8748 09:93D7: D4 41        	pei	<L279+current_segment_0+2
  8749 09:93D9: D4 3F        	pei	<L279+current_segment_0
  8750 09:93DB: F4 00 00     	pea	#0
  8751 09:93DE: 18           	clc
  8752 09:93DF: 7B           	tdc
  8753 09:93E0: 69 0B 00     	adc	#<L280+length_1
  8754 09:93E3: 48           	pha
  8755 09:93E4: F4 00 00     	pea	#0
  8756 09:93E7: 18           	clc
  8757 09:93E8: 7B           	tdc
  8758 09:93E9: 69 0D 00     	adc	#<L280+page_1
  8759 09:93EC: 48           	pha
  8760 09:93ED: D4 39        	pei	<L279+lconst_length_0
  8761 09:93EF: D4 37        	pei	<L279+lconst_0+2
  8762 09:93F1: D4 35        	pei	<L279+lconst_0
  8763 09:93F3: A0 0D 00     	ldy	#$d
  8764 09:93F6: B7 0E        	lda	[<L280+current_record_1],Y
  8765 09:93F8: 29 FF 00     	and	#$ff
  8766 09:93FB: 85 01        	sta	<R0
  Mon Sep 27 2021  9:39                                                Page 163


  8767 09:93FD: 18           	clc
  8768 09:93FE: A9 F3 FF     	lda	#$fff3
  8769 09:9401: 65 01        	adc	<R0
  8770 09:9403: 48           	pha
  8771 09:9404: 18           	clc
  8772 09:9405: A9 06 00     	lda	#$6
  8773 09:9408: 65 09        	adc	<L280+offset_1
  8774 09:940A: 85 01        	sta	<R0
  8775 09:940C: A5 01        	lda	<R0
  8776 09:940E: 85 01        	sta	<R0
  8777 09:9410: 64 03        	stz	<R0+2
  8778 09:9412: 18           	clc
  8779 09:9413: A5 2D        	lda	<L279+data_0
  8780 09:9415: 65 01        	adc	<R0
  8781 09:9417: 85 05        	sta	<R1
  8782 09:9419: A5 2F        	lda	<L279+data_0+2
  8783 09:941B: 65 03        	adc	<R0+2
  8784 09:941D: 85 07        	sta	<R1+2
  8785 09:941F: D4 07        	pei	<R1+2
  8786 09:9421: D4 05        	pei	<R1
  8787 09:9423: 22 B1 A5 09  	jsl	~~DecodeSuperInterseg1324
  8788 09:9427: 85 22        	sta	<L280+current_SuperInterseg1324_1
  8789 09:9429: 86 24        	stx	<L280+current_SuperInterseg1324_1+2
  8790                        ;          if(current_SuperInterseg1324 == NULL)
  8791                        	.line	1217
  8792                        ;            {
  8793 09:942B: A5 22        	lda	<L280+current_SuperInterseg1324_1
  8794 09:942D: 05 24        	ora	<L280+current_SuperInterseg1324_1+2
  8795 09:942F: F0 03        	beq	L305
  8796 09:9431: 82 12 00     	brl	L10225
  8797                        L305:
  8798                        	.line	1218
  8799                        ;              mem_free_SUPER(current_record);
  8800                        	.line	1219
  8801 09:9434: D4 10        	pei	<L280+current_record_1+2
  8802 09:9436: D4 0E        	pei	<L280+current_record_1
  8803 09:9438: 22 1A B1 09  	jsl	~~mem_free_SUPER
  8804                        ;              return(NULL);
  8805                        	.line	1220
  8806 09:943C: A9 00 00     	lda	#$0
  8807 09:943F: AA           	tax
  8808 09:9440: A9 00 00     	lda	#$0
  8809 09:9443: 82 EA FA     	brl	L283
  8810                        ;            }
  8811                        	.line	1221
  8812                        ;
  8813                        ;          /* Attache à la liste chainée */
  8814                        ;          if(current_record->first_SuperInterseg1
                    324 == NULL)
  8815                        L10225:
  8816                        	.line	1224
  8817                        ;            current_record->first_SuperInterseg13
                    24 = current_SuperInterseg1324;
  8818 09:9446: A0 38 00     	ldy	#$38
  8819 09:9449: B7 0E        	lda	[<L280+current_record_1],Y
  8820 09:944B: A0 3A 00     	ldy	#$3a
  8821 09:944E: 17 0E        	ora	[<L280+current_record_1],Y
  8822 09:9450: F0 03        	beq	L306
  Mon Sep 27 2021  9:39                                                Page 164


  8823 09:9452: 82 11 00     	brl	L10226
  8824                        L306:
  8825                        	.line	1225
  8826 09:9455: A5 22        	lda	<L280+current_SuperInterseg1324_1
  8827 09:9457: A0 38 00     	ldy	#$38
  8828 09:945A: 97 0E        	sta	[<L280+current_record_1],Y
  8829 09:945C: A5 24        	lda	<L280+current_SuperInterseg1324_1+2
  8830 09:945E: A0 3A 00     	ldy	#$3a
  8831 09:9461: 97 0E        	sta	[<L280+current_record_1],Y
  8832                        ;          else
  8833 09:9463: 82 1C 00     	brl	L10227
  8834                        L10226:
  8835                        ;            current_record->last_SuperInterseg132
                    4->next = current_SuperInterseg1324;
  8836                        	.line	1227
  8837 09:9466: A0 3C 00     	ldy	#$3c
  8838 09:9469: B7 0E        	lda	[<L280+current_record_1],Y
  8839 09:946B: 85 01        	sta	<R0
  8840 09:946D: A0 3E 00     	ldy	#$3e
  8841 09:9470: B7 0E        	lda	[<L280+current_record_1],Y
  8842 09:9472: 85 03        	sta	<R0+2
  8843 09:9474: A5 22        	lda	<L280+current_SuperInterseg1324_1
  8844 09:9476: A0 10 08     	ldy	#$810
  8845 09:9479: 97 01        	sta	[<R0],Y
  8846 09:947B: A5 24        	lda	<L280+current_SuperInterseg1324_1+2
  8847 09:947D: A0 12 08     	ldy	#$812
  8848 09:9480: 97 01        	sta	[<R0],Y
  8849                        L10227:
  8850                        ;          current_record->last_SuperInterseg1324 
                    = current_SuperInterseg1324;
  8851                        	.line	1228
  8852 09:9482: A5 22        	lda	<L280+current_SuperInterseg1324_1
  8853 09:9484: A0 3C 00     	ldy	#$3c
  8854 09:9487: 97 0E        	sta	[<L280+current_record_1],Y
  8855 09:9489: A5 24        	lda	<L280+current_SuperInterseg1324_1+2
  8856 09:948B: A0 3E 00     	ldy	#$3e
  8857 09:948E: 97 0E        	sta	[<L280+current_record_1],Y
  8858                        ;          current_record->nb_SuperInterseg1324++;
  8859                        	.line	1229
  8860 09:9490: A0 36 00     	ldy	#$36
  8861 09:9493: B7 0E        	lda	[<L280+current_record_1],Y
  8862 09:9495: 1A           	ina
  8863 09:9496: A0 36 00     	ldy	#$36
  8864 09:9499: 97 0E        	sta	[<L280+current_record_1],Y
  8865                        ;
  8866                        ;          /* SubRecord suivant */
  8867                        ;          offset += length;
  8868                        	.line	1232
  8869 09:949B: 18           	clc
  8870 09:949C: A5 09        	lda	<L280+offset_1
  8871 09:949E: 65 0B        	adc	<L280+length_1
  8872 09:94A0: 85 09        	sta	<L280+offset_1
  8873                        ;          if(offset == (int) (current_record->Byt
                    eCnt-1))
  8874                        	.line	1233
  8875                        ;            break;
  8876 09:94A2: 18           	clc
  8877 09:94A3: A9 FF FF     	lda	#$ffff
  Mon Sep 27 2021  9:39                                                Page 165


  8878 09:94A6: A0 09 00     	ldy	#$9
  8879 09:94A9: 77 0E        	adc	[<L280+current_record_1],Y
  8880 09:94AB: 85 01        	sta	<R0
  8881 09:94AD: A9 FF FF     	lda	#$ffff
  8882 09:94B0: A0 0B 00     	ldy	#$b
  8883 09:94B3: 77 0E        	adc	[<L280+current_record_1],Y
  8884 09:94B5: 85 03        	sta	<R0+2
  8885 09:94B7: A5 01        	lda	<R0
  8886 09:94B9: C5 09        	cmp	<L280+offset_1
  8887 09:94BB: D0 03        	bne	L307
  8888 09:94BD: 82 03 00     	brl	L10224
  8889                        L307:
  8890                        ;        }
  8891                        	.line	1235
  8892 09:94C0: 82 14 FF     	brl	L10223
  8893                        L10224:
  8894                        ;    }
  8895                        	.line	1236
  8896                        ;  else if(current_record->RecordType >= 0x1A && c
                    urrent_record->RecordType <= 0x25)  /* 26-37 */
  8897 09:94C3: 82 17 01     	brl	L10228
  8898                        L10222:
  8899                        	.line	1237
  8900                        ;    {
  8901 09:94C6: E2 20        	sep	#$20
  8902                        	longa	off
  8903 09:94C8: A0 0D 00     	ldy	#$d
  8904 09:94CB: B7 0E        	lda	[<L280+current_record_1],Y
  8905 09:94CD: C9 1A        	cmp	#<$1a
  8906 09:94CF: C2 20        	rep	#$20
  8907                        	longa	on
  8908 09:94D1: B0 03        	bcs	L308
  8909 09:94D3: 82 07 01     	brl	L10229
  8910                        L308:
  8911 09:94D6: E2 20        	sep	#$20
  8912                        	longa	off
  8913 09:94D8: A9 25        	lda	#$25
  8914 09:94DA: A0 0D 00     	ldy	#$d
  8915 09:94DD: D7 0E        	cmp	[<L280+current_record_1],Y
  8916 09:94DF: C2 20        	rep	#$20
  8917                        	longa	on
  8918 09:94E1: B0 03        	bcs	L309
  8919 09:94E3: 82 F7 00     	brl	L10229
  8920                        L309:
  8921                        	.line	1238
  8922                        ;      /** Super Interseg 25-36 **/
  8923                        ;      offset = 0;
  8924                        	.line	1240
  8925 09:94E6: 64 09        	stz	<L280+offset_1
  8926                        ;      page = 0x00;
  8927                        	.line	1241
  8928 09:94E8: E2 20        	sep	#$20
  8929                        	longa	off
  8930 09:94EA: 64 0D        	stz	<L280+page_1
  8931 09:94EC: C2 20        	rep	#$20
  8932                        	longa	on
  8933                        ;      while(1)
  8934                        	.line	1242
  Mon Sep 27 2021  9:39                                                Page 166


  8935                        L10230:
  8936                        ;        {
  8937                        	.line	1243
  8938                        ;          /* Récupère les données */
  8939                        ;          current_SuperInterseg2536 = DecodeSuper
                    Interseg2536(&data[1+sizeof(DWORD)+1+offset],current_record-
                    >RecordType-1-24,lconst,lconst_length,&page,&length,current_
                    segment);
  8940                        	.line	1245
  8941 09:94EE: D4 41        	pei	<L279+current_segment_0+2
  8942 09:94F0: D4 3F        	pei	<L279+current_segment_0
  8943 09:94F2: F4 00 00     	pea	#0
  8944 09:94F5: 18           	clc
  8945 09:94F6: 7B           	tdc
  8946 09:94F7: 69 0B 00     	adc	#<L280+length_1
  8947 09:94FA: 48           	pha
  8948 09:94FB: F4 00 00     	pea	#0
  8949 09:94FE: 18           	clc
  8950 09:94FF: 7B           	tdc
  8951 09:9500: 69 0D 00     	adc	#<L280+page_1
  8952 09:9503: 48           	pha
  8953 09:9504: D4 39        	pei	<L279+lconst_length_0
  8954 09:9506: D4 37        	pei	<L279+lconst_0+2
  8955 09:9508: D4 35        	pei	<L279+lconst_0
  8956 09:950A: A0 0D 00     	ldy	#$d
  8957 09:950D: B7 0E        	lda	[<L280+current_record_1],Y
  8958 09:950F: 29 FF 00     	and	#$ff
  8959 09:9512: 85 01        	sta	<R0
  8960 09:9514: 18           	clc
  8961 09:9515: A9 E7 FF     	lda	#$ffe7
  8962 09:9518: 65 01        	adc	<R0
  8963 09:951A: 48           	pha
  8964 09:951B: 18           	clc
  8965 09:951C: A9 06 00     	lda	#$6
  8966 09:951F: 65 09        	adc	<L280+offset_1
  8967 09:9521: 85 01        	sta	<R0
  8968 09:9523: A5 01        	lda	<R0
  8969 09:9525: 85 01        	sta	<R0
  8970 09:9527: 64 03        	stz	<R0+2
  8971 09:9529: 18           	clc
  8972 09:952A: A5 2D        	lda	<L279+data_0
  8973 09:952C: 65 01        	adc	<R0
  8974 09:952E: 85 05        	sta	<R1
  8975 09:9530: A5 2F        	lda	<L279+data_0+2
  8976 09:9532: 65 03        	adc	<R0+2
  8977 09:9534: 85 07        	sta	<R1+2
  8978 09:9536: D4 07        	pei	<R1+2
  8979 09:9538: D4 05        	pei	<R1
  8980 09:953A: 22 F2 A8 09  	jsl	~~DecodeSuperInterseg2536
  8981 09:953E: 85 26        	sta	<L280+current_SuperInterseg2536_1
  8982 09:9540: 86 28        	stx	<L280+current_SuperInterseg2536_1+2
  8983                        ;          if(current_SuperInterseg2536 == NULL)
  8984                        	.line	1246
  8985                        ;            {
  8986 09:9542: A5 26        	lda	<L280+current_SuperInterseg2536_1
  8987 09:9544: 05 28        	ora	<L280+current_SuperInterseg2536_1+2
  8988 09:9546: F0 03        	beq	L310
  8989 09:9548: 82 12 00     	brl	L10232
  Mon Sep 27 2021  9:39                                                Page 167


  8990                        L310:
  8991                        	.line	1247
  8992                        ;              mem_free_SUPER(current_record);
  8993                        	.line	1248
  8994 09:954B: D4 10        	pei	<L280+current_record_1+2
  8995 09:954D: D4 0E        	pei	<L280+current_record_1
  8996 09:954F: 22 1A B1 09  	jsl	~~mem_free_SUPER
  8997                        ;              return(NULL);
  8998                        	.line	1249
  8999 09:9553: A9 00 00     	lda	#$0
  9000 09:9556: AA           	tax
  9001 09:9557: A9 00 00     	lda	#$0
  9002 09:955A: 82 D3 F9     	brl	L283
  9003                        ;            }
  9004                        	.line	1250
  9005                        ;
  9006                        ;          /* Attache à la liste chainée */
  9007                        ;          if(current_record->first_SuperInterseg2
                    536 == NULL)
  9008                        L10232:
  9009                        	.line	1253
  9010                        ;            current_record->first_SuperInterseg25
                    36 = current_SuperInterseg2536;
  9011 09:955D: A0 42 00     	ldy	#$42
  9012 09:9560: B7 0E        	lda	[<L280+current_record_1],Y
  9013 09:9562: A0 44 00     	ldy	#$44
  9014 09:9565: 17 0E        	ora	[<L280+current_record_1],Y
  9015 09:9567: F0 03        	beq	L311
  9016 09:9569: 82 11 00     	brl	L10233
  9017                        L311:
  9018                        	.line	1254
  9019 09:956C: A5 26        	lda	<L280+current_SuperInterseg2536_1
  9020 09:956E: A0 42 00     	ldy	#$42
  9021 09:9571: 97 0E        	sta	[<L280+current_record_1],Y
  9022 09:9573: A5 28        	lda	<L280+current_SuperInterseg2536_1+2
  9023 09:9575: A0 44 00     	ldy	#$44
  9024 09:9578: 97 0E        	sta	[<L280+current_record_1],Y
  9025                        ;          else
  9026 09:957A: 82 1C 00     	brl	L10234
  9027                        L10233:
  9028                        ;            current_record->last_SuperInterseg253
                    6->next = current_SuperInterseg2536;
  9029                        	.line	1256
  9030 09:957D: A0 46 00     	ldy	#$46
  9031 09:9580: B7 0E        	lda	[<L280+current_record_1],Y
  9032 09:9582: 85 01        	sta	<R0
  9033 09:9584: A0 48 00     	ldy	#$48
  9034 09:9587: B7 0E        	lda	[<L280+current_record_1],Y
  9035 09:9589: 85 03        	sta	<R0+2
  9036 09:958B: A5 26        	lda	<L280+current_SuperInterseg2536_1
  9037 09:958D: A0 10 08     	ldy	#$810
  9038 09:9590: 97 01        	sta	[<R0],Y
  9039 09:9592: A5 28        	lda	<L280+current_SuperInterseg2536_1+2
  9040 09:9594: A0 12 08     	ldy	#$812
  9041 09:9597: 97 01        	sta	[<R0],Y
  9042                        L10234:
  9043                        ;          current_record->last_SuperInterseg2536 
                    = current_SuperInterseg2536;
  Mon Sep 27 2021  9:39                                                Page 168


  9044                        	.line	1257
  9045 09:9599: A5 26        	lda	<L280+current_SuperInterseg2536_1
  9046 09:959B: A0 46 00     	ldy	#$46
  9047 09:959E: 97 0E        	sta	[<L280+current_record_1],Y
  9048 09:95A0: A5 28        	lda	<L280+current_SuperInterseg2536_1+2
  9049 09:95A2: A0 48 00     	ldy	#$48
  9050 09:95A5: 97 0E        	sta	[<L280+current_record_1],Y
  9051                        ;          current_record->nb_SuperInterseg2536++;
  9052                        	.line	1258
  9053 09:95A7: A0 40 00     	ldy	#$40
  9054 09:95AA: B7 0E        	lda	[<L280+current_record_1],Y
  9055 09:95AC: 1A           	ina
  9056 09:95AD: A0 40 00     	ldy	#$40
  9057 09:95B0: 97 0E        	sta	[<L280+current_record_1],Y
  9058                        ;
  9059                        ;          /* SubRecord suivant */
  9060                        ;          offset += length;
  9061                        	.line	1261
  9062 09:95B2: 18           	clc
  9063 09:95B3: A5 09        	lda	<L280+offset_1
  9064 09:95B5: 65 0B        	adc	<L280+length_1
  9065 09:95B7: 85 09        	sta	<L280+offset_1
  9066                        ;          if(offset == (int) (current_record->Byt
                    eCnt-1))
  9067                        	.line	1262
  9068                        ;            break;
  9069 09:95B9: 18           	clc
  9070 09:95BA: A9 FF FF     	lda	#$ffff
  9071 09:95BD: A0 09 00     	ldy	#$9
  9072 09:95C0: 77 0E        	adc	[<L280+current_record_1],Y
  9073 09:95C2: 85 01        	sta	<R0
  9074 09:95C4: A9 FF FF     	lda	#$ffff
  9075 09:95C7: A0 0B 00     	ldy	#$b
  9076 09:95CA: 77 0E        	adc	[<L280+current_record_1],Y
  9077 09:95CC: 85 03        	sta	<R0+2
  9078 09:95CE: A5 01        	lda	<R0
  9079 09:95D0: C5 09        	cmp	<L280+offset_1
  9080 09:95D2: D0 03        	bne	L312
  9081 09:95D4: 82 03 00     	brl	L10231
  9082                        L312:
  9083                        ;        }
  9084                        	.line	1264
  9085 09:95D7: 82 14 FF     	brl	L10230
  9086                        L10231:
  9087                        ;    }
  9088                        	.line	1265
  9089                        ;  else
  9090 09:95DA: 82 00 00     	brl	L10235
  9091                        L10229:
  9092                        ;    {
  9093                        	.line	1267
  9094                        ;      //printf("");
  9095                        ;    }
  9096                        	.line	1269
  9097                        L10235:
  9098                        L10228:
  9099                        L10221:
  9100                        L10214:
  Mon Sep 27 2021  9:39                                                Page 169


  9101                        L10207:
  9102                        L10200:
  9103                        ;
  9104                        ;  /* Renvoie la structure */
  9105                        ;  *record_length_rtn = 1 + sizeof(DWORD) + curren
                    t_record->ByteCnt;
  9106                        	.line	1272
  9107 09:95DD: 18           	clc
  9108 09:95DE: A9 05 00     	lda	#$5
  9109 09:95E1: A0 09 00     	ldy	#$9
  9110 09:95E4: 77 0E        	adc	[<L280+current_record_1],Y
  9111 09:95E6: 85 01        	sta	<R0
  9112 09:95E8: A9 00 00     	lda	#$0
  9113 09:95EB: A0 0B 00     	ldy	#$b
  9114 09:95EE: 77 0E        	adc	[<L280+current_record_1],Y
  9115 09:95F0: 85 03        	sta	<R0+2
  9116 09:95F2: A5 01        	lda	<R0
  9117 09:95F4: 87 3B        	sta	[<L279+record_length_rtn_0]
  9118                        ;  return(current_record);
  9119                        	.line	1273
  9120 09:95F6: A6 10        	ldx	<L280+current_record_1+2
  9121 09:95F8: A5 0E        	lda	<L280+current_record_1
  9122 09:95FA: 82 33 F9     	brl	L283
  9123                        ;}
  9124                        	.line	1274
  9125                        	.endblock	1274
  9126             00000029   L279	equ	41
  9127             00000009   L280	equ	9
  9128 09:95FD:              	ends
  9129                        	efunc
  9130                        	.endfunc	1274,9,41
  9131                        	.line	1274
  9132                        ;
  9133                        ;
  9134                        ;/************************************************
                    *********/
  9135                        ;/*  DecodeRecordGeneral() :  Décodage du Record G
                    eneral. */
  9136                        ;/************************************************
                    *********/
  9137                        ;static void *DecodeRecordGeneral(unsigned char *d
                    ata, int file_offset, int segment_offset, int *record_length
                    _rtn)
  9138                        ;{
  9139                        	.line	1280
  9140                        	.line	1281
  9141                        	LOADER
  9142                        	func
  9143                        	.function	1281
  9144                        ~~DecodeRecordGeneral:
  9145                        	longa	on
  9146                        	longi	on
  9147 09:95FD: 3B           	tsc
  9148 09:95FE: 38           	sec
  9149 09:95FF: E9 08 00     	sbc	#L313
  9150 09:9602: 1B           	tcs
  9151 09:9603: 0B           	phd
  9152 09:9604: 5B           	tcd
  Mon Sep 27 2021  9:39                                                Page 170


  9153             00000004   data_0	set	4
  9154             00000008   file_offset_0	set	8
  9155             0000000A   segment_offset_0	set	10
  9156             0000000C   record_length_rtn_0	set	12
  9157                        	.block	1281
  9158                        ;  struct record_General *current_record;
  9159                        ;
  9160                        ;  /* Allocation mémoire */
  9161                        ;  current_record = (struct record_General *) k_ca
                    lloc(1,sizeof(struct record_General));
  9162             00000000   current_record_1	set	0
  9163                        	.sym	current_record,0,138,1,32,80
  9164                        	.sym	data,4,142,6,32
  9165                        	.sym	file_offset,8,5,6,16
  9166                        	.sym	segment_offset,10,5,6,16
  9167                        	.sym	record_length_rtn,12,133,6,32
  9168                        	.line	1285
  9169 09:9605: F4 09 00     	pea	#<$9
  9170 09:9608: F4 01 00     	pea	#<$1
  9171 09:960B: 22 xx xx xx  	jsl	~~k_calloc
  9172 09:960F: 85 05        	sta	<L314+current_record_1
  9173 09:9611: 86 07        	stx	<L314+current_record_1+2
  9174                        ;  if(current_record == NULL)
  9175                        	.line	1286
  9176                        ;    {
  9177 09:9613: A5 05        	lda	<L314+current_record_1
  9178 09:9615: 05 07        	ora	<L314+current_record_1+2
  9179 09:9617: F0 03        	beq	L316
  9180 09:9619: 82 19 00     	brl	L10236
  9181                        L316:
  9182                        	.line	1287
  9183                        ;      //printf("Error : Impossible to allocate me
                    mory to process Segment Body Record.\n");
  9184                        ;      return(NULL);
  9185                        	.line	1289
  9186 09:961C: A9 00 00     	lda	#$0
  9187 09:961F: AA           	tax
  9188 09:9620: A9 00 00     	lda	#$0
  9189                        L317:
  9190 09:9623: A8           	tay
  9191 09:9624: A5 0A        	lda	<L313+2
  9192 09:9626: 85 16        	sta	<L313+2+12
  9193 09:9628: A5 09        	lda	<L313+1
  9194 09:962A: 85 15        	sta	<L313+1+12
  9195 09:962C: 2B           	pld
  9196 09:962D: 3B           	tsc
  9197 09:962E: 18           	clc
  9198 09:962F: 69 14 00     	adc	#L313+12
  9199 09:9632: 1B           	tcs
  9200 09:9633: 98           	tya
  9201 09:9634: 6B           	rtl
  9202                        ;    }
  9203                        	.line	1290
  9204                        ;
  9205                        ;  /* Offset */
  9206                        ;  current_record->FileOffset = (DWORD) file_offse
                    t;
  9207                        L10236:
  Mon Sep 27 2021  9:39                                                Page 171


  9208                        	.line	1293
  9209 09:9635: A0 00 00     	ldy	#$0
  9210 09:9638: A5 10        	lda	<L313+file_offset_0
  9211 09:963A: 10 01        	bpl	L318
  9212 09:963C: 88           	dey
  9213                        L318:
  9214 09:963D: 85 01        	sta	<R0
  9215 09:963F: 84 03        	sty	<R0+2
  9216 09:9641: A5 01        	lda	<R0
  9217 09:9643: 87 05        	sta	[<L314+current_record_1]
  9218 09:9645: A5 03        	lda	<R0+2
  9219 09:9647: A0 02 00     	ldy	#$2
  9220 09:964A: 97 05        	sta	[<L314+current_record_1],Y
  9221                        ;  current_record->SegmentOffset = (DWORD) segment
                    _offset;
  9222                        	.line	1294
  9223 09:964C: A0 00 00     	ldy	#$0
  9224 09:964F: A5 12        	lda	<L313+segment_offset_0
  9225 09:9651: 10 01        	bpl	L319
  9226 09:9653: 88           	dey
  9227                        L319:
  9228 09:9654: 85 01        	sta	<R0
  9229 09:9656: 84 03        	sty	<R0+2
  9230 09:9658: A5 01        	lda	<R0
  9231 09:965A: A0 04 00     	ldy	#$4
  9232 09:965D: 97 05        	sta	[<L314+current_record_1],Y
  9233 09:965F: A5 03        	lda	<R0+2
  9234 09:9661: A0 06 00     	ldy	#$6
  9235 09:9664: 97 05        	sta	[<L314+current_record_1],Y
  9236                        ;
  9237                        ;  /* Operation Code */
  9238                        ;  current_record->operation_code = data[0];
  9239                        	.line	1297
  9240 09:9666: E2 20        	sep	#$20
  9241                        	longa	off
  9242 09:9668: A7 0C        	lda	[<L313+data_0]
  9243 09:966A: A0 08 00     	ldy	#$8
  9244 09:966D: 97 05        	sta	[<L314+current_record_1],Y
  9245 09:966F: C2 20        	rep	#$20
  9246                        	longa	on
  9247                        ;
  9248                        ;  /* Renvoie la structure */
  9249                        ;  return(current_record);
  9250                        	.line	1300
  9251 09:9671: A6 07        	ldx	<L314+current_record_1+2
  9252 09:9673: A5 05        	lda	<L314+current_record_1
  9253 09:9675: 82 AB FF     	brl	L317
  9254                        ;}
  9255                        	.line	1301
  9256                        	.endblock	1301
  9257             00000008   L313	equ	8
  9258             00000005   L314	equ	5
  9259 09:9678:              	ends
  9260                        	efunc
  9261                        	.endfunc	1301,5,8
  9262                        	.line	1301
  9263                        ;
  9264                        ;
  Mon Sep 27 2021  9:39                                                Page 172


  9265                        ;/************************************************
                    *******************/
  9266                        ;/*  DecodeRecordExperimental() :  Décodage du Rec
                    ord Experimental. */
  9267                        ;/************************************************
                    *******************/
  9268                        ;static void *DecodeRecordExperimental(unsigned ch
                    ar *data, int file_offset, int segment_offset, int *record_l
                    ength_rtn)
  9269                        ;{
  9270                        	.line	1307
  9271                        	.line	1308
  9272                        	LOADER
  9273                        	func
  9274                        	.function	1308
  9275                        ~~DecodeRecordExperimental:
  9276                        	longa	on
  9277                        	longi	on
  9278 09:9678: 3B           	tsc
  9279 09:9679: 38           	sec
  9280 09:967A: E9 08 00     	sbc	#L320
  9281 09:967D: 1B           	tcs
  9282 09:967E: 0B           	phd
  9283 09:967F: 5B           	tcd
  9284             00000004   data_0	set	4
  9285             00000008   file_offset_0	set	8
  9286             0000000A   segment_offset_0	set	10
  9287             0000000C   record_length_rtn_0	set	12
  9288                        	.block	1308
  9289                        ;  struct record_Experimental *current_record;
  9290                        ;
  9291                        ;  /* Allocation mémoire */
  9292                        ;  current_record = (struct record_Experimental *)
                     k_calloc(1,sizeof(struct record_Experimental));
  9293             00000000   current_record_1	set	0
  9294                        	.sym	current_record,0,138,1,32,81
  9295                        	.sym	data,4,142,6,32
  9296                        	.sym	file_offset,8,5,6,16
  9297                        	.sym	segment_offset,10,5,6,16
  9298                        	.sym	record_length_rtn,12,133,6,32
  9299                        	.line	1312
  9300 09:9680: F4 09 00     	pea	#<$9
  9301 09:9683: F4 01 00     	pea	#<$1
  9302 09:9686: 22 xx xx xx  	jsl	~~k_calloc
  9303 09:968A: 85 05        	sta	<L321+current_record_1
  9304 09:968C: 86 07        	stx	<L321+current_record_1+2
  9305                        ;  if(current_record == NULL)
  9306                        	.line	1313
  9307                        ;    {
  9308 09:968E: A5 05        	lda	<L321+current_record_1
  9309 09:9690: 05 07        	ora	<L321+current_record_1+2
  9310 09:9692: F0 03        	beq	L323
  9311 09:9694: 82 19 00     	brl	L10237
  9312                        L323:
  9313                        	.line	1314
  9314                        ;      //printf("Error : Impossible to allocate me
                    mory to process Segment Body Record.\n");
  9315                        ;      return(NULL);
  Mon Sep 27 2021  9:39                                                Page 173


  9316                        	.line	1316
  9317 09:9697: A9 00 00     	lda	#$0
  9318 09:969A: AA           	tax
  9319 09:969B: A9 00 00     	lda	#$0
  9320                        L324:
  9321 09:969E: A8           	tay
  9322 09:969F: A5 0A        	lda	<L320+2
  9323 09:96A1: 85 16        	sta	<L320+2+12
  9324 09:96A3: A5 09        	lda	<L320+1
  9325 09:96A5: 85 15        	sta	<L320+1+12
  9326 09:96A7: 2B           	pld
  9327 09:96A8: 3B           	tsc
  9328 09:96A9: 18           	clc
  9329 09:96AA: 69 14 00     	adc	#L320+12
  9330 09:96AD: 1B           	tcs
  9331 09:96AE: 98           	tya
  9332 09:96AF: 6B           	rtl
  9333                        ;    }
  9334                        	.line	1317
  9335                        ;
  9336                        ;  /* Offset */
  9337                        ;  current_record->FileOffset = (DWORD) file_offse
                    t;
  9338                        L10237:
  9339                        	.line	1320
  9340 09:96B0: A0 00 00     	ldy	#$0
  9341 09:96B3: A5 10        	lda	<L320+file_offset_0
  9342 09:96B5: 10 01        	bpl	L325
  9343 09:96B7: 88           	dey
  9344                        L325:
  9345 09:96B8: 85 01        	sta	<R0
  9346 09:96BA: 84 03        	sty	<R0+2
  9347 09:96BC: A5 01        	lda	<R0
  9348 09:96BE: 87 05        	sta	[<L321+current_record_1]
  9349 09:96C0: A5 03        	lda	<R0+2
  9350 09:96C2: A0 02 00     	ldy	#$2
  9351 09:96C5: 97 05        	sta	[<L321+current_record_1],Y
  9352                        ;  current_record->SegmentOffset = (DWORD) segment
                    _offset;
  9353                        	.line	1321
  9354 09:96C7: A0 00 00     	ldy	#$0
  9355 09:96CA: A5 12        	lda	<L320+segment_offset_0
  9356 09:96CC: 10 01        	bpl	L326
  9357 09:96CE: 88           	dey
  9358                        L326:
  9359 09:96CF: 85 01        	sta	<R0
  9360 09:96D1: 84 03        	sty	<R0+2
  9361 09:96D3: A5 01        	lda	<R0
  9362 09:96D5: A0 04 00     	ldy	#$4
  9363 09:96D8: 97 05        	sta	[<L321+current_record_1],Y
  9364 09:96DA: A5 03        	lda	<R0+2
  9365 09:96DC: A0 06 00     	ldy	#$6
  9366 09:96DF: 97 05        	sta	[<L321+current_record_1],Y
  9367                        ;
  9368                        ;  /* Operation Code */
  9369                        ;  current_record->operation_code = data[0];
  9370                        	.line	1324
  9371 09:96E1: E2 20        	sep	#$20
  Mon Sep 27 2021  9:39                                                Page 174


  9372                        	longa	off
  9373 09:96E3: A7 0C        	lda	[<L320+data_0]
  9374 09:96E5: A0 08 00     	ldy	#$8
  9375 09:96E8: 97 05        	sta	[<L321+current_record_1],Y
  9376 09:96EA: C2 20        	rep	#$20
  9377                        	longa	on
  9378                        ;
  9379                        ;  /* Renvoie la structure */
  9380                        ;  return(current_record);
  9381                        	.line	1327
  9382 09:96EC: A6 07        	ldx	<L321+current_record_1+2
  9383 09:96EE: A5 05        	lda	<L321+current_record_1
  9384 09:96F0: 82 AB FF     	brl	L324
  9385                        ;}
  9386                        	.line	1328
  9387                        	.endblock	1328
  9388             00000008   L320	equ	8
  9389             00000005   L321	equ	5
  9390 09:96F3:              	ends
  9391                        	efunc
  9392                        	.endfunc	1328,5,8
  9393                        	.line	1328
  9394                        ;
  9395                        ;
  9396                        ;/************************************************
                    ****************/
  9397                        ;/*  DecodeSuperReloc2() :  Décodage d'un SubRecor
                    d SuperReloc2. */
  9398                        ;/************************************************
                    ****************/
  9399                        ;static struct subrecord_SuperReloc2 *DecodeSuperR
                    eloc2(unsigned char *data, unsigned char *lconst, int lconst
                    _length, BYTE *page_rtn, int *length_rtn, struct omf_segment
                     *current_segment)
  9400                        ;{
  9401                        	.line	1334
  9402                        	.line	1335
  9403                        	LOADER
  9404                        	func
  9405                        	.function	1335
  9406                        ~~DecodeSuperReloc2:
  9407                        	longa	on
  9408                        	longi	on
  9409 09:96F3: 3B           	tsc
  9410 09:96F4: 38           	sec
  9411 09:96F5: E9 20 00     	sbc	#L327
  9412 09:96F8: 1B           	tcs
  9413 09:96F9: 0B           	phd
  9414 09:96FA: 5B           	tcd
  9415             00000004   data_0	set	4
  9416             00000008   lconst_0	set	8
  9417             0000000C   lconst_length_0	set	12
  9418             0000000E   page_rtn_0	set	14
  9419             00000012   length_rtn_0	set	18
  9420             00000016   current_segment_0	set	22
  9421                        	.block	1335
  9422                        ;  int i;
  9423                        ;  WORD one_word;
  Mon Sep 27 2021  9:39                                                Page 175


  9424                        ;  struct subrecord_SuperReloc2 *current_SuperRelo
                    c2;
  9425                        ;
  9426                        ;  /* Allocation mémoire */
  9427                        ;  current_SuperReloc2 = (struct subrecord_SuperRe
                    loc2 *) k_calloc(1,sizeof(struct subrecord_SuperReloc2));
  9428             00000000   i_1	set	0
  9429             00000002   one_word_1	set	2
  9430             00000004   current_SuperReloc2_1	set	4
  9431                        	.sym	i,0,5,1,16
  9432                        	.sym	one_word,2,5,1,16
  9433                        	.sym	current_SuperReloc2,4,138,1,32,50
  9434                        	.sym	data,4,142,6,32
  9435                        	.sym	lconst,8,142,6,32
  9436                        	.sym	lconst_length,12,5,6,16
  9437                        	.sym	page_rtn,14,142,6,32
  9438                        	.sym	length_rtn,18,133,6,32
  9439                        	.sym	current_segment,22,138,6,32,126
  9440                        	.line	1341
  9441 09:96FB: F4 11 08     	pea	#<$811
  9442 09:96FE: F4 01 00     	pea	#<$1
  9443 09:9701: 22 xx xx xx  	jsl	~~k_calloc
  9444 09:9705: 85 1D        	sta	<L328+current_SuperReloc2_1
  9445 09:9707: 86 1F        	stx	<L328+current_SuperReloc2_1+2
  9446                        ;  if(current_SuperReloc2 == NULL)
  9447                        	.line	1342
  9448                        ;    {
  9449 09:9709: A5 1D        	lda	<L328+current_SuperReloc2_1
  9450 09:970B: 05 1F        	ora	<L328+current_SuperReloc2_1+2
  9451 09:970D: F0 03        	beq	L330
  9452 09:970F: 82 19 00     	brl	L10238
  9453                        L330:
  9454                        	.line	1343
  9455                        ;      //printf("Error : Impossible to allocate me
                    mory for SubRecord SuperReloc2 for Segment #%02X.\n",current
                    _segment->header.SegNum);
  9456                        ;      return(NULL);
  9457                        	.line	1345
  9458 09:9712: A9 00 00     	lda	#$0
  9459 09:9715: AA           	tax
  9460 09:9716: A9 00 00     	lda	#$0
  9461                        L331:
  9462 09:9719: A8           	tay
  9463 09:971A: A5 22        	lda	<L327+2
  9464 09:971C: 85 38        	sta	<L327+2+22
  9465 09:971E: A5 21        	lda	<L327+1
  9466 09:9720: 85 37        	sta	<L327+1+22
  9467 09:9722: 2B           	pld
  9468 09:9723: 3B           	tsc
  9469 09:9724: 18           	clc
  9470 09:9725: 69 36 00     	adc	#L327+22
  9471 09:9728: 1B           	tcs
  9472 09:9729: 98           	tya
  9473 09:972A: 6B           	rtl
  9474                        ;    }
  9475                        	.line	1346
  9476                        ;
  9477                        ;  /* Nombre d'adresse-1 ou Saut de Page */
  Mon Sep 27 2021  9:39                                                Page 176


  9478                        ;  current_SuperReloc2->Count = data[0];
  9479                        L10238:
  9480                        	.line	1349
  9481 09:972B: E2 20        	sep	#$20
  9482                        	longa	off
  9483 09:972D: A7 24        	lda	[<L327+data_0]
  9484 09:972F: A0 08 00     	ldy	#$8
  9485 09:9732: 97 1D        	sta	[<L328+current_SuperReloc2_1],Y
  9486 09:9734: C2 20        	rep	#$20
  9487                        	longa	on
  9488                        ;
  9489                        ;  /** Saut de Page **/
  9490                        ;  if((current_SuperReloc2->Count & 0x80) == 0x80)
  9491                        	.line	1352
  9492                        ;    {
  9493 09:9736: A0 08 00     	ldy	#$8
  9494 09:9739: B7 1D        	lda	[<L328+current_SuperReloc2_1],Y
  9495 09:973B: 29 80 00     	and	#<$80
  9496 09:973E: 85 01        	sta	<R0
  9497 09:9740: A5 01        	lda	<R0
  9498 09:9742: C9 80 00     	cmp	#<$80
  9499 09:9745: F0 03        	beq	L332
  9500 09:9747: 82 24 00     	brl	L10239
  9501                        L332:
  9502                        	.line	1353
  9503                        ;      /* On saute X pages */
  9504                        ;      *page_rtn = *page_rtn + (current_SuperReloc
                    2->Count & 0x7F);
  9505                        	.line	1355
  9506 09:974A: E2 20        	sep	#$20
  9507                        	longa	off
  9508 09:974C: A0 08 00     	ldy	#$8
  9509 09:974F: B7 1D        	lda	[<L328+current_SuperReloc2_1],Y
  9510 09:9751: 29 7F        	and	#<$7f
  9511 09:9753: 85 01        	sta	<R0
  9512 09:9755: C2 20        	rep	#$20
  9513                        	longa	on
  9514 09:9757: E2 20        	sep	#$20
  9515                        	longa	off
  9516 09:9759: 18           	clc
  9517 09:975A: A7 2E        	lda	[<L327+page_rtn_0]
  9518 09:975C: 65 01        	adc	<R0
  9519 09:975E: C2 20        	rep	#$20
  9520                        	longa	on
  9521 09:9760: E2 20        	sep	#$20
  9522                        	longa	off
  9523 09:9762: 87 2E        	sta	[<L327+page_rtn_0]
  9524 09:9764: C2 20        	rep	#$20
  9525                        	longa	on
  9526                        ;
  9527                        ;      /* Longueur du SubRecord */
  9528                        ;      *length_rtn = 1;
  9529                        	.line	1358
  9530 09:9766: A9 01 00     	lda	#$1
  9531 09:9769: 87 32        	sta	[<L327+length_rtn_0]
  9532                        ;    }
  9533                        	.line	1359
  9534                        ;  else
  Mon Sep 27 2021  9:39                                                Page 177


  9535 09:976B: 82 9D 02     	brl	L10240
  9536                        L10239:
  9537                        ;    {
  9538                        	.line	1361
  9539                        ;      /* Number of Bytes to be relocated = Toujou
                    rs à 2 */
  9540                        ;      current_SuperReloc2->ByteCnt = 0x02;
  9541                        	.line	1363
  9542 09:976E: E2 20        	sep	#$20
  9543                        	longa	off
  9544 09:9770: A9 02        	lda	#$2
  9545 09:9772: A0 09 00     	ldy	#$9
  9546 09:9775: 97 1D        	sta	[<L328+current_SuperReloc2_1],Y
  9547 09:9777: C2 20        	rep	#$20
  9548                        	longa	on
  9549                        ;
  9550                        ;      /* Opérations >> ou << = Toujours à 0  */
  9551                        ;      current_SuperReloc2->BitShiftCnt = 0x00;
  9552                        	.line	1366
  9553 09:9779: E2 20        	sep	#$20
  9554                        	longa	off
  9555 09:977B: A9 00        	lda	#$0
  9556 09:977D: A0 0A 00     	ldy	#$a
  9557 09:9780: 97 1D        	sta	[<L328+current_SuperReloc2_1],Y
  9558 09:9782: C2 20        	rep	#$20
  9559                        	longa	on
  9560                        ;
  9561                        ;      /* Nombre d'adresse */
  9562                        ;      current_SuperReloc2->nb_address = current_S
                    uperReloc2->Count + 1;
  9563                        	.line	1369
  9564 09:9784: A0 08 00     	ldy	#$8
  9565 09:9787: B7 1D        	lda	[<L328+current_SuperReloc2_1],Y
  9566 09:9789: 29 FF 00     	and	#$ff
  9567 09:978C: 85 01        	sta	<R0
  9568 09:978E: A5 01        	lda	<R0
  9569 09:9790: 1A           	ina
  9570 09:9791: A0 0B 00     	ldy	#$b
  9571 09:9794: 97 1D        	sta	[<L328+current_SuperReloc2_1],Y
  9572                        ;
  9573                        ;      /** Copie les adresses **/
  9574                        ;      for(i=0; i<current_SuperReloc2->nb_address;
                     i++)
  9575                        	.line	1372
  9576 09:9796: 64 19        	stz	<L328+i_1
  9577 09:9798: 82 49 02     	brl	L10244
  9578                        L10243:
  9579                        ;        {
  9580                        	.line	1373
  9581                        ;          /* Décode OffsetPath et OffsetReference
                     */
  9582                        ;          current_SuperReloc2->OffsetPatch[i] = (
                    (WORD)*page_rtn) << 8 | data[1+i];
  9583                        	.line	1375
  9584 09:979B: A0 00 00     	ldy	#$0
  9585 09:979E: A5 19        	lda	<L328+i_1
  9586 09:97A0: 10 01        	bpl	L333
  9587 09:97A2: 88           	dey
  Mon Sep 27 2021  9:39                                                Page 178


  9588                        L333:
  9589 09:97A3: 85 05        	sta	<R1
  9590 09:97A5: 84 07        	sty	<R1+2
  9591 09:97A7: D4 07        	pei	<R1+2
  9592 09:97A9: D4 05        	pei	<R1
  9593 09:97AB: A9 02 00     	lda	#$2
  9594                        	xref	~~~lasl
  9595 09:97AE: 22 xx xx xx  	jsl	~~~lasl
  9596 09:97B2: 85 01        	sta	<R0
  9597 09:97B4: 86 03        	stx	<R0+2
  9598 09:97B6: 18           	clc
  9599 09:97B7: A9 0D 00     	lda	#$d
  9600 09:97BA: 65 1D        	adc	<L328+current_SuperReloc2_1
  9601 09:97BC: 85 09        	sta	<R2
  9602 09:97BE: A9 00 00     	lda	#$0
  9603 09:97C1: 65 1F        	adc	<L328+current_SuperReloc2_1+2
  9604 09:97C3: 85 0B        	sta	<R2+2
  9605 09:97C5: 18           	clc
  9606 09:97C6: A5 09        	lda	<R2
  9607 09:97C8: 65 01        	adc	<R0
  9608 09:97CA: 85 0D        	sta	<R3
  9609 09:97CC: A5 0B        	lda	<R2+2
  9610 09:97CE: 65 03        	adc	<R0+2
  9611 09:97D0: 85 0F        	sta	<R3+2
  9612 09:97D2: A5 19        	lda	<L328+i_1
  9613 09:97D4: 1A           	ina
  9614 09:97D5: 85 01        	sta	<R0
  9615 09:97D7: A4 01        	ldy	<R0
  9616 09:97D9: B7 24        	lda	[<L327+data_0],Y
  9617 09:97DB: 29 FF 00     	and	#$ff
  9618 09:97DE: 85 09        	sta	<R2
  9619 09:97E0: A7 2E        	lda	[<L327+page_rtn_0]
  9620 09:97E2: 29 FF 00     	and	#$ff
  9621 09:97E5: 85 15        	sta	<21
  9622 09:97E7: A5 15        	lda	<21
  9623 09:97E9: EB           	xba
  9624 09:97EA: 29 00 FF     	and	#$ff00
  9625 09:97ED: 85 11        	sta	<17
  9626 09:97EF: A5 11        	lda	<17
  9627 09:97F1: 05 09        	ora	<R2
  9628 09:97F3: 85 15        	sta	<21
  9629 09:97F5: A0 00 00     	ldy	#$0
  9630 09:97F8: A5 15        	lda	<21
  9631 09:97FA: 10 01        	bpl	L334
  9632 09:97FC: 88           	dey
  9633                        L334:
  9634 09:97FD: 85 09        	sta	<R2
  9635 09:97FF: 84 0B        	sty	<R2+2
  9636 09:9801: A5 09        	lda	<R2
  9637 09:9803: 87 0D        	sta	[<R3]
  9638 09:9805: A5 0B        	lda	<R2+2
  9639 09:9807: A0 02 00     	ldy	#$2
  9640 09:980A: 97 0D        	sta	[<R3],Y
  9641                        ;          
  9642                        ;          /* On vérifie qu'on reste dans les limi
                    te du LCONST */
  9643                        ;          if(current_SuperReloc2->OffsetPatch[i] 
                    > (DWORD) lconst_length)
  Mon Sep 27 2021  9:39                                                Page 179


  9644                        	.line	1378
  9645                        ;            {
  9646 09:980C: A0 00 00     	ldy	#$0
  9647 09:980F: A5 2C        	lda	<L327+lconst_length_0
  9648 09:9811: 10 01        	bpl	L335
  9649 09:9813: 88           	dey
  9650                        L335:
  9651 09:9814: 85 01        	sta	<R0
  9652 09:9816: 84 03        	sty	<R0+2
  9653 09:9818: A0 00 00     	ldy	#$0
  9654 09:981B: A5 19        	lda	<L328+i_1
  9655 09:981D: 10 01        	bpl	L336
  9656 09:981F: 88           	dey
  9657                        L336:
  9658 09:9820: 85 09        	sta	<R2
  9659 09:9822: 84 0B        	sty	<R2+2
  9660 09:9824: D4 0B        	pei	<R2+2
  9661 09:9826: D4 09        	pei	<R2
  9662 09:9828: A9 02 00     	lda	#$2
  9663                        	xref	~~~lasl
  9664 09:982B: 22 xx xx xx  	jsl	~~~lasl
  9665 09:982F: 85 05        	sta	<R1
  9666 09:9831: 86 07        	stx	<R1+2
  9667 09:9833: 18           	clc
  9668 09:9834: A9 0D 00     	lda	#$d
  9669 09:9837: 65 1D        	adc	<L328+current_SuperReloc2_1
  9670 09:9839: 85 0D        	sta	<R3
  9671 09:983B: A9 00 00     	lda	#$0
  9672 09:983E: 65 1F        	adc	<L328+current_SuperReloc2_1+2
  9673 09:9840: 85 0F        	sta	<R3+2
  9674 09:9842: 18           	clc
  9675 09:9843: A5 0D        	lda	<R3
  9676 09:9845: 65 05        	adc	<R1
  9677 09:9847: 85 11        	sta	<17
  9678 09:9849: A5 0F        	lda	<R3+2
  9679 09:984B: 65 07        	adc	<R1+2
  9680 09:984D: 85 13        	sta	<17+2
  9681 09:984F: A5 01        	lda	<R0
  9682 09:9851: C7 11        	cmp	[<17]
  9683 09:9853: A5 03        	lda	<R0+2
  9684 09:9855: A0 02 00     	ldy	#$2
  9685 09:9858: F7 11        	sbc	[<17],Y
  9686 09:985A: 90 03        	bcc	L337
  9687 09:985C: 82 47 00     	brl	L10245
  9688                        L337:
  9689                        	.line	1379
  9690                        ;              //printf("  Error : Bad Reference A
                    ddress in SuperReloc2 for Offset %04X in Segment #%02X.\n",c
                    urrent_SuperReloc2->OffsetPatch[i],current_segment->header.S
                    egNum);
  9691                        ;              current_SuperReloc2->OffsetReferenc
                    e[i] = 0xFFFF;   /* Erreur */
  9692                        	.line	1381
  9693 09:985F: A0 00 00     	ldy	#$0
  9694 09:9862: A5 19        	lda	<L328+i_1
  9695 09:9864: 10 01        	bpl	L338
  9696 09:9866: 88           	dey
  9697                        L338:
  Mon Sep 27 2021  9:39                                                Page 180


  9698 09:9867: 85 05        	sta	<R1
  9699 09:9869: 84 07        	sty	<R1+2
  9700 09:986B: D4 07        	pei	<R1+2
  9701 09:986D: D4 05        	pei	<R1
  9702 09:986F: A9 02 00     	lda	#$2
  9703                        	xref	~~~lasl
  9704 09:9872: 22 xx xx xx  	jsl	~~~lasl
  9705 09:9876: 85 01        	sta	<R0
  9706 09:9878: 86 03        	stx	<R0+2
  9707 09:987A: 18           	clc
  9708 09:987B: A9 0D 04     	lda	#$40d
  9709 09:987E: 65 1D        	adc	<L328+current_SuperReloc2_1
  9710 09:9880: 85 09        	sta	<R2
  9711 09:9882: A9 00 00     	lda	#$0
  9712 09:9885: 65 1F        	adc	<L328+current_SuperReloc2_1+2
  9713 09:9887: 85 0B        	sta	<R2+2
  9714 09:9889: 18           	clc
  9715 09:988A: A5 09        	lda	<R2
  9716 09:988C: 65 01        	adc	<R0
  9717 09:988E: 85 0D        	sta	<R3
  9718 09:9890: A5 0B        	lda	<R2+2
  9719 09:9892: 65 03        	adc	<R0+2
  9720 09:9894: 85 0F        	sta	<R3+2
  9721 09:9896: A9 FF FF     	lda	#$ffff
  9722 09:9899: 87 0D        	sta	[<R3]
  9723 09:989B: A9 00 00     	lda	#$0
  9724 09:989E: A0 02 00     	ldy	#$2
  9725 09:98A1: 97 0D        	sta	[<R3],Y
  9726                        ;            }
  9727                        	.line	1382
  9728                        ;          else
  9729 09:98A3: 82 A9 00     	brl	L10246
  9730                        L10245:
  9731                        ;            {
  9732                        	.line	1384
  9733                        ;              memcpy(&one_word,&lconst[current_Su
                    perReloc2->OffsetPatch[i]],sizeof(WORD));
  9734                        	.line	1385
  9735 09:98A6: F4 02 00     	pea	#<$2
  9736 09:98A9: A0 00 00     	ldy	#$0
  9737 09:98AC: A5 19        	lda	<L328+i_1
  9738 09:98AE: 10 01        	bpl	L339
  9739 09:98B0: 88           	dey
  9740                        L339:
  9741 09:98B1: 85 05        	sta	<R1
  9742 09:98B3: 84 07        	sty	<R1+2
  9743 09:98B5: D4 07        	pei	<R1+2
  9744 09:98B7: D4 05        	pei	<R1
  9745 09:98B9: A9 02 00     	lda	#$2
  9746                        	xref	~~~lasl
  9747 09:98BC: 22 xx xx xx  	jsl	~~~lasl
  9748 09:98C0: 85 01        	sta	<R0
  9749 09:98C2: 86 03        	stx	<R0+2
  9750 09:98C4: 18           	clc
  9751 09:98C5: A9 0D 00     	lda	#$d
  9752 09:98C8: 65 1D        	adc	<L328+current_SuperReloc2_1
  9753 09:98CA: 85 09        	sta	<R2
  9754 09:98CC: A9 00 00     	lda	#$0
  Mon Sep 27 2021  9:39                                                Page 181


  9755 09:98CF: 65 1F        	adc	<L328+current_SuperReloc2_1+2
  9756 09:98D1: 85 0B        	sta	<R2+2
  9757 09:98D3: 18           	clc
  9758 09:98D4: A5 09        	lda	<R2
  9759 09:98D6: 65 01        	adc	<R0
  9760 09:98D8: 85 0D        	sta	<R3
  9761 09:98DA: A5 0B        	lda	<R2+2
  9762 09:98DC: 65 03        	adc	<R0+2
  9763 09:98DE: 85 0F        	sta	<R3+2
  9764 09:98E0: 18           	clc
  9765 09:98E1: A5 28        	lda	<L327+lconst_0
  9766 09:98E3: 67 0D        	adc	[<R3]
  9767 09:98E5: 85 01        	sta	<R0
  9768 09:98E7: A5 2A        	lda	<L327+lconst_0+2
  9769 09:98E9: A0 02 00     	ldy	#$2
  9770 09:98EC: 77 0D        	adc	[<R3],Y
  9771 09:98EE: 85 03        	sta	<R0+2
  9772 09:98F0: D4 03        	pei	<R0+2
  9773 09:98F2: D4 01        	pei	<R0
  9774 09:98F4: F4 00 00     	pea	#0
  9775 09:98F7: 18           	clc
  9776 09:98F8: 7B           	tdc
  9777 09:98F9: 69 1B 00     	adc	#<L328+one_word_1
  9778 09:98FC: 48           	pha
  9779 09:98FD: 22 xx xx xx  	jsl	~~memcpy
  9780                        ;              current_SuperReloc2->OffsetReferenc
                    e[i] = (DWORD) one_word;
  9781                        	.line	1386
  9782 09:9901: A0 00 00     	ldy	#$0
  9783 09:9904: A5 19        	lda	<L328+i_1
  9784 09:9906: 10 01        	bpl	L340
  9785 09:9908: 88           	dey
  9786                        L340:
  9787 09:9909: 85 05        	sta	<R1
  9788 09:990B: 84 07        	sty	<R1+2
  9789 09:990D: D4 07        	pei	<R1+2
  9790 09:990F: D4 05        	pei	<R1
  9791 09:9911: A9 02 00     	lda	#$2
  9792                        	xref	~~~lasl
  9793 09:9914: 22 xx xx xx  	jsl	~~~lasl
  9794 09:9918: 85 01        	sta	<R0
  9795 09:991A: 86 03        	stx	<R0+2
  9796 09:991C: 18           	clc
  9797 09:991D: A9 0D 04     	lda	#$40d
  9798 09:9920: 65 1D        	adc	<L328+current_SuperReloc2_1
  9799 09:9922: 85 09        	sta	<R2
  9800 09:9924: A9 00 00     	lda	#$0
  9801 09:9927: 65 1F        	adc	<L328+current_SuperReloc2_1+2
  9802 09:9929: 85 0B        	sta	<R2+2
  9803 09:992B: 18           	clc
  9804 09:992C: A5 09        	lda	<R2
  9805 09:992E: 65 01        	adc	<R0
  9806 09:9930: 85 0D        	sta	<R3
  9807 09:9932: A5 0B        	lda	<R2+2
  9808 09:9934: 65 03        	adc	<R0+2
  9809 09:9936: 85 0F        	sta	<R3+2
  9810 09:9938: A0 00 00     	ldy	#$0
  9811 09:993B: A5 1B        	lda	<L328+one_word_1
  Mon Sep 27 2021  9:39                                                Page 182


  9812 09:993D: 10 01        	bpl	L341
  9813 09:993F: 88           	dey
  9814                        L341:
  9815 09:9940: 85 01        	sta	<R0
  9816 09:9942: 84 03        	sty	<R0+2
  9817 09:9944: A5 01        	lda	<R0
  9818 09:9946: 87 0D        	sta	[<R3]
  9819 09:9948: A5 03        	lda	<R0+2
  9820 09:994A: A0 02 00     	ldy	#$2
  9821 09:994D: 97 0D        	sta	[<R3],Y
  9822                        ;            }
  9823                        	.line	1387
  9824                        L10246:
  9825                        ;
  9826                        ;          /* Conserve ce RELOC */
  9827                        ;          AddReloc(current_SuperReloc2->ByteCnt,c
                    urrent_SuperReloc2->BitShiftCnt,current_SuperReloc2->OffsetP
                    atch[i],current_SuperReloc2->OffsetReference[i],RECORD_SUPER
                    _RELOC2);
  9828                        	.line	1390
  9829 09:994F: F4 05 00     	pea	#<$5
  9830 09:9952: A0 00 00     	ldy	#$0
  9831 09:9955: A5 19        	lda	<L328+i_1
  9832 09:9957: 10 01        	bpl	L342
  9833 09:9959: 88           	dey
  9834                        L342:
  9835 09:995A: 85 05        	sta	<R1
  9836 09:995C: 84 07        	sty	<R1+2
  9837 09:995E: D4 07        	pei	<R1+2
  9838 09:9960: D4 05        	pei	<R1
  9839 09:9962: A9 02 00     	lda	#$2
  9840                        	xref	~~~lasl
  9841 09:9965: 22 xx xx xx  	jsl	~~~lasl
  9842 09:9969: 85 01        	sta	<R0
  9843 09:996B: 86 03        	stx	<R0+2
  9844 09:996D: 18           	clc
  9845 09:996E: A9 0D 04     	lda	#$40d
  9846 09:9971: 65 1D        	adc	<L328+current_SuperReloc2_1
  9847 09:9973: 85 09        	sta	<R2
  9848 09:9975: A9 00 00     	lda	#$0
  9849 09:9978: 65 1F        	adc	<L328+current_SuperReloc2_1+2
  9850 09:997A: 85 0B        	sta	<R2+2
  9851 09:997C: 18           	clc
  9852 09:997D: A5 09        	lda	<R2
  9853 09:997F: 65 01        	adc	<R0
  9854 09:9981: 85 0D        	sta	<R3
  9855 09:9983: A5 0B        	lda	<R2+2
  9856 09:9985: 65 03        	adc	<R0+2
  9857 09:9987: 85 0F        	sta	<R3+2
  9858 09:9989: A0 02 00     	ldy	#$2
  9859 09:998C: B7 0D        	lda	[<R3],Y
  9860 09:998E: 48           	pha
  9861 09:998F: A7 0D        	lda	[<R3]
  9862 09:9991: 48           	pha
  9863 09:9992: A0 00 00     	ldy	#$0
  9864 09:9995: A5 19        	lda	<L328+i_1
  9865 09:9997: 10 01        	bpl	L343
  9866 09:9999: 88           	dey
  Mon Sep 27 2021  9:39                                                Page 183


  9867                        L343:
  9868 09:999A: 85 09        	sta	<R2
  9869 09:999C: 84 0B        	sty	<R2+2
  9870 09:999E: D4 0B        	pei	<R2+2
  9871 09:99A0: D4 09        	pei	<R2
  9872 09:99A2: A9 02 00     	lda	#$2
  9873                        	xref	~~~lasl
  9874 09:99A5: 22 xx xx xx  	jsl	~~~lasl
  9875 09:99A9: 85 01        	sta	<R0
  9876 09:99AB: 86 03        	stx	<R0+2
  9877 09:99AD: 18           	clc
  9878 09:99AE: A9 0D 00     	lda	#$d
  9879 09:99B1: 65 1D        	adc	<L328+current_SuperReloc2_1
  9880 09:99B3: 85 0D        	sta	<R3
  9881 09:99B5: A9 00 00     	lda	#$0
  9882 09:99B8: 65 1F        	adc	<L328+current_SuperReloc2_1+2
  9883 09:99BA: 85 0F        	sta	<R3+2
  9884 09:99BC: 18           	clc
  9885 09:99BD: A5 0D        	lda	<R3
  9886 09:99BF: 65 01        	adc	<R0
  9887 09:99C1: 85 11        	sta	<17
  9888 09:99C3: A5 0F        	lda	<R3+2
  9889 09:99C5: 65 03        	adc	<R0+2
  9890 09:99C7: 85 13        	sta	<17+2
  9891 09:99C9: A0 02 00     	ldy	#$2
  9892 09:99CC: B7 11        	lda	[<17],Y
  9893 09:99CE: 48           	pha
  9894 09:99CF: A7 11        	lda	[<17]
  9895 09:99D1: 48           	pha
  9896 09:99D2: A0 0A 00     	ldy	#$a
  9897 09:99D5: B7 1D        	lda	[<L328+current_SuperReloc2_1],Y
  9898 09:99D7: 48           	pha
  9899 09:99D8: A0 09 00     	ldy	#$9
  9900 09:99DB: B7 1D        	lda	[<L328+current_SuperReloc2_1],Y
  9901 09:99DD: 48           	pha
  9902 09:99DE: 22 33 AC 09  	jsl	~~AddReloc
  9903                        ;          ////printf("  Page %02X : %02X  %04X  %
                    04X\n",*page_rtn,current_SuperReloc2->ByteCnt,current_SuperR
                    eloc2->OffsetPatch[i],current_SuperReloc2->OffsetReference[i
                    ]);
  9904                        ;        }
  9905                        	.line	1392
  9906                        L10241:
  9907 09:99E2: E6 19        	inc	<L328+i_1
  9908                        L10244:
  9909 09:99E4: 38           	sec
  9910 09:99E5: A5 19        	lda	<L328+i_1
  9911 09:99E7: A0 0B 00     	ldy	#$b
  9912 09:99EA: F7 1D        	sbc	[<L328+current_SuperReloc2_1],Y
  9913 09:99EC: 70 03        	bvs	L344
  9914 09:99EE: 49 00 80     	eor	#$8000
  9915                        L344:
  9916 09:99F1: 30 03        	bmi	L345
  9917 09:99F3: 82 A5 FD     	brl	L10243
  9918                        L345:
  9919                        L10242:
  9920                        ;
  9921                        ;      /* Page suivante */
  Mon Sep 27 2021  9:39                                                Page 184


  9922                        ;      *page_rtn = *page_rtn + 1;
  9923                        	.line	1395
  9924 09:99F6: E2 20        	sep	#$20
  9925                        	longa	off
  9926 09:99F8: A7 2E        	lda	[<L327+page_rtn_0]
  9927 09:99FA: 1A           	ina
  9928 09:99FB: C2 20        	rep	#$20
  9929                        	longa	on
  9930 09:99FD: E2 20        	sep	#$20
  9931                        	longa	off
  9932 09:99FF: 87 2E        	sta	[<L327+page_rtn_0]
  9933 09:9A01: C2 20        	rep	#$20
  9934                        	longa	on
  9935                        ;
  9936                        ;      /* Longueur du SubRecord */
  9937                        ;      *length_rtn = 1 + current_SuperReloc2->nb_a
                    ddress*sizeof(BYTE);
  9938                        	.line	1398
  9939 09:9A03: A0 0B 00     	ldy	#$b
  9940 09:9A06: B7 1D        	lda	[<L328+current_SuperReloc2_1],Y
  9941 09:9A08: 1A           	ina
  9942 09:9A09: 87 32        	sta	[<L327+length_rtn_0]
  9943                        ;    }
  9944                        	.line	1399
  9945                        L10240:
  9946                        ;
  9947                        ;  /* Renvoie la structure */
  9948                        ;  return(current_SuperReloc2);
  9949                        	.line	1402
  9950 09:9A0B: A6 1F        	ldx	<L328+current_SuperReloc2_1+2
  9951 09:9A0D: A5 1D        	lda	<L328+current_SuperReloc2_1
  9952 09:9A0F: 82 07 FD     	brl	L331
  9953                        ;}
  9954                        	.line	1403
  9955                        	.endblock	1403
  9956             00000020   L327	equ	32
  9957             00000019   L328	equ	25
  9958 09:9A12:              	ends
  9959                        	efunc
  9960                        	.endfunc	1403,25,32
  9961                        	.line	1403
  9962                        ;
  9963                        ;
  9964                        ;/************************************************
                    ****************/
  9965                        ;/*  DecodeSuperReloc3() :  Décodage d'un SubRecor
                    d SuperReloc3. */
  9966                        ;/************************************************
                    ****************/
  9967                        ;static struct subrecord_SuperReloc3 *DecodeSuperR
                    eloc3(unsigned char *data, unsigned char *lconst, int lconst
                    _length, BYTE *page_rtn, int *length_rtn, struct omf_segment
                     *current_segment)
  9968                        ;{
  9969                        	.line	1409
  9970                        	.line	1410
  9971                        	LOADER
  9972                        	func
  Mon Sep 27 2021  9:39                                                Page 185


  9973                        	.function	1410
  9974                        ~~DecodeSuperReloc3:
  9975                        	longa	on
  9976                        	longi	on
  9977 09:9A12: 3B           	tsc
  9978 09:9A13: 38           	sec
  9979 09:9A14: E9 20 00     	sbc	#L346
  9980 09:9A17: 1B           	tcs
  9981 09:9A18: 0B           	phd
  9982 09:9A19: 5B           	tcd
  9983             00000004   data_0	set	4
  9984             00000008   lconst_0	set	8
  9985             0000000C   lconst_length_0	set	12
  9986             0000000E   page_rtn_0	set	14
  9987             00000012   length_rtn_0	set	18
  9988             00000016   current_segment_0	set	22
  9989                        	.block	1410
  9990                        ;  int i;
  9991                        ;  WORD one_word;
  9992                        ;  struct subrecord_SuperReloc3 *current_SuperRelo
                    c3;
  9993                        ;
  9994                        ;  /* Allocation mémoire */
  9995                        ;  current_SuperReloc3 = (struct subrecord_SuperRe
                    loc3 *) k_calloc(1,sizeof(struct subrecord_SuperReloc3));
  9996             00000000   i_1	set	0
  9997             00000002   one_word_1	set	2
  9998             00000004   current_SuperReloc3_1	set	4
  9999                        	.sym	i,0,5,1,16
 10000                        	.sym	one_word,2,5,1,16
 10001                        	.sym	current_SuperReloc3,4,138,1,32,51
 10002                        	.sym	data,4,142,6,32
 10003                        	.sym	lconst,8,142,6,32
 10004                        	.sym	lconst_length,12,5,6,16
 10005                        	.sym	page_rtn,14,142,6,32
 10006                        	.sym	length_rtn,18,133,6,32
 10007                        	.sym	current_segment,22,138,6,32,126
 10008                        	.line	1416
 10009 09:9A1A: F4 11 08     	pea	#<$811
 10010 09:9A1D: F4 01 00     	pea	#<$1
 10011 09:9A20: 22 xx xx xx  	jsl	~~k_calloc
 10012 09:9A24: 85 1D        	sta	<L347+current_SuperReloc3_1
 10013 09:9A26: 86 1F        	stx	<L347+current_SuperReloc3_1+2
 10014                        ;  if(current_SuperReloc3 == NULL)
 10015                        	.line	1417
 10016                        ;    {
 10017 09:9A28: A5 1D        	lda	<L347+current_SuperReloc3_1
 10018 09:9A2A: 05 1F        	ora	<L347+current_SuperReloc3_1+2
 10019 09:9A2C: F0 03        	beq	L349
 10020 09:9A2E: 82 19 00     	brl	L10247
 10021                        L349:
 10022                        	.line	1418
 10023                        ;      //printf("Error : Impossible to allocate me
                    mory for SubRecord SuperReloc3.\n");
 10024                        ;      return(NULL);
 10025                        	.line	1420
 10026 09:9A31: A9 00 00     	lda	#$0
 10027 09:9A34: AA           	tax
  Mon Sep 27 2021  9:39                                                Page 186


 10028 09:9A35: A9 00 00     	lda	#$0
 10029                        L350:
 10030 09:9A38: A8           	tay
 10031 09:9A39: A5 22        	lda	<L346+2
 10032 09:9A3B: 85 38        	sta	<L346+2+22
 10033 09:9A3D: A5 21        	lda	<L346+1
 10034 09:9A3F: 85 37        	sta	<L346+1+22
 10035 09:9A41: 2B           	pld
 10036 09:9A42: 3B           	tsc
 10037 09:9A43: 18           	clc
 10038 09:9A44: 69 36 00     	adc	#L346+22
 10039 09:9A47: 1B           	tcs
 10040 09:9A48: 98           	tya
 10041 09:9A49: 6B           	rtl
 10042                        ;    }
 10043                        	.line	1421
 10044                        ;
 10045                        ;  /* Nombre d'adresse-1 ou Saut de Page */
 10046                        ;  current_SuperReloc3->Count = data[0];
 10047                        L10247:
 10048                        	.line	1424
 10049 09:9A4A: E2 20        	sep	#$20
 10050                        	longa	off
 10051 09:9A4C: A7 24        	lda	[<L346+data_0]
 10052 09:9A4E: A0 08 00     	ldy	#$8
 10053 09:9A51: 97 1D        	sta	[<L347+current_SuperReloc3_1],Y
 10054 09:9A53: C2 20        	rep	#$20
 10055                        	longa	on
 10056                        ;
 10057                        ;  /** Saut de Page **/
 10058                        ;  if((current_SuperReloc3->Count & 0x80) == 0x80)
 10059                        	.line	1427
 10060                        ;    {
 10061 09:9A55: A0 08 00     	ldy	#$8
 10062 09:9A58: B7 1D        	lda	[<L347+current_SuperReloc3_1],Y
 10063 09:9A5A: 29 80 00     	and	#<$80
 10064 09:9A5D: 85 01        	sta	<R0
 10065 09:9A5F: A5 01        	lda	<R0
 10066 09:9A61: C9 80 00     	cmp	#<$80
 10067 09:9A64: F0 03        	beq	L351
 10068 09:9A66: 82 24 00     	brl	L10248
 10069                        L351:
 10070                        	.line	1428
 10071                        ;      /* On saute X pages */
 10072                        ;      *page_rtn = *page_rtn + (current_SuperReloc
                    3->Count & 0x7F);
 10073                        	.line	1430
 10074 09:9A69: E2 20        	sep	#$20
 10075                        	longa	off
 10076 09:9A6B: A0 08 00     	ldy	#$8
 10077 09:9A6E: B7 1D        	lda	[<L347+current_SuperReloc3_1],Y
 10078 09:9A70: 29 7F        	and	#<$7f
 10079 09:9A72: 85 01        	sta	<R0
 10080 09:9A74: C2 20        	rep	#$20
 10081                        	longa	on
 10082 09:9A76: E2 20        	sep	#$20
 10083                        	longa	off
 10084 09:9A78: 18           	clc
  Mon Sep 27 2021  9:39                                                Page 187


 10085 09:9A79: A7 2E        	lda	[<L346+page_rtn_0]
 10086 09:9A7B: 65 01        	adc	<R0
 10087 09:9A7D: C2 20        	rep	#$20
 10088                        	longa	on
 10089 09:9A7F: E2 20        	sep	#$20
 10090                        	longa	off
 10091 09:9A81: 87 2E        	sta	[<L346+page_rtn_0]
 10092 09:9A83: C2 20        	rep	#$20
 10093                        	longa	on
 10094                        ;
 10095                        ;      /* Longueur du SubRecord */
 10096                        ;      *length_rtn = 1;
 10097                        	.line	1433
 10098 09:9A85: A9 01 00     	lda	#$1
 10099 09:9A88: 87 32        	sta	[<L346+length_rtn_0]
 10100                        ;    }
 10101                        	.line	1434
 10102                        ;  else
 10103 09:9A8A: 82 9D 02     	brl	L10249
 10104                        L10248:
 10105                        ;    {
 10106                        	.line	1436
 10107                        ;      /* Number of Bytes to be relocated = Toujou
                    rs à 3 */
 10108                        ;      current_SuperReloc3->ByteCnt = 0x03;
 10109                        	.line	1438
 10110 09:9A8D: E2 20        	sep	#$20
 10111                        	longa	off
 10112 09:9A8F: A9 03        	lda	#$3
 10113 09:9A91: A0 09 00     	ldy	#$9
 10114 09:9A94: 97 1D        	sta	[<L347+current_SuperReloc3_1],Y
 10115 09:9A96: C2 20        	rep	#$20
 10116                        	longa	on
 10117                        ;
 10118                        ;      /* Opérations >> ou << = Toujours à 0  */
 10119                        ;      current_SuperReloc3->BitShiftCnt = 0x00;
 10120                        	.line	1441
 10121 09:9A98: E2 20        	sep	#$20
 10122                        	longa	off
 10123 09:9A9A: A9 00        	lda	#$0
 10124 09:9A9C: A0 0A 00     	ldy	#$a
 10125 09:9A9F: 97 1D        	sta	[<L347+current_SuperReloc3_1],Y
 10126 09:9AA1: C2 20        	rep	#$20
 10127                        	longa	on
 10128                        ;
 10129                        ;      /* Nombre d'adresse */
 10130                        ;      current_SuperReloc3->nb_address = current_S
                    uperReloc3->Count + 1;
 10131                        	.line	1444
 10132 09:9AA3: A0 08 00     	ldy	#$8
 10133 09:9AA6: B7 1D        	lda	[<L347+current_SuperReloc3_1],Y
 10134 09:9AA8: 29 FF 00     	and	#$ff
 10135 09:9AAB: 85 01        	sta	<R0
 10136 09:9AAD: A5 01        	lda	<R0
 10137 09:9AAF: 1A           	ina
 10138 09:9AB0: A0 0B 00     	ldy	#$b
 10139 09:9AB3: 97 1D        	sta	[<L347+current_SuperReloc3_1],Y
 10140                        ;
  Mon Sep 27 2021  9:39                                                Page 188


 10141                        ;      /** Copie les adresses **/
 10142                        ;      for(i=0; i<current_SuperReloc3->nb_address;
                     i++)
 10143                        	.line	1447
 10144 09:9AB5: 64 19        	stz	<L347+i_1
 10145 09:9AB7: 82 49 02     	brl	L10253
 10146                        L10252:
 10147                        ;        {
 10148                        	.line	1448
 10149                        ;          /* Décode OffsetPath et OffsetReference
                     */
 10150                        ;          current_SuperReloc3->OffsetPatch[i] = (
                    (WORD)(*page_rtn) << 8) | data[1+i];
 10151                        	.line	1450
 10152 09:9ABA: A0 00 00     	ldy	#$0
 10153 09:9ABD: A5 19        	lda	<L347+i_1
 10154 09:9ABF: 10 01        	bpl	L352
 10155 09:9AC1: 88           	dey
 10156                        L352:
 10157 09:9AC2: 85 05        	sta	<R1
 10158 09:9AC4: 84 07        	sty	<R1+2
 10159 09:9AC6: D4 07        	pei	<R1+2
 10160 09:9AC8: D4 05        	pei	<R1
 10161 09:9ACA: A9 02 00     	lda	#$2
 10162                        	xref	~~~lasl
 10163 09:9ACD: 22 xx xx xx  	jsl	~~~lasl
 10164 09:9AD1: 85 01        	sta	<R0
 10165 09:9AD3: 86 03        	stx	<R0+2
 10166 09:9AD5: 18           	clc
 10167 09:9AD6: A9 0D 00     	lda	#$d
 10168 09:9AD9: 65 1D        	adc	<L347+current_SuperReloc3_1
 10169 09:9ADB: 85 09        	sta	<R2
 10170 09:9ADD: A9 00 00     	lda	#$0
 10171 09:9AE0: 65 1F        	adc	<L347+current_SuperReloc3_1+2
 10172 09:9AE2: 85 0B        	sta	<R2+2
 10173 09:9AE4: 18           	clc
 10174 09:9AE5: A5 09        	lda	<R2
 10175 09:9AE7: 65 01        	adc	<R0
 10176 09:9AE9: 85 0D        	sta	<R3
 10177 09:9AEB: A5 0B        	lda	<R2+2
 10178 09:9AED: 65 03        	adc	<R0+2
 10179 09:9AEF: 85 0F        	sta	<R3+2
 10180 09:9AF1: A5 19        	lda	<L347+i_1
 10181 09:9AF3: 1A           	ina
 10182 09:9AF4: 85 01        	sta	<R0
 10183 09:9AF6: A4 01        	ldy	<R0
 10184 09:9AF8: B7 24        	lda	[<L346+data_0],Y
 10185 09:9AFA: 29 FF 00     	and	#$ff
 10186 09:9AFD: 85 09        	sta	<R2
 10187 09:9AFF: A7 2E        	lda	[<L346+page_rtn_0]
 10188 09:9B01: 29 FF 00     	and	#$ff
 10189 09:9B04: 85 15        	sta	<21
 10190 09:9B06: A5 15        	lda	<21
 10191 09:9B08: EB           	xba
 10192 09:9B09: 29 00 FF     	and	#$ff00
 10193 09:9B0C: 85 11        	sta	<17
 10194 09:9B0E: A5 11        	lda	<17
 10195 09:9B10: 05 09        	ora	<R2
  Mon Sep 27 2021  9:39                                                Page 189


 10196 09:9B12: 85 15        	sta	<21
 10197 09:9B14: A0 00 00     	ldy	#$0
 10198 09:9B17: A5 15        	lda	<21
 10199 09:9B19: 10 01        	bpl	L353
 10200 09:9B1B: 88           	dey
 10201                        L353:
 10202 09:9B1C: 85 09        	sta	<R2
 10203 09:9B1E: 84 0B        	sty	<R2+2
 10204 09:9B20: A5 09        	lda	<R2
 10205 09:9B22: 87 0D        	sta	[<R3]
 10206 09:9B24: A5 0B        	lda	<R2+2
 10207 09:9B26: A0 02 00     	ldy	#$2
 10208 09:9B29: 97 0D        	sta	[<R3],Y
 10209                        ;          
 10210                        ;          /* On vérifie qu'on reste dans les limi
                    te du LCONST */
 10211                        ;          if(current_SuperReloc3->OffsetPatch[i] 
                    > (DWORD) lconst_length)
 10212                        	.line	1453
 10213                        ;            {
 10214 09:9B2B: A0 00 00     	ldy	#$0
 10215 09:9B2E: A5 2C        	lda	<L346+lconst_length_0
 10216 09:9B30: 10 01        	bpl	L354
 10217 09:9B32: 88           	dey
 10218                        L354:
 10219 09:9B33: 85 01        	sta	<R0
 10220 09:9B35: 84 03        	sty	<R0+2
 10221 09:9B37: A0 00 00     	ldy	#$0
 10222 09:9B3A: A5 19        	lda	<L347+i_1
 10223 09:9B3C: 10 01        	bpl	L355
 10224 09:9B3E: 88           	dey
 10225                        L355:
 10226 09:9B3F: 85 09        	sta	<R2
 10227 09:9B41: 84 0B        	sty	<R2+2
 10228 09:9B43: D4 0B        	pei	<R2+2
 10229 09:9B45: D4 09        	pei	<R2
 10230 09:9B47: A9 02 00     	lda	#$2
 10231                        	xref	~~~lasl
 10232 09:9B4A: 22 xx xx xx  	jsl	~~~lasl
 10233 09:9B4E: 85 05        	sta	<R1
 10234 09:9B50: 86 07        	stx	<R1+2
 10235 09:9B52: 18           	clc
 10236 09:9B53: A9 0D 00     	lda	#$d
 10237 09:9B56: 65 1D        	adc	<L347+current_SuperReloc3_1
 10238 09:9B58: 85 0D        	sta	<R3
 10239 09:9B5A: A9 00 00     	lda	#$0
 10240 09:9B5D: 65 1F        	adc	<L347+current_SuperReloc3_1+2
 10241 09:9B5F: 85 0F        	sta	<R3+2
 10242 09:9B61: 18           	clc
 10243 09:9B62: A5 0D        	lda	<R3
 10244 09:9B64: 65 05        	adc	<R1
 10245 09:9B66: 85 11        	sta	<17
 10246 09:9B68: A5 0F        	lda	<R3+2
 10247 09:9B6A: 65 07        	adc	<R1+2
 10248 09:9B6C: 85 13        	sta	<17+2
 10249 09:9B6E: A5 01        	lda	<R0
 10250 09:9B70: C7 11        	cmp	[<17]
 10251 09:9B72: A5 03        	lda	<R0+2
  Mon Sep 27 2021  9:39                                                Page 190


 10252 09:9B74: A0 02 00     	ldy	#$2
 10253 09:9B77: F7 11        	sbc	[<17],Y
 10254 09:9B79: 90 03        	bcc	L356
 10255 09:9B7B: 82 47 00     	brl	L10254
 10256                        L356:
 10257                        	.line	1454
 10258                        ;              //printf("  Error : Bad Reference A
                    ddress in SuperReloc3 for Offset %04X in Segment #%02X.\n",c
                    urrent_SuperReloc3->OffsetPatch[i],current_segment->header.S
                    egNum);
 10259                        ;              current_SuperReloc3->OffsetReferenc
                    e[i] = 0xFFFF;   /* Erreur */
 10260                        	.line	1456
 10261 09:9B7E: A0 00 00     	ldy	#$0
 10262 09:9B81: A5 19        	lda	<L347+i_1
 10263 09:9B83: 10 01        	bpl	L357
 10264 09:9B85: 88           	dey
 10265                        L357:
 10266 09:9B86: 85 05        	sta	<R1
 10267 09:9B88: 84 07        	sty	<R1+2
 10268 09:9B8A: D4 07        	pei	<R1+2
 10269 09:9B8C: D4 05        	pei	<R1
 10270 09:9B8E: A9 02 00     	lda	#$2
 10271                        	xref	~~~lasl
 10272 09:9B91: 22 xx xx xx  	jsl	~~~lasl
 10273 09:9B95: 85 01        	sta	<R0
 10274 09:9B97: 86 03        	stx	<R0+2
 10275 09:9B99: 18           	clc
 10276 09:9B9A: A9 0D 04     	lda	#$40d
 10277 09:9B9D: 65 1D        	adc	<L347+current_SuperReloc3_1
 10278 09:9B9F: 85 09        	sta	<R2
 10279 09:9BA1: A9 00 00     	lda	#$0
 10280 09:9BA4: 65 1F        	adc	<L347+current_SuperReloc3_1+2
 10281 09:9BA6: 85 0B        	sta	<R2+2
 10282 09:9BA8: 18           	clc
 10283 09:9BA9: A5 09        	lda	<R2
 10284 09:9BAB: 65 01        	adc	<R0
 10285 09:9BAD: 85 0D        	sta	<R3
 10286 09:9BAF: A5 0B        	lda	<R2+2
 10287 09:9BB1: 65 03        	adc	<R0+2
 10288 09:9BB3: 85 0F        	sta	<R3+2
 10289 09:9BB5: A9 FF FF     	lda	#$ffff
 10290 09:9BB8: 87 0D        	sta	[<R3]
 10291 09:9BBA: A9 00 00     	lda	#$0
 10292 09:9BBD: A0 02 00     	ldy	#$2
 10293 09:9BC0: 97 0D        	sta	[<R3],Y
 10294                        ;            }
 10295                        	.line	1457
 10296                        ;          else
 10297 09:9BC2: 82 A9 00     	brl	L10255
 10298                        L10254:
 10299                        ;            {          
 10300                        	.line	1459
 10301                        ;              memcpy(&one_word,&lconst[current_Su
                    perReloc3->OffsetPatch[i]],sizeof(WORD));
 10302                        	.line	1460
 10303 09:9BC5: F4 02 00     	pea	#<$2
 10304 09:9BC8: A0 00 00     	ldy	#$0
  Mon Sep 27 2021  9:39                                                Page 191


 10305 09:9BCB: A5 19        	lda	<L347+i_1
 10306 09:9BCD: 10 01        	bpl	L358
 10307 09:9BCF: 88           	dey
 10308                        L358:
 10309 09:9BD0: 85 05        	sta	<R1
 10310 09:9BD2: 84 07        	sty	<R1+2
 10311 09:9BD4: D4 07        	pei	<R1+2
 10312 09:9BD6: D4 05        	pei	<R1
 10313 09:9BD8: A9 02 00     	lda	#$2
 10314                        	xref	~~~lasl
 10315 09:9BDB: 22 xx xx xx  	jsl	~~~lasl
 10316 09:9BDF: 85 01        	sta	<R0
 10317 09:9BE1: 86 03        	stx	<R0+2
 10318 09:9BE3: 18           	clc
 10319 09:9BE4: A9 0D 00     	lda	#$d
 10320 09:9BE7: 65 1D        	adc	<L347+current_SuperReloc3_1
 10321 09:9BE9: 85 09        	sta	<R2
 10322 09:9BEB: A9 00 00     	lda	#$0
 10323 09:9BEE: 65 1F        	adc	<L347+current_SuperReloc3_1+2
 10324 09:9BF0: 85 0B        	sta	<R2+2
 10325 09:9BF2: 18           	clc
 10326 09:9BF3: A5 09        	lda	<R2
 10327 09:9BF5: 65 01        	adc	<R0
 10328 09:9BF7: 85 0D        	sta	<R3
 10329 09:9BF9: A5 0B        	lda	<R2+2
 10330 09:9BFB: 65 03        	adc	<R0+2
 10331 09:9BFD: 85 0F        	sta	<R3+2
 10332 09:9BFF: 18           	clc
 10333 09:9C00: A5 28        	lda	<L346+lconst_0
 10334 09:9C02: 67 0D        	adc	[<R3]
 10335 09:9C04: 85 01        	sta	<R0
 10336 09:9C06: A5 2A        	lda	<L346+lconst_0+2
 10337 09:9C08: A0 02 00     	ldy	#$2
 10338 09:9C0B: 77 0D        	adc	[<R3],Y
 10339 09:9C0D: 85 03        	sta	<R0+2
 10340 09:9C0F: D4 03        	pei	<R0+2
 10341 09:9C11: D4 01        	pei	<R0
 10342 09:9C13: F4 00 00     	pea	#0
 10343 09:9C16: 18           	clc
 10344 09:9C17: 7B           	tdc
 10345 09:9C18: 69 1B 00     	adc	#<L347+one_word_1
 10346 09:9C1B: 48           	pha
 10347 09:9C1C: 22 xx xx xx  	jsl	~~memcpy
 10348                        ;              current_SuperReloc3->OffsetReferenc
                    e[i] = (DWORD) one_word;
 10349                        	.line	1461
 10350 09:9C20: A0 00 00     	ldy	#$0
 10351 09:9C23: A5 19        	lda	<L347+i_1
 10352 09:9C25: 10 01        	bpl	L359
 10353 09:9C27: 88           	dey
 10354                        L359:
 10355 09:9C28: 85 05        	sta	<R1
 10356 09:9C2A: 84 07        	sty	<R1+2
 10357 09:9C2C: D4 07        	pei	<R1+2
 10358 09:9C2E: D4 05        	pei	<R1
 10359 09:9C30: A9 02 00     	lda	#$2
 10360                        	xref	~~~lasl
 10361 09:9C33: 22 xx xx xx  	jsl	~~~lasl
  Mon Sep 27 2021  9:39                                                Page 192


 10362 09:9C37: 85 01        	sta	<R0
 10363 09:9C39: 86 03        	stx	<R0+2
 10364 09:9C3B: 18           	clc
 10365 09:9C3C: A9 0D 04     	lda	#$40d
 10366 09:9C3F: 65 1D        	adc	<L347+current_SuperReloc3_1
 10367 09:9C41: 85 09        	sta	<R2
 10368 09:9C43: A9 00 00     	lda	#$0
 10369 09:9C46: 65 1F        	adc	<L347+current_SuperReloc3_1+2
 10370 09:9C48: 85 0B        	sta	<R2+2
 10371 09:9C4A: 18           	clc
 10372 09:9C4B: A5 09        	lda	<R2
 10373 09:9C4D: 65 01        	adc	<R0
 10374 09:9C4F: 85 0D        	sta	<R3
 10375 09:9C51: A5 0B        	lda	<R2+2
 10376 09:9C53: 65 03        	adc	<R0+2
 10377 09:9C55: 85 0F        	sta	<R3+2
 10378 09:9C57: A0 00 00     	ldy	#$0
 10379 09:9C5A: A5 1B        	lda	<L347+one_word_1
 10380 09:9C5C: 10 01        	bpl	L360
 10381 09:9C5E: 88           	dey
 10382                        L360:
 10383 09:9C5F: 85 01        	sta	<R0
 10384 09:9C61: 84 03        	sty	<R0+2
 10385 09:9C63: A5 01        	lda	<R0
 10386 09:9C65: 87 0D        	sta	[<R3]
 10387 09:9C67: A5 03        	lda	<R0+2
 10388 09:9C69: A0 02 00     	ldy	#$2
 10389 09:9C6C: 97 0D        	sta	[<R3],Y
 10390                        ;            }
 10391                        	.line	1462
 10392                        L10255:
 10393                        ;             
 10394                        ;          /* Conserve ce RELOC */
 10395                        ;          AddReloc(current_SuperReloc3->ByteCnt,c
                    urrent_SuperReloc3->BitShiftCnt,current_SuperReloc3->OffsetP
                    atch[i],current_SuperReloc3->OffsetReference[i],RECORD_SUPER
                    _RELOC3);
 10396                        	.line	1465
 10397 09:9C6E: F4 06 00     	pea	#<$6
 10398 09:9C71: A0 00 00     	ldy	#$0
 10399 09:9C74: A5 19        	lda	<L347+i_1
 10400 09:9C76: 10 01        	bpl	L361
 10401 09:9C78: 88           	dey
 10402                        L361:
 10403 09:9C79: 85 05        	sta	<R1
 10404 09:9C7B: 84 07        	sty	<R1+2
 10405 09:9C7D: D4 07        	pei	<R1+2
 10406 09:9C7F: D4 05        	pei	<R1
 10407 09:9C81: A9 02 00     	lda	#$2
 10408                        	xref	~~~lasl
 10409 09:9C84: 22 xx xx xx  	jsl	~~~lasl
 10410 09:9C88: 85 01        	sta	<R0
 10411 09:9C8A: 86 03        	stx	<R0+2
 10412 09:9C8C: 18           	clc
 10413 09:9C8D: A9 0D 04     	lda	#$40d
 10414 09:9C90: 65 1D        	adc	<L347+current_SuperReloc3_1
 10415 09:9C92: 85 09        	sta	<R2
 10416 09:9C94: A9 00 00     	lda	#$0
  Mon Sep 27 2021  9:39                                                Page 193


 10417 09:9C97: 65 1F        	adc	<L347+current_SuperReloc3_1+2
 10418 09:9C99: 85 0B        	sta	<R2+2
 10419 09:9C9B: 18           	clc
 10420 09:9C9C: A5 09        	lda	<R2
 10421 09:9C9E: 65 01        	adc	<R0
 10422 09:9CA0: 85 0D        	sta	<R3
 10423 09:9CA2: A5 0B        	lda	<R2+2
 10424 09:9CA4: 65 03        	adc	<R0+2
 10425 09:9CA6: 85 0F        	sta	<R3+2
 10426 09:9CA8: A0 02 00     	ldy	#$2
 10427 09:9CAB: B7 0D        	lda	[<R3],Y
 10428 09:9CAD: 48           	pha
 10429 09:9CAE: A7 0D        	lda	[<R3]
 10430 09:9CB0: 48           	pha
 10431 09:9CB1: A0 00 00     	ldy	#$0
 10432 09:9CB4: A5 19        	lda	<L347+i_1
 10433 09:9CB6: 10 01        	bpl	L362
 10434 09:9CB8: 88           	dey
 10435                        L362:
 10436 09:9CB9: 85 09        	sta	<R2
 10437 09:9CBB: 84 0B        	sty	<R2+2
 10438 09:9CBD: D4 0B        	pei	<R2+2
 10439 09:9CBF: D4 09        	pei	<R2
 10440 09:9CC1: A9 02 00     	lda	#$2
 10441                        	xref	~~~lasl
 10442 09:9CC4: 22 xx xx xx  	jsl	~~~lasl
 10443 09:9CC8: 85 01        	sta	<R0
 10444 09:9CCA: 86 03        	stx	<R0+2
 10445 09:9CCC: 18           	clc
 10446 09:9CCD: A9 0D 00     	lda	#$d
 10447 09:9CD0: 65 1D        	adc	<L347+current_SuperReloc3_1
 10448 09:9CD2: 85 0D        	sta	<R3
 10449 09:9CD4: A9 00 00     	lda	#$0
 10450 09:9CD7: 65 1F        	adc	<L347+current_SuperReloc3_1+2
 10451 09:9CD9: 85 0F        	sta	<R3+2
 10452 09:9CDB: 18           	clc
 10453 09:9CDC: A5 0D        	lda	<R3
 10454 09:9CDE: 65 01        	adc	<R0
 10455 09:9CE0: 85 11        	sta	<17
 10456 09:9CE2: A5 0F        	lda	<R3+2
 10457 09:9CE4: 65 03        	adc	<R0+2
 10458 09:9CE6: 85 13        	sta	<17+2
 10459 09:9CE8: A0 02 00     	ldy	#$2
 10460 09:9CEB: B7 11        	lda	[<17],Y
 10461 09:9CED: 48           	pha
 10462 09:9CEE: A7 11        	lda	[<17]
 10463 09:9CF0: 48           	pha
 10464 09:9CF1: A0 0A 00     	ldy	#$a
 10465 09:9CF4: B7 1D        	lda	[<L347+current_SuperReloc3_1],Y
 10466 09:9CF6: 48           	pha
 10467 09:9CF7: A0 09 00     	ldy	#$9
 10468 09:9CFA: B7 1D        	lda	[<L347+current_SuperReloc3_1],Y
 10469 09:9CFC: 48           	pha
 10470 09:9CFD: 22 33 AC 09  	jsl	~~AddReloc
 10471                        ;        }
 10472                        	.line	1466
 10473                        L10250:
 10474 09:9D01: E6 19        	inc	<L347+i_1
  Mon Sep 27 2021  9:39                                                Page 194


 10475                        L10253:
 10476 09:9D03: 38           	sec
 10477 09:9D04: A5 19        	lda	<L347+i_1
 10478 09:9D06: A0 0B 00     	ldy	#$b
 10479 09:9D09: F7 1D        	sbc	[<L347+current_SuperReloc3_1],Y
 10480 09:9D0B: 70 03        	bvs	L363
 10481 09:9D0D: 49 00 80     	eor	#$8000
 10482                        L363:
 10483 09:9D10: 30 03        	bmi	L364
 10484 09:9D12: 82 A5 FD     	brl	L10252
 10485                        L364:
 10486                        L10251:
 10487                        ;
 10488                        ;      /* Page suivante */
 10489                        ;      *page_rtn = *page_rtn + 1;
 10490                        	.line	1469
 10491 09:9D15: E2 20        	sep	#$20
 10492                        	longa	off
 10493 09:9D17: A7 2E        	lda	[<L346+page_rtn_0]
 10494 09:9D19: 1A           	ina
 10495 09:9D1A: C2 20        	rep	#$20
 10496                        	longa	on
 10497 09:9D1C: E2 20        	sep	#$20
 10498                        	longa	off
 10499 09:9D1E: 87 2E        	sta	[<L346+page_rtn_0]
 10500 09:9D20: C2 20        	rep	#$20
 10501                        	longa	on
 10502                        ;
 10503                        ;      /* Longueur du SubRecord */
 10504                        ;      *length_rtn = 1 + current_SuperReloc3->nb_a
                    ddress*sizeof(BYTE);
 10505                        	.line	1472
 10506 09:9D22: A0 0B 00     	ldy	#$b
 10507 09:9D25: B7 1D        	lda	[<L347+current_SuperReloc3_1],Y
 10508 09:9D27: 1A           	ina
 10509 09:9D28: 87 32        	sta	[<L346+length_rtn_0]
 10510                        ;    }
 10511                        	.line	1473
 10512                        L10249:
 10513                        ;
 10514                        ;  /* Renvoie la structure */
 10515                        ;  return(current_SuperReloc3);
 10516                        	.line	1476
 10517 09:9D2A: A6 1F        	ldx	<L347+current_SuperReloc3_1+2
 10518 09:9D2C: A5 1D        	lda	<L347+current_SuperReloc3_1
 10519 09:9D2E: 82 07 FD     	brl	L350
 10520                        ;}
 10521                        	.line	1477
 10522                        	.endblock	1477
 10523             00000020   L346	equ	32
 10524             00000019   L347	equ	25
 10525 09:9D31:              	ends
 10526                        	efunc
 10527                        	.endfunc	1477,25,32
 10528                        	.line	1477
 10529                        ;
 10530                        ;
 10531                        ;/************************************************
  Mon Sep 27 2021  9:39                                                Page 195


                    **********************/
 10532                        ;/*  DecodeSuperInterseg1() :  Décodage d'un SubRe
                    cord SuperInterseg1. */
 10533                        ;/************************************************
                    **********************/
 10534                        ;static struct subrecord_SuperInterseg1 *DecodeSup
                    erInterseg1(unsigned char *data, unsigned char *lconst, int 
                    lconst_length, BYTE *page_rtn, int *length_rtn, struct omf_s
                    egment *current_segment)
 10535                        ;{
 10536                        	.line	1483
 10537                        	.line	1484
 10538                        	LOADER
 10539                        	func
 10540                        	.function	1484
 10541                        ~~DecodeSuperInterseg1:
 10542                        	longa	on
 10543                        	longi	on
 10544 09:9D31: 3B           	tsc
 10545 09:9D32: 38           	sec
 10546 09:9D33: E9 20 00     	sbc	#L365
 10547 09:9D36: 1B           	tcs
 10548 09:9D37: 0B           	phd
 10549 09:9D38: 5B           	tcd
 10550             00000004   data_0	set	4
 10551             00000008   lconst_0	set	8
 10552             0000000C   lconst_length_0	set	12
 10553             0000000E   page_rtn_0	set	14
 10554             00000012   length_rtn_0	set	18
 10555             00000016   current_segment_0	set	22
 10556                        	.block	1484
 10557                        ;  int i;
 10558                        ;  WORD one_word;
 10559                        ;  struct subrecord_SuperInterseg1 *current_SuperI
                    nterseg1;
 10560                        ;
 10561                        ;  /* Allocation mémoire */
 10562                        ;  current_SuperInterseg1 = (struct subrecord_Supe
                    rInterseg1 *) k_calloc(1,sizeof(struct subrecord_SuperInters
                    eg1));
 10563             00000000   i_1	set	0
 10564             00000002   one_word_1	set	2
 10565             00000004   current_SuperInterseg1_1	set	4
 10566                        	.sym	i,0,5,1,16
 10567                        	.sym	one_word,2,5,1,16
 10568                        	.sym	current_SuperInterseg1,4,138,1,32,52
 10569                        	.sym	data,4,142,6,32
 10570                        	.sym	lconst,8,142,6,32
 10571                        	.sym	lconst_length,12,5,6,16
 10572                        	.sym	page_rtn,14,142,6,32
 10573                        	.sym	length_rtn,18,133,6,32
 10574                        	.sym	current_segment,22,138,6,32,126
 10575                        	.line	1490
 10576 09:9D39: F4 13 0A     	pea	#<$a13
 10577 09:9D3C: F4 01 00     	pea	#<$1
 10578 09:9D3F: 22 xx xx xx  	jsl	~~k_calloc
 10579 09:9D43: 85 1D        	sta	<L366+current_SuperInterseg1_1
 10580 09:9D45: 86 1F        	stx	<L366+current_SuperInterseg1_1+2
  Mon Sep 27 2021  9:39                                                Page 196


 10581                        ;  if(current_SuperInterseg1 == NULL)
 10582                        	.line	1491
 10583                        ;    {
 10584 09:9D47: A5 1D        	lda	<L366+current_SuperInterseg1_1
 10585 09:9D49: 05 1F        	ora	<L366+current_SuperInterseg1_1+2
 10586 09:9D4B: F0 03        	beq	L368
 10587 09:9D4D: 82 19 00     	brl	L10256
 10588                        L368:
 10589                        	.line	1492
 10590                        ;      //printf("Error : Impossible to allocate me
                    mory for SubRecord SuperInterseg1.\n");
 10591                        ;      return(NULL);
 10592                        	.line	1494
 10593 09:9D50: A9 00 00     	lda	#$0
 10594 09:9D53: AA           	tax
 10595 09:9D54: A9 00 00     	lda	#$0
 10596                        L369:
 10597 09:9D57: A8           	tay
 10598 09:9D58: A5 22        	lda	<L365+2
 10599 09:9D5A: 85 38        	sta	<L365+2+22
 10600 09:9D5C: A5 21        	lda	<L365+1
 10601 09:9D5E: 85 37        	sta	<L365+1+22
 10602 09:9D60: 2B           	pld
 10603 09:9D61: 3B           	tsc
 10604 09:9D62: 18           	clc
 10605 09:9D63: 69 36 00     	adc	#L365+22
 10606 09:9D66: 1B           	tcs
 10607 09:9D67: 98           	tya
 10608 09:9D68: 6B           	rtl
 10609                        ;    }
 10610                        	.line	1495
 10611                        ;
 10612                        ;  /* Nombre d'adresse-1 ou Saut de Page */
 10613                        ;  current_SuperInterseg1->Count = data[0];
 10614                        L10256:
 10615                        	.line	1498
 10616 09:9D69: E2 20        	sep	#$20
 10617                        	longa	off
 10618 09:9D6B: A7 24        	lda	[<L365+data_0]
 10619 09:9D6D: A0 08 00     	ldy	#$8
 10620 09:9D70: 97 1D        	sta	[<L366+current_SuperInterseg1_1],Y
 10621 09:9D72: C2 20        	rep	#$20
 10622                        	longa	on
 10623                        ;
 10624                        ;  /** Saut de Page **/
 10625                        ;  if((current_SuperInterseg1->Count & 0x80) == 0x
                    80)
 10626                        	.line	1501
 10627                        ;    {
 10628 09:9D74: A0 08 00     	ldy	#$8
 10629 09:9D77: B7 1D        	lda	[<L366+current_SuperInterseg1_1],Y
 10630 09:9D79: 29 80 00     	and	#<$80
 10631 09:9D7C: 85 01        	sta	<R0
 10632 09:9D7E: A5 01        	lda	<R0
 10633 09:9D80: C9 80 00     	cmp	#<$80
 10634 09:9D83: F0 03        	beq	L370
 10635 09:9D85: 82 24 00     	brl	L10257
 10636                        L370:
  Mon Sep 27 2021  9:39                                                Page 197


 10637                        	.line	1502
 10638                        ;      /* On saute X pages */
 10639                        ;      *page_rtn = *page_rtn + (current_SuperInter
                    seg1->Count & 0x7F);
 10640                        	.line	1504
 10641 09:9D88: E2 20        	sep	#$20
 10642                        	longa	off
 10643 09:9D8A: A0 08 00     	ldy	#$8
 10644 09:9D8D: B7 1D        	lda	[<L366+current_SuperInterseg1_1],Y
 10645 09:9D8F: 29 7F        	and	#<$7f
 10646 09:9D91: 85 01        	sta	<R0
 10647 09:9D93: C2 20        	rep	#$20
 10648                        	longa	on
 10649 09:9D95: E2 20        	sep	#$20
 10650                        	longa	off
 10651 09:9D97: 18           	clc
 10652 09:9D98: A7 2E        	lda	[<L365+page_rtn_0]
 10653 09:9D9A: 65 01        	adc	<R0
 10654 09:9D9C: C2 20        	rep	#$20
 10655                        	longa	on
 10656 09:9D9E: E2 20        	sep	#$20
 10657                        	longa	off
 10658 09:9DA0: 87 2E        	sta	[<L365+page_rtn_0]
 10659 09:9DA2: C2 20        	rep	#$20
 10660                        	longa	on
 10661                        ;
 10662                        ;      /* Longueur du SubRecord */
 10663                        ;      *length_rtn = 1;
 10664                        	.line	1507
 10665 09:9DA4: A9 01 00     	lda	#$1
 10666 09:9DA7: 87 32        	sta	[<L365+length_rtn_0]
 10667                        ;    }
 10668                        	.line	1508
 10669                        ;  else
 10670 09:9DA9: 82 BD 03     	brl	L10258
 10671                        L10257:
 10672                        ;    {
 10673                        	.line	1510
 10674                        ;      /* Number of Bytes to be relocated = Toujou
                    rs à 3 */
 10675                        ;      current_SuperInterseg1->ByteCnt = 0x03;
 10676                        	.line	1512
 10677 09:9DAC: E2 20        	sep	#$20
 10678                        	longa	off
 10679 09:9DAE: A9 03        	lda	#$3
 10680 09:9DB0: A0 09 00     	ldy	#$9
 10681 09:9DB3: 97 1D        	sta	[<L366+current_SuperInterseg1_1],Y
 10682 09:9DB5: C2 20        	rep	#$20
 10683                        	longa	on
 10684                        ;
 10685                        ;      /* Opérations >> ou << = Toujours à 0  */
 10686                        ;      current_SuperInterseg1->BitShiftCnt = 0x00;
 10687                        	.line	1515
 10688 09:9DB7: E2 20        	sep	#$20
 10689                        	longa	off
 10690 09:9DB9: A9 00        	lda	#$0
 10691 09:9DBB: A0 0A 00     	ldy	#$a
 10692 09:9DBE: 97 1D        	sta	[<L366+current_SuperInterseg1_1],Y
  Mon Sep 27 2021  9:39                                                Page 198


 10693 09:9DC0: C2 20        	rep	#$20
 10694                        	longa	on
 10695                        ;
 10696                        ;      /* File Number toujours à 1 */
 10697                        ;      current_SuperInterseg1->FileNum = 1;
 10698                        	.line	1518
 10699 09:9DC2: A9 01 00     	lda	#$1
 10700 09:9DC5: A0 0B 00     	ldy	#$b
 10701 09:9DC8: 97 1D        	sta	[<L366+current_SuperInterseg1_1],Y
 10702                        ;
 10703                        ;      /* Nombre d'adresse */
 10704                        ;      current_SuperInterseg1->nb_address = curren
                    t_SuperInterseg1->Count + 1;
 10705                        	.line	1521
 10706 09:9DCA: A0 08 00     	ldy	#$8
 10707 09:9DCD: B7 1D        	lda	[<L366+current_SuperInterseg1_1],Y
 10708 09:9DCF: 29 FF 00     	and	#$ff
 10709 09:9DD2: 85 01        	sta	<R0
 10710 09:9DD4: A5 01        	lda	<R0
 10711 09:9DD6: 1A           	ina
 10712 09:9DD7: A0 0D 00     	ldy	#$d
 10713 09:9DDA: 97 1D        	sta	[<L366+current_SuperInterseg1_1],Y
 10714                        ;
 10715                        ;      /** Copie les adresses **/
 10716                        ;      for(i=0; i<current_SuperInterseg1->nb_addre
                    ss; i++)
 10717                        	.line	1524
 10718 09:9DDC: 64 19        	stz	<L366+i_1
 10719 09:9DDE: 82 61 03     	brl	L10262
 10720                        L10261:
 10721                        ;        {
 10722                        	.line	1525
 10723                        ;          /* Décode OffsetPath et OffsetReference
                     */
 10724                        ;          current_SuperInterseg1->OffsetPatch[i] 
                    = ((WORD)(*page_rtn)) << 8 | data[1+i];
 10725                        	.line	1527
 10726 09:9DE1: A0 00 00     	ldy	#$0
 10727 09:9DE4: A5 19        	lda	<L366+i_1
 10728 09:9DE6: 10 01        	bpl	L371
 10729 09:9DE8: 88           	dey
 10730                        L371:
 10731 09:9DE9: 85 05        	sta	<R1
 10732 09:9DEB: 84 07        	sty	<R1+2
 10733 09:9DED: D4 07        	pei	<R1+2
 10734 09:9DEF: D4 05        	pei	<R1
 10735 09:9DF1: A9 02 00     	lda	#$2
 10736                        	xref	~~~lasl
 10737 09:9DF4: 22 xx xx xx  	jsl	~~~lasl
 10738 09:9DF8: 85 01        	sta	<R0
 10739 09:9DFA: 86 03        	stx	<R0+2
 10740 09:9DFC: 18           	clc
 10741 09:9DFD: A9 0F 00     	lda	#$f
 10742 09:9E00: 65 1D        	adc	<L366+current_SuperInterseg1_1
 10743 09:9E02: 85 09        	sta	<R2
 10744 09:9E04: A9 00 00     	lda	#$0
 10745 09:9E07: 65 1F        	adc	<L366+current_SuperInterseg1_1+2
 10746 09:9E09: 85 0B        	sta	<R2+2
  Mon Sep 27 2021  9:39                                                Page 199


 10747 09:9E0B: 18           	clc
 10748 09:9E0C: A5 09        	lda	<R2
 10749 09:9E0E: 65 01        	adc	<R0
 10750 09:9E10: 85 0D        	sta	<R3
 10751 09:9E12: A5 0B        	lda	<R2+2
 10752 09:9E14: 65 03        	adc	<R0+2
 10753 09:9E16: 85 0F        	sta	<R3+2
 10754 09:9E18: A5 19        	lda	<L366+i_1
 10755 09:9E1A: 1A           	ina
 10756 09:9E1B: 85 01        	sta	<R0
 10757 09:9E1D: A4 01        	ldy	<R0
 10758 09:9E1F: B7 24        	lda	[<L365+data_0],Y
 10759 09:9E21: 29 FF 00     	and	#$ff
 10760 09:9E24: 85 09        	sta	<R2
 10761 09:9E26: A7 2E        	lda	[<L365+page_rtn_0]
 10762 09:9E28: 29 FF 00     	and	#$ff
 10763 09:9E2B: 85 15        	sta	<21
 10764 09:9E2D: A5 15        	lda	<21
 10765 09:9E2F: EB           	xba
 10766 09:9E30: 29 00 FF     	and	#$ff00
 10767 09:9E33: 85 11        	sta	<17
 10768 09:9E35: A5 11        	lda	<17
 10769 09:9E37: 05 09        	ora	<R2
 10770 09:9E39: 85 15        	sta	<21
 10771 09:9E3B: A0 00 00     	ldy	#$0
 10772 09:9E3E: A5 15        	lda	<21
 10773 09:9E40: 10 01        	bpl	L372
 10774 09:9E42: 88           	dey
 10775                        L372:
 10776 09:9E43: 85 09        	sta	<R2
 10777 09:9E45: 84 0B        	sty	<R2+2
 10778 09:9E47: A5 09        	lda	<R2
 10779 09:9E49: 87 0D        	sta	[<R3]
 10780 09:9E4B: A5 0B        	lda	<R2+2
 10781 09:9E4D: A0 02 00     	ldy	#$2
 10782 09:9E50: 97 0D        	sta	[<R3],Y
 10783                        ;          
 10784                        ;          /* On vérifie qu'on reste dans les limi
                    te du LCONST */
 10785                        ;          if(current_SuperInterseg1->OffsetPatch[
                    i] > (DWORD) lconst_length)
 10786                        	.line	1530
 10787                        ;            {
 10788 09:9E52: A0 00 00     	ldy	#$0
 10789 09:9E55: A5 2C        	lda	<L365+lconst_length_0
 10790 09:9E57: 10 01        	bpl	L373
 10791 09:9E59: 88           	dey
 10792                        L373:
 10793 09:9E5A: 85 01        	sta	<R0
 10794 09:9E5C: 84 03        	sty	<R0+2
 10795 09:9E5E: A0 00 00     	ldy	#$0
 10796 09:9E61: A5 19        	lda	<L366+i_1
 10797 09:9E63: 10 01        	bpl	L374
 10798 09:9E65: 88           	dey
 10799                        L374:
 10800 09:9E66: 85 09        	sta	<R2
 10801 09:9E68: 84 0B        	sty	<R2+2
 10802 09:9E6A: D4 0B        	pei	<R2+2
  Mon Sep 27 2021  9:39                                                Page 200


 10803 09:9E6C: D4 09        	pei	<R2
 10804 09:9E6E: A9 02 00     	lda	#$2
 10805                        	xref	~~~lasl
 10806 09:9E71: 22 xx xx xx  	jsl	~~~lasl
 10807 09:9E75: 85 05        	sta	<R1
 10808 09:9E77: 86 07        	stx	<R1+2
 10809 09:9E79: 18           	clc
 10810 09:9E7A: A9 0F 00     	lda	#$f
 10811 09:9E7D: 65 1D        	adc	<L366+current_SuperInterseg1_1
 10812 09:9E7F: 85 0D        	sta	<R3
 10813 09:9E81: A9 00 00     	lda	#$0
 10814 09:9E84: 65 1F        	adc	<L366+current_SuperInterseg1_1+2
 10815 09:9E86: 85 0F        	sta	<R3+2
 10816 09:9E88: 18           	clc
 10817 09:9E89: A5 0D        	lda	<R3
 10818 09:9E8B: 65 05        	adc	<R1
 10819 09:9E8D: 85 11        	sta	<17
 10820 09:9E8F: A5 0F        	lda	<R3+2
 10821 09:9E91: 65 07        	adc	<R1+2
 10822 09:9E93: 85 13        	sta	<17+2
 10823 09:9E95: A5 01        	lda	<R0
 10824 09:9E97: C7 11        	cmp	[<17]
 10825 09:9E99: A5 03        	lda	<R0+2
 10826 09:9E9B: A0 02 00     	ldy	#$2
 10827 09:9E9E: F7 11        	sbc	[<17],Y
 10828 09:9EA0: 90 03        	bcc	L375
 10829 09:9EA2: 82 83 00     	brl	L10263
 10830                        L375:
 10831                        	.line	1531
 10832                        ;              //printf("  Error : Bad Reference A
                    ddress in SuperInterseg1 for Offset %04X in Segment #%02X.\n
                    ",current_SuperInterseg1->OffsetPatch[i],current_segment->he
                    ader.SegNum);
 10833                        ;              current_SuperInterseg1->OffsetRefer
                    ence[i] = 0xFFFF;   /* Erreur */
 10834                        	.line	1533
 10835 09:9EA5: A0 00 00     	ldy	#$0
 10836 09:9EA8: A5 19        	lda	<L366+i_1
 10837 09:9EAA: 10 01        	bpl	L376
 10838 09:9EAC: 88           	dey
 10839                        L376:
 10840 09:9EAD: 85 05        	sta	<R1
 10841 09:9EAF: 84 07        	sty	<R1+2
 10842 09:9EB1: D4 07        	pei	<R1+2
 10843 09:9EB3: D4 05        	pei	<R1
 10844 09:9EB5: A9 02 00     	lda	#$2
 10845                        	xref	~~~lasl
 10846 09:9EB8: 22 xx xx xx  	jsl	~~~lasl
 10847 09:9EBC: 85 01        	sta	<R0
 10848 09:9EBE: 86 03        	stx	<R0+2
 10849 09:9EC0: 18           	clc
 10850 09:9EC1: A9 0F 04     	lda	#$40f
 10851 09:9EC4: 65 1D        	adc	<L366+current_SuperInterseg1_1
 10852 09:9EC6: 85 09        	sta	<R2
 10853 09:9EC8: A9 00 00     	lda	#$0
 10854 09:9ECB: 65 1F        	adc	<L366+current_SuperInterseg1_1+2
 10855 09:9ECD: 85 0B        	sta	<R2+2
 10856 09:9ECF: 18           	clc
  Mon Sep 27 2021  9:39                                                Page 201


 10857 09:9ED0: A5 09        	lda	<R2
 10858 09:9ED2: 65 01        	adc	<R0
 10859 09:9ED4: 85 0D        	sta	<R3
 10860 09:9ED6: A5 0B        	lda	<R2+2
 10861 09:9ED8: 65 03        	adc	<R0+2
 10862 09:9EDA: 85 0F        	sta	<R3+2
 10863 09:9EDC: A9 FF FF     	lda	#$ffff
 10864 09:9EDF: 87 0D        	sta	[<R3]
 10865 09:9EE1: A9 00 00     	lda	#$0
 10866 09:9EE4: A0 02 00     	ldy	#$2
 10867 09:9EE7: 97 0D        	sta	[<R3],Y
 10868                        ;              current_SuperInterseg1->SegNum[i] =
                     0xFF;              /* Erreur */
 10869                        	.line	1534
 10870 09:9EE9: A0 00 00     	ldy	#$0
 10871 09:9EEC: A5 19        	lda	<L366+i_1
 10872 09:9EEE: 10 01        	bpl	L377
 10873 09:9EF0: 88           	dey
 10874                        L377:
 10875 09:9EF1: 85 05        	sta	<R1
 10876 09:9EF3: 84 07        	sty	<R1+2
 10877 09:9EF5: D4 07        	pei	<R1+2
 10878 09:9EF7: D4 05        	pei	<R1
 10879 09:9EF9: A9 01 00     	lda	#$1
 10880                        	xref	~~~lasl
 10881 09:9EFC: 22 xx xx xx  	jsl	~~~lasl
 10882 09:9F00: 85 01        	sta	<R0
 10883 09:9F02: 86 03        	stx	<R0+2
 10884 09:9F04: 18           	clc
 10885 09:9F05: A9 0F 08     	lda	#$80f
 10886 09:9F08: 65 1D        	adc	<L366+current_SuperInterseg1_1
 10887 09:9F0A: 85 09        	sta	<R2
 10888 09:9F0C: A9 00 00     	lda	#$0
 10889 09:9F0F: 65 1F        	adc	<L366+current_SuperInterseg1_1+2
 10890 09:9F11: 85 0B        	sta	<R2+2
 10891 09:9F13: 18           	clc
 10892 09:9F14: A5 09        	lda	<R2
 10893 09:9F16: 65 01        	adc	<R0
 10894 09:9F18: 85 0D        	sta	<R3
 10895 09:9F1A: A5 0B        	lda	<R2+2
 10896 09:9F1C: 65 03        	adc	<R0+2
 10897 09:9F1E: 85 0F        	sta	<R3+2
 10898 09:9F20: A9 FF 00     	lda	#$ff
 10899 09:9F23: 87 0D        	sta	[<R3]
 10900                        ;            }
 10901                        	.line	1535
 10902                        ;          else
 10903 09:9F25: 82 45 01     	brl	L10264
 10904                        L10263:
 10905                        ;            {          
 10906                        	.line	1537
 10907                        ;              memcpy(&one_word,&lconst[current_Su
                    perInterseg1->OffsetPatch[i]],sizeof(WORD));
 10908                        	.line	1538
 10909 09:9F28: F4 02 00     	pea	#<$2
 10910 09:9F2B: A0 00 00     	ldy	#$0
 10911 09:9F2E: A5 19        	lda	<L366+i_1
 10912 09:9F30: 10 01        	bpl	L378
  Mon Sep 27 2021  9:39                                                Page 202


 10913 09:9F32: 88           	dey
 10914                        L378:
 10915 09:9F33: 85 05        	sta	<R1
 10916 09:9F35: 84 07        	sty	<R1+2
 10917 09:9F37: D4 07        	pei	<R1+2
 10918 09:9F39: D4 05        	pei	<R1
 10919 09:9F3B: A9 02 00     	lda	#$2
 10920                        	xref	~~~lasl
 10921 09:9F3E: 22 xx xx xx  	jsl	~~~lasl
 10922 09:9F42: 85 01        	sta	<R0
 10923 09:9F44: 86 03        	stx	<R0+2
 10924 09:9F46: 18           	clc
 10925 09:9F47: A9 0F 00     	lda	#$f
 10926 09:9F4A: 65 1D        	adc	<L366+current_SuperInterseg1_1
 10927 09:9F4C: 85 09        	sta	<R2
 10928 09:9F4E: A9 00 00     	lda	#$0
 10929 09:9F51: 65 1F        	adc	<L366+current_SuperInterseg1_1+2
 10930 09:9F53: 85 0B        	sta	<R2+2
 10931 09:9F55: 18           	clc
 10932 09:9F56: A5 09        	lda	<R2
 10933 09:9F58: 65 01        	adc	<R0
 10934 09:9F5A: 85 0D        	sta	<R3
 10935 09:9F5C: A5 0B        	lda	<R2+2
 10936 09:9F5E: 65 03        	adc	<R0+2
 10937 09:9F60: 85 0F        	sta	<R3+2
 10938 09:9F62: 18           	clc
 10939 09:9F63: A5 28        	lda	<L365+lconst_0
 10940 09:9F65: 67 0D        	adc	[<R3]
 10941 09:9F67: 85 01        	sta	<R0
 10942 09:9F69: A5 2A        	lda	<L365+lconst_0+2
 10943 09:9F6B: A0 02 00     	ldy	#$2
 10944 09:9F6E: 77 0D        	adc	[<R3],Y
 10945 09:9F70: 85 03        	sta	<R0+2
 10946 09:9F72: D4 03        	pei	<R0+2
 10947 09:9F74: D4 01        	pei	<R0
 10948 09:9F76: F4 00 00     	pea	#0
 10949 09:9F79: 18           	clc
 10950 09:9F7A: 7B           	tdc
 10951 09:9F7B: 69 1B 00     	adc	#<L366+one_word_1
 10952 09:9F7E: 48           	pha
 10953 09:9F7F: 22 xx xx xx  	jsl	~~memcpy
 10954                        ;              current_SuperInterseg1->OffsetRefer
                    ence[i] = (DWORD) one_word;
 10955                        	.line	1539
 10956 09:9F83: A0 00 00     	ldy	#$0
 10957 09:9F86: A5 19        	lda	<L366+i_1
 10958 09:9F88: 10 01        	bpl	L379
 10959 09:9F8A: 88           	dey
 10960                        L379:
 10961 09:9F8B: 85 05        	sta	<R1
 10962 09:9F8D: 84 07        	sty	<R1+2
 10963 09:9F8F: D4 07        	pei	<R1+2
 10964 09:9F91: D4 05        	pei	<R1
 10965 09:9F93: A9 02 00     	lda	#$2
 10966                        	xref	~~~lasl
 10967 09:9F96: 22 xx xx xx  	jsl	~~~lasl
 10968 09:9F9A: 85 01        	sta	<R0
 10969 09:9F9C: 86 03        	stx	<R0+2
  Mon Sep 27 2021  9:39                                                Page 203


 10970 09:9F9E: 18           	clc
 10971 09:9F9F: A9 0F 04     	lda	#$40f
 10972 09:9FA2: 65 1D        	adc	<L366+current_SuperInterseg1_1
 10973 09:9FA4: 85 09        	sta	<R2
 10974 09:9FA6: A9 00 00     	lda	#$0
 10975 09:9FA9: 65 1F        	adc	<L366+current_SuperInterseg1_1+2
 10976 09:9FAB: 85 0B        	sta	<R2+2
 10977 09:9FAD: 18           	clc
 10978 09:9FAE: A5 09        	lda	<R2
 10979 09:9FB0: 65 01        	adc	<R0
 10980 09:9FB2: 85 0D        	sta	<R3
 10981 09:9FB4: A5 0B        	lda	<R2+2
 10982 09:9FB6: 65 03        	adc	<R0+2
 10983 09:9FB8: 85 0F        	sta	<R3+2
 10984 09:9FBA: A0 00 00     	ldy	#$0
 10985 09:9FBD: A5 1B        	lda	<L366+one_word_1
 10986 09:9FBF: 10 01        	bpl	L380
 10987 09:9FC1: 88           	dey
 10988                        L380:
 10989 09:9FC2: 85 01        	sta	<R0
 10990 09:9FC4: 84 03        	sty	<R0+2
 10991 09:9FC6: A5 01        	lda	<R0
 10992 09:9FC8: 87 0D        	sta	[<R3]
 10993 09:9FCA: A5 03        	lda	<R0+2
 10994 09:9FCC: A0 02 00     	ldy	#$2
 10995 09:9FCF: 97 0D        	sta	[<R3],Y
 10996                        ;              current_SuperInterseg1->SegNum[i] =
                     (WORD) lconst[current_SuperInterseg1->OffsetPatch[i]+2];
 10997                        	.line	1540
 10998 09:9FD1: A0 00 00     	ldy	#$0
 10999 09:9FD4: A5 19        	lda	<L366+i_1
 11000 09:9FD6: 10 01        	bpl	L381
 11001 09:9FD8: 88           	dey
 11002                        L381:
 11003 09:9FD9: 85 05        	sta	<R1
 11004 09:9FDB: 84 07        	sty	<R1+2
 11005 09:9FDD: D4 07        	pei	<R1+2
 11006 09:9FDF: D4 05        	pei	<R1
 11007 09:9FE1: A9 01 00     	lda	#$1
 11008                        	xref	~~~lasl
 11009 09:9FE4: 22 xx xx xx  	jsl	~~~lasl
 11010 09:9FE8: 85 01        	sta	<R0
 11011 09:9FEA: 86 03        	stx	<R0+2
 11012 09:9FEC: 18           	clc
 11013 09:9FED: A9 0F 08     	lda	#$80f
 11014 09:9FF0: 65 1D        	adc	<L366+current_SuperInterseg1_1
 11015 09:9FF2: 85 09        	sta	<R2
 11016 09:9FF4: A9 00 00     	lda	#$0
 11017 09:9FF7: 65 1F        	adc	<L366+current_SuperInterseg1_1+2
 11018 09:9FF9: 85 0B        	sta	<R2+2
 11019 09:9FFB: 18           	clc
 11020 09:9FFC: A5 09        	lda	<R2
 11021 09:9FFE: 65 01        	adc	<R0
 11022 09:A000: 85 0D        	sta	<R3
 11023 09:A002: A5 0B        	lda	<R2+2
 11024 09:A004: 65 03        	adc	<R0+2
 11025 09:A006: 85 0F        	sta	<R3+2
 11026 09:A008: A0 00 00     	ldy	#$0
  Mon Sep 27 2021  9:39                                                Page 204


 11027 09:A00B: A5 19        	lda	<L366+i_1
 11028 09:A00D: 10 01        	bpl	L382
 11029 09:A00F: 88           	dey
 11030                        L382:
 11031 09:A010: 85 09        	sta	<R2
 11032 09:A012: 84 0B        	sty	<R2+2
 11033 09:A014: D4 0B        	pei	<R2+2
 11034 09:A016: D4 09        	pei	<R2
 11035 09:A018: A9 02 00     	lda	#$2
 11036                        	xref	~~~lasl
 11037 09:A01B: 22 xx xx xx  	jsl	~~~lasl
 11038 09:A01F: 85 01        	sta	<R0
 11039 09:A021: 86 03        	stx	<R0+2
 11040 09:A023: 18           	clc
 11041 09:A024: A9 0F 00     	lda	#$f
 11042 09:A027: 65 1D        	adc	<L366+current_SuperInterseg1_1
 11043 09:A029: 85 11        	sta	<17
 11044 09:A02B: A9 00 00     	lda	#$0
 11045 09:A02E: 65 1F        	adc	<L366+current_SuperInterseg1_1+2
 11046 09:A030: 85 13        	sta	<17+2
 11047 09:A032: 18           	clc
 11048 09:A033: A5 11        	lda	<17
 11049 09:A035: 65 01        	adc	<R0
 11050 09:A037: 85 15        	sta	<21
 11051 09:A039: A5 13        	lda	<17+2
 11052 09:A03B: 65 03        	adc	<R0+2
 11053 09:A03D: 85 17        	sta	<21+2
 11054 09:A03F: A7 15        	lda	[<21]
 11055 09:A041: 85 01        	sta	<R0
 11056 09:A043: A0 02 00     	ldy	#$2
 11057 09:A046: B7 15        	lda	[<21],Y
 11058 09:A048: 85 03        	sta	<R0+2
 11059 09:A04A: 18           	clc
 11060 09:A04B: A9 02 00     	lda	#$2
 11061 09:A04E: 65 28        	adc	<L365+lconst_0
 11062 09:A050: 85 11        	sta	<17
 11063 09:A052: A9 00 00     	lda	#$0
 11064 09:A055: 65 2A        	adc	<L365+lconst_0+2
 11065 09:A057: 85 13        	sta	<17+2
 11066 09:A059: 18           	clc
 11067 09:A05A: A5 11        	lda	<17
 11068 09:A05C: 65 01        	adc	<R0
 11069 09:A05E: 85 15        	sta	<21
 11070 09:A060: A5 13        	lda	<17+2
 11071 09:A062: 65 03        	adc	<R0+2
 11072 09:A064: 85 17        	sta	<21+2
 11073 09:A066: A7 15        	lda	[<21]
 11074 09:A068: 29 FF 00     	and	#$ff
 11075 09:A06B: 87 0D        	sta	[<R3]
 11076                        ;            }
 11077                        	.line	1541
 11078                        L10264:
 11079                        ;            
 11080                        ;          /* Conserve ce INTERSEG */
 11081                        ;          AddInterseg(current_SuperInterseg1->Byt
                    eCnt,current_SuperInterseg1->BitShiftCnt,current_SuperInters
                    eg1->OffsetPatch[i],current_SuperInterseg1->OffsetReference[
                    i],current_SuperInterseg1->FileNum,current_SuperInterseg1->S
  Mon Sep 27 2021  9:39                                                Page 205


                    egNum[i],RECORD_SUPER_INTERSEG1);
 11082                        	.line	1544
 11083 09:A06D: F4 07 00     	pea	#<$7
 11084 09:A070: A0 00 00     	ldy	#$0
 11085 09:A073: A5 19        	lda	<L366+i_1
 11086 09:A075: 10 01        	bpl	L383
 11087 09:A077: 88           	dey
 11088                        L383:
 11089 09:A078: 85 05        	sta	<R1
 11090 09:A07A: 84 07        	sty	<R1+2
 11091 09:A07C: D4 07        	pei	<R1+2
 11092 09:A07E: D4 05        	pei	<R1
 11093 09:A080: A9 01 00     	lda	#$1
 11094                        	xref	~~~lasl
 11095 09:A083: 22 xx xx xx  	jsl	~~~lasl
 11096 09:A087: 85 01        	sta	<R0
 11097 09:A089: 86 03        	stx	<R0+2
 11098 09:A08B: 18           	clc
 11099 09:A08C: A9 0F 08     	lda	#$80f
 11100 09:A08F: 65 1D        	adc	<L366+current_SuperInterseg1_1
 11101 09:A091: 85 09        	sta	<R2
 11102 09:A093: A9 00 00     	lda	#$0
 11103 09:A096: 65 1F        	adc	<L366+current_SuperInterseg1_1+2
 11104 09:A098: 85 0B        	sta	<R2+2
 11105 09:A09A: 18           	clc
 11106 09:A09B: A5 09        	lda	<R2
 11107 09:A09D: 65 01        	adc	<R0
 11108 09:A09F: 85 0D        	sta	<R3
 11109 09:A0A1: A5 0B        	lda	<R2+2
 11110 09:A0A3: 65 03        	adc	<R0+2
 11111 09:A0A5: 85 0F        	sta	<R3+2
 11112 09:A0A7: A7 0D        	lda	[<R3]
 11113 09:A0A9: 48           	pha
 11114 09:A0AA: A0 0B 00     	ldy	#$b
 11115 09:A0AD: B7 1D        	lda	[<L366+current_SuperInterseg1_1],Y
 11116 09:A0AF: 48           	pha
 11117 09:A0B0: A0 00 00     	ldy	#$0
 11118 09:A0B3: A5 19        	lda	<L366+i_1
 11119 09:A0B5: 10 01        	bpl	L384
 11120 09:A0B7: 88           	dey
 11121                        L384:
 11122 09:A0B8: 85 09        	sta	<R2
 11123 09:A0BA: 84 0B        	sty	<R2+2
 11124 09:A0BC: D4 0B        	pei	<R2+2
 11125 09:A0BE: D4 09        	pei	<R2
 11126 09:A0C0: A9 02 00     	lda	#$2
 11127                        	xref	~~~lasl
 11128 09:A0C3: 22 xx xx xx  	jsl	~~~lasl
 11129 09:A0C7: 85 01        	sta	<R0
 11130 09:A0C9: 86 03        	stx	<R0+2
 11131 09:A0CB: 18           	clc
 11132 09:A0CC: A9 0F 04     	lda	#$40f
 11133 09:A0CF: 65 1D        	adc	<L366+current_SuperInterseg1_1
 11134 09:A0D1: 85 0D        	sta	<R3
 11135 09:A0D3: A9 00 00     	lda	#$0
 11136 09:A0D6: 65 1F        	adc	<L366+current_SuperInterseg1_1+2
 11137 09:A0D8: 85 0F        	sta	<R3+2
 11138 09:A0DA: 18           	clc
  Mon Sep 27 2021  9:39                                                Page 206


 11139 09:A0DB: A5 0D        	lda	<R3
 11140 09:A0DD: 65 01        	adc	<R0
 11141 09:A0DF: 85 11        	sta	<17
 11142 09:A0E1: A5 0F        	lda	<R3+2
 11143 09:A0E3: 65 03        	adc	<R0+2
 11144 09:A0E5: 85 13        	sta	<17+2
 11145 09:A0E7: A0 02 00     	ldy	#$2
 11146 09:A0EA: B7 11        	lda	[<17],Y
 11147 09:A0EC: 48           	pha
 11148 09:A0ED: A7 11        	lda	[<17]
 11149 09:A0EF: 48           	pha
 11150 09:A0F0: A0 00 00     	ldy	#$0
 11151 09:A0F3: A5 19        	lda	<L366+i_1
 11152 09:A0F5: 10 01        	bpl	L385
 11153 09:A0F7: 88           	dey
 11154                        L385:
 11155 09:A0F8: 85 0D        	sta	<R3
 11156 09:A0FA: 84 0F        	sty	<R3+2
 11157 09:A0FC: D4 0F        	pei	<R3+2
 11158 09:A0FE: D4 0D        	pei	<R3
 11159 09:A100: A9 02 00     	lda	#$2
 11160                        	xref	~~~lasl
 11161 09:A103: 22 xx xx xx  	jsl	~~~lasl
 11162 09:A107: 85 01        	sta	<R0
 11163 09:A109: 86 03        	stx	<R0+2
 11164 09:A10B: 18           	clc
 11165 09:A10C: A9 0F 00     	lda	#$f
 11166 09:A10F: 65 1D        	adc	<L366+current_SuperInterseg1_1
 11167 09:A111: 85 11        	sta	<17
 11168 09:A113: A9 00 00     	lda	#$0
 11169 09:A116: 65 1F        	adc	<L366+current_SuperInterseg1_1+2
 11170 09:A118: 85 13        	sta	<17+2
 11171 09:A11A: 18           	clc
 11172 09:A11B: A5 11        	lda	<17
 11173 09:A11D: 65 01        	adc	<R0
 11174 09:A11F: 85 15        	sta	<21
 11175 09:A121: A5 13        	lda	<17+2
 11176 09:A123: 65 03        	adc	<R0+2
 11177 09:A125: 85 17        	sta	<21+2
 11178 09:A127: A0 02 00     	ldy	#$2
 11179 09:A12A: B7 15        	lda	[<21],Y
 11180 09:A12C: 48           	pha
 11181 09:A12D: A7 15        	lda	[<21]
 11182 09:A12F: 48           	pha
 11183 09:A130: A0 0A 00     	ldy	#$a
 11184 09:A133: B7 1D        	lda	[<L366+current_SuperInterseg1_1],Y
 11185 09:A135: 48           	pha
 11186 09:A136: A0 09 00     	ldy	#$9
 11187 09:A139: B7 1D        	lda	[<L366+current_SuperInterseg1_1],Y
 11188 09:A13B: 48           	pha
 11189 09:A13C: 22 A9 AC 09  	jsl	~~AddInterseg
 11190                        ;        }
 11191                        	.line	1545
 11192                        L10259:
 11193 09:A140: E6 19        	inc	<L366+i_1
 11194                        L10262:
 11195 09:A142: 38           	sec
 11196 09:A143: A5 19        	lda	<L366+i_1
  Mon Sep 27 2021  9:39                                                Page 207


 11197 09:A145: A0 0D 00     	ldy	#$d
 11198 09:A148: F7 1D        	sbc	[<L366+current_SuperInterseg1_1],Y
 11199 09:A14A: 70 03        	bvs	L386
 11200 09:A14C: 49 00 80     	eor	#$8000
 11201                        L386:
 11202 09:A14F: 30 03        	bmi	L387
 11203 09:A151: 82 8D FC     	brl	L10261
 11204                        L387:
 11205                        L10260:
 11206                        ;
 11207                        ;      /* Page suivante */
 11208                        ;      *page_rtn = *page_rtn + 1;
 11209                        	.line	1548
 11210 09:A154: E2 20        	sep	#$20
 11211                        	longa	off
 11212 09:A156: A7 2E        	lda	[<L365+page_rtn_0]
 11213 09:A158: 1A           	ina
 11214 09:A159: C2 20        	rep	#$20
 11215                        	longa	on
 11216 09:A15B: E2 20        	sep	#$20
 11217                        	longa	off
 11218 09:A15D: 87 2E        	sta	[<L365+page_rtn_0]
 11219 09:A15F: C2 20        	rep	#$20
 11220                        	longa	on
 11221                        ;
 11222                        ;      /* Longueur du SubRecord */
 11223                        ;      *length_rtn = 1 + current_SuperInterseg1->n
                    b_address*sizeof(BYTE);
 11224                        	.line	1551
 11225 09:A161: A0 0D 00     	ldy	#$d
 11226 09:A164: B7 1D        	lda	[<L366+current_SuperInterseg1_1],Y
 11227 09:A166: 1A           	ina
 11228 09:A167: 87 32        	sta	[<L365+length_rtn_0]
 11229                        ;    }
 11230                        	.line	1552
 11231                        L10258:
 11232                        ;
 11233                        ;  /* Renvoie la structure */
 11234                        ;  return(current_SuperInterseg1);
 11235                        	.line	1555
 11236 09:A169: A6 1F        	ldx	<L366+current_SuperInterseg1_1+2
 11237 09:A16B: A5 1D        	lda	<L366+current_SuperInterseg1_1
 11238 09:A16D: 82 E7 FB     	brl	L369
 11239                        ;}
 11240                        	.line	1556
 11241                        	.endblock	1556
 11242             00000020   L365	equ	32
 11243             00000019   L366	equ	25
 11244 09:A170:              	ends
 11245                        	efunc
 11246                        	.endfunc	1556,25,32
 11247                        	.line	1556
 11248                        ;
 11249                        ;
 11250                        ;/************************************************
                    **************************/
 11251                        ;/*  DecodeSuperInterseg212() :  Décodage d'un Sub
                    Record SuperInterseg212. */
  Mon Sep 27 2021  9:39                                                Page 208


 11252                        ;/************************************************
                    **************************/
 11253                        ;static struct subrecord_SuperInterseg212 *DecodeS
                    uperInterseg212(unsigned char *data, BYTE FileNum, unsigned 
                    char *lconst, int lconst_length, BYTE *page_rtn, int *length
                    _rtn, struct omf_segment *current_segment)
 11254                        ;{
 11255                        	.line	1562
 11256                        	.line	1563
 11257                        	LOADER
 11258                        	func
 11259                        	.function	1563
 11260                        ~~DecodeSuperInterseg212:
 11261                        	longa	on
 11262                        	longi	on
 11263 09:A170: 3B           	tsc
 11264 09:A171: 38           	sec
 11265 09:A172: E9 20 00     	sbc	#L388
 11266 09:A175: 1B           	tcs
 11267 09:A176: 0B           	phd
 11268 09:A177: 5B           	tcd
 11269             00000004   data_0	set	4
 11270             00000008   FileNum_0	set	8
 11271             0000000A   lconst_0	set	10
 11272             0000000E   lconst_length_0	set	14
 11273             00000010   page_rtn_0	set	16
 11274             00000014   length_rtn_0	set	20
 11275             00000018   current_segment_0	set	24
 11276                        	.block	1563
 11277                        ;  int i;
 11278                        ;  WORD one_word;
 11279                        ;  struct subrecord_SuperInterseg212 *current_Supe
                    rInterseg212;
 11280                        ;
 11281                        ;  /* Allocation mémoire */
 11282                        ;  current_SuperInterseg212 = (struct subrecord_Su
                    perInterseg212 *) k_calloc(1,sizeof(struct subrecord_SuperIn
                    terseg212));
 11283             00000000   i_1	set	0
 11284             00000002   one_word_1	set	2
 11285             00000004   current_SuperInterseg212_1	set	4
 11286                        	.sym	i,0,5,1,16
 11287                        	.sym	one_word,2,5,1,16
 11288                        	.sym	current_SuperInterseg212,4,138,1,32,53
 11289                        	.sym	data,4,142,6,32
 11290                        	.sym	FileNum,8,14,6,8
 11291                        	.sym	lconst,10,142,6,32
 11292                        	.sym	lconst_length,14,5,6,16
 11293                        	.sym	page_rtn,16,142,6,32
 11294                        	.sym	length_rtn,20,133,6,32
 11295                        	.sym	current_segment,24,138,6,32,126
 11296                        	.line	1569
 11297 09:A178: F4 13 0A     	pea	#<$a13
 11298 09:A17B: F4 01 00     	pea	#<$1
 11299 09:A17E: 22 xx xx xx  	jsl	~~k_calloc
 11300 09:A182: 85 1D        	sta	<L389+current_SuperInterseg212_1
 11301 09:A184: 86 1F        	stx	<L389+current_SuperInterseg212_1+2
 11302                        ;  if(current_SuperInterseg212 == NULL)
  Mon Sep 27 2021  9:39                                                Page 209


 11303                        	.line	1570
 11304                        ;    {
 11305 09:A186: A5 1D        	lda	<L389+current_SuperInterseg212_1
 11306 09:A188: 05 1F        	ora	<L389+current_SuperInterseg212_1+2
 11307 09:A18A: F0 03        	beq	L391
 11308 09:A18C: 82 19 00     	brl	L10265
 11309                        L391:
 11310                        	.line	1571
 11311                        ;      //printf("Error : Impossible to allocate me
                    mory for SubRecord SuperInterseg212.\n");
 11312                        ;      return(NULL);
 11313                        	.line	1573
 11314 09:A18F: A9 00 00     	lda	#$0
 11315 09:A192: AA           	tax
 11316 09:A193: A9 00 00     	lda	#$0
 11317                        L392:
 11318 09:A196: A8           	tay
 11319 09:A197: A5 22        	lda	<L388+2
 11320 09:A199: 85 3A        	sta	<L388+2+24
 11321 09:A19B: A5 21        	lda	<L388+1
 11322 09:A19D: 85 39        	sta	<L388+1+24
 11323 09:A19F: 2B           	pld
 11324 09:A1A0: 3B           	tsc
 11325 09:A1A1: 18           	clc
 11326 09:A1A2: 69 38 00     	adc	#L388+24
 11327 09:A1A5: 1B           	tcs
 11328 09:A1A6: 98           	tya
 11329 09:A1A7: 6B           	rtl
 11330                        ;    }
 11331                        	.line	1574
 11332                        ;
 11333                        ;  /* Nombre d'adresse-1 ou Saut de Page */
 11334                        ;  current_SuperInterseg212->Count = data[0];
 11335                        L10265:
 11336                        	.line	1577
 11337 09:A1A8: E2 20        	sep	#$20
 11338                        	longa	off
 11339 09:A1AA: A7 24        	lda	[<L388+data_0]
 11340 09:A1AC: A0 08 00     	ldy	#$8
 11341 09:A1AF: 97 1D        	sta	[<L389+current_SuperInterseg212_1],Y
 11342 09:A1B1: C2 20        	rep	#$20
 11343                        	longa	on
 11344                        ;
 11345                        ;  /** Saut de Page **/
 11346                        ;  if((current_SuperInterseg212->Count & 0x80) == 
                    0x80)
 11347                        	.line	1580
 11348                        ;    {
 11349 09:A1B3: A0 08 00     	ldy	#$8
 11350 09:A1B6: B7 1D        	lda	[<L389+current_SuperInterseg212_1],Y
 11351 09:A1B8: 29 80 00     	and	#<$80
 11352 09:A1BB: 85 01        	sta	<R0
 11353 09:A1BD: A5 01        	lda	<R0
 11354 09:A1BF: C9 80 00     	cmp	#<$80
 11355 09:A1C2: F0 03        	beq	L393
 11356 09:A1C4: 82 24 00     	brl	L10266
 11357                        L393:
 11358                        	.line	1581
  Mon Sep 27 2021  9:39                                                Page 210


 11359                        ;      /* On saute X pages */
 11360                        ;      *page_rtn = *page_rtn + (current_SuperInter
                    seg212->Count & 0x7F);
 11361                        	.line	1583
 11362 09:A1C7: E2 20        	sep	#$20
 11363                        	longa	off
 11364 09:A1C9: A0 08 00     	ldy	#$8
 11365 09:A1CC: B7 1D        	lda	[<L389+current_SuperInterseg212_1],Y
 11366 09:A1CE: 29 7F        	and	#<$7f
 11367 09:A1D0: 85 01        	sta	<R0
 11368 09:A1D2: C2 20        	rep	#$20
 11369                        	longa	on
 11370 09:A1D4: E2 20        	sep	#$20
 11371                        	longa	off
 11372 09:A1D6: 18           	clc
 11373 09:A1D7: A7 30        	lda	[<L388+page_rtn_0]
 11374 09:A1D9: 65 01        	adc	<R0
 11375 09:A1DB: C2 20        	rep	#$20
 11376                        	longa	on
 11377 09:A1DD: E2 20        	sep	#$20
 11378                        	longa	off
 11379 09:A1DF: 87 30        	sta	[<L388+page_rtn_0]
 11380 09:A1E1: C2 20        	rep	#$20
 11381                        	longa	on
 11382                        ;
 11383                        ;      /* Longueur du SubRecord */
 11384                        ;      *length_rtn = 1;
 11385                        	.line	1586
 11386 09:A1E3: A9 01 00     	lda	#$1
 11387 09:A1E6: 87 34        	sta	[<L388+length_rtn_0]
 11388                        ;    }
 11389                        	.line	1587
 11390                        ;  else
 11391 09:A1E8: 82 BF 03     	brl	L10267
 11392                        L10266:
 11393                        ;    {
 11394                        	.line	1589
 11395                        ;      /* Number of Bytes to be relocated = Toujou
                    rs à 3 */
 11396                        ;      current_SuperInterseg212->ByteCnt = 0x03;
 11397                        	.line	1591
 11398 09:A1EB: E2 20        	sep	#$20
 11399                        	longa	off
 11400 09:A1ED: A9 03        	lda	#$3
 11401 09:A1EF: A0 09 00     	ldy	#$9
 11402 09:A1F2: 97 1D        	sta	[<L389+current_SuperInterseg212_1],Y
 11403 09:A1F4: C2 20        	rep	#$20
 11404                        	longa	on
 11405                        ;
 11406                        ;      /* Opérations >> ou << = Toujours à 0  */
 11407                        ;      current_SuperInterseg212->BitShiftCnt = 0x0
                    0;
 11408                        	.line	1594
 11409 09:A1F6: E2 20        	sep	#$20
 11410                        	longa	off
 11411 09:A1F8: A9 00        	lda	#$0
 11412 09:A1FA: A0 0A 00     	ldy	#$a
 11413 09:A1FD: 97 1D        	sta	[<L389+current_SuperInterseg212_1],Y
  Mon Sep 27 2021  9:39                                                Page 211


 11414 09:A1FF: C2 20        	rep	#$20
 11415                        	longa	on
 11416                        ;
 11417                        ;      /* File Number */
 11418                        ;      current_SuperInterseg212->FileNum = FileNum
                    ;
 11419                        	.line	1597
 11420 09:A201: A5 28        	lda	<L388+FileNum_0
 11421 09:A203: 29 FF 00     	and	#$ff
 11422 09:A206: A0 0B 00     	ldy	#$b
 11423 09:A209: 97 1D        	sta	[<L389+current_SuperInterseg212_1],Y
 11424                        ;
 11425                        ;      /* Nombre d'adresse */
 11426                        ;      current_SuperInterseg212->nb_address = curr
                    ent_SuperInterseg212->Count + 1;
 11427                        	.line	1600
 11428 09:A20B: A0 08 00     	ldy	#$8
 11429 09:A20E: B7 1D        	lda	[<L389+current_SuperInterseg212_1],Y
 11430 09:A210: 29 FF 00     	and	#$ff
 11431 09:A213: 85 01        	sta	<R0
 11432 09:A215: A5 01        	lda	<R0
 11433 09:A217: 1A           	ina
 11434 09:A218: A0 0D 00     	ldy	#$d
 11435 09:A21B: 97 1D        	sta	[<L389+current_SuperInterseg212_1],Y
 11436                        ;
 11437                        ;      /** Copie les adresses **/
 11438                        ;      for(i=0; i<current_SuperInterseg212->nb_add
                    ress; i++)
 11439                        	.line	1603
 11440 09:A21D: 64 19        	stz	<L389+i_1
 11441 09:A21F: 82 61 03     	brl	L10271
 11442                        L10270:
 11443                        ;        {
 11444                        	.line	1604
 11445                        ;          /* Décode OffsetPath et OffsetReference
                     */
 11446                        ;          current_SuperInterseg212->OffsetPatch[i
                    ] = ((WORD)*page_rtn) << 8 | data[1+i];
 11447                        	.line	1606
 11448 09:A222: A0 00 00     	ldy	#$0
 11449 09:A225: A5 19        	lda	<L389+i_1
 11450 09:A227: 10 01        	bpl	L394
 11451 09:A229: 88           	dey
 11452                        L394:
 11453 09:A22A: 85 05        	sta	<R1
 11454 09:A22C: 84 07        	sty	<R1+2
 11455 09:A22E: D4 07        	pei	<R1+2
 11456 09:A230: D4 05        	pei	<R1
 11457 09:A232: A9 02 00     	lda	#$2
 11458                        	xref	~~~lasl
 11459 09:A235: 22 xx xx xx  	jsl	~~~lasl
 11460 09:A239: 85 01        	sta	<R0
 11461 09:A23B: 86 03        	stx	<R0+2
 11462 09:A23D: 18           	clc
 11463 09:A23E: A9 0F 00     	lda	#$f
 11464 09:A241: 65 1D        	adc	<L389+current_SuperInterseg212_1
 11465 09:A243: 85 09        	sta	<R2
 11466 09:A245: A9 00 00     	lda	#$0
  Mon Sep 27 2021  9:39                                                Page 212


 11467 09:A248: 65 1F        	adc	<L389+current_SuperInterseg212_1+2
 11468 09:A24A: 85 0B        	sta	<R2+2
 11469 09:A24C: 18           	clc
 11470 09:A24D: A5 09        	lda	<R2
 11471 09:A24F: 65 01        	adc	<R0
 11472 09:A251: 85 0D        	sta	<R3
 11473 09:A253: A5 0B        	lda	<R2+2
 11474 09:A255: 65 03        	adc	<R0+2
 11475 09:A257: 85 0F        	sta	<R3+2
 11476 09:A259: A5 19        	lda	<L389+i_1
 11477 09:A25B: 1A           	ina
 11478 09:A25C: 85 01        	sta	<R0
 11479 09:A25E: A4 01        	ldy	<R0
 11480 09:A260: B7 24        	lda	[<L388+data_0],Y
 11481 09:A262: 29 FF 00     	and	#$ff
 11482 09:A265: 85 09        	sta	<R2
 11483 09:A267: A7 30        	lda	[<L388+page_rtn_0]
 11484 09:A269: 29 FF 00     	and	#$ff
 11485 09:A26C: 85 15        	sta	<21
 11486 09:A26E: A5 15        	lda	<21
 11487 09:A270: EB           	xba
 11488 09:A271: 29 00 FF     	and	#$ff00
 11489 09:A274: 85 11        	sta	<17
 11490 09:A276: A5 11        	lda	<17
 11491 09:A278: 05 09        	ora	<R2
 11492 09:A27A: 85 15        	sta	<21
 11493 09:A27C: A0 00 00     	ldy	#$0
 11494 09:A27F: A5 15        	lda	<21
 11495 09:A281: 10 01        	bpl	L395
 11496 09:A283: 88           	dey
 11497                        L395:
 11498 09:A284: 85 09        	sta	<R2
 11499 09:A286: 84 0B        	sty	<R2+2
 11500 09:A288: A5 09        	lda	<R2
 11501 09:A28A: 87 0D        	sta	[<R3]
 11502 09:A28C: A5 0B        	lda	<R2+2
 11503 09:A28E: A0 02 00     	ldy	#$2
 11504 09:A291: 97 0D        	sta	[<R3],Y
 11505                        ;          
 11506                        ;          /* On vérifie qu'on reste dans les limi
                    te du LCONST */
 11507                        ;          if(current_SuperInterseg212->OffsetPatc
                    h[i] > (DWORD) lconst_length)
 11508                        	.line	1609
 11509                        ;            {
 11510 09:A293: A0 00 00     	ldy	#$0
 11511 09:A296: A5 2E        	lda	<L388+lconst_length_0
 11512 09:A298: 10 01        	bpl	L396
 11513 09:A29A: 88           	dey
 11514                        L396:
 11515 09:A29B: 85 01        	sta	<R0
 11516 09:A29D: 84 03        	sty	<R0+2
 11517 09:A29F: A0 00 00     	ldy	#$0
 11518 09:A2A2: A5 19        	lda	<L389+i_1
 11519 09:A2A4: 10 01        	bpl	L397
 11520 09:A2A6: 88           	dey
 11521                        L397:
 11522 09:A2A7: 85 09        	sta	<R2
  Mon Sep 27 2021  9:39                                                Page 213


 11523 09:A2A9: 84 0B        	sty	<R2+2
 11524 09:A2AB: D4 0B        	pei	<R2+2
 11525 09:A2AD: D4 09        	pei	<R2
 11526 09:A2AF: A9 02 00     	lda	#$2
 11527                        	xref	~~~lasl
 11528 09:A2B2: 22 xx xx xx  	jsl	~~~lasl
 11529 09:A2B6: 85 05        	sta	<R1
 11530 09:A2B8: 86 07        	stx	<R1+2
 11531 09:A2BA: 18           	clc
 11532 09:A2BB: A9 0F 00     	lda	#$f
 11533 09:A2BE: 65 1D        	adc	<L389+current_SuperInterseg212_1
 11534 09:A2C0: 85 0D        	sta	<R3
 11535 09:A2C2: A9 00 00     	lda	#$0
 11536 09:A2C5: 65 1F        	adc	<L389+current_SuperInterseg212_1+2
 11537 09:A2C7: 85 0F        	sta	<R3+2
 11538 09:A2C9: 18           	clc
 11539 09:A2CA: A5 0D        	lda	<R3
 11540 09:A2CC: 65 05        	adc	<R1
 11541 09:A2CE: 85 11        	sta	<17
 11542 09:A2D0: A5 0F        	lda	<R3+2
 11543 09:A2D2: 65 07        	adc	<R1+2
 11544 09:A2D4: 85 13        	sta	<17+2
 11545 09:A2D6: A5 01        	lda	<R0
 11546 09:A2D8: C7 11        	cmp	[<17]
 11547 09:A2DA: A5 03        	lda	<R0+2
 11548 09:A2DC: A0 02 00     	ldy	#$2
 11549 09:A2DF: F7 11        	sbc	[<17],Y
 11550 09:A2E1: 90 03        	bcc	L398
 11551 09:A2E3: 82 83 00     	brl	L10272
 11552                        L398:
 11553                        	.line	1610
 11554                        ;              //printf("  Error : Bad Reference A
                    ddress in SuperInterseg212 for Offset %04X in Segment #%02X.
                    \n",current_SuperInterseg212->OffsetPatch[i],current_segment
                    ->header.SegNum);
 11555                        ;              current_SuperInterseg212->OffsetRef
                    erence[i] = 0xFFFF;   /* Erreur */
 11556                        	.line	1612
 11557 09:A2E6: A0 00 00     	ldy	#$0
 11558 09:A2E9: A5 19        	lda	<L389+i_1
 11559 09:A2EB: 10 01        	bpl	L399
 11560 09:A2ED: 88           	dey
 11561                        L399:
 11562 09:A2EE: 85 05        	sta	<R1
 11563 09:A2F0: 84 07        	sty	<R1+2
 11564 09:A2F2: D4 07        	pei	<R1+2
 11565 09:A2F4: D4 05        	pei	<R1
 11566 09:A2F6: A9 02 00     	lda	#$2
 11567                        	xref	~~~lasl
 11568 09:A2F9: 22 xx xx xx  	jsl	~~~lasl
 11569 09:A2FD: 85 01        	sta	<R0
 11570 09:A2FF: 86 03        	stx	<R0+2
 11571 09:A301: 18           	clc
 11572 09:A302: A9 0F 04     	lda	#$40f
 11573 09:A305: 65 1D        	adc	<L389+current_SuperInterseg212_1
 11574 09:A307: 85 09        	sta	<R2
 11575 09:A309: A9 00 00     	lda	#$0
 11576 09:A30C: 65 1F        	adc	<L389+current_SuperInterseg212_1+2
  Mon Sep 27 2021  9:39                                                Page 214


 11577 09:A30E: 85 0B        	sta	<R2+2
 11578 09:A310: 18           	clc
 11579 09:A311: A5 09        	lda	<R2
 11580 09:A313: 65 01        	adc	<R0
 11581 09:A315: 85 0D        	sta	<R3
 11582 09:A317: A5 0B        	lda	<R2+2
 11583 09:A319: 65 03        	adc	<R0+2
 11584 09:A31B: 85 0F        	sta	<R3+2
 11585 09:A31D: A9 FF FF     	lda	#$ffff
 11586 09:A320: 87 0D        	sta	[<R3]
 11587 09:A322: A9 00 00     	lda	#$0
 11588 09:A325: A0 02 00     	ldy	#$2
 11589 09:A328: 97 0D        	sta	[<R3],Y
 11590                        ;              current_SuperInterseg212->SegNum[i]
                     = 0xFF;              /* Erreur */
 11591                        	.line	1613
 11592 09:A32A: A0 00 00     	ldy	#$0
 11593 09:A32D: A5 19        	lda	<L389+i_1
 11594 09:A32F: 10 01        	bpl	L400
 11595 09:A331: 88           	dey
 11596                        L400:
 11597 09:A332: 85 05        	sta	<R1
 11598 09:A334: 84 07        	sty	<R1+2
 11599 09:A336: D4 07        	pei	<R1+2
 11600 09:A338: D4 05        	pei	<R1
 11601 09:A33A: A9 01 00     	lda	#$1
 11602                        	xref	~~~lasl
 11603 09:A33D: 22 xx xx xx  	jsl	~~~lasl
 11604 09:A341: 85 01        	sta	<R0
 11605 09:A343: 86 03        	stx	<R0+2
 11606 09:A345: 18           	clc
 11607 09:A346: A9 0F 08     	lda	#$80f
 11608 09:A349: 65 1D        	adc	<L389+current_SuperInterseg212_1
 11609 09:A34B: 85 09        	sta	<R2
 11610 09:A34D: A9 00 00     	lda	#$0
 11611 09:A350: 65 1F        	adc	<L389+current_SuperInterseg212_1+2
 11612 09:A352: 85 0B        	sta	<R2+2
 11613 09:A354: 18           	clc
 11614 09:A355: A5 09        	lda	<R2
 11615 09:A357: 65 01        	adc	<R0
 11616 09:A359: 85 0D        	sta	<R3
 11617 09:A35B: A5 0B        	lda	<R2+2
 11618 09:A35D: 65 03        	adc	<R0+2
 11619 09:A35F: 85 0F        	sta	<R3+2
 11620 09:A361: A9 FF 00     	lda	#$ff
 11621 09:A364: 87 0D        	sta	[<R3]
 11622                        ;            }
 11623                        	.line	1614
 11624                        ;          else
 11625 09:A366: 82 45 01     	brl	L10273
 11626                        L10272:
 11627                        ;            {
 11628                        	.line	1616
 11629                        ;              memcpy(&one_word,&lconst[current_Su
                    perInterseg212->OffsetPatch[i]],sizeof(WORD));
 11630                        	.line	1617
 11631 09:A369: F4 02 00     	pea	#<$2
 11632 09:A36C: A0 00 00     	ldy	#$0
  Mon Sep 27 2021  9:39                                                Page 215


 11633 09:A36F: A5 19        	lda	<L389+i_1
 11634 09:A371: 10 01        	bpl	L401
 11635 09:A373: 88           	dey
 11636                        L401:
 11637 09:A374: 85 05        	sta	<R1
 11638 09:A376: 84 07        	sty	<R1+2
 11639 09:A378: D4 07        	pei	<R1+2
 11640 09:A37A: D4 05        	pei	<R1
 11641 09:A37C: A9 02 00     	lda	#$2
 11642                        	xref	~~~lasl
 11643 09:A37F: 22 xx xx xx  	jsl	~~~lasl
 11644 09:A383: 85 01        	sta	<R0
 11645 09:A385: 86 03        	stx	<R0+2
 11646 09:A387: 18           	clc
 11647 09:A388: A9 0F 00     	lda	#$f
 11648 09:A38B: 65 1D        	adc	<L389+current_SuperInterseg212_1
 11649 09:A38D: 85 09        	sta	<R2
 11650 09:A38F: A9 00 00     	lda	#$0
 11651 09:A392: 65 1F        	adc	<L389+current_SuperInterseg212_1+2
 11652 09:A394: 85 0B        	sta	<R2+2
 11653 09:A396: 18           	clc
 11654 09:A397: A5 09        	lda	<R2
 11655 09:A399: 65 01        	adc	<R0
 11656 09:A39B: 85 0D        	sta	<R3
 11657 09:A39D: A5 0B        	lda	<R2+2
 11658 09:A39F: 65 03        	adc	<R0+2
 11659 09:A3A1: 85 0F        	sta	<R3+2
 11660 09:A3A3: 18           	clc
 11661 09:A3A4: A5 2A        	lda	<L388+lconst_0
 11662 09:A3A6: 67 0D        	adc	[<R3]
 11663 09:A3A8: 85 01        	sta	<R0
 11664 09:A3AA: A5 2C        	lda	<L388+lconst_0+2
 11665 09:A3AC: A0 02 00     	ldy	#$2
 11666 09:A3AF: 77 0D        	adc	[<R3],Y
 11667 09:A3B1: 85 03        	sta	<R0+2
 11668 09:A3B3: D4 03        	pei	<R0+2
 11669 09:A3B5: D4 01        	pei	<R0
 11670 09:A3B7: F4 00 00     	pea	#0
 11671 09:A3BA: 18           	clc
 11672 09:A3BB: 7B           	tdc
 11673 09:A3BC: 69 1B 00     	adc	#<L389+one_word_1
 11674 09:A3BF: 48           	pha
 11675 09:A3C0: 22 xx xx xx  	jsl	~~memcpy
 11676                        ;              current_SuperInterseg212->OffsetRef
                    erence[i] = (DWORD) one_word;
 11677                        	.line	1618
 11678 09:A3C4: A0 00 00     	ldy	#$0
 11679 09:A3C7: A5 19        	lda	<L389+i_1
 11680 09:A3C9: 10 01        	bpl	L402
 11681 09:A3CB: 88           	dey
 11682                        L402:
 11683 09:A3CC: 85 05        	sta	<R1
 11684 09:A3CE: 84 07        	sty	<R1+2
 11685 09:A3D0: D4 07        	pei	<R1+2
 11686 09:A3D2: D4 05        	pei	<R1
 11687 09:A3D4: A9 02 00     	lda	#$2
 11688                        	xref	~~~lasl
 11689 09:A3D7: 22 xx xx xx  	jsl	~~~lasl
  Mon Sep 27 2021  9:39                                                Page 216


 11690 09:A3DB: 85 01        	sta	<R0
 11691 09:A3DD: 86 03        	stx	<R0+2
 11692 09:A3DF: 18           	clc
 11693 09:A3E0: A9 0F 04     	lda	#$40f
 11694 09:A3E3: 65 1D        	adc	<L389+current_SuperInterseg212_1
 11695 09:A3E5: 85 09        	sta	<R2
 11696 09:A3E7: A9 00 00     	lda	#$0
 11697 09:A3EA: 65 1F        	adc	<L389+current_SuperInterseg212_1+2
 11698 09:A3EC: 85 0B        	sta	<R2+2
 11699 09:A3EE: 18           	clc
 11700 09:A3EF: A5 09        	lda	<R2
 11701 09:A3F1: 65 01        	adc	<R0
 11702 09:A3F3: 85 0D        	sta	<R3
 11703 09:A3F5: A5 0B        	lda	<R2+2
 11704 09:A3F7: 65 03        	adc	<R0+2
 11705 09:A3F9: 85 0F        	sta	<R3+2
 11706 09:A3FB: A0 00 00     	ldy	#$0
 11707 09:A3FE: A5 1B        	lda	<L389+one_word_1
 11708 09:A400: 10 01        	bpl	L403
 11709 09:A402: 88           	dey
 11710                        L403:
 11711 09:A403: 85 01        	sta	<R0
 11712 09:A405: 84 03        	sty	<R0+2
 11713 09:A407: A5 01        	lda	<R0
 11714 09:A409: 87 0D        	sta	[<R3]
 11715 09:A40B: A5 03        	lda	<R0+2
 11716 09:A40D: A0 02 00     	ldy	#$2
 11717 09:A410: 97 0D        	sta	[<R3],Y
 11718                        ;              current_SuperInterseg212->SegNum[i]
                     = (WORD) lconst[current_SuperInterseg212->OffsetPatch[i]+2]
                    ;
 11719                        	.line	1619
 11720 09:A412: A0 00 00     	ldy	#$0
 11721 09:A415: A5 19        	lda	<L389+i_1
 11722 09:A417: 10 01        	bpl	L404
 11723 09:A419: 88           	dey
 11724                        L404:
 11725 09:A41A: 85 05        	sta	<R1
 11726 09:A41C: 84 07        	sty	<R1+2
 11727 09:A41E: D4 07        	pei	<R1+2
 11728 09:A420: D4 05        	pei	<R1
 11729 09:A422: A9 01 00     	lda	#$1
 11730                        	xref	~~~lasl
 11731 09:A425: 22 xx xx xx  	jsl	~~~lasl
 11732 09:A429: 85 01        	sta	<R0
 11733 09:A42B: 86 03        	stx	<R0+2
 11734 09:A42D: 18           	clc
 11735 09:A42E: A9 0F 08     	lda	#$80f
 11736 09:A431: 65 1D        	adc	<L389+current_SuperInterseg212_1
 11737 09:A433: 85 09        	sta	<R2
 11738 09:A435: A9 00 00     	lda	#$0
 11739 09:A438: 65 1F        	adc	<L389+current_SuperInterseg212_1+2
 11740 09:A43A: 85 0B        	sta	<R2+2
 11741 09:A43C: 18           	clc
 11742 09:A43D: A5 09        	lda	<R2
 11743 09:A43F: 65 01        	adc	<R0
 11744 09:A441: 85 0D        	sta	<R3
 11745 09:A443: A5 0B        	lda	<R2+2
  Mon Sep 27 2021  9:39                                                Page 217


 11746 09:A445: 65 03        	adc	<R0+2
 11747 09:A447: 85 0F        	sta	<R3+2
 11748 09:A449: A0 00 00     	ldy	#$0
 11749 09:A44C: A5 19        	lda	<L389+i_1
 11750 09:A44E: 10 01        	bpl	L405
 11751 09:A450: 88           	dey
 11752                        L405:
 11753 09:A451: 85 09        	sta	<R2
 11754 09:A453: 84 0B        	sty	<R2+2
 11755 09:A455: D4 0B        	pei	<R2+2
 11756 09:A457: D4 09        	pei	<R2
 11757 09:A459: A9 02 00     	lda	#$2
 11758                        	xref	~~~lasl
 11759 09:A45C: 22 xx xx xx  	jsl	~~~lasl
 11760 09:A460: 85 01        	sta	<R0
 11761 09:A462: 86 03        	stx	<R0+2
 11762 09:A464: 18           	clc
 11763 09:A465: A9 0F 00     	lda	#$f
 11764 09:A468: 65 1D        	adc	<L389+current_SuperInterseg212_1
 11765 09:A46A: 85 11        	sta	<17
 11766 09:A46C: A9 00 00     	lda	#$0
 11767 09:A46F: 65 1F        	adc	<L389+current_SuperInterseg212_1+2
 11768 09:A471: 85 13        	sta	<17+2
 11769 09:A473: 18           	clc
 11770 09:A474: A5 11        	lda	<17
 11771 09:A476: 65 01        	adc	<R0
 11772 09:A478: 85 15        	sta	<21
 11773 09:A47A: A5 13        	lda	<17+2
 11774 09:A47C: 65 03        	adc	<R0+2
 11775 09:A47E: 85 17        	sta	<21+2
 11776 09:A480: A7 15        	lda	[<21]
 11777 09:A482: 85 01        	sta	<R0
 11778 09:A484: A0 02 00     	ldy	#$2
 11779 09:A487: B7 15        	lda	[<21],Y
 11780 09:A489: 85 03        	sta	<R0+2
 11781 09:A48B: 18           	clc
 11782 09:A48C: A9 02 00     	lda	#$2
 11783 09:A48F: 65 2A        	adc	<L388+lconst_0
 11784 09:A491: 85 11        	sta	<17
 11785 09:A493: A9 00 00     	lda	#$0
 11786 09:A496: 65 2C        	adc	<L388+lconst_0+2
 11787 09:A498: 85 13        	sta	<17+2
 11788 09:A49A: 18           	clc
 11789 09:A49B: A5 11        	lda	<17
 11790 09:A49D: 65 01        	adc	<R0
 11791 09:A49F: 85 15        	sta	<21
 11792 09:A4A1: A5 13        	lda	<17+2
 11793 09:A4A3: 65 03        	adc	<R0+2
 11794 09:A4A5: 85 17        	sta	<21+2
 11795 09:A4A7: A7 15        	lda	[<21]
 11796 09:A4A9: 29 FF 00     	and	#$ff
 11797 09:A4AC: 87 0D        	sta	[<R3]
 11798                        ;            }
 11799                        	.line	1620
 11800                        L10273:
 11801                        ;
 11802                        ;          /* Conserve ce INTERSEG */
 11803                        ;          AddInterseg(current_SuperInterseg212->B
  Mon Sep 27 2021  9:39                                                Page 218


                    yteCnt,current_SuperInterseg212->BitShiftCnt,current_SuperIn
                    terseg212->OffsetPatch[i],current_SuperInterseg212->OffsetRe
                    ference[i],current_SuperInterseg212->FileNum,current_SuperIn
                    terseg212->SegNum[i],RECORD_SUPER_INTERSEG212);
 11804                        	.line	1623
 11805 09:A4AE: F4 08 00     	pea	#<$8
 11806 09:A4B1: A0 00 00     	ldy	#$0
 11807 09:A4B4: A5 19        	lda	<L389+i_1
 11808 09:A4B6: 10 01        	bpl	L406
 11809 09:A4B8: 88           	dey
 11810                        L406:
 11811 09:A4B9: 85 05        	sta	<R1
 11812 09:A4BB: 84 07        	sty	<R1+2
 11813 09:A4BD: D4 07        	pei	<R1+2
 11814 09:A4BF: D4 05        	pei	<R1
 11815 09:A4C1: A9 01 00     	lda	#$1
 11816                        	xref	~~~lasl
 11817 09:A4C4: 22 xx xx xx  	jsl	~~~lasl
 11818 09:A4C8: 85 01        	sta	<R0
 11819 09:A4CA: 86 03        	stx	<R0+2
 11820 09:A4CC: 18           	clc
 11821 09:A4CD: A9 0F 08     	lda	#$80f
 11822 09:A4D0: 65 1D        	adc	<L389+current_SuperInterseg212_1
 11823 09:A4D2: 85 09        	sta	<R2
 11824 09:A4D4: A9 00 00     	lda	#$0
 11825 09:A4D7: 65 1F        	adc	<L389+current_SuperInterseg212_1+2
 11826 09:A4D9: 85 0B        	sta	<R2+2
 11827 09:A4DB: 18           	clc
 11828 09:A4DC: A5 09        	lda	<R2
 11829 09:A4DE: 65 01        	adc	<R0
 11830 09:A4E0: 85 0D        	sta	<R3
 11831 09:A4E2: A5 0B        	lda	<R2+2
 11832 09:A4E4: 65 03        	adc	<R0+2
 11833 09:A4E6: 85 0F        	sta	<R3+2
 11834 09:A4E8: A7 0D        	lda	[<R3]
 11835 09:A4EA: 48           	pha
 11836 09:A4EB: A0 0B 00     	ldy	#$b
 11837 09:A4EE: B7 1D        	lda	[<L389+current_SuperInterseg212_1],Y
 11838 09:A4F0: 48           	pha
 11839 09:A4F1: A0 00 00     	ldy	#$0
 11840 09:A4F4: A5 19        	lda	<L389+i_1
 11841 09:A4F6: 10 01        	bpl	L407
 11842 09:A4F8: 88           	dey
 11843                        L407:
 11844 09:A4F9: 85 09        	sta	<R2
 11845 09:A4FB: 84 0B        	sty	<R2+2
 11846 09:A4FD: D4 0B        	pei	<R2+2
 11847 09:A4FF: D4 09        	pei	<R2
 11848 09:A501: A9 02 00     	lda	#$2
 11849                        	xref	~~~lasl
 11850 09:A504: 22 xx xx xx  	jsl	~~~lasl
 11851 09:A508: 85 01        	sta	<R0
 11852 09:A50A: 86 03        	stx	<R0+2
 11853 09:A50C: 18           	clc
 11854 09:A50D: A9 0F 04     	lda	#$40f
 11855 09:A510: 65 1D        	adc	<L389+current_SuperInterseg212_1
 11856 09:A512: 85 0D        	sta	<R3
 11857 09:A514: A9 00 00     	lda	#$0
  Mon Sep 27 2021  9:39                                                Page 219


 11858 09:A517: 65 1F        	adc	<L389+current_SuperInterseg212_1+2
 11859 09:A519: 85 0F        	sta	<R3+2
 11860 09:A51B: 18           	clc
 11861 09:A51C: A5 0D        	lda	<R3
 11862 09:A51E: 65 01        	adc	<R0
 11863 09:A520: 85 11        	sta	<17
 11864 09:A522: A5 0F        	lda	<R3+2
 11865 09:A524: 65 03        	adc	<R0+2
 11866 09:A526: 85 13        	sta	<17+2
 11867 09:A528: A0 02 00     	ldy	#$2
 11868 09:A52B: B7 11        	lda	[<17],Y
 11869 09:A52D: 48           	pha
 11870 09:A52E: A7 11        	lda	[<17]
 11871 09:A530: 48           	pha
 11872 09:A531: A0 00 00     	ldy	#$0
 11873 09:A534: A5 19        	lda	<L389+i_1
 11874 09:A536: 10 01        	bpl	L408
 11875 09:A538: 88           	dey
 11876                        L408:
 11877 09:A539: 85 0D        	sta	<R3
 11878 09:A53B: 84 0F        	sty	<R3+2
 11879 09:A53D: D4 0F        	pei	<R3+2
 11880 09:A53F: D4 0D        	pei	<R3
 11881 09:A541: A9 02 00     	lda	#$2
 11882                        	xref	~~~lasl
 11883 09:A544: 22 xx xx xx  	jsl	~~~lasl
 11884 09:A548: 85 01        	sta	<R0
 11885 09:A54A: 86 03        	stx	<R0+2
 11886 09:A54C: 18           	clc
 11887 09:A54D: A9 0F 00     	lda	#$f
 11888 09:A550: 65 1D        	adc	<L389+current_SuperInterseg212_1
 11889 09:A552: 85 11        	sta	<17
 11890 09:A554: A9 00 00     	lda	#$0
 11891 09:A557: 65 1F        	adc	<L389+current_SuperInterseg212_1+2
 11892 09:A559: 85 13        	sta	<17+2
 11893 09:A55B: 18           	clc
 11894 09:A55C: A5 11        	lda	<17
 11895 09:A55E: 65 01        	adc	<R0
 11896 09:A560: 85 15        	sta	<21
 11897 09:A562: A5 13        	lda	<17+2
 11898 09:A564: 65 03        	adc	<R0+2
 11899 09:A566: 85 17        	sta	<21+2
 11900 09:A568: A0 02 00     	ldy	#$2
 11901 09:A56B: B7 15        	lda	[<21],Y
 11902 09:A56D: 48           	pha
 11903 09:A56E: A7 15        	lda	[<21]
 11904 09:A570: 48           	pha
 11905 09:A571: A0 0A 00     	ldy	#$a
 11906 09:A574: B7 1D        	lda	[<L389+current_SuperInterseg212_1],Y
 11907 09:A576: 48           	pha
 11908 09:A577: A0 09 00     	ldy	#$9
 11909 09:A57A: B7 1D        	lda	[<L389+current_SuperInterseg212_1],Y
 11910 09:A57C: 48           	pha
 11911 09:A57D: 22 A9 AC 09  	jsl	~~AddInterseg
 11912                        ;        }
 11913                        	.line	1624
 11914                        L10268:
 11915 09:A581: E6 19        	inc	<L389+i_1
  Mon Sep 27 2021  9:39                                                Page 220


 11916                        L10271:
 11917 09:A583: 38           	sec
 11918 09:A584: A5 19        	lda	<L389+i_1
 11919 09:A586: A0 0D 00     	ldy	#$d
 11920 09:A589: F7 1D        	sbc	[<L389+current_SuperInterseg212_1],Y
 11921 09:A58B: 70 03        	bvs	L409
 11922 09:A58D: 49 00 80     	eor	#$8000
 11923                        L409:
 11924 09:A590: 30 03        	bmi	L410
 11925 09:A592: 82 8D FC     	brl	L10270
 11926                        L410:
 11927                        L10269:
 11928                        ;
 11929                        ;      /* Page suivante */
 11930                        ;      *page_rtn = *page_rtn + 1;
 11931                        	.line	1627
 11932 09:A595: E2 20        	sep	#$20
 11933                        	longa	off
 11934 09:A597: A7 30        	lda	[<L388+page_rtn_0]
 11935 09:A599: 1A           	ina
 11936 09:A59A: C2 20        	rep	#$20
 11937                        	longa	on
 11938 09:A59C: E2 20        	sep	#$20
 11939                        	longa	off
 11940 09:A59E: 87 30        	sta	[<L388+page_rtn_0]
 11941 09:A5A0: C2 20        	rep	#$20
 11942                        	longa	on
 11943                        ;
 11944                        ;      /* Longueur du SubRecord */
 11945                        ;      *length_rtn = 1 + current_SuperInterseg212-
                    >nb_address*sizeof(BYTE);
 11946                        	.line	1630
 11947 09:A5A2: A0 0D 00     	ldy	#$d
 11948 09:A5A5: B7 1D        	lda	[<L389+current_SuperInterseg212_1],Y
 11949 09:A5A7: 1A           	ina
 11950 09:A5A8: 87 34        	sta	[<L388+length_rtn_0]
 11951                        ;    }
 11952                        	.line	1631
 11953                        L10267:
 11954                        ;
 11955                        ;  /* Renvoie la structure */
 11956                        ;  return(current_SuperInterseg212);
 11957                        	.line	1634
 11958 09:A5AA: A6 1F        	ldx	<L389+current_SuperInterseg212_1+2
 11959 09:A5AC: A5 1D        	lda	<L389+current_SuperInterseg212_1
 11960 09:A5AE: 82 E5 FB     	brl	L392
 11961                        ;}
 11962                        	.line	1635
 11963                        	.endblock	1635
 11964             00000020   L388	equ	32
 11965             00000019   L389	equ	25
 11966 09:A5B1:              	ends
 11967                        	efunc
 11968                        	.endfunc	1635,25,32
 11969                        	.line	1635
 11970                        ;
 11971                        ;
 11972                        ;/************************************************
  Mon Sep 27 2021  9:39                                                Page 221


                    ****************************/
 11973                        ;/*  DecodeSuperInterseg1324() :  Décodage d'un Su
                    bRecord SuperInterseg1324. */
 11974                        ;/************************************************
                    ****************************/
 11975                        ;static struct subrecord_SuperInterseg1324 *Decode
                    SuperInterseg1324(unsigned char *data, BYTE SegNum, unsigned
                     char *lconst, int lconst_length, BYTE *page_rtn, int *lengt
                    h_rtn, struct omf_segment *current_segment)
 11976                        ;{
 11977                        	.line	1641
 11978                        	.line	1642
 11979                        	LOADER
 11980                        	func
 11981                        	.function	1642
 11982                        ~~DecodeSuperInterseg1324:
 11983                        	longa	on
 11984                        	longi	on
 11985 09:A5B1: 3B           	tsc
 11986 09:A5B2: 38           	sec
 11987 09:A5B3: E9 20 00     	sbc	#L411
 11988 09:A5B6: 1B           	tcs
 11989 09:A5B7: 0B           	phd
 11990 09:A5B8: 5B           	tcd
 11991             00000004   data_0	set	4
 11992             00000008   SegNum_0	set	8
 11993             0000000A   lconst_0	set	10
 11994             0000000E   lconst_length_0	set	14
 11995             00000010   page_rtn_0	set	16
 11996             00000014   length_rtn_0	set	20
 11997             00000018   current_segment_0	set	24
 11998                        	.block	1642
 11999                        ;  int i;
 12000                        ;  WORD one_word;
 12001                        ;  struct subrecord_SuperInterseg1324 *current_Sup
                    erInterseg1324;
 12002                        ;
 12003                        ;  /* Allocation mémoire */
 12004                        ;  current_SuperInterseg1324 = (struct subrecord_S
                    uperInterseg1324 *) k_calloc(1,sizeof(struct subrecord_Super
                    Interseg1324));
 12005             00000000   i_1	set	0
 12006             00000002   one_word_1	set	2
 12007             00000004   current_SuperInterseg1324_1	set	4
 12008                        	.sym	i,0,5,1,16
 12009                        	.sym	one_word,2,5,1,16
 12010                        	.sym	current_SuperInterseg1324,4,138,1,32,54
 12011                        	.sym	data,4,142,6,32
 12012                        	.sym	SegNum,8,14,6,8
 12013                        	.sym	lconst,10,142,6,32
 12014                        	.sym	lconst_length,14,5,6,16
 12015                        	.sym	page_rtn,16,142,6,32
 12016                        	.sym	length_rtn,20,133,6,32
 12017                        	.sym	current_segment,24,138,6,32,126
 12018                        	.line	1648
 12019 09:A5B9: F4 14 08     	pea	#<$814
 12020 09:A5BC: F4 01 00     	pea	#<$1
 12021 09:A5BF: 22 xx xx xx  	jsl	~~k_calloc
  Mon Sep 27 2021  9:39                                                Page 222


 12022 09:A5C3: 85 1D        	sta	<L412+current_SuperInterseg1324_1
 12023 09:A5C5: 86 1F        	stx	<L412+current_SuperInterseg1324_1+2
 12024                        ;  if(current_SuperInterseg1324 == NULL)
 12025                        	.line	1649
 12026                        ;    {
 12027 09:A5C7: A5 1D        	lda	<L412+current_SuperInterseg1324_1
 12028 09:A5C9: 05 1F        	ora	<L412+current_SuperInterseg1324_1+2
 12029 09:A5CB: F0 03        	beq	L414
 12030 09:A5CD: 82 19 00     	brl	L10274
 12031                        L414:
 12032                        	.line	1650
 12033                        ;      //printf("Error : Impossible to allocate me
                    mory for SubRecord SuperInterseg1324.\n");
 12034                        ;      return(NULL);
 12035                        	.line	1652
 12036 09:A5D0: A9 00 00     	lda	#$0
 12037 09:A5D3: AA           	tax
 12038 09:A5D4: A9 00 00     	lda	#$0
 12039                        L415:
 12040 09:A5D7: A8           	tay
 12041 09:A5D8: A5 22        	lda	<L411+2
 12042 09:A5DA: 85 3A        	sta	<L411+2+24
 12043 09:A5DC: A5 21        	lda	<L411+1
 12044 09:A5DE: 85 39        	sta	<L411+1+24
 12045 09:A5E0: 2B           	pld
 12046 09:A5E1: 3B           	tsc
 12047 09:A5E2: 18           	clc
 12048 09:A5E3: 69 38 00     	adc	#L411+24
 12049 09:A5E6: 1B           	tcs
 12050 09:A5E7: 98           	tya
 12051 09:A5E8: 6B           	rtl
 12052                        ;    }
 12053                        	.line	1653
 12054                        ;
 12055                        ;  /* Nombre d'adresse-1 ou Saut de Page */
 12056                        ;  current_SuperInterseg1324->Count = data[0];
 12057                        L10274:
 12058                        	.line	1656
 12059 09:A5E9: E2 20        	sep	#$20
 12060                        	longa	off
 12061 09:A5EB: A7 24        	lda	[<L411+data_0]
 12062 09:A5ED: A0 08 00     	ldy	#$8
 12063 09:A5F0: 97 1D        	sta	[<L412+current_SuperInterseg1324_1],Y
 12064 09:A5F2: C2 20        	rep	#$20
 12065                        	longa	on
 12066                        ;
 12067                        ;  /** Saut de Page **/
 12068                        ;  if((current_SuperInterseg1324->Count & 0x80) ==
                     0x80)
 12069                        	.line	1659
 12070                        ;    {
 12071 09:A5F4: A0 08 00     	ldy	#$8
 12072 09:A5F7: B7 1D        	lda	[<L412+current_SuperInterseg1324_1],Y
 12073 09:A5F9: 29 80 00     	and	#<$80
 12074 09:A5FC: 85 01        	sta	<R0
 12075 09:A5FE: A5 01        	lda	<R0
 12076 09:A600: C9 80 00     	cmp	#<$80
 12077 09:A603: F0 03        	beq	L416
  Mon Sep 27 2021  9:39                                                Page 223


 12078 09:A605: 82 24 00     	brl	L10275
 12079                        L416:
 12080                        	.line	1660
 12081                        ;      /* On saute X pages */
 12082                        ;      *page_rtn = *page_rtn + (current_SuperInter
                    seg1324->Count & 0x7F);
 12083                        	.line	1662
 12084 09:A608: E2 20        	sep	#$20
 12085                        	longa	off
 12086 09:A60A: A0 08 00     	ldy	#$8
 12087 09:A60D: B7 1D        	lda	[<L412+current_SuperInterseg1324_1],Y
 12088 09:A60F: 29 7F        	and	#<$7f
 12089 09:A611: 85 01        	sta	<R0
 12090 09:A613: C2 20        	rep	#$20
 12091                        	longa	on
 12092 09:A615: E2 20        	sep	#$20
 12093                        	longa	off
 12094 09:A617: 18           	clc
 12095 09:A618: A7 30        	lda	[<L411+page_rtn_0]
 12096 09:A61A: 65 01        	adc	<R0
 12097 09:A61C: C2 20        	rep	#$20
 12098                        	longa	on
 12099 09:A61E: E2 20        	sep	#$20
 12100                        	longa	off
 12101 09:A620: 87 30        	sta	[<L411+page_rtn_0]
 12102 09:A622: C2 20        	rep	#$20
 12103                        	longa	on
 12104                        ;
 12105                        ;      /* Longueur du SubRecord */
 12106                        ;      *length_rtn = 1;
 12107                        	.line	1665
 12108 09:A624: A9 01 00     	lda	#$1
 12109 09:A627: 87 34        	sta	[<L411+length_rtn_0]
 12110                        ;    }
 12111                        	.line	1666
 12112                        ;  else
 12113 09:A629: 82 BF 02     	brl	L10276
 12114                        L10275:
 12115                        ;    {
 12116                        	.line	1668
 12117                        ;      /* Number of Bytes to be relocated = Toujou
                    rs à 2 */
 12118                        ;      current_SuperInterseg1324->ByteCnt = 0x02;
 12119                        	.line	1670
 12120 09:A62C: E2 20        	sep	#$20
 12121                        	longa	off
 12122 09:A62E: A9 02        	lda	#$2
 12123 09:A630: A0 09 00     	ldy	#$9
 12124 09:A633: 97 1D        	sta	[<L412+current_SuperInterseg1324_1],Y
 12125 09:A635: C2 20        	rep	#$20
 12126                        	longa	on
 12127                        ;
 12128                        ;      /* Opérations >> ou << = Toujours à 0  */
 12129                        ;      current_SuperInterseg1324->BitShiftCnt = 0x
                    00;
 12130                        	.line	1673
 12131 09:A637: E2 20        	sep	#$20
 12132                        	longa	off
  Mon Sep 27 2021  9:39                                                Page 224


 12133 09:A639: A9 00        	lda	#$0
 12134 09:A63B: A0 0A 00     	ldy	#$a
 12135 09:A63E: 97 1D        	sta	[<L412+current_SuperInterseg1324_1],Y
 12136 09:A640: C2 20        	rep	#$20
 12137                        	longa	on
 12138                        ;
 12139                        ;      /* Segment Number */
 12140                        ;      current_SuperInterseg1324->SegNum = SegNum;
 12141                        	.line	1676
 12142 09:A642: E2 20        	sep	#$20
 12143                        	longa	off
 12144 09:A644: A5 28        	lda	<L411+SegNum_0
 12145 09:A646: A0 0B 00     	ldy	#$b
 12146 09:A649: 97 1D        	sta	[<L412+current_SuperInterseg1324_1],Y
 12147 09:A64B: C2 20        	rep	#$20
 12148                        	longa	on
 12149                        ;
 12150                        ;      /* File Number toujours à 1 */
 12151                        ;      current_SuperInterseg1324->FileNum = 1;
 12152                        	.line	1679
 12153 09:A64D: A9 01 00     	lda	#$1
 12154 09:A650: A0 0C 00     	ldy	#$c
 12155 09:A653: 97 1D        	sta	[<L412+current_SuperInterseg1324_1],Y
 12156                        ;
 12157                        ;      /* Nombre d'adresse */
 12158                        ;      current_SuperInterseg1324->nb_address = cur
                    rent_SuperInterseg1324->Count + 1;
 12159                        	.line	1682
 12160 09:A655: A0 08 00     	ldy	#$8
 12161 09:A658: B7 1D        	lda	[<L412+current_SuperInterseg1324_1],Y
 12162 09:A65A: 29 FF 00     	and	#$ff
 12163 09:A65D: 85 01        	sta	<R0
 12164 09:A65F: A5 01        	lda	<R0
 12165 09:A661: 1A           	ina
 12166 09:A662: A0 0E 00     	ldy	#$e
 12167 09:A665: 97 1D        	sta	[<L412+current_SuperInterseg1324_1],Y
 12168                        ;
 12169                        ;      /** Copie les adresses **/
 12170                        ;      for(i=0; i<current_SuperInterseg1324->nb_ad
                    dress; i++)
 12171                        	.line	1685
 12172 09:A667: 64 19        	stz	<L412+i_1
 12173 09:A669: 82 58 02     	brl	L10280
 12174                        L10279:
 12175                        ;        {
 12176                        	.line	1686
 12177                        ;          /* Décode OffsetPath et OffsetReference
                     */
 12178                        ;          current_SuperInterseg1324->OffsetPatch[
                    i] = ((WORD)*page_rtn) << 8 | data[1+i];
 12179                        	.line	1688
 12180 09:A66C: A0 00 00     	ldy	#$0
 12181 09:A66F: A5 19        	lda	<L412+i_1
 12182 09:A671: 10 01        	bpl	L417
 12183 09:A673: 88           	dey
 12184                        L417:
 12185 09:A674: 85 05        	sta	<R1
 12186 09:A676: 84 07        	sty	<R1+2
  Mon Sep 27 2021  9:39                                                Page 225


 12187 09:A678: D4 07        	pei	<R1+2
 12188 09:A67A: D4 05        	pei	<R1
 12189 09:A67C: A9 02 00     	lda	#$2
 12190                        	xref	~~~lasl
 12191 09:A67F: 22 xx xx xx  	jsl	~~~lasl
 12192 09:A683: 85 01        	sta	<R0
 12193 09:A685: 86 03        	stx	<R0+2
 12194 09:A687: 18           	clc
 12195 09:A688: A9 10 00     	lda	#$10
 12196 09:A68B: 65 1D        	adc	<L412+current_SuperInterseg1324_1
 12197 09:A68D: 85 09        	sta	<R2
 12198 09:A68F: A9 00 00     	lda	#$0
 12199 09:A692: 65 1F        	adc	<L412+current_SuperInterseg1324_1+2
 12200 09:A694: 85 0B        	sta	<R2+2
 12201 09:A696: 18           	clc
 12202 09:A697: A5 09        	lda	<R2
 12203 09:A699: 65 01        	adc	<R0
 12204 09:A69B: 85 0D        	sta	<R3
 12205 09:A69D: A5 0B        	lda	<R2+2
 12206 09:A69F: 65 03        	adc	<R0+2
 12207 09:A6A1: 85 0F        	sta	<R3+2
 12208 09:A6A3: A5 19        	lda	<L412+i_1
 12209 09:A6A5: 1A           	ina
 12210 09:A6A6: 85 01        	sta	<R0
 12211 09:A6A8: A4 01        	ldy	<R0
 12212 09:A6AA: B7 24        	lda	[<L411+data_0],Y
 12213 09:A6AC: 29 FF 00     	and	#$ff
 12214 09:A6AF: 85 09        	sta	<R2
 12215 09:A6B1: A7 30        	lda	[<L411+page_rtn_0]
 12216 09:A6B3: 29 FF 00     	and	#$ff
 12217 09:A6B6: 85 15        	sta	<21
 12218 09:A6B8: A5 15        	lda	<21
 12219 09:A6BA: EB           	xba
 12220 09:A6BB: 29 00 FF     	and	#$ff00
 12221 09:A6BE: 85 11        	sta	<17
 12222 09:A6C0: A5 11        	lda	<17
 12223 09:A6C2: 05 09        	ora	<R2
 12224 09:A6C4: 85 15        	sta	<21
 12225 09:A6C6: A0 00 00     	ldy	#$0
 12226 09:A6C9: A5 15        	lda	<21
 12227 09:A6CB: 10 01        	bpl	L418
 12228 09:A6CD: 88           	dey
 12229                        L418:
 12230 09:A6CE: 85 09        	sta	<R2
 12231 09:A6D0: 84 0B        	sty	<R2+2
 12232 09:A6D2: A5 09        	lda	<R2
 12233 09:A6D4: 87 0D        	sta	[<R3]
 12234 09:A6D6: A5 0B        	lda	<R2+2
 12235 09:A6D8: A0 02 00     	ldy	#$2
 12236 09:A6DB: 97 0D        	sta	[<R3],Y
 12237                        ;          
 12238                        ;          /* On vérifie qu'on reste dans les limi
                    te du LCONST */
 12239                        ;          if(current_SuperInterseg1324->OffsetPat
                    ch[i] > (DWORD) lconst_length)
 12240                        	.line	1691
 12241                        ;            {
 12242 09:A6DD: A0 00 00     	ldy	#$0
  Mon Sep 27 2021  9:39                                                Page 226


 12243 09:A6E0: A5 2E        	lda	<L411+lconst_length_0
 12244 09:A6E2: 10 01        	bpl	L419
 12245 09:A6E4: 88           	dey
 12246                        L419:
 12247 09:A6E5: 85 01        	sta	<R0
 12248 09:A6E7: 84 03        	sty	<R0+2
 12249 09:A6E9: A0 00 00     	ldy	#$0
 12250 09:A6EC: A5 19        	lda	<L412+i_1
 12251 09:A6EE: 10 01        	bpl	L420
 12252 09:A6F0: 88           	dey
 12253                        L420:
 12254 09:A6F1: 85 09        	sta	<R2
 12255 09:A6F3: 84 0B        	sty	<R2+2
 12256 09:A6F5: D4 0B        	pei	<R2+2
 12257 09:A6F7: D4 09        	pei	<R2
 12258 09:A6F9: A9 02 00     	lda	#$2
 12259                        	xref	~~~lasl
 12260 09:A6FC: 22 xx xx xx  	jsl	~~~lasl
 12261 09:A700: 85 05        	sta	<R1
 12262 09:A702: 86 07        	stx	<R1+2
 12263 09:A704: 18           	clc
 12264 09:A705: A9 10 00     	lda	#$10
 12265 09:A708: 65 1D        	adc	<L412+current_SuperInterseg1324_1
 12266 09:A70A: 85 0D        	sta	<R3
 12267 09:A70C: A9 00 00     	lda	#$0
 12268 09:A70F: 65 1F        	adc	<L412+current_SuperInterseg1324_1+2
 12269 09:A711: 85 0F        	sta	<R3+2
 12270 09:A713: 18           	clc
 12271 09:A714: A5 0D        	lda	<R3
 12272 09:A716: 65 05        	adc	<R1
 12273 09:A718: 85 11        	sta	<17
 12274 09:A71A: A5 0F        	lda	<R3+2
 12275 09:A71C: 65 07        	adc	<R1+2
 12276 09:A71E: 85 13        	sta	<17+2
 12277 09:A720: A5 01        	lda	<R0
 12278 09:A722: C7 11        	cmp	[<17]
 12279 09:A724: A5 03        	lda	<R0+2
 12280 09:A726: A0 02 00     	ldy	#$2
 12281 09:A729: F7 11        	sbc	[<17],Y
 12282 09:A72B: 90 03        	bcc	L421
 12283 09:A72D: 82 47 00     	brl	L10281
 12284                        L421:
 12285                        	.line	1692
 12286                        ;              current_SuperInterseg1324->OffsetRe
                    ference[i] = 0xFFFF;     /* Erreur */
 12287                        	.line	1693
 12288 09:A730: A0 00 00     	ldy	#$0
 12289 09:A733: A5 19        	lda	<L412+i_1
 12290 09:A735: 10 01        	bpl	L422
 12291 09:A737: 88           	dey
 12292                        L422:
 12293 09:A738: 85 05        	sta	<R1
 12294 09:A73A: 84 07        	sty	<R1+2
 12295 09:A73C: D4 07        	pei	<R1+2
 12296 09:A73E: D4 05        	pei	<R1
 12297 09:A740: A9 02 00     	lda	#$2
 12298                        	xref	~~~lasl
 12299 09:A743: 22 xx xx xx  	jsl	~~~lasl
  Mon Sep 27 2021  9:39                                                Page 227


 12300 09:A747: 85 01        	sta	<R0
 12301 09:A749: 86 03        	stx	<R0+2
 12302 09:A74B: 18           	clc
 12303 09:A74C: A9 10 04     	lda	#$410
 12304 09:A74F: 65 1D        	adc	<L412+current_SuperInterseg1324_1
 12305 09:A751: 85 09        	sta	<R2
 12306 09:A753: A9 00 00     	lda	#$0
 12307 09:A756: 65 1F        	adc	<L412+current_SuperInterseg1324_1+2
 12308 09:A758: 85 0B        	sta	<R2+2
 12309 09:A75A: 18           	clc
 12310 09:A75B: A5 09        	lda	<R2
 12311 09:A75D: 65 01        	adc	<R0
 12312 09:A75F: 85 0D        	sta	<R3
 12313 09:A761: A5 0B        	lda	<R2+2
 12314 09:A763: 65 03        	adc	<R0+2
 12315 09:A765: 85 0F        	sta	<R3+2
 12316 09:A767: A9 FF FF     	lda	#$ffff
 12317 09:A76A: 87 0D        	sta	[<R3]
 12318 09:A76C: A9 00 00     	lda	#$0
 12319 09:A76F: A0 02 00     	ldy	#$2
 12320 09:A772: 97 0D        	sta	[<R3],Y
 12321                        ;              //printf("  Error : Bad Reference A
                    ddress in SuperInterseg1324 for Offset %04X in Segment #%02X
                    .\n",current_SuperInterseg1324->OffsetPatch[i],current_segme
                    nt->header.SegNum);
 12322                        ;            }
 12323                        	.line	1695
 12324                        ;          else
 12325 09:A774: 82 A9 00     	brl	L10282
 12326                        L10281:
 12327                        ;            {
 12328                        	.line	1697
 12329                        ;              memcpy(&one_word,&lconst[current_Su
                    perInterseg1324->OffsetPatch[i]],sizeof(WORD));
 12330                        	.line	1698
 12331 09:A777: F4 02 00     	pea	#<$2
 12332 09:A77A: A0 00 00     	ldy	#$0
 12333 09:A77D: A5 19        	lda	<L412+i_1
 12334 09:A77F: 10 01        	bpl	L423
 12335 09:A781: 88           	dey
 12336                        L423:
 12337 09:A782: 85 05        	sta	<R1
 12338 09:A784: 84 07        	sty	<R1+2
 12339 09:A786: D4 07        	pei	<R1+2
 12340 09:A788: D4 05        	pei	<R1
 12341 09:A78A: A9 02 00     	lda	#$2
 12342                        	xref	~~~lasl
 12343 09:A78D: 22 xx xx xx  	jsl	~~~lasl
 12344 09:A791: 85 01        	sta	<R0
 12345 09:A793: 86 03        	stx	<R0+2
 12346 09:A795: 18           	clc
 12347 09:A796: A9 10 00     	lda	#$10
 12348 09:A799: 65 1D        	adc	<L412+current_SuperInterseg1324_1
 12349 09:A79B: 85 09        	sta	<R2
 12350 09:A79D: A9 00 00     	lda	#$0
 12351 09:A7A0: 65 1F        	adc	<L412+current_SuperInterseg1324_1+2
 12352 09:A7A2: 85 0B        	sta	<R2+2
 12353 09:A7A4: 18           	clc
  Mon Sep 27 2021  9:39                                                Page 228


 12354 09:A7A5: A5 09        	lda	<R2
 12355 09:A7A7: 65 01        	adc	<R0
 12356 09:A7A9: 85 0D        	sta	<R3
 12357 09:A7AB: A5 0B        	lda	<R2+2
 12358 09:A7AD: 65 03        	adc	<R0+2
 12359 09:A7AF: 85 0F        	sta	<R3+2
 12360 09:A7B1: 18           	clc
 12361 09:A7B2: A5 2A        	lda	<L411+lconst_0
 12362 09:A7B4: 67 0D        	adc	[<R3]
 12363 09:A7B6: 85 01        	sta	<R0
 12364 09:A7B8: A5 2C        	lda	<L411+lconst_0+2
 12365 09:A7BA: A0 02 00     	ldy	#$2
 12366 09:A7BD: 77 0D        	adc	[<R3],Y
 12367 09:A7BF: 85 03        	sta	<R0+2
 12368 09:A7C1: D4 03        	pei	<R0+2
 12369 09:A7C3: D4 01        	pei	<R0
 12370 09:A7C5: F4 00 00     	pea	#0
 12371 09:A7C8: 18           	clc
 12372 09:A7C9: 7B           	tdc
 12373 09:A7CA: 69 1B 00     	adc	#<L412+one_word_1
 12374 09:A7CD: 48           	pha
 12375 09:A7CE: 22 xx xx xx  	jsl	~~memcpy
 12376                        ;              current_SuperInterseg1324->OffsetRe
                    ference[i] = (DWORD) one_word;
 12377                        	.line	1699
 12378 09:A7D2: A0 00 00     	ldy	#$0
 12379 09:A7D5: A5 19        	lda	<L412+i_1
 12380 09:A7D7: 10 01        	bpl	L424
 12381 09:A7D9: 88           	dey
 12382                        L424:
 12383 09:A7DA: 85 05        	sta	<R1
 12384 09:A7DC: 84 07        	sty	<R1+2
 12385 09:A7DE: D4 07        	pei	<R1+2
 12386 09:A7E0: D4 05        	pei	<R1
 12387 09:A7E2: A9 02 00     	lda	#$2
 12388                        	xref	~~~lasl
 12389 09:A7E5: 22 xx xx xx  	jsl	~~~lasl
 12390 09:A7E9: 85 01        	sta	<R0
 12391 09:A7EB: 86 03        	stx	<R0+2
 12392 09:A7ED: 18           	clc
 12393 09:A7EE: A9 10 04     	lda	#$410
 12394 09:A7F1: 65 1D        	adc	<L412+current_SuperInterseg1324_1
 12395 09:A7F3: 85 09        	sta	<R2
 12396 09:A7F5: A9 00 00     	lda	#$0
 12397 09:A7F8: 65 1F        	adc	<L412+current_SuperInterseg1324_1+2
 12398 09:A7FA: 85 0B        	sta	<R2+2
 12399 09:A7FC: 18           	clc
 12400 09:A7FD: A5 09        	lda	<R2
 12401 09:A7FF: 65 01        	adc	<R0
 12402 09:A801: 85 0D        	sta	<R3
 12403 09:A803: A5 0B        	lda	<R2+2
 12404 09:A805: 65 03        	adc	<R0+2
 12405 09:A807: 85 0F        	sta	<R3+2
 12406 09:A809: A0 00 00     	ldy	#$0
 12407 09:A80C: A5 1B        	lda	<L412+one_word_1
 12408 09:A80E: 10 01        	bpl	L425
 12409 09:A810: 88           	dey
 12410                        L425:
  Mon Sep 27 2021  9:39                                                Page 229


 12411 09:A811: 85 01        	sta	<R0
 12412 09:A813: 84 03        	sty	<R0+2
 12413 09:A815: A5 01        	lda	<R0
 12414 09:A817: 87 0D        	sta	[<R3]
 12415 09:A819: A5 03        	lda	<R0+2
 12416 09:A81B: A0 02 00     	ldy	#$2
 12417 09:A81E: 97 0D        	sta	[<R3],Y
 12418                        ;            }
 12419                        	.line	1700
 12420                        L10282:
 12421                        ;
 12422                        ;          /* Conserve ce INTERSEG */
 12423                        ;          AddInterseg(current_SuperInterseg1324->
                    ByteCnt,current_SuperInterseg1324->BitShiftCnt,current_Super
                    Interseg1324->OffsetPatch[i],current_SuperInterseg1324->Offs
                    etReference[i],current_SuperInterseg1324->FileNum,current_Su
                    perInterseg1324->SegNum,RECORD_SUPER_INTERSEG1324);
 12424                        	.line	1703
 12425 09:A820: F4 09 00     	pea	#<$9
 12426 09:A823: A0 0B 00     	ldy	#$b
 12427 09:A826: B7 1D        	lda	[<L412+current_SuperInterseg1324_1],Y
 12428 09:A828: 29 FF 00     	and	#$ff
 12429 09:A82B: 48           	pha
 12430 09:A82C: A0 0C 00     	ldy	#$c
 12431 09:A82F: B7 1D        	lda	[<L412+current_SuperInterseg1324_1],Y
 12432 09:A831: 48           	pha
 12433 09:A832: A0 00 00     	ldy	#$0
 12434 09:A835: A5 19        	lda	<L412+i_1
 12435 09:A837: 10 01        	bpl	L426
 12436 09:A839: 88           	dey
 12437                        L426:
 12438 09:A83A: 85 05        	sta	<R1
 12439 09:A83C: 84 07        	sty	<R1+2
 12440 09:A83E: D4 07        	pei	<R1+2
 12441 09:A840: D4 05        	pei	<R1
 12442 09:A842: A9 02 00     	lda	#$2
 12443                        	xref	~~~lasl
 12444 09:A845: 22 xx xx xx  	jsl	~~~lasl
 12445 09:A849: 85 01        	sta	<R0
 12446 09:A84B: 86 03        	stx	<R0+2
 12447 09:A84D: 18           	clc
 12448 09:A84E: A9 10 04     	lda	#$410
 12449 09:A851: 65 1D        	adc	<L412+current_SuperInterseg1324_1
 12450 09:A853: 85 09        	sta	<R2
 12451 09:A855: A9 00 00     	lda	#$0
 12452 09:A858: 65 1F        	adc	<L412+current_SuperInterseg1324_1+2
 12453 09:A85A: 85 0B        	sta	<R2+2
 12454 09:A85C: 18           	clc
 12455 09:A85D: A5 09        	lda	<R2
 12456 09:A85F: 65 01        	adc	<R0
 12457 09:A861: 85 0D        	sta	<R3
 12458 09:A863: A5 0B        	lda	<R2+2
 12459 09:A865: 65 03        	adc	<R0+2
 12460 09:A867: 85 0F        	sta	<R3+2
 12461 09:A869: A0 02 00     	ldy	#$2
 12462 09:A86C: B7 0D        	lda	[<R3],Y
 12463 09:A86E: 48           	pha
 12464 09:A86F: A7 0D        	lda	[<R3]
  Mon Sep 27 2021  9:39                                                Page 230


 12465 09:A871: 48           	pha
 12466 09:A872: A0 00 00     	ldy	#$0
 12467 09:A875: A5 19        	lda	<L412+i_1
 12468 09:A877: 10 01        	bpl	L427
 12469 09:A879: 88           	dey
 12470                        L427:
 12471 09:A87A: 85 09        	sta	<R2
 12472 09:A87C: 84 0B        	sty	<R2+2
 12473 09:A87E: D4 0B        	pei	<R2+2
 12474 09:A880: D4 09        	pei	<R2
 12475 09:A882: A9 02 00     	lda	#$2
 12476                        	xref	~~~lasl
 12477 09:A885: 22 xx xx xx  	jsl	~~~lasl
 12478 09:A889: 85 01        	sta	<R0
 12479 09:A88B: 86 03        	stx	<R0+2
 12480 09:A88D: 18           	clc
 12481 09:A88E: A9 10 00     	lda	#$10
 12482 09:A891: 65 1D        	adc	<L412+current_SuperInterseg1324_1
 12483 09:A893: 85 0D        	sta	<R3
 12484 09:A895: A9 00 00     	lda	#$0
 12485 09:A898: 65 1F        	adc	<L412+current_SuperInterseg1324_1+2
 12486 09:A89A: 85 0F        	sta	<R3+2
 12487 09:A89C: 18           	clc
 12488 09:A89D: A5 0D        	lda	<R3
 12489 09:A89F: 65 01        	adc	<R0
 12490 09:A8A1: 85 11        	sta	<17
 12491 09:A8A3: A5 0F        	lda	<R3+2
 12492 09:A8A5: 65 03        	adc	<R0+2
 12493 09:A8A7: 85 13        	sta	<17+2
 12494 09:A8A9: A0 02 00     	ldy	#$2
 12495 09:A8AC: B7 11        	lda	[<17],Y
 12496 09:A8AE: 48           	pha
 12497 09:A8AF: A7 11        	lda	[<17]
 12498 09:A8B1: 48           	pha
 12499 09:A8B2: A0 0A 00     	ldy	#$a
 12500 09:A8B5: B7 1D        	lda	[<L412+current_SuperInterseg1324_1],Y
 12501 09:A8B7: 48           	pha
 12502 09:A8B8: A0 09 00     	ldy	#$9
 12503 09:A8BB: B7 1D        	lda	[<L412+current_SuperInterseg1324_1],Y
 12504 09:A8BD: 48           	pha
 12505 09:A8BE: 22 A9 AC 09  	jsl	~~AddInterseg
 12506                        ;        }
 12507                        	.line	1704
 12508                        L10277:
 12509 09:A8C2: E6 19        	inc	<L412+i_1
 12510                        L10280:
 12511 09:A8C4: 38           	sec
 12512 09:A8C5: A5 19        	lda	<L412+i_1
 12513 09:A8C7: A0 0E 00     	ldy	#$e
 12514 09:A8CA: F7 1D        	sbc	[<L412+current_SuperInterseg1324_1],Y
 12515 09:A8CC: 70 03        	bvs	L428
 12516 09:A8CE: 49 00 80     	eor	#$8000
 12517                        L428:
 12518 09:A8D1: 30 03        	bmi	L429
 12519 09:A8D3: 82 96 FD     	brl	L10279
 12520                        L429:
 12521                        L10278:
 12522                        ;
  Mon Sep 27 2021  9:39                                                Page 231


 12523                        ;      /* Page suivante */
 12524                        ;      *page_rtn = *page_rtn + 1;
 12525                        	.line	1707
 12526 09:A8D6: E2 20        	sep	#$20
 12527                        	longa	off
 12528 09:A8D8: A7 30        	lda	[<L411+page_rtn_0]
 12529 09:A8DA: 1A           	ina
 12530 09:A8DB: C2 20        	rep	#$20
 12531                        	longa	on
 12532 09:A8DD: E2 20        	sep	#$20
 12533                        	longa	off
 12534 09:A8DF: 87 30        	sta	[<L411+page_rtn_0]
 12535 09:A8E1: C2 20        	rep	#$20
 12536                        	longa	on
 12537                        ;
 12538                        ;      /* Longueur du SubRecord */
 12539                        ;      *length_rtn = 1 + current_SuperInterseg1324
                    ->nb_address*sizeof(BYTE);
 12540                        	.line	1710
 12541 09:A8E3: A0 0E 00     	ldy	#$e
 12542 09:A8E6: B7 1D        	lda	[<L412+current_SuperInterseg1324_1],Y
 12543 09:A8E8: 1A           	ina
 12544 09:A8E9: 87 34        	sta	[<L411+length_rtn_0]
 12545                        ;    }
 12546                        	.line	1711
 12547                        L10276:
 12548                        ;
 12549                        ;  /* Renvoie la structure */
 12550                        ;  return(current_SuperInterseg1324);
 12551                        	.line	1714
 12552 09:A8EB: A6 1F        	ldx	<L412+current_SuperInterseg1324_1+2
 12553 09:A8ED: A5 1D        	lda	<L412+current_SuperInterseg1324_1
 12554 09:A8EF: 82 E5 FC     	brl	L415
 12555                        ;}
 12556                        	.line	1715
 12557                        	.endblock	1715
 12558             00000020   L411	equ	32
 12559             00000019   L412	equ	25
 12560 09:A8F2:              	ends
 12561                        	efunc
 12562                        	.endfunc	1715,25,32
 12563                        	.line	1715
 12564                        ;
 12565                        ;
 12566                        ;/************************************************
                    ****************************/
 12567                        ;/*  DecodeSuperInterseg2536() :  Décodage d'un Su
                    bRecord SuperInterseg2536. */
 12568                        ;/************************************************
                    ****************************/
 12569                        ;static struct subrecord_SuperInterseg2536 *Decode
                    SuperInterseg2536(unsigned char *data, BYTE SegNum, unsigned
                     char *lconst, int lconst_length, BYTE *page_rtn, int *lengt
                    h_rtn, struct omf_segment *current_segment)
 12570                        ;{
 12571                        	.line	1721
 12572                        	.line	1722
 12573                        	LOADER
  Mon Sep 27 2021  9:39                                                Page 232


 12574                        	func
 12575                        	.function	1722
 12576                        ~~DecodeSuperInterseg2536:
 12577                        	longa	on
 12578                        	longi	on
 12579 09:A8F2: 3B           	tsc
 12580 09:A8F3: 38           	sec
 12581 09:A8F4: E9 20 00     	sbc	#L430
 12582 09:A8F7: 1B           	tcs
 12583 09:A8F8: 0B           	phd
 12584 09:A8F9: 5B           	tcd
 12585             00000004   data_0	set	4
 12586             00000008   SegNum_0	set	8
 12587             0000000A   lconst_0	set	10
 12588             0000000E   lconst_length_0	set	14
 12589             00000010   page_rtn_0	set	16
 12590             00000014   length_rtn_0	set	20
 12591             00000018   current_segment_0	set	24
 12592                        	.block	1722
 12593                        ;  int i;
 12594                        ;  WORD one_word;
 12595                        ;  struct subrecord_SuperInterseg2536 *current_Sup
                    erInterseg2536;
 12596                        ;
 12597                        ;  /* Allocation mémoire */
 12598                        ;  current_SuperInterseg2536 = (struct subrecord_S
                    uperInterseg2536 *) k_calloc(1,sizeof(struct subrecord_Super
                    Interseg2536));
 12599             00000000   i_1	set	0
 12600             00000002   one_word_1	set	2
 12601             00000004   current_SuperInterseg2536_1	set	4
 12602                        	.sym	i,0,5,1,16
 12603                        	.sym	one_word,2,5,1,16
 12604                        	.sym	current_SuperInterseg2536,4,138,1,32,55
 12605                        	.sym	data,4,142,6,32
 12606                        	.sym	SegNum,8,14,6,8
 12607                        	.sym	lconst,10,142,6,32
 12608                        	.sym	lconst_length,14,5,6,16
 12609                        	.sym	page_rtn,16,142,6,32
 12610                        	.sym	length_rtn,20,133,6,32
 12611                        	.sym	current_segment,24,138,6,32,126
 12612                        	.line	1728
 12613 09:A8FA: F4 14 08     	pea	#<$814
 12614 09:A8FD: F4 01 00     	pea	#<$1
 12615 09:A900: 22 xx xx xx  	jsl	~~k_calloc
 12616 09:A904: 85 1D        	sta	<L431+current_SuperInterseg2536_1
 12617 09:A906: 86 1F        	stx	<L431+current_SuperInterseg2536_1+2
 12618                        ;  if(current_SuperInterseg2536 == NULL)
 12619                        	.line	1729
 12620                        ;    {
 12621 09:A908: A5 1D        	lda	<L431+current_SuperInterseg2536_1
 12622 09:A90A: 05 1F        	ora	<L431+current_SuperInterseg2536_1+2
 12623 09:A90C: F0 03        	beq	L433
 12624 09:A90E: 82 19 00     	brl	L10283
 12625                        L433:
 12626                        	.line	1730
 12627                        ;      //printf("Error : Impossible to allocate me
                    mory for SubRecord SuperInterseg2536.\n");
  Mon Sep 27 2021  9:39                                                Page 233


 12628                        ;      return(NULL);
 12629                        	.line	1732
 12630 09:A911: A9 00 00     	lda	#$0
 12631 09:A914: AA           	tax
 12632 09:A915: A9 00 00     	lda	#$0
 12633                        L434:
 12634 09:A918: A8           	tay
 12635 09:A919: A5 22        	lda	<L430+2
 12636 09:A91B: 85 3A        	sta	<L430+2+24
 12637 09:A91D: A5 21        	lda	<L430+1
 12638 09:A91F: 85 39        	sta	<L430+1+24
 12639 09:A921: 2B           	pld
 12640 09:A922: 3B           	tsc
 12641 09:A923: 18           	clc
 12642 09:A924: 69 38 00     	adc	#L430+24
 12643 09:A927: 1B           	tcs
 12644 09:A928: 98           	tya
 12645 09:A929: 6B           	rtl
 12646                        ;    }
 12647                        	.line	1733
 12648                        ;
 12649                        ;  /* Nombre d'adresse-1 ou Saut de Page */
 12650                        ;  current_SuperInterseg2536->Count = data[0];
 12651                        L10283:
 12652                        	.line	1736
 12653 09:A92A: E2 20        	sep	#$20
 12654                        	longa	off
 12655 09:A92C: A7 24        	lda	[<L430+data_0]
 12656 09:A92E: A0 08 00     	ldy	#$8
 12657 09:A931: 97 1D        	sta	[<L431+current_SuperInterseg2536_1],Y
 12658 09:A933: C2 20        	rep	#$20
 12659                        	longa	on
 12660                        ;
 12661                        ;  /** Saut de Page **/
 12662                        ;  if((current_SuperInterseg2536->Count & 0x80) ==
                     0x80)
 12663                        	.line	1739
 12664                        ;    {
 12665 09:A935: A0 08 00     	ldy	#$8
 12666 09:A938: B7 1D        	lda	[<L431+current_SuperInterseg2536_1],Y
 12667 09:A93A: 29 80 00     	and	#<$80
 12668 09:A93D: 85 01        	sta	<R0
 12669 09:A93F: A5 01        	lda	<R0
 12670 09:A941: C9 80 00     	cmp	#<$80
 12671 09:A944: F0 03        	beq	L435
 12672 09:A946: 82 24 00     	brl	L10284
 12673                        L435:
 12674                        	.line	1740
 12675                        ;      /* On saute X pages */
 12676                        ;      *page_rtn = *page_rtn + (current_SuperInter
                    seg2536->Count & 0x7F);
 12677                        	.line	1742
 12678 09:A949: E2 20        	sep	#$20
 12679                        	longa	off
 12680 09:A94B: A0 08 00     	ldy	#$8
 12681 09:A94E: B7 1D        	lda	[<L431+current_SuperInterseg2536_1],Y
 12682 09:A950: 29 7F        	and	#<$7f
 12683 09:A952: 85 01        	sta	<R0
  Mon Sep 27 2021  9:39                                                Page 234


 12684 09:A954: C2 20        	rep	#$20
 12685                        	longa	on
 12686 09:A956: E2 20        	sep	#$20
 12687                        	longa	off
 12688 09:A958: 18           	clc
 12689 09:A959: A7 30        	lda	[<L430+page_rtn_0]
 12690 09:A95B: 65 01        	adc	<R0
 12691 09:A95D: C2 20        	rep	#$20
 12692                        	longa	on
 12693 09:A95F: E2 20        	sep	#$20
 12694                        	longa	off
 12695 09:A961: 87 30        	sta	[<L430+page_rtn_0]
 12696 09:A963: C2 20        	rep	#$20
 12697                        	longa	on
 12698                        ;
 12699                        ;      /* Longueur du SubRecord */
 12700                        ;      *length_rtn = 1;
 12701                        	.line	1745
 12702 09:A965: A9 01 00     	lda	#$1
 12703 09:A968: 87 34        	sta	[<L430+length_rtn_0]
 12704                        ;    }
 12705                        	.line	1746
 12706                        ;  else
 12707 09:A96A: 82 BF 02     	brl	L10285
 12708                        L10284:
 12709                        ;    {
 12710                        	.line	1748
 12711                        ;      /* Number of Bytes to be relocated = Toujou
                    rs à 2 */
 12712                        ;      current_SuperInterseg2536->ByteCnt = 0x02;
 12713                        	.line	1750
 12714 09:A96D: E2 20        	sep	#$20
 12715                        	longa	off
 12716 09:A96F: A9 02        	lda	#$2
 12717 09:A971: A0 09 00     	ldy	#$9
 12718 09:A974: 97 1D        	sta	[<L431+current_SuperInterseg2536_1],Y
 12719 09:A976: C2 20        	rep	#$20
 12720                        	longa	on
 12721                        ;
 12722                        ;      /* Opérations >> ou << = Toujours à 0xF0  *
                    /
 12723                        ;      current_SuperInterseg2536->BitShiftCnt = 0x
                    F0;
 12724                        	.line	1753
 12725 09:A978: E2 20        	sep	#$20
 12726                        	longa	off
 12727 09:A97A: A9 F0        	lda	#$f0
 12728 09:A97C: A0 0A 00     	ldy	#$a
 12729 09:A97F: 97 1D        	sta	[<L431+current_SuperInterseg2536_1],Y
 12730 09:A981: C2 20        	rep	#$20
 12731                        	longa	on
 12732                        ;
 12733                        ;      /* Segment Number */
 12734                        ;      current_SuperInterseg2536->SegNum = SegNum;
 12735                        	.line	1756
 12736 09:A983: E2 20        	sep	#$20
 12737                        	longa	off
 12738 09:A985: A5 28        	lda	<L430+SegNum_0
  Mon Sep 27 2021  9:39                                                Page 235


 12739 09:A987: A0 0B 00     	ldy	#$b
 12740 09:A98A: 97 1D        	sta	[<L431+current_SuperInterseg2536_1],Y
 12741 09:A98C: C2 20        	rep	#$20
 12742                        	longa	on
 12743                        ;
 12744                        ;      /* File Number toujours à 1 */
 12745                        ;      current_SuperInterseg2536->FileNum = 1;
 12746                        	.line	1759
 12747 09:A98E: A9 01 00     	lda	#$1
 12748 09:A991: A0 0C 00     	ldy	#$c
 12749 09:A994: 97 1D        	sta	[<L431+current_SuperInterseg2536_1],Y
 12750                        ;
 12751                        ;      /* Nombre d'adresse */
 12752                        ;      current_SuperInterseg2536->nb_address = cur
                    rent_SuperInterseg2536->Count + 1;
 12753                        	.line	1762
 12754 09:A996: A0 08 00     	ldy	#$8
 12755 09:A999: B7 1D        	lda	[<L431+current_SuperInterseg2536_1],Y
 12756 09:A99B: 29 FF 00     	and	#$ff
 12757 09:A99E: 85 01        	sta	<R0
 12758 09:A9A0: A5 01        	lda	<R0
 12759 09:A9A2: 1A           	ina
 12760 09:A9A3: A0 0E 00     	ldy	#$e
 12761 09:A9A6: 97 1D        	sta	[<L431+current_SuperInterseg2536_1],Y
 12762                        ;
 12763                        ;      /** Copie les adresses **/
 12764                        ;      for(i=0; i<current_SuperInterseg2536->nb_ad
                    dress; i++)
 12765                        	.line	1765
 12766 09:A9A8: 64 19        	stz	<L431+i_1
 12767 09:A9AA: 82 58 02     	brl	L10289
 12768                        L10288:
 12769                        ;        {
 12770                        	.line	1766
 12771                        ;          /* Décode OffsetPath et OffsetReference
                     */
 12772                        ;          current_SuperInterseg2536->OffsetPatch[
                    i] = ((WORD)*page_rtn) << 8 | data[1+i];
 12773                        	.line	1768
 12774 09:A9AD: A0 00 00     	ldy	#$0
 12775 09:A9B0: A5 19        	lda	<L431+i_1
 12776 09:A9B2: 10 01        	bpl	L436
 12777 09:A9B4: 88           	dey
 12778                        L436:
 12779 09:A9B5: 85 05        	sta	<R1
 12780 09:A9B7: 84 07        	sty	<R1+2
 12781 09:A9B9: D4 07        	pei	<R1+2
 12782 09:A9BB: D4 05        	pei	<R1
 12783 09:A9BD: A9 02 00     	lda	#$2
 12784                        	xref	~~~lasl
 12785 09:A9C0: 22 xx xx xx  	jsl	~~~lasl
 12786 09:A9C4: 85 01        	sta	<R0
 12787 09:A9C6: 86 03        	stx	<R0+2
 12788 09:A9C8: 18           	clc
 12789 09:A9C9: A9 10 00     	lda	#$10
 12790 09:A9CC: 65 1D        	adc	<L431+current_SuperInterseg2536_1
 12791 09:A9CE: 85 09        	sta	<R2
 12792 09:A9D0: A9 00 00     	lda	#$0
  Mon Sep 27 2021  9:39                                                Page 236


 12793 09:A9D3: 65 1F        	adc	<L431+current_SuperInterseg2536_1+2
 12794 09:A9D5: 85 0B        	sta	<R2+2
 12795 09:A9D7: 18           	clc
 12796 09:A9D8: A5 09        	lda	<R2
 12797 09:A9DA: 65 01        	adc	<R0
 12798 09:A9DC: 85 0D        	sta	<R3
 12799 09:A9DE: A5 0B        	lda	<R2+2
 12800 09:A9E0: 65 03        	adc	<R0+2
 12801 09:A9E2: 85 0F        	sta	<R3+2
 12802 09:A9E4: A5 19        	lda	<L431+i_1
 12803 09:A9E6: 1A           	ina
 12804 09:A9E7: 85 01        	sta	<R0
 12805 09:A9E9: A4 01        	ldy	<R0
 12806 09:A9EB: B7 24        	lda	[<L430+data_0],Y
 12807 09:A9ED: 29 FF 00     	and	#$ff
 12808 09:A9F0: 85 09        	sta	<R2
 12809 09:A9F2: A7 30        	lda	[<L430+page_rtn_0]
 12810 09:A9F4: 29 FF 00     	and	#$ff
 12811 09:A9F7: 85 15        	sta	<21
 12812 09:A9F9: A5 15        	lda	<21
 12813 09:A9FB: EB           	xba
 12814 09:A9FC: 29 00 FF     	and	#$ff00
 12815 09:A9FF: 85 11        	sta	<17
 12816 09:AA01: A5 11        	lda	<17
 12817 09:AA03: 05 09        	ora	<R2
 12818 09:AA05: 85 15        	sta	<21
 12819 09:AA07: A0 00 00     	ldy	#$0
 12820 09:AA0A: A5 15        	lda	<21
 12821 09:AA0C: 10 01        	bpl	L437
 12822 09:AA0E: 88           	dey
 12823                        L437:
 12824 09:AA0F: 85 09        	sta	<R2
 12825 09:AA11: 84 0B        	sty	<R2+2
 12826 09:AA13: A5 09        	lda	<R2
 12827 09:AA15: 87 0D        	sta	[<R3]
 12828 09:AA17: A5 0B        	lda	<R2+2
 12829 09:AA19: A0 02 00     	ldy	#$2
 12830 09:AA1C: 97 0D        	sta	[<R3],Y
 12831                        ;          
 12832                        ;          /* On vérifie qu'on reste dans les limi
                    te du LCONST */
 12833                        ;          if(current_SuperInterseg2536->OffsetPat
                    ch[i] > (DWORD) lconst_length)
 12834                        	.line	1771
 12835                        ;            {
 12836 09:AA1E: A0 00 00     	ldy	#$0
 12837 09:AA21: A5 2E        	lda	<L430+lconst_length_0
 12838 09:AA23: 10 01        	bpl	L438
 12839 09:AA25: 88           	dey
 12840                        L438:
 12841 09:AA26: 85 01        	sta	<R0
 12842 09:AA28: 84 03        	sty	<R0+2
 12843 09:AA2A: A0 00 00     	ldy	#$0
 12844 09:AA2D: A5 19        	lda	<L431+i_1
 12845 09:AA2F: 10 01        	bpl	L439
 12846 09:AA31: 88           	dey
 12847                        L439:
 12848 09:AA32: 85 09        	sta	<R2
  Mon Sep 27 2021  9:39                                                Page 237


 12849 09:AA34: 84 0B        	sty	<R2+2
 12850 09:AA36: D4 0B        	pei	<R2+2
 12851 09:AA38: D4 09        	pei	<R2
 12852 09:AA3A: A9 02 00     	lda	#$2
 12853                        	xref	~~~lasl
 12854 09:AA3D: 22 xx xx xx  	jsl	~~~lasl
 12855 09:AA41: 85 05        	sta	<R1
 12856 09:AA43: 86 07        	stx	<R1+2
 12857 09:AA45: 18           	clc
 12858 09:AA46: A9 10 00     	lda	#$10
 12859 09:AA49: 65 1D        	adc	<L431+current_SuperInterseg2536_1
 12860 09:AA4B: 85 0D        	sta	<R3
 12861 09:AA4D: A9 00 00     	lda	#$0
 12862 09:AA50: 65 1F        	adc	<L431+current_SuperInterseg2536_1+2
 12863 09:AA52: 85 0F        	sta	<R3+2
 12864 09:AA54: 18           	clc
 12865 09:AA55: A5 0D        	lda	<R3
 12866 09:AA57: 65 05        	adc	<R1
 12867 09:AA59: 85 11        	sta	<17
 12868 09:AA5B: A5 0F        	lda	<R3+2
 12869 09:AA5D: 65 07        	adc	<R1+2
 12870 09:AA5F: 85 13        	sta	<17+2
 12871 09:AA61: A5 01        	lda	<R0
 12872 09:AA63: C7 11        	cmp	[<17]
 12873 09:AA65: A5 03        	lda	<R0+2
 12874 09:AA67: A0 02 00     	ldy	#$2
 12875 09:AA6A: F7 11        	sbc	[<17],Y
 12876 09:AA6C: 90 03        	bcc	L440
 12877 09:AA6E: 82 47 00     	brl	L10290
 12878                        L440:
 12879                        	.line	1772
 12880                        ;              current_SuperInterseg2536->OffsetRe
                    ference[i] = 0xFFFF;     /* Erreur */
 12881                        	.line	1773
 12882 09:AA71: A0 00 00     	ldy	#$0
 12883 09:AA74: A5 19        	lda	<L431+i_1
 12884 09:AA76: 10 01        	bpl	L441
 12885 09:AA78: 88           	dey
 12886                        L441:
 12887 09:AA79: 85 05        	sta	<R1
 12888 09:AA7B: 84 07        	sty	<R1+2
 12889 09:AA7D: D4 07        	pei	<R1+2
 12890 09:AA7F: D4 05        	pei	<R1
 12891 09:AA81: A9 02 00     	lda	#$2
 12892                        	xref	~~~lasl
 12893 09:AA84: 22 xx xx xx  	jsl	~~~lasl
 12894 09:AA88: 85 01        	sta	<R0
 12895 09:AA8A: 86 03        	stx	<R0+2
 12896 09:AA8C: 18           	clc
 12897 09:AA8D: A9 10 04     	lda	#$410
 12898 09:AA90: 65 1D        	adc	<L431+current_SuperInterseg2536_1
 12899 09:AA92: 85 09        	sta	<R2
 12900 09:AA94: A9 00 00     	lda	#$0
 12901 09:AA97: 65 1F        	adc	<L431+current_SuperInterseg2536_1+2
 12902 09:AA99: 85 0B        	sta	<R2+2
 12903 09:AA9B: 18           	clc
 12904 09:AA9C: A5 09        	lda	<R2
 12905 09:AA9E: 65 01        	adc	<R0
  Mon Sep 27 2021  9:39                                                Page 238


 12906 09:AAA0: 85 0D        	sta	<R3
 12907 09:AAA2: A5 0B        	lda	<R2+2
 12908 09:AAA4: 65 03        	adc	<R0+2
 12909 09:AAA6: 85 0F        	sta	<R3+2
 12910 09:AAA8: A9 FF FF     	lda	#$ffff
 12911 09:AAAB: 87 0D        	sta	[<R3]
 12912 09:AAAD: A9 00 00     	lda	#$0
 12913 09:AAB0: A0 02 00     	ldy	#$2
 12914 09:AAB3: 97 0D        	sta	[<R3],Y
 12915                        ;              //printf("  Error : Bad Reference A
                    ddress in SuperInterseg2536 for Offset %04X in Segment #%02X
                    .\n",current_SuperInterseg2536->OffsetPatch[i],current_segme
                    nt->header.SegNum);
 12916                        ;            }
 12917                        	.line	1775
 12918                        ;          else
 12919 09:AAB5: 82 A9 00     	brl	L10291
 12920                        L10290:
 12921                        ;            {          
 12922                        	.line	1777
 12923                        ;              memcpy(&one_word,&lconst[current_Su
                    perInterseg2536->OffsetPatch[i]],sizeof(WORD));
 12924                        	.line	1778
 12925 09:AAB8: F4 02 00     	pea	#<$2
 12926 09:AABB: A0 00 00     	ldy	#$0
 12927 09:AABE: A5 19        	lda	<L431+i_1
 12928 09:AAC0: 10 01        	bpl	L442
 12929 09:AAC2: 88           	dey
 12930                        L442:
 12931 09:AAC3: 85 05        	sta	<R1
 12932 09:AAC5: 84 07        	sty	<R1+2
 12933 09:AAC7: D4 07        	pei	<R1+2
 12934 09:AAC9: D4 05        	pei	<R1
 12935 09:AACB: A9 02 00     	lda	#$2
 12936                        	xref	~~~lasl
 12937 09:AACE: 22 xx xx xx  	jsl	~~~lasl
 12938 09:AAD2: 85 01        	sta	<R0
 12939 09:AAD4: 86 03        	stx	<R0+2
 12940 09:AAD6: 18           	clc
 12941 09:AAD7: A9 10 00     	lda	#$10
 12942 09:AADA: 65 1D        	adc	<L431+current_SuperInterseg2536_1
 12943 09:AADC: 85 09        	sta	<R2
 12944 09:AADE: A9 00 00     	lda	#$0
 12945 09:AAE1: 65 1F        	adc	<L431+current_SuperInterseg2536_1+2
 12946 09:AAE3: 85 0B        	sta	<R2+2
 12947 09:AAE5: 18           	clc
 12948 09:AAE6: A5 09        	lda	<R2
 12949 09:AAE8: 65 01        	adc	<R0
 12950 09:AAEA: 85 0D        	sta	<R3
 12951 09:AAEC: A5 0B        	lda	<R2+2
 12952 09:AAEE: 65 03        	adc	<R0+2
 12953 09:AAF0: 85 0F        	sta	<R3+2
 12954 09:AAF2: 18           	clc
 12955 09:AAF3: A5 2A        	lda	<L430+lconst_0
 12956 09:AAF5: 67 0D        	adc	[<R3]
 12957 09:AAF7: 85 01        	sta	<R0
 12958 09:AAF9: A5 2C        	lda	<L430+lconst_0+2
 12959 09:AAFB: A0 02 00     	ldy	#$2
  Mon Sep 27 2021  9:39                                                Page 239


 12960 09:AAFE: 77 0D        	adc	[<R3],Y
 12961 09:AB00: 85 03        	sta	<R0+2
 12962 09:AB02: D4 03        	pei	<R0+2
 12963 09:AB04: D4 01        	pei	<R0
 12964 09:AB06: F4 00 00     	pea	#0
 12965 09:AB09: 18           	clc
 12966 09:AB0A: 7B           	tdc
 12967 09:AB0B: 69 1B 00     	adc	#<L431+one_word_1
 12968 09:AB0E: 48           	pha
 12969 09:AB0F: 22 xx xx xx  	jsl	~~memcpy
 12970                        ;              current_SuperInterseg2536->OffsetRe
                    ference[i] = (DWORD) one_word;
 12971                        	.line	1779
 12972 09:AB13: A0 00 00     	ldy	#$0
 12973 09:AB16: A5 19        	lda	<L431+i_1
 12974 09:AB18: 10 01        	bpl	L443
 12975 09:AB1A: 88           	dey
 12976                        L443:
 12977 09:AB1B: 85 05        	sta	<R1
 12978 09:AB1D: 84 07        	sty	<R1+2
 12979 09:AB1F: D4 07        	pei	<R1+2
 12980 09:AB21: D4 05        	pei	<R1
 12981 09:AB23: A9 02 00     	lda	#$2
 12982                        	xref	~~~lasl
 12983 09:AB26: 22 xx xx xx  	jsl	~~~lasl
 12984 09:AB2A: 85 01        	sta	<R0
 12985 09:AB2C: 86 03        	stx	<R0+2
 12986 09:AB2E: 18           	clc
 12987 09:AB2F: A9 10 04     	lda	#$410
 12988 09:AB32: 65 1D        	adc	<L431+current_SuperInterseg2536_1
 12989 09:AB34: 85 09        	sta	<R2
 12990 09:AB36: A9 00 00     	lda	#$0
 12991 09:AB39: 65 1F        	adc	<L431+current_SuperInterseg2536_1+2
 12992 09:AB3B: 85 0B        	sta	<R2+2
 12993 09:AB3D: 18           	clc
 12994 09:AB3E: A5 09        	lda	<R2
 12995 09:AB40: 65 01        	adc	<R0
 12996 09:AB42: 85 0D        	sta	<R3
 12997 09:AB44: A5 0B        	lda	<R2+2
 12998 09:AB46: 65 03        	adc	<R0+2
 12999 09:AB48: 85 0F        	sta	<R3+2
 13000 09:AB4A: A0 00 00     	ldy	#$0
 13001 09:AB4D: A5 1B        	lda	<L431+one_word_1
 13002 09:AB4F: 10 01        	bpl	L444
 13003 09:AB51: 88           	dey
 13004                        L444:
 13005 09:AB52: 85 01        	sta	<R0
 13006 09:AB54: 84 03        	sty	<R0+2
 13007 09:AB56: A5 01        	lda	<R0
 13008 09:AB58: 87 0D        	sta	[<R3]
 13009 09:AB5A: A5 03        	lda	<R0+2
 13010 09:AB5C: A0 02 00     	ldy	#$2
 13011 09:AB5F: 97 0D        	sta	[<R3],Y
 13012                        ;            }
 13013                        	.line	1780
 13014                        L10291:
 13015                        ;             
 13016                        ;          /* Conserve ce INTERSEG */
  Mon Sep 27 2021  9:39                                                Page 240


 13017                        ;          AddInterseg(current_SuperInterseg2536->
                    ByteCnt,current_SuperInterseg2536->BitShiftCnt,current_Super
                    Interseg2536->OffsetPatch[i],current_SuperInterseg2536->Offs
                    etReference[i],current_SuperInterseg2536->FileNum,current_Su
                    perInterseg2536->SegNum,RECORD_SUPER_INTERSEG2536);
 13018                        	.line	1783
 13019 09:AB61: F4 0A 00     	pea	#<$a
 13020 09:AB64: A0 0B 00     	ldy	#$b
 13021 09:AB67: B7 1D        	lda	[<L431+current_SuperInterseg2536_1],Y
 13022 09:AB69: 29 FF 00     	and	#$ff
 13023 09:AB6C: 48           	pha
 13024 09:AB6D: A0 0C 00     	ldy	#$c
 13025 09:AB70: B7 1D        	lda	[<L431+current_SuperInterseg2536_1],Y
 13026 09:AB72: 48           	pha
 13027 09:AB73: A0 00 00     	ldy	#$0
 13028 09:AB76: A5 19        	lda	<L431+i_1
 13029 09:AB78: 10 01        	bpl	L445
 13030 09:AB7A: 88           	dey
 13031                        L445:
 13032 09:AB7B: 85 05        	sta	<R1
 13033 09:AB7D: 84 07        	sty	<R1+2
 13034 09:AB7F: D4 07        	pei	<R1+2
 13035 09:AB81: D4 05        	pei	<R1
 13036 09:AB83: A9 02 00     	lda	#$2
 13037                        	xref	~~~lasl
 13038 09:AB86: 22 xx xx xx  	jsl	~~~lasl
 13039 09:AB8A: 85 01        	sta	<R0
 13040 09:AB8C: 86 03        	stx	<R0+2
 13041 09:AB8E: 18           	clc
 13042 09:AB8F: A9 10 04     	lda	#$410
 13043 09:AB92: 65 1D        	adc	<L431+current_SuperInterseg2536_1
 13044 09:AB94: 85 09        	sta	<R2
 13045 09:AB96: A9 00 00     	lda	#$0
 13046 09:AB99: 65 1F        	adc	<L431+current_SuperInterseg2536_1+2
 13047 09:AB9B: 85 0B        	sta	<R2+2
 13048 09:AB9D: 18           	clc
 13049 09:AB9E: A5 09        	lda	<R2
 13050 09:ABA0: 65 01        	adc	<R0
 13051 09:ABA2: 85 0D        	sta	<R3
 13052 09:ABA4: A5 0B        	lda	<R2+2
 13053 09:ABA6: 65 03        	adc	<R0+2
 13054 09:ABA8: 85 0F        	sta	<R3+2
 13055 09:ABAA: A0 02 00     	ldy	#$2
 13056 09:ABAD: B7 0D        	lda	[<R3],Y
 13057 09:ABAF: 48           	pha
 13058 09:ABB0: A7 0D        	lda	[<R3]
 13059 09:ABB2: 48           	pha
 13060 09:ABB3: A0 00 00     	ldy	#$0
 13061 09:ABB6: A5 19        	lda	<L431+i_1
 13062 09:ABB8: 10 01        	bpl	L446
 13063 09:ABBA: 88           	dey
 13064                        L446:
 13065 09:ABBB: 85 09        	sta	<R2
 13066 09:ABBD: 84 0B        	sty	<R2+2
 13067 09:ABBF: D4 0B        	pei	<R2+2
 13068 09:ABC1: D4 09        	pei	<R2
 13069 09:ABC3: A9 02 00     	lda	#$2
 13070                        	xref	~~~lasl
  Mon Sep 27 2021  9:39                                                Page 241


 13071 09:ABC6: 22 xx xx xx  	jsl	~~~lasl
 13072 09:ABCA: 85 01        	sta	<R0
 13073 09:ABCC: 86 03        	stx	<R0+2
 13074 09:ABCE: 18           	clc
 13075 09:ABCF: A9 10 00     	lda	#$10
 13076 09:ABD2: 65 1D        	adc	<L431+current_SuperInterseg2536_1
 13077 09:ABD4: 85 0D        	sta	<R3
 13078 09:ABD6: A9 00 00     	lda	#$0
 13079 09:ABD9: 65 1F        	adc	<L431+current_SuperInterseg2536_1+2
 13080 09:ABDB: 85 0F        	sta	<R3+2
 13081 09:ABDD: 18           	clc
 13082 09:ABDE: A5 0D        	lda	<R3
 13083 09:ABE0: 65 01        	adc	<R0
 13084 09:ABE2: 85 11        	sta	<17
 13085 09:ABE4: A5 0F        	lda	<R3+2
 13086 09:ABE6: 65 03        	adc	<R0+2
 13087 09:ABE8: 85 13        	sta	<17+2
 13088 09:ABEA: A0 02 00     	ldy	#$2
 13089 09:ABED: B7 11        	lda	[<17],Y
 13090 09:ABEF: 48           	pha
 13091 09:ABF0: A7 11        	lda	[<17]
 13092 09:ABF2: 48           	pha
 13093 09:ABF3: A0 0A 00     	ldy	#$a
 13094 09:ABF6: B7 1D        	lda	[<L431+current_SuperInterseg2536_1],Y
 13095 09:ABF8: 48           	pha
 13096 09:ABF9: A0 09 00     	ldy	#$9
 13097 09:ABFC: B7 1D        	lda	[<L431+current_SuperInterseg2536_1],Y
 13098 09:ABFE: 48           	pha
 13099 09:ABFF: 22 A9 AC 09  	jsl	~~AddInterseg
 13100                        ;        }
 13101                        	.line	1784
 13102                        L10286:
 13103 09:AC03: E6 19        	inc	<L431+i_1
 13104                        L10289:
 13105 09:AC05: 38           	sec
 13106 09:AC06: A5 19        	lda	<L431+i_1
 13107 09:AC08: A0 0E 00     	ldy	#$e
 13108 09:AC0B: F7 1D        	sbc	[<L431+current_SuperInterseg2536_1],Y
 13109 09:AC0D: 70 03        	bvs	L447
 13110 09:AC0F: 49 00 80     	eor	#$8000
 13111                        L447:
 13112 09:AC12: 30 03        	bmi	L448
 13113 09:AC14: 82 96 FD     	brl	L10288
 13114                        L448:
 13115                        L10287:
 13116                        ;
 13117                        ;      /* Page suivante */
 13118                        ;      *page_rtn = *page_rtn + 1;
 13119                        	.line	1787
 13120 09:AC17: E2 20        	sep	#$20
 13121                        	longa	off
 13122 09:AC19: A7 30        	lda	[<L430+page_rtn_0]
 13123 09:AC1B: 1A           	ina
 13124 09:AC1C: C2 20        	rep	#$20
 13125                        	longa	on
 13126 09:AC1E: E2 20        	sep	#$20
 13127                        	longa	off
 13128 09:AC20: 87 30        	sta	[<L430+page_rtn_0]
  Mon Sep 27 2021  9:39                                                Page 242


 13129 09:AC22: C2 20        	rep	#$20
 13130                        	longa	on
 13131                        ;
 13132                        ;      /* Longueur du SubRecord */
 13133                        ;      *length_rtn = 1 + current_SuperInterseg2536
                    ->nb_address*sizeof(BYTE);
 13134                        	.line	1790
 13135 09:AC24: A0 0E 00     	ldy	#$e
 13136 09:AC27: B7 1D        	lda	[<L431+current_SuperInterseg2536_1],Y
 13137 09:AC29: 1A           	ina
 13138 09:AC2A: 87 34        	sta	[<L430+length_rtn_0]
 13139                        ;    }
 13140                        	.line	1791
 13141                        L10285:
 13142                        ;
 13143                        ;  /* Renvoie la structure */
 13144                        ;  return(current_SuperInterseg2536);
 13145                        	.line	1794
 13146 09:AC2C: A6 1F        	ldx	<L431+current_SuperInterseg2536_1+2
 13147 09:AC2E: A5 1D        	lda	<L431+current_SuperInterseg2536_1
 13148 09:AC30: 82 E5 FC     	brl	L434
 13149                        ;}
 13150                        	.line	1795
 13151                        	.endblock	1795
 13152             00000020   L430	equ	32
 13153             00000019   L431	equ	25
 13154 09:AC33:              	ends
 13155                        	efunc
 13156                        	.endfunc	1795,25,32
 13157                        	.line	1795
 13158                        ;
 13159                        ;
 13160                        ;/************************************************
                    *******/
 13161                        ;/*  AddReloc() :  On conserve les RELOC de ce Seg
                    ment. */
 13162                        ;/************************************************
                    *******/
 13163                        ;static void AddReloc(BYTE ByteCnt, BYTE BitShiftC
                    nt, DWORD OffsetPatch, DWORD OffsetReference, int origin)
 13164                        ;{
 13165                        	.line	1801
 13166                        	.line	1802
 13167                        	LOADER
 13168                        	func
 13169                        	.function	1802
 13170                        ~~AddReloc:
 13171                        	longa	on
 13172                        	longi	on
 13173 09:AC33: 3B           	tsc
 13174 09:AC34: 38           	sec
 13175 09:AC35: E9 04 00     	sbc	#L449
 13176 09:AC38: 1B           	tcs
 13177 09:AC39: 0B           	phd
 13178 09:AC3A: 5B           	tcd
 13179             00000004   ByteCnt_0	set	4
 13180             00000006   BitShiftCnt_0	set	6
 13181             00000008   OffsetPatch_0	set	8
  Mon Sep 27 2021  9:39                                                Page 243


 13182             0000000C   OffsetReference_0	set	12
 13183             00000010   origin_0	set	16
 13184                        	.block	1802
 13185                        ;  struct omf_reloc *current_reloc;
 13186                        ;
 13187                        ;  /* Allocation d'une structure Reloc */
 13188                        ;  current_reloc = (struct omf_reloc *) k_calloc(1
                    ,sizeof(struct omf_reloc));
 13189             00000000   current_reloc_1	set	0
 13190                        	.sym	current_reloc,0,138,1,32,82
 13191                        	.sym	ByteCnt,4,14,6,8
 13192                        	.sym	BitShiftCnt,6,14,6,8
 13193                        	.sym	OffsetPatch,8,18,6,32
 13194                        	.sym	OffsetReference,12,18,6,32
 13195                        	.sym	origin,16,5,6,16
 13196                        	.line	1806
 13197 09:AC3B: F4 10 00     	pea	#<$10
 13198 09:AC3E: F4 01 00     	pea	#<$1
 13199 09:AC41: 22 xx xx xx  	jsl	~~k_calloc
 13200 09:AC45: 85 01        	sta	<L450+current_reloc_1
 13201 09:AC47: 86 03        	stx	<L450+current_reloc_1+2
 13202                        ;  if(current_reloc == NULL)
 13203                        	.line	1807
 13204                        ;    ;
 13205 09:AC49: A5 01        	lda	<L450+current_reloc_1
 13206 09:AC4B: 05 03        	ora	<L450+current_reloc_1+2
 13207 09:AC4D: F0 03        	beq	L452
 13208 09:AC4F: 82 00 00     	brl	L10292
 13209                        L452:
 13210                        	.line	1808
 13211                        ;
 13212                        ;  /* Ajoute des valeurs */
 13213                        ;  current_reloc->ByteCnt = ByteCnt;
 13214                        L10292:
 13215                        	.line	1811
 13216 09:AC52: E2 20        	sep	#$20
 13217                        	longa	off
 13218 09:AC54: A5 08        	lda	<L449+ByteCnt_0
 13219 09:AC56: 87 01        	sta	[<L450+current_reloc_1]
 13220 09:AC58: C2 20        	rep	#$20
 13221                        	longa	on
 13222                        ;  current_reloc->BitShiftCnt = BitShiftCnt;
 13223                        	.line	1812
 13224 09:AC5A: E2 20        	sep	#$20
 13225                        	longa	off
 13226 09:AC5C: A5 0A        	lda	<L449+BitShiftCnt_0
 13227 09:AC5E: A0 01 00     	ldy	#$1
 13228 09:AC61: 97 01        	sta	[<L450+current_reloc_1],Y
 13229 09:AC63: C2 20        	rep	#$20
 13230                        	longa	on
 13231                        ;  current_reloc->OffsetPatch = OffsetPatch;
 13232                        	.line	1813
 13233 09:AC65: A5 0C        	lda	<L449+OffsetPatch_0
 13234 09:AC67: A0 02 00     	ldy	#$2
 13235 09:AC6A: 97 01        	sta	[<L450+current_reloc_1],Y
 13236 09:AC6C: A5 0E        	lda	<L449+OffsetPatch_0+2
 13237 09:AC6E: A0 04 00     	ldy	#$4
 13238 09:AC71: 97 01        	sta	[<L450+current_reloc_1],Y
  Mon Sep 27 2021  9:39                                                Page 244


 13239                        ;  current_reloc->OffsetReference = OffsetReferenc
                    e;
 13240                        	.line	1814
 13241 09:AC73: A5 10        	lda	<L449+OffsetReference_0
 13242 09:AC75: A0 06 00     	ldy	#$6
 13243 09:AC78: 97 01        	sta	[<L450+current_reloc_1],Y
 13244 09:AC7A: A5 12        	lda	<L449+OffsetReference_0+2
 13245 09:AC7C: A0 08 00     	ldy	#$8
 13246 09:AC7F: 97 01        	sta	[<L450+current_reloc_1],Y
 13247                        ;
 13248                        ;  /* Origine du Reloc */
 13249                        ;  current_reloc->origin = origin;
 13250                        	.line	1817
 13251 09:AC81: A5 14        	lda	<L449+origin_0
 13252 09:AC83: A0 0A 00     	ldy	#$a
 13253 09:AC86: 97 01        	sta	[<L450+current_reloc_1],Y
 13254                        ;
 13255                        ;  /* Conserve la structure */
 13256                        ;  my_Memory(MEMORY_ADD_RELOC,current_reloc,NULL);
 13257                        	.line	1820
 13258 09:AC88: F4 00 00     	pea	#^$0
 13259 09:AC8B: F4 00 00     	pea	#<$0
 13260 09:AC8E: D4 03        	pei	<L450+current_reloc_1+2
 13261 09:AC90: D4 01        	pei	<L450+current_reloc_1
 13262 09:AC92: F4 0A 00     	pea	#<$a
 13263 09:AC95: 22 xx xx xx  	jsl	~~my_Memory
 13264                        ;}
 13265                        	.line	1821
 13266                        L453:
 13267 09:AC99: A5 06        	lda	<L449+2
 13268 09:AC9B: 85 14        	sta	<L449+2+14
 13269 09:AC9D: A5 05        	lda	<L449+1
 13270 09:AC9F: 85 13        	sta	<L449+1+14
 13271 09:ACA1: 2B           	pld
 13272 09:ACA2: 3B           	tsc
 13273 09:ACA3: 18           	clc
 13274 09:ACA4: 69 12 00     	adc	#L449+14
 13275 09:ACA7: 1B           	tcs
 13276 09:ACA8: 6B           	rtl
 13277                        	.endblock	1821
 13278             00000004   L449	equ	4
 13279             00000001   L450	equ	1
 13280 09:ACA9:              	ends
 13281                        	efunc
 13282                        	.endfunc	1821,1,4
 13283                        	.line	1821
 13284                        ;
 13285                        ;
 13286                        ;/************************************************
                    *************/
 13287                        ;/*  AddInterseg() :  On conserve les INTERSEG de 
                    ce Segment. */
 13288                        ;/************************************************
                    *************/
 13289                        ;static void AddInterseg(BYTE ByteCnt, BYTE BitShi
                    ftCnt, DWORD OffsetPatch, DWORD OffsetReference, WORD FileNu
                    m, WORD SegNum, int origin)
 13290                        ;{
  Mon Sep 27 2021  9:39                                                Page 245


 13291                        	.line	1827
 13292                        	.line	1828
 13293                        	LOADER
 13294                        	func
 13295                        	.function	1828
 13296                        ~~AddInterseg:
 13297                        	longa	on
 13298                        	longi	on
 13299 09:ACA9: 3B           	tsc
 13300 09:ACAA: 38           	sec
 13301 09:ACAB: E9 04 00     	sbc	#L454
 13302 09:ACAE: 1B           	tcs
 13303 09:ACAF: 0B           	phd
 13304 09:ACB0: 5B           	tcd
 13305             00000004   ByteCnt_0	set	4
 13306             00000006   BitShiftCnt_0	set	6
 13307             00000008   OffsetPatch_0	set	8
 13308             0000000C   OffsetReference_0	set	12
 13309             00000010   FileNum_0	set	16
 13310             00000012   SegNum_0	set	18
 13311             00000014   origin_0	set	20
 13312                        	.block	1828
 13313                        ;  struct omf_interseg *current_interseg;
 13314                        ;
 13315                        ;  /* Allocation d'une structure Reloc */
 13316                        ;  current_interseg = (struct omf_interseg *) k_ca
                    lloc(1,sizeof(struct omf_interseg));
 13317             00000000   current_interseg_1	set	0
 13318                        	.sym	current_interseg,0,138,1,32,83
 13319                        	.sym	ByteCnt,4,14,6,8
 13320                        	.sym	BitShiftCnt,6,14,6,8
 13321                        	.sym	OffsetPatch,8,18,6,32
 13322                        	.sym	OffsetReference,12,18,6,32
 13323                        	.sym	FileNum,16,5,6,16
 13324                        	.sym	SegNum,18,5,6,16
 13325                        	.sym	origin,20,5,6,16
 13326                        	.line	1832
 13327 09:ACB1: F4 14 00     	pea	#<$14
 13328 09:ACB4: F4 01 00     	pea	#<$1
 13329 09:ACB7: 22 xx xx xx  	jsl	~~k_calloc
 13330 09:ACBB: 85 01        	sta	<L455+current_interseg_1
 13331 09:ACBD: 86 03        	stx	<L455+current_interseg_1+2
 13332                        ;  if(current_interseg == NULL)
 13333                        	.line	1833
 13334                        ;    ;
 13335 09:ACBF: A5 01        	lda	<L455+current_interseg_1
 13336 09:ACC1: 05 03        	ora	<L455+current_interseg_1+2
 13337 09:ACC3: F0 03        	beq	L457
 13338 09:ACC5: 82 00 00     	brl	L10293
 13339                        L457:
 13340                        	.line	1834
 13341                        ;
 13342                        ;  /* Ajoute des valeurs */
 13343                        ;  current_interseg->ByteCnt = ByteCnt;
 13344                        L10293:
 13345                        	.line	1837
 13346 09:ACC8: E2 20        	sep	#$20
 13347                        	longa	off
  Mon Sep 27 2021  9:39                                                Page 246


 13348 09:ACCA: A5 08        	lda	<L454+ByteCnt_0
 13349 09:ACCC: 87 01        	sta	[<L455+current_interseg_1]
 13350 09:ACCE: C2 20        	rep	#$20
 13351                        	longa	on
 13352                        ;  current_interseg->BitShiftCnt = BitShiftCnt;
 13353                        	.line	1838
 13354 09:ACD0: E2 20        	sep	#$20
 13355                        	longa	off
 13356 09:ACD2: A5 0A        	lda	<L454+BitShiftCnt_0
 13357 09:ACD4: A0 01 00     	ldy	#$1
 13358 09:ACD7: 97 01        	sta	[<L455+current_interseg_1],Y
 13359 09:ACD9: C2 20        	rep	#$20
 13360                        	longa	on
 13361                        ;  current_interseg->OffsetPatch = OffsetPatch;
 13362                        	.line	1839
 13363 09:ACDB: A5 0C        	lda	<L454+OffsetPatch_0
 13364 09:ACDD: A0 02 00     	ldy	#$2
 13365 09:ACE0: 97 01        	sta	[<L455+current_interseg_1],Y
 13366 09:ACE2: A5 0E        	lda	<L454+OffsetPatch_0+2
 13367 09:ACE4: A0 04 00     	ldy	#$4
 13368 09:ACE7: 97 01        	sta	[<L455+current_interseg_1],Y
 13369                        ;  current_interseg->OffsetReference = OffsetRefer
                    ence;
 13370                        	.line	1840
 13371 09:ACE9: A5 10        	lda	<L454+OffsetReference_0
 13372 09:ACEB: A0 06 00     	ldy	#$6
 13373 09:ACEE: 97 01        	sta	[<L455+current_interseg_1],Y
 13374 09:ACF0: A5 12        	lda	<L454+OffsetReference_0+2
 13375 09:ACF2: A0 08 00     	ldy	#$8
 13376 09:ACF5: 97 01        	sta	[<L455+current_interseg_1],Y
 13377                        ;  current_interseg->FileNum = FileNum;
 13378                        	.line	1841
 13379 09:ACF7: A5 14        	lda	<L454+FileNum_0
 13380 09:ACF9: A0 0A 00     	ldy	#$a
 13381 09:ACFC: 97 01        	sta	[<L455+current_interseg_1],Y
 13382                        ;  current_interseg->SegNum = SegNum;
 13383                        	.line	1842
 13384 09:ACFE: A5 16        	lda	<L454+SegNum_0
 13385 09:AD00: A0 0C 00     	ldy	#$c
 13386 09:AD03: 97 01        	sta	[<L455+current_interseg_1],Y
 13387                        ;
 13388                        ;  /* Origine du Reloc */
 13389                        ;  current_interseg->origin = origin;
 13390                        	.line	1845
 13391 09:AD05: A5 18        	lda	<L454+origin_0
 13392 09:AD07: A0 0E 00     	ldy	#$e
 13393 09:AD0A: 97 01        	sta	[<L455+current_interseg_1],Y
 13394                        ;
 13395                        ;  /* Conserve la structure */
 13396                        ;  my_Memory(MEMORY_ADD_INTERSEG,current_interseg,
                    NULL);
 13397                        	.line	1848
 13398 09:AD0C: F4 00 00     	pea	#^$0
 13399 09:AD0F: F4 00 00     	pea	#<$0
 13400 09:AD12: D4 03        	pei	<L455+current_interseg_1+2
 13401 09:AD14: D4 01        	pei	<L455+current_interseg_1
 13402 09:AD16: F4 14 00     	pea	#<$14
 13403 09:AD19: 22 xx xx xx  	jsl	~~my_Memory
  Mon Sep 27 2021  9:39                                                Page 247


 13404                        ;}
 13405                        	.line	1849
 13406                        L458:
 13407 09:AD1D: A5 06        	lda	<L454+2
 13408 09:AD1F: 85 18        	sta	<L454+2+18
 13409 09:AD21: A5 05        	lda	<L454+1
 13410 09:AD23: 85 17        	sta	<L454+1+18
 13411 09:AD25: 2B           	pld
 13412 09:AD26: 3B           	tsc
 13413 09:AD27: 18           	clc
 13414 09:AD28: 69 16 00     	adc	#L454+18
 13415 09:AD2B: 1B           	tcs
 13416 09:AD2C: 6B           	rtl
 13417                        	.endblock	1849
 13418             00000004   L454	equ	4
 13419             00000001   L455	equ	1
 13420 09:AD2D:              	ends
 13421                        	efunc
 13422                        	.endfunc	1849,1,4
 13423                        	.line	1849
 13424                        ;
 13425                        ;
 13426                        ;/************************************************
                    *********************/
 13427                        ;/*  mem_free_END() :  Libération mémoire de la st
                    ructure record_END. */
 13428                        ;/************************************************
                    *********************/
 13429                        ;static void mem_free_END(struct record_END *curre
                    nt_record)
 13430                        ;{
 13431                        	.line	1855
 13432                        	.line	1856
 13433                        	LOADER
 13434                        	func
 13435                        	.function	1856
 13436                        ~~mem_free_END:
 13437                        	longa	on
 13438                        	longi	on
 13439 09:AD2D: 3B           	tsc
 13440 09:AD2E: 38           	sec
 13441 09:AD2F: E9 00 00     	sbc	#L459
 13442 09:AD32: 1B           	tcs
 13443 09:AD33: 0B           	phd
 13444 09:AD34: 5B           	tcd
 13445             00000004   current_record_0	set	4
 13446                        	.block	1856
 13447                        ;  if(current_record)
 13448                        	.sym	current_record,4,138,6,32,56
 13449                        	.line	1857
 13450                        ;    {
 13451 09:AD35: A5 04        	lda	<L459+current_record_0
 13452 09:AD37: 05 06        	ora	<L459+current_record_0+2
 13453 09:AD39: D0 03        	bne	L462
 13454 09:AD3B: 82 08 00     	brl	L10294
 13455                        L462:
 13456                        	.line	1858
 13457                        ;      k_free(current_record);
  Mon Sep 27 2021  9:39                                                Page 248


 13458                        	.line	1859
 13459 09:AD3E: D4 06        	pei	<L459+current_record_0+2
 13460 09:AD40: D4 04        	pei	<L459+current_record_0
 13461 09:AD42: 22 xx xx xx  	jsl	~~k_free
 13462                        ;    }
 13463                        	.line	1860
 13464                        ;}
 13465                        L10294:
 13466                        	.line	1861
 13467                        L463:
 13468 09:AD46: A5 02        	lda	<L459+2
 13469 09:AD48: 85 06        	sta	<L459+2+4
 13470 09:AD4A: A5 01        	lda	<L459+1
 13471 09:AD4C: 85 05        	sta	<L459+1+4
 13472 09:AD4E: 2B           	pld
 13473 09:AD4F: 3B           	tsc
 13474 09:AD50: 18           	clc
 13475 09:AD51: 69 04 00     	adc	#L459+4
 13476 09:AD54: 1B           	tcs
 13477 09:AD55: 6B           	rtl
 13478                        	.endblock	1861
 13479             00000000   L459	equ	0
 13480             00000001   L460	equ	1
 13481 09:AD56:              	ends
 13482                        	efunc
 13483                        	.endfunc	1861,1,0
 13484                        	.line	1861
 13485                        ;
 13486                        ;
 13487                        ;/************************************************
                    *************************/
 13488                        ;/*  mem_free_CONST() :  Libération mémoire de la 
                    structure record_CONST. */
 13489                        ;/************************************************
                    *************************/
 13490                        ;static void mem_free_CONST(struct record_CONST *c
                    urrent_record)
 13491                        ;{
 13492                        	.line	1867
 13493                        	.line	1868
 13494                        	LOADER
 13495                        	func
 13496                        	.function	1868
 13497                        ~~mem_free_CONST:
 13498                        	longa	on
 13499                        	longi	on
 13500 09:AD56: 3B           	tsc
 13501 09:AD57: 38           	sec
 13502 09:AD58: E9 00 00     	sbc	#L464
 13503 09:AD5B: 1B           	tcs
 13504 09:AD5C: 0B           	phd
 13505 09:AD5D: 5B           	tcd
 13506             00000004   current_record_0	set	4
 13507                        	.block	1868
 13508                        ;  if(current_record)
 13509                        	.sym	current_record,4,138,6,32,57
 13510                        	.line	1869
 13511                        ;    {
  Mon Sep 27 2021  9:39                                                Page 249


 13512 09:AD5E: A5 04        	lda	<L464+current_record_0
 13513 09:AD60: 05 06        	ora	<L464+current_record_0+2
 13514 09:AD62: D0 03        	bne	L467
 13515 09:AD64: 82 27 00     	brl	L10295
 13516                        L467:
 13517                        	.line	1870
 13518                        ;      if(current_record->data)
 13519                        	.line	1871
 13520                        ;        k_free(current_record->data);
 13521 09:AD67: A0 0A 00     	ldy	#$a
 13522 09:AD6A: B7 04        	lda	[<L464+current_record_0],Y
 13523 09:AD6C: A0 0C 00     	ldy	#$c
 13524 09:AD6F: 17 04        	ora	[<L464+current_record_0],Y
 13525 09:AD71: D0 03        	bne	L468
 13526 09:AD73: 82 10 00     	brl	L10296
 13527                        L468:
 13528                        	.line	1872
 13529 09:AD76: A0 0C 00     	ldy	#$c
 13530 09:AD79: B7 04        	lda	[<L464+current_record_0],Y
 13531 09:AD7B: 48           	pha
 13532 09:AD7C: A0 0A 00     	ldy	#$a
 13533 09:AD7F: B7 04        	lda	[<L464+current_record_0],Y
 13534 09:AD81: 48           	pha
 13535 09:AD82: 22 xx xx xx  	jsl	~~k_free
 13536                        ;
 13537                        ;      k_free(current_record);
 13538                        L10296:
 13539                        	.line	1874
 13540 09:AD86: D4 06        	pei	<L464+current_record_0+2
 13541 09:AD88: D4 04        	pei	<L464+current_record_0
 13542 09:AD8A: 22 xx xx xx  	jsl	~~k_free
 13543                        ;    }
 13544                        	.line	1875
 13545                        ;}
 13546                        L10295:
 13547                        	.line	1876
 13548                        L469:
 13549 09:AD8E: A5 02        	lda	<L464+2
 13550 09:AD90: 85 06        	sta	<L464+2+4
 13551 09:AD92: A5 01        	lda	<L464+1
 13552 09:AD94: 85 05        	sta	<L464+1+4
 13553 09:AD96: 2B           	pld
 13554 09:AD97: 3B           	tsc
 13555 09:AD98: 18           	clc
 13556 09:AD99: 69 04 00     	adc	#L464+4
 13557 09:AD9C: 1B           	tcs
 13558 09:AD9D: 6B           	rtl
 13559                        	.endblock	1876
 13560             00000000   L464	equ	0
 13561             00000001   L465	equ	1
 13562 09:AD9E:              	ends
 13563                        	efunc
 13564                        	.endfunc	1876,1,0
 13565                        	.line	1876
 13566                        ;
 13567                        ;
 13568                        ;/************************************************
                    *************************/
  Mon Sep 27 2021  9:39                                                Page 250


 13569                        ;/*  mem_free_ALIGN() :  Libération mémoire de la 
                    structure record_ALIGN. */
 13570                        ;/************************************************
                    *************************/
 13571                        ;static void mem_free_ALIGN(struct record_ALIGN *c
                    urrent_record)
 13572                        ;{
 13573                        	.line	1882
 13574                        	.line	1883
 13575                        	LOADER
 13576                        	func
 13577                        	.function	1883
 13578                        ~~mem_free_ALIGN:
 13579                        	longa	on
 13580                        	longi	on
 13581 09:AD9E: 3B           	tsc
 13582 09:AD9F: 38           	sec
 13583 09:ADA0: E9 00 00     	sbc	#L470
 13584 09:ADA3: 1B           	tcs
 13585 09:ADA4: 0B           	phd
 13586 09:ADA5: 5B           	tcd
 13587             00000004   current_record_0	set	4
 13588                        	.block	1883
 13589                        ;  if(current_record)
 13590                        	.sym	current_record,4,138,6,32,58
 13591                        	.line	1884
 13592                        ;    {
 13593 09:ADA6: A5 04        	lda	<L470+current_record_0
 13594 09:ADA8: 05 06        	ora	<L470+current_record_0+2
 13595 09:ADAA: D0 03        	bne	L473
 13596 09:ADAC: 82 08 00     	brl	L10297
 13597                        L473:
 13598                        	.line	1885
 13599                        ;      k_free(current_record);
 13600                        	.line	1886
 13601 09:ADAF: D4 06        	pei	<L470+current_record_0+2
 13602 09:ADB1: D4 04        	pei	<L470+current_record_0
 13603 09:ADB3: 22 xx xx xx  	jsl	~~k_free
 13604                        ;    }
 13605                        	.line	1887
 13606                        ;}
 13607                        L10297:
 13608                        	.line	1888
 13609                        L474:
 13610 09:ADB7: A5 02        	lda	<L470+2
 13611 09:ADB9: 85 06        	sta	<L470+2+4
 13612 09:ADBB: A5 01        	lda	<L470+1
 13613 09:ADBD: 85 05        	sta	<L470+1+4
 13614 09:ADBF: 2B           	pld
 13615 09:ADC0: 3B           	tsc
 13616 09:ADC1: 18           	clc
 13617 09:ADC2: 69 04 00     	adc	#L470+4
 13618 09:ADC5: 1B           	tcs
 13619 09:ADC6: 6B           	rtl
 13620                        	.endblock	1888
 13621             00000000   L470	equ	0
 13622             00000001   L471	equ	1
 13623 09:ADC7:              	ends
  Mon Sep 27 2021  9:39                                                Page 251


 13624                        	efunc
 13625                        	.endfunc	1888,1,0
 13626                        	.line	1888
 13627                        ;
 13628                        ;
 13629                        ;/************************************************
                    *********************/
 13630                        ;/*  mem_free_ORG() :  Libération mémoire de la st
                    ructure record_ORG. */
 13631                        ;/************************************************
                    *********************/
 13632                        ;static void mem_free_ORG(struct record_ORG *curre
                    nt_record)
 13633                        ;{
 13634                        	.line	1894
 13635                        	.line	1895
 13636                        	LOADER
 13637                        	func
 13638                        	.function	1895
 13639                        ~~mem_free_ORG:
 13640                        	longa	on
 13641                        	longi	on
 13642 09:ADC7: 3B           	tsc
 13643 09:ADC8: 38           	sec
 13644 09:ADC9: E9 00 00     	sbc	#L475
 13645 09:ADCC: 1B           	tcs
 13646 09:ADCD: 0B           	phd
 13647 09:ADCE: 5B           	tcd
 13648             00000004   current_record_0	set	4
 13649                        	.block	1895
 13650                        ;  if(current_record)
 13651                        	.sym	current_record,4,138,6,32,59
 13652                        	.line	1896
 13653                        ;    {
 13654 09:ADCF: A5 04        	lda	<L475+current_record_0
 13655 09:ADD1: 05 06        	ora	<L475+current_record_0+2
 13656 09:ADD3: D0 03        	bne	L478
 13657 09:ADD5: 82 08 00     	brl	L10298
 13658                        L478:
 13659                        	.line	1897
 13660                        ;      k_free(current_record);
 13661                        	.line	1898
 13662 09:ADD8: D4 06        	pei	<L475+current_record_0+2
 13663 09:ADDA: D4 04        	pei	<L475+current_record_0
 13664 09:ADDC: 22 xx xx xx  	jsl	~~k_free
 13665                        ;    }
 13666                        	.line	1899
 13667                        ;}
 13668                        L10298:
 13669                        	.line	1900
 13670                        L479:
 13671 09:ADE0: A5 02        	lda	<L475+2
 13672 09:ADE2: 85 06        	sta	<L475+2+4
 13673 09:ADE4: A5 01        	lda	<L475+1
 13674 09:ADE6: 85 05        	sta	<L475+1+4
 13675 09:ADE8: 2B           	pld
 13676 09:ADE9: 3B           	tsc
 13677 09:ADEA: 18           	clc
  Mon Sep 27 2021  9:39                                                Page 252


 13678 09:ADEB: 69 04 00     	adc	#L475+4
 13679 09:ADEE: 1B           	tcs
 13680 09:ADEF: 6B           	rtl
 13681                        	.endblock	1900
 13682             00000000   L475	equ	0
 13683             00000001   L476	equ	1
 13684 09:ADF0:              	ends
 13685                        	efunc
 13686                        	.endfunc	1900,1,0
 13687                        	.line	1900
 13688                        ;
 13689                        ;
 13690                        ;/************************************************
                    *************************/
 13691                        ;/*  mem_free_RELOC() :  Libération mémoire de la 
                    structure record_RELOC. */
 13692                        ;/************************************************
                    *************************/
 13693                        ;static void mem_free_RELOC(struct record_RELOC *c
                    urrent_record)
 13694                        ;{
 13695                        	.line	1906
 13696                        	.line	1907
 13697                        	LOADER
 13698                        	func
 13699                        	.function	1907
 13700                        ~~mem_free_RELOC:
 13701                        	longa	on
 13702                        	longi	on
 13703 09:ADF0: 3B           	tsc
 13704 09:ADF1: 38           	sec
 13705 09:ADF2: E9 00 00     	sbc	#L480
 13706 09:ADF5: 1B           	tcs
 13707 09:ADF6: 0B           	phd
 13708 09:ADF7: 5B           	tcd
 13709             00000004   current_record_0	set	4
 13710                        	.block	1907
 13711                        ;  if(current_record)
 13712                        	.sym	current_record,4,138,6,32,60
 13713                        	.line	1908
 13714                        ;    {
 13715 09:ADF8: A5 04        	lda	<L480+current_record_0
 13716 09:ADFA: 05 06        	ora	<L480+current_record_0+2
 13717 09:ADFC: D0 03        	bne	L483
 13718 09:ADFE: 82 08 00     	brl	L10299
 13719                        L483:
 13720                        	.line	1909
 13721                        ;      k_free(current_record);
 13722                        	.line	1910
 13723 09:AE01: D4 06        	pei	<L480+current_record_0+2
 13724 09:AE03: D4 04        	pei	<L480+current_record_0
 13725 09:AE05: 22 xx xx xx  	jsl	~~k_free
 13726                        ;    }
 13727                        	.line	1911
 13728                        ;}
 13729                        L10299:
 13730                        	.line	1912
 13731                        L484:
  Mon Sep 27 2021  9:39                                                Page 253


 13732 09:AE09: A5 02        	lda	<L480+2
 13733 09:AE0B: 85 06        	sta	<L480+2+4
 13734 09:AE0D: A5 01        	lda	<L480+1
 13735 09:AE0F: 85 05        	sta	<L480+1+4
 13736 09:AE11: 2B           	pld
 13737 09:AE12: 3B           	tsc
 13738 09:AE13: 18           	clc
 13739 09:AE14: 69 04 00     	adc	#L480+4
 13740 09:AE17: 1B           	tcs
 13741 09:AE18: 6B           	rtl
 13742                        	.endblock	1912
 13743             00000000   L480	equ	0
 13744             00000001   L481	equ	1
 13745 09:AE19:              	ends
 13746                        	efunc
 13747                        	.endfunc	1912,1,0
 13748                        	.line	1912
 13749                        ;
 13750                        ;
 13751                        ;/************************************************
                    *******************************/
 13752                        ;/*  mem_free_INTERSEG() :  Libération mémoire de 
                    la structure record_INTERSEG. */
 13753                        ;/************************************************
                    *******************************/
 13754                        ;static void mem_free_INTERSEG(struct record_INTER
                    SEG *current_record)
 13755                        ;{
 13756                        	.line	1918
 13757                        	.line	1919
 13758                        	LOADER
 13759                        	func
 13760                        	.function	1919
 13761                        ~~mem_free_INTERSEG:
 13762                        	longa	on
 13763                        	longi	on
 13764 09:AE19: 3B           	tsc
 13765 09:AE1A: 38           	sec
 13766 09:AE1B: E9 00 00     	sbc	#L485
 13767 09:AE1E: 1B           	tcs
 13768 09:AE1F: 0B           	phd
 13769 09:AE20: 5B           	tcd
 13770             00000004   current_record_0	set	4
 13771                        	.block	1919
 13772                        ;  if(current_record)
 13773                        	.sym	current_record,4,138,6,32,61
 13774                        	.line	1920
 13775                        ;    {
 13776 09:AE21: A5 04        	lda	<L485+current_record_0
 13777 09:AE23: 05 06        	ora	<L485+current_record_0+2
 13778 09:AE25: D0 03        	bne	L488
 13779 09:AE27: 82 08 00     	brl	L10300
 13780                        L488:
 13781                        	.line	1921
 13782                        ;      k_free(current_record);
 13783                        	.line	1922
 13784 09:AE2A: D4 06        	pei	<L485+current_record_0+2
 13785 09:AE2C: D4 04        	pei	<L485+current_record_0
  Mon Sep 27 2021  9:39                                                Page 254


 13786 09:AE2E: 22 xx xx xx  	jsl	~~k_free
 13787                        ;    }
 13788                        	.line	1923
 13789                        ;}
 13790                        L10300:
 13791                        	.line	1924
 13792                        L489:
 13793 09:AE32: A5 02        	lda	<L485+2
 13794 09:AE34: 85 06        	sta	<L485+2+4
 13795 09:AE36: A5 01        	lda	<L485+1
 13796 09:AE38: 85 05        	sta	<L485+1+4
 13797 09:AE3A: 2B           	pld
 13798 09:AE3B: 3B           	tsc
 13799 09:AE3C: 18           	clc
 13800 09:AE3D: 69 04 00     	adc	#L485+4
 13801 09:AE40: 1B           	tcs
 13802 09:AE41: 6B           	rtl
 13803                        	.endblock	1924
 13804             00000000   L485	equ	0
 13805             00000001   L486	equ	1
 13806 09:AE42:              	ends
 13807                        	efunc
 13808                        	.endfunc	1924,1,0
 13809                        	.line	1924
 13810                        ;
 13811                        ;
 13812                        ;/************************************************
                    *************************/
 13813                        ;/*  mem_free_USING() :  Libération mémoire de la 
                    structure record_USING. */
 13814                        ;/************************************************
                    *************************/
 13815                        ;static void mem_free_USING(struct record_USING *c
                    urrent_record)
 13816                        ;{
 13817                        	.line	1930
 13818                        	.line	1931
 13819                        	LOADER
 13820                        	func
 13821                        	.function	1931
 13822                        ~~mem_free_USING:
 13823                        	longa	on
 13824                        	longi	on
 13825 09:AE42: 3B           	tsc
 13826 09:AE43: 38           	sec
 13827 09:AE44: E9 00 00     	sbc	#L490
 13828 09:AE47: 1B           	tcs
 13829 09:AE48: 0B           	phd
 13830 09:AE49: 5B           	tcd
 13831             00000004   current_record_0	set	4
 13832                        	.block	1931
 13833                        ;  if(current_record)
 13834                        	.sym	current_record,4,138,6,32,62
 13835                        	.line	1932
 13836                        ;    {
 13837 09:AE4A: A5 04        	lda	<L490+current_record_0
 13838 09:AE4C: 05 06        	ora	<L490+current_record_0+2
 13839 09:AE4E: D0 03        	bne	L493
  Mon Sep 27 2021  9:39                                                Page 255


 13840 09:AE50: 82 08 00     	brl	L10301
 13841                        L493:
 13842                        	.line	1933
 13843                        ;      k_free(current_record);
 13844                        	.line	1934
 13845 09:AE53: D4 06        	pei	<L490+current_record_0+2
 13846 09:AE55: D4 04        	pei	<L490+current_record_0
 13847 09:AE57: 22 xx xx xx  	jsl	~~k_free
 13848                        ;    }
 13849                        	.line	1935
 13850                        ;}
 13851                        L10301:
 13852                        	.line	1936
 13853                        L494:
 13854 09:AE5B: A5 02        	lda	<L490+2
 13855 09:AE5D: 85 06        	sta	<L490+2+4
 13856 09:AE5F: A5 01        	lda	<L490+1
 13857 09:AE61: 85 05        	sta	<L490+1+4
 13858 09:AE63: 2B           	pld
 13859 09:AE64: 3B           	tsc
 13860 09:AE65: 18           	clc
 13861 09:AE66: 69 04 00     	adc	#L490+4
 13862 09:AE69: 1B           	tcs
 13863 09:AE6A: 6B           	rtl
 13864                        	.endblock	1936
 13865             00000000   L490	equ	0
 13866             00000001   L491	equ	1
 13867 09:AE6B:              	ends
 13868                        	efunc
 13869                        	.endfunc	1936,1,0
 13870                        	.line	1936
 13871                        ;
 13872                        ;
 13873                        ;/************************************************
                    ***************************/
 13874                        ;/*  mem_free_STRONG() :  Libération mémoire de la
                     structure record_STRONG. */
 13875                        ;/************************************************
                    ***************************/
 13876                        ;static void mem_free_STRONG(struct record_STRONG 
                    *current_record)
 13877                        ;{
 13878                        	.line	1942
 13879                        	.line	1943
 13880                        	LOADER
 13881                        	func
 13882                        	.function	1943
 13883                        ~~mem_free_STRONG:
 13884                        	longa	on
 13885                        	longi	on
 13886 09:AE6B: 3B           	tsc
 13887 09:AE6C: 38           	sec
 13888 09:AE6D: E9 00 00     	sbc	#L495
 13889 09:AE70: 1B           	tcs
 13890 09:AE71: 0B           	phd
 13891 09:AE72: 5B           	tcd
 13892             00000004   current_record_0	set	4
 13893                        	.block	1943
  Mon Sep 27 2021  9:39                                                Page 256


 13894                        ;  if(current_record)
 13895                        	.sym	current_record,4,138,6,32,63
 13896                        	.line	1944
 13897                        ;    {
 13898 09:AE73: A5 04        	lda	<L495+current_record_0
 13899 09:AE75: 05 06        	ora	<L495+current_record_0+2
 13900 09:AE77: D0 03        	bne	L498
 13901 09:AE79: 82 08 00     	brl	L10302
 13902                        L498:
 13903                        	.line	1945
 13904                        ;      k_free(current_record);
 13905                        	.line	1946
 13906 09:AE7C: D4 06        	pei	<L495+current_record_0+2
 13907 09:AE7E: D4 04        	pei	<L495+current_record_0
 13908 09:AE80: 22 xx xx xx  	jsl	~~k_free
 13909                        ;    }
 13910                        	.line	1947
 13911                        ;}
 13912                        L10302:
 13913                        	.line	1948
 13914                        L499:
 13915 09:AE84: A5 02        	lda	<L495+2
 13916 09:AE86: 85 06        	sta	<L495+2+4
 13917 09:AE88: A5 01        	lda	<L495+1
 13918 09:AE8A: 85 05        	sta	<L495+1+4
 13919 09:AE8C: 2B           	pld
 13920 09:AE8D: 3B           	tsc
 13921 09:AE8E: 18           	clc
 13922 09:AE8F: 69 04 00     	adc	#L495+4
 13923 09:AE92: 1B           	tcs
 13924 09:AE93: 6B           	rtl
 13925                        	.endblock	1948
 13926             00000000   L495	equ	0
 13927             00000001   L496	equ	1
 13928 09:AE94:              	ends
 13929                        	efunc
 13930                        	.endfunc	1948,1,0
 13931                        	.line	1948
 13932                        ;
 13933                        ;
 13934                        ;/************************************************
                    ***************************/
 13935                        ;/*  mem_free_GLOBAL() :  Libération mémoire de la
                     structure record_GLOBAL. */
 13936                        ;/************************************************
                    ***************************/
 13937                        ;static void mem_free_GLOBAL(struct record_GLOBAL 
                    *current_record)
 13938                        ;{
 13939                        	.line	1954
 13940                        	.line	1955
 13941                        	LOADER
 13942                        	func
 13943                        	.function	1955
 13944                        ~~mem_free_GLOBAL:
 13945                        	longa	on
 13946                        	longi	on
 13947 09:AE94: 3B           	tsc
  Mon Sep 27 2021  9:39                                                Page 257


 13948 09:AE95: 38           	sec
 13949 09:AE96: E9 00 00     	sbc	#L500
 13950 09:AE99: 1B           	tcs
 13951 09:AE9A: 0B           	phd
 13952 09:AE9B: 5B           	tcd
 13953             00000004   current_record_0	set	4
 13954                        	.block	1955
 13955                        ;  if(current_record)
 13956                        	.sym	current_record,4,138,6,32,64
 13957                        	.line	1956
 13958                        ;    {
 13959 09:AE9C: A5 04        	lda	<L500+current_record_0
 13960 09:AE9E: 05 06        	ora	<L500+current_record_0+2
 13961 09:AEA0: D0 03        	bne	L503
 13962 09:AEA2: 82 08 00     	brl	L10303
 13963                        L503:
 13964                        	.line	1957
 13965                        ;      k_free(current_record);
 13966                        	.line	1958
 13967 09:AEA5: D4 06        	pei	<L500+current_record_0+2
 13968 09:AEA7: D4 04        	pei	<L500+current_record_0
 13969 09:AEA9: 22 xx xx xx  	jsl	~~k_free
 13970                        ;    }
 13971                        	.line	1959
 13972                        ;}
 13973                        L10303:
 13974                        	.line	1960
 13975                        L504:
 13976 09:AEAD: A5 02        	lda	<L500+2
 13977 09:AEAF: 85 06        	sta	<L500+2+4
 13978 09:AEB1: A5 01        	lda	<L500+1
 13979 09:AEB3: 85 05        	sta	<L500+1+4
 13980 09:AEB5: 2B           	pld
 13981 09:AEB6: 3B           	tsc
 13982 09:AEB7: 18           	clc
 13983 09:AEB8: 69 04 00     	adc	#L500+4
 13984 09:AEBB: 1B           	tcs
 13985 09:AEBC: 6B           	rtl
 13986                        	.endblock	1960
 13987             00000000   L500	equ	0
 13988             00000001   L501	equ	1
 13989 09:AEBD:              	ends
 13990                        	efunc
 13991                        	.endfunc	1960,1,0
 13992                        	.line	1960
 13993                        ;
 13994                        ;
 13995                        ;/************************************************
                    ***********************/
 13996                        ;/*  mem_free_GEQU() :  Libération mémoire de la s
                    tructure record_GEQU. */
 13997                        ;/************************************************
                    ***********************/
 13998                        ;static void mem_free_GEQU(struct record_GEQU *cur
                    rent_record)
 13999                        ;{
 14000                        	.line	1966
 14001                        	.line	1967
  Mon Sep 27 2021  9:39                                                Page 258


 14002                        	LOADER
 14003                        	func
 14004                        	.function	1967
 14005                        ~~mem_free_GEQU:
 14006                        	longa	on
 14007                        	longi	on
 14008 09:AEBD: 3B           	tsc
 14009 09:AEBE: 38           	sec
 14010 09:AEBF: E9 00 00     	sbc	#L505
 14011 09:AEC2: 1B           	tcs
 14012 09:AEC3: 0B           	phd
 14013 09:AEC4: 5B           	tcd
 14014             00000004   current_record_0	set	4
 14015                        	.block	1967
 14016                        ;  if(current_record)
 14017                        	.sym	current_record,4,138,6,32,65
 14018                        	.line	1968
 14019                        ;    {
 14020 09:AEC5: A5 04        	lda	<L505+current_record_0
 14021 09:AEC7: 05 06        	ora	<L505+current_record_0+2
 14022 09:AEC9: D0 03        	bne	L508
 14023 09:AECB: 82 08 00     	brl	L10304
 14024                        L508:
 14025                        	.line	1969
 14026                        ;      k_free(current_record);
 14027                        	.line	1970
 14028 09:AECE: D4 06        	pei	<L505+current_record_0+2
 14029 09:AED0: D4 04        	pei	<L505+current_record_0
 14030 09:AED2: 22 xx xx xx  	jsl	~~k_free
 14031                        ;    }
 14032                        	.line	1971
 14033                        ;}
 14034                        L10304:
 14035                        	.line	1972
 14036                        L509:
 14037 09:AED6: A5 02        	lda	<L505+2
 14038 09:AED8: 85 06        	sta	<L505+2+4
 14039 09:AEDA: A5 01        	lda	<L505+1
 14040 09:AEDC: 85 05        	sta	<L505+1+4
 14041 09:AEDE: 2B           	pld
 14042 09:AEDF: 3B           	tsc
 14043 09:AEE0: 18           	clc
 14044 09:AEE1: 69 04 00     	adc	#L505+4
 14045 09:AEE4: 1B           	tcs
 14046 09:AEE5: 6B           	rtl
 14047                        	.endblock	1972
 14048             00000000   L505	equ	0
 14049             00000001   L506	equ	1
 14050 09:AEE6:              	ends
 14051                        	efunc
 14052                        	.endfunc	1972,1,0
 14053                        	.line	1972
 14054                        ;
 14055                        ;
 14056                        ;/************************************************
                    *********************/
 14057                        ;/*  mem_free_MEM() :  Libération mémoire de la st
                    ructure record_MEM. */
  Mon Sep 27 2021  9:39                                                Page 259


 14058                        ;/************************************************
                    *********************/
 14059                        ;static void mem_free_MEM(struct record_MEM *curre
                    nt_record)
 14060                        ;{
 14061                        	.line	1978
 14062                        	.line	1979
 14063                        	LOADER
 14064                        	func
 14065                        	.function	1979
 14066                        ~~mem_free_MEM:
 14067                        	longa	on
 14068                        	longi	on
 14069 09:AEE6: 3B           	tsc
 14070 09:AEE7: 38           	sec
 14071 09:AEE8: E9 00 00     	sbc	#L510
 14072 09:AEEB: 1B           	tcs
 14073 09:AEEC: 0B           	phd
 14074 09:AEED: 5B           	tcd
 14075             00000004   current_record_0	set	4
 14076                        	.block	1979
 14077                        ;  if(current_record)
 14078                        	.sym	current_record,4,138,6,32,66
 14079                        	.line	1980
 14080                        ;    {
 14081 09:AEEE: A5 04        	lda	<L510+current_record_0
 14082 09:AEF0: 05 06        	ora	<L510+current_record_0+2
 14083 09:AEF2: D0 03        	bne	L513
 14084 09:AEF4: 82 08 00     	brl	L10305
 14085                        L513:
 14086                        	.line	1981
 14087                        ;      k_free(current_record);
 14088                        	.line	1982
 14089 09:AEF7: D4 06        	pei	<L510+current_record_0+2
 14090 09:AEF9: D4 04        	pei	<L510+current_record_0
 14091 09:AEFB: 22 xx xx xx  	jsl	~~k_free
 14092                        ;    }
 14093                        	.line	1983
 14094                        ;}
 14095                        L10305:
 14096                        	.line	1984
 14097                        L514:
 14098 09:AEFF: A5 02        	lda	<L510+2
 14099 09:AF01: 85 06        	sta	<L510+2+4
 14100 09:AF03: A5 01        	lda	<L510+1
 14101 09:AF05: 85 05        	sta	<L510+1+4
 14102 09:AF07: 2B           	pld
 14103 09:AF08: 3B           	tsc
 14104 09:AF09: 18           	clc
 14105 09:AF0A: 69 04 00     	adc	#L510+4
 14106 09:AF0D: 1B           	tcs
 14107 09:AF0E: 6B           	rtl
 14108                        	.endblock	1984
 14109             00000000   L510	equ	0
 14110             00000001   L511	equ	1
 14111 09:AF0F:              	ends
 14112                        	efunc
 14113                        	.endfunc	1984,1,0
  Mon Sep 27 2021  9:39                                                Page 260


 14114                        	.line	1984
 14115                        ;
 14116                        ;
 14117                        ;/************************************************
                    ***********************/
 14118                        ;/*  mem_free_EXPR() :  Libération mémoire de la s
                    tructure record_EXPR. */
 14119                        ;/************************************************
                    ***********************/
 14120                        ;static void mem_free_EXPR(struct record_EXPR *cur
                    rent_record)
 14121                        ;{
 14122                        	.line	1990
 14123                        	.line	1991
 14124                        	LOADER
 14125                        	func
 14126                        	.function	1991
 14127                        ~~mem_free_EXPR:
 14128                        	longa	on
 14129                        	longi	on
 14130 09:AF0F: 3B           	tsc
 14131 09:AF10: 38           	sec
 14132 09:AF11: E9 00 00     	sbc	#L515
 14133 09:AF14: 1B           	tcs
 14134 09:AF15: 0B           	phd
 14135 09:AF16: 5B           	tcd
 14136             00000004   current_record_0	set	4
 14137                        	.block	1991
 14138                        ;  if(current_record)
 14139                        	.sym	current_record,4,138,6,32,67
 14140                        	.line	1992
 14141                        ;    {
 14142 09:AF17: A5 04        	lda	<L515+current_record_0
 14143 09:AF19: 05 06        	ora	<L515+current_record_0+2
 14144 09:AF1B: D0 03        	bne	L518
 14145 09:AF1D: 82 08 00     	brl	L10306
 14146                        L518:
 14147                        	.line	1993
 14148                        ;      k_free(current_record);
 14149                        	.line	1994
 14150 09:AF20: D4 06        	pei	<L515+current_record_0+2
 14151 09:AF22: D4 04        	pei	<L515+current_record_0
 14152 09:AF24: 22 xx xx xx  	jsl	~~k_free
 14153                        ;    }
 14154                        	.line	1995
 14155                        ;}
 14156                        L10306:
 14157                        	.line	1996
 14158                        L519:
 14159 09:AF28: A5 02        	lda	<L515+2
 14160 09:AF2A: 85 06        	sta	<L515+2+4
 14161 09:AF2C: A5 01        	lda	<L515+1
 14162 09:AF2E: 85 05        	sta	<L515+1+4
 14163 09:AF30: 2B           	pld
 14164 09:AF31: 3B           	tsc
 14165 09:AF32: 18           	clc
 14166 09:AF33: 69 04 00     	adc	#L515+4
 14167 09:AF36: 1B           	tcs
  Mon Sep 27 2021  9:39                                                Page 261


 14168 09:AF37: 6B           	rtl
 14169                        	.endblock	1996
 14170             00000000   L515	equ	0
 14171             00000001   L516	equ	1
 14172 09:AF38:              	ends
 14173                        	efunc
 14174                        	.endfunc	1996,1,0
 14175                        	.line	1996
 14176                        ;
 14177                        ;
 14178                        ;/************************************************
                    *************************/
 14179                        ;/*  mem_free_ZEXPR() :  Libération mémoire de la 
                    structure record_ZEXPR. */
 14180                        ;/************************************************
                    *************************/
 14181                        ;static void mem_free_ZEXPR(struct record_ZEXPR *c
                    urrent_record)
 14182                        ;{
 14183                        	.line	2002
 14184                        	.line	2003
 14185                        	LOADER
 14186                        	func
 14187                        	.function	2003
 14188                        ~~mem_free_ZEXPR:
 14189                        	longa	on
 14190                        	longi	on
 14191 09:AF38: 3B           	tsc
 14192 09:AF39: 38           	sec
 14193 09:AF3A: E9 00 00     	sbc	#L520
 14194 09:AF3D: 1B           	tcs
 14195 09:AF3E: 0B           	phd
 14196 09:AF3F: 5B           	tcd
 14197             00000004   current_record_0	set	4
 14198                        	.block	2003
 14199                        ;  if(current_record)
 14200                        	.sym	current_record,4,138,6,32,68
 14201                        	.line	2004
 14202                        ;    {
 14203 09:AF40: A5 04        	lda	<L520+current_record_0
 14204 09:AF42: 05 06        	ora	<L520+current_record_0+2
 14205 09:AF44: D0 03        	bne	L523
 14206 09:AF46: 82 08 00     	brl	L10307
 14207                        L523:
 14208                        	.line	2005
 14209                        ;      k_free(current_record);
 14210                        	.line	2006
 14211 09:AF49: D4 06        	pei	<L520+current_record_0+2
 14212 09:AF4B: D4 04        	pei	<L520+current_record_0
 14213 09:AF4D: 22 xx xx xx  	jsl	~~k_free
 14214                        ;    }
 14215                        	.line	2007
 14216                        ;}
 14217                        L10307:
 14218                        	.line	2008
 14219                        L524:
 14220 09:AF51: A5 02        	lda	<L520+2
 14221 09:AF53: 85 06        	sta	<L520+2+4
  Mon Sep 27 2021  9:39                                                Page 262


 14222 09:AF55: A5 01        	lda	<L520+1
 14223 09:AF57: 85 05        	sta	<L520+1+4
 14224 09:AF59: 2B           	pld
 14225 09:AF5A: 3B           	tsc
 14226 09:AF5B: 18           	clc
 14227 09:AF5C: 69 04 00     	adc	#L520+4
 14228 09:AF5F: 1B           	tcs
 14229 09:AF60: 6B           	rtl
 14230                        	.endblock	2008
 14231             00000000   L520	equ	0
 14232             00000001   L521	equ	1
 14233 09:AF61:              	ends
 14234                        	efunc
 14235                        	.endfunc	2008,1,0
 14236                        	.line	2008
 14237                        ;
 14238                        ;
 14239                        ;/************************************************
                    *************************/
 14240                        ;/*  mem_free_BEXPR() :  Libération mémoire de la 
                    structure record_BEXPR. */
 14241                        ;/************************************************
                    *************************/
 14242                        ;static void mem_free_BEXPR(struct record_BEXPR *c
                    urrent_record)
 14243                        ;{
 14244                        	.line	2014
 14245                        	.line	2015
 14246                        	LOADER
 14247                        	func
 14248                        	.function	2015
 14249                        ~~mem_free_BEXPR:
 14250                        	longa	on
 14251                        	longi	on
 14252 09:AF61: 3B           	tsc
 14253 09:AF62: 38           	sec
 14254 09:AF63: E9 00 00     	sbc	#L525
 14255 09:AF66: 1B           	tcs
 14256 09:AF67: 0B           	phd
 14257 09:AF68: 5B           	tcd
 14258             00000004   current_record_0	set	4
 14259                        	.block	2015
 14260                        ;  if(current_record)
 14261                        	.sym	current_record,4,138,6,32,69
 14262                        	.line	2016
 14263                        ;    {
 14264 09:AF69: A5 04        	lda	<L525+current_record_0
 14265 09:AF6B: 05 06        	ora	<L525+current_record_0+2
 14266 09:AF6D: D0 03        	bne	L528
 14267 09:AF6F: 82 08 00     	brl	L10308
 14268                        L528:
 14269                        	.line	2017
 14270                        ;      k_free(current_record);
 14271                        	.line	2018
 14272 09:AF72: D4 06        	pei	<L525+current_record_0+2
 14273 09:AF74: D4 04        	pei	<L525+current_record_0
 14274 09:AF76: 22 xx xx xx  	jsl	~~k_free
 14275                        ;    }
  Mon Sep 27 2021  9:39                                                Page 263


 14276                        	.line	2019
 14277                        ;}
 14278                        L10308:
 14279                        	.line	2020
 14280                        L529:
 14281 09:AF7A: A5 02        	lda	<L525+2
 14282 09:AF7C: 85 06        	sta	<L525+2+4
 14283 09:AF7E: A5 01        	lda	<L525+1
 14284 09:AF80: 85 05        	sta	<L525+1+4
 14285 09:AF82: 2B           	pld
 14286 09:AF83: 3B           	tsc
 14287 09:AF84: 18           	clc
 14288 09:AF85: 69 04 00     	adc	#L525+4
 14289 09:AF88: 1B           	tcs
 14290 09:AF89: 6B           	rtl
 14291                        	.endblock	2020
 14292             00000000   L525	equ	0
 14293             00000001   L526	equ	1
 14294 09:AF8A:              	ends
 14295                        	efunc
 14296                        	.endfunc	2020,1,0
 14297                        	.line	2020
 14298                        ;
 14299                        ;
 14300                        ;/************************************************
                    *****************************/
 14301                        ;/*  mem_free_RELEXPR() :  Libération mémoire de l
                    a structure record_RELEXPR. */
 14302                        ;/************************************************
                    *****************************/
 14303                        ;static void mem_free_RELEXPR(struct record_RELEXP
                    R *current_record)
 14304                        ;{
 14305                        	.line	2026
 14306                        	.line	2027
 14307                        	LOADER
 14308                        	func
 14309                        	.function	2027
 14310                        ~~mem_free_RELEXPR:
 14311                        	longa	on
 14312                        	longi	on
 14313 09:AF8A: 3B           	tsc
 14314 09:AF8B: 38           	sec
 14315 09:AF8C: E9 00 00     	sbc	#L530
 14316 09:AF8F: 1B           	tcs
 14317 09:AF90: 0B           	phd
 14318 09:AF91: 5B           	tcd
 14319             00000004   current_record_0	set	4
 14320                        	.block	2027
 14321                        ;  if(current_record)
 14322                        	.sym	current_record,4,138,6,32,70
 14323                        	.line	2028
 14324                        ;    {
 14325 09:AF92: A5 04        	lda	<L530+current_record_0
 14326 09:AF94: 05 06        	ora	<L530+current_record_0+2
 14327 09:AF96: D0 03        	bne	L533
 14328 09:AF98: 82 08 00     	brl	L10309
 14329                        L533:
  Mon Sep 27 2021  9:39                                                Page 264


 14330                        	.line	2029
 14331                        ;      k_free(current_record);
 14332                        	.line	2030
 14333 09:AF9B: D4 06        	pei	<L530+current_record_0+2
 14334 09:AF9D: D4 04        	pei	<L530+current_record_0
 14335 09:AF9F: 22 xx xx xx  	jsl	~~k_free
 14336                        ;    }
 14337                        	.line	2031
 14338                        ;}
 14339                        L10309:
 14340                        	.line	2032
 14341                        L534:
 14342 09:AFA3: A5 02        	lda	<L530+2
 14343 09:AFA5: 85 06        	sta	<L530+2+4
 14344 09:AFA7: A5 01        	lda	<L530+1
 14345 09:AFA9: 85 05        	sta	<L530+1+4
 14346 09:AFAB: 2B           	pld
 14347 09:AFAC: 3B           	tsc
 14348 09:AFAD: 18           	clc
 14349 09:AFAE: 69 04 00     	adc	#L530+4
 14350 09:AFB1: 1B           	tcs
 14351 09:AFB2: 6B           	rtl
 14352                        	.endblock	2032
 14353             00000000   L530	equ	0
 14354             00000001   L531	equ	1
 14355 09:AFB3:              	ends
 14356                        	efunc
 14357                        	.endfunc	2032,1,0
 14358                        	.line	2032
 14359                        ;
 14360                        ;
 14361                        ;/************************************************
                    *************************/
 14362                        ;/*  mem_free_LOCAL() :  Libération mémoire de la 
                    structure record_LOCAL. */
 14363                        ;/************************************************
                    *************************/
 14364                        ;static void mem_free_LOCAL(struct record_LOCAL *c
                    urrent_record)
 14365                        ;{
 14366                        	.line	2038
 14367                        	.line	2039
 14368                        	LOADER
 14369                        	func
 14370                        	.function	2039
 14371                        ~~mem_free_LOCAL:
 14372                        	longa	on
 14373                        	longi	on
 14374 09:AFB3: 3B           	tsc
 14375 09:AFB4: 38           	sec
 14376 09:AFB5: E9 00 00     	sbc	#L535
 14377 09:AFB8: 1B           	tcs
 14378 09:AFB9: 0B           	phd
 14379 09:AFBA: 5B           	tcd
 14380             00000004   current_record_0	set	4
 14381                        	.block	2039
 14382                        ;  if(current_record)
 14383                        	.sym	current_record,4,138,6,32,71
  Mon Sep 27 2021  9:39                                                Page 265


 14384                        	.line	2040
 14385                        ;    {
 14386 09:AFBB: A5 04        	lda	<L535+current_record_0
 14387 09:AFBD: 05 06        	ora	<L535+current_record_0+2
 14388 09:AFBF: D0 03        	bne	L538
 14389 09:AFC1: 82 08 00     	brl	L10310
 14390                        L538:
 14391                        	.line	2041
 14392                        ;      k_free(current_record);
 14393                        	.line	2042
 14394 09:AFC4: D4 06        	pei	<L535+current_record_0+2
 14395 09:AFC6: D4 04        	pei	<L535+current_record_0
 14396 09:AFC8: 22 xx xx xx  	jsl	~~k_free
 14397                        ;    }
 14398                        	.line	2043
 14399                        ;}
 14400                        L10310:
 14401                        	.line	2044
 14402                        L539:
 14403 09:AFCC: A5 02        	lda	<L535+2
 14404 09:AFCE: 85 06        	sta	<L535+2+4
 14405 09:AFD0: A5 01        	lda	<L535+1
 14406 09:AFD2: 85 05        	sta	<L535+1+4
 14407 09:AFD4: 2B           	pld
 14408 09:AFD5: 3B           	tsc
 14409 09:AFD6: 18           	clc
 14410 09:AFD7: 69 04 00     	adc	#L535+4
 14411 09:AFDA: 1B           	tcs
 14412 09:AFDB: 6B           	rtl
 14413                        	.endblock	2044
 14414             00000000   L535	equ	0
 14415             00000001   L536	equ	1
 14416 09:AFDC:              	ends
 14417                        	efunc
 14418                        	.endfunc	2044,1,0
 14419                        	.line	2044
 14420                        ;
 14421                        ;
 14422                        ;/************************************************
                    *********************/
 14423                        ;/*  mem_free_EQU() :  Libération mémoire de la st
                    ructure record_EQU. */
 14424                        ;/************************************************
                    *********************/
 14425                        ;static void mem_free_EQU(struct record_EQU *curre
                    nt_record)
 14426                        ;{
 14427                        	.line	2050
 14428                        	.line	2051
 14429                        	LOADER
 14430                        	func
 14431                        	.function	2051
 14432                        ~~mem_free_EQU:
 14433                        	longa	on
 14434                        	longi	on
 14435 09:AFDC: 3B           	tsc
 14436 09:AFDD: 38           	sec
 14437 09:AFDE: E9 00 00     	sbc	#L540
  Mon Sep 27 2021  9:39                                                Page 266


 14438 09:AFE1: 1B           	tcs
 14439 09:AFE2: 0B           	phd
 14440 09:AFE3: 5B           	tcd
 14441             00000004   current_record_0	set	4
 14442                        	.block	2051
 14443                        ;  if(current_record)
 14444                        	.sym	current_record,4,138,6,32,72
 14445                        	.line	2052
 14446                        ;    {
 14447 09:AFE4: A5 04        	lda	<L540+current_record_0
 14448 09:AFE6: 05 06        	ora	<L540+current_record_0+2
 14449 09:AFE8: D0 03        	bne	L543
 14450 09:AFEA: 82 08 00     	brl	L10311
 14451                        L543:
 14452                        	.line	2053
 14453                        ;      k_free(current_record);
 14454                        	.line	2054
 14455 09:AFED: D4 06        	pei	<L540+current_record_0+2
 14456 09:AFEF: D4 04        	pei	<L540+current_record_0
 14457 09:AFF1: 22 xx xx xx  	jsl	~~k_free
 14458                        ;    }
 14459                        	.line	2055
 14460                        ;}
 14461                        L10311:
 14462                        	.line	2056
 14463                        L544:
 14464 09:AFF5: A5 02        	lda	<L540+2
 14465 09:AFF7: 85 06        	sta	<L540+2+4
 14466 09:AFF9: A5 01        	lda	<L540+1
 14467 09:AFFB: 85 05        	sta	<L540+1+4
 14468 09:AFFD: 2B           	pld
 14469 09:AFFE: 3B           	tsc
 14470 09:AFFF: 18           	clc
 14471 09:B000: 69 04 00     	adc	#L540+4
 14472 09:B003: 1B           	tcs
 14473 09:B004: 6B           	rtl
 14474                        	.endblock	2056
 14475             00000000   L540	equ	0
 14476             00000001   L541	equ	1
 14477 09:B005:              	ends
 14478                        	efunc
 14479                        	.endfunc	2056,1,0
 14480                        	.line	2056
 14481                        ;
 14482                        ;
 14483                        ;/************************************************
                    *******************/
 14484                        ;/*  mem_free_DS() :  Libération mémoire de la str
                    ucture record_DS. */
 14485                        ;/************************************************
                    *******************/
 14486                        ;static void mem_free_DS(struct record_DS *current
                    _record)
 14487                        ;{
 14488                        	.line	2062
 14489                        	.line	2063
 14490                        	LOADER
 14491                        	func
  Mon Sep 27 2021  9:39                                                Page 267


 14492                        	.function	2063
 14493                        ~~mem_free_DS:
 14494                        	longa	on
 14495                        	longi	on
 14496 09:B005: 3B           	tsc
 14497 09:B006: 38           	sec
 14498 09:B007: E9 00 00     	sbc	#L545
 14499 09:B00A: 1B           	tcs
 14500 09:B00B: 0B           	phd
 14501 09:B00C: 5B           	tcd
 14502             00000004   current_record_0	set	4
 14503                        	.block	2063
 14504                        ;  if(current_record)
 14505                        	.sym	current_record,4,138,6,32,73
 14506                        	.line	2064
 14507                        ;    {
 14508 09:B00D: A5 04        	lda	<L545+current_record_0
 14509 09:B00F: 05 06        	ora	<L545+current_record_0+2
 14510 09:B011: D0 03        	bne	L548
 14511 09:B013: 82 08 00     	brl	L10312
 14512                        L548:
 14513                        	.line	2065
 14514                        ;      k_free(current_record);
 14515                        	.line	2066
 14516 09:B016: D4 06        	pei	<L545+current_record_0+2
 14517 09:B018: D4 04        	pei	<L545+current_record_0
 14518 09:B01A: 22 xx xx xx  	jsl	~~k_free
 14519                        ;    }
 14520                        	.line	2067
 14521                        ;}
 14522                        L10312:
 14523                        	.line	2068
 14524                        L549:
 14525 09:B01E: A5 02        	lda	<L545+2
 14526 09:B020: 85 06        	sta	<L545+2+4
 14527 09:B022: A5 01        	lda	<L545+1
 14528 09:B024: 85 05        	sta	<L545+1+4
 14529 09:B026: 2B           	pld
 14530 09:B027: 3B           	tsc
 14531 09:B028: 18           	clc
 14532 09:B029: 69 04 00     	adc	#L545+4
 14533 09:B02C: 1B           	tcs
 14534 09:B02D: 6B           	rtl
 14535                        	.endblock	2068
 14536             00000000   L545	equ	0
 14537             00000001   L546	equ	1
 14538 09:B02E:              	ends
 14539                        	efunc
 14540                        	.endfunc	2068,1,0
 14541                        	.line	2068
 14542                        ;
 14543                        ;
 14544                        ;/************************************************
                    ***************************/
 14545                        ;/*  mem_free_LCONST() :  Libération mémoire de la
                     structure record_LCONST. */
 14546                        ;/************************************************
                    ***************************/
  Mon Sep 27 2021  9:39                                                Page 268


 14547                        ;static void mem_free_LCONST(struct record_LCONST 
                    *current_record)
 14548                        ;{
 14549                        	.line	2074
 14550                        	.line	2075
 14551                        	LOADER
 14552                        	func
 14553                        	.function	2075
 14554                        ~~mem_free_LCONST:
 14555                        	longa	on
 14556                        	longi	on
 14557 09:B02E: 3B           	tsc
 14558 09:B02F: 38           	sec
 14559 09:B030: E9 00 00     	sbc	#L550
 14560 09:B033: 1B           	tcs
 14561 09:B034: 0B           	phd
 14562 09:B035: 5B           	tcd
 14563             00000004   current_record_0	set	4
 14564                        	.block	2075
 14565                        ;  if(current_record)
 14566                        	.sym	current_record,4,138,6,32,74
 14567                        	.line	2076
 14568                        ;    {
 14569 09:B036: A5 04        	lda	<L550+current_record_0
 14570 09:B038: 05 06        	ora	<L550+current_record_0+2
 14571 09:B03A: D0 03        	bne	L553
 14572 09:B03C: 82 27 00     	brl	L10313
 14573                        L553:
 14574                        	.line	2077
 14575                        ;      if(current_record->data)
 14576                        	.line	2078
 14577                        ;        k_free(current_record->data);
 14578 09:B03F: A0 0D 00     	ldy	#$d
 14579 09:B042: B7 04        	lda	[<L550+current_record_0],Y
 14580 09:B044: A0 0F 00     	ldy	#$f
 14581 09:B047: 17 04        	ora	[<L550+current_record_0],Y
 14582 09:B049: D0 03        	bne	L554
 14583 09:B04B: 82 10 00     	brl	L10314
 14584                        L554:
 14585                        	.line	2079
 14586 09:B04E: A0 0F 00     	ldy	#$f
 14587 09:B051: B7 04        	lda	[<L550+current_record_0],Y
 14588 09:B053: 48           	pha
 14589 09:B054: A0 0D 00     	ldy	#$d
 14590 09:B057: B7 04        	lda	[<L550+current_record_0],Y
 14591 09:B059: 48           	pha
 14592 09:B05A: 22 xx xx xx  	jsl	~~k_free
 14593                        ;
 14594                        ;      k_free(current_record);
 14595                        L10314:
 14596                        	.line	2081
 14597 09:B05E: D4 06        	pei	<L550+current_record_0+2
 14598 09:B060: D4 04        	pei	<L550+current_record_0
 14599 09:B062: 22 xx xx xx  	jsl	~~k_free
 14600                        ;    }
 14601                        	.line	2082
 14602                        ;}
 14603                        L10313:
  Mon Sep 27 2021  9:39                                                Page 269


 14604                        	.line	2083
 14605                        L555:
 14606 09:B066: A5 02        	lda	<L550+2
 14607 09:B068: 85 06        	sta	<L550+2+4
 14608 09:B06A: A5 01        	lda	<L550+1
 14609 09:B06C: 85 05        	sta	<L550+1+4
 14610 09:B06E: 2B           	pld
 14611 09:B06F: 3B           	tsc
 14612 09:B070: 18           	clc
 14613 09:B071: 69 04 00     	adc	#L550+4
 14614 09:B074: 1B           	tcs
 14615 09:B075: 6B           	rtl
 14616                        	.endblock	2083
 14617             00000000   L550	equ	0
 14618             00000001   L551	equ	1
 14619 09:B076:              	ends
 14620                        	efunc
 14621                        	.endfunc	2083,1,0
 14622                        	.line	2083
 14623                        ;
 14624                        ;
 14625                        ;/************************************************
                    *************************/
 14626                        ;/*  mem_free_LEXPR() :  Libération mémoire de la 
                    structure record_LEXPR. */
 14627                        ;/************************************************
                    *************************/
 14628                        ;static void mem_free_LEXPR(struct record_LEXPR *c
                    urrent_record)
 14629                        ;{
 14630                        	.line	2089
 14631                        	.line	2090
 14632                        	LOADER
 14633                        	func
 14634                        	.function	2090
 14635                        ~~mem_free_LEXPR:
 14636                        	longa	on
 14637                        	longi	on
 14638 09:B076: 3B           	tsc
 14639 09:B077: 38           	sec
 14640 09:B078: E9 00 00     	sbc	#L556
 14641 09:B07B: 1B           	tcs
 14642 09:B07C: 0B           	phd
 14643 09:B07D: 5B           	tcd
 14644             00000004   current_record_0	set	4
 14645                        	.block	2090
 14646                        ;  if(current_record)
 14647                        	.sym	current_record,4,138,6,32,75
 14648                        	.line	2091
 14649                        ;    {
 14650 09:B07E: A5 04        	lda	<L556+current_record_0
 14651 09:B080: 05 06        	ora	<L556+current_record_0+2
 14652 09:B082: D0 03        	bne	L559
 14653 09:B084: 82 08 00     	brl	L10315
 14654                        L559:
 14655                        	.line	2092
 14656                        ;      k_free(current_record);
 14657                        	.line	2093
  Mon Sep 27 2021  9:39                                                Page 270


 14658 09:B087: D4 06        	pei	<L556+current_record_0+2
 14659 09:B089: D4 04        	pei	<L556+current_record_0
 14660 09:B08B: 22 xx xx xx  	jsl	~~k_free
 14661                        ;    }
 14662                        	.line	2094
 14663                        ;}
 14664                        L10315:
 14665                        	.line	2095
 14666                        L560:
 14667 09:B08F: A5 02        	lda	<L556+2
 14668 09:B091: 85 06        	sta	<L556+2+4
 14669 09:B093: A5 01        	lda	<L556+1
 14670 09:B095: 85 05        	sta	<L556+1+4
 14671 09:B097: 2B           	pld
 14672 09:B098: 3B           	tsc
 14673 09:B099: 18           	clc
 14674 09:B09A: 69 04 00     	adc	#L556+4
 14675 09:B09D: 1B           	tcs
 14676 09:B09E: 6B           	rtl
 14677                        	.endblock	2095
 14678             00000000   L556	equ	0
 14679             00000001   L557	equ	1
 14680 09:B09F:              	ends
 14681                        	efunc
 14682                        	.endfunc	2095,1,0
 14683                        	.line	2095
 14684                        ;
 14685                        ;
 14686                        ;/************************************************
                    *************************/
 14687                        ;/*  mem_free_ENTRY() :  Libération mémoire de la 
                    structure record_ENTRY. */
 14688                        ;/************************************************
                    *************************/
 14689                        ;static void mem_free_ENTRY(struct record_ENTRY *c
                    urrent_record)
 14690                        ;{
 14691                        	.line	2101
 14692                        	.line	2102
 14693                        	LOADER
 14694                        	func
 14695                        	.function	2102
 14696                        ~~mem_free_ENTRY:
 14697                        	longa	on
 14698                        	longi	on
 14699 09:B09F: 3B           	tsc
 14700 09:B0A0: 38           	sec
 14701 09:B0A1: E9 00 00     	sbc	#L561
 14702 09:B0A4: 1B           	tcs
 14703 09:B0A5: 0B           	phd
 14704 09:B0A6: 5B           	tcd
 14705             00000004   current_record_0	set	4
 14706                        	.block	2102
 14707                        ;  if(current_record)
 14708                        	.sym	current_record,4,138,6,32,76
 14709                        	.line	2103
 14710                        ;    {
 14711 09:B0A7: A5 04        	lda	<L561+current_record_0
  Mon Sep 27 2021  9:39                                                Page 271


 14712 09:B0A9: 05 06        	ora	<L561+current_record_0+2
 14713 09:B0AB: D0 03        	bne	L564
 14714 09:B0AD: 82 08 00     	brl	L10316
 14715                        L564:
 14716                        	.line	2104
 14717                        ;      k_free(current_record);
 14718                        	.line	2105
 14719 09:B0B0: D4 06        	pei	<L561+current_record_0+2
 14720 09:B0B2: D4 04        	pei	<L561+current_record_0
 14721 09:B0B4: 22 xx xx xx  	jsl	~~k_free
 14722                        ;    }
 14723                        	.line	2106
 14724                        ;}
 14725                        L10316:
 14726                        	.line	2107
 14727                        L565:
 14728 09:B0B8: A5 02        	lda	<L561+2
 14729 09:B0BA: 85 06        	sta	<L561+2+4
 14730 09:B0BC: A5 01        	lda	<L561+1
 14731 09:B0BE: 85 05        	sta	<L561+1+4
 14732 09:B0C0: 2B           	pld
 14733 09:B0C1: 3B           	tsc
 14734 09:B0C2: 18           	clc
 14735 09:B0C3: 69 04 00     	adc	#L561+4
 14736 09:B0C6: 1B           	tcs
 14737 09:B0C7: 6B           	rtl
 14738                        	.endblock	2107
 14739             00000000   L561	equ	0
 14740             00000001   L562	equ	1
 14741 09:B0C8:              	ends
 14742                        	efunc
 14743                        	.endfunc	2107,1,0
 14744                        	.line	2107
 14745                        ;
 14746                        ;
 14747                        ;/************************************************
                    ***************************/
 14748                        ;/*  mem_free_cRELOC() :  Libération mémoire de la
                     structure record_cRELOC. */
 14749                        ;/************************************************
                    ***************************/
 14750                        ;static void mem_free_cRELOC(struct record_cRELOC 
                    *current_record)
 14751                        ;{
 14752                        	.line	2113
 14753                        	.line	2114
 14754                        	LOADER
 14755                        	func
 14756                        	.function	2114
 14757                        ~~mem_free_cRELOC:
 14758                        	longa	on
 14759                        	longi	on
 14760 09:B0C8: 3B           	tsc
 14761 09:B0C9: 38           	sec
 14762 09:B0CA: E9 00 00     	sbc	#L566
 14763 09:B0CD: 1B           	tcs
 14764 09:B0CE: 0B           	phd
 14765 09:B0CF: 5B           	tcd
  Mon Sep 27 2021  9:39                                                Page 272


 14766             00000004   current_record_0	set	4
 14767                        	.block	2114
 14768                        ;  if(current_record)
 14769                        	.sym	current_record,4,138,6,32,77
 14770                        	.line	2115
 14771                        ;    {
 14772 09:B0D0: A5 04        	lda	<L566+current_record_0
 14773 09:B0D2: 05 06        	ora	<L566+current_record_0+2
 14774 09:B0D4: D0 03        	bne	L569
 14775 09:B0D6: 82 08 00     	brl	L10317
 14776                        L569:
 14777                        	.line	2116
 14778                        ;      k_free(current_record);
 14779                        	.line	2117
 14780 09:B0D9: D4 06        	pei	<L566+current_record_0+2
 14781 09:B0DB: D4 04        	pei	<L566+current_record_0
 14782 09:B0DD: 22 xx xx xx  	jsl	~~k_free
 14783                        ;    }
 14784                        	.line	2118
 14785                        ;}
 14786                        L10317:
 14787                        	.line	2119
 14788                        L570:
 14789 09:B0E1: A5 02        	lda	<L566+2
 14790 09:B0E3: 85 06        	sta	<L566+2+4
 14791 09:B0E5: A5 01        	lda	<L566+1
 14792 09:B0E7: 85 05        	sta	<L566+1+4
 14793 09:B0E9: 2B           	pld
 14794 09:B0EA: 3B           	tsc
 14795 09:B0EB: 18           	clc
 14796 09:B0EC: 69 04 00     	adc	#L566+4
 14797 09:B0EF: 1B           	tcs
 14798 09:B0F0: 6B           	rtl
 14799                        	.endblock	2119
 14800             00000000   L566	equ	0
 14801             00000001   L567	equ	1
 14802 09:B0F1:              	ends
 14803                        	efunc
 14804                        	.endfunc	2119,1,0
 14805                        	.line	2119
 14806                        ;
 14807                        ;
 14808                        ;/************************************************
                    *********************************/
 14809                        ;/*  mem_free_cINTERSEG() :  Libération mémoire de
                     la structure record_cINTERSEG. */
 14810                        ;/************************************************
                    *********************************/
 14811                        ;static void mem_free_cINTERSEG(struct record_cINT
                    ERSEG *current_record)
 14812                        ;{
 14813                        	.line	2125
 14814                        	.line	2126
 14815                        	LOADER
 14816                        	func
 14817                        	.function	2126
 14818                        ~~mem_free_cINTERSEG:
 14819                        	longa	on
  Mon Sep 27 2021  9:39                                                Page 273


 14820                        	longi	on
 14821 09:B0F1: 3B           	tsc
 14822 09:B0F2: 38           	sec
 14823 09:B0F3: E9 00 00     	sbc	#L571
 14824 09:B0F6: 1B           	tcs
 14825 09:B0F7: 0B           	phd
 14826 09:B0F8: 5B           	tcd
 14827             00000004   current_record_0	set	4
 14828                        	.block	2126
 14829                        ;  if(current_record)
 14830                        	.sym	current_record,4,138,6,32,78
 14831                        	.line	2127
 14832                        ;    {
 14833 09:B0F9: A5 04        	lda	<L571+current_record_0
 14834 09:B0FB: 05 06        	ora	<L571+current_record_0+2
 14835 09:B0FD: D0 03        	bne	L574
 14836 09:B0FF: 82 08 00     	brl	L10318
 14837                        L574:
 14838                        	.line	2128
 14839                        ;      k_free(current_record);
 14840                        	.line	2129
 14841 09:B102: D4 06        	pei	<L571+current_record_0+2
 14842 09:B104: D4 04        	pei	<L571+current_record_0
 14843 09:B106: 22 xx xx xx  	jsl	~~k_free
 14844                        ;    }
 14845                        	.line	2130
 14846                        ;}
 14847                        L10318:
 14848                        	.line	2131
 14849                        L575:
 14850 09:B10A: A5 02        	lda	<L571+2
 14851 09:B10C: 85 06        	sta	<L571+2+4
 14852 09:B10E: A5 01        	lda	<L571+1
 14853 09:B110: 85 05        	sta	<L571+1+4
 14854 09:B112: 2B           	pld
 14855 09:B113: 3B           	tsc
 14856 09:B114: 18           	clc
 14857 09:B115: 69 04 00     	adc	#L571+4
 14858 09:B118: 1B           	tcs
 14859 09:B119: 6B           	rtl
 14860                        	.endblock	2131
 14861             00000000   L571	equ	0
 14862             00000001   L572	equ	1
 14863 09:B11A:              	ends
 14864                        	efunc
 14865                        	.endfunc	2131,1,0
 14866                        	.line	2131
 14867                        ;
 14868                        ;
 14869                        ;/************************************************
                    *************************/
 14870                        ;/*  mem_free_SUPER() :  Libération mémoire de la 
                    structure record_SUPER. */
 14871                        ;/************************************************
                    *************************/
 14872                        ;static void mem_free_SUPER(struct record_SUPER *c
                    urrent_record)
 14873                        ;{
  Mon Sep 27 2021  9:39                                                Page 274


 14874                        	.line	2137
 14875                        	.line	2138
 14876                        	LOADER
 14877                        	func
 14878                        	.function	2138
 14879                        ~~mem_free_SUPER:
 14880                        	longa	on
 14881                        	longi	on
 14882 09:B11A: 3B           	tsc
 14883 09:B11B: 38           	sec
 14884 09:B11C: E9 08 00     	sbc	#L576
 14885 09:B11F: 1B           	tcs
 14886 09:B120: 0B           	phd
 14887 09:B121: 5B           	tcd
 14888             00000004   current_record_0	set	4
 14889                        	.block	2138
 14890                        ;  struct subrecord_SuperReloc2 *current_SuperRelo
                    c2;
 14891                        ;  struct subrecord_SuperReloc2 *next_SuperReloc2;
 14892                        ;
 14893                        ;  if(current_record)
 14894             00000000   current_SuperReloc2_1	set	0
 14895             00000004   next_SuperReloc2_1	set	4
 14896                        	.sym	current_SuperReloc2,0,138,1,32,50
 14897                        	.sym	next_SuperReloc2,4,138,1,32,50
 14898                        	.sym	current_record,4,138,6,32,79
 14899                        	.line	2142
 14900                        ;    {
 14901 09:B122: A5 0C        	lda	<L576+current_record_0
 14902 09:B124: 05 0E        	ora	<L576+current_record_0+2
 14903 09:B126: D0 03        	bne	L579
 14904 09:B128: 82 40 00     	brl	L10319
 14905                        L579:
 14906                        	.line	2143
 14907                        ;      for(current_SuperReloc2=current_record->fir
                    st_SuperReloc2; current_SuperReloc2; )
 14908                        	.line	2144
 14909 09:B12B: A0 10 00     	ldy	#$10
 14910 09:B12E: B7 0C        	lda	[<L576+current_record_0],Y
 14911 09:B130: 85 01        	sta	<L577+current_SuperReloc2_1
 14912 09:B132: A0 12 00     	ldy	#$12
 14913 09:B135: B7 0C        	lda	[<L576+current_record_0],Y
 14914 09:B137: 85 03        	sta	<L577+current_SuperReloc2_1+2
 14915 09:B139: 82 1E 00     	brl	L10323
 14916                        L10322:
 14917                        ;        {
 14918                        	.line	2145
 14919                        ;          next_SuperReloc2 = current_SuperReloc2-
                    >next;
 14920                        	.line	2146
 14921 09:B13C: A0 0D 08     	ldy	#$80d
 14922 09:B13F: B7 01        	lda	[<L577+current_SuperReloc2_1],Y
 14923 09:B141: 85 05        	sta	<L577+next_SuperReloc2_1
 14924 09:B143: A0 0F 08     	ldy	#$80f
 14925 09:B146: B7 01        	lda	[<L577+current_SuperReloc2_1],Y
 14926 09:B148: 85 07        	sta	<L577+next_SuperReloc2_1+2
 14927                        ;          k_free(current_SuperReloc2);
 14928                        	.line	2147
  Mon Sep 27 2021  9:39                                                Page 275


 14929 09:B14A: D4 03        	pei	<L577+current_SuperReloc2_1+2
 14930 09:B14C: D4 01        	pei	<L577+current_SuperReloc2_1
 14931 09:B14E: 22 xx xx xx  	jsl	~~k_free
 14932                        ;          current_SuperReloc2 = next_SuperReloc2;
 14933                        	.line	2148
 14934 09:B152: A5 05        	lda	<L577+next_SuperReloc2_1
 14935 09:B154: 85 01        	sta	<L577+current_SuperReloc2_1
 14936 09:B156: A5 07        	lda	<L577+next_SuperReloc2_1+2
 14937 09:B158: 85 03        	sta	<L577+current_SuperReloc2_1+2
 14938                        ;        }
 14939                        	.line	2149
 14940                        L10320:
 14941                        L10323:
 14942 09:B15A: A5 01        	lda	<L577+current_SuperReloc2_1
 14943 09:B15C: 05 03        	ora	<L577+current_SuperReloc2_1+2
 14944 09:B15E: F0 03        	beq	L580
 14945 09:B160: 82 D9 FF     	brl	L10322
 14946                        L580:
 14947                        L10321:
 14948                        ;
 14949                        ;      k_free(current_record);
 14950                        	.line	2151
 14951 09:B163: D4 0E        	pei	<L576+current_record_0+2
 14952 09:B165: D4 0C        	pei	<L576+current_record_0
 14953 09:B167: 22 xx xx xx  	jsl	~~k_free
 14954                        ;    }
 14955                        	.line	2152
 14956                        ;}
 14957                        L10319:
 14958                        	.line	2153
 14959                        L581:
 14960 09:B16B: A5 0A        	lda	<L576+2
 14961 09:B16D: 85 0E        	sta	<L576+2+4
 14962 09:B16F: A5 09        	lda	<L576+1
 14963 09:B171: 85 0D        	sta	<L576+1+4
 14964 09:B173: 2B           	pld
 14965 09:B174: 3B           	tsc
 14966 09:B175: 18           	clc
 14967 09:B176: 69 0C 00     	adc	#L576+4
 14968 09:B179: 1B           	tcs
 14969 09:B17A: 6B           	rtl
 14970                        	.endblock	2153
 14971             00000008   L576	equ	8
 14972             00000001   L577	equ	1
 14973 09:B17B:              	ends
 14974                        	efunc
 14975                        	.endfunc	2153,1,8
 14976                        	.line	2153
 14977                        ;
 14978                        ;
 14979                        ;/************************************************
                    *****************************/
 14980                        ;/*  mem_free_General() :  Libération mémoire de l
                    a structure record_General. */
 14981                        ;/************************************************
                    *****************************/
 14982                        ;static void mem_free_General(struct record_Genera
                    l *current_record)
  Mon Sep 27 2021  9:39                                                Page 276


 14983                        ;{
 14984                        	.line	2159
 14985                        	.line	2160
 14986                        	LOADER
 14987                        	func
 14988                        	.function	2160
 14989                        ~~mem_free_General:
 14990                        	longa	on
 14991                        	longi	on
 14992 09:B17B: 3B           	tsc
 14993 09:B17C: 38           	sec
 14994 09:B17D: E9 00 00     	sbc	#L582
 14995 09:B180: 1B           	tcs
 14996 09:B181: 0B           	phd
 14997 09:B182: 5B           	tcd
 14998             00000004   current_record_0	set	4
 14999                        	.block	2160
 15000                        ;  if(current_record)
 15001                        	.sym	current_record,4,138,6,32,80
 15002                        	.line	2161
 15003                        ;    {
 15004 09:B183: A5 04        	lda	<L582+current_record_0
 15005 09:B185: 05 06        	ora	<L582+current_record_0+2
 15006 09:B187: D0 03        	bne	L585
 15007 09:B189: 82 08 00     	brl	L10324
 15008                        L585:
 15009                        	.line	2162
 15010                        ;      k_free(current_record);
 15011                        	.line	2163
 15012 09:B18C: D4 06        	pei	<L582+current_record_0+2
 15013 09:B18E: D4 04        	pei	<L582+current_record_0
 15014 09:B190: 22 xx xx xx  	jsl	~~k_free
 15015                        ;    }
 15016                        	.line	2164
 15017                        ;}
 15018                        L10324:
 15019                        	.line	2165
 15020                        L586:
 15021 09:B194: A5 02        	lda	<L582+2
 15022 09:B196: 85 06        	sta	<L582+2+4
 15023 09:B198: A5 01        	lda	<L582+1
 15024 09:B19A: 85 05        	sta	<L582+1+4
 15025 09:B19C: 2B           	pld
 15026 09:B19D: 3B           	tsc
 15027 09:B19E: 18           	clc
 15028 09:B19F: 69 04 00     	adc	#L582+4
 15029 09:B1A2: 1B           	tcs
 15030 09:B1A3: 6B           	rtl
 15031                        	.endblock	2165
 15032             00000000   L582	equ	0
 15033             00000001   L583	equ	1
 15034 09:B1A4:              	ends
 15035                        	efunc
 15036                        	.endfunc	2165,1,0
 15037                        	.line	2165
 15038                        ;
 15039                        ;
 15040                        ;/************************************************
  Mon Sep 27 2021  9:39                                                Page 277


                    ***************************************/
 15041                        ;/*  mem_free_Experimental() :  Libération mémoire
                     de la structure record_Experimental. */
 15042                        ;/************************************************
                    ***************************************/
 15043                        ;static void mem_free_Experimental(struct record_E
                    xperimental *current_record)
 15044                        ;{
 15045                        	.line	2171
 15046                        	.line	2172
 15047                        	LOADER
 15048                        	func
 15049                        	.function	2172
 15050                        ~~mem_free_Experimental:
 15051                        	longa	on
 15052                        	longi	on
 15053 09:B1A4: 3B           	tsc
 15054 09:B1A5: 38           	sec
 15055 09:B1A6: E9 00 00     	sbc	#L587
 15056 09:B1A9: 1B           	tcs
 15057 09:B1AA: 0B           	phd
 15058 09:B1AB: 5B           	tcd
 15059             00000004   current_record_0	set	4
 15060                        	.block	2172
 15061                        ;  if(current_record)
 15062                        	.sym	current_record,4,138,6,32,81
 15063                        	.line	2173
 15064                        ;    {
 15065 09:B1AC: A5 04        	lda	<L587+current_record_0
 15066 09:B1AE: 05 06        	ora	<L587+current_record_0+2
 15067 09:B1B0: D0 03        	bne	L590
 15068 09:B1B2: 82 08 00     	brl	L10325
 15069                        L590:
 15070                        	.line	2174
 15071                        ;      k_free(current_record);
 15072                        	.line	2175
 15073 09:B1B5: D4 06        	pei	<L587+current_record_0+2
 15074 09:B1B7: D4 04        	pei	<L587+current_record_0
 15075 09:B1B9: 22 xx xx xx  	jsl	~~k_free
 15076                        ;    }
 15077                        	.line	2176
 15078                        ;}
 15079                        L10325:
 15080                        	.line	2177
 15081                        L591:
 15082 09:B1BD: A5 02        	lda	<L587+2
 15083 09:B1BF: 85 06        	sta	<L587+2+4
 15084 09:B1C1: A5 01        	lda	<L587+1
 15085 09:B1C3: 85 05        	sta	<L587+1+4
 15086 09:B1C5: 2B           	pld
 15087 09:B1C6: 3B           	tsc
 15088 09:B1C7: 18           	clc
 15089 09:B1C8: 69 04 00     	adc	#L587+4
 15090 09:B1CB: 1B           	tcs
 15091 09:B1CC: 6B           	rtl
 15092                        	.endblock	2177
 15093             00000000   L587	equ	0
 15094             00000001   L588	equ	1
  Mon Sep 27 2021  9:39                                                Page 278


 15095 09:B1CD:              	ends
 15096                        	efunc
 15097                        	.endfunc	2177,1,0
 15098                        	.line	2177
 15099                        ;
 15100                        ;/************************************************
                    ************************/
 15101                        ;
 15102                        	.line	2179
 15103                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\omf/OMF_Record.c",2171
 15104                        	xref	~~my_Memory
 15105                        	xref	~~k_free
 15106                        	xref	~~k_calloc
 15107                        	xref	~~strcpy
 15108                        	xref	~~memcpy
 15109                        	.sym	~~mem_free_Experimental,~~mem_free_Exper
                    imental,65,3,0
 15110                        	.sym	~~mem_free_General,~~mem_free_General,65
                    ,3,0
 15111                        	.sym	~~mem_free_SUPER,~~mem_free_SUPER,65,3,0
 15112                        	.sym	~~mem_free_cINTERSEG,~~mem_free_cINTERSE
                    G,65,3,0
 15113                        	.sym	~~mem_free_cRELOC,~~mem_free_cRELOC,65,3
                    ,0
 15114                        	.sym	~~mem_free_ENTRY,~~mem_free_ENTRY,65,3,0
 15115                        	.sym	~~mem_free_LEXPR,~~mem_free_LEXPR,65,3,0
 15116                        	.sym	~~mem_free_LCONST,~~mem_free_LCONST,65,3
                    ,0
 15117                        	.sym	~~mem_free_DS,~~mem_free_DS,65,3,0
 15118                        	.sym	~~mem_free_EQU,~~mem_free_EQU,65,3,0
 15119                        	.sym	~~mem_free_LOCAL,~~mem_free_LOCAL,65,3,0
 15120                        	.sym	~~mem_free_RELEXPR,~~mem_free_RELEXPR,65
                    ,3,0
 15121                        	.sym	~~mem_free_BEXPR,~~mem_free_BEXPR,65,3,0
 15122                        	.sym	~~mem_free_ZEXPR,~~mem_free_ZEXPR,65,3,0
 15123                        	.sym	~~mem_free_EXPR,~~mem_free_EXPR,65,3,0
 15124                        	.sym	~~mem_free_MEM,~~mem_free_MEM,65,3,0
 15125                        	.sym	~~mem_free_GEQU,~~mem_free_GEQU,65,3,0
 15126                        	.sym	~~mem_free_GLOBAL,~~mem_free_GLOBAL,65,3
                    ,0
 15127                        	.sym	~~mem_free_STRONG,~~mem_free_STRONG,65,3
                    ,0
 15128                        	.sym	~~mem_free_USING,~~mem_free_USING,65,3,0
 15129                        	.sym	~~mem_free_INTERSEG,~~mem_free_INTERSEG,
                    65,3,0
 15130                        	.sym	~~mem_free_RELOC,~~mem_free_RELOC,65,3,0
 15131                        	.sym	~~mem_free_ORG,~~mem_free_ORG,65,3,0
 15132                        	.sym	~~mem_free_ALIGN,~~mem_free_ALIGN,65,3,0
 15133                        	.sym	~~mem_free_CONST,~~mem_free_CONST,65,3,0
 15134                        	.sym	~~mem_free_END,~~mem_free_END,65,3,0
 15135                        	.sym	~~AddInterseg,~~AddInterseg,65,3,0
 15136                        	.sym	~~AddReloc,~~AddReloc,65,3,0
 15137                        	.sym	~~DecodeSuperInterseg2536,~~DecodeSuperI
                    nterseg2536,1098,3,32,55
 15138                        	.sym	~~DecodeSuperInterseg1324,~~DecodeSuperI
                    nterseg1324,1098,3,32,54
 15139                        	.sym	~~DecodeSuperInterseg212,~~DecodeSuperIn
  Mon Sep 27 2021  9:39                                                Page 279


                    terseg212,1098,3,32,53
 15140                        	.sym	~~DecodeSuperInterseg1,~~DecodeSuperInte
                    rseg1,1098,3,32,52
 15141                        	.sym	~~DecodeSuperReloc3,~~DecodeSuperReloc3,
                    1098,3,32,51
 15142                        	.sym	~~DecodeSuperReloc2,~~DecodeSuperReloc2,
                    1098,3,32,50
 15143                        	.sym	~~DecodeRecordExperimental,~~DecodeRecor
                    dExperimental,1089,3,32
 15144                        	.sym	~~DecodeRecordGeneral,~~DecodeRecordGene
                    ral,1089,3,32
 15145                        	.sym	~~DecodeRecordSUPER,~~DecodeRecordSUPER,
                    1089,3,32
 15146                        	.sym	~~DecodeRecordcINTERSEG,~~DecodeRecordcI
                    NTERSEG,1089,3,32
 15147                        	.sym	~~DecodeRecordcRELOC,~~DecodeRecordcRELO
                    C,1089,3,32
 15148                        	.sym	~~DecodeRecordENTRY,~~DecodeRecordENTRY,
                    1089,3,32
 15149                        	.sym	~~DecodeRecordLEXPR,~~DecodeRecordLEXPR,
                    1089,3,32
 15150                        	.sym	~~DecodeRecordLCONST,~~DecodeRecordLCONS
                    T,1089,3,32
 15151                        	.sym	~~DecodeRecordDS,~~DecodeRecordDS,1089,3
                    ,32
 15152                        	.sym	~~DecodeRecordEQU,~~DecodeRecordEQU,1089
                    ,3,32
 15153                        	.sym	~~DecodeRecordLOCAL,~~DecodeRecordLOCAL,
                    1089,3,32
 15154                        	.sym	~~DecodeRecordRELEXPR,~~DecodeRecordRELE
                    XPR,1089,3,32
 15155                        	.sym	~~DecodeRecordBEXPR,~~DecodeRecordBEXPR,
                    1089,3,32
 15156                        	.sym	~~DecodeRecordZEXPR,~~DecodeRecordZEXPR,
                    1089,3,32
 15157                        	.sym	~~DecodeRecordEXPR,~~DecodeRecordEXPR,10
                    89,3,32
 15158                        	.sym	~~DecodeRecordMEM,~~DecodeRecordMEM,1089
                    ,3,32
 15159                        	.sym	~~DecodeRecordGEQU,~~DecodeRecordGEQU,10
                    89,3,32
 15160                        	.sym	~~DecodeRecordGLOBAL,~~DecodeRecordGLOBA
                    L,1089,3,32
 15161                        	.sym	~~DecodeRecordSTRONG,~~DecodeRecordSTRON
                    G,1089,3,32
 15162                        	.sym	~~DecodeRecordUSING,~~DecodeRecordUSING,
                    1089,3,32
 15163                        	.sym	~~DecodeRecordINTERSEG,~~DecodeRecordINT
                    ERSEG,1089,3,32
 15164                        	.sym	~~DecodeRecordRELOC,~~DecodeRecordRELOC,
                    1089,3,32
 15165                        	.sym	~~DecodeRecordORG,~~DecodeRecordORG,1089
                    ,3,32
 15166                        	.sym	~~DecodeRecordALIGN,~~DecodeRecordALIGN,
                    1089,3,32
 15167                        	.sym	~~DecodeRecordCONST,~~DecodeRecordCONST,
                    1089,3,32
 15168                        	.sym	~~DecodeRecordEND,~~DecodeRecordEND,1089
  Mon Sep 27 2021  9:39                                                Page 280


                    ,3,32
 15169                        	.sym	~~my_Memory,~~my_Memory,65,18,0
 15170                        	.sym	FRESULT,0,5,14,16
 15171                        	.sym	MKFS_PARM,0,10,14,80,124
 15172                        	.sym	FILINFO,0,10,14,2224,123
 15173                        	.sym	DIR,0,10,14,416,122
 15174                        	.sym	FIL,0,10,14,4400,121
 15175                        	.sym	FFOBJID,0,10,14,128,120
 15176                        	.sym	FATFS,0,10,14,4504,119
 15177                        	.sym	LBA_t,0,18,14,32
 15178                        	.sym	FSIZE_t,0,18,14,32
 15179                        	.sym	TCHAR,0,14,14,8
 15180                        	.sym	PCOMMANDARGS,0,138,14,32,118
 15181                        	.sym	COMMANDARGS,0,10,14,64,118
 15182                        	.sym	PTOKENIZESTATE,0,133,14,32
 15183                        	.sym	TOKENIZESTATE,0,5,14,16
 15184                        	.sym	PTOKEN,0,138,14,32,117
 15185                        	.sym	TOKEN,0,10,14,64,117
 15186                        	.sym	PTOKENTYPE,0,133,14,32
 15187                        	.sym	TOKENTYPE,0,5,14,16
 15188                        	.sym	FXCommandHandler,0,656,14,32
 15189                        	.sym	PCONSOLECTX,0,138,14,32,116
 15190                        	.sym	CONSOLECTX,0,10,14,1144,116
 15191                        	.sym	PSPINNERCTX,0,138,14,32,115
 15192                        	.sym	SPINNERCTX,0,10,14,48,115
 15193                        	.sym	HCLIP,0,138,14,32,114
 15194                        	.sym	PCLIPBOARD_DATA,0,138,14,32,114
 15195                        	.sym	CLIPBOARD_DATA,0,10,14,168,114
 15196                        	.sym	PEVENTMANAGER,0,138,14,32,113
 15197                        	.sym	EVENTMANAGER,0,10,14,192,113
 15198                        	.sym	EV_RUN,0,656,14,32
 15199                        	.sym	EV_QUERY_METRIC,0,656,14,32
 15200                        	.sym	EV_CONFIGURE,0,656,14,32
 15201                        	.sym	EV_UNINIT,0,641,14,32
 15202                        	.sym	EV_INIT,0,8833,14,32
 15203                        	.sym	PMOUSE_MSG_STATE,0,138,14,32,112
 15204                        	.sym	MOUSE_MSG_STATE,0,10,14,184,112
 15205                        	.sym	PFXEVENTPROCESS,0,138,14,32,111
 15206                        	.sym	FXEVENTPROCESS,0,10,14,64,111
 15207                        	.sym	FXASYNCPROCESS,0,641,14,32
 15208                        	.sym	PMARSHALDATA,0,139,14,32,110
 15209                        	.sym	MARSHALDATA,0,11,14,32,110
 15210                        	.sym	FXIDLEPROCESS,0,641,14,32
 15211                        	.sym	FXEventProc,0,641,14,32
 15212                        	.sym	PMOUSEMSGDATA,0,138,14,32,109
 15213                        	.sym	MOUSEMSGDATA,0,10,14,64,109
 15214                        	.sym	MSGIRQ,0,5,14,16
 15215                        	.sym	MAINLOOPARGS,0,10,14,16,108
 15216                        	.sym	PEACHCHILD_MSG,0,138,14,32,107
 15217                        	.sym	EACHCHILD_MSG,0,10,14,64,107
 15218                        	.sym	PMSGBOX_DATA,0,138,14,32,106
 15219                        	.sym	MSGBOX_DATA,0,10,14,96,106
 15220                        	.sym	PDESKTOP_DATA,0,138,14,32,105
 15221                        	.sym	DESKTOP_DATA,0,10,14,64,105
 15222                        	.sym	PWINDOWMANAGER,0,138,14,32,104
 15223                        	.sym	WINDOWMANAGER,0,10,14,160,104
 15224                        	.sym	WM_DOPROCS,0,641,14,32
 15225                        	.sym	WM_QUERY_METRIC,0,656,14,32
  Mon Sep 27 2021  9:39                                                Page 281


 15226                        	.sym	WM_CONFIGURE,0,656,14,32
 15227                        	.sym	WM_HANDLE_EVENT,0,8833,14,32
 15228                        	.sym	WM_EVENTS,0,641,14,32
 15229                        	.sym	PCUR_PALETTE_MAP,0,138,14,32,103
 15230                        	.sym	CUR_PALETTE_MAP,0,10,14,400,103
 15231                        	.sym	PCLICKDETECTED,0,138,14,32,102
 15232                        	.sym	CLICKDETECTED,0,10,14,64,102
 15233                        	.sym	OBJECTCLICKED,0,641,14,32
 15234                        	.sym	PALLOCATIONHEADER,0,138,14,32,101
 15235                        	.sym	ALLOCATIONHEADER,0,10,14,80,101
 15236                        	.sym	PIPCPORT,0,138,14,32,100
 15237                        	.sym	IPCPORT,0,10,14,144,100
 15238                        	.sym	~~k_free,~~k_free,65,18,0
 15239                        	.sym	~~k_calloc,~~k_calloc,1089,18,32
 15240                        	.sym	MemoryCallback,0,641,14,32
 15241                        	.sym	PFXMEMORYMAP,0,138,14,32,99
 15242                        	.sym	FXMEMORYMAP,0,10,14,2072,99
 15243                        	.sym	UMM_HEAP_INFO,0,10,14,256,98
 15244                        	.sym	PEXECUTIVE,0,138,14,32,97
 15245                        	.sym	EXECUTIVE,0,10,14,128,97
 15246                        	.sym	EX_QUERY_METRIC,0,656,14,32
 15247                        	.sym	EX_CONFIGURE,0,656,14,32
 15248                        	.sym	EX_UNINIT,0,641,14,32
 15249                        	.sym	EX_INIT,0,8833,14,32
 15250                        	.sym	PFXSTRING,0,138,14,32,96
 15251                        	.sym	FXSTRING,0,10,14,64,96
 15252                        	.sym	PIRQCHAIN,0,138,14,32,95
 15253                        	.sym	IRQCHAIN,0,10,14,128,95
 15254                        	.sym	DEVICEDRIVER_COMMAND,0,654,14,32
 15255                        	.sym	DEVICEDRIVER_UNLOAD,0,654,14,32
 15256                        	.sym	DEVICEDRIVER_WRITE,0,654,14,32
 15257                        	.sym	DEVICEDRIVER_READ,0,654,14,32
 15258                        	.sym	DEVICEDRIVER_LOAD,0,654,14,32
 15259                        	.sym	DEVICEDRIVER_IRQ,0,641,14,32
 15260                        	.sym	PFX_BLOCK_DEVICE_DRIVER,0,138,14,32,94
 15261                        	.sym	FX_BLOCK_DEVICE_DRIVER,0,10,14,808,94
 15262                        	.sym	GETDRIVERDEF,0,8842,14,32,93
 15263                        	.sym	PFX_DEVICE_DRIVER,0,138,14,32,93
 15264                        	.sym	FX_DEVICE_DRIVER,0,10,14,776,93
 15265                        	.sym	PSEGMENTHEADER,0,138,14,32,92
 15266                        	.sym	SEGMENTHEADER,0,10,14,160,92
 15267                        	.sym	PDEBUGBYTEBITS,0,138,14,32,91
 15268                        	.sym	DEBUGBYTEBITS,0,10,14,8,91
 15269                        	.sym	PFXENVIRONMENT,0,138,14,32,90
 15270                        	.sym	FXENVIRONMENT,0,10,14,96,90
 15271                        	.sym	PFXZEROPAGE,0,138,14,32,89
 15272                        	.sym	FXZEROPAGE,0,10,14,720,89
 15273                        	.sym	IRQBUFFER,0,10,14,32,88
 15274                        	.sym	KERNELTRAPCALL,0,641,14,32
 15275                        	.sym	PFXKERNEL_API_CALLTABLE,0,138,14,32,87
 15276                        	.sym	FXKERNEL_API_CALLTABLE,0,10,14,8192,87
 15277                        	.sym	FOREACHNODEUNTIL,0,654,14,32
 15278                        	.sym	FOREACHNODE,0,641,14,32
 15279                        	.sym	~~strcpy,~~strcpy,1102,18,32
 15280                        	.sym	~~memcpy,~~memcpy,1089,18,32
 15281                        	.sym	Boolean_T,0,5,14,16
 15282                        	.sym	ldiv_t,0,10,14,64,85
 15283                        	.sym	div_t,0,10,14,32,84
  Mon Sep 27 2021  9:39                                                Page 282


 15284                        	.sym	wctype_t,0,16,14,16
 15285                        	.sym	wint_t,0,16,14,16
 15286                        	.sym	wchar_t,0,14,14,8
 15287                        	.sym	ptrdiff_t,0,7,14,32
 15288                        	.sym	size_t,0,16,14,16
 15289                        	.sym	~~mem_free_record,~~mem_free_record,65,2
                    ,0
 15290                        	.sym	~~GetSUPERType,~~GetSUPERType,1102,2,32
 15291                        	.sym	~~GetRecordName,~~GetRecordName,1102,2,3
                    2
 15292                        	.sym	~~DecodeOneRecord,~~DecodeOneRecord,1098
                    ,2,32,49
 15293                        	.sym	PFXRFHEADER_STRING_ENTRY,0,138,14,32,48
 15294                        	.sym	FXRFHEADER_STRING_ENTRY,0,10,14,40,48
 15295                        	.sym	PFXRFHEADER_STRING,0,138,14,32,47
 15296                        	.sym	FXRFHEADER_STRING,0,10,14,32,47
 15297                        	.sym	PFXRFHEADER_FONT,0,138,14,32,46
 15298                        	.sym	FXRFHEADER_FONT,0,10,14,144,46
 15299                        	.sym	PFXRFHEADER,0,138,14,32,45
 15300                        	.sym	FXRFHEADER,0,10,14,72,45
 15301                        	.sym	PFXCOMBUFFER,0,138,14,32,44
 15302                        	.sym	FXCOMBUFFER,0,10,14,2080,44
 15303                        	.sym	PSUBMENULIST,0,138,14,32,43
 15304                        	.sym	SUBMENULIST,0,10,14,40,43
 15305                        	.sym	HSUBMENU,0,7,14,32
 15306                        	.sym	PSUBMENU,0,138,14,32,42
 15307                        	.sym	SUBMENU,0,10,14,64,42
 15308                        	.sym	MenuAction,0,641,14,32
 15309                        	.sym	PMENUANCHOR,0,138,14,32,41
 15310                        	.sym	MENUANCHOR,0,10,14,272,41
 15311                        	.sym	PMSGBOX,0,138,14,32,40
 15312                        	.sym	MSGBOX,0,10,14,144,40
 15313                        	.sym	PTEXTBOX,0,138,14,32,39
 15314                        	.sym	TEXTBOX,0,10,14,144,39
 15315                        	.sym	PLISTBOX,0,138,14,32,38
 15316                        	.sym	LISTBOX,0,10,14,240,38
 15317                        	.sym	PSCROLLBAR,0,138,14,32,37
 15318                        	.sym	SCROLLBAR,0,10,14,240,37
 15319                        	.sym	PBUTTON,0,138,14,32,36
 15320                        	.sym	BUTTON,0,10,14,96,36
 15321                        	.sym	PMENUDROPDOWNDATA,0,138,14,32,35
 15322                        	.sym	MENUDROPDOWNDATA,0,10,14,5152,35
 15323                        	.sym	PMENUTAG,0,138,14,32,34
 15324                        	.sym	MENUTAG,0,10,14,160,34
 15325                        	.sym	PMENU,0,138,14,32,33
 15326                        	.sym	MENU,0,10,14,280,33
 15327                        	.sym	HMENURESOURCE,0,129,14,32
 15328                        	.sym	FONTMETRIC,0,10,14,32,32
 15329                        	.sym	TITLE,0,142,14,32
 15330                        	.sym	PHANDLE,0,1153,14,32
 15331                        	.sym	HANDLE,0,129,14,32
 15332                        	.sym	PWINDOWEX,0,138,14,32,31
 15333                        	.sym	WINDOWEX,0,10,14,3880,31
 15334                        	.sym	PWINDOW,0,138,14,32,30
 15335                        	.sym	WINDOW,0,10,14,3904,30
 15336                        	.sym	PDRAGDATA,0,138,14,32,29
 15337                        	.sym	DRAGDATA,0,10,14,216,29
 15338                        	.sym	PNCCLICKABLE,0,138,14,32,28
  Mon Sep 27 2021  9:39                                                Page 283


 15339                        	.sym	NCCLICKABLE,0,10,14,136,28
 15340                        	.sym	HCLICKABLE,0,7,14,32
 15341                        	.sym	PCLICKABLE,0,138,14,32,27
 15342                        	.sym	CLICKABLE,0,10,14,152,27
 15343                        	.sym	PWNDCLASS,0,138,14,32,26
 15344                        	.sym	WNDCLASS,0,10,14,272,26
 15345                        	.sym	HBRUSH,0,129,14,32
 15346                        	.sym	HCURSOR,0,129,14,32
 15347                        	.sym	HICON,0,129,14,32
 15348                        	.sym	HINSTANCE,0,129,14,32
 15349                        	.sym	FXWndProc,0,654,14,32
 15350                        	.sym	PDRECT,0,138,14,32,25
 15351                        	.sym	DRECT,0,10,14,112,25
 15352                        	.sym	PRECTP,0,138,14,32,24
 15353                        	.sym	RECTP,0,10,14,96,24
 15354                        	.sym	PRECT,0,138,14,32,23
 15355                        	.sym	RECT,0,10,14,112,23
 15356                        	.sym	PPOINT,0,138,14,32,22
 15357                        	.sym	POINT,0,10,14,32,22
 15358                        	.sym	PFXPROPERTY,0,138,14,32,20
 15359                        	.sym	FXPROPERTY,0,10,14,384,20
 15360                        	.sym	PKEYSTATE,0,138,14,32,19
 15361                        	.sym	KEYSTATE,0,10,14,112,19
 15362                        	.sym	SCANCODE,0,14,14,8
 15363                        	.sym	KEYCODE,0,16,14,16
 15364                        	.sym	PFXPROCESSMESSAGE,0,138,14,32,18
 15365                        	.sym	FXPROCESSMESSAGE,0,10,14,112,18
 15366                        	.sym	PFXPROCESS,0,138,14,32,17
 15367                        	.sym	FXPROCESS,0,10,14,800,17
 15368                        	.sym	PDESKTOP_CONTROL,0,138,14,32,16
 15369                        	.sym	DESKTOP_CONTROL,0,10,14,392,16
 15370                        	.sym	PCONSOLE_CONTROL,0,138,14,32,15
 15371                        	.sym	CONSOLE_CONTROL,0,10,14,448,15
 15372                        	.sym	FXProcessProc,0,641,14,32
 15373                        	.sym	PFXCMDMESSAGE,0,138,14,32,14
 15374                        	.sym	FXCMDMESSAGE,0,10,14,312,14
 15375                        	.sym	PFXOSMESSAGE,0,138,14,32,13
 15376                        	.sym	FXOSMESSAGE,0,10,14,312,13
 15377                        	.sym	PINT_REGS,0,138,14,32,12
 15378                        	.sym	INT_REGS,0,10,14,104,12
 15379                        	.sym	TASK_STACK,0,10,14,32,11
 15380                        	.sym	TASK,0,10,14,48,10
 15381                        	.sym	PIRQDATA,0,138,14,32,9
 15382                        	.sym	IRQDATA,0,10,14,48,9
 15383                        	.sym	HMENU,0,129,14,32
 15384                        	.sym	HWND,0,129,14,32
 15385                        	.sym	MSGDATA,0,14,14,8
 15386                        	.sym	MSGDEST,0,18,14,32
 15387                        	.sym	MSGSRC,0,18,14,32
 15388                        	.sym	MSGTYPE,0,16,14,16
 15389                        	.sym	PROCESS_RESOURCE_LIST,0,138,14,32,3
 15390                        	.sym	PROCESS_TLS_LIST,0,138,14,32,3
 15391                        	.sym	SEMAPHORE_LIST,0,138,14,32,3
 15392                        	.sym	FILE_BLOCK_LIST,0,138,14,32,3
 15393                        	.sym	FILE_PATH_LIST,0,138,14,32,3
 15394                        	.sym	PROCEDURE_LIST,0,138,14,32,3
 15395                        	.sym	FILE_HANDLE,0,138,14,32,8
 15396                        	.sym	FILE_BLOCK,0,10,14,552,8
  Mon Sep 27 2021  9:39                                                Page 284


 15397                        	.sym	SEMAPHORE,0,10,14,16,7
 15398                        	.sym	PPROCESS_SIGNAL,0,138,14,32,6
 15399                        	.sym	PROCESS_SIGNAL,0,10,14,16,6
 15400                        	.sym	KRESULT,0,18,14,32
 15401                        	.sym	PKERNEL_ERROR,0,138,14,32,5
 15402                        	.sym	KERNEL_ERROR,0,10,14,32,5
 15403                        	.sym	PROCESS_STATUS,0,16,14,16
 15404                        	.sym	FILE_PATH_NAME,0,142,14,32
 15405                        	.sym	PROCESS_RESOURCE,0,129,14,32
 15406                        	.sym	PROCESS_TLS,0,129,14,32
 15407                        	.sym	PROCESS_CTX,0,129,14,32
 15408                        	.sym	USERID,0,16,14,16
 15409                        	.sym	PROCESS_ID,0,18,14,32
 15410                        	.sym	PROCESS_BANK,0,14,14,8
 15411                        	.sym	PFXQUEUE,0,138,14,32,4
 15412                        	.sym	FXQUEUE,0,10,14,80,4
 15413                        	.sym	PFXNODELIST,0,138,14,32,3
 15414                        	.sym	FXNODELIST,0,10,14,96,3
 15415                        	.sym	NodeListDeallocator,0,641,14,32
 15416                        	.sym	PFXNODE,0,138,14,32,2
 15417                        	.sym	FXNODE,0,10,14,384,2
 15418                        	.sym	PBYTEBITS,0,138,14,32,1
 15419                        	.sym	BYTEBITS,0,10,14,8,1
 15420                        	.sym	HRESULT,0,18,14,32
 15421                        	.sym	LPWCHAR,0,144,14,32
 15422                        	.sym	WCHAR,0,16,14,16
 15423                        	.sym	HSTRINGTABLE,0,129,14,32
 15424                        	.sym	HCOLOR,0,129,14,32
 15425                        	.sym	HFONT,0,129,14,32
 15426                        	.sym	HDC,0,129,14,32
 15427                        	.sym	HPOINTER,0,129,14,32
 15428                        	.sym	uint32_t,0,18,14,32
 15429                        	.sym	uint8_t,0,14,14,8
 15430                        	.sym	LPBOOL,0,142,14,32
 15431                        	.sym	BOOL,0,14,14,8
 15432                        	.sym	DWORD,0,18,14,32
 15433                        	.sym	ULONG,0,18,14,32
 15434                        	.sym	LPLONG,0,135,14,32
 15435                        	.sym	LONG,0,7,14,32
 15436                        	.sym	PUINT,0,144,14,32
 15437                        	.sym	USHORT,0,16,14,16
 15438                        	.sym	UINT,0,16,14,16
 15439                        	.sym	INT,0,5,14,16
 15440                        	.sym	WORD,0,5,14,16
 15441                        	.sym	PBYTE,0,142,14,32
 15442                        	.sym	BYTE,0,14,14,8
 15443                        	.sym	IOPORT,0,142,14,32
 15444                        	.sym	PUCHAR,0,142,14,32
 15445                        	.sym	UCHAR,0,14,14,8
 15446                        	.sym	LPWCSTR,0,142,14,32
 15447                        	.sym	LPCSTR,0,142,14,32
 15448                        	.sym	LPSTR,0,142,14,32
 15449                        	.sym	LPCHAR,0,142,14,32
 15450                        	.sym	CHAR,0,14,14,8
 15451                        	.sym	PUINT_32,0,146,14,32
 15452                        	.sym	UINT_32,0,18,14,32
 15453                        	.sym	PUINT_16,0,144,14,32
 15454                        	.sym	UINT_16,0,16,14,16
  Mon Sep 27 2021  9:39                                                Page 285


 15455                        	.sym	PUINT_8,0,142,14,32
 15456                        	.sym	UINT_8,0,14,14,8
 15457                        	.sym	LPVOID,0,129,14,32
 15458                        	.sym	VOID,0,1,14,32
 15459                        	end


      Lines assembled: 15459
      Errors: 0
