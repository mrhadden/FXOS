  Sat Jul 10 2021  1:15                                                Page 1


                     ***************************************
                     **      WDC 65C816 Macro Assembler   **
                     **                                   **
                     **     Version 3.49.1- Feb  6 2006    **
                     ***************************************

     1                        ;:ts=8
     2             00000001   R0	equ	1
     3             00000005   R1	equ	5
     4             00000009   R2	equ	9
     5             0000000D   R3	equ	13
     6                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\OMF_Record.c",0
     7                        ;/************************************************
                    ************************/
     8                        ;/*                                               
                                           */
     9                        ;/*  OMF_Record.c : Module pour le décodage des Re
                    cord des Segments OMF. */
    10                        ;/*                                               
                                           */
    11                        ;/************************************************
                    ************************/
    12                        ;/*  Auteur : Olivier ZARDINI  *  Brutal Deluxe So
                    ftware  *  Avril 2013  */
    13                        ;/************************************************
                    ************************/
    14                        ;
    15                        ;#include "fxos.h"
    16                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos.h",0
    17                        	.file	"G:\devtools\WDCTools\wdc\Tools\include\
                    stdlib.h",0
    18                        	.file	"G:\devtools\WDCTools\wdc\Tools\include\
                    stddef.h",0
    19                        	.line	88
    20                        	.file	"G:\devtools\WDCTools\wdc\Tools\include\
                    stdlib.h",43
    21                        	.stag	fake1_,32,1
    22                        	.member	quot,0,5,8,16
    23                        	.member	rem,16,5,8,16
    24                        	.eos
    25                        	.stag	fake2_,64,2
    26                        	.member	quot,0,7,8,32
    27                        	.member	rem,32,7,8,32
    28                        	.eos
    29                        	.stag	int_sqrt,32,3
    30                        	.member	sqrt,0,16,8,16
    31                        	.member	frac,16,16,8,16
    32                        	.eos
    33                        	.line	205
    34                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos.h",4
    35                        	.file	"G:\devtools\WDCTools\wdc\Tools\include\
                    string.h",0
    36                        	.line	134
    37                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos.h",5
  Sat Jul 10 2021  1:15                                                Page 2


    38                        	.file	"G:\devtools\WDCTools\wdc\Tools\include\
                    ctype.h",0
    39                        	.line	103
    40                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos.h",6
    41                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxtypes.h",0
    42                        	.stag	_fx_bytebits,8,4
    43                        	.member	b7,0,14,17,1
    44                        	.member	b6,1,14,17,1
    45                        	.member	b5,2,14,17,1
    46                        	.member	b4,3,14,17,1
    47                        	.member	b3,4,14,17,1
    48                        	.member	b2,5,14,17,1
    49                        	.member	b1,6,14,17,1
    50                        	.member	b0,7,14,17,1
    51                        	.eos
    52                        	.stag	_fx_node,384,5
    53                        	.member	type,0,14,8,8
    54                        	.member	Reserved0,8,14,8,8
    55                        	.member	data,16,129,8,32
    56                        	.member	last,48,138,8,32,5
    57                        	.member	next,80,138,8,32,5
    58                        	.member	name,112,110,8,0,32
    59                        	.member	Reserved1,368,16,8,16
    60                        	.eos
    61                        	.stag	_fx_nodelist,96,6
    62                        	.member	listhead,0,138,8,32,5
    63                        	.member	listData,32,129,8,32
    64                        	.member	deallocator,64,641,8,32
    65                        	.eos
    66                        	.stag	_fx_queue,80,7
    67                        	.member	count,0,5,8,16
    68                        	.member	front,16,138,8,32,5
    69                        	.member	rear,48,138,8,32,5
    70                        	.eos
    71                        	.stag	fake8_,32,8
    72                        	.member	subsystem,0,14,8,8
    73                        	.member	level,8,14,8,8
    74                        	.member	error,16,16,8,16
    75                        	.eos
    76                        	.stag	_fx_process_signal,16,9
    77                        	.member	cbSize,0,16,8,16
    78                        	.eos
    79                        	.stag	_fx_semaphore,16,10
    80                        	.member	reserved,0,5,8,16
    81                        	.eos
    82                        	.stag	_fx_fileBlock,552,11
    83                        	.member	openCount,0,16,8,16
    84                        	.member	lockCount,16,16,8,16
    85                        	.member	dirty,32,14,8,8
    86                        	.member	fileBuffer,40,110,8,0,64
    87                        	.eos
    88                        	.stag	_fx_irq_data,48,12
    89                        	.member	line,0,5,8,16
    90                        	.member	keycode,16,142,8,32
    91                        	.eos
    92                        	.stag	_task,48,13
  Sat Jul 10 2021  1:15                                                Page 3


    93                        	.member	SPL,0,14,8,8
    94                        	.member	SPH,8,14,8,8
    95                        	.member	pstack,16,142,8,32
    96                        	.eos
    97                        	.stag	_task_stack,32,14
    98                        	.member	SS,0,142,8,32
    99                        	.eos
   100                        	.stag	int_regs,104,15
   101                        	.member	PB,0,14,8,8
   102                        	.member	PH,8,14,8,8
   103                        	.member	PL,16,14,8,8
   104                        	.member	PP,24,14,8,8
   105                        	.member	DB,32,14,8,8
   106                        	.member	DH,40,14,8,8
   107                        	.member	DL,48,14,8,8
   108                        	.member	AH,56,14,8,8
   109                        	.member	AL,64,14,8,8
   110                        	.member	XH,72,14,8,8
   111                        	.member	XL,80,14,8,8
   112                        	.member	YH,88,14,8,8
   113                        	.member	YL,96,14,8,8
   114                        	.eos
   115                        	.stag	_fx_eventMessage,304,16
   116                        	.member	src,0,18,8,32
   117                        	.member	dest,32,18,8,32
   118                        	.member	type,64,16,8,16
   119                        	.member	hwnd,80,129,8,32
   120                        	.member	pheap,112,129,8,32
   121                        	.member	msgTime,144,18,8,32
   122                        	.member	data,176,110,8,0,16
   123                        	.eos
   124                        	.stag	_fx_cmdMessage,304,17
   125                        	.member	src,0,18,8,32
   126                        	.member	dest,32,18,8,32
   127                        	.member	type,64,16,8,16
   128                        	.member	hwnd,80,129,8,32
   129                        	.member	pheap,112,129,8,32
   130                        	.member	msgTime,144,18,8,32
   131                        	.member	cmdCId,176,16,8,16
   132                        	.member	cmdMId,192,16,8,16
   133                        	.member	parameter1,208,18,8,32
   134                        	.member	parameter2,240,18,8,32
   135                        	.member	parameter3,272,18,8,32
   136                        	.eos
   137                        	.stag	_fx_console_ctl,448,18
   138                        	.member	maxCols,0,5,8,16
   139                        	.member	maxRows,16,5,8,16
   140                        	.member	curX,32,5,8,16
   141                        	.member	curY,48,5,8,16
   142                        	.member	fgColor,64,5,8,16
   143                        	.member	bgColor,80,5,8,16
   144                        	.member	mode,96,14,8,8
   145                        	.member	kbBuffer,104,101,8,0,16
   146                        	.member	screenBuffer,360,142,8,32
   147                        	.member	desktopMode,392,14,8,8
   148                        	.member	lastMouseButton,400,5,8,16
   149                        	.member	lastMouseX,416,5,8,16
   150                        	.member	lastMouseY,432,5,8,16
  Sat Jul 10 2021  1:15                                                Page 4


   151                        	.eos
   152                        	.stag	_fx_desktop_ctl,392,19
   153                        	.member	desktopMode,0,14,8,8
   154                        	.member	cursorCtl,8,5,8,16
   155                        	.member	cursorState,24,5,8,16
   156                        	.member	backgroundColor,40,5,8,16
   157                        	.member	foregroundColor,56,5,8,16
   158                        	.member	menuMode,72,5,8,16
   159                        	.member	lastMouseButton,88,5,8,16
   160                        	.member	lastMouseX,104,5,8,16
   161                        	.member	lastMouseY,120,5,8,16
   162                        	.member	currentDiskName,136,142,8,32
   163                        	.member	diskNodes,168,129,8,32
   164                        	.member	titleNodes,200,129,8,32
   165                        	.member	menuNodes,232,129,8,32
   166                        	.member	iconNodes,264,129,8,32
   167                        	.member	windowNodes,296,129,8,32
   168                        	.member	fontNodes,328,129,8,32
   169                        	.member	wndProc,360,138,8,32,6
   170                        	.eos
   171                        	.stag	_fx_process,800,20
   172                        	.member	cbSize,0,5,8,16
   173                        	.member	procId,16,18,8,32
   174                        	.member	parentId,48,18,8,32
   175                        	.member	ctx,80,129,8,32
   176                        	.member	userId,112,16,8,16
   177                        	.member	status,128,16,8,16
   178                        	.member	foregroundActive,144,14,8,8
   179                        	.member	tls,152,1121,8,32,8
   180                        	.member	commandLine,408,142,8,32
   181                        	.member	semaphores,440,138,8,32,6
   182                        	.member	fileHandles,472,138,8,32,6
   183                        	.member	pathList,504,138,8,32,6
   184                        	.member	resources,536,138,8,32,6
   185                        	.member	timerAware,568,14,8,8
   186                        	.member	timerTicks,576,112,8,0,2
   187                        	.member	timerTickCount,608,112,8,0,2
   188                        	.member	kernelError,640,10,8,32,8
   189                        	.member	consoleCtl,672,138,8,32,18
   190                        	.member	desktopCtl,704,138,8,32,19
   191                        	.member	execProc,736,641,8,32
   192                        	.member	startupArgs,768,129,8,32
   193                        	.eos
   194                        	.stag	_fxProcessMessage,112,21
   195                        	.member	src,0,18,8,32
   196                        	.member	dest,32,18,8,32
   197                        	.member	type,64,16,8,16
   198                        	.member	processInfo,80,138,8,32,20
   199                        	.eos
   200                        	.stag	_k_key_state,112,22
   201                        	.member	scanCode,0,14,8,8
   202                        	.member	isShifted,8,14,8,8
   203                        	.member	isAlt,16,14,8,8
   204                        	.member	isExtended,24,14,8,8
   205                        	.member	isCapsLock,32,14,8,8
   206                        	.member	isNumLock,40,14,8,8
   207                        	.member	isScrollLock,48,14,8,8
   208                        	.member	keyChar,56,16,8,16
  Sat Jul 10 2021  1:15                                                Page 5


   209                        	.member	scanTime,72,18,8,32
   210                        	.member	ledStatus,104,14,8,8
   211                        	.eos
   212                        	.stag	_fx_property,384,23
   213                        	.member	name,0,110,8,0,16
   214                        	.member	value,128,110,8,0,32
   215                        	.eos
   216                        	.utag	_24bitPointer,32,24
   217                        	.member	address,0,142,11,32
   218                        	.member	bytes,0,110,11,0,4
   219                        	.eos
   220                        	.stag	_PointStruct,32,25
   221                        	.member	x,0,5,8,16
   222                        	.member	y,16,5,8,16
   223                        	.eos
   224                        	.stag	_RectStruct,112,26
   225                        	.member	x,0,5,8,16
   226                        	.member	y,16,5,8,16
   227                        	.member	z,32,18,8,32
   228                        	.member	width,64,5,8,16
   229                        	.member	height,80,5,8,16
   230                        	.member	attr,96,5,8,16
   231                        	.eos
   232                        	.stag	fake27_,96,27
   233                        	.member	name,0,142,8,32
   234                        	.member	topLeft,32,10,8,32,25
   235                        	.member	bottomRight,64,10,8,32,25
   236                        	.eos
   237                        	.stag	fake28_,112,28
   238                        	.member	x,0,5,8,16
   239                        	.member	y,16,5,8,16
   240                        	.member	z,32,5,8,16
   241                        	.member	width,48,5,8,16
   242                        	.member	height,64,5,8,16
   243                        	.member	data,80,18,8,32
   244                        	.eos
   245                        	.stag	_k_WindowClass,272,29
   246                        	.member	cbSize,0,16,8,16
   247                        	.member	style,16,16,8,16
   248                        	.member	styleEx,32,16,8,16
   249                        	.member	pWndProc,48,654,8,32
   250                        	.member	hInstance,80,129,8,32
   251                        	.member	hIcon,112,129,8,32
   252                        	.member	hCursor,144,129,8,32
   253                        	.member	hbrBackground,176,129,8,32
   254                        	.member	lpszMenuName,208,142,8,32
   255                        	.member	lpszClassName,240,142,8,32
   256                        	.eos
   257                        	.stag	_ClickableRect,152,30
   258                        	.member	area,0,10,8,112,26
   259                        	.member	z,112,18,8,32
   260                        	.member	enabled,144,14,8,8
   261                        	.eos
   262                        	.stag	_NCClickableRect,136,31
   263                        	.member	area,0,10,8,112,26
   264                        	.member	msgType,112,16,8,16
   265                        	.member	enabled,128,14,8,8
   266                        	.eos
  Sat Jul 10 2021  1:15                                                Page 6


   267                        	.stag	_DragData,216,32
   268                        	.member	area,0,10,8,112,26
   269                        	.member	xoffset,112,5,8,16
   270                        	.member	yoffset,128,5,8,16
   271                        	.member	msgType,144,16,8,16
   272                        	.member	ncAction,160,16,8,16
   273                        	.member	isDrag,176,14,8,8
   274                        	.member	isResize,184,14,8,8
   275                        	.member	canDrag,192,14,8,8
   276                        	.member	canDrop,200,14,8,8
   277                        	.member	didDrag,208,14,8,8
   278                        	.eos
   279                        	.stag	_k_WindowStruct,3904,33
   280                        	.member	cbSize,0,16,8,16
   281                        	.member	style,16,18,8,32
   282                        	.member	styleEx,48,18,8,32
   283                        	.member	win_id,80,5,8,16
   284                        	.member	win_x,96,5,8,16
   285                        	.member	win_y,112,5,8,16
   286                        	.member	win_width,128,5,8,16
   287                        	.member	win_height,144,5,8,16
   288                        	.member	win_xoffset,160,5,8,16
   289                        	.member	win_yoffset,176,5,8,16
   290                        	.member	win_cxoffset,192,5,8,16
   291                        	.member	win_cyoffset,208,5,8,16
   292                        	.member	wndRect,224,10,8,112,26
   293                        	.member	clientRect,336,10,8,112,26
   294                        	.member	nonclientGadgets,448,106,8,0,31,16
   295                        	.member	clickable,2624,129,8,32
   296                        	.member	win_title,2656,110,8,0,32
   297                        	.member	Reserved0,2912,16,8,16
   298                        	.member	win_class,2928,110,8,0,16
   299                        	.member	win_class_name,3056,110,8,0,32
   300                        	.member	nBitmapLayer,3312,16,8,16
   301                        	.member	bgRegion,3328,129,8,32
   302                        	.member	procid,3360,18,8,32
   303                        	.member	pWndClass,3392,138,8,32,29
   304                        	.member	pParentWindow,3424,129,8,32
   305                        	.member	hMenu,3456,129,8,32
   306                        	.member	hPointer,3488,129,8,32
   307                        	.member	hBackground,3520,129,8,32
   308                        	.member	pChildWindows,3552,138,8,32,6
   309                        	.member	pChildHitList,3584,138,8,32,6
   310                        	.member	isVisible,3616,14,8,8
   311                        	.member	windowData,3624,129,8,32
   312                        	.member	clientData,3656,1121,8,32,6
   313                        	.member	isClosed,3848,14,8,8
   314                        	.member	isClosing,3856,14,8,8
   315                        	.member	isDesktop,3864,14,8,8
   316                        	.member	clickableNode,3872,138,8,32,5
   317                        	.eos
   318                        	.stag	_k_WindowStructEx,3880,34
   319                        	.member	cbSize,0,16,8,16
   320                        	.member	style,16,18,8,32
   321                        	.member	styleEx,48,18,8,32
   322                        	.member	win_id,80,5,8,16
   323                        	.member	win_x,96,5,8,16
   324                        	.member	win_y,112,5,8,16
  Sat Jul 10 2021  1:15                                                Page 7


   325                        	.member	win_width,128,5,8,16
   326                        	.member	win_height,144,5,8,16
   327                        	.member	win_xoffset,160,5,8,16
   328                        	.member	win_yoffset,176,5,8,16
   329                        	.member	win_cxoffset,192,5,8,16
   330                        	.member	win_cyoffset,208,5,8,16
   331                        	.member	wndRect,224,10,8,112,26
   332                        	.member	clientRect,336,10,8,112,26
   333                        	.member	nonclientGadgets,448,106,8,0,31,16
   334                        	.member	clickable,2624,129,8,32
   335                        	.member	win_title,2656,110,8,0,32
   336                        	.member	Reserved0,2912,16,8,16
   337                        	.member	win_class,2928,110,8,0,16
   338                        	.member	nBitmapLayer,3056,16,8,16
   339                        	.member	procid,3072,18,8,32
   340                        	.member	pWndClass,3104,138,8,32,29
   341                        	.member	pParentWindow,3136,129,8,32
   342                        	.member	hMenu,3168,129,8,32
   343                        	.member	hPointer,3200,129,8,32
   344                        	.member	hBackground,3232,129,8,32
   345                        	.member	pChildWindows,3264,138,8,32,6
   346                        	.member	pChildHitList,3296,138,8,32,6
   347                        	.member	isVisible,3328,14,8,8
   348                        	.member	windowData,3336,129,8,32
   349                        	.member	clientData,3368,1121,8,32,4
   350                        	.member	isClosed,3496,14,8,8
   351                        	.member	hWnd,3504,129,8,32
   352                        	.member	localRect,3536,10,8,112,26
   353                        	.member	globalRect,3648,10,8,112,26
   354                        	.member	clientOffsetRect,3760,10,8,112,26
   355                        	.member	isDesktop,3872,14,8,8
   356                        	.eos
   357                        	.stag	_FontMetric,32,35
   358                        	.member	width,0,5,8,16
   359                        	.member	height,16,5,8,16
   360                        	.eos
   361                        	.stag	_MenuStruct,280,36
   362                        	.member	cx,0,5,8,16
   363                        	.member	cy,16,5,8,16
   364                        	.member	width,32,5,8,16
   365                        	.member	height,48,5,8,16
   366                        	.member	fcolor,64,14,8,8
   367                        	.member	bcolor,72,14,8,8
   368                        	.member	chromeLeft,80,14,8,8
   369                        	.member	chromeRight1,88,14,8,8
   370                        	.member	chromeRight2,96,14,8,8
   371                        	.member	hFont,104,129,8,32
   372                        	.member	itemId,136,16,8,16
   373                        	.member	pCaption,152,142,8,32
   374                        	.member	subMenus,184,138,8,32,6
   375                        	.member	pBackground,216,129,8,32
   376                        	.member	hWndOwner,248,129,8,32
   377                        	.eos
   378                        	.stag	fake37_,160,37
   379                        	.member	menuId,0,16,8,16
   380                        	.member	caption,16,142,8,32
   381                        	.member	rect,48,10,8,112,26
   382                        	.eos
  Sat Jul 10 2021  1:15                                                Page 8


   383                        	.stag	fake38_,5152,38
   384                        	.member	pParent,0,138,8,32,33
   385                        	.member	rect,32,10,8,112,26
   386                        	.member	captions,144,1134,8,32,24
   387                        	.member	chrome,912,110,8,0,24
   388                        	.member	ids,1104,112,8,0,24
   389                        	.member	clickable,1488,106,8,0,30,24
   390                        	.member	selected,5136,16,8,16
   391                        	.eos
   392                        	.stag	_fx_button_t,96,39
   393                        	.member	pCaption,0,142,8,32
   394                        	.member	cCaption,32,16,8,16
   395                        	.member	data,48,129,8,32
   396                        	.member	captionPixelWidth,80,16,8,16
   397                        	.eos
   398                        	.stag	_fx_scrollbar_t,240,40
   399                        	.member	min,0,16,8,16
   400                        	.member	max,16,16,8,16
   401                        	.member	increment,32,16,8,16
   402                        	.member	stopsize,48,16,8,16
   403                        	.member	location,64,5,8,16
   404                        	.member	state,80,5,8,16
   405                        	.member	rectThumb,96,10,8,112,26
   406                        	.member	data,208,129,8,32
   407                        	.eos
   408                        	.stag	_fx_listbox_t,240,41
   409                        	.member	pos,0,5,8,16
   410                        	.member	selected,16,16,8,16
   411                        	.member	offsetX,32,5,8,16
   412                        	.member	offsetY,48,5,8,16
   413                        	.member	inc,64,5,8,16
   414                        	.member	direction,80,5,8,16
   415                        	.member	top,96,5,8,16
   416                        	.member	bottom,112,5,8,16
   417                        	.member	indexTop,128,5,8,16
   418                        	.member	indexBottom,144,5,8,16
   419                        	.member	maxItems,160,16,8,16
   420                        	.member	fontSet,176,142,8,32
   421                        	.member	data,208,129,8,32
   422                        	.eos
   423                        	.stag	_fx_textbox_t,144,42
   424                        	.member	pos,0,5,8,16
   425                        	.member	selected,16,16,8,16
   426                        	.member	offsetX,32,5,8,16
   427                        	.member	offsetY,48,5,8,16
   428                        	.member	isShifted,64,14,8,8
   429                        	.member	cursorState,72,14,8,8
   430                        	.member	fontSet,80,142,8,32
   431                        	.member	data,112,129,8,32
   432                        	.eos
   433                        	.stag	_fx_msgbox_t,144,43
   434                        	.member	pos,0,5,8,16
   435                        	.member	selected,16,16,8,16
   436                        	.member	offsetX,32,5,8,16
   437                        	.member	offsetY,48,5,8,16
   438                        	.member	isShifted,64,14,8,8
   439                        	.member	cursorState,72,14,8,8
   440                        	.member	fontSet,80,142,8,32
  Sat Jul 10 2021  1:15                                                Page 9


   441                        	.member	data,112,129,8,32
   442                        	.eos
   443                        	.stag	_fx_menuAnchor_t,272,44
   444                        	.member	pCaption,0,142,8,32
   445                        	.member	renderLayoutX,32,16,8,16
   446                        	.member	renderLayoutY,48,16,8,16
   447                        	.member	captionPixelWidth,64,16,8,16
   448                        	.member	data,80,129,8,32
   449                        	.member	droppedWindow,112,138,8,32,33
   450                        	.member	bytes,144,110,8,0,16
   451                        	.eos
   452                        	.stag	_SubMenuStruct,64,45
   453                        	.member	caption,0,142,8,32
   454                        	.member	action,32,641,8,32
   455                        	.eos
   456                        	.stag	_SubMenuListStruct,40,46
   457                        	.member	cMenus,0,14,8,8
   458                        	.member	psubmenus,8,9354,8,32,45
   459                        	.eos
   460                        	.stag	_fx_ComBuffer,2080,47
   461                        	.member	cbSize,0,16,8,16
   462                        	.member	cbBuffer,16,16,8,16
   463                        	.member	buffer,32,110,8,0,256
   464                        	.eos
   465                        	.stag	_fx_resource_header,72,48
   466                        	.member	magic,0,110,8,0,4
   467                        	.member	major,32,14,8,8
   468                        	.member	minor,40,14,8,8
   469                        	.member	type,48,14,8,8
   470                        	.member	reserved,56,14,8,8
   471                        	.member	resheaderSize,64,14,8,8
   472                        	.eos
   473                        	.stag	_fx_resource_header_font,144,49
   474                        	.member	title,0,110,8,0,16
   475                        	.member	height,128,14,8,8
   476                        	.member	width,136,14,8,8
   477                        	.eos
   478                        	.line	1010
   479                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos.h",8
   480                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxstringtable.h",0
   481                        	.line	89
   482                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos.h",9
   483                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxc256u.h",0
   484                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxtypes.h",0
   485                        	.line	1010
   486                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxc256u.h",5
   487                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fmx_vicky.h",0
   488                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxtypes.h",0
   489                        	.line	1010
   490                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
  Sat Jul 10 2021  1:15                                                Page 10


                    space\FXOSv1\src\fmx_vicky.h",11
   491                        	.line	72
   492                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxc256u.h",6
   493                        	.line	1960
   494                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos.h",16
   495                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxkernel.h",0
   496                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos.h",0
   497                        	.line	30
   498                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxkernel.h",5
   499                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxnode.h",0
   500                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxtypes.h",0
   501                        	.line	1010
   502                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxnode.h",11
   503                        	.line	114
   504                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxkernel.h",6
   505                        	.stag	_fx_api_call_table,8192,50
   506                        	.member	call_table,0,1121,8,32,256
   507                        	.eos
   508                        	.stag	_fx_zero_page,824,51
   509                        	.member	fxos_mouse_byte_0,0,14,8,8
   510                        	.member	fxos_mouse_byte_1,8,14,8,8
   511                        	.member	fxos_mouse_byte_2,16,14,8,8
   512                        	.member	fxos_mouse_byte_t,24,14,8,8
   513                        	.member	fxos_mouse_byte_x_l,32,14,8,8
   514                        	.member	fxos_mouse_byte_x_h,40,14,8,8
   515                        	.member	fxos_mouse_byte_y_l,48,14,8,8
   516                        	.member	fxos_mouse_byte_y_h,56,14,8,8
   517                        	.member	fxos_key_byte_0,64,14,8,8
   518                        	.member	fxos_key_byte_1,72,14,8,8
   519                        	.member	fxos_key_byte_2,80,14,8,8
   520                        	.member	fxos_mouse_ctl,88,14,8,8
   521                        	.member	fxos_mouse_index,96,14,8,8
   522                        	.member	fxos_mouse_status,104,14,8,8
   523                        	.member	fxos_mouse_dbg_1,112,18,8,32
   524                        	.member	fxos_mouse_dbg_2,144,18,8,32
   525                        	.member	fxos_mouse_dbg_3,176,18,8,32
   526                        	.member	fxos_vicky_byte_0,208,14,8,8
   527                        	.member	fxos_vicky_byte_1,216,14,8,8
   528                        	.member	fxos_vicky_byte_2,224,14,8,8
   529                        	.member	VersionMajor,232,16,8,16
   530                        	.member	VersionMinor,248,16,8,16
   531                        	.member	VersionRelease,264,16,8,16
   532                        	.member	topMemory,280,18,8,32
   533                        	.member	bottomMemory,312,18,8,32
   534                        	.member	availableMemory,344,18,8,32
   535                        	.member	availableMemoryK,376,18,8,32
   536                        	.member	availableHeapMemory,408,18,8,32
   537                        	.member	availableHeapMemoryK,440,18,8,32
   538                        	.member	fxos_console_row,472,16,8,16
  Sat Jul 10 2021  1:15                                                Page 11


   539                        	.member	fxos_console_col,488,16,8,16
   540                        	.member	executive,504,129,8,32
   541                        	.member	eventmanager,536,129,8,32
   542                        	.member	devicemanager,568,129,8,32
   543                        	.member	windowmanager,600,129,8,32
   544                        	.member	fxos_kernel_api,632,138,8,32,50
   545                        	.member	fxos_dos_api,664,138,8,32,50
   546                        	.member	fxos_gfx_api,696,138,8,32,50
   547                        	.member	fxos_gui_api,728,138,8,32,50
   548                        	.member	fxos_con_api,760,138,8,32,50
   549                        	.member	fxos_reserved_2_api,792,138,8,32,50
   550                        	.eos
   551                        	.stag	_fx_environment,96,52
   552                        	.member	variables,0,142,8,32
   553                        	.member	reserved1,32,5,8,16
   554                        	.member	reserved2,48,5,8,16
   555                        	.member	reserved3,64,5,8,16
   556                        	.member	reserved4,80,5,8,16
   557                        	.eos
   558                        	.stag	_debug_byte_bits,8,53
   559                        	.member	bit7,0,14,17,1
   560                        	.member	bit6,1,14,17,1
   561                        	.member	bit5,2,14,17,1
   562                        	.member	bit4,3,14,17,1
   563                        	.member	bit3,4,14,17,1
   564                        	.member	bit2,5,14,17,1
   565                        	.member	bit1,6,14,17,1
   566                        	.member	bit0,7,14,17,1
   567                        	.eos
   568                        	.stag	_k_segmentheader,160,54
   569                        	.member	version_major,0,14,8,8
   570                        	.member	version_minor,8,14,8,8
   571                        	.member	length,16,5,8,16
   572                        	.member	segment_start_addr,32,7,8,32
   573                        	.member	segment_end_addr,64,7,8,32
   574                        	.member	segment_size,96,7,8,32
   575                        	.member	main_entry_addr,128,7,8,32
   576                        	.eos
   577                        	.stag	_fx_device_driver,776,55
   578                        	.member	name,0,110,8,0,32
   579                        	.member	version,256,110,8,0,16
   580                        	.member	hmajor,384,110,8,0,8
   581                        	.member	hminor,448,110,8,0,8
   582                        	.member	type,512,14,8,8
   583                        	.member	designation,520,110,8,0,6
   584                        	.member	reserved_1,568,16,8,16
   585                        	.member	f_driver_irq,584,129,8,32
   586                        	.member	driver_context,616,129,8,32
   587                        	.member	f_driver_load,648,129,8,32
   588                        	.member	f_driver_read,680,129,8,32
   589                        	.member	f_driver_write,712,129,8,32
   590                        	.member	f_driver_unload,744,129,8,32
   591                        	.eos
   592                        	.stag	_fx_block_device_driver,808,56
   593                        	.member	name,0,110,8,0,32
   594                        	.member	version,256,110,8,0,16
   595                        	.member	hmajor,384,110,8,0,8
   596                        	.member	hminor,448,110,8,0,8
  Sat Jul 10 2021  1:15                                                Page 12


   597                        	.member	type,512,14,8,8
   598                        	.member	designation,520,110,8,0,6
   599                        	.member	reserved_1,568,16,8,16
   600                        	.member	f_driver_irq,584,129,8,32
   601                        	.member	driver_context,616,129,8,32
   602                        	.member	f_driver_load,648,129,8,32
   603                        	.member	f_driver_read,680,129,8,32
   604                        	.member	f_driver_write,712,129,8,32
   605                        	.member	f_driver_unload,744,129,8,32
   606                        	.member	f_driver_command,776,129,8,32
   607                        	.eos
   608                        	.line	400
   609                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos.h",22
   610                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxconsole.h",0
   611                        	.file	"G:\devtools\WDCTools\wdc\Tools\include\
                    string.h",0
   612                        	.line	134
   613                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxconsole.h",5
   614                        	.file	"G:\devtools\WDCTools\wdc\Tools\include\
                    stdlib.h",0
   615                        	.line	205
   616                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxconsole.h",6
   617                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxtypes.h",0
   618                        	.line	1010
   619                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxconsole.h",7
   620                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxc256u.h",0
   621                        	.line	1960
   622                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxconsole.h",12
   623                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxstring.h",0
   624                        	.file	"G:\devtools\WDCTools\wdc\Tools\include\
                    stdlib.h",0
   625                        	.line	205
   626                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxstring.h",5
   627                        	.file	"G:\devtools\WDCTools\wdc\Tools\include\
                    string.h",0
   628                        	.line	134
   629                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxstring.h",6
   630                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxtypes.h",0
   631                        	.line	1010
   632                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxstring.h",7
   633                        	.stag	_fx_string,64,57
   634                        	.member	size,0,16,8,16
   635                        	.member	pos,16,5,8,16
   636                        	.member	buffer,32,142,8,32
   637                        	.eos
  Sat Jul 10 2021  1:15                                                Page 13


   638                        	.line	139
   639                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxconsole.h",17
   640                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxeventmanager.h",0
   641                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos.h",0
   642                        	.line	30
   643                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxeventmanager.h",5
   644                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxexec.h",0
   645                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxtypes.h",0
   646                        	.line	1010
   647                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxexec.h",5
   648                        	.stag	_fxos_executive_vtable,128,58
   649                        	.member	Init,0,8833,8,32
   650                        	.member	Configure,32,656,8,32
   651                        	.member	Query,64,656,8,32
   652                        	.member	Uninit,96,641,8,32
   653                        	.eos
   654                        	.line	86
   655                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxeventmanager.h",6
   656                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxnode.h",0
   657                        	.line	114
   658                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxeventmanager.h",7
   659                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxconsole.h",0
   660                        	.line	208
   661                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxeventmanager.h",8
   662                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxwindowmanager.h",0
   663                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos.h",0
   664                        	.line	30
   665                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxwindowmanager.h",5
   666                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxmemorymanager.h",0
   667                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos.h",0
   668                        	.line	30
   669                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxmemorymanager.h",5
   670                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\umm_malloc_cfg.h",0
   671                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos_build_parameters.h",0
   672                        	.line	35
   673                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\umm_malloc_cfg.h",8
   674                        	.stag	UMM_HEAP_INFO_t,256,59
  Sat Jul 10 2021  1:15                                                Page 14


   675                        	.member	totalEntries,0,18,8,32
   676                        	.member	usedEntries,32,18,8,32
   677                        	.member	freeEntries,64,18,8,32
   678                        	.member	totalBlocks,96,18,8,32
   679                        	.member	usedBlocks,128,18,8,32
   680                        	.member	freeBlocks,160,18,8,32
   681                        	.member	maxFreeContiguousBlocks,192,18,8,32
   682                        	.member	blockSize,224,18,8,32
   683                        	.eos
   684                        	.line	199
   685                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxmemorymanager.h",6
   686                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\umm_malloc.h",0
   687                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxtypes.h",0
   688                        	.line	1010
   689                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\umm_malloc.h",11
   690                        	.line	24
   691                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxmemorymanager.h",7
   692                        	.stag	_fx_memory_map,2072,60
   693                        	.member	availableMemory,0,18,8,32
   694                        	.member	valid_segments,32,110,8,0,255
   695                        	.eos
   696                        	.stag	_fx_ipc_port,144,61
   697                        	.member	id,0,18,8,32
   698                        	.member	type,32,14,8,8
   699                        	.member	name,40,138,8,32,57
   700                        	.member	time,72,18,8,32
   701                        	.member	queue,104,138,8,32,7
   702                        	.member	reserved_1,136,14,8,8
   703                        	.eos
   704                        	.line	105
   705                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxwindowmanager.h",6
   706                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxeventmanager.h",0
   707                        	.line	564
   708                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxwindowmanager.h",7
   709                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxgui.h",0
   710                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxfont.h",0
   711                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxtypes.h",0
   712                        	.line	1010
   713                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxfont.h",6
   714                        	.line	74
   715                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxgui.h",5
   716                        	.stag	_click_detected,64,62
   717                        	.member	window,0,138,8,32,33
   718                        	.member	handler,32,641,8,32
   719                        	.eos
  Sat Jul 10 2021  1:15                                                Page 15


   720                        	.stag	_current_palette_map,400,63
   721                        	.member	CUR_DESKTOP,0,5,8,16
   722                        	.member	CUR_BACKGROUND,16,5,8,16
   723                        	.member	CUR_FONT,32,5,8,16
   724                        	.member	CUR_SELECTED_FONT,48,5,8,16
   725                        	.member	CUR_HIGHLIGHT_COLOR,64,5,8,16
   726                        	.member	CUR_WINDOWFRAME,80,5,8,16
   727                        	.member	CUR_WINDOWBORDER,96,5,8,16
   728                        	.member	CUR_WINDOWSHADOW,112,5,8,16
   729                        	.member	CUR_MENU,128,5,8,16
   730                        	.member	CUR_GADGET,144,5,8,16
   731                        	.member	CUR_COLOR,160,101,8,0,15
   732                        	.eos
   733                        	.line	359
   734                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxwindowmanager.h",8
   735                        	.stag	_fxos_winman_vtable,160,64
   736                        	.member	Events,0,641,8,32
   737                        	.member	ConfigureWindowManager,32,656,8,32
   738                        	.member	ProcessWindowEvent,64,8833,8,32
   739                        	.member	QueryWindowManager,96,656,8,32
   740                        	.member	DoWndProcs,128,641,8,32
   741                        	.eos
   742                        	.stag	fake65_,64,65
   743                        	.member	type,0,16,8,16
   744                        	.member	size,16,16,8,16
   745                        	.member	desktopAction,32,129,8,32
   746                        	.eos
   747                        	.stag	fake66_,96,66
   748                        	.member	type,0,16,8,16
   749                        	.member	caption,16,138,8,32,57
   750                        	.member	buttonType,48,16,8,16
   751                        	.member	x,64,5,8,16
   752                        	.member	y,80,5,8,16
   753                        	.eos
   754                        	.stag	_childMessage_t,64,67
   755                        	.member	msgType,0,16,8,16
   756                        	.member	msgData,16,129,8,32
   757                        	.member	dataSize,48,16,8,16
   758                        	.eos
   759                        	.line	581
   760                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxeventmanager.h",9
   761                        	.stag	_fx_main_loopvars,16,68
   762                        	.member	dummy,0,5,8,16
   763                        	.eos
   764                        	.stag	_fxMouseMessageData,64,69
   765                        	.member	button1,0,14,8,8
   766                        	.member	button2,8,14,8,8
   767                        	.member	button3,16,14,8,8
   768                        	.member	button4,24,14,8,8
   769                        	.member	x,32,16,8,16
   770                        	.member	y,48,16,8,16
   771                        	.eos
   772                        	.utag	marshalled_data,32,70
   773                        	.member	byteValue,0,14,11,8
   774                        	.member	verbValue,0,110,11,0,2
   775                        	.member	intValue,0,16,11,16
  Sat Jul 10 2021  1:15                                                Page 16


   776                        	.member	longValue,0,18,11,32
   777                        	.member	pointerValue,0,129,11,32
   778                        	.eos
   779                        	.stag	_fx_eventProcess,64,71
   780                        	.member	process,0,138,8,32,20
   781                        	.member	eventProc,32,641,8,32
   782                        	.eos
   783                        	.stag	_mouse_msg_state,184,72
   784                        	.member	lastEvent,0,18,8,32
   785                        	.member	buttonLeftDown,32,14,8,8
   786                        	.member	lastLeftDown,40,18,8,32
   787                        	.member	buttonRightDown,72,14,8,8
   788                        	.member	lastRightDown,80,18,8,32
   789                        	.member	buttonMiddleDown,112,14,8,8
   790                        	.member	lastMiddleDown,120,18,8,32
   791                        	.member	lastX,152,16,8,16
   792                        	.member	lastY,168,16,8,16
   793                        	.eos
   794                        	.stag	_fxos_eventmanager_vtable,192,73
   795                        	.member	EventQueue,0,138,8,32,7
   796                        	.member	Init,32,8833,8,32
   797                        	.member	Run,64,656,8,32
   798                        	.member	Configure,96,656,8,32
   799                        	.member	Query,128,656,8,32
   800                        	.member	Uninit,160,641,8,32
   801                        	.eos
   802                        	.stag	_k_clipboard_data,168,74
   803                        	.member	type,0,14,8,8
   804                        	.member	readable,8,110,8,0,16
   805                        	.member	data,136,129,8,32
   806                        	.eos
   807                        	.line	564
   808                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxconsole.h",18
   809                        	.stag	_fx_spinner_ctx,48,75
   810                        	.member	index,0,5,8,16
   811                        	.member	spinner,16,142,8,32
   812                        	.eos
   813                        	.stag	_fx_console_ctx,1144,76
   814                        	.member	lineBufferIndex,0,5,8,16
   815                        	.member	lineBuffer,16,110,8,0,128
   816                        	.member	isShifted,1040,14,8,8
   817                        	.member	userData,1048,129,8,32
   818                        	.member	screenBuffer,1080,129,8,32
   819                        	.member	Reserved1,1112,129,8,32
   820                        	.eos
   821                        	.stag	_token,64,77
   822                        	.member	type,0,5,8,16
   823                        	.member	depth,16,16,8,16
   824                        	.member	text,32,142,8,32
   825                        	.eos
   826                        	.stag	_command_args,64,78
   827                        	.member	proc,0,656,8,32
   828                        	.member	tokens,32,138,8,32,5
   829                        	.eos
   830                        	.line	208
   831                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos.h",23
  Sat Jul 10 2021  1:15                                                Page 17


   832                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxstring.h",0
   833                        	.line	139
   834                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos.h",24
   835                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxnode.h",0
   836                        	.line	114
   837                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos.h",25
   838                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\ff.h",0
   839                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\ffconf.h",0
   840                        	.line	298
   841                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\ff.h",29
   842                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxtypes.h",0
   843                        	.line	1010
   844                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\ff.h",30
   845                        	.stag	fake79_,4504,79
   846                        	.member	fs_type,0,14,8,8
   847                        	.member	pdrv,8,14,8,8
   848                        	.member	n_fats,16,14,8,8
   849                        	.member	wflag,24,14,8,8
   850                        	.member	fsi_flag,32,14,8,8
   851                        	.member	id,40,5,8,16
   852                        	.member	n_rootdir,56,5,8,16
   853                        	.member	csize,72,5,8,16
   854                        	.member	lfnbuf,88,144,8,32
   855                        	.member	last_clst,120,18,8,32
   856                        	.member	free_clst,152,18,8,32
   857                        	.member	n_fatent,184,18,8,32
   858                        	.member	fsize,216,18,8,32
   859                        	.member	volbase,248,18,8,32
   860                        	.member	fatbase,280,18,8,32
   861                        	.member	dirbase,312,18,8,32
   862                        	.member	database,344,18,8,32
   863                        	.member	winsect,376,18,8,32
   864                        	.member	win,408,110,8,0,512
   865                        	.eos
   866                        	.stag	fake80_,128,80
   867                        	.member	fs,0,138,8,32,79
   868                        	.member	id,32,5,8,16
   869                        	.member	attr,48,14,8,8
   870                        	.member	stat,56,14,8,8
   871                        	.member	sclust,64,18,8,32
   872                        	.member	objsize,96,18,8,32
   873                        	.eos
   874                        	.stag	fake81_,4400,81
   875                        	.member	obj,0,10,8,128,80
   876                        	.member	flag,128,14,8,8
   877                        	.member	err,136,14,8,8
   878                        	.member	fptr,144,18,8,32
   879                        	.member	clust,176,18,8,32
   880                        	.member	sect,208,18,8,32
  Sat Jul 10 2021  1:15                                                Page 18


   881                        	.member	dir_sect,240,18,8,32
   882                        	.member	dir_ptr,272,142,8,32
   883                        	.member	buf,304,110,8,0,512
   884                        	.eos
   885                        	.stag	fake82_,416,82
   886                        	.member	obj,0,10,8,128,80
   887                        	.member	dptr,128,18,8,32
   888                        	.member	clust,160,18,8,32
   889                        	.member	sect,192,18,8,32
   890                        	.member	dir,224,142,8,32
   891                        	.member	fn,256,110,8,0,12
   892                        	.member	blk_ofs,352,18,8,32
   893                        	.member	pat,384,142,8,32
   894                        	.eos
   895                        	.stag	fake83_,2224,83
   896                        	.member	fsize,0,18,8,32
   897                        	.member	fdate,32,5,8,16
   898                        	.member	ftime,48,5,8,16
   899                        	.member	fattrib,64,14,8,8
   900                        	.member	altname,72,110,8,0,13
   901                        	.member	fname,176,110,8,0,256
   902                        	.eos
   903                        	.stag	fake84_,80,84
   904                        	.member	fmt,0,14,8,8
   905                        	.member	n_fat,8,14,8,8
   906                        	.member	align,16,16,8,16
   907                        	.member	n_root,32,16,8,16
   908                        	.member	au_size,48,18,8,32
   909                        	.eos
   910                        	.line	429
   911                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos.h",26
   912                        	.line	30
   913                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\OMF_Record.c",9
   914                        ;//#include <stdlib.h>
   915                        ;//#include <string.h>
   916                        ;
   917                        ;#include "OMF_Dc_Memory.h"
   918                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\OMF_Dc_Memory.h",0
   919                        	.line	24
   920                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\OMF_Record.c",13
   921                        ;#include "OMF_Dc_Shared.h"
   922                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\OMF_Dc_Shared.h",0
   923                        	.line	18
   924                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\OMF_Record.c",14
   925                        ;#include "OMF_Load.h"
   926                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\OMF_Load.h",0
   927                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxtypes.h",0
   928                        	.line	1010
   929                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\OMF_Load.h",9
  Sat Jul 10 2021  1:15                                                Page 19


   930                        	.stag	omf_segment_header,20984,85
   931                        	.member	FileOffset,0,18,8,32
   932                        	.member	SegmentOffset,32,18,8,32
   933                        	.member	BlockCnt,64,18,8,32
   934                        	.member	ByteCnt,96,18,8,32
   935                        	.member	ResSpc,128,18,8,32
   936                        	.member	Length,160,18,8,32
   937                        	.member	Type,192,14,8,8
   938                        	.member	undefine_1,200,14,8,8
   939                        	.member	LabLen,208,14,8,8
   940                        	.member	NumLen,216,14,8,8
   941                        	.member	Version,224,14,8,8
   942                        	.member	BankSize,232,18,8,32
   943                        	.member	Kind,264,5,8,16
   944                        	.member	undefine_2,280,14,8,8
   945                        	.member	undefine_3,288,14,8,8
   946                        	.member	Org,296,18,8,32
   947                        	.member	Align,328,18,8,32
   948                        	.member	NumSEx,360,14,8,8
   949                        	.member	LCBank,368,14,8,8
   950                        	.member	undefine_4,376,14,8,8
   951                        	.member	SegNum,384,5,8,16
   952                        	.member	EntryPointOffset,400,18,8,32
   953                        	.member	DispNameOffset,432,5,8,16
   954                        	.member	DispDataOffset,448,5,8,16
   955                        	.member	TempOrgLength,464,5,8,16
   956                        	.member	TempOrg,480,110,8,0,2048
   957                        	.member	LoadName,16864,110,8,0,256
   958                        	.member	SegName,18912,110,8,0,256
   959                        	.member	undefine_5,20960,14,8,8
   960                        	.member	undefine_6,20968,14,8,8
   961                        	.member	undefine_7,20976,14,8,8
   962                        	.eos
   963                        	.stag	omf_segment,21288,86
   964                        	.member	header,0,10,8,20984,85
   965                        	.member	nb_record,20984,5,8,16
   966                        	.member	first_record,21000,138,8,32,0
   967                        	.member	last_record,21032,138,8,32,0
   968                        	.member	data_offset,21064,5,8,16
   969                        	.member	data_length,21080,5,8,16
   970                        	.member	data,21096,142,8,32
   971                        	.member	reloc_offset,21128,5,8,16
   972                        	.member	reloc_length,21144,5,8,16
   973                        	.member	nb_reloc,21160,5,8,16
   974                        	.member	tab_reloc,21176,1162,8,32,0
   975                        	.member	nb_interseg,21208,5,8,16
   976                        	.member	tab_interseg,21224,1162,8,32,0
   977                        	.member	next,21256,138,8,32,86
   978                        	.eos
   979                        	.stag	omf_file,192,87
   980                        	.member	file_path,0,142,8,32
   981                        	.member	file_name,32,142,8,32
   982                        	.member	data_length,64,5,8,16
   983                        	.member	data,80,142,8,32
   984                        	.member	nb_segment,112,5,8,16
   985                        	.member	first_segment,128,138,8,32,86
   986                        	.member	last_segment,160,138,8,32,86
   987                        	.eos
  Sat Jul 10 2021  1:15                                                Page 20


   988                        	.line	113
   989                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\OMF_Record.c",15
   990                        ;#include "OMF_Record.h"
   991                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\OMF_Record.h",0
   992                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxtypes.h",0
   993                        	.line	1010
   994                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\OMF_Record.h",8
   995                        	.stag	omf_body_record,168,88
   996                        	.member	FileOffset,0,18,8,32
   997                        	.member	SegmentOffset,32,18,8,32
   998                        	.member	operation_code,64,14,8,8
   999                        	.member	length,72,5,8,16
  1000                        	.member	record_data,88,129,8,32
  1001                        	.member	processed,120,5,8,16
  1002                        	.member	next,136,138,8,32,88
  1003                        	.eos
  1004                        	.stag	subrecord_SuperReloc2,16520,89
  1005                        	.member	FileOffset,0,18,8,32
  1006                        	.member	SegmentOffset,32,18,8,32
  1007                        	.member	Count,64,14,8,8
  1008                        	.member	ByteCnt,72,14,8,8
  1009                        	.member	BitShiftCnt,80,14,8,8
  1010                        	.member	nb_address,88,5,8,16
  1011                        	.member	OffsetPatch,104,114,8,0,256
  1012                        	.member	OffsetReference,8296,114,8,0,256
  1013                        	.member	next,16488,138,8,32,89
  1014                        	.eos
  1015                        	.stag	subrecord_SuperReloc3,16520,90
  1016                        	.member	FileOffset,0,18,8,32
  1017                        	.member	SegmentOffset,32,18,8,32
  1018                        	.member	Count,64,14,8,8
  1019                        	.member	ByteCnt,72,14,8,8
  1020                        	.member	BitShiftCnt,80,14,8,8
  1021                        	.member	nb_address,88,5,8,16
  1022                        	.member	OffsetPatch,104,114,8,0,256
  1023                        	.member	OffsetReference,8296,114,8,0,256
  1024                        	.member	next,16488,138,8,32,90
  1025                        	.eos
  1026                        	.stag	subrecord_SuperInterseg1,20632,91
  1027                        	.member	FileOffset,0,18,8,32
  1028                        	.member	SegmentOffset,32,18,8,32
  1029                        	.member	Count,64,14,8,8
  1030                        	.member	ByteCnt,72,14,8,8
  1031                        	.member	BitShiftCnt,80,14,8,8
  1032                        	.member	FileNum,88,5,8,16
  1033                        	.member	nb_address,104,5,8,16
  1034                        	.member	OffsetPatch,120,114,8,0,256
  1035                        	.member	OffsetReference,8312,114,8,0,256
  1036                        	.member	SegNum,16504,101,8,0,256
  1037                        	.member	next,20600,138,8,32,91
  1038                        	.eos
  1039                        	.stag	subrecord_SuperInterseg212,20632,92
  1040                        	.member	FileOffset,0,18,8,32
  1041                        	.member	SegmentOffset,32,18,8,32
  Sat Jul 10 2021  1:15                                                Page 21


  1042                        	.member	Count,64,14,8,8
  1043                        	.member	ByteCnt,72,14,8,8
  1044                        	.member	BitShiftCnt,80,14,8,8
  1045                        	.member	FileNum,88,5,8,16
  1046                        	.member	nb_address,104,5,8,16
  1047                        	.member	OffsetPatch,120,114,8,0,256
  1048                        	.member	OffsetReference,8312,114,8,0,256
  1049                        	.member	SegNum,16504,101,8,0,256
  1050                        	.member	next,20600,138,8,32,92
  1051                        	.eos
  1052                        	.stag	subrecord_SuperInterseg1324,16544,93
  1053                        	.member	FileOffset,0,18,8,32
  1054                        	.member	SegmentOffset,32,18,8,32
  1055                        	.member	Count,64,14,8,8
  1056                        	.member	ByteCnt,72,14,8,8
  1057                        	.member	BitShiftCnt,80,14,8,8
  1058                        	.member	SegNum,88,14,8,8
  1059                        	.member	FileNum,96,5,8,16
  1060                        	.member	nb_address,112,5,8,16
  1061                        	.member	OffsetPatch,128,114,8,0,256
  1062                        	.member	OffsetReference,8320,114,8,0,256
  1063                        	.member	next,16512,138,8,32,93
  1064                        	.eos
  1065                        	.stag	subrecord_SuperInterseg2536,16544,94
  1066                        	.member	FileOffset,0,18,8,32
  1067                        	.member	SegmentOffset,32,18,8,32
  1068                        	.member	Count,64,14,8,8
  1069                        	.member	ByteCnt,72,14,8,8
  1070                        	.member	BitShiftCnt,80,14,8,8
  1071                        	.member	SegNum,88,14,8,8
  1072                        	.member	FileNum,96,5,8,16
  1073                        	.member	nb_address,112,5,8,16
  1074                        	.member	OffsetPatch,128,114,8,0,256
  1075                        	.member	OffsetReference,8320,114,8,0,256
  1076                        	.member	next,16512,138,8,32,94
  1077                        	.eos
  1078                        	.stag	record_END,72,95
  1079                        	.member	FileOffset,0,18,8,32
  1080                        	.member	SegmentOffset,32,18,8,32
  1081                        	.member	operation_code,64,14,8,8
  1082                        	.eos
  1083                        	.stag	record_CONST,112,96
  1084                        	.member	FileOffset,0,18,8,32
  1085                        	.member	SegmentOffset,32,18,8,32
  1086                        	.member	operation_code,64,14,8,8
  1087                        	.member	ByteCnt,72,14,8,8
  1088                        	.member	data,80,142,8,32
  1089                        	.eos
  1090                        	.stag	record_ALIGN,72,97
  1091                        	.member	FileOffset,0,18,8,32
  1092                        	.member	SegmentOffset,32,18,8,32
  1093                        	.member	operation_code,64,14,8,8
  1094                        	.eos
  1095                        	.stag	record_ORG,72,98
  1096                        	.member	FileOffset,0,18,8,32
  1097                        	.member	SegmentOffset,32,18,8,32
  1098                        	.member	operation_code,64,14,8,8
  1099                        	.eos
  Sat Jul 10 2021  1:15                                                Page 22


  1100                        	.stag	record_RELOC,152,99
  1101                        	.member	FileOffset,0,18,8,32
  1102                        	.member	SegmentOffset,32,18,8,32
  1103                        	.member	operation_code,64,14,8,8
  1104                        	.member	ByteCnt,72,14,8,8
  1105                        	.member	BitShiftCnt,80,14,8,8
  1106                        	.member	OffsetPatch,88,18,8,32
  1107                        	.member	OffsetReference,120,18,8,32
  1108                        	.eos
  1109                        	.stag	record_INTERSEG,184,100
  1110                        	.member	FileOffset,0,18,8,32
  1111                        	.member	SegmentOffset,32,18,8,32
  1112                        	.member	operation_code,64,14,8,8
  1113                        	.member	ByteCnt,72,14,8,8
  1114                        	.member	BitShiftCnt,80,14,8,8
  1115                        	.member	OffsetPatch,88,18,8,32
  1116                        	.member	FileNum,120,5,8,16
  1117                        	.member	SegNum,136,5,8,16
  1118                        	.member	OffsetReference,152,18,8,32
  1119                        	.eos
  1120                        	.stag	record_USING,72,101
  1121                        	.member	FileOffset,0,18,8,32
  1122                        	.member	SegmentOffset,32,18,8,32
  1123                        	.member	operation_code,64,14,8,8
  1124                        	.eos
  1125                        	.stag	record_STRONG,72,102
  1126                        	.member	FileOffset,0,18,8,32
  1127                        	.member	SegmentOffset,32,18,8,32
  1128                        	.member	operation_code,64,14,8,8
  1129                        	.eos
  1130                        	.stag	record_GLOBAL,72,103
  1131                        	.member	FileOffset,0,18,8,32
  1132                        	.member	SegmentOffset,32,18,8,32
  1133                        	.member	operation_code,64,14,8,8
  1134                        	.eos
  1135                        	.stag	record_GEQU,72,104
  1136                        	.member	FileOffset,0,18,8,32
  1137                        	.member	SegmentOffset,32,18,8,32
  1138                        	.member	operation_code,64,14,8,8
  1139                        	.eos
  1140                        	.stag	record_MEM,72,105
  1141                        	.member	FileOffset,0,18,8,32
  1142                        	.member	SegmentOffset,32,18,8,32
  1143                        	.member	operation_code,64,14,8,8
  1144                        	.eos
  1145                        	.stag	record_EXPR,72,106
  1146                        	.member	FileOffset,0,18,8,32
  1147                        	.member	SegmentOffset,32,18,8,32
  1148                        	.member	operation_code,64,14,8,8
  1149                        	.eos
  1150                        	.stag	record_ZEXPR,72,107
  1151                        	.member	FileOffset,0,18,8,32
  1152                        	.member	SegmentOffset,32,18,8,32
  1153                        	.member	operation_code,64,14,8,8
  1154                        	.eos
  1155                        	.stag	record_BEXPR,72,108
  1156                        	.member	FileOffset,0,18,8,32
  1157                        	.member	SegmentOffset,32,18,8,32
  Sat Jul 10 2021  1:15                                                Page 23


  1158                        	.member	operation_code,64,14,8,8
  1159                        	.eos
  1160                        	.stag	record_RELEXPR,72,109
  1161                        	.member	FileOffset,0,18,8,32
  1162                        	.member	SegmentOffset,32,18,8,32
  1163                        	.member	operation_code,64,14,8,8
  1164                        	.eos
  1165                        	.stag	record_LOCAL,72,110
  1166                        	.member	FileOffset,0,18,8,32
  1167                        	.member	SegmentOffset,32,18,8,32
  1168                        	.member	operation_code,64,14,8,8
  1169                        	.eos
  1170                        	.stag	record_EQU,72,111
  1171                        	.member	FileOffset,0,18,8,32
  1172                        	.member	SegmentOffset,32,18,8,32
  1173                        	.member	operation_code,64,14,8,8
  1174                        	.eos
  1175                        	.stag	record_DS,104,112
  1176                        	.member	FileOffset,0,18,8,32
  1177                        	.member	SegmentOffset,32,18,8,32
  1178                        	.member	operation_code,64,14,8,8
  1179                        	.member	nb_zero_byte,72,18,8,32
  1180                        	.eos
  1181                        	.stag	record_LCONST,136,113
  1182                        	.member	FileOffset,0,18,8,32
  1183                        	.member	SegmentOffset,32,18,8,32
  1184                        	.member	operation_code,64,14,8,8
  1185                        	.member	ByteCnt,72,18,8,32
  1186                        	.member	data,104,142,8,32
  1187                        	.eos
  1188                        	.stag	record_LEXPR,72,114
  1189                        	.member	FileOffset,0,18,8,32
  1190                        	.member	SegmentOffset,32,18,8,32
  1191                        	.member	operation_code,64,14,8,8
  1192                        	.eos
  1193                        	.stag	record_ENTRY,72,115
  1194                        	.member	FileOffset,0,18,8,32
  1195                        	.member	SegmentOffset,32,18,8,32
  1196                        	.member	operation_code,64,14,8,8
  1197                        	.eos
  1198                        	.stag	record_cRELOC,152,116
  1199                        	.member	FileOffset,0,18,8,32
  1200                        	.member	SegmentOffset,32,18,8,32
  1201                        	.member	operation_code,64,14,8,8
  1202                        	.member	ByteCnt,72,14,8,8
  1203                        	.member	BitShiftCnt,80,14,8,8
  1204                        	.member	OffsetPatch,88,18,8,32
  1205                        	.member	OffsetReference,120,18,8,32
  1206                        	.eos
  1207                        	.stag	record_cINTERSEG,176,117
  1208                        	.member	FileOffset,0,18,8,32
  1209                        	.member	SegmentOffset,32,18,8,32
  1210                        	.member	operation_code,64,14,8,8
  1211                        	.member	ByteCnt,72,14,8,8
  1212                        	.member	BitShiftCnt,80,14,8,8
  1213                        	.member	OffsetPatch,88,18,8,32
  1214                        	.member	FileNum,120,5,8,16
  1215                        	.member	SegNum,136,14,8,8
  Sat Jul 10 2021  1:15                                                Page 24


  1216                        	.member	OffsetReference,144,18,8,32
  1217                        	.eos
  1218                        	.stag	record_SUPER,592,118
  1219                        	.member	FileOffset,0,18,8,32
  1220                        	.member	SegmentOffset,32,18,8,32
  1221                        	.member	operation_code,64,14,8,8
  1222                        	.member	ByteCnt,72,18,8,32
  1223                        	.member	RecordType,104,14,8,8
  1224                        	.member	nb_SuperReloc2,112,5,8,16
  1225                        	.member	first_SuperReloc2,128,138,8,32,89
  1226                        	.member	last_SuperReloc2,160,138,8,32,89
  1227                        	.member	nb_SuperReloc3,192,5,8,16
  1228                        	.member	first_SuperReloc3,208,138,8,32,90
  1229                        	.member	last_SuperReloc3,240,138,8,32,90
  1230                        	.member	nb_SuperInterseg1,272,5,8,16
  1231                        	.member	first_SuperInterseg1,288,138,8,32,91
  1232                        	.member	last_SuperInterseg1,320,138,8,32,91
  1233                        	.member	nb_SuperInterseg212,352,5,8,16
  1234                        	.member	first_SuperInterseg212,368,138,8,32,92
  1235                        	.member	last_SuperInterseg212,400,138,8,32,92
  1236                        	.member	nb_SuperInterseg1324,432,5,8,16
  1237                        	.member	first_SuperInterseg1324,448,138,8,32,93
  1238                        	.member	last_SuperInterseg1324,480,138,8,32,93
  1239                        	.member	nb_SuperInterseg2536,512,5,8,16
  1240                        	.member	first_SuperInterseg2536,528,138,8,32,94
  1241                        	.member	last_SuperInterseg2536,560,138,8,32,94
  1242                        	.eos
  1243                        	.stag	record_General,72,119
  1244                        	.member	FileOffset,0,18,8,32
  1245                        	.member	SegmentOffset,32,18,8,32
  1246                        	.member	operation_code,64,14,8,8
  1247                        	.eos
  1248                        	.stag	record_Experimental,72,120
  1249                        	.member	FileOffset,0,18,8,32
  1250                        	.member	SegmentOffset,32,18,8,32
  1251                        	.member	operation_code,64,14,8,8
  1252                        	.eos
  1253                        	.stag	omf_reloc,128,121
  1254                        	.member	ByteCnt,0,14,8,8
  1255                        	.member	BitShiftCnt,8,14,8,8
  1256                        	.member	OffsetPatch,16,18,8,32
  1257                        	.member	OffsetReference,48,18,8,32
  1258                        	.member	origin,80,5,8,16
  1259                        	.member	next,96,138,8,32,121
  1260                        	.eos
  1261                        	.stag	omf_interseg,160,122
  1262                        	.member	ByteCnt,0,14,8,8
  1263                        	.member	BitShiftCnt,8,14,8,8
  1264                        	.member	OffsetPatch,16,18,8,32
  1265                        	.member	OffsetReference,48,18,8,32
  1266                        	.member	FileNum,80,5,8,16
  1267                        	.member	SegNum,96,5,8,16
  1268                        	.member	origin,112,5,8,16
  1269                        	.member	next,128,138,8,32,122
  1270                        	.eos
  1271                        	.line	458
  1272                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\OMF_Record.c",16
  Sat Jul 10 2021  1:15                                                Page 25


  1273                        ;
  1274                        ;static void *DecodeRecordEND(unsigned char *,int,
                    int,int *);
  1275                        ;static void *DecodeRecordCONST(unsigned char *,in
                    t,int,int *);
  1276                        ;static void *DecodeRecordALIGN(unsigned char *,in
                    t,int,int *);
  1277                        ;static void *DecodeRecordORG(unsigned char *,int,
                    int,int *);
  1278                        ;static void *DecodeRecordRELOC(unsigned char *,in
                    t,int,int *);
  1279                        ;static void *DecodeRecordINTERSEG(unsigned char *
                    ,int,int,int *);
  1280                        ;static void *DecodeRecordUSING(unsigned char *,in
                    t,int,int *);
  1281                        ;static void *DecodeRecordSTRONG(unsigned char *,i
                    nt,int,int *);
  1282                        ;static void *DecodeRecordGLOBAL(unsigned char *,i
                    nt,int,int *);
  1283                        ;static void *DecodeRecordGEQU(unsigned char *,int
                    ,int,int *);
  1284                        ;static void *DecodeRecordMEM(unsigned char *,int,
                    int,int *);
  1285                        ;static void *DecodeRecordEXPR(unsigned char *,int
                    ,int,int *);
  1286                        ;static void *DecodeRecordZEXPR(unsigned char *,in
                    t,int,int *);
  1287                        ;static void *DecodeRecordBEXPR(unsigned char *,in
                    t,int,int *);
  1288                        ;static void *DecodeRecordRELEXPR(unsigned char *,
                    int,int,int *);
  1289                        ;static void *DecodeRecordLOCAL(unsigned char *,in
                    t,int,int *);
  1290                        ;static void *DecodeRecordEQU(unsigned char *,int,
                    int,int *);
  1291                        ;static void *DecodeRecordDS(unsigned char *,int,i
                    nt,int *);
  1292                        ;static void *DecodeRecordLCONST(unsigned char *,i
                    nt,int,int *);
  1293                        ;static void *DecodeRecordLEXPR(unsigned char *,in
                    t,int,int *);
  1294                        ;static void *DecodeRecordENTRY(unsigned char *,in
                    t,int,int *);
  1295                        ;static void *DecodeRecordcRELOC(unsigned char *,i
                    nt,int,int *);
  1296                        ;static void *DecodeRecordcINTERSEG(unsigned char 
                    *,int,int,int *);
  1297                        ;static void *DecodeRecordSUPER(unsigned char *,in
                    t,int,unsigned char *,int,int *,struct omf_segment *);
  1298                        ;static void *DecodeRecordGeneral(unsigned char *,
                    int,int,int *);
  1299                        ;static void *DecodeRecordExperimental(unsigned ch
                    ar *,int,int,int *);
  1300                        ;
  1301                        ;static struct subrecord_SuperReloc2 *DecodeSuperR
                    eloc2(unsigned char *,unsigned char *,int,BYTE *,int *,struc
                    t omf_segment *);
  1302                        ;static struct subrecord_SuperReloc3 *DecodeSuperR
  Sat Jul 10 2021  1:15                                                Page 26


                    eloc3(unsigned char *,unsigned char *,int,BYTE *,int *,struc
                    t omf_segment *);
  1303                        ;static struct subrecord_SuperInterseg1 *DecodeSup
                    erInterseg1(unsigned char *,unsigned char *,int,BYTE *,int *
                    ,struct omf_segment *);
  1304                        ;static struct subrecord_SuperInterseg212 *DecodeS
                    uperInterseg212(unsigned char *,BYTE,unsigned char *,int,BYT
                    E *,int *,struct omf_segment *);
  1305                        ;static struct subrecord_SuperInterseg1324 *Decode
                    SuperInterseg1324(unsigned char *,BYTE,unsigned char *,int,B
                    YTE *,int *,struct omf_segment *);
  1306                        ;static struct subrecord_SuperInterseg2536 *Decode
                    SuperInterseg2536(unsigned char *,BYTE,unsigned char *,int,B
                    YTE *,int *,struct omf_segment *);
  1307                        ;
  1308                        ;static void AddReloc(BYTE,BYTE,DWORD,DWORD,int);
  1309                        ;static void AddInterseg(BYTE,BYTE,DWORD,DWORD,WOR
                    D,WORD,int);
  1310                        ;
  1311                        ;static void mem_free_END(struct record_END *);
  1312                        ;static void mem_free_CONST(struct record_CONST *)
                    ;
  1313                        ;static void mem_free_ALIGN(struct record_ALIGN *)
                    ;
  1314                        ;static void mem_free_ORG(struct record_ORG *);
  1315                        ;static void mem_free_RELOC(struct record_RELOC *)
                    ;
  1316                        ;static void mem_free_INTERSEG(struct record_INTER
                    SEG *);
  1317                        ;static void mem_free_USING(struct record_USING *)
                    ;
  1318                        ;static void mem_free_STRONG(struct record_STRONG 
                    *);
  1319                        ;static void mem_free_GLOBAL(struct record_GLOBAL 
                    *);
  1320                        ;static void mem_free_GEQU(struct record_GEQU *);
  1321                        ;static void mem_free_MEM(struct record_MEM *);
  1322                        ;static void mem_free_EXPR(struct record_EXPR *);
  1323                        ;static void mem_free_ZEXPR(struct record_ZEXPR *)
                    ;
  1324                        ;static void mem_free_BEXPR(struct record_BEXPR *)
                    ;
  1325                        ;static void mem_free_RELEXPR(struct record_RELEXP
                    R *);
  1326                        ;static void mem_free_LOCAL(struct record_LOCAL *)
                    ;
  1327                        ;static void mem_free_EQU(struct record_EQU *);
  1328                        ;static void mem_free_DS(struct record_DS *);
  1329                        ;static void mem_free_LCONST(struct record_LCONST 
                    *);
  1330                        ;static void mem_free_LEXPR(struct record_LEXPR *)
                    ;
  1331                        ;static void mem_free_ENTRY(struct record_ENTRY *)
                    ;
  1332                        ;static void mem_free_cRELOC(struct record_cRELOC 
                    *);
  1333                        ;static void mem_free_cINTERSEG(struct record_cINT
                    ERSEG *);
  Sat Jul 10 2021  1:15                                                Page 27


  1334                        ;static void mem_free_SUPER(struct record_SUPER *)
                    ;
  1335                        ;static void mem_free_General(struct record_Genera
                    l *);
  1336                        ;static void mem_free_Experimental(struct record_E
                    xperimental *);
  1337                        ;
  1338                        ;#pragma section CODE=LOADER,offset $9:7000
  1339                        LOADER	section	offset $9:7000
  1340 09:7000:              	ends
  1341                        ;
  1342                        ;/************************************************
                    ****************/
  1343                        ;/*  DecodeOneRecord() :  Décode un Record du Body
                     d'un Segment. */
  1344                        ;/************************************************
                    ****************/
  1345                        ;struct omf_body_record *DecodeOneRecord(unsigned 
                    char *data, int segment_num, int file_offset, int segment_of
                    fset, unsigned char *lconst, int lconst_length, int *record_
                    length_rtn, struct omf_segment *current_segment)
  1346                        ;{
  1347                        	.line	87
  1348                        	.line	88
  1349                        	LOADER
  1350                        	xdef	~~DecodeOneRecord
  1351                        	func
  1352                        	.function	88
  1353                        ~~DecodeOneRecord:
  1354                        	longa	on
  1355                        	longi	on
  1356 09:7000: 3B           	tsc
  1357 09:7001: 38           	sec
  1358 09:7002: E9 08 00     	sbc	#L2
  1359 09:7005: 1B           	tcs
  1360 09:7006: 0B           	phd
  1361 09:7007: 5B           	tcd
  1362             00000004   data_0	set	4
  1363             00000008   segment_num_0	set	8
  1364             0000000A   file_offset_0	set	10
  1365             0000000C   segment_offset_0	set	12
  1366             0000000E   lconst_0	set	14
  1367             00000012   lconst_length_0	set	18
  1368             00000014   record_length_rtn_0	set	20
  1369             00000018   current_segment_0	set	24
  1370                        	.block	88
  1371                        ;  struct omf_body_record *current_record;
  1372                        ;
  1373                        ;  /* Allocation mémoire */
  1374                        ;  current_record = (struct omf_body_record *) k_c
                    alloc(1,sizeof(struct omf_body_record));
  1375             00000000   current_record_1	set	0
  1376                        	.sym	current_record,0,138,1,32,88
  1377                        	.sym	data,4,142,6,32
  1378                        	.sym	segment_num,8,5,6,16
  1379                        	.sym	file_offset,10,5,6,16
  1380                        	.sym	segment_offset,12,5,6,16
  1381                        	.sym	lconst,14,142,6,32
  Sat Jul 10 2021  1:15                                                Page 28


  1382                        	.sym	lconst_length,18,5,6,16
  1383                        	.sym	record_length_rtn,20,133,6,32
  1384                        	.sym	current_segment,24,138,6,32,86
  1385                        	.line	92
  1386 09:7008: F4 15 00     	pea	#<$15
  1387 09:700B: F4 01 00     	pea	#<$1
  1388 09:700E: 22 xx xx xx  	jsl	~~k_calloc
  1389 09:7012: 85 05        	sta	<L3+current_record_1
  1390 09:7014: 86 07        	stx	<L3+current_record_1+2
  1391                        ;  if(current_record == NULL)
  1392                        	.line	93
  1393                        ;    {
  1394 09:7016: A5 05        	lda	<L3+current_record_1
  1395 09:7018: 05 07        	ora	<L3+current_record_1+2
  1396 09:701A: F0 03        	beq	L5
  1397 09:701C: 82 19 00     	brl	L10001
  1398                        L5:
  1399                        	.line	94
  1400                        ;      ////printf("Error : Impossible to allocate 
                    memory to process Segment #%02X Body Record.\n",current_segm
                    ent->header.SegNum);
  1401                        ;      return(NULL);
  1402                        	.line	96
  1403 09:701F: A9 00 00     	lda	#$0
  1404 09:7022: AA           	tax
  1405 09:7023: A9 00 00     	lda	#$0
  1406                        L6:
  1407 09:7026: A8           	tay
  1408 09:7027: A5 0A        	lda	<L2+2
  1409 09:7029: 85 22        	sta	<L2+2+24
  1410 09:702B: A5 09        	lda	<L2+1
  1411 09:702D: 85 21        	sta	<L2+1+24
  1412 09:702F: 2B           	pld
  1413 09:7030: 3B           	tsc
  1414 09:7031: 18           	clc
  1415 09:7032: 69 20 00     	adc	#L2+24
  1416 09:7035: 1B           	tcs
  1417 09:7036: 98           	tya
  1418 09:7037: 6B           	rtl
  1419                        ;    }
  1420                        	.line	97
  1421                        ;
  1422                        ;  /* Operation code */
  1423                        ;  current_record->operation_code = data[0];
  1424                        L10001:
  1425                        	.line	100
  1426 09:7038: E2 20        	sep	#$20
  1427                        	longa	off
  1428 09:703A: A7 0C        	lda	[<L2+data_0]
  1429 09:703C: A0 08 00     	ldy	#$8
  1430 09:703F: 97 05        	sta	[<L3+current_record_1],Y
  1431 09:7041: C2 20        	rep	#$20
  1432                        	longa	on
  1433                        ;
  1434                        ;  /** Données du Record **/
  1435                        ;  if(current_record->operation_code == 0x00)
  1436                        	.line	103
  1437                        ;    current_record->record_data = DecodeRecordEND
  Sat Jul 10 2021  1:15                                                Page 29


                    (data,file_offset,segment_offset,record_length_rtn);
  1438 09:7043: A0 08 00     	ldy	#$8
  1439 09:7046: B7 05        	lda	[<L3+current_record_1],Y
  1440 09:7048: 29 FF 00     	and	#$ff
  1441 09:704B: F0 03        	beq	L7
  1442 09:704D: 82 25 00     	brl	L10002
  1443                        L7:
  1444                        	.line	104
  1445 09:7050: D4 1E        	pei	<L2+record_length_rtn_0+2
  1446 09:7052: D4 1C        	pei	<L2+record_length_rtn_0
  1447 09:7054: D4 14        	pei	<L2+segment_offset_0
  1448 09:7056: D4 12        	pei	<L2+file_offset_0
  1449 09:7058: D4 0E        	pei	<L2+data_0+2
  1450 09:705A: D4 0C        	pei	<L2+data_0
  1451 09:705C: 22 2B 7F 09  	jsl	~~DecodeRecordEND
  1452 09:7060: 85 01        	sta	<R0
  1453 09:7062: 86 03        	stx	<R0+2
  1454 09:7064: A5 01        	lda	<R0
  1455 09:7066: A0 0B 00     	ldy	#$b
  1456 09:7069: 97 05        	sta	[<L3+current_record_1],Y
  1457 09:706B: A5 03        	lda	<R0+2
  1458 09:706D: A0 0D 00     	ldy	#$d
  1459 09:7070: 97 05        	sta	[<L3+current_record_1],Y
  1460                        ;  else if(current_record->operation_code >= 0x01 
                    && current_record->operation_code <= 0xDF)
  1461 09:7072: 82 69 05     	brl	L10003
  1462                        L10002:
  1463                        	.line	105
  1464                        ;    current_record->record_data = DecodeRecordCON
                    ST(data,file_offset,segment_offset,record_length_rtn);
  1465 09:7075: E2 20        	sep	#$20
  1466                        	longa	off
  1467 09:7077: A0 08 00     	ldy	#$8
  1468 09:707A: B7 05        	lda	[<L3+current_record_1],Y
  1469 09:707C: C9 01        	cmp	#<$1
  1470 09:707E: C2 20        	rep	#$20
  1471                        	longa	on
  1472 09:7080: B0 03        	bcs	L8
  1473 09:7082: 82 35 00     	brl	L10004
  1474                        L8:
  1475 09:7085: E2 20        	sep	#$20
  1476                        	longa	off
  1477 09:7087: A9 DF        	lda	#$df
  1478 09:7089: A0 08 00     	ldy	#$8
  1479 09:708C: D7 05        	cmp	[<L3+current_record_1],Y
  1480 09:708E: C2 20        	rep	#$20
  1481                        	longa	on
  1482 09:7090: B0 03        	bcs	L9
  1483 09:7092: 82 25 00     	brl	L10004
  1484                        L9:
  1485                        	.line	106
  1486 09:7095: D4 1E        	pei	<L2+record_length_rtn_0+2
  1487 09:7097: D4 1C        	pei	<L2+record_length_rtn_0
  1488 09:7099: D4 14        	pei	<L2+segment_offset_0
  1489 09:709B: D4 12        	pei	<L2+file_offset_0
  1490 09:709D: D4 0E        	pei	<L2+data_0+2
  1491 09:709F: D4 0C        	pei	<L2+data_0
  1492 09:70A1: 22 AB 7F 09  	jsl	~~DecodeRecordCONST
  Sat Jul 10 2021  1:15                                                Page 30


  1493 09:70A5: 85 01        	sta	<R0
  1494 09:70A7: 86 03        	stx	<R0+2
  1495 09:70A9: A5 01        	lda	<R0
  1496 09:70AB: A0 0B 00     	ldy	#$b
  1497 09:70AE: 97 05        	sta	[<L3+current_record_1],Y
  1498 09:70B0: A5 03        	lda	<R0+2
  1499 09:70B2: A0 0D 00     	ldy	#$d
  1500 09:70B5: 97 05        	sta	[<L3+current_record_1],Y
  1501                        ;  else if(current_record->operation_code == 0xE0)
  1502 09:70B7: 82 24 05     	brl	L10005
  1503                        L10004:
  1504                        	.line	107
  1505                        ;    current_record->record_data = DecodeRecordALI
                    GN(data,file_offset,segment_offset,record_length_rtn);
  1506 09:70BA: E2 20        	sep	#$20
  1507                        	longa	off
  1508 09:70BC: A0 08 00     	ldy	#$8
  1509 09:70BF: B7 05        	lda	[<L3+current_record_1],Y
  1510 09:70C1: C9 E0        	cmp	#<$e0
  1511 09:70C3: C2 20        	rep	#$20
  1512                        	longa	on
  1513 09:70C5: F0 03        	beq	L10
  1514 09:70C7: 82 25 00     	brl	L10006
  1515                        L10:
  1516                        	.line	108
  1517 09:70CA: D4 1E        	pei	<L2+record_length_rtn_0+2
  1518 09:70CC: D4 1C        	pei	<L2+record_length_rtn_0
  1519 09:70CE: D4 14        	pei	<L2+segment_offset_0
  1520 09:70D0: D4 12        	pei	<L2+file_offset_0
  1521 09:70D2: D4 0E        	pei	<L2+data_0+2
  1522 09:70D4: D4 0C        	pei	<L2+data_0
  1523 09:70D6: 22 AF 80 09  	jsl	~~DecodeRecordALIGN
  1524 09:70DA: 85 01        	sta	<R0
  1525 09:70DC: 86 03        	stx	<R0+2
  1526 09:70DE: A5 01        	lda	<R0
  1527 09:70E0: A0 0B 00     	ldy	#$b
  1528 09:70E3: 97 05        	sta	[<L3+current_record_1],Y
  1529 09:70E5: A5 03        	lda	<R0+2
  1530 09:70E7: A0 0D 00     	ldy	#$d
  1531 09:70EA: 97 05        	sta	[<L3+current_record_1],Y
  1532                        ;  else if(current_record->operation_code == 0xE1)
  1533 09:70EC: 82 EF 04     	brl	L10007
  1534                        L10006:
  1535                        	.line	109
  1536                        ;    current_record->record_data = DecodeRecordORG
                    (data,file_offset,segment_offset,record_length_rtn);
  1537 09:70EF: E2 20        	sep	#$20
  1538                        	longa	off
  1539 09:70F1: A0 08 00     	ldy	#$8
  1540 09:70F4: B7 05        	lda	[<L3+current_record_1],Y
  1541 09:70F6: C9 E1        	cmp	#<$e1
  1542 09:70F8: C2 20        	rep	#$20
  1543                        	longa	on
  1544 09:70FA: F0 03        	beq	L11
  1545 09:70FC: 82 25 00     	brl	L10008
  1546                        L11:
  1547                        	.line	110
  1548 09:70FF: D4 1E        	pei	<L2+record_length_rtn_0+2
  Sat Jul 10 2021  1:15                                                Page 31


  1549 09:7101: D4 1C        	pei	<L2+record_length_rtn_0
  1550 09:7103: D4 14        	pei	<L2+segment_offset_0
  1551 09:7105: D4 12        	pei	<L2+file_offset_0
  1552 09:7107: D4 0E        	pei	<L2+data_0+2
  1553 09:7109: D4 0C        	pei	<L2+data_0
  1554 09:710B: 22 2A 81 09  	jsl	~~DecodeRecordORG
  1555 09:710F: 85 01        	sta	<R0
  1556 09:7111: 86 03        	stx	<R0+2
  1557 09:7113: A5 01        	lda	<R0
  1558 09:7115: A0 0B 00     	ldy	#$b
  1559 09:7118: 97 05        	sta	[<L3+current_record_1],Y
  1560 09:711A: A5 03        	lda	<R0+2
  1561 09:711C: A0 0D 00     	ldy	#$d
  1562 09:711F: 97 05        	sta	[<L3+current_record_1],Y
  1563                        ;  else if(current_record->operation_code == 0xE2)
  1564 09:7121: 82 BA 04     	brl	L10009
  1565                        L10008:
  1566                        	.line	111
  1567                        ;    current_record->record_data = DecodeRecordREL
                    OC(data,file_offset,segment_offset,record_length_rtn);
  1568 09:7124: E2 20        	sep	#$20
  1569                        	longa	off
  1570 09:7126: A0 08 00     	ldy	#$8
  1571 09:7129: B7 05        	lda	[<L3+current_record_1],Y
  1572 09:712B: C9 E2        	cmp	#<$e2
  1573 09:712D: C2 20        	rep	#$20
  1574                        	longa	on
  1575 09:712F: F0 03        	beq	L12
  1576 09:7131: 82 25 00     	brl	L10010
  1577                        L12:
  1578                        	.line	112
  1579 09:7134: D4 1E        	pei	<L2+record_length_rtn_0+2
  1580 09:7136: D4 1C        	pei	<L2+record_length_rtn_0
  1581 09:7138: D4 14        	pei	<L2+segment_offset_0
  1582 09:713A: D4 12        	pei	<L2+file_offset_0
  1583 09:713C: D4 0E        	pei	<L2+data_0+2
  1584 09:713E: D4 0C        	pei	<L2+data_0
  1585 09:7140: 22 A5 81 09  	jsl	~~DecodeRecordRELOC
  1586 09:7144: 85 01        	sta	<R0
  1587 09:7146: 86 03        	stx	<R0+2
  1588 09:7148: A5 01        	lda	<R0
  1589 09:714A: A0 0B 00     	ldy	#$b
  1590 09:714D: 97 05        	sta	[<L3+current_record_1],Y
  1591 09:714F: A5 03        	lda	<R0+2
  1592 09:7151: A0 0D 00     	ldy	#$d
  1593 09:7154: 97 05        	sta	[<L3+current_record_1],Y
  1594                        ;  else if(current_record->operation_code == 0xE3)
  1595 09:7156: 82 85 04     	brl	L10011
  1596                        L10010:
  1597                        	.line	113
  1598                        ;    current_record->record_data = DecodeRecordINT
                    ERSEG(data,file_offset,segment_offset,record_length_rtn);
  1599 09:7159: E2 20        	sep	#$20
  1600                        	longa	off
  1601 09:715B: A0 08 00     	ldy	#$8
  1602 09:715E: B7 05        	lda	[<L3+current_record_1],Y
  1603 09:7160: C9 E3        	cmp	#<$e3
  1604 09:7162: C2 20        	rep	#$20
  Sat Jul 10 2021  1:15                                                Page 32


  1605                        	longa	on
  1606 09:7164: F0 03        	beq	L13
  1607 09:7166: 82 25 00     	brl	L10012
  1608                        L13:
  1609                        	.line	114
  1610 09:7169: D4 1E        	pei	<L2+record_length_rtn_0+2
  1611 09:716B: D4 1C        	pei	<L2+record_length_rtn_0
  1612 09:716D: D4 14        	pei	<L2+segment_offset_0
  1613 09:716F: D4 12        	pei	<L2+file_offset_0
  1614 09:7171: D4 0E        	pei	<L2+data_0+2
  1615 09:7173: D4 0C        	pei	<L2+data_0
  1616 09:7175: 22 C6 82 09  	jsl	~~DecodeRecordINTERSEG
  1617 09:7179: 85 01        	sta	<R0
  1618 09:717B: 86 03        	stx	<R0+2
  1619 09:717D: A5 01        	lda	<R0
  1620 09:717F: A0 0B 00     	ldy	#$b
  1621 09:7182: 97 05        	sta	[<L3+current_record_1],Y
  1622 09:7184: A5 03        	lda	<R0+2
  1623 09:7186: A0 0D 00     	ldy	#$d
  1624 09:7189: 97 05        	sta	[<L3+current_record_1],Y
  1625                        ;  else if(current_record->operation_code == 0xE4)
  1626 09:718B: 82 50 04     	brl	L10013
  1627                        L10012:
  1628                        	.line	115
  1629                        ;    current_record->record_data = DecodeRecordUSI
                    NG(data,file_offset,segment_offset,record_length_rtn);
  1630 09:718E: E2 20        	sep	#$20
  1631                        	longa	off
  1632 09:7190: A0 08 00     	ldy	#$8
  1633 09:7193: B7 05        	lda	[<L3+current_record_1],Y
  1634 09:7195: C9 E4        	cmp	#<$e4
  1635 09:7197: C2 20        	rep	#$20
  1636                        	longa	on
  1637 09:7199: F0 03        	beq	L14
  1638 09:719B: 82 25 00     	brl	L10014
  1639                        L14:
  1640                        	.line	116
  1641 09:719E: D4 1E        	pei	<L2+record_length_rtn_0+2
  1642 09:71A0: D4 1C        	pei	<L2+record_length_rtn_0
  1643 09:71A2: D4 14        	pei	<L2+segment_offset_0
  1644 09:71A4: D4 12        	pei	<L2+file_offset_0
  1645 09:71A6: D4 0E        	pei	<L2+data_0+2
  1646 09:71A8: D4 0C        	pei	<L2+data_0
  1647 09:71AA: 22 4D 84 09  	jsl	~~DecodeRecordUSING
  1648 09:71AE: 85 01        	sta	<R0
  1649 09:71B0: 86 03        	stx	<R0+2
  1650 09:71B2: A5 01        	lda	<R0
  1651 09:71B4: A0 0B 00     	ldy	#$b
  1652 09:71B7: 97 05        	sta	[<L3+current_record_1],Y
  1653 09:71B9: A5 03        	lda	<R0+2
  1654 09:71BB: A0 0D 00     	ldy	#$d
  1655 09:71BE: 97 05        	sta	[<L3+current_record_1],Y
  1656                        ;  else if(current_record->operation_code == 0xE5)
  1657 09:71C0: 82 1B 04     	brl	L10015
  1658                        L10014:
  1659                        	.line	117
  1660                        ;    current_record->record_data = DecodeRecordSTR
                    ONG(data,file_offset,segment_offset,record_length_rtn);
  Sat Jul 10 2021  1:15                                                Page 33


  1661 09:71C3: E2 20        	sep	#$20
  1662                        	longa	off
  1663 09:71C5: A0 08 00     	ldy	#$8
  1664 09:71C8: B7 05        	lda	[<L3+current_record_1],Y
  1665 09:71CA: C9 E5        	cmp	#<$e5
  1666 09:71CC: C2 20        	rep	#$20
  1667                        	longa	on
  1668 09:71CE: F0 03        	beq	L15
  1669 09:71D0: 82 25 00     	brl	L10016
  1670                        L15:
  1671                        	.line	118
  1672 09:71D3: D4 1E        	pei	<L2+record_length_rtn_0+2
  1673 09:71D5: D4 1C        	pei	<L2+record_length_rtn_0
  1674 09:71D7: D4 14        	pei	<L2+segment_offset_0
  1675 09:71D9: D4 12        	pei	<L2+file_offset_0
  1676 09:71DB: D4 0E        	pei	<L2+data_0+2
  1677 09:71DD: D4 0C        	pei	<L2+data_0
  1678 09:71DF: 22 C8 84 09  	jsl	~~DecodeRecordSTRONG
  1679 09:71E3: 85 01        	sta	<R0
  1680 09:71E5: 86 03        	stx	<R0+2
  1681 09:71E7: A5 01        	lda	<R0
  1682 09:71E9: A0 0B 00     	ldy	#$b
  1683 09:71EC: 97 05        	sta	[<L3+current_record_1],Y
  1684 09:71EE: A5 03        	lda	<R0+2
  1685 09:71F0: A0 0D 00     	ldy	#$d
  1686 09:71F3: 97 05        	sta	[<L3+current_record_1],Y
  1687                        ;  else if(current_record->operation_code == 0xE6)
  1688 09:71F5: 82 E6 03     	brl	L10017
  1689                        L10016:
  1690                        	.line	119
  1691                        ;    current_record->record_data = DecodeRecordGLO
                    BAL(data,file_offset,segment_offset,record_length_rtn);
  1692 09:71F8: E2 20        	sep	#$20
  1693                        	longa	off
  1694 09:71FA: A0 08 00     	ldy	#$8
  1695 09:71FD: B7 05        	lda	[<L3+current_record_1],Y
  1696 09:71FF: C9 E6        	cmp	#<$e6
  1697 09:7201: C2 20        	rep	#$20
  1698                        	longa	on
  1699 09:7203: F0 03        	beq	L16
  1700 09:7205: 82 25 00     	brl	L10018
  1701                        L16:
  1702                        	.line	120
  1703 09:7208: D4 1E        	pei	<L2+record_length_rtn_0+2
  1704 09:720A: D4 1C        	pei	<L2+record_length_rtn_0
  1705 09:720C: D4 14        	pei	<L2+segment_offset_0
  1706 09:720E: D4 12        	pei	<L2+file_offset_0
  1707 09:7210: D4 0E        	pei	<L2+data_0+2
  1708 09:7212: D4 0C        	pei	<L2+data_0
  1709 09:7214: 22 43 85 09  	jsl	~~DecodeRecordGLOBAL
  1710 09:7218: 85 01        	sta	<R0
  1711 09:721A: 86 03        	stx	<R0+2
  1712 09:721C: A5 01        	lda	<R0
  1713 09:721E: A0 0B 00     	ldy	#$b
  1714 09:7221: 97 05        	sta	[<L3+current_record_1],Y
  1715 09:7223: A5 03        	lda	<R0+2
  1716 09:7225: A0 0D 00     	ldy	#$d
  1717 09:7228: 97 05        	sta	[<L3+current_record_1],Y
  Sat Jul 10 2021  1:15                                                Page 34


  1718                        ;  else if(current_record->operation_code == 0xE7)
  1719 09:722A: 82 B1 03     	brl	L10019
  1720                        L10018:
  1721                        	.line	121
  1722                        ;    current_record->record_data = DecodeRecordGEQ
                    U(data,file_offset,segment_offset,record_length_rtn);
  1723 09:722D: E2 20        	sep	#$20
  1724                        	longa	off
  1725 09:722F: A0 08 00     	ldy	#$8
  1726 09:7232: B7 05        	lda	[<L3+current_record_1],Y
  1727 09:7234: C9 E7        	cmp	#<$e7
  1728 09:7236: C2 20        	rep	#$20
  1729                        	longa	on
  1730 09:7238: F0 03        	beq	L17
  1731 09:723A: 82 25 00     	brl	L10020
  1732                        L17:
  1733                        	.line	122
  1734 09:723D: D4 1E        	pei	<L2+record_length_rtn_0+2
  1735 09:723F: D4 1C        	pei	<L2+record_length_rtn_0
  1736 09:7241: D4 14        	pei	<L2+segment_offset_0
  1737 09:7243: D4 12        	pei	<L2+file_offset_0
  1738 09:7245: D4 0E        	pei	<L2+data_0+2
  1739 09:7247: D4 0C        	pei	<L2+data_0
  1740 09:7249: 22 BE 85 09  	jsl	~~DecodeRecordGEQU
  1741 09:724D: 85 01        	sta	<R0
  1742 09:724F: 86 03        	stx	<R0+2
  1743 09:7251: A5 01        	lda	<R0
  1744 09:7253: A0 0B 00     	ldy	#$b
  1745 09:7256: 97 05        	sta	[<L3+current_record_1],Y
  1746 09:7258: A5 03        	lda	<R0+2
  1747 09:725A: A0 0D 00     	ldy	#$d
  1748 09:725D: 97 05        	sta	[<L3+current_record_1],Y
  1749                        ;  else if(current_record->operation_code == 0xE8)
  1750 09:725F: 82 7C 03     	brl	L10021
  1751                        L10020:
  1752                        	.line	123
  1753                        ;    current_record->record_data = DecodeRecordMEM
                    (data,file_offset,segment_offset,record_length_rtn);
  1754 09:7262: E2 20        	sep	#$20
  1755                        	longa	off
  1756 09:7264: A0 08 00     	ldy	#$8
  1757 09:7267: B7 05        	lda	[<L3+current_record_1],Y
  1758 09:7269: C9 E8        	cmp	#<$e8
  1759 09:726B: C2 20        	rep	#$20
  1760                        	longa	on
  1761 09:726D: F0 03        	beq	L18
  1762 09:726F: 82 25 00     	brl	L10022
  1763                        L18:
  1764                        	.line	124
  1765 09:7272: D4 1E        	pei	<L2+record_length_rtn_0+2
  1766 09:7274: D4 1C        	pei	<L2+record_length_rtn_0
  1767 09:7276: D4 14        	pei	<L2+segment_offset_0
  1768 09:7278: D4 12        	pei	<L2+file_offset_0
  1769 09:727A: D4 0E        	pei	<L2+data_0+2
  1770 09:727C: D4 0C        	pei	<L2+data_0
  1771 09:727E: 22 39 86 09  	jsl	~~DecodeRecordMEM
  1772 09:7282: 85 01        	sta	<R0
  1773 09:7284: 86 03        	stx	<R0+2
  Sat Jul 10 2021  1:15                                                Page 35


  1774 09:7286: A5 01        	lda	<R0
  1775 09:7288: A0 0B 00     	ldy	#$b
  1776 09:728B: 97 05        	sta	[<L3+current_record_1],Y
  1777 09:728D: A5 03        	lda	<R0+2
  1778 09:728F: A0 0D 00     	ldy	#$d
  1779 09:7292: 97 05        	sta	[<L3+current_record_1],Y
  1780                        ;  else if(current_record->operation_code == 0xEB)
  1781 09:7294: 82 47 03     	brl	L10023
  1782                        L10022:
  1783                        	.line	125
  1784                        ;    current_record->record_data = DecodeRecordEXP
                    R(data,file_offset,segment_offset,record_length_rtn);
  1785 09:7297: E2 20        	sep	#$20
  1786                        	longa	off
  1787 09:7299: A0 08 00     	ldy	#$8
  1788 09:729C: B7 05        	lda	[<L3+current_record_1],Y
  1789 09:729E: C9 EB        	cmp	#<$eb
  1790 09:72A0: C2 20        	rep	#$20
  1791                        	longa	on
  1792 09:72A2: F0 03        	beq	L19
  1793 09:72A4: 82 25 00     	brl	L10024
  1794                        L19:
  1795                        	.line	126
  1796 09:72A7: D4 1E        	pei	<L2+record_length_rtn_0+2
  1797 09:72A9: D4 1C        	pei	<L2+record_length_rtn_0
  1798 09:72AB: D4 14        	pei	<L2+segment_offset_0
  1799 09:72AD: D4 12        	pei	<L2+file_offset_0
  1800 09:72AF: D4 0E        	pei	<L2+data_0+2
  1801 09:72B1: D4 0C        	pei	<L2+data_0
  1802 09:72B3: 22 B4 86 09  	jsl	~~DecodeRecordEXPR
  1803 09:72B7: 85 01        	sta	<R0
  1804 09:72B9: 86 03        	stx	<R0+2
  1805 09:72BB: A5 01        	lda	<R0
  1806 09:72BD: A0 0B 00     	ldy	#$b
  1807 09:72C0: 97 05        	sta	[<L3+current_record_1],Y
  1808 09:72C2: A5 03        	lda	<R0+2
  1809 09:72C4: A0 0D 00     	ldy	#$d
  1810 09:72C7: 97 05        	sta	[<L3+current_record_1],Y
  1811                        ;  else if(current_record->operation_code == 0xEC)
  1812 09:72C9: 82 12 03     	brl	L10025
  1813                        L10024:
  1814                        	.line	127
  1815                        ;    current_record->record_data = DecodeRecordZEX
                    PR(data,file_offset,segment_offset,record_length_rtn);
  1816 09:72CC: E2 20        	sep	#$20
  1817                        	longa	off
  1818 09:72CE: A0 08 00     	ldy	#$8
  1819 09:72D1: B7 05        	lda	[<L3+current_record_1],Y
  1820 09:72D3: C9 EC        	cmp	#<$ec
  1821 09:72D5: C2 20        	rep	#$20
  1822                        	longa	on
  1823 09:72D7: F0 03        	beq	L20
  1824 09:72D9: 82 25 00     	brl	L10026
  1825                        L20:
  1826                        	.line	128
  1827 09:72DC: D4 1E        	pei	<L2+record_length_rtn_0+2
  1828 09:72DE: D4 1C        	pei	<L2+record_length_rtn_0
  1829 09:72E0: D4 14        	pei	<L2+segment_offset_0
  Sat Jul 10 2021  1:15                                                Page 36


  1830 09:72E2: D4 12        	pei	<L2+file_offset_0
  1831 09:72E4: D4 0E        	pei	<L2+data_0+2
  1832 09:72E6: D4 0C        	pei	<L2+data_0
  1833 09:72E8: 22 2F 87 09  	jsl	~~DecodeRecordZEXPR
  1834 09:72EC: 85 01        	sta	<R0
  1835 09:72EE: 86 03        	stx	<R0+2
  1836 09:72F0: A5 01        	lda	<R0
  1837 09:72F2: A0 0B 00     	ldy	#$b
  1838 09:72F5: 97 05        	sta	[<L3+current_record_1],Y
  1839 09:72F7: A5 03        	lda	<R0+2
  1840 09:72F9: A0 0D 00     	ldy	#$d
  1841 09:72FC: 97 05        	sta	[<L3+current_record_1],Y
  1842                        ;  else if(current_record->operation_code == 0xED)
  1843 09:72FE: 82 DD 02     	brl	L10027
  1844                        L10026:
  1845                        	.line	129
  1846                        ;    current_record->record_data = DecodeRecordBEX
                    PR(data,file_offset,segment_offset,record_length_rtn);
  1847 09:7301: E2 20        	sep	#$20
  1848                        	longa	off
  1849 09:7303: A0 08 00     	ldy	#$8
  1850 09:7306: B7 05        	lda	[<L3+current_record_1],Y
  1851 09:7308: C9 ED        	cmp	#<$ed
  1852 09:730A: C2 20        	rep	#$20
  1853                        	longa	on
  1854 09:730C: F0 03        	beq	L21
  1855 09:730E: 82 25 00     	brl	L10028
  1856                        L21:
  1857                        	.line	130
  1858 09:7311: D4 1E        	pei	<L2+record_length_rtn_0+2
  1859 09:7313: D4 1C        	pei	<L2+record_length_rtn_0
  1860 09:7315: D4 14        	pei	<L2+segment_offset_0
  1861 09:7317: D4 12        	pei	<L2+file_offset_0
  1862 09:7319: D4 0E        	pei	<L2+data_0+2
  1863 09:731B: D4 0C        	pei	<L2+data_0
  1864 09:731D: 22 AA 87 09  	jsl	~~DecodeRecordBEXPR
  1865 09:7321: 85 01        	sta	<R0
  1866 09:7323: 86 03        	stx	<R0+2
  1867 09:7325: A5 01        	lda	<R0
  1868 09:7327: A0 0B 00     	ldy	#$b
  1869 09:732A: 97 05        	sta	[<L3+current_record_1],Y
  1870 09:732C: A5 03        	lda	<R0+2
  1871 09:732E: A0 0D 00     	ldy	#$d
  1872 09:7331: 97 05        	sta	[<L3+current_record_1],Y
  1873                        ;  else if(current_record->operation_code == 0xEE)
  1874 09:7333: 82 A8 02     	brl	L10029
  1875                        L10028:
  1876                        	.line	131
  1877                        ;    current_record->record_data = DecodeRecordREL
                    EXPR(data,file_offset,segment_offset,record_length_rtn);
  1878 09:7336: E2 20        	sep	#$20
  1879                        	longa	off
  1880 09:7338: A0 08 00     	ldy	#$8
  1881 09:733B: B7 05        	lda	[<L3+current_record_1],Y
  1882 09:733D: C9 EE        	cmp	#<$ee
  1883 09:733F: C2 20        	rep	#$20
  1884                        	longa	on
  1885 09:7341: F0 03        	beq	L22
  Sat Jul 10 2021  1:15                                                Page 37


  1886 09:7343: 82 25 00     	brl	L10030
  1887                        L22:
  1888                        	.line	132
  1889 09:7346: D4 1E        	pei	<L2+record_length_rtn_0+2
  1890 09:7348: D4 1C        	pei	<L2+record_length_rtn_0
  1891 09:734A: D4 14        	pei	<L2+segment_offset_0
  1892 09:734C: D4 12        	pei	<L2+file_offset_0
  1893 09:734E: D4 0E        	pei	<L2+data_0+2
  1894 09:7350: D4 0C        	pei	<L2+data_0
  1895 09:7352: 22 25 88 09  	jsl	~~DecodeRecordRELEXPR
  1896 09:7356: 85 01        	sta	<R0
  1897 09:7358: 86 03        	stx	<R0+2
  1898 09:735A: A5 01        	lda	<R0
  1899 09:735C: A0 0B 00     	ldy	#$b
  1900 09:735F: 97 05        	sta	[<L3+current_record_1],Y
  1901 09:7361: A5 03        	lda	<R0+2
  1902 09:7363: A0 0D 00     	ldy	#$d
  1903 09:7366: 97 05        	sta	[<L3+current_record_1],Y
  1904                        ;  else if(current_record->operation_code == 0xEF)
  1905 09:7368: 82 73 02     	brl	L10031
  1906                        L10030:
  1907                        	.line	133
  1908                        ;    current_record->record_data = DecodeRecordLOC
                    AL(data,file_offset,segment_offset,record_length_rtn);
  1909 09:736B: E2 20        	sep	#$20
  1910                        	longa	off
  1911 09:736D: A0 08 00     	ldy	#$8
  1912 09:7370: B7 05        	lda	[<L3+current_record_1],Y
  1913 09:7372: C9 EF        	cmp	#<$ef
  1914 09:7374: C2 20        	rep	#$20
  1915                        	longa	on
  1916 09:7376: F0 03        	beq	L23
  1917 09:7378: 82 25 00     	brl	L10032
  1918                        L23:
  1919                        	.line	134
  1920 09:737B: D4 1E        	pei	<L2+record_length_rtn_0+2
  1921 09:737D: D4 1C        	pei	<L2+record_length_rtn_0
  1922 09:737F: D4 14        	pei	<L2+segment_offset_0
  1923 09:7381: D4 12        	pei	<L2+file_offset_0
  1924 09:7383: D4 0E        	pei	<L2+data_0+2
  1925 09:7385: D4 0C        	pei	<L2+data_0
  1926 09:7387: 22 A0 88 09  	jsl	~~DecodeRecordLOCAL
  1927 09:738B: 85 01        	sta	<R0
  1928 09:738D: 86 03        	stx	<R0+2
  1929 09:738F: A5 01        	lda	<R0
  1930 09:7391: A0 0B 00     	ldy	#$b
  1931 09:7394: 97 05        	sta	[<L3+current_record_1],Y
  1932 09:7396: A5 03        	lda	<R0+2
  1933 09:7398: A0 0D 00     	ldy	#$d
  1934 09:739B: 97 05        	sta	[<L3+current_record_1],Y
  1935                        ;  else if(current_record->operation_code == 0xF0)
  1936 09:739D: 82 3E 02     	brl	L10033
  1937                        L10032:
  1938                        	.line	135
  1939                        ;    current_record->record_data = DecodeRecordEQU
                    (data,file_offset,segment_offset,record_length_rtn);
  1940 09:73A0: E2 20        	sep	#$20
  1941                        	longa	off
  Sat Jul 10 2021  1:15                                                Page 38


  1942 09:73A2: A0 08 00     	ldy	#$8
  1943 09:73A5: B7 05        	lda	[<L3+current_record_1],Y
  1944 09:73A7: C9 F0        	cmp	#<$f0
  1945 09:73A9: C2 20        	rep	#$20
  1946                        	longa	on
  1947 09:73AB: F0 03        	beq	L24
  1948 09:73AD: 82 25 00     	brl	L10034
  1949                        L24:
  1950                        	.line	136
  1951 09:73B0: D4 1E        	pei	<L2+record_length_rtn_0+2
  1952 09:73B2: D4 1C        	pei	<L2+record_length_rtn_0
  1953 09:73B4: D4 14        	pei	<L2+segment_offset_0
  1954 09:73B6: D4 12        	pei	<L2+file_offset_0
  1955 09:73B8: D4 0E        	pei	<L2+data_0+2
  1956 09:73BA: D4 0C        	pei	<L2+data_0
  1957 09:73BC: 22 1B 89 09  	jsl	~~DecodeRecordEQU
  1958 09:73C0: 85 01        	sta	<R0
  1959 09:73C2: 86 03        	stx	<R0+2
  1960 09:73C4: A5 01        	lda	<R0
  1961 09:73C6: A0 0B 00     	ldy	#$b
  1962 09:73C9: 97 05        	sta	[<L3+current_record_1],Y
  1963 09:73CB: A5 03        	lda	<R0+2
  1964 09:73CD: A0 0D 00     	ldy	#$d
  1965 09:73D0: 97 05        	sta	[<L3+current_record_1],Y
  1966                        ;  else if(current_record->operation_code == 0xF1)
  1967 09:73D2: 82 09 02     	brl	L10035
  1968                        L10034:
  1969                        	.line	137
  1970                        ;    current_record->record_data = DecodeRecordDS(
                    data,file_offset,segment_offset,record_length_rtn);
  1971 09:73D5: E2 20        	sep	#$20
  1972                        	longa	off
  1973 09:73D7: A0 08 00     	ldy	#$8
  1974 09:73DA: B7 05        	lda	[<L3+current_record_1],Y
  1975 09:73DC: C9 F1        	cmp	#<$f1
  1976 09:73DE: C2 20        	rep	#$20
  1977                        	longa	on
  1978 09:73E0: F0 03        	beq	L25
  1979 09:73E2: 82 25 00     	brl	L10036
  1980                        L25:
  1981                        	.line	138
  1982 09:73E5: D4 1E        	pei	<L2+record_length_rtn_0+2
  1983 09:73E7: D4 1C        	pei	<L2+record_length_rtn_0
  1984 09:73E9: D4 14        	pei	<L2+segment_offset_0
  1985 09:73EB: D4 12        	pei	<L2+file_offset_0
  1986 09:73ED: D4 0E        	pei	<L2+data_0+2
  1987 09:73EF: D4 0C        	pei	<L2+data_0
  1988 09:73F1: 22 96 89 09  	jsl	~~DecodeRecordDS
  1989 09:73F5: 85 01        	sta	<R0
  1990 09:73F7: 86 03        	stx	<R0+2
  1991 09:73F9: A5 01        	lda	<R0
  1992 09:73FB: A0 0B 00     	ldy	#$b
  1993 09:73FE: 97 05        	sta	[<L3+current_record_1],Y
  1994 09:7400: A5 03        	lda	<R0+2
  1995 09:7402: A0 0D 00     	ldy	#$d
  1996 09:7405: 97 05        	sta	[<L3+current_record_1],Y
  1997                        ;  else if(current_record->operation_code == 0xF2)
  1998 09:7407: 82 D4 01     	brl	L10037
  Sat Jul 10 2021  1:15                                                Page 39


  1999                        L10036:
  2000                        	.line	139
  2001                        ;    current_record->record_data = DecodeRecordLCO
                    NST(data,file_offset,segment_offset,record_length_rtn);
  2002 09:740A: E2 20        	sep	#$20
  2003                        	longa	off
  2004 09:740C: A0 08 00     	ldy	#$8
  2005 09:740F: B7 05        	lda	[<L3+current_record_1],Y
  2006 09:7411: C9 F2        	cmp	#<$f2
  2007 09:7413: C2 20        	rep	#$20
  2008                        	longa	on
  2009 09:7415: F0 03        	beq	L26
  2010 09:7417: 82 25 00     	brl	L10038
  2011                        L26:
  2012                        	.line	140
  2013 09:741A: D4 1E        	pei	<L2+record_length_rtn_0+2
  2014 09:741C: D4 1C        	pei	<L2+record_length_rtn_0
  2015 09:741E: D4 14        	pei	<L2+segment_offset_0
  2016 09:7420: D4 12        	pei	<L2+file_offset_0
  2017 09:7422: D4 0E        	pei	<L2+data_0+2
  2018 09:7424: D4 0C        	pei	<L2+data_0
  2019 09:7426: 22 43 8A 09  	jsl	~~DecodeRecordLCONST
  2020 09:742A: 85 01        	sta	<R0
  2021 09:742C: 86 03        	stx	<R0+2
  2022 09:742E: A5 01        	lda	<R0
  2023 09:7430: A0 0B 00     	ldy	#$b
  2024 09:7433: 97 05        	sta	[<L3+current_record_1],Y
  2025 09:7435: A5 03        	lda	<R0+2
  2026 09:7437: A0 0D 00     	ldy	#$d
  2027 09:743A: 97 05        	sta	[<L3+current_record_1],Y
  2028                        ;  else if(current_record->operation_code == 0xF3)
  2029 09:743C: 82 9F 01     	brl	L10039
  2030                        L10038:
  2031                        	.line	141
  2032                        ;    current_record->record_data = DecodeRecordLEX
                    PR(data,file_offset,segment_offset,record_length_rtn);
  2033 09:743F: E2 20        	sep	#$20
  2034                        	longa	off
  2035 09:7441: A0 08 00     	ldy	#$8
  2036 09:7444: B7 05        	lda	[<L3+current_record_1],Y
  2037 09:7446: C9 F3        	cmp	#<$f3
  2038 09:7448: C2 20        	rep	#$20
  2039                        	longa	on
  2040 09:744A: F0 03        	beq	L27
  2041 09:744C: 82 25 00     	brl	L10040
  2042                        L27:
  2043                        	.line	142
  2044 09:744F: D4 1E        	pei	<L2+record_length_rtn_0+2
  2045 09:7451: D4 1C        	pei	<L2+record_length_rtn_0
  2046 09:7453: D4 14        	pei	<L2+segment_offset_0
  2047 09:7455: D4 12        	pei	<L2+file_offset_0
  2048 09:7457: D4 0E        	pei	<L2+data_0+2
  2049 09:7459: D4 0C        	pei	<L2+data_0
  2050 09:745B: 22 6D 8B 09  	jsl	~~DecodeRecordLEXPR
  2051 09:745F: 85 01        	sta	<R0
  2052 09:7461: 86 03        	stx	<R0+2
  2053 09:7463: A5 01        	lda	<R0
  2054 09:7465: A0 0B 00     	ldy	#$b
  Sat Jul 10 2021  1:15                                                Page 40


  2055 09:7468: 97 05        	sta	[<L3+current_record_1],Y
  2056 09:746A: A5 03        	lda	<R0+2
  2057 09:746C: A0 0D 00     	ldy	#$d
  2058 09:746F: 97 05        	sta	[<L3+current_record_1],Y
  2059                        ;  else if(current_record->operation_code == 0xF4)
  2060 09:7471: 82 6A 01     	brl	L10041
  2061                        L10040:
  2062                        	.line	143
  2063                        ;    current_record->record_data = DecodeRecordENT
                    RY(data,file_offset,segment_offset,record_length_rtn);
  2064 09:7474: E2 20        	sep	#$20
  2065                        	longa	off
  2066 09:7476: A0 08 00     	ldy	#$8
  2067 09:7479: B7 05        	lda	[<L3+current_record_1],Y
  2068 09:747B: C9 F4        	cmp	#<$f4
  2069 09:747D: C2 20        	rep	#$20
  2070                        	longa	on
  2071 09:747F: F0 03        	beq	L28
  2072 09:7481: 82 25 00     	brl	L10042
  2073                        L28:
  2074                        	.line	144
  2075 09:7484: D4 1E        	pei	<L2+record_length_rtn_0+2
  2076 09:7486: D4 1C        	pei	<L2+record_length_rtn_0
  2077 09:7488: D4 14        	pei	<L2+segment_offset_0
  2078 09:748A: D4 12        	pei	<L2+file_offset_0
  2079 09:748C: D4 0E        	pei	<L2+data_0+2
  2080 09:748E: D4 0C        	pei	<L2+data_0
  2081 09:7490: 22 E8 8B 09  	jsl	~~DecodeRecordENTRY
  2082 09:7494: 85 01        	sta	<R0
  2083 09:7496: 86 03        	stx	<R0+2
  2084 09:7498: A5 01        	lda	<R0
  2085 09:749A: A0 0B 00     	ldy	#$b
  2086 09:749D: 97 05        	sta	[<L3+current_record_1],Y
  2087 09:749F: A5 03        	lda	<R0+2
  2088 09:74A1: A0 0D 00     	ldy	#$d
  2089 09:74A4: 97 05        	sta	[<L3+current_record_1],Y
  2090                        ;  else if(current_record->operation_code == 0xF5)
  2091 09:74A6: 82 35 01     	brl	L10043
  2092                        L10042:
  2093                        	.line	145
  2094                        ;    current_record->record_data = DecodeRecordcRE
                    LOC(data,file_offset,segment_offset,record_length_rtn);
  2095 09:74A9: E2 20        	sep	#$20
  2096                        	longa	off
  2097 09:74AB: A0 08 00     	ldy	#$8
  2098 09:74AE: B7 05        	lda	[<L3+current_record_1],Y
  2099 09:74B0: C9 F5        	cmp	#<$f5
  2100 09:74B2: C2 20        	rep	#$20
  2101                        	longa	on
  2102 09:74B4: F0 03        	beq	L29
  2103 09:74B6: 82 25 00     	brl	L10044
  2104                        L29:
  2105                        	.line	146
  2106 09:74B9: D4 1E        	pei	<L2+record_length_rtn_0+2
  2107 09:74BB: D4 1C        	pei	<L2+record_length_rtn_0
  2108 09:74BD: D4 14        	pei	<L2+segment_offset_0
  2109 09:74BF: D4 12        	pei	<L2+file_offset_0
  2110 09:74C1: D4 0E        	pei	<L2+data_0+2
  Sat Jul 10 2021  1:15                                                Page 41


  2111 09:74C3: D4 0C        	pei	<L2+data_0
  2112 09:74C5: 22 63 8C 09  	jsl	~~DecodeRecordcRELOC
  2113 09:74C9: 85 01        	sta	<R0
  2114 09:74CB: 86 03        	stx	<R0+2
  2115 09:74CD: A5 01        	lda	<R0
  2116 09:74CF: A0 0B 00     	ldy	#$b
  2117 09:74D2: 97 05        	sta	[<L3+current_record_1],Y
  2118 09:74D4: A5 03        	lda	<R0+2
  2119 09:74D6: A0 0D 00     	ldy	#$d
  2120 09:74D9: 97 05        	sta	[<L3+current_record_1],Y
  2121                        ;  else if(current_record->operation_code == 0xF6)
  2122 09:74DB: 82 00 01     	brl	L10045
  2123                        L10044:
  2124                        	.line	147
  2125                        ;    current_record->record_data = DecodeRecordcIN
                    TERSEG(data,file_offset,segment_offset,record_length_rtn);
  2126 09:74DE: E2 20        	sep	#$20
  2127                        	longa	off
  2128 09:74E0: A0 08 00     	ldy	#$8
  2129 09:74E3: B7 05        	lda	[<L3+current_record_1],Y
  2130 09:74E5: C9 F6        	cmp	#<$f6
  2131 09:74E7: C2 20        	rep	#$20
  2132                        	longa	on
  2133 09:74E9: F0 03        	beq	L30
  2134 09:74EB: 82 25 00     	brl	L10046
  2135                        L30:
  2136                        	.line	148
  2137 09:74EE: D4 1E        	pei	<L2+record_length_rtn_0+2
  2138 09:74F0: D4 1C        	pei	<L2+record_length_rtn_0
  2139 09:74F2: D4 14        	pei	<L2+segment_offset_0
  2140 09:74F4: D4 12        	pei	<L2+file_offset_0
  2141 09:74F6: D4 0E        	pei	<L2+data_0+2
  2142 09:74F8: D4 0C        	pei	<L2+data_0
  2143 09:74FA: 22 A4 8D 09  	jsl	~~DecodeRecordcINTERSEG
  2144 09:74FE: 85 01        	sta	<R0
  2145 09:7500: 86 03        	stx	<R0+2
  2146 09:7502: A5 01        	lda	<R0
  2147 09:7504: A0 0B 00     	ldy	#$b
  2148 09:7507: 97 05        	sta	[<L3+current_record_1],Y
  2149 09:7509: A5 03        	lda	<R0+2
  2150 09:750B: A0 0D 00     	ldy	#$d
  2151 09:750E: 97 05        	sta	[<L3+current_record_1],Y
  2152                        ;  else if(current_record->operation_code == 0xF7)
  2153 09:7510: 82 CB 00     	brl	L10047
  2154                        L10046:
  2155                        	.line	149
  2156                        ;    current_record->record_data = DecodeRecordSUP
                    ER(data,file_offset,segment_offset,lconst,lconst_length,reco
                    rd_length_rtn,current_segment);
  2157 09:7513: E2 20        	sep	#$20
  2158                        	longa	off
  2159 09:7515: A0 08 00     	ldy	#$8
  2160 09:7518: B7 05        	lda	[<L3+current_record_1],Y
  2161 09:751A: C9 F7        	cmp	#<$f7
  2162 09:751C: C2 20        	rep	#$20
  2163                        	longa	on
  2164 09:751E: F0 03        	beq	L31
  2165 09:7520: 82 2F 00     	brl	L10048
  Sat Jul 10 2021  1:15                                                Page 42


  2166                        L31:
  2167                        	.line	150
  2168 09:7523: D4 22        	pei	<L2+current_segment_0+2
  2169 09:7525: D4 20        	pei	<L2+current_segment_0
  2170 09:7527: D4 1E        	pei	<L2+record_length_rtn_0+2
  2171 09:7529: D4 1C        	pei	<L2+record_length_rtn_0
  2172 09:752B: D4 1A        	pei	<L2+lconst_length_0
  2173 09:752D: D4 18        	pei	<L2+lconst_0+2
  2174 09:752F: D4 16        	pei	<L2+lconst_0
  2175 09:7531: D4 14        	pei	<L2+segment_offset_0
  2176 09:7533: D4 12        	pei	<L2+file_offset_0
  2177 09:7535: D4 0E        	pei	<L2+data_0+2
  2178 09:7537: D4 0C        	pei	<L2+data_0
  2179 09:7539: 22 0A 8F 09  	jsl	~~DecodeRecordSUPER
  2180 09:753D: 85 01        	sta	<R0
  2181 09:753F: 86 03        	stx	<R0+2
  2182 09:7541: A5 01        	lda	<R0
  2183 09:7543: A0 0B 00     	ldy	#$b
  2184 09:7546: 97 05        	sta	[<L3+current_record_1],Y
  2185 09:7548: A5 03        	lda	<R0+2
  2186 09:754A: A0 0D 00     	ldy	#$d
  2187 09:754D: 97 05        	sta	[<L3+current_record_1],Y
  2188                        ;  else if(current_record->operation_code == 0xFB)
  2189 09:754F: 82 8C 00     	brl	L10049
  2190                        L10048:
  2191                        	.line	151
  2192                        ;    current_record->record_data = DecodeRecordGen
                    eral(data,file_offset,segment_offset,record_length_rtn);
  2193 09:7552: E2 20        	sep	#$20
  2194                        	longa	off
  2195 09:7554: A0 08 00     	ldy	#$8
  2196 09:7557: B7 05        	lda	[<L3+current_record_1],Y
  2197 09:7559: C9 FB        	cmp	#<$fb
  2198 09:755B: C2 20        	rep	#$20
  2199                        	longa	on
  2200 09:755D: F0 03        	beq	L32
  2201 09:755F: 82 25 00     	brl	L10050
  2202                        L32:
  2203                        	.line	152
  2204 09:7562: D4 1E        	pei	<L2+record_length_rtn_0+2
  2205 09:7564: D4 1C        	pei	<L2+record_length_rtn_0
  2206 09:7566: D4 14        	pei	<L2+segment_offset_0
  2207 09:7568: D4 12        	pei	<L2+file_offset_0
  2208 09:756A: D4 0E        	pei	<L2+data_0+2
  2209 09:756C: D4 0C        	pei	<L2+data_0
  2210 09:756E: 22 FD 95 09  	jsl	~~DecodeRecordGeneral
  2211 09:7572: 85 01        	sta	<R0
  2212 09:7574: 86 03        	stx	<R0+2
  2213 09:7576: A5 01        	lda	<R0
  2214 09:7578: A0 0B 00     	ldy	#$b
  2215 09:757B: 97 05        	sta	[<L3+current_record_1],Y
  2216 09:757D: A5 03        	lda	<R0+2
  2217 09:757F: A0 0D 00     	ldy	#$d
  2218 09:7582: 97 05        	sta	[<L3+current_record_1],Y
  2219                        ;  else if(current_record->operation_code >= 0xFC 
                    && current_record->operation_code <= 0xFF)
  2220 09:7584: 82 57 00     	brl	L10051
  2221                        L10050:
  Sat Jul 10 2021  1:15                                                Page 43


  2222                        	.line	153
  2223                        ;    current_record->record_data = DecodeRecordExp
                    erimental(data,file_offset,segment_offset,record_length_rtn)
                    ;
  2224 09:7587: E2 20        	sep	#$20
  2225                        	longa	off
  2226 09:7589: A0 08 00     	ldy	#$8
  2227 09:758C: B7 05        	lda	[<L3+current_record_1],Y
  2228 09:758E: C9 FC        	cmp	#<$fc
  2229 09:7590: C2 20        	rep	#$20
  2230                        	longa	on
  2231 09:7592: B0 03        	bcs	L33
  2232 09:7594: 82 35 00     	brl	L10052
  2233                        L33:
  2234 09:7597: E2 20        	sep	#$20
  2235                        	longa	off
  2236 09:7599: A9 FF        	lda	#$ff
  2237 09:759B: A0 08 00     	ldy	#$8
  2238 09:759E: D7 05        	cmp	[<L3+current_record_1],Y
  2239 09:75A0: C2 20        	rep	#$20
  2240                        	longa	on
  2241 09:75A2: B0 03        	bcs	L34
  2242 09:75A4: 82 25 00     	brl	L10052
  2243                        L34:
  2244                        	.line	154
  2245 09:75A7: D4 1E        	pei	<L2+record_length_rtn_0+2
  2246 09:75A9: D4 1C        	pei	<L2+record_length_rtn_0
  2247 09:75AB: D4 14        	pei	<L2+segment_offset_0
  2248 09:75AD: D4 12        	pei	<L2+file_offset_0
  2249 09:75AF: D4 0E        	pei	<L2+data_0+2
  2250 09:75B1: D4 0C        	pei	<L2+data_0
  2251 09:75B3: 22 78 96 09  	jsl	~~DecodeRecordExperimental
  2252 09:75B7: 85 01        	sta	<R0
  2253 09:75B9: 86 03        	stx	<R0+2
  2254 09:75BB: A5 01        	lda	<R0
  2255 09:75BD: A0 0B 00     	ldy	#$b
  2256 09:75C0: 97 05        	sta	[<L3+current_record_1],Y
  2257 09:75C2: A5 03        	lda	<R0+2
  2258 09:75C4: A0 0D 00     	ldy	#$d
  2259 09:75C7: 97 05        	sta	[<L3+current_record_1],Y
  2260                        ;  else
  2261 09:75C9: 82 12 00     	brl	L10053
  2262                        L10052:
  2263                        ;    {
  2264                        	.line	156
  2265                        ;      /* Operation Code inconnu */
  2266                        ;      ////printf("Error : Unknow Record Operation
                     Code %02X for Segment #%02X at offset %d.\n",current_record
                    ->operation_code,segment_num,file_offset);
  2267                        ;      mem_free_record(current_record);
  2268                        	.line	159
  2269 09:75CC: D4 07        	pei	<L3+current_record_1+2
  2270 09:75CE: D4 05        	pei	<L3+current_record_1
  2271 09:75D0: 22 5A 7B 09  	jsl	~~mem_free_record
  2272                        ;      return(NULL);
  2273                        	.line	160
  2274 09:75D4: A9 00 00     	lda	#$0
  2275 09:75D7: AA           	tax
  Sat Jul 10 2021  1:15                                                Page 44


  2276 09:75D8: A9 00 00     	lda	#$0
  2277 09:75DB: 82 48 FA     	brl	L6
  2278                        ;    }
  2279                        	.line	161
  2280                        L10053:
  2281                        L10051:
  2282                        L10049:
  2283                        L10047:
  2284                        L10045:
  2285                        L10043:
  2286                        L10041:
  2287                        L10039:
  2288                        L10037:
  2289                        L10035:
  2290                        L10033:
  2291                        L10031:
  2292                        L10029:
  2293                        L10027:
  2294                        L10025:
  2295                        L10023:
  2296                        L10021:
  2297                        L10019:
  2298                        L10017:
  2299                        L10015:
  2300                        L10013:
  2301                        L10011:
  2302                        L10009:
  2303                        L10007:
  2304                        L10005:
  2305                        L10003:
  2306                        ;
  2307                        ;  /* Valide le Record */
  2308                        ;  if(current_record->record_data == NULL)
  2309                        	.line	164
  2310                        ;    {
  2311 09:75DE: A0 0B 00     	ldy	#$b
  2312 09:75E1: B7 05        	lda	[<L3+current_record_1],Y
  2313 09:75E3: A0 0D 00     	ldy	#$d
  2314 09:75E6: 17 05        	ora	[<L3+current_record_1],Y
  2315 09:75E8: F0 03        	beq	L35
  2316 09:75EA: 82 12 00     	brl	L10054
  2317                        L35:
  2318                        	.line	165
  2319                        ;      mem_free_record(current_record);
  2320                        	.line	166
  2321 09:75ED: D4 07        	pei	<L3+current_record_1+2
  2322 09:75EF: D4 05        	pei	<L3+current_record_1
  2323 09:75F1: 22 5A 7B 09  	jsl	~~mem_free_record
  2324                        ;      return(NULL);
  2325                        	.line	167
  2326 09:75F5: A9 00 00     	lda	#$0
  2327 09:75F8: AA           	tax
  2328 09:75F9: A9 00 00     	lda	#$0
  2329 09:75FC: 82 27 FA     	brl	L6
  2330                        ;    }
  2331                        	.line	168
  2332                        ;
  2333                        ;  /* Longueur du Record */
  Sat Jul 10 2021  1:15                                                Page 45


  2334                        ;  current_record->length = *record_length_rtn;
  2335                        L10054:
  2336                        	.line	171
  2337 09:75FF: A7 1C        	lda	[<L2+record_length_rtn_0]
  2338 09:7601: A0 09 00     	ldy	#$9
  2339 09:7604: 97 05        	sta	[<L3+current_record_1],Y
  2340                        ;
  2341                        ;  /* Renvoie le Record */
  2342                        ;  return(current_record);
  2343                        	.line	174
  2344 09:7606: A6 07        	ldx	<L3+current_record_1+2
  2345 09:7608: A5 05        	lda	<L3+current_record_1
  2346 09:760A: 82 19 FA     	brl	L6
  2347                        ;}
  2348                        	.line	175
  2349                        	.endblock	175
  2350             00000008   L2	equ	8
  2351             00000005   L3	equ	5
  2352 09:760D:              	ends
  2353                        	efunc
  2354                        	.endfunc	175,5,8
  2355                        	.line	175
  2356                        ;
  2357                        ;
  2358                        ;/************************************************
                    ***********************************/
  2359                        ;/*  GetRecordName() :  Revoie le nom d'un Record 
                    par rapport à son Operation Code. */
  2360                        ;/************************************************
                    ***********************************/
  2361                        ;char *GetRecordName(BYTE operation_code, BYTE Rec
                    ordType)
  2362                        ;{
  2363                        	.line	181
  2364                        	.line	182
  2365                        	LOADER
  2366                        	xdef	~~GetRecordName
  2367                        	func
  2368                        	.function	182
  2369                        ~~GetRecordName:
  2370                        	longa	on
  2371                        	longi	on
  2372 09:760D: 3B           	tsc
  2373 09:760E: 38           	sec
  2374 09:760F: E9 08 00     	sbc	#L36
  2375 09:7612: 1B           	tcs
  2376 09:7613: 0B           	phd
  2377 09:7614: 5B           	tcd
  2378             00000004   operation_code_0	set	4
  2379             00000006   RecordType_0	set	6
  2380                        	.block	182
  2381                        ;  static char record_name[256];
  2382                        	udata
  2383                        L10055:
  2384 00:0000:              	ds	256
  2385 00:0100:              	ends
  2386                        ;
  2387                        ;  /* Renvoi le nom du Record */
  Sat Jul 10 2021  1:15                                                Page 46


  2388                        ;  if(operation_code == 0x00)
  2389                        	.sym	record_name,10055,110,19,0,256
  2390                        	.sym	operation_code,4,14,6,8
  2391                        	.sym	RecordType,6,14,6,8
  2392                        	.line	186
  2393                        ;    strcpy(record_name,"END");
  2394 09:7615: A5 0C        	lda	<L36+operation_code_0
  2395 09:7617: 29 FF 00     	and	#$ff
  2396 09:761A: F0 03        	beq	L39
  2397 09:761C: 82 1B 00     	brl	L10056
  2398                        L39:
  2399                        	.line	187
  2400 09:761F: F4 xx xx     	pea	#^L1
  2401 09:7622: F4 xx xx     	pea	#<L1
  2402 09:7625: A9 xx xx     	lda	#<L10055
  2403 09:7628: 85 01        	sta	<R0
  2404                        	xref	_BEG_DATA
  2405 09:762A: A9 xx xx     	lda	#_BEG_DATA>>16
  2406 09:762D: 85 03        	sta	<R0+2
  2407 09:762F: D4 03        	pei	<R0+2
  2408 09:7631: D4 01        	pei	<R0
  2409 09:7633: 22 xx xx xx  	jsl	~~strcpy
  2410                        ;  else if(operation_code >= 0x01 && operation_cod
                    e <= 0xDF)
  2411 09:7637: 82 20 04     	brl	L10057
  2412                        L10056:
  2413                        	.line	188
  2414                        ;    strcpy(record_name,"CONST");
  2415 09:763A: E2 20        	sep	#$20
  2416                        	longa	off
  2417 09:763C: A5 0C        	lda	<L36+operation_code_0
  2418 09:763E: C9 01        	cmp	#<$1
  2419 09:7640: C2 20        	rep	#$20
  2420                        	longa	on
  2421 09:7642: B0 03        	bcs	L40
  2422 09:7644: 82 28 00     	brl	L10058
  2423                        L40:
  2424 09:7647: E2 20        	sep	#$20
  2425                        	longa	off
  2426 09:7649: A9 DF        	lda	#$df
  2427 09:764B: C5 0C        	cmp	<L36+operation_code_0
  2428 09:764D: C2 20        	rep	#$20
  2429                        	longa	on
  2430 09:764F: B0 03        	bcs	L41
  2431 09:7651: 82 1B 00     	brl	L10058
  2432                        L41:
  2433                        	.line	189
  2434 09:7654: F4 xx xx     	pea	#^L1+4
  2435 09:7657: F4 xx xx     	pea	#<L1+4
  2436 09:765A: A9 xx xx     	lda	#<L10055
  2437 09:765D: 85 01        	sta	<R0
  2438                        	xref	_BEG_DATA
  2439 09:765F: A9 xx xx     	lda	#_BEG_DATA>>16
  2440 09:7662: 85 03        	sta	<R0+2
  2441 09:7664: D4 03        	pei	<R0+2
  2442 09:7666: D4 01        	pei	<R0
  2443 09:7668: 22 xx xx xx  	jsl	~~strcpy
  2444                        ;  else if(operation_code == 0xE0)
  Sat Jul 10 2021  1:15                                                Page 47


  2445 09:766C: 82 EB 03     	brl	L10059
  2446                        L10058:
  2447                        	.line	190
  2448                        ;    strcpy(record_name,"ALIGN");
  2449 09:766F: E2 20        	sep	#$20
  2450                        	longa	off
  2451 09:7671: A5 0C        	lda	<L36+operation_code_0
  2452 09:7673: C9 E0        	cmp	#<$e0
  2453 09:7675: C2 20        	rep	#$20
  2454                        	longa	on
  2455 09:7677: F0 03        	beq	L42
  2456 09:7679: 82 1B 00     	brl	L10060
  2457                        L42:
  2458                        	.line	191
  2459 09:767C: F4 xx xx     	pea	#^L1+10
  2460 09:767F: F4 xx xx     	pea	#<L1+10
  2461 09:7682: A9 xx xx     	lda	#<L10055
  2462 09:7685: 85 01        	sta	<R0
  2463                        	xref	_BEG_DATA
  2464 09:7687: A9 xx xx     	lda	#_BEG_DATA>>16
  2465 09:768A: 85 03        	sta	<R0+2
  2466 09:768C: D4 03        	pei	<R0+2
  2467 09:768E: D4 01        	pei	<R0
  2468 09:7690: 22 xx xx xx  	jsl	~~strcpy
  2469                        ;  else if(operation_code == 0xE1)
  2470 09:7694: 82 C3 03     	brl	L10061
  2471                        L10060:
  2472                        	.line	192
  2473                        ;    strcpy(record_name,"ORG");
  2474 09:7697: E2 20        	sep	#$20
  2475                        	longa	off
  2476 09:7699: A5 0C        	lda	<L36+operation_code_0
  2477 09:769B: C9 E1        	cmp	#<$e1
  2478 09:769D: C2 20        	rep	#$20
  2479                        	longa	on
  2480 09:769F: F0 03        	beq	L43
  2481 09:76A1: 82 1B 00     	brl	L10062
  2482                        L43:
  2483                        	.line	193
  2484 09:76A4: F4 xx xx     	pea	#^L1+16
  2485 09:76A7: F4 xx xx     	pea	#<L1+16
  2486 09:76AA: A9 xx xx     	lda	#<L10055
  2487 09:76AD: 85 01        	sta	<R0
  2488                        	xref	_BEG_DATA
  2489 09:76AF: A9 xx xx     	lda	#_BEG_DATA>>16
  2490 09:76B2: 85 03        	sta	<R0+2
  2491 09:76B4: D4 03        	pei	<R0+2
  2492 09:76B6: D4 01        	pei	<R0
  2493 09:76B8: 22 xx xx xx  	jsl	~~strcpy
  2494                        ;  else if(operation_code == 0xE2)
  2495 09:76BC: 82 9B 03     	brl	L10063
  2496                        L10062:
  2497                        	.line	194
  2498                        ;    strcpy(record_name,"RELOC");
  2499 09:76BF: E2 20        	sep	#$20
  2500                        	longa	off
  2501 09:76C1: A5 0C        	lda	<L36+operation_code_0
  2502 09:76C3: C9 E2        	cmp	#<$e2
  Sat Jul 10 2021  1:15                                                Page 48


  2503 09:76C5: C2 20        	rep	#$20
  2504                        	longa	on
  2505 09:76C7: F0 03        	beq	L44
  2506 09:76C9: 82 1B 00     	brl	L10064
  2507                        L44:
  2508                        	.line	195
  2509 09:76CC: F4 xx xx     	pea	#^L1+20
  2510 09:76CF: F4 xx xx     	pea	#<L1+20
  2511 09:76D2: A9 xx xx     	lda	#<L10055
  2512 09:76D5: 85 01        	sta	<R0
  2513                        	xref	_BEG_DATA
  2514 09:76D7: A9 xx xx     	lda	#_BEG_DATA>>16
  2515 09:76DA: 85 03        	sta	<R0+2
  2516 09:76DC: D4 03        	pei	<R0+2
  2517 09:76DE: D4 01        	pei	<R0
  2518 09:76E0: 22 xx xx xx  	jsl	~~strcpy
  2519                        ;  else if(operation_code == 0xE3)
  2520 09:76E4: 82 73 03     	brl	L10065
  2521                        L10064:
  2522                        	.line	196
  2523                        ;    strcpy(record_name,"INTERSEG");
  2524 09:76E7: E2 20        	sep	#$20
  2525                        	longa	off
  2526 09:76E9: A5 0C        	lda	<L36+operation_code_0
  2527 09:76EB: C9 E3        	cmp	#<$e3
  2528 09:76ED: C2 20        	rep	#$20
  2529                        	longa	on
  2530 09:76EF: F0 03        	beq	L45
  2531 09:76F1: 82 1B 00     	brl	L10066
  2532                        L45:
  2533                        	.line	197
  2534 09:76F4: F4 xx xx     	pea	#^L1+26
  2535 09:76F7: F4 xx xx     	pea	#<L1+26
  2536 09:76FA: A9 xx xx     	lda	#<L10055
  2537 09:76FD: 85 01        	sta	<R0
  2538                        	xref	_BEG_DATA
  2539 09:76FF: A9 xx xx     	lda	#_BEG_DATA>>16
  2540 09:7702: 85 03        	sta	<R0+2
  2541 09:7704: D4 03        	pei	<R0+2
  2542 09:7706: D4 01        	pei	<R0
  2543 09:7708: 22 xx xx xx  	jsl	~~strcpy
  2544                        ;  else if(operation_code == 0xE4)
  2545 09:770C: 82 4B 03     	brl	L10067
  2546                        L10066:
  2547                        	.line	198
  2548                        ;    strcpy(record_name,"USING");
  2549 09:770F: E2 20        	sep	#$20
  2550                        	longa	off
  2551 09:7711: A5 0C        	lda	<L36+operation_code_0
  2552 09:7713: C9 E4        	cmp	#<$e4
  2553 09:7715: C2 20        	rep	#$20
  2554                        	longa	on
  2555 09:7717: F0 03        	beq	L46
  2556 09:7719: 82 1B 00     	brl	L10068
  2557                        L46:
  2558                        	.line	199
  2559 09:771C: F4 xx xx     	pea	#^L1+35
  2560 09:771F: F4 xx xx     	pea	#<L1+35
  Sat Jul 10 2021  1:15                                                Page 49


  2561 09:7722: A9 xx xx     	lda	#<L10055
  2562 09:7725: 85 01        	sta	<R0
  2563                        	xref	_BEG_DATA
  2564 09:7727: A9 xx xx     	lda	#_BEG_DATA>>16
  2565 09:772A: 85 03        	sta	<R0+2
  2566 09:772C: D4 03        	pei	<R0+2
  2567 09:772E: D4 01        	pei	<R0
  2568 09:7730: 22 xx xx xx  	jsl	~~strcpy
  2569                        ;  else if(operation_code == 0xE5)
  2570 09:7734: 82 23 03     	brl	L10069
  2571                        L10068:
  2572                        	.line	200
  2573                        ;    strcpy(record_name,"STRONG");
  2574 09:7737: E2 20        	sep	#$20
  2575                        	longa	off
  2576 09:7739: A5 0C        	lda	<L36+operation_code_0
  2577 09:773B: C9 E5        	cmp	#<$e5
  2578 09:773D: C2 20        	rep	#$20
  2579                        	longa	on
  2580 09:773F: F0 03        	beq	L47
  2581 09:7741: 82 1B 00     	brl	L10070
  2582                        L47:
  2583                        	.line	201
  2584 09:7744: F4 xx xx     	pea	#^L1+41
  2585 09:7747: F4 xx xx     	pea	#<L1+41
  2586 09:774A: A9 xx xx     	lda	#<L10055
  2587 09:774D: 85 01        	sta	<R0
  2588                        	xref	_BEG_DATA
  2589 09:774F: A9 xx xx     	lda	#_BEG_DATA>>16
  2590 09:7752: 85 03        	sta	<R0+2
  2591 09:7754: D4 03        	pei	<R0+2
  2592 09:7756: D4 01        	pei	<R0
  2593 09:7758: 22 xx xx xx  	jsl	~~strcpy
  2594                        ;  else if(operation_code == 0xE6)
  2595 09:775C: 82 FB 02     	brl	L10071
  2596                        L10070:
  2597                        	.line	202
  2598                        ;    strcpy(record_name,"GLOBAL");
  2599 09:775F: E2 20        	sep	#$20
  2600                        	longa	off
  2601 09:7761: A5 0C        	lda	<L36+operation_code_0
  2602 09:7763: C9 E6        	cmp	#<$e6
  2603 09:7765: C2 20        	rep	#$20
  2604                        	longa	on
  2605 09:7767: F0 03        	beq	L48
  2606 09:7769: 82 1B 00     	brl	L10072
  2607                        L48:
  2608                        	.line	203
  2609 09:776C: F4 xx xx     	pea	#^L1+48
  2610 09:776F: F4 xx xx     	pea	#<L1+48
  2611 09:7772: A9 xx xx     	lda	#<L10055
  2612 09:7775: 85 01        	sta	<R0
  2613                        	xref	_BEG_DATA
  2614 09:7777: A9 xx xx     	lda	#_BEG_DATA>>16
  2615 09:777A: 85 03        	sta	<R0+2
  2616 09:777C: D4 03        	pei	<R0+2
  2617 09:777E: D4 01        	pei	<R0
  2618 09:7780: 22 xx xx xx  	jsl	~~strcpy
  Sat Jul 10 2021  1:15                                                Page 50


  2619                        ;  else if(operation_code == 0xE7)
  2620 09:7784: 82 D3 02     	brl	L10073
  2621                        L10072:
  2622                        	.line	204
  2623                        ;    strcpy(record_name,"GEQU");
  2624 09:7787: E2 20        	sep	#$20
  2625                        	longa	off
  2626 09:7789: A5 0C        	lda	<L36+operation_code_0
  2627 09:778B: C9 E7        	cmp	#<$e7
  2628 09:778D: C2 20        	rep	#$20
  2629                        	longa	on
  2630 09:778F: F0 03        	beq	L49
  2631 09:7791: 82 1B 00     	brl	L10074
  2632                        L49:
  2633                        	.line	205
  2634 09:7794: F4 xx xx     	pea	#^L1+55
  2635 09:7797: F4 xx xx     	pea	#<L1+55
  2636 09:779A: A9 xx xx     	lda	#<L10055
  2637 09:779D: 85 01        	sta	<R0
  2638                        	xref	_BEG_DATA
  2639 09:779F: A9 xx xx     	lda	#_BEG_DATA>>16
  2640 09:77A2: 85 03        	sta	<R0+2
  2641 09:77A4: D4 03        	pei	<R0+2
  2642 09:77A6: D4 01        	pei	<R0
  2643 09:77A8: 22 xx xx xx  	jsl	~~strcpy
  2644                        ;  else if(operation_code == 0xE8)
  2645 09:77AC: 82 AB 02     	brl	L10075
  2646                        L10074:
  2647                        	.line	206
  2648                        ;    strcpy(record_name,"MEM");
  2649 09:77AF: E2 20        	sep	#$20
  2650                        	longa	off
  2651 09:77B1: A5 0C        	lda	<L36+operation_code_0
  2652 09:77B3: C9 E8        	cmp	#<$e8
  2653 09:77B5: C2 20        	rep	#$20
  2654                        	longa	on
  2655 09:77B7: F0 03        	beq	L50
  2656 09:77B9: 82 1B 00     	brl	L10076
  2657                        L50:
  2658                        	.line	207
  2659 09:77BC: F4 xx xx     	pea	#^L1+60
  2660 09:77BF: F4 xx xx     	pea	#<L1+60
  2661 09:77C2: A9 xx xx     	lda	#<L10055
  2662 09:77C5: 85 01        	sta	<R0
  2663                        	xref	_BEG_DATA
  2664 09:77C7: A9 xx xx     	lda	#_BEG_DATA>>16
  2665 09:77CA: 85 03        	sta	<R0+2
  2666 09:77CC: D4 03        	pei	<R0+2
  2667 09:77CE: D4 01        	pei	<R0
  2668 09:77D0: 22 xx xx xx  	jsl	~~strcpy
  2669                        ;  else if(operation_code == 0xEB)
  2670 09:77D4: 82 83 02     	brl	L10077
  2671                        L10076:
  2672                        	.line	208
  2673                        ;    strcpy(record_name,"EXPR");
  2674 09:77D7: E2 20        	sep	#$20
  2675                        	longa	off
  2676 09:77D9: A5 0C        	lda	<L36+operation_code_0
  Sat Jul 10 2021  1:15                                                Page 51


  2677 09:77DB: C9 EB        	cmp	#<$eb
  2678 09:77DD: C2 20        	rep	#$20
  2679                        	longa	on
  2680 09:77DF: F0 03        	beq	L51
  2681 09:77E1: 82 1B 00     	brl	L10078
  2682                        L51:
  2683                        	.line	209
  2684 09:77E4: F4 xx xx     	pea	#^L1+64
  2685 09:77E7: F4 xx xx     	pea	#<L1+64
  2686 09:77EA: A9 xx xx     	lda	#<L10055
  2687 09:77ED: 85 01        	sta	<R0
  2688                        	xref	_BEG_DATA
  2689 09:77EF: A9 xx xx     	lda	#_BEG_DATA>>16
  2690 09:77F2: 85 03        	sta	<R0+2
  2691 09:77F4: D4 03        	pei	<R0+2
  2692 09:77F6: D4 01        	pei	<R0
  2693 09:77F8: 22 xx xx xx  	jsl	~~strcpy
  2694                        ;  else if(operation_code == 0xEC)
  2695 09:77FC: 82 5B 02     	brl	L10079
  2696                        L10078:
  2697                        	.line	210
  2698                        ;    strcpy(record_name,"ZEXPR");
  2699 09:77FF: E2 20        	sep	#$20
  2700                        	longa	off
  2701 09:7801: A5 0C        	lda	<L36+operation_code_0
  2702 09:7803: C9 EC        	cmp	#<$ec
  2703 09:7805: C2 20        	rep	#$20
  2704                        	longa	on
  2705 09:7807: F0 03        	beq	L52
  2706 09:7809: 82 1B 00     	brl	L10080
  2707                        L52:
  2708                        	.line	211
  2709 09:780C: F4 xx xx     	pea	#^L1+69
  2710 09:780F: F4 xx xx     	pea	#<L1+69
  2711 09:7812: A9 xx xx     	lda	#<L10055
  2712 09:7815: 85 01        	sta	<R0
  2713                        	xref	_BEG_DATA
  2714 09:7817: A9 xx xx     	lda	#_BEG_DATA>>16
  2715 09:781A: 85 03        	sta	<R0+2
  2716 09:781C: D4 03        	pei	<R0+2
  2717 09:781E: D4 01        	pei	<R0
  2718 09:7820: 22 xx xx xx  	jsl	~~strcpy
  2719                        ;  else if(operation_code == 0xED)
  2720 09:7824: 82 33 02     	brl	L10081
  2721                        L10080:
  2722                        	.line	212
  2723                        ;    strcpy(record_name,"BEXPR");
  2724 09:7827: E2 20        	sep	#$20
  2725                        	longa	off
  2726 09:7829: A5 0C        	lda	<L36+operation_code_0
  2727 09:782B: C9 ED        	cmp	#<$ed
  2728 09:782D: C2 20        	rep	#$20
  2729                        	longa	on
  2730 09:782F: F0 03        	beq	L53
  2731 09:7831: 82 1B 00     	brl	L10082
  2732                        L53:
  2733                        	.line	213
  2734 09:7834: F4 xx xx     	pea	#^L1+75
  Sat Jul 10 2021  1:15                                                Page 52


  2735 09:7837: F4 xx xx     	pea	#<L1+75
  2736 09:783A: A9 xx xx     	lda	#<L10055
  2737 09:783D: 85 01        	sta	<R0
  2738                        	xref	_BEG_DATA
  2739 09:783F: A9 xx xx     	lda	#_BEG_DATA>>16
  2740 09:7842: 85 03        	sta	<R0+2
  2741 09:7844: D4 03        	pei	<R0+2
  2742 09:7846: D4 01        	pei	<R0
  2743 09:7848: 22 xx xx xx  	jsl	~~strcpy
  2744                        ;  else if(operation_code == 0xEE)
  2745 09:784C: 82 0B 02     	brl	L10083
  2746                        L10082:
  2747                        	.line	214
  2748                        ;    strcpy(record_name,"RELEXPR");
  2749 09:784F: E2 20        	sep	#$20
  2750                        	longa	off
  2751 09:7851: A5 0C        	lda	<L36+operation_code_0
  2752 09:7853: C9 EE        	cmp	#<$ee
  2753 09:7855: C2 20        	rep	#$20
  2754                        	longa	on
  2755 09:7857: F0 03        	beq	L54
  2756 09:7859: 82 1B 00     	brl	L10084
  2757                        L54:
  2758                        	.line	215
  2759 09:785C: F4 xx xx     	pea	#^L1+81
  2760 09:785F: F4 xx xx     	pea	#<L1+81
  2761 09:7862: A9 xx xx     	lda	#<L10055
  2762 09:7865: 85 01        	sta	<R0
  2763                        	xref	_BEG_DATA
  2764 09:7867: A9 xx xx     	lda	#_BEG_DATA>>16
  2765 09:786A: 85 03        	sta	<R0+2
  2766 09:786C: D4 03        	pei	<R0+2
  2767 09:786E: D4 01        	pei	<R0
  2768 09:7870: 22 xx xx xx  	jsl	~~strcpy
  2769                        ;  else if(operation_code == 0xEF)
  2770 09:7874: 82 E3 01     	brl	L10085
  2771                        L10084:
  2772                        	.line	216
  2773                        ;    strcpy(record_name,"LOCAL");
  2774 09:7877: E2 20        	sep	#$20
  2775                        	longa	off
  2776 09:7879: A5 0C        	lda	<L36+operation_code_0
  2777 09:787B: C9 EF        	cmp	#<$ef
  2778 09:787D: C2 20        	rep	#$20
  2779                        	longa	on
  2780 09:787F: F0 03        	beq	L55
  2781 09:7881: 82 1B 00     	brl	L10086
  2782                        L55:
  2783                        	.line	217
  2784 09:7884: F4 xx xx     	pea	#^L1+89
  2785 09:7887: F4 xx xx     	pea	#<L1+89
  2786 09:788A: A9 xx xx     	lda	#<L10055
  2787 09:788D: 85 01        	sta	<R0
  2788                        	xref	_BEG_DATA
  2789 09:788F: A9 xx xx     	lda	#_BEG_DATA>>16
  2790 09:7892: 85 03        	sta	<R0+2
  2791 09:7894: D4 03        	pei	<R0+2
  2792 09:7896: D4 01        	pei	<R0
  Sat Jul 10 2021  1:15                                                Page 53


  2793 09:7898: 22 xx xx xx  	jsl	~~strcpy
  2794                        ;  else if(operation_code == 0xF0)
  2795 09:789C: 82 BB 01     	brl	L10087
  2796                        L10086:
  2797                        	.line	218
  2798                        ;    strcpy(record_name,"EQU");
  2799 09:789F: E2 20        	sep	#$20
  2800                        	longa	off
  2801 09:78A1: A5 0C        	lda	<L36+operation_code_0
  2802 09:78A3: C9 F0        	cmp	#<$f0
  2803 09:78A5: C2 20        	rep	#$20
  2804                        	longa	on
  2805 09:78A7: F0 03        	beq	L56
  2806 09:78A9: 82 1B 00     	brl	L10088
  2807                        L56:
  2808                        	.line	219
  2809 09:78AC: F4 xx xx     	pea	#^L1+95
  2810 09:78AF: F4 xx xx     	pea	#<L1+95
  2811 09:78B2: A9 xx xx     	lda	#<L10055
  2812 09:78B5: 85 01        	sta	<R0
  2813                        	xref	_BEG_DATA
  2814 09:78B7: A9 xx xx     	lda	#_BEG_DATA>>16
  2815 09:78BA: 85 03        	sta	<R0+2
  2816 09:78BC: D4 03        	pei	<R0+2
  2817 09:78BE: D4 01        	pei	<R0
  2818 09:78C0: 22 xx xx xx  	jsl	~~strcpy
  2819                        ;  else if(operation_code == 0xF1)
  2820 09:78C4: 82 93 01     	brl	L10089
  2821                        L10088:
  2822                        	.line	220
  2823                        ;    strcpy(record_name,"DS");
  2824 09:78C7: E2 20        	sep	#$20
  2825                        	longa	off
  2826 09:78C9: A5 0C        	lda	<L36+operation_code_0
  2827 09:78CB: C9 F1        	cmp	#<$f1
  2828 09:78CD: C2 20        	rep	#$20
  2829                        	longa	on
  2830 09:78CF: F0 03        	beq	L57
  2831 09:78D1: 82 1B 00     	brl	L10090
  2832                        L57:
  2833                        	.line	221
  2834 09:78D4: F4 xx xx     	pea	#^L1+99
  2835 09:78D7: F4 xx xx     	pea	#<L1+99
  2836 09:78DA: A9 xx xx     	lda	#<L10055
  2837 09:78DD: 85 01        	sta	<R0
  2838                        	xref	_BEG_DATA
  2839 09:78DF: A9 xx xx     	lda	#_BEG_DATA>>16
  2840 09:78E2: 85 03        	sta	<R0+2
  2841 09:78E4: D4 03        	pei	<R0+2
  2842 09:78E6: D4 01        	pei	<R0
  2843 09:78E8: 22 xx xx xx  	jsl	~~strcpy
  2844                        ;  else if(operation_code == 0xF2)
  2845 09:78EC: 82 6B 01     	brl	L10091
  2846                        L10090:
  2847                        	.line	222
  2848                        ;    strcpy(record_name,"LCONST");
  2849 09:78EF: E2 20        	sep	#$20
  2850                        	longa	off
  Sat Jul 10 2021  1:15                                                Page 54


  2851 09:78F1: A5 0C        	lda	<L36+operation_code_0
  2852 09:78F3: C9 F2        	cmp	#<$f2
  2853 09:78F5: C2 20        	rep	#$20
  2854                        	longa	on
  2855 09:78F7: F0 03        	beq	L58
  2856 09:78F9: 82 1B 00     	brl	L10092
  2857                        L58:
  2858                        	.line	223
  2859 09:78FC: F4 xx xx     	pea	#^L1+102
  2860 09:78FF: F4 xx xx     	pea	#<L1+102
  2861 09:7902: A9 xx xx     	lda	#<L10055
  2862 09:7905: 85 01        	sta	<R0
  2863                        	xref	_BEG_DATA
  2864 09:7907: A9 xx xx     	lda	#_BEG_DATA>>16
  2865 09:790A: 85 03        	sta	<R0+2
  2866 09:790C: D4 03        	pei	<R0+2
  2867 09:790E: D4 01        	pei	<R0
  2868 09:7910: 22 xx xx xx  	jsl	~~strcpy
  2869                        ;  else if(operation_code == 0xF3)
  2870 09:7914: 82 43 01     	brl	L10093
  2871                        L10092:
  2872                        	.line	224
  2873                        ;    strcpy(record_name,"LEXPR");
  2874 09:7917: E2 20        	sep	#$20
  2875                        	longa	off
  2876 09:7919: A5 0C        	lda	<L36+operation_code_0
  2877 09:791B: C9 F3        	cmp	#<$f3
  2878 09:791D: C2 20        	rep	#$20
  2879                        	longa	on
  2880 09:791F: F0 03        	beq	L59
  2881 09:7921: 82 1B 00     	brl	L10094
  2882                        L59:
  2883                        	.line	225
  2884 09:7924: F4 xx xx     	pea	#^L1+109
  2885 09:7927: F4 xx xx     	pea	#<L1+109
  2886 09:792A: A9 xx xx     	lda	#<L10055
  2887 09:792D: 85 01        	sta	<R0
  2888                        	xref	_BEG_DATA
  2889 09:792F: A9 xx xx     	lda	#_BEG_DATA>>16
  2890 09:7932: 85 03        	sta	<R0+2
  2891 09:7934: D4 03        	pei	<R0+2
  2892 09:7936: D4 01        	pei	<R0
  2893 09:7938: 22 xx xx xx  	jsl	~~strcpy
  2894                        ;  else if(operation_code == 0xF4)
  2895 09:793C: 82 1B 01     	brl	L10095
  2896                        L10094:
  2897                        	.line	226
  2898                        ;    strcpy(record_name,"ENTRY");
  2899 09:793F: E2 20        	sep	#$20
  2900                        	longa	off
  2901 09:7941: A5 0C        	lda	<L36+operation_code_0
  2902 09:7943: C9 F4        	cmp	#<$f4
  2903 09:7945: C2 20        	rep	#$20
  2904                        	longa	on
  2905 09:7947: F0 03        	beq	L60
  2906 09:7949: 82 1B 00     	brl	L10096
  2907                        L60:
  2908                        	.line	227
  Sat Jul 10 2021  1:15                                                Page 55


  2909 09:794C: F4 xx xx     	pea	#^L1+115
  2910 09:794F: F4 xx xx     	pea	#<L1+115
  2911 09:7952: A9 xx xx     	lda	#<L10055
  2912 09:7955: 85 01        	sta	<R0
  2913                        	xref	_BEG_DATA
  2914 09:7957: A9 xx xx     	lda	#_BEG_DATA>>16
  2915 09:795A: 85 03        	sta	<R0+2
  2916 09:795C: D4 03        	pei	<R0+2
  2917 09:795E: D4 01        	pei	<R0
  2918 09:7960: 22 xx xx xx  	jsl	~~strcpy
  2919                        ;  else if(operation_code == 0xF5)
  2920 09:7964: 82 F3 00     	brl	L10097
  2921                        L10096:
  2922                        	.line	228
  2923                        ;    strcpy(record_name,"cRELOC");
  2924 09:7967: E2 20        	sep	#$20
  2925                        	longa	off
  2926 09:7969: A5 0C        	lda	<L36+operation_code_0
  2927 09:796B: C9 F5        	cmp	#<$f5
  2928 09:796D: C2 20        	rep	#$20
  2929                        	longa	on
  2930 09:796F: F0 03        	beq	L61
  2931 09:7971: 82 1B 00     	brl	L10098
  2932                        L61:
  2933                        	.line	229
  2934 09:7974: F4 xx xx     	pea	#^L1+121
  2935 09:7977: F4 xx xx     	pea	#<L1+121
  2936 09:797A: A9 xx xx     	lda	#<L10055
  2937 09:797D: 85 01        	sta	<R0
  2938                        	xref	_BEG_DATA
  2939 09:797F: A9 xx xx     	lda	#_BEG_DATA>>16
  2940 09:7982: 85 03        	sta	<R0+2
  2941 09:7984: D4 03        	pei	<R0+2
  2942 09:7986: D4 01        	pei	<R0
  2943 09:7988: 22 xx xx xx  	jsl	~~strcpy
  2944                        ;  else if(operation_code == 0xF6)
  2945 09:798C: 82 CB 00     	brl	L10099
  2946                        L10098:
  2947                        	.line	230
  2948                        ;    strcpy(record_name,"cINTERSEG");
  2949 09:798F: E2 20        	sep	#$20
  2950                        	longa	off
  2951 09:7991: A5 0C        	lda	<L36+operation_code_0
  2952 09:7993: C9 F6        	cmp	#<$f6
  2953 09:7995: C2 20        	rep	#$20
  2954                        	longa	on
  2955 09:7997: F0 03        	beq	L62
  2956 09:7999: 82 1B 00     	brl	L10100
  2957                        L62:
  2958                        	.line	231
  2959 09:799C: F4 xx xx     	pea	#^L1+128
  2960 09:799F: F4 xx xx     	pea	#<L1+128
  2961 09:79A2: A9 xx xx     	lda	#<L10055
  2962 09:79A5: 85 01        	sta	<R0
  2963                        	xref	_BEG_DATA
  2964 09:79A7: A9 xx xx     	lda	#_BEG_DATA>>16
  2965 09:79AA: 85 03        	sta	<R0+2
  2966 09:79AC: D4 03        	pei	<R0+2
  Sat Jul 10 2021  1:15                                                Page 56


  2967 09:79AE: D4 01        	pei	<R0
  2968 09:79B0: 22 xx xx xx  	jsl	~~strcpy
  2969                        ;  else if(operation_code == 0xF7)
  2970 09:79B4: 82 A3 00     	brl	L10101
  2971                        L10100:
  2972                        	.line	232
  2973                        ;    strcpy(record_name,GetSUPERType(RecordType));
  2974 09:79B7: E2 20        	sep	#$20
  2975                        	longa	off
  2976 09:79B9: A5 0C        	lda	<L36+operation_code_0
  2977 09:79BB: C9 F7        	cmp	#<$f7
  2978 09:79BD: C2 20        	rep	#$20
  2979                        	longa	on
  2980 09:79BF: F0 03        	beq	L63
  2981 09:79C1: 82 21 00     	brl	L10102
  2982                        L63:
  2983                        	.line	233
  2984 09:79C4: D4 0E        	pei	<L36+RecordType_0
  2985 09:79C6: 22 7A 7A 09  	jsl	~~GetSUPERType
  2986 09:79CA: 85 01        	sta	<R0
  2987 09:79CC: 86 03        	stx	<R0+2
  2988 09:79CE: DA           	phx
  2989 09:79CF: 48           	pha
  2990 09:79D0: A9 xx xx     	lda	#<L10055
  2991 09:79D3: 85 05        	sta	<R1
  2992                        	xref	_BEG_DATA
  2993 09:79D5: A9 xx xx     	lda	#_BEG_DATA>>16
  2994 09:79D8: 85 07        	sta	<R1+2
  2995 09:79DA: D4 07        	pei	<R1+2
  2996 09:79DC: D4 05        	pei	<R1
  2997 09:79DE: 22 xx xx xx  	jsl	~~strcpy
  2998                        ;  else if(operation_code == 0xFB)
  2999 09:79E2: 82 75 00     	brl	L10103
  3000                        L10102:
  3001                        	.line	234
  3002                        ;    strcpy(record_name,"General");
  3003 09:79E5: E2 20        	sep	#$20
  3004                        	longa	off
  3005 09:79E7: A5 0C        	lda	<L36+operation_code_0
  3006 09:79E9: C9 FB        	cmp	#<$fb
  3007 09:79EB: C2 20        	rep	#$20
  3008                        	longa	on
  3009 09:79ED: F0 03        	beq	L64
  3010 09:79EF: 82 1B 00     	brl	L10104
  3011                        L64:
  3012                        	.line	235
  3013 09:79F2: F4 xx xx     	pea	#^L1+138
  3014 09:79F5: F4 xx xx     	pea	#<L1+138
  3015 09:79F8: A9 xx xx     	lda	#<L10055
  3016 09:79FB: 85 01        	sta	<R0
  3017                        	xref	_BEG_DATA
  3018 09:79FD: A9 xx xx     	lda	#_BEG_DATA>>16
  3019 09:7A00: 85 03        	sta	<R0+2
  3020 09:7A02: D4 03        	pei	<R0+2
  3021 09:7A04: D4 01        	pei	<R0
  3022 09:7A06: 22 xx xx xx  	jsl	~~strcpy
  3023                        ;  else if(operation_code >= 0xFC && operation_cod
                    e <= 0xFF)
  Sat Jul 10 2021  1:15                                                Page 57


  3024 09:7A0A: 82 4D 00     	brl	L10105
  3025                        L10104:
  3026                        	.line	236
  3027                        ;    strcpy(record_name,"Experimental");
  3028 09:7A0D: E2 20        	sep	#$20
  3029                        	longa	off
  3030 09:7A0F: A5 0C        	lda	<L36+operation_code_0
  3031 09:7A11: C9 FC        	cmp	#<$fc
  3032 09:7A13: C2 20        	rep	#$20
  3033                        	longa	on
  3034 09:7A15: B0 03        	bcs	L65
  3035 09:7A17: 82 28 00     	brl	L10106
  3036                        L65:
  3037 09:7A1A: E2 20        	sep	#$20
  3038                        	longa	off
  3039 09:7A1C: A9 FF        	lda	#$ff
  3040 09:7A1E: C5 0C        	cmp	<L36+operation_code_0
  3041 09:7A20: C2 20        	rep	#$20
  3042                        	longa	on
  3043 09:7A22: B0 03        	bcs	L66
  3044 09:7A24: 82 1B 00     	brl	L10106
  3045                        L66:
  3046                        	.line	237
  3047 09:7A27: F4 xx xx     	pea	#^L1+146
  3048 09:7A2A: F4 xx xx     	pea	#<L1+146
  3049 09:7A2D: A9 xx xx     	lda	#<L10055
  3050 09:7A30: 85 01        	sta	<R0
  3051                        	xref	_BEG_DATA
  3052 09:7A32: A9 xx xx     	lda	#_BEG_DATA>>16
  3053 09:7A35: 85 03        	sta	<R0+2
  3054 09:7A37: D4 03        	pei	<R0+2
  3055 09:7A39: D4 01        	pei	<R0
  3056 09:7A3B: 22 xx xx xx  	jsl	~~strcpy
  3057                        ;  else
  3058 09:7A3F: 82 18 00     	brl	L10107
  3059                        L10106:
  3060                        ;    strcpy(record_name,"Unknown");
  3061                        	.line	239
  3062 09:7A42: F4 xx xx     	pea	#^L1+159
  3063 09:7A45: F4 xx xx     	pea	#<L1+159
  3064 09:7A48: A9 xx xx     	lda	#<L10055
  3065 09:7A4B: 85 01        	sta	<R0
  3066                        	xref	_BEG_DATA
  3067 09:7A4D: A9 xx xx     	lda	#_BEG_DATA>>16
  3068 09:7A50: 85 03        	sta	<R0+2
  3069 09:7A52: D4 03        	pei	<R0+2
  3070 09:7A54: D4 01        	pei	<R0
  3071 09:7A56: 22 xx xx xx  	jsl	~~strcpy
  3072                        L10107:
  3073                        L10105:
  3074                        L10103:
  3075                        L10101:
  3076                        L10099:
  3077                        L10097:
  3078                        L10095:
  3079                        L10093:
  3080                        L10091:
  3081                        L10089:
  Sat Jul 10 2021  1:15                                                Page 58


  3082                        L10087:
  3083                        L10085:
  3084                        L10083:
  3085                        L10081:
  3086                        L10079:
  3087                        L10077:
  3088                        L10075:
  3089                        L10073:
  3090                        L10071:
  3091                        L10069:
  3092                        L10067:
  3093                        L10065:
  3094                        L10063:
  3095                        L10061:
  3096                        L10059:
  3097                        L10057:
  3098                        ;
  3099                        ;  /* Renvoie le nom */
  3100                        ;  return(&record_name[0]);
  3101                        	.line	242
  3102 09:7A5A: A9 xx xx     	lda	#<L10055
  3103 09:7A5D: 85 01        	sta	<R0
  3104                        	xref	_BEG_DATA
  3105 09:7A5F: A9 xx xx     	lda	#_BEG_DATA>>16
  3106 09:7A62: 85 03        	sta	<R0+2
  3107 09:7A64: A6 03        	ldx	<R0+2
  3108 09:7A66: A5 01        	lda	<R0
  3109                        L67:
  3110 09:7A68: A8           	tay
  3111 09:7A69: A5 0A        	lda	<L36+2
  3112 09:7A6B: 85 0E        	sta	<L36+2+4
  3113 09:7A6D: A5 09        	lda	<L36+1
  3114 09:7A6F: 85 0D        	sta	<L36+1+4
  3115 09:7A71: 2B           	pld
  3116 09:7A72: 3B           	tsc
  3117 09:7A73: 18           	clc
  3118 09:7A74: 69 0C 00     	adc	#L36+4
  3119 09:7A77: 1B           	tcs
  3120 09:7A78: 98           	tya
  3121 09:7A79: 6B           	rtl
  3122                        ;}
  3123                        	.line	243
  3124                        	.endblock	243
  3125             00000008   L36	equ	8
  3126             00000009   L37	equ	9
  3127 09:7A7A:              	ends
  3128                        	efunc
  3129                        	.endfunc	243,9,8
  3130                        	.line	243
  3131                        	data
  3132                        L1:
  3133 00:0000: 45 4E 44 00  	db	$45,$4E,$44,$00,$43,$4F,$4E,$53,$54,$00,
                    $41,$4C,$49,$47,$4E
       00:0004: 43 4F 4E 53 
       00:0008: 54 00 41 4C 
       00:000C: 49 47 4E 
  3134 00:000F: 00 4F 52 47  	db	$00,$4F,$52,$47,$00,$52,$45,$4C,$4F,$43,
                    $00,$49,$4E,$54,$45
  Sat Jul 10 2021  1:15                                                Page 59


       00:0013: 00 52 45 4C 
       00:0017: 4F 43 00 49 
       00:001B: 4E 54 45 
  3135 00:001E: 52 53 45 47  	db	$52,$53,$45,$47,$00,$55,$53,$49,$4E,$47,
                    $00,$53,$54,$52,$4F
       00:0022: 00 55 53 49 
       00:0026: 4E 47 00 53 
       00:002A: 54 52 4F 
  3136 00:002D: 4E 47 00 47  	db	$4E,$47,$00,$47,$4C,$4F,$42,$41,$4C,$00,
                    $47,$45,$51,$55,$00
       00:0031: 4C 4F 42 41 
       00:0035: 4C 00 47 45 
       00:0039: 51 55 00 
  3137 00:003C: 4D 45 4D 00  	db	$4D,$45,$4D,$00,$45,$58,$50,$52,$00,$5A,
                    $45,$58,$50,$52,$00
       00:0040: 45 58 50 52 
       00:0044: 00 5A 45 58 
       00:0048: 50 52 00 
  3138 00:004B: 42 45 58 50  	db	$42,$45,$58,$50,$52,$00,$52,$45,$4C,$45,
                    $58,$50,$52,$00,$4C
       00:004F: 52 00 52 45 
       00:0053: 4C 45 58 50 
       00:0057: 52 00 4C 
  3139 00:005A: 4F 43 41 4C  	db	$4F,$43,$41,$4C,$00,$45,$51,$55,$00,$44,
                    $53,$00,$4C,$43,$4F
       00:005E: 00 45 51 55 
       00:0062: 00 44 53 00 
       00:0066: 4C 43 4F 
  3140 00:0069: 4E 53 54 00  	db	$4E,$53,$54,$00,$4C,$45,$58,$50,$52,$00,
                    $45,$4E,$54,$52,$59
       00:006D: 4C 45 58 50 
       00:0071: 52 00 45 4E 
       00:0075: 54 52 59 
  3141 00:0078: 00 63 52 45  	db	$00,$63,$52,$45,$4C,$4F,$43,$00,$63,$49,
                    $4E,$54,$45,$52,$53
       00:007C: 4C 4F 43 00 
       00:0080: 63 49 4E 54 
       00:0084: 45 52 53 
  3142 00:0087: 45 47 00 47  	db	$45,$47,$00,$47,$65,$6E,$65,$72,$61,$6C,
                    $00,$45,$78,$70,$65
       00:008B: 65 6E 65 72 
       00:008F: 61 6C 00 45 
       00:0093: 78 70 65 
  3143 00:0096: 72 69 6D 65  	db	$72,$69,$6D,$65,$6E,$74,$61,$6C,$00,$55,
                    $6E,$6B,$6E,$6F,$77
       00:009A: 6E 74 61 6C 
       00:009E: 00 55 6E 6B 
       00:00A2: 6E 6F 77 
  3144 00:00A5: 6E 00        	db	$6E,$00
  3145 00:00A7:              	ends
  3146                        ;
  3147                        ;
  3148                        ;/************************************************
                    ******/
  3149                        ;/*  GetSUPERType() :  Décode le Type du Record SU
                    PER. */
  3150                        ;/************************************************
                    ******/
  Sat Jul 10 2021  1:15                                                Page 60


  3151                        ;char *GetSUPERType(BYTE Type)
  3152                        ;{
  3153                        	.line	249
  3154                        	.line	250
  3155                        	LOADER
  3156                        	xdef	~~GetSUPERType
  3157                        	func
  3158                        	.function	250
  3159                        ~~GetSUPERType:
  3160                        	longa	on
  3161                        	longi	on
  3162 09:7A7A: 3B           	tsc
  3163 09:7A7B: 38           	sec
  3164 09:7A7C: E9 04 00     	sbc	#L69
  3165 09:7A7F: 1B           	tcs
  3166 09:7A80: 0B           	phd
  3167 09:7A81: 5B           	tcd
  3168             00000004   Type_0	set	4
  3169                        	.block	250
  3170                        ;  static char type_txt[256];
  3171                        	udata
  3172                        L10108:
  3173 00:0100:              	ds	256
  3174 00:0200:              	ends
  3175                        ;
  3176                        ;  /* On ne veut pas du Type */
  3177                        ;  if(Type == 0xFF)
  3178                        	.sym	type_txt,10108,110,19,0,256
  3179                        	.sym	Type,4,14,6,8
  3180                        	.line	254
  3181                        ;    {
  3182 09:7A82: E2 20        	sep	#$20
  3183                        	longa	off
  3184 09:7A84: A5 08        	lda	<L69+Type_0
  3185 09:7A86: C9 FF        	cmp	#<$ff
  3186 09:7A88: C2 20        	rep	#$20
  3187                        	longa	on
  3188 09:7A8A: F0 03        	beq	L72
  3189 09:7A8C: 82 38 00     	brl	L10109
  3190                        L72:
  3191                        	.line	255
  3192                        ;      strcpy(type_txt,"SUPER");
  3193                        	.line	256
  3194 09:7A8F: F4 xx xx     	pea	#^L68
  3195 09:7A92: F4 xx xx     	pea	#<L68
  3196 09:7A95: A9 xx xx     	lda	#<L10108
  3197 09:7A98: 85 01        	sta	<R0
  3198                        	xref	_BEG_DATA
  3199 09:7A9A: A9 xx xx     	lda	#_BEG_DATA>>16
  3200 09:7A9D: 85 03        	sta	<R0+2
  3201 09:7A9F: D4 03        	pei	<R0+2
  3202 09:7AA1: D4 01        	pei	<R0
  3203 09:7AA3: 22 xx xx xx  	jsl	~~strcpy
  3204                        ;      return(&type_txt[0]);
  3205                        	.line	257
  3206 09:7AA7: A9 xx xx     	lda	#<L10108
  3207 09:7AAA: 85 01        	sta	<R0
  3208                        	xref	_BEG_DATA
  Sat Jul 10 2021  1:15                                                Page 61


  3209 09:7AAC: A9 xx xx     	lda	#_BEG_DATA>>16
  3210 09:7AAF: 85 03        	sta	<R0+2
  3211 09:7AB1: A6 03        	ldx	<R0+2
  3212 09:7AB3: A5 01        	lda	<R0
  3213                        L73:
  3214 09:7AB5: A8           	tay
  3215 09:7AB6: A5 06        	lda	<L69+2
  3216 09:7AB8: 85 08        	sta	<L69+2+2
  3217 09:7ABA: A5 05        	lda	<L69+1
  3218 09:7ABC: 85 07        	sta	<L69+1+2
  3219 09:7ABE: 2B           	pld
  3220 09:7ABF: 3B           	tsc
  3221 09:7AC0: 18           	clc
  3222 09:7AC1: 69 06 00     	adc	#L69+2
  3223 09:7AC4: 1B           	tcs
  3224 09:7AC5: 98           	tya
  3225 09:7AC6: 6B           	rtl
  3226                        ;    }
  3227                        	.line	258
  3228                        ;
  3229                        ;  /** Décode le type du SUPER **/
  3230                        ;  if(Type == 0x00)
  3231                        L10109:
  3232                        	.line	261
  3233                        ;    strcpy(type_txt,"SUPER RELOC2");
  3234 09:7AC7: A5 08        	lda	<L69+Type_0
  3235 09:7AC9: 29 FF 00     	and	#$ff
  3236 09:7ACC: F0 03        	beq	L74
  3237 09:7ACE: 82 1B 00     	brl	L10110
  3238                        L74:
  3239                        	.line	262
  3240 09:7AD1: F4 xx xx     	pea	#^L68+6
  3241 09:7AD4: F4 xx xx     	pea	#<L68+6
  3242 09:7AD7: A9 xx xx     	lda	#<L10108
  3243 09:7ADA: 85 01        	sta	<R0
  3244                        	xref	_BEG_DATA
  3245 09:7ADC: A9 xx xx     	lda	#_BEG_DATA>>16
  3246 09:7ADF: 85 03        	sta	<R0+2
  3247 09:7AE1: D4 03        	pei	<R0+2
  3248 09:7AE3: D4 01        	pei	<R0
  3249 09:7AE5: 22 xx xx xx  	jsl	~~strcpy
  3250                        ;  else if(Type == 0x01)
  3251 09:7AE9: 82 5D 00     	brl	L10111
  3252                        L10110:
  3253                        	.line	263
  3254                        ;    strcpy(type_txt,"SUPER RELOC3");
  3255 09:7AEC: E2 20        	sep	#$20
  3256                        	longa	off
  3257 09:7AEE: A5 08        	lda	<L69+Type_0
  3258 09:7AF0: C9 01        	cmp	#<$1
  3259 09:7AF2: C2 20        	rep	#$20
  3260                        	longa	on
  3261 09:7AF4: F0 03        	beq	L75
  3262 09:7AF6: 82 1B 00     	brl	L10112
  3263                        L75:
  3264                        	.line	264
  3265 09:7AF9: F4 xx xx     	pea	#^L68+19
  3266 09:7AFC: F4 xx xx     	pea	#<L68+19
  Sat Jul 10 2021  1:15                                                Page 62


  3267 09:7AFF: A9 xx xx     	lda	#<L10108
  3268 09:7B02: 85 01        	sta	<R0
  3269                        	xref	_BEG_DATA
  3270 09:7B04: A9 xx xx     	lda	#_BEG_DATA>>16
  3271 09:7B07: 85 03        	sta	<R0+2
  3272 09:7B09: D4 03        	pei	<R0+2
  3273 09:7B0B: D4 01        	pei	<R0
  3274 09:7B0D: 22 xx xx xx  	jsl	~~strcpy
  3275                        ;  else if(Type >= 0x02 && Type <= 0x25)   /* 37 *
                    /
  3276 09:7B11: 82 35 00     	brl	L10113
  3277                        L10112:
  3278                        	.line	265
  3279                        ;  {
  3280 09:7B14: E2 20        	sep	#$20
  3281                        	longa	off
  3282 09:7B16: A5 08        	lda	<L69+Type_0
  3283 09:7B18: C9 02        	cmp	#<$2
  3284 09:7B1A: C2 20        	rep	#$20
  3285                        	longa	on
  3286 09:7B1C: B0 03        	bcs	L76
  3287 09:7B1E: 82 10 00     	brl	L10114
  3288                        L76:
  3289 09:7B21: E2 20        	sep	#$20
  3290                        	longa	off
  3291 09:7B23: A9 25        	lda	#$25
  3292 09:7B25: C5 08        	cmp	<L69+Type_0
  3293 09:7B27: C2 20        	rep	#$20
  3294                        	longa	on
  3295 09:7B29: B0 03        	bcs	L77
  3296 09:7B2B: 82 03 00     	brl	L10114
  3297                        L77:
  3298                        	.line	266
  3299                        ;	  //printf(type_txt,"SUPER INTERSEG%d",Type-1);
  3300                        ;
  3301                        ;  }
  3302                        	.line	269
  3303                        ;  else
  3304 09:7B2E: 82 18 00     	brl	L10115
  3305                        L10114:
  3306                        ;    strcpy(type_txt," SUPER Unknown");
  3307                        	.line	271
  3308 09:7B31: F4 xx xx     	pea	#^L68+32
  3309 09:7B34: F4 xx xx     	pea	#<L68+32
  3310 09:7B37: A9 xx xx     	lda	#<L10108
  3311 09:7B3A: 85 01        	sta	<R0
  3312                        	xref	_BEG_DATA
  3313 09:7B3C: A9 xx xx     	lda	#_BEG_DATA>>16
  3314 09:7B3F: 85 03        	sta	<R0+2
  3315 09:7B41: D4 03        	pei	<R0+2
  3316 09:7B43: D4 01        	pei	<R0
  3317 09:7B45: 22 xx xx xx  	jsl	~~strcpy
  3318                        L10115:
  3319                        L10113:
  3320                        L10111:
  3321                        ;
  3322                        ;  /* Renvoi le Texte */
  3323                        ;  return(&type_txt[0]);
  Sat Jul 10 2021  1:15                                                Page 63


  3324                        	.line	274
  3325 09:7B49: A9 xx xx     	lda	#<L10108
  3326 09:7B4C: 85 01        	sta	<R0
  3327                        	xref	_BEG_DATA
  3328 09:7B4E: A9 xx xx     	lda	#_BEG_DATA>>16
  3329 09:7B51: 85 03        	sta	<R0+2
  3330 09:7B53: A6 03        	ldx	<R0+2
  3331 09:7B55: A5 01        	lda	<R0
  3332 09:7B57: 82 5B FF     	brl	L73
  3333                        ;}
  3334                        	.line	275
  3335                        	.endblock	275
  3336             00000004   L69	equ	4
  3337             00000005   L70	equ	5
  3338 09:7B5A:              	ends
  3339                        	efunc
  3340                        	.endfunc	275,5,4
  3341                        	.line	275
  3342                        	data
  3343                        L68:
  3344 00:00A7: 53 55 50 45  	db	$53,$55,$50,$45,$52,$00,$53,$55,$50,$45,
                    $52,$20,$52,$45,$4C
       00:00AB: 52 00 53 55 
       00:00AF: 50 45 52 20 
       00:00B3: 52 45 4C 
  3345 00:00B6: 4F 43 32 00  	db	$4F,$43,$32,$00,$53,$55,$50,$45,$52,$20,
                    $52,$45,$4C,$4F,$43
       00:00BA: 53 55 50 45 
       00:00BE: 52 20 52 45 
       00:00C2: 4C 4F 43 
  3346 00:00C5: 33 00 20 53  	db	$33,$00,$20,$53,$55,$50,$45,$52,$20,$55,
                    $6E,$6B,$6E,$6F,$77
       00:00C9: 55 50 45 52 
       00:00CD: 20 55 6E 6B 
       00:00D1: 6E 6F 77 
  3347 00:00D4: 6E 00        	db	$6E,$00
  3348 00:00D6:              	ends
  3349                        ;
  3350                        ;
  3351                        ;/************************************************
                    *****************************/
  3352                        ;/*  mem_free_record() :  Libération mémoire de la
                     structure omf_body_record. */
  3353                        ;/************************************************
                    *****************************/
  3354                        ;void mem_free_record(struct omf_body_record *curr
                    ent_record)
  3355                        ;{
  3356                        	.line	281
  3357                        	.line	282
  3358                        	LOADER
  3359                        	xdef	~~mem_free_record
  3360                        	func
  3361                        	.function	282
  3362                        ~~mem_free_record:
  3363                        	longa	on
  3364                        	longi	on
  3365 09:7B5A: 3B           	tsc
  Sat Jul 10 2021  1:15                                                Page 64


  3366 09:7B5B: 38           	sec
  3367 09:7B5C: E9 00 00     	sbc	#L79
  3368 09:7B5F: 1B           	tcs
  3369 09:7B60: 0B           	phd
  3370 09:7B61: 5B           	tcd
  3371             00000004   current_record_0	set	4
  3372                        	.block	282
  3373                        ;  if(current_record)
  3374                        	.sym	current_record,4,138,6,32,88
  3375                        	.line	283
  3376                        ;    {
  3377 09:7B62: A5 04        	lda	<L79+current_record_0
  3378 09:7B64: 05 06        	ora	<L79+current_record_0+2
  3379 09:7B66: D0 03        	bne	L82
  3380 09:7B68: 82 B0 03     	brl	L10116
  3381                        L82:
  3382                        	.line	284
  3383                        ;      if(current_record->operation_code == 0x00)
  3384                        	.line	285
  3385                        ;        mem_free_END((struct record_END *) curren
                    t_record->record_data);
  3386 09:7B6B: A0 08 00     	ldy	#$8
  3387 09:7B6E: B7 04        	lda	[<L79+current_record_0],Y
  3388 09:7B70: 29 FF 00     	and	#$ff
  3389 09:7B73: F0 03        	beq	L83
  3390 09:7B75: 82 13 00     	brl	L10117
  3391                        L83:
  3392                        	.line	286
  3393 09:7B78: A0 0D 00     	ldy	#$d
  3394 09:7B7B: B7 04        	lda	[<L79+current_record_0],Y
  3395 09:7B7D: 48           	pha
  3396 09:7B7E: A0 0B 00     	ldy	#$b
  3397 09:7B81: B7 04        	lda	[<L79+current_record_0],Y
  3398 09:7B83: 48           	pha
  3399 09:7B84: 22 2D AD 09  	jsl	~~mem_free_END
  3400                        ;      else if(current_record->operation_code >= 0
                    x01 && current_record->operation_code <= 0xDF)
  3401 09:7B88: 82 88 03     	brl	L10118
  3402                        L10117:
  3403                        	.line	287
  3404                        ;        mem_free_CONST((struct record_CONST *) cu
                    rrent_record->record_data);
  3405 09:7B8B: E2 20        	sep	#$20
  3406                        	longa	off
  3407 09:7B8D: A0 08 00     	ldy	#$8
  3408 09:7B90: B7 04        	lda	[<L79+current_record_0],Y
  3409 09:7B92: C9 01        	cmp	#<$1
  3410 09:7B94: C2 20        	rep	#$20
  3411                        	longa	on
  3412 09:7B96: B0 03        	bcs	L84
  3413 09:7B98: 82 23 00     	brl	L10119
  3414                        L84:
  3415 09:7B9B: E2 20        	sep	#$20
  3416                        	longa	off
  3417 09:7B9D: A9 DF        	lda	#$df
  3418 09:7B9F: A0 08 00     	ldy	#$8
  3419 09:7BA2: D7 04        	cmp	[<L79+current_record_0],Y
  3420 09:7BA4: C2 20        	rep	#$20
  Sat Jul 10 2021  1:15                                                Page 65


  3421                        	longa	on
  3422 09:7BA6: B0 03        	bcs	L85
  3423 09:7BA8: 82 13 00     	brl	L10119
  3424                        L85:
  3425                        	.line	288
  3426 09:7BAB: A0 0D 00     	ldy	#$d
  3427 09:7BAE: B7 04        	lda	[<L79+current_record_0],Y
  3428 09:7BB0: 48           	pha
  3429 09:7BB1: A0 0B 00     	ldy	#$b
  3430 09:7BB4: B7 04        	lda	[<L79+current_record_0],Y
  3431 09:7BB6: 48           	pha
  3432 09:7BB7: 22 56 AD 09  	jsl	~~mem_free_CONST
  3433                        ;      else if(current_record->operation_code == 0
                    xE0)
  3434 09:7BBB: 82 55 03     	brl	L10120
  3435                        L10119:
  3436                        	.line	289
  3437                        ;        mem_free_ALIGN((struct record_ALIGN *) cu
                    rrent_record->record_data);
  3438 09:7BBE: E2 20        	sep	#$20
  3439                        	longa	off
  3440 09:7BC0: A0 08 00     	ldy	#$8
  3441 09:7BC3: B7 04        	lda	[<L79+current_record_0],Y
  3442 09:7BC5: C9 E0        	cmp	#<$e0
  3443 09:7BC7: C2 20        	rep	#$20
  3444                        	longa	on
  3445 09:7BC9: F0 03        	beq	L86
  3446 09:7BCB: 82 13 00     	brl	L10121
  3447                        L86:
  3448                        	.line	290
  3449 09:7BCE: A0 0D 00     	ldy	#$d
  3450 09:7BD1: B7 04        	lda	[<L79+current_record_0],Y
  3451 09:7BD3: 48           	pha
  3452 09:7BD4: A0 0B 00     	ldy	#$b
  3453 09:7BD7: B7 04        	lda	[<L79+current_record_0],Y
  3454 09:7BD9: 48           	pha
  3455 09:7BDA: 22 9E AD 09  	jsl	~~mem_free_ALIGN
  3456                        ;      else if(current_record->operation_code == 0
                    xE1)
  3457 09:7BDE: 82 32 03     	brl	L10122
  3458                        L10121:
  3459                        	.line	291
  3460                        ;        mem_free_ORG((struct record_ORG *) curren
                    t_record->record_data);
  3461 09:7BE1: E2 20        	sep	#$20
  3462                        	longa	off
  3463 09:7BE3: A0 08 00     	ldy	#$8
  3464 09:7BE6: B7 04        	lda	[<L79+current_record_0],Y
  3465 09:7BE8: C9 E1        	cmp	#<$e1
  3466 09:7BEA: C2 20        	rep	#$20
  3467                        	longa	on
  3468 09:7BEC: F0 03        	beq	L87
  3469 09:7BEE: 82 13 00     	brl	L10123
  3470                        L87:
  3471                        	.line	292
  3472 09:7BF1: A0 0D 00     	ldy	#$d
  3473 09:7BF4: B7 04        	lda	[<L79+current_record_0],Y
  3474 09:7BF6: 48           	pha
  Sat Jul 10 2021  1:15                                                Page 66


  3475 09:7BF7: A0 0B 00     	ldy	#$b
  3476 09:7BFA: B7 04        	lda	[<L79+current_record_0],Y
  3477 09:7BFC: 48           	pha
  3478 09:7BFD: 22 C7 AD 09  	jsl	~~mem_free_ORG
  3479                        ;      else if(current_record->operation_code == 0
                    xE2)
  3480 09:7C01: 82 0F 03     	brl	L10124
  3481                        L10123:
  3482                        	.line	293
  3483                        ;        mem_free_RELOC((struct record_RELOC *) cu
                    rrent_record->record_data);
  3484 09:7C04: E2 20        	sep	#$20
  3485                        	longa	off
  3486 09:7C06: A0 08 00     	ldy	#$8
  3487 09:7C09: B7 04        	lda	[<L79+current_record_0],Y
  3488 09:7C0B: C9 E2        	cmp	#<$e2
  3489 09:7C0D: C2 20        	rep	#$20
  3490                        	longa	on
  3491 09:7C0F: F0 03        	beq	L88
  3492 09:7C11: 82 13 00     	brl	L10125
  3493                        L88:
  3494                        	.line	294
  3495 09:7C14: A0 0D 00     	ldy	#$d
  3496 09:7C17: B7 04        	lda	[<L79+current_record_0],Y
  3497 09:7C19: 48           	pha
  3498 09:7C1A: A0 0B 00     	ldy	#$b
  3499 09:7C1D: B7 04        	lda	[<L79+current_record_0],Y
  3500 09:7C1F: 48           	pha
  3501 09:7C20: 22 F0 AD 09  	jsl	~~mem_free_RELOC
  3502                        ;      else if(current_record->operation_code == 0
                    xE3)
  3503 09:7C24: 82 EC 02     	brl	L10126
  3504                        L10125:
  3505                        	.line	295
  3506                        ;        mem_free_INTERSEG((struct record_INTERSEG
                     *) current_record->record_data);
  3507 09:7C27: E2 20        	sep	#$20
  3508                        	longa	off
  3509 09:7C29: A0 08 00     	ldy	#$8
  3510 09:7C2C: B7 04        	lda	[<L79+current_record_0],Y
  3511 09:7C2E: C9 E3        	cmp	#<$e3
  3512 09:7C30: C2 20        	rep	#$20
  3513                        	longa	on
  3514 09:7C32: F0 03        	beq	L89
  3515 09:7C34: 82 13 00     	brl	L10127
  3516                        L89:
  3517                        	.line	296
  3518 09:7C37: A0 0D 00     	ldy	#$d
  3519 09:7C3A: B7 04        	lda	[<L79+current_record_0],Y
  3520 09:7C3C: 48           	pha
  3521 09:7C3D: A0 0B 00     	ldy	#$b
  3522 09:7C40: B7 04        	lda	[<L79+current_record_0],Y
  3523 09:7C42: 48           	pha
  3524 09:7C43: 22 19 AE 09  	jsl	~~mem_free_INTERSEG
  3525                        ;      else if(current_record->operation_code == 0
                    xE4)
  3526 09:7C47: 82 C9 02     	brl	L10128
  3527                        L10127:
  Sat Jul 10 2021  1:15                                                Page 67


  3528                        	.line	297
  3529                        ;        mem_free_USING((struct record_USING *) cu
                    rrent_record->record_data);
  3530 09:7C4A: E2 20        	sep	#$20
  3531                        	longa	off
  3532 09:7C4C: A0 08 00     	ldy	#$8
  3533 09:7C4F: B7 04        	lda	[<L79+current_record_0],Y
  3534 09:7C51: C9 E4        	cmp	#<$e4
  3535 09:7C53: C2 20        	rep	#$20
  3536                        	longa	on
  3537 09:7C55: F0 03        	beq	L90
  3538 09:7C57: 82 13 00     	brl	L10129
  3539                        L90:
  3540                        	.line	298
  3541 09:7C5A: A0 0D 00     	ldy	#$d
  3542 09:7C5D: B7 04        	lda	[<L79+current_record_0],Y
  3543 09:7C5F: 48           	pha
  3544 09:7C60: A0 0B 00     	ldy	#$b
  3545 09:7C63: B7 04        	lda	[<L79+current_record_0],Y
  3546 09:7C65: 48           	pha
  3547 09:7C66: 22 42 AE 09  	jsl	~~mem_free_USING
  3548                        ;      else if(current_record->operation_code == 0
                    xE5)
  3549 09:7C6A: 82 A6 02     	brl	L10130
  3550                        L10129:
  3551                        	.line	299
  3552                        ;        mem_free_STRONG((struct record_STRONG *) 
                    current_record->record_data);
  3553 09:7C6D: E2 20        	sep	#$20
  3554                        	longa	off
  3555 09:7C6F: A0 08 00     	ldy	#$8
  3556 09:7C72: B7 04        	lda	[<L79+current_record_0],Y
  3557 09:7C74: C9 E5        	cmp	#<$e5
  3558 09:7C76: C2 20        	rep	#$20
  3559                        	longa	on
  3560 09:7C78: F0 03        	beq	L91
  3561 09:7C7A: 82 13 00     	brl	L10131
  3562                        L91:
  3563                        	.line	300
  3564 09:7C7D: A0 0D 00     	ldy	#$d
  3565 09:7C80: B7 04        	lda	[<L79+current_record_0],Y
  3566 09:7C82: 48           	pha
  3567 09:7C83: A0 0B 00     	ldy	#$b
  3568 09:7C86: B7 04        	lda	[<L79+current_record_0],Y
  3569 09:7C88: 48           	pha
  3570 09:7C89: 22 6B AE 09  	jsl	~~mem_free_STRONG
  3571                        ;      else if(current_record->operation_code == 0
                    xE6)
  3572 09:7C8D: 82 83 02     	brl	L10132
  3573                        L10131:
  3574                        	.line	301
  3575                        ;        mem_free_GLOBAL((struct record_GLOBAL *) 
                    current_record->record_data);
  3576 09:7C90: E2 20        	sep	#$20
  3577                        	longa	off
  3578 09:7C92: A0 08 00     	ldy	#$8
  3579 09:7C95: B7 04        	lda	[<L79+current_record_0],Y
  3580 09:7C97: C9 E6        	cmp	#<$e6
  Sat Jul 10 2021  1:15                                                Page 68


  3581 09:7C99: C2 20        	rep	#$20
  3582                        	longa	on
  3583 09:7C9B: F0 03        	beq	L92
  3584 09:7C9D: 82 13 00     	brl	L10133
  3585                        L92:
  3586                        	.line	302
  3587 09:7CA0: A0 0D 00     	ldy	#$d
  3588 09:7CA3: B7 04        	lda	[<L79+current_record_0],Y
  3589 09:7CA5: 48           	pha
  3590 09:7CA6: A0 0B 00     	ldy	#$b
  3591 09:7CA9: B7 04        	lda	[<L79+current_record_0],Y
  3592 09:7CAB: 48           	pha
  3593 09:7CAC: 22 94 AE 09  	jsl	~~mem_free_GLOBAL
  3594                        ;      else if(current_record->operation_code == 0
                    xE7)
  3595 09:7CB0: 82 60 02     	brl	L10134
  3596                        L10133:
  3597                        	.line	303
  3598                        ;        mem_free_GEQU((struct record_GEQU *) curr
                    ent_record->record_data);
  3599 09:7CB3: E2 20        	sep	#$20
  3600                        	longa	off
  3601 09:7CB5: A0 08 00     	ldy	#$8
  3602 09:7CB8: B7 04        	lda	[<L79+current_record_0],Y
  3603 09:7CBA: C9 E7        	cmp	#<$e7
  3604 09:7CBC: C2 20        	rep	#$20
  3605                        	longa	on
  3606 09:7CBE: F0 03        	beq	L93
  3607 09:7CC0: 82 13 00     	brl	L10135
  3608                        L93:
  3609                        	.line	304
  3610 09:7CC3: A0 0D 00     	ldy	#$d
  3611 09:7CC6: B7 04        	lda	[<L79+current_record_0],Y
  3612 09:7CC8: 48           	pha
  3613 09:7CC9: A0 0B 00     	ldy	#$b
  3614 09:7CCC: B7 04        	lda	[<L79+current_record_0],Y
  3615 09:7CCE: 48           	pha
  3616 09:7CCF: 22 BD AE 09  	jsl	~~mem_free_GEQU
  3617                        ;      else if(current_record->operation_code == 0
                    xE8)
  3618 09:7CD3: 82 3D 02     	brl	L10136
  3619                        L10135:
  3620                        	.line	305
  3621                        ;        mem_free_MEM((struct record_MEM *) curren
                    t_record->record_data);
  3622 09:7CD6: E2 20        	sep	#$20
  3623                        	longa	off
  3624 09:7CD8: A0 08 00     	ldy	#$8
  3625 09:7CDB: B7 04        	lda	[<L79+current_record_0],Y
  3626 09:7CDD: C9 E8        	cmp	#<$e8
  3627 09:7CDF: C2 20        	rep	#$20
  3628                        	longa	on
  3629 09:7CE1: F0 03        	beq	L94
  3630 09:7CE3: 82 13 00     	brl	L10137
  3631                        L94:
  3632                        	.line	306
  3633 09:7CE6: A0 0D 00     	ldy	#$d
  3634 09:7CE9: B7 04        	lda	[<L79+current_record_0],Y
  Sat Jul 10 2021  1:15                                                Page 69


  3635 09:7CEB: 48           	pha
  3636 09:7CEC: A0 0B 00     	ldy	#$b
  3637 09:7CEF: B7 04        	lda	[<L79+current_record_0],Y
  3638 09:7CF1: 48           	pha
  3639 09:7CF2: 22 E6 AE 09  	jsl	~~mem_free_MEM
  3640                        ;      else if(current_record->operation_code == 0
                    xEB)
  3641 09:7CF6: 82 1A 02     	brl	L10138
  3642                        L10137:
  3643                        	.line	307
  3644                        ;        mem_free_EXPR((struct record_EXPR *) curr
                    ent_record->record_data);
  3645 09:7CF9: E2 20        	sep	#$20
  3646                        	longa	off
  3647 09:7CFB: A0 08 00     	ldy	#$8
  3648 09:7CFE: B7 04        	lda	[<L79+current_record_0],Y
  3649 09:7D00: C9 EB        	cmp	#<$eb
  3650 09:7D02: C2 20        	rep	#$20
  3651                        	longa	on
  3652 09:7D04: F0 03        	beq	L95
  3653 09:7D06: 82 13 00     	brl	L10139
  3654                        L95:
  3655                        	.line	308
  3656 09:7D09: A0 0D 00     	ldy	#$d
  3657 09:7D0C: B7 04        	lda	[<L79+current_record_0],Y
  3658 09:7D0E: 48           	pha
  3659 09:7D0F: A0 0B 00     	ldy	#$b
  3660 09:7D12: B7 04        	lda	[<L79+current_record_0],Y
  3661 09:7D14: 48           	pha
  3662 09:7D15: 22 0F AF 09  	jsl	~~mem_free_EXPR
  3663                        ;      else if(current_record->operation_code == 0
                    xEC)
  3664 09:7D19: 82 F7 01     	brl	L10140
  3665                        L10139:
  3666                        	.line	309
  3667                        ;        mem_free_ZEXPR((struct record_ZEXPR *) cu
                    rrent_record->record_data);
  3668 09:7D1C: E2 20        	sep	#$20
  3669                        	longa	off
  3670 09:7D1E: A0 08 00     	ldy	#$8
  3671 09:7D21: B7 04        	lda	[<L79+current_record_0],Y
  3672 09:7D23: C9 EC        	cmp	#<$ec
  3673 09:7D25: C2 20        	rep	#$20
  3674                        	longa	on
  3675 09:7D27: F0 03        	beq	L96
  3676 09:7D29: 82 13 00     	brl	L10141
  3677                        L96:
  3678                        	.line	310
  3679 09:7D2C: A0 0D 00     	ldy	#$d
  3680 09:7D2F: B7 04        	lda	[<L79+current_record_0],Y
  3681 09:7D31: 48           	pha
  3682 09:7D32: A0 0B 00     	ldy	#$b
  3683 09:7D35: B7 04        	lda	[<L79+current_record_0],Y
  3684 09:7D37: 48           	pha
  3685 09:7D38: 22 38 AF 09  	jsl	~~mem_free_ZEXPR
  3686                        ;      else if(current_record->operation_code == 0
                    xED)
  3687 09:7D3C: 82 D4 01     	brl	L10142
  Sat Jul 10 2021  1:15                                                Page 70


  3688                        L10141:
  3689                        	.line	311
  3690                        ;        mem_free_BEXPR((struct record_BEXPR *) cu
                    rrent_record->record_data);
  3691 09:7D3F: E2 20        	sep	#$20
  3692                        	longa	off
  3693 09:7D41: A0 08 00     	ldy	#$8
  3694 09:7D44: B7 04        	lda	[<L79+current_record_0],Y
  3695 09:7D46: C9 ED        	cmp	#<$ed
  3696 09:7D48: C2 20        	rep	#$20
  3697                        	longa	on
  3698 09:7D4A: F0 03        	beq	L97
  3699 09:7D4C: 82 13 00     	brl	L10143
  3700                        L97:
  3701                        	.line	312
  3702 09:7D4F: A0 0D 00     	ldy	#$d
  3703 09:7D52: B7 04        	lda	[<L79+current_record_0],Y
  3704 09:7D54: 48           	pha
  3705 09:7D55: A0 0B 00     	ldy	#$b
  3706 09:7D58: B7 04        	lda	[<L79+current_record_0],Y
  3707 09:7D5A: 48           	pha
  3708 09:7D5B: 22 61 AF 09  	jsl	~~mem_free_BEXPR
  3709                        ;      else if(current_record->operation_code == 0
                    xEE)
  3710 09:7D5F: 82 B1 01     	brl	L10144
  3711                        L10143:
  3712                        	.line	313
  3713                        ;        mem_free_RELEXPR((struct record_RELEXPR *
                    ) current_record->record_data);
  3714 09:7D62: E2 20        	sep	#$20
  3715                        	longa	off
  3716 09:7D64: A0 08 00     	ldy	#$8
  3717 09:7D67: B7 04        	lda	[<L79+current_record_0],Y
  3718 09:7D69: C9 EE        	cmp	#<$ee
  3719 09:7D6B: C2 20        	rep	#$20
  3720                        	longa	on
  3721 09:7D6D: F0 03        	beq	L98
  3722 09:7D6F: 82 13 00     	brl	L10145
  3723                        L98:
  3724                        	.line	314
  3725 09:7D72: A0 0D 00     	ldy	#$d
  3726 09:7D75: B7 04        	lda	[<L79+current_record_0],Y
  3727 09:7D77: 48           	pha
  3728 09:7D78: A0 0B 00     	ldy	#$b
  3729 09:7D7B: B7 04        	lda	[<L79+current_record_0],Y
  3730 09:7D7D: 48           	pha
  3731 09:7D7E: 22 8A AF 09  	jsl	~~mem_free_RELEXPR
  3732                        ;      else if(current_record->operation_code == 0
                    xEF)
  3733 09:7D82: 82 8E 01     	brl	L10146
  3734                        L10145:
  3735                        	.line	315
  3736                        ;        mem_free_LOCAL((struct record_LOCAL *) cu
                    rrent_record->record_data);
  3737 09:7D85: E2 20        	sep	#$20
  3738                        	longa	off
  3739 09:7D87: A0 08 00     	ldy	#$8
  3740 09:7D8A: B7 04        	lda	[<L79+current_record_0],Y
  Sat Jul 10 2021  1:15                                                Page 71


  3741 09:7D8C: C9 EF        	cmp	#<$ef
  3742 09:7D8E: C2 20        	rep	#$20
  3743                        	longa	on
  3744 09:7D90: F0 03        	beq	L99
  3745 09:7D92: 82 13 00     	brl	L10147
  3746                        L99:
  3747                        	.line	316
  3748 09:7D95: A0 0D 00     	ldy	#$d
  3749 09:7D98: B7 04        	lda	[<L79+current_record_0],Y
  3750 09:7D9A: 48           	pha
  3751 09:7D9B: A0 0B 00     	ldy	#$b
  3752 09:7D9E: B7 04        	lda	[<L79+current_record_0],Y
  3753 09:7DA0: 48           	pha
  3754 09:7DA1: 22 B3 AF 09  	jsl	~~mem_free_LOCAL
  3755                        ;      else if(current_record->operation_code == 0
                    xF0)
  3756 09:7DA5: 82 6B 01     	brl	L10148
  3757                        L10147:
  3758                        	.line	317
  3759                        ;        mem_free_EQU((struct record_EQU *) curren
                    t_record->record_data);
  3760 09:7DA8: E2 20        	sep	#$20
  3761                        	longa	off
  3762 09:7DAA: A0 08 00     	ldy	#$8
  3763 09:7DAD: B7 04        	lda	[<L79+current_record_0],Y
  3764 09:7DAF: C9 F0        	cmp	#<$f0
  3765 09:7DB1: C2 20        	rep	#$20
  3766                        	longa	on
  3767 09:7DB3: F0 03        	beq	L100
  3768 09:7DB5: 82 13 00     	brl	L10149
  3769                        L100:
  3770                        	.line	318
  3771 09:7DB8: A0 0D 00     	ldy	#$d
  3772 09:7DBB: B7 04        	lda	[<L79+current_record_0],Y
  3773 09:7DBD: 48           	pha
  3774 09:7DBE: A0 0B 00     	ldy	#$b
  3775 09:7DC1: B7 04        	lda	[<L79+current_record_0],Y
  3776 09:7DC3: 48           	pha
  3777 09:7DC4: 22 DC AF 09  	jsl	~~mem_free_EQU
  3778                        ;      else if(current_record->operation_code == 0
                    xF1)
  3779 09:7DC8: 82 48 01     	brl	L10150
  3780                        L10149:
  3781                        	.line	319
  3782                        ;        mem_free_DS((struct record_DS *) current_
                    record->record_data);
  3783 09:7DCB: E2 20        	sep	#$20
  3784                        	longa	off
  3785 09:7DCD: A0 08 00     	ldy	#$8
  3786 09:7DD0: B7 04        	lda	[<L79+current_record_0],Y
  3787 09:7DD2: C9 F1        	cmp	#<$f1
  3788 09:7DD4: C2 20        	rep	#$20
  3789                        	longa	on
  3790 09:7DD6: F0 03        	beq	L101
  3791 09:7DD8: 82 13 00     	brl	L10151
  3792                        L101:
  3793                        	.line	320
  3794 09:7DDB: A0 0D 00     	ldy	#$d
  Sat Jul 10 2021  1:15                                                Page 72


  3795 09:7DDE: B7 04        	lda	[<L79+current_record_0],Y
  3796 09:7DE0: 48           	pha
  3797 09:7DE1: A0 0B 00     	ldy	#$b
  3798 09:7DE4: B7 04        	lda	[<L79+current_record_0],Y
  3799 09:7DE6: 48           	pha
  3800 09:7DE7: 22 05 B0 09  	jsl	~~mem_free_DS
  3801                        ;      else if(current_record->operation_code == 0
                    xF2)
  3802 09:7DEB: 82 25 01     	brl	L10152
  3803                        L10151:
  3804                        	.line	321
  3805                        ;        mem_free_LCONST((struct record_LCONST *) 
                    current_record->record_data);
  3806 09:7DEE: E2 20        	sep	#$20
  3807                        	longa	off
  3808 09:7DF0: A0 08 00     	ldy	#$8
  3809 09:7DF3: B7 04        	lda	[<L79+current_record_0],Y
  3810 09:7DF5: C9 F2        	cmp	#<$f2
  3811 09:7DF7: C2 20        	rep	#$20
  3812                        	longa	on
  3813 09:7DF9: F0 03        	beq	L102
  3814 09:7DFB: 82 13 00     	brl	L10153
  3815                        L102:
  3816                        	.line	322
  3817 09:7DFE: A0 0D 00     	ldy	#$d
  3818 09:7E01: B7 04        	lda	[<L79+current_record_0],Y
  3819 09:7E03: 48           	pha
  3820 09:7E04: A0 0B 00     	ldy	#$b
  3821 09:7E07: B7 04        	lda	[<L79+current_record_0],Y
  3822 09:7E09: 48           	pha
  3823 09:7E0A: 22 2E B0 09  	jsl	~~mem_free_LCONST
  3824                        ;      else if(current_record->operation_code == 0
                    xF3)
  3825 09:7E0E: 82 02 01     	brl	L10154
  3826                        L10153:
  3827                        	.line	323
  3828                        ;        mem_free_LEXPR((struct record_LEXPR *) cu
                    rrent_record->record_data);
  3829 09:7E11: E2 20        	sep	#$20
  3830                        	longa	off
  3831 09:7E13: A0 08 00     	ldy	#$8
  3832 09:7E16: B7 04        	lda	[<L79+current_record_0],Y
  3833 09:7E18: C9 F3        	cmp	#<$f3
  3834 09:7E1A: C2 20        	rep	#$20
  3835                        	longa	on
  3836 09:7E1C: F0 03        	beq	L103
  3837 09:7E1E: 82 13 00     	brl	L10155
  3838                        L103:
  3839                        	.line	324
  3840 09:7E21: A0 0D 00     	ldy	#$d
  3841 09:7E24: B7 04        	lda	[<L79+current_record_0],Y
  3842 09:7E26: 48           	pha
  3843 09:7E27: A0 0B 00     	ldy	#$b
  3844 09:7E2A: B7 04        	lda	[<L79+current_record_0],Y
  3845 09:7E2C: 48           	pha
  3846 09:7E2D: 22 76 B0 09  	jsl	~~mem_free_LEXPR
  3847                        ;      else if(current_record->operation_code == 0
                    xF4)
  Sat Jul 10 2021  1:15                                                Page 73


  3848 09:7E31: 82 DF 00     	brl	L10156
  3849                        L10155:
  3850                        	.line	325
  3851                        ;        mem_free_ENTRY((struct record_ENTRY *) cu
                    rrent_record->record_data);
  3852 09:7E34: E2 20        	sep	#$20
  3853                        	longa	off
  3854 09:7E36: A0 08 00     	ldy	#$8
  3855 09:7E39: B7 04        	lda	[<L79+current_record_0],Y
  3856 09:7E3B: C9 F4        	cmp	#<$f4
  3857 09:7E3D: C2 20        	rep	#$20
  3858                        	longa	on
  3859 09:7E3F: F0 03        	beq	L104
  3860 09:7E41: 82 13 00     	brl	L10157
  3861                        L104:
  3862                        	.line	326
  3863 09:7E44: A0 0D 00     	ldy	#$d
  3864 09:7E47: B7 04        	lda	[<L79+current_record_0],Y
  3865 09:7E49: 48           	pha
  3866 09:7E4A: A0 0B 00     	ldy	#$b
  3867 09:7E4D: B7 04        	lda	[<L79+current_record_0],Y
  3868 09:7E4F: 48           	pha
  3869 09:7E50: 22 9F B0 09  	jsl	~~mem_free_ENTRY
  3870                        ;      else if(current_record->operation_code == 0
                    xF5)
  3871 09:7E54: 82 BC 00     	brl	L10158
  3872                        L10157:
  3873                        	.line	327
  3874                        ;        mem_free_cRELOC((struct record_cRELOC *) 
                    current_record->record_data);
  3875 09:7E57: E2 20        	sep	#$20
  3876                        	longa	off
  3877 09:7E59: A0 08 00     	ldy	#$8
  3878 09:7E5C: B7 04        	lda	[<L79+current_record_0],Y
  3879 09:7E5E: C9 F5        	cmp	#<$f5
  3880 09:7E60: C2 20        	rep	#$20
  3881                        	longa	on
  3882 09:7E62: F0 03        	beq	L105
  3883 09:7E64: 82 13 00     	brl	L10159
  3884                        L105:
  3885                        	.line	328
  3886 09:7E67: A0 0D 00     	ldy	#$d
  3887 09:7E6A: B7 04        	lda	[<L79+current_record_0],Y
  3888 09:7E6C: 48           	pha
  3889 09:7E6D: A0 0B 00     	ldy	#$b
  3890 09:7E70: B7 04        	lda	[<L79+current_record_0],Y
  3891 09:7E72: 48           	pha
  3892 09:7E73: 22 C8 B0 09  	jsl	~~mem_free_cRELOC
  3893                        ;      else if(current_record->operation_code == 0
                    xF6)
  3894 09:7E77: 82 99 00     	brl	L10160
  3895                        L10159:
  3896                        	.line	329
  3897                        ;        mem_free_cINTERSEG((struct record_cINTERS
                    EG *) current_record->record_data);
  3898 09:7E7A: E2 20        	sep	#$20
  3899                        	longa	off
  3900 09:7E7C: A0 08 00     	ldy	#$8
  Sat Jul 10 2021  1:15                                                Page 74


  3901 09:7E7F: B7 04        	lda	[<L79+current_record_0],Y
  3902 09:7E81: C9 F6        	cmp	#<$f6
  3903 09:7E83: C2 20        	rep	#$20
  3904                        	longa	on
  3905 09:7E85: F0 03        	beq	L106
  3906 09:7E87: 82 13 00     	brl	L10161
  3907                        L106:
  3908                        	.line	330
  3909 09:7E8A: A0 0D 00     	ldy	#$d
  3910 09:7E8D: B7 04        	lda	[<L79+current_record_0],Y
  3911 09:7E8F: 48           	pha
  3912 09:7E90: A0 0B 00     	ldy	#$b
  3913 09:7E93: B7 04        	lda	[<L79+current_record_0],Y
  3914 09:7E95: 48           	pha
  3915 09:7E96: 22 F1 B0 09  	jsl	~~mem_free_cINTERSEG
  3916                        ;      else if(current_record->operation_code == 0
                    xF7)
  3917 09:7E9A: 82 76 00     	brl	L10162
  3918                        L10161:
  3919                        	.line	331
  3920                        ;        mem_free_SUPER((struct record_SUPER *) cu
                    rrent_record->record_data);
  3921 09:7E9D: E2 20        	sep	#$20
  3922                        	longa	off
  3923 09:7E9F: A0 08 00     	ldy	#$8
  3924 09:7EA2: B7 04        	lda	[<L79+current_record_0],Y
  3925 09:7EA4: C9 F7        	cmp	#<$f7
  3926 09:7EA6: C2 20        	rep	#$20
  3927                        	longa	on
  3928 09:7EA8: F0 03        	beq	L107
  3929 09:7EAA: 82 13 00     	brl	L10163
  3930                        L107:
  3931                        	.line	332
  3932 09:7EAD: A0 0D 00     	ldy	#$d
  3933 09:7EB0: B7 04        	lda	[<L79+current_record_0],Y
  3934 09:7EB2: 48           	pha
  3935 09:7EB3: A0 0B 00     	ldy	#$b
  3936 09:7EB6: B7 04        	lda	[<L79+current_record_0],Y
  3937 09:7EB8: 48           	pha
  3938 09:7EB9: 22 1A B1 09  	jsl	~~mem_free_SUPER
  3939                        ;      else if(current_record->operation_code == 0
                    xFB)
  3940 09:7EBD: 82 53 00     	brl	L10164
  3941                        L10163:
  3942                        	.line	333
  3943                        ;        mem_free_General((struct record_General *
                    ) current_record->record_data);
  3944 09:7EC0: E2 20        	sep	#$20
  3945                        	longa	off
  3946 09:7EC2: A0 08 00     	ldy	#$8
  3947 09:7EC5: B7 04        	lda	[<L79+current_record_0],Y
  3948 09:7EC7: C9 FB        	cmp	#<$fb
  3949 09:7EC9: C2 20        	rep	#$20
  3950                        	longa	on
  3951 09:7ECB: F0 03        	beq	L108
  3952 09:7ECD: 82 13 00     	brl	L10165
  3953                        L108:
  3954                        	.line	334
  Sat Jul 10 2021  1:15                                                Page 75


  3955 09:7ED0: A0 0D 00     	ldy	#$d
  3956 09:7ED3: B7 04        	lda	[<L79+current_record_0],Y
  3957 09:7ED5: 48           	pha
  3958 09:7ED6: A0 0B 00     	ldy	#$b
  3959 09:7ED9: B7 04        	lda	[<L79+current_record_0],Y
  3960 09:7EDB: 48           	pha
  3961 09:7EDC: 22 7B B1 09  	jsl	~~mem_free_General
  3962                        ;      else if(current_record->operation_code >= 0
                    xFC && current_record->operation_code <= 0xFF)
  3963 09:7EE0: 82 30 00     	brl	L10166
  3964                        L10165:
  3965                        	.line	335
  3966                        ;        mem_free_Experimental((struct record_Expe
                    rimental *) current_record->record_data);
  3967 09:7EE3: E2 20        	sep	#$20
  3968                        	longa	off
  3969 09:7EE5: A0 08 00     	ldy	#$8
  3970 09:7EE8: B7 04        	lda	[<L79+current_record_0],Y
  3971 09:7EEA: C9 FC        	cmp	#<$fc
  3972 09:7EEC: C2 20        	rep	#$20
  3973                        	longa	on
  3974 09:7EEE: B0 03        	bcs	L109
  3975 09:7EF0: 82 20 00     	brl	L10167
  3976                        L109:
  3977 09:7EF3: E2 20        	sep	#$20
  3978                        	longa	off
  3979 09:7EF5: A9 FF        	lda	#$ff
  3980 09:7EF7: A0 08 00     	ldy	#$8
  3981 09:7EFA: D7 04        	cmp	[<L79+current_record_0],Y
  3982 09:7EFC: C2 20        	rep	#$20
  3983                        	longa	on
  3984 09:7EFE: B0 03        	bcs	L110
  3985 09:7F00: 82 10 00     	brl	L10167
  3986                        L110:
  3987                        	.line	336
  3988 09:7F03: A0 0D 00     	ldy	#$d
  3989 09:7F06: B7 04        	lda	[<L79+current_record_0],Y
  3990 09:7F08: 48           	pha
  3991 09:7F09: A0 0B 00     	ldy	#$b
  3992 09:7F0C: B7 04        	lda	[<L79+current_record_0],Y
  3993 09:7F0E: 48           	pha
  3994 09:7F0F: 22 A4 B1 09  	jsl	~~mem_free_Experimental
  3995                        ;
  3996                        ;      k_free(current_record);
  3997                        L10167:
  3998                        L10166:
  3999                        L10164:
  4000                        L10162:
  4001                        L10160:
  4002                        L10158:
  4003                        L10156:
  4004                        L10154:
  4005                        L10152:
  4006                        L10150:
  4007                        L10148:
  4008                        L10146:
  4009                        L10144:
  4010                        L10142:
  Sat Jul 10 2021  1:15                                                Page 76


  4011                        L10140:
  4012                        L10138:
  4013                        L10136:
  4014                        L10134:
  4015                        L10132:
  4016                        L10130:
  4017                        L10128:
  4018                        L10126:
  4019                        L10124:
  4020                        L10122:
  4021                        L10120:
  4022                        L10118:
  4023                        	.line	338
  4024 09:7F13: D4 06        	pei	<L79+current_record_0+2
  4025 09:7F15: D4 04        	pei	<L79+current_record_0
  4026 09:7F17: 22 xx xx xx  	jsl	~~k_free
  4027                        ;    }
  4028                        	.line	339
  4029                        ;}
  4030                        L10116:
  4031                        	.line	340
  4032                        L111:
  4033 09:7F1B: A5 02        	lda	<L79+2
  4034 09:7F1D: 85 06        	sta	<L79+2+4
  4035 09:7F1F: A5 01        	lda	<L79+1
  4036 09:7F21: 85 05        	sta	<L79+1+4
  4037 09:7F23: 2B           	pld
  4038 09:7F24: 3B           	tsc
  4039 09:7F25: 18           	clc
  4040 09:7F26: 69 04 00     	adc	#L79+4
  4041 09:7F29: 1B           	tcs
  4042 09:7F2A: 6B           	rtl
  4043                        	.endblock	340
  4044             00000000   L79	equ	0
  4045             00000001   L80	equ	1
  4046 09:7F2B:              	ends
  4047                        	efunc
  4048                        	.endfunc	340,1,0
  4049                        	.line	340
  4050                        ;
  4051                        ;
  4052                        ;/************************************************
                    */
  4053                        ;/*  DecodeRecordEND() :  Décodage du Record END. 
                    */
  4054                        ;/************************************************
                    */
  4055                        ;static void *DecodeRecordEND(unsigned char *data,
                     int file_offset, int segment_offset, int *record_length_rtn
                    )
  4056                        ;{
  4057                        	.line	346
  4058                        	.line	347
  4059                        	LOADER
  4060                        	func
  4061                        	.function	347
  4062                        ~~DecodeRecordEND:
  4063                        	longa	on
  Sat Jul 10 2021  1:15                                                Page 77


  4064                        	longi	on
  4065 09:7F2B: 3B           	tsc
  4066 09:7F2C: 38           	sec
  4067 09:7F2D: E9 08 00     	sbc	#L112
  4068 09:7F30: 1B           	tcs
  4069 09:7F31: 0B           	phd
  4070 09:7F32: 5B           	tcd
  4071             00000004   data_0	set	4
  4072             00000008   file_offset_0	set	8
  4073             0000000A   segment_offset_0	set	10
  4074             0000000C   record_length_rtn_0	set	12
  4075                        	.block	347
  4076                        ;  struct record_END *current_record;
  4077                        ;
  4078                        ;  /* Allocation mémoire */
  4079                        ;  current_record = (struct record_END *) k_calloc
                    (1,sizeof(struct record_END));
  4080             00000000   current_record_1	set	0
  4081                        	.sym	current_record,0,138,1,32,95
  4082                        	.sym	data,4,142,6,32
  4083                        	.sym	file_offset,8,5,6,16
  4084                        	.sym	segment_offset,10,5,6,16
  4085                        	.sym	record_length_rtn,12,133,6,32
  4086                        	.line	351
  4087 09:7F33: F4 09 00     	pea	#<$9
  4088 09:7F36: F4 01 00     	pea	#<$1
  4089 09:7F39: 22 xx xx xx  	jsl	~~k_calloc
  4090 09:7F3D: 85 05        	sta	<L113+current_record_1
  4091 09:7F3F: 86 07        	stx	<L113+current_record_1+2
  4092                        ;  if(current_record == NULL)
  4093                        	.line	352
  4094                        ;    {
  4095 09:7F41: A5 05        	lda	<L113+current_record_1
  4096 09:7F43: 05 07        	ora	<L113+current_record_1+2
  4097 09:7F45: F0 03        	beq	L115
  4098 09:7F47: 82 19 00     	brl	L10168
  4099                        L115:
  4100                        	.line	353
  4101                        ;      //printf("Error : Impossible to allocate me
                    mory to process Segment Body Record.\n");
  4102                        ;      return(NULL);
  4103                        	.line	355
  4104 09:7F4A: A9 00 00     	lda	#$0
  4105 09:7F4D: AA           	tax
  4106 09:7F4E: A9 00 00     	lda	#$0
  4107                        L116:
  4108 09:7F51: A8           	tay
  4109 09:7F52: A5 0A        	lda	<L112+2
  4110 09:7F54: 85 16        	sta	<L112+2+12
  4111 09:7F56: A5 09        	lda	<L112+1
  4112 09:7F58: 85 15        	sta	<L112+1+12
  4113 09:7F5A: 2B           	pld
  4114 09:7F5B: 3B           	tsc
  4115 09:7F5C: 18           	clc
  4116 09:7F5D: 69 14 00     	adc	#L112+12
  4117 09:7F60: 1B           	tcs
  4118 09:7F61: 98           	tya
  4119 09:7F62: 6B           	rtl
  Sat Jul 10 2021  1:15                                                Page 78


  4120                        ;    }
  4121                        	.line	356
  4122                        ;
  4123                        ;  /* Offset */
  4124                        ;  current_record->FileOffset = (DWORD) file_offse
                    t;
  4125                        L10168:
  4126                        	.line	359
  4127 09:7F63: A0 00 00     	ldy	#$0
  4128 09:7F66: A5 10        	lda	<L112+file_offset_0
  4129 09:7F68: 10 01        	bpl	L117
  4130 09:7F6A: 88           	dey
  4131                        L117:
  4132 09:7F6B: 85 01        	sta	<R0
  4133 09:7F6D: 84 03        	sty	<R0+2
  4134 09:7F6F: A5 01        	lda	<R0
  4135 09:7F71: 87 05        	sta	[<L113+current_record_1]
  4136 09:7F73: A5 03        	lda	<R0+2
  4137 09:7F75: A0 02 00     	ldy	#$2
  4138 09:7F78: 97 05        	sta	[<L113+current_record_1],Y
  4139                        ;  current_record->SegmentOffset = (DWORD) segment
                    _offset;
  4140                        	.line	360
  4141 09:7F7A: A0 00 00     	ldy	#$0
  4142 09:7F7D: A5 12        	lda	<L112+segment_offset_0
  4143 09:7F7F: 10 01        	bpl	L118
  4144 09:7F81: 88           	dey
  4145                        L118:
  4146 09:7F82: 85 01        	sta	<R0
  4147 09:7F84: 84 03        	sty	<R0+2
  4148 09:7F86: A5 01        	lda	<R0
  4149 09:7F88: A0 04 00     	ldy	#$4
  4150 09:7F8B: 97 05        	sta	[<L113+current_record_1],Y
  4151 09:7F8D: A5 03        	lda	<R0+2
  4152 09:7F8F: A0 06 00     	ldy	#$6
  4153 09:7F92: 97 05        	sta	[<L113+current_record_1],Y
  4154                        ;
  4155                        ;  /* Operation Code */
  4156                        ;  current_record->operation_code = data[0];
  4157                        	.line	363
  4158 09:7F94: E2 20        	sep	#$20
  4159                        	longa	off
  4160 09:7F96: A7 0C        	lda	[<L112+data_0]
  4161 09:7F98: A0 08 00     	ldy	#$8
  4162 09:7F9B: 97 05        	sta	[<L113+current_record_1],Y
  4163 09:7F9D: C2 20        	rep	#$20
  4164                        	longa	on
  4165                        ;
  4166                        ;  /* Renvoie la structure */
  4167                        ;  *record_length_rtn = 1;
  4168                        	.line	366
  4169 09:7F9F: A9 01 00     	lda	#$1
  4170 09:7FA2: 87 14        	sta	[<L112+record_length_rtn_0]
  4171                        ;  return(current_record);
  4172                        	.line	367
  4173 09:7FA4: A6 07        	ldx	<L113+current_record_1+2
  4174 09:7FA6: A5 05        	lda	<L113+current_record_1
  4175 09:7FA8: 82 A6 FF     	brl	L116
  Sat Jul 10 2021  1:15                                                Page 79


  4176                        ;}
  4177                        	.line	368
  4178                        	.endblock	368
  4179             00000008   L112	equ	8
  4180             00000005   L113	equ	5
  4181 09:7FAB:              	ends
  4182                        	efunc
  4183                        	.endfunc	368,5,8
  4184                        	.line	368
  4185                        ;
  4186                        ;
  4187                        ;/************************************************
                    *****/
  4188                        ;/*  DecodeRecordCONST() :  Décodage du Record CON
                    ST. */
  4189                        ;/************************************************
                    *****/
  4190                        ;static void *DecodeRecordCONST(unsigned char *dat
                    a, int file_offset, int segment_offset, int *record_length_r
                    tn)
  4191                        ;{
  4192                        	.line	374
  4193                        	.line	375
  4194                        	LOADER
  4195                        	func
  4196                        	.function	375
  4197                        ~~DecodeRecordCONST:
  4198                        	longa	on
  4199                        	longi	on
  4200 09:7FAB: 3B           	tsc
  4201 09:7FAC: 38           	sec
  4202 09:7FAD: E9 08 00     	sbc	#L119
  4203 09:7FB0: 1B           	tcs
  4204 09:7FB1: 0B           	phd
  4205 09:7FB2: 5B           	tcd
  4206             00000004   data_0	set	4
  4207             00000008   file_offset_0	set	8
  4208             0000000A   segment_offset_0	set	10
  4209             0000000C   record_length_rtn_0	set	12
  4210                        	.block	375
  4211                        ;  struct record_CONST *current_record;
  4212                        ;
  4213                        ;  /* Allocation mémoire */
  4214                        ;  current_record = (struct record_CONST *) k_call
                    oc(1,sizeof(struct record_CONST));
  4215             00000000   current_record_1	set	0
  4216                        	.sym	current_record,0,138,1,32,96
  4217                        	.sym	data,4,142,6,32
  4218                        	.sym	file_offset,8,5,6,16
  4219                        	.sym	segment_offset,10,5,6,16
  4220                        	.sym	record_length_rtn,12,133,6,32
  4221                        	.line	379
  4222 09:7FB3: F4 0E 00     	pea	#<$e
  4223 09:7FB6: F4 01 00     	pea	#<$1
  4224 09:7FB9: 22 xx xx xx  	jsl	~~k_calloc
  4225 09:7FBD: 85 05        	sta	<L120+current_record_1
  4226 09:7FBF: 86 07        	stx	<L120+current_record_1+2
  4227                        ;  if(current_record == NULL)
  Sat Jul 10 2021  1:15                                                Page 80


  4228                        	.line	380
  4229                        ;    {
  4230 09:7FC1: A5 05        	lda	<L120+current_record_1
  4231 09:7FC3: 05 07        	ora	<L120+current_record_1+2
  4232 09:7FC5: F0 03        	beq	L122
  4233 09:7FC7: 82 19 00     	brl	L10169
  4234                        L122:
  4235                        	.line	381
  4236                        ;      //printf("Error : Impossible to allocate me
                    mory to process Segment Body Record.\n");
  4237                        ;      return(NULL);
  4238                        	.line	383
  4239 09:7FCA: A9 00 00     	lda	#$0
  4240 09:7FCD: AA           	tax
  4241 09:7FCE: A9 00 00     	lda	#$0
  4242                        L123:
  4243 09:7FD1: A8           	tay
  4244 09:7FD2: A5 0A        	lda	<L119+2
  4245 09:7FD4: 85 16        	sta	<L119+2+12
  4246 09:7FD6: A5 09        	lda	<L119+1
  4247 09:7FD8: 85 15        	sta	<L119+1+12
  4248 09:7FDA: 2B           	pld
  4249 09:7FDB: 3B           	tsc
  4250 09:7FDC: 18           	clc
  4251 09:7FDD: 69 14 00     	adc	#L119+12
  4252 09:7FE0: 1B           	tcs
  4253 09:7FE1: 98           	tya
  4254 09:7FE2: 6B           	rtl
  4255                        ;    }
  4256                        	.line	384
  4257                        ;
  4258                        ;  /* Offset */
  4259                        ;  current_record->FileOffset = (DWORD) file_offse
                    t;
  4260                        L10169:
  4261                        	.line	387
  4262 09:7FE3: A0 00 00     	ldy	#$0
  4263 09:7FE6: A5 10        	lda	<L119+file_offset_0
  4264 09:7FE8: 10 01        	bpl	L124
  4265 09:7FEA: 88           	dey
  4266                        L124:
  4267 09:7FEB: 85 01        	sta	<R0
  4268 09:7FED: 84 03        	sty	<R0+2
  4269 09:7FEF: A5 01        	lda	<R0
  4270 09:7FF1: 87 05        	sta	[<L120+current_record_1]
  4271 09:7FF3: A5 03        	lda	<R0+2
  4272 09:7FF5: A0 02 00     	ldy	#$2
  4273 09:7FF8: 97 05        	sta	[<L120+current_record_1],Y
  4274                        ;  current_record->SegmentOffset = (DWORD) segment
                    _offset;
  4275                        	.line	388
  4276 09:7FFA: A0 00 00     	ldy	#$0
  4277 09:7FFD: A5 12        	lda	<L119+segment_offset_0
  4278 09:7FFF: 10 01        	bpl	L125
  4279 09:8001: 88           	dey
  4280                        L125:
  4281 09:8002: 85 01        	sta	<R0
  4282 09:8004: 84 03        	sty	<R0+2
  Sat Jul 10 2021  1:15                                                Page 81


  4283 09:8006: A5 01        	lda	<R0
  4284 09:8008: A0 04 00     	ldy	#$4
  4285 09:800B: 97 05        	sta	[<L120+current_record_1],Y
  4286 09:800D: A5 03        	lda	<R0+2
  4287 09:800F: A0 06 00     	ldy	#$6
  4288 09:8012: 97 05        	sta	[<L120+current_record_1],Y
  4289                        ;
  4290                        ;  /* Operation Code : 0x01 - 0xDF */
  4291                        ;  current_record->operation_code = data[0];
  4292                        	.line	391
  4293 09:8014: E2 20        	sep	#$20
  4294                        	longa	off
  4295 09:8016: A7 0C        	lda	[<L119+data_0]
  4296 09:8018: A0 08 00     	ldy	#$8
  4297 09:801B: 97 05        	sta	[<L120+current_record_1],Y
  4298 09:801D: C2 20        	rep	#$20
  4299                        	longa	on
  4300                        ;
  4301                        ;  /** Zone de Data qui n'a pas besoin d'être relo
                    gée **/
  4302                        ;  current_record->ByteCnt = data[0];
  4303                        	.line	394
  4304 09:801F: E2 20        	sep	#$20
  4305                        	longa	off
  4306 09:8021: A7 0C        	lda	[<L119+data_0]
  4307 09:8023: A0 09 00     	ldy	#$9
  4308 09:8026: 97 05        	sta	[<L120+current_record_1],Y
  4309 09:8028: C2 20        	rep	#$20
  4310                        	longa	on
  4311                        ;
  4312                        ;  /* Allocation mémoire */
  4313                        ;  current_record->data = (unsigned char *) k_call
                    oc(current_record->ByteCnt,sizeof(unsigned char));
  4314                        	.line	397
  4315 09:802A: F4 01 00     	pea	#<$1
  4316 09:802D: A0 09 00     	ldy	#$9
  4317 09:8030: B7 05        	lda	[<L120+current_record_1],Y
  4318 09:8032: 29 FF 00     	and	#$ff
  4319 09:8035: 48           	pha
  4320 09:8036: 22 xx xx xx  	jsl	~~k_calloc
  4321 09:803A: 85 01        	sta	<R0
  4322 09:803C: 86 03        	stx	<R0+2
  4323 09:803E: A5 01        	lda	<R0
  4324 09:8040: A0 0A 00     	ldy	#$a
  4325 09:8043: 97 05        	sta	[<L120+current_record_1],Y
  4326 09:8045: A5 03        	lda	<R0+2
  4327 09:8047: A0 0C 00     	ldy	#$c
  4328 09:804A: 97 05        	sta	[<L120+current_record_1],Y
  4329                        ;  if(current_record->data == NULL)
  4330                        	.line	398
  4331                        ;    {
  4332 09:804C: A0 0A 00     	ldy	#$a
  4333 09:804F: B7 05        	lda	[<L120+current_record_1],Y
  4334 09:8051: A0 0C 00     	ldy	#$c
  4335 09:8054: 17 05        	ora	[<L120+current_record_1],Y
  4336 09:8056: F0 03        	beq	L126
  4337 09:8058: 82 12 00     	brl	L10170
  4338                        L126:
  Sat Jul 10 2021  1:15                                                Page 82


  4339                        	.line	399
  4340                        ;      //printf("Error : Impossible to allocate me
                    mory to process Segment Body Record LCONST : %d bytes requir
                    ed.\n",current_record->ByteCnt);
  4341                        ;      mem_free_CONST(current_record);
  4342                        	.line	401
  4343 09:805B: D4 07        	pei	<L120+current_record_1+2
  4344 09:805D: D4 05        	pei	<L120+current_record_1
  4345 09:805F: 22 56 AD 09  	jsl	~~mem_free_CONST
  4346                        ;      return(NULL);
  4347                        	.line	402
  4348 09:8063: A9 00 00     	lda	#$0
  4349 09:8066: AA           	tax
  4350 09:8067: A9 00 00     	lda	#$0
  4351 09:806A: 82 64 FF     	brl	L123
  4352                        ;    }
  4353                        	.line	403
  4354                        ;  
  4355                        ;  /* Copie les Data */
  4356                        ;  memcpy(current_record->data,&data[1],current_re
                    cord->ByteCnt);
  4357                        L10170:
  4358                        	.line	406
  4359 09:806D: A0 09 00     	ldy	#$9
  4360 09:8070: B7 05        	lda	[<L120+current_record_1],Y
  4361 09:8072: 29 FF 00     	and	#$ff
  4362 09:8075: 48           	pha
  4363 09:8076: 18           	clc
  4364 09:8077: A9 01 00     	lda	#$1
  4365 09:807A: 65 0C        	adc	<L119+data_0
  4366 09:807C: 85 01        	sta	<R0
  4367 09:807E: A9 00 00     	lda	#$0
  4368 09:8081: 65 0E        	adc	<L119+data_0+2
  4369 09:8083: 85 03        	sta	<R0+2
  4370 09:8085: D4 03        	pei	<R0+2
  4371 09:8087: D4 01        	pei	<R0
  4372 09:8089: A0 0C 00     	ldy	#$c
  4373 09:808C: B7 05        	lda	[<L120+current_record_1],Y
  4374 09:808E: 48           	pha
  4375 09:808F: A0 0A 00     	ldy	#$a
  4376 09:8092: B7 05        	lda	[<L120+current_record_1],Y
  4377 09:8094: 48           	pha
  4378 09:8095: 22 xx xx xx  	jsl	~~memcpy
  4379                        ;
  4380                        ;  /* Renvoie la structure */
  4381                        ;  *record_length_rtn = 1 + current_record->ByteCn
                    t;
  4382                        	.line	409
  4383 09:8099: A0 09 00     	ldy	#$9
  4384 09:809C: B7 05        	lda	[<L120+current_record_1],Y
  4385 09:809E: 29 FF 00     	and	#$ff
  4386 09:80A1: 85 01        	sta	<R0
  4387 09:80A3: A5 01        	lda	<R0
  4388 09:80A5: 1A           	ina
  4389 09:80A6: 87 14        	sta	[<L119+record_length_rtn_0]
  4390                        ;  return(current_record);
  4391                        	.line	410
  4392 09:80A8: A6 07        	ldx	<L120+current_record_1+2
  Sat Jul 10 2021  1:15                                                Page 83


  4393 09:80AA: A5 05        	lda	<L120+current_record_1
  4394 09:80AC: 82 22 FF     	brl	L123
  4395                        ;}
  4396                        	.line	411
  4397                        	.endblock	411
  4398             00000008   L119	equ	8
  4399             00000005   L120	equ	5
  4400 09:80AF:              	ends
  4401                        	efunc
  4402                        	.endfunc	411,5,8
  4403                        	.line	411
  4404                        ;
  4405                        ;
  4406                        ;/************************************************
                    *****/
  4407                        ;/*  DecodeRecordALIGN() :  Décodage du Record ALI
                    GN. */
  4408                        ;/************************************************
                    *****/
  4409                        ;static void *DecodeRecordALIGN(unsigned char *dat
                    a, int file_offset, int segment_offset, int *record_length_r
                    tn)
  4410                        ;{
  4411                        	.line	417
  4412                        	.line	418
  4413                        	LOADER
  4414                        	func
  4415                        	.function	418
  4416                        ~~DecodeRecordALIGN:
  4417                        	longa	on
  4418                        	longi	on
  4419 09:80AF: 3B           	tsc
  4420 09:80B0: 38           	sec
  4421 09:80B1: E9 08 00     	sbc	#L127
  4422 09:80B4: 1B           	tcs
  4423 09:80B5: 0B           	phd
  4424 09:80B6: 5B           	tcd
  4425             00000004   data_0	set	4
  4426             00000008   file_offset_0	set	8
  4427             0000000A   segment_offset_0	set	10
  4428             0000000C   record_length_rtn_0	set	12
  4429                        	.block	418
  4430                        ;  struct record_ALIGN *current_record;
  4431                        ;
  4432                        ;  /* Allocation mémoire */
  4433                        ;  current_record = (struct record_ALIGN *) k_call
                    oc(1,sizeof(struct record_ALIGN));
  4434             00000000   current_record_1	set	0
  4435                        	.sym	current_record,0,138,1,32,97
  4436                        	.sym	data,4,142,6,32
  4437                        	.sym	file_offset,8,5,6,16
  4438                        	.sym	segment_offset,10,5,6,16
  4439                        	.sym	record_length_rtn,12,133,6,32
  4440                        	.line	422
  4441 09:80B7: F4 09 00     	pea	#<$9
  4442 09:80BA: F4 01 00     	pea	#<$1
  4443 09:80BD: 22 xx xx xx  	jsl	~~k_calloc
  4444 09:80C1: 85 05        	sta	<L128+current_record_1
  Sat Jul 10 2021  1:15                                                Page 84


  4445 09:80C3: 86 07        	stx	<L128+current_record_1+2
  4446                        ;  if(current_record == NULL)
  4447                        	.line	423
  4448                        ;    {
  4449 09:80C5: A5 05        	lda	<L128+current_record_1
  4450 09:80C7: 05 07        	ora	<L128+current_record_1+2
  4451 09:80C9: F0 03        	beq	L130
  4452 09:80CB: 82 19 00     	brl	L10171
  4453                        L130:
  4454                        	.line	424
  4455                        ;      //printf("Error : Impossible to allocate me
                    mory to process Segment Body Record.\n");
  4456                        ;      return(NULL);
  4457                        	.line	426
  4458 09:80CE: A9 00 00     	lda	#$0
  4459 09:80D1: AA           	tax
  4460 09:80D2: A9 00 00     	lda	#$0
  4461                        L131:
  4462 09:80D5: A8           	tay
  4463 09:80D6: A5 0A        	lda	<L127+2
  4464 09:80D8: 85 16        	sta	<L127+2+12
  4465 09:80DA: A5 09        	lda	<L127+1
  4466 09:80DC: 85 15        	sta	<L127+1+12
  4467 09:80DE: 2B           	pld
  4468 09:80DF: 3B           	tsc
  4469 09:80E0: 18           	clc
  4470 09:80E1: 69 14 00     	adc	#L127+12
  4471 09:80E4: 1B           	tcs
  4472 09:80E5: 98           	tya
  4473 09:80E6: 6B           	rtl
  4474                        ;    }
  4475                        	.line	427
  4476                        ;
  4477                        ;  /* Offset */
  4478                        ;  current_record->FileOffset = (DWORD) file_offse
                    t;
  4479                        L10171:
  4480                        	.line	430
  4481 09:80E7: A0 00 00     	ldy	#$0
  4482 09:80EA: A5 10        	lda	<L127+file_offset_0
  4483 09:80EC: 10 01        	bpl	L132
  4484 09:80EE: 88           	dey
  4485                        L132:
  4486 09:80EF: 85 01        	sta	<R0
  4487 09:80F1: 84 03        	sty	<R0+2
  4488 09:80F3: A5 01        	lda	<R0
  4489 09:80F5: 87 05        	sta	[<L128+current_record_1]
  4490 09:80F7: A5 03        	lda	<R0+2
  4491 09:80F9: A0 02 00     	ldy	#$2
  4492 09:80FC: 97 05        	sta	[<L128+current_record_1],Y
  4493                        ;  current_record->SegmentOffset = (DWORD) segment
                    _offset;
  4494                        	.line	431
  4495 09:80FE: A0 00 00     	ldy	#$0
  4496 09:8101: A5 12        	lda	<L127+segment_offset_0
  4497 09:8103: 10 01        	bpl	L133
  4498 09:8105: 88           	dey
  4499                        L133:
  Sat Jul 10 2021  1:15                                                Page 85


  4500 09:8106: 85 01        	sta	<R0
  4501 09:8108: 84 03        	sty	<R0+2
  4502 09:810A: A5 01        	lda	<R0
  4503 09:810C: A0 04 00     	ldy	#$4
  4504 09:810F: 97 05        	sta	[<L128+current_record_1],Y
  4505 09:8111: A5 03        	lda	<R0+2
  4506 09:8113: A0 06 00     	ldy	#$6
  4507 09:8116: 97 05        	sta	[<L128+current_record_1],Y
  4508                        ;
  4509                        ;  /* Operation Code */
  4510                        ;  current_record->operation_code = data[0];
  4511                        	.line	434
  4512 09:8118: E2 20        	sep	#$20
  4513                        	longa	off
  4514 09:811A: A7 0C        	lda	[<L127+data_0]
  4515 09:811C: A0 08 00     	ldy	#$8
  4516 09:811F: 97 05        	sta	[<L128+current_record_1],Y
  4517 09:8121: C2 20        	rep	#$20
  4518                        	longa	on
  4519                        ;
  4520                        ;  /* Renvoie la structure */
  4521                        ;  return(current_record);
  4522                        	.line	437
  4523 09:8123: A6 07        	ldx	<L128+current_record_1+2
  4524 09:8125: A5 05        	lda	<L128+current_record_1
  4525 09:8127: 82 AB FF     	brl	L131
  4526                        ;}
  4527                        	.line	438
  4528                        	.endblock	438
  4529             00000008   L127	equ	8
  4530             00000005   L128	equ	5
  4531 09:812A:              	ends
  4532                        	efunc
  4533                        	.endfunc	438,5,8
  4534                        	.line	438
  4535                        ;
  4536                        ;
  4537                        ;/************************************************
                    */
  4538                        ;/*  DecodeRecordORG() :  Décodage du Record ORG. 
                    */
  4539                        ;/************************************************
                    */
  4540                        ;static void *DecodeRecordORG(unsigned char *data,
                     int file_offset, int segment_offset, int *record_length_rtn
                    )
  4541                        ;{  
  4542                        	.line	444
  4543                        	.line	445
  4544                        	LOADER
  4545                        	func
  4546                        	.function	445
  4547                        ~~DecodeRecordORG:
  4548                        	longa	on
  4549                        	longi	on
  4550 09:812A: 3B           	tsc
  4551 09:812B: 38           	sec
  4552 09:812C: E9 08 00     	sbc	#L134
  Sat Jul 10 2021  1:15                                                Page 86


  4553 09:812F: 1B           	tcs
  4554 09:8130: 0B           	phd
  4555 09:8131: 5B           	tcd
  4556             00000004   data_0	set	4
  4557             00000008   file_offset_0	set	8
  4558             0000000A   segment_offset_0	set	10
  4559             0000000C   record_length_rtn_0	set	12
  4560                        	.block	445
  4561                        ;  struct record_ORG *current_record;
  4562                        ;
  4563                        ;  /* Allocation mémoire */
  4564                        ;  current_record = (struct record_ORG *) k_calloc
                    (1,sizeof(struct record_ORG));
  4565             00000000   current_record_1	set	0
  4566                        	.sym	current_record,0,138,1,32,98
  4567                        	.sym	data,4,142,6,32
  4568                        	.sym	file_offset,8,5,6,16
  4569                        	.sym	segment_offset,10,5,6,16
  4570                        	.sym	record_length_rtn,12,133,6,32
  4571                        	.line	449
  4572 09:8132: F4 09 00     	pea	#<$9
  4573 09:8135: F4 01 00     	pea	#<$1
  4574 09:8138: 22 xx xx xx  	jsl	~~k_calloc
  4575 09:813C: 85 05        	sta	<L135+current_record_1
  4576 09:813E: 86 07        	stx	<L135+current_record_1+2
  4577                        ;  if(current_record == NULL)
  4578                        	.line	450
  4579                        ;    {
  4580 09:8140: A5 05        	lda	<L135+current_record_1
  4581 09:8142: 05 07        	ora	<L135+current_record_1+2
  4582 09:8144: F0 03        	beq	L137
  4583 09:8146: 82 19 00     	brl	L10172
  4584                        L137:
  4585                        	.line	451
  4586                        ;      //printf("Error : Impossible to allocate me
                    mory to process Segment Body Record.\n");
  4587                        ;      return(NULL);
  4588                        	.line	453
  4589 09:8149: A9 00 00     	lda	#$0
  4590 09:814C: AA           	tax
  4591 09:814D: A9 00 00     	lda	#$0
  4592                        L138:
  4593 09:8150: A8           	tay
  4594 09:8151: A5 0A        	lda	<L134+2
  4595 09:8153: 85 16        	sta	<L134+2+12
  4596 09:8155: A5 09        	lda	<L134+1
  4597 09:8157: 85 15        	sta	<L134+1+12
  4598 09:8159: 2B           	pld
  4599 09:815A: 3B           	tsc
  4600 09:815B: 18           	clc
  4601 09:815C: 69 14 00     	adc	#L134+12
  4602 09:815F: 1B           	tcs
  4603 09:8160: 98           	tya
  4604 09:8161: 6B           	rtl
  4605                        ;    }
  4606                        	.line	454
  4607                        ;
  4608                        ;  /* Offset */
  Sat Jul 10 2021  1:15                                                Page 87


  4609                        ;  current_record->FileOffset = (DWORD) file_offse
                    t;
  4610                        L10172:
  4611                        	.line	457
  4612 09:8162: A0 00 00     	ldy	#$0
  4613 09:8165: A5 10        	lda	<L134+file_offset_0
  4614 09:8167: 10 01        	bpl	L139
  4615 09:8169: 88           	dey
  4616                        L139:
  4617 09:816A: 85 01        	sta	<R0
  4618 09:816C: 84 03        	sty	<R0+2
  4619 09:816E: A5 01        	lda	<R0
  4620 09:8170: 87 05        	sta	[<L135+current_record_1]
  4621 09:8172: A5 03        	lda	<R0+2
  4622 09:8174: A0 02 00     	ldy	#$2
  4623 09:8177: 97 05        	sta	[<L135+current_record_1],Y
  4624                        ;  current_record->SegmentOffset = (DWORD) segment
                    _offset;
  4625                        	.line	458
  4626 09:8179: A0 00 00     	ldy	#$0
  4627 09:817C: A5 12        	lda	<L134+segment_offset_0
  4628 09:817E: 10 01        	bpl	L140
  4629 09:8180: 88           	dey
  4630                        L140:
  4631 09:8181: 85 01        	sta	<R0
  4632 09:8183: 84 03        	sty	<R0+2
  4633 09:8185: A5 01        	lda	<R0
  4634 09:8187: A0 04 00     	ldy	#$4
  4635 09:818A: 97 05        	sta	[<L135+current_record_1],Y
  4636 09:818C: A5 03        	lda	<R0+2
  4637 09:818E: A0 06 00     	ldy	#$6
  4638 09:8191: 97 05        	sta	[<L135+current_record_1],Y
  4639                        ;
  4640                        ;  /* Operation Code */
  4641                        ;  current_record->operation_code = data[0];
  4642                        	.line	461
  4643 09:8193: E2 20        	sep	#$20
  4644                        	longa	off
  4645 09:8195: A7 0C        	lda	[<L134+data_0]
  4646 09:8197: A0 08 00     	ldy	#$8
  4647 09:819A: 97 05        	sta	[<L135+current_record_1],Y
  4648 09:819C: C2 20        	rep	#$20
  4649                        	longa	on
  4650                        ;
  4651                        ;  /* Renvoie la structure */
  4652                        ;  return(current_record);
  4653                        	.line	464
  4654 09:819E: A6 07        	ldx	<L135+current_record_1+2
  4655 09:81A0: A5 05        	lda	<L135+current_record_1
  4656 09:81A2: 82 AB FF     	brl	L138
  4657                        ;}
  4658                        	.line	465
  4659                        	.endblock	465
  4660             00000008   L134	equ	8
  4661             00000005   L135	equ	5
  4662 09:81A5:              	ends
  4663                        	efunc
  4664                        	.endfunc	465,5,8
  Sat Jul 10 2021  1:15                                                Page 88


  4665                        	.line	465
  4666                        ;
  4667                        ;
  4668                        ;/************************************************
                    *****/
  4669                        ;/*  DecodeRecordRELOC() :  Décodage du Record REL
                    OC. */
  4670                        ;/************************************************
                    *****/
  4671                        ;static void *DecodeRecordRELOC(unsigned char *dat
                    a, int file_offset, int segment_offset, int *record_length_r
                    tn)
  4672                        ;{
  4673                        	.line	471
  4674                        	.line	472
  4675                        	LOADER
  4676                        	func
  4677                        	.function	472
  4678                        ~~DecodeRecordRELOC:
  4679                        	longa	on
  4680                        	longi	on
  4681 09:81A5: 3B           	tsc
  4682 09:81A6: 38           	sec
  4683 09:81A7: E9 0C 00     	sbc	#L141
  4684 09:81AA: 1B           	tcs
  4685 09:81AB: 0B           	phd
  4686 09:81AC: 5B           	tcd
  4687             00000004   data_0	set	4
  4688             00000008   file_offset_0	set	8
  4689             0000000A   segment_offset_0	set	10
  4690             0000000C   record_length_rtn_0	set	12
  4691                        	.block	472
  4692                        ;  struct record_RELOC *current_record;
  4693                        ;
  4694                        ;  /* Allocation mémoire */
  4695                        ;  current_record = (struct record_RELOC *) k_call
                    oc(1,sizeof(struct record_RELOC));
  4696             00000000   current_record_1	set	0
  4697                        	.sym	current_record,0,138,1,32,99
  4698                        	.sym	data,4,142,6,32
  4699                        	.sym	file_offset,8,5,6,16
  4700                        	.sym	segment_offset,10,5,6,16
  4701                        	.sym	record_length_rtn,12,133,6,32
  4702                        	.line	476
  4703 09:81AD: F4 13 00     	pea	#<$13
  4704 09:81B0: F4 01 00     	pea	#<$1
  4705 09:81B3: 22 xx xx xx  	jsl	~~k_calloc
  4706 09:81B7: 85 09        	sta	<L142+current_record_1
  4707 09:81B9: 86 0B        	stx	<L142+current_record_1+2
  4708                        ;  if(current_record == NULL)
  4709                        	.line	477
  4710                        ;    {
  4711 09:81BB: A5 09        	lda	<L142+current_record_1
  4712 09:81BD: 05 0B        	ora	<L142+current_record_1+2
  4713 09:81BF: F0 03        	beq	L144
  4714 09:81C1: 82 19 00     	brl	L10173
  4715                        L144:
  4716                        	.line	478
  Sat Jul 10 2021  1:15                                                Page 89


  4717                        ;      //printf("Error : Impossible to allocate me
                    mory to process Segment Body Record.\n");
  4718                        ;      return(NULL);
  4719                        	.line	480
  4720 09:81C4: A9 00 00     	lda	#$0
  4721 09:81C7: AA           	tax
  4722 09:81C8: A9 00 00     	lda	#$0
  4723                        L145:
  4724 09:81CB: A8           	tay
  4725 09:81CC: A5 0E        	lda	<L141+2
  4726 09:81CE: 85 1A        	sta	<L141+2+12
  4727 09:81D0: A5 0D        	lda	<L141+1
  4728 09:81D2: 85 19        	sta	<L141+1+12
  4729 09:81D4: 2B           	pld
  4730 09:81D5: 3B           	tsc
  4731 09:81D6: 18           	clc
  4732 09:81D7: 69 18 00     	adc	#L141+12
  4733 09:81DA: 1B           	tcs
  4734 09:81DB: 98           	tya
  4735 09:81DC: 6B           	rtl
  4736                        ;    }
  4737                        	.line	481
  4738                        ;
  4739                        ;  /* Offset */
  4740                        ;  current_record->FileOffset = (DWORD) file_offse
                    t;
  4741                        L10173:
  4742                        	.line	484
  4743 09:81DD: A0 00 00     	ldy	#$0
  4744 09:81E0: A5 14        	lda	<L141+file_offset_0
  4745 09:81E2: 10 01        	bpl	L146
  4746 09:81E4: 88           	dey
  4747                        L146:
  4748 09:81E5: 85 01        	sta	<R0
  4749 09:81E7: 84 03        	sty	<R0+2
  4750 09:81E9: A5 01        	lda	<R0
  4751 09:81EB: 87 09        	sta	[<L142+current_record_1]
  4752 09:81ED: A5 03        	lda	<R0+2
  4753 09:81EF: A0 02 00     	ldy	#$2
  4754 09:81F2: 97 09        	sta	[<L142+current_record_1],Y
  4755                        ;  current_record->SegmentOffset = (DWORD) segment
                    _offset;
  4756                        	.line	485
  4757 09:81F4: A0 00 00     	ldy	#$0
  4758 09:81F7: A5 16        	lda	<L141+segment_offset_0
  4759 09:81F9: 10 01        	bpl	L147
  4760 09:81FB: 88           	dey
  4761                        L147:
  4762 09:81FC: 85 01        	sta	<R0
  4763 09:81FE: 84 03        	sty	<R0+2
  4764 09:8200: A5 01        	lda	<R0
  4765 09:8202: A0 04 00     	ldy	#$4
  4766 09:8205: 97 09        	sta	[<L142+current_record_1],Y
  4767 09:8207: A5 03        	lda	<R0+2
  4768 09:8209: A0 06 00     	ldy	#$6
  4769 09:820C: 97 09        	sta	[<L142+current_record_1],Y
  4770                        ;
  4771                        ;  /* Operation Code */
  Sat Jul 10 2021  1:15                                                Page 90


  4772                        ;  current_record->operation_code = data[0];
  4773                        	.line	488
  4774 09:820E: E2 20        	sep	#$20
  4775                        	longa	off
  4776 09:8210: A7 10        	lda	[<L141+data_0]
  4777 09:8212: A0 08 00     	ldy	#$8
  4778 09:8215: 97 09        	sta	[<L142+current_record_1],Y
  4779 09:8217: C2 20        	rep	#$20
  4780                        	longa	on
  4781                        ;
  4782                        ;  /* Récupère les données */
  4783                        ;  current_record->ByteCnt = data[1];
  4784                        	.line	491
  4785 09:8219: E2 20        	sep	#$20
  4786                        	longa	off
  4787 09:821B: A0 01 00     	ldy	#$1
  4788 09:821E: B7 10        	lda	[<L141+data_0],Y
  4789 09:8220: A0 09 00     	ldy	#$9
  4790 09:8223: 97 09        	sta	[<L142+current_record_1],Y
  4791 09:8225: C2 20        	rep	#$20
  4792                        	longa	on
  4793                        ;  current_record->BitShiftCnt = data[2];
  4794                        	.line	492
  4795 09:8227: E2 20        	sep	#$20
  4796                        	longa	off
  4797 09:8229: A0 02 00     	ldy	#$2
  4798 09:822C: B7 10        	lda	[<L141+data_0],Y
  4799 09:822E: A0 0A 00     	ldy	#$a
  4800 09:8231: 97 09        	sta	[<L142+current_record_1],Y
  4801 09:8233: C2 20        	rep	#$20
  4802                        	longa	on
  4803                        ;  memcpy(&current_record->OffsetPatch,&data[3],si
                    zeof(DWORD));
  4804                        	.line	493
  4805 09:8235: F4 04 00     	pea	#<$4
  4806 09:8238: 18           	clc
  4807 09:8239: A9 03 00     	lda	#$3
  4808 09:823C: 65 10        	adc	<L141+data_0
  4809 09:823E: 85 01        	sta	<R0
  4810 09:8240: A9 00 00     	lda	#$0
  4811 09:8243: 65 12        	adc	<L141+data_0+2
  4812 09:8245: 85 03        	sta	<R0+2
  4813 09:8247: D4 03        	pei	<R0+2
  4814 09:8249: D4 01        	pei	<R0
  4815 09:824B: 18           	clc
  4816 09:824C: A9 0B 00     	lda	#$b
  4817 09:824F: 65 09        	adc	<L142+current_record_1
  4818 09:8251: 85 05        	sta	<R1
  4819 09:8253: A9 00 00     	lda	#$0
  4820 09:8256: 65 0B        	adc	<L142+current_record_1+2
  4821 09:8258: 85 07        	sta	<R1+2
  4822 09:825A: D4 07        	pei	<R1+2
  4823 09:825C: D4 05        	pei	<R1
  4824 09:825E: 22 xx xx xx  	jsl	~~memcpy
  4825                        ;  memcpy(&current_record->OffsetReference,&data[7
                    ],sizeof(DWORD));
  4826                        	.line	494
  4827 09:8262: F4 04 00     	pea	#<$4
  Sat Jul 10 2021  1:15                                                Page 91


  4828 09:8265: 18           	clc
  4829 09:8266: A9 07 00     	lda	#$7
  4830 09:8269: 65 10        	adc	<L141+data_0
  4831 09:826B: 85 01        	sta	<R0
  4832 09:826D: A9 00 00     	lda	#$0
  4833 09:8270: 65 12        	adc	<L141+data_0+2
  4834 09:8272: 85 03        	sta	<R0+2
  4835 09:8274: D4 03        	pei	<R0+2
  4836 09:8276: D4 01        	pei	<R0
  4837 09:8278: 18           	clc
  4838 09:8279: A9 0F 00     	lda	#$f
  4839 09:827C: 65 09        	adc	<L142+current_record_1
  4840 09:827E: 85 05        	sta	<R1
  4841 09:8280: A9 00 00     	lda	#$0
  4842 09:8283: 65 0B        	adc	<L142+current_record_1+2
  4843 09:8285: 85 07        	sta	<R1+2
  4844 09:8287: D4 07        	pei	<R1+2
  4845 09:8289: D4 05        	pei	<R1
  4846 09:828B: 22 xx xx xx  	jsl	~~memcpy
  4847                        ;
  4848                        ;  /* Conserve ce RELOC */
  4849                        ;  AddReloc(current_record->ByteCnt,current_record
                    ->BitShiftCnt,current_record->OffsetPatch,current_record->Of
                    fsetReference,RECORD_RELOC);
  4850                        	.line	497
  4851 09:828F: F4 01 00     	pea	#<$1
  4852 09:8292: A0 11 00     	ldy	#$11
  4853 09:8295: B7 09        	lda	[<L142+current_record_1],Y
  4854 09:8297: 48           	pha
  4855 09:8298: A0 0F 00     	ldy	#$f
  4856 09:829B: B7 09        	lda	[<L142+current_record_1],Y
  4857 09:829D: 48           	pha
  4858 09:829E: A0 0D 00     	ldy	#$d
  4859 09:82A1: B7 09        	lda	[<L142+current_record_1],Y
  4860 09:82A3: 48           	pha
  4861 09:82A4: A0 0B 00     	ldy	#$b
  4862 09:82A7: B7 09        	lda	[<L142+current_record_1],Y
  4863 09:82A9: 48           	pha
  4864 09:82AA: A0 0A 00     	ldy	#$a
  4865 09:82AD: B7 09        	lda	[<L142+current_record_1],Y
  4866 09:82AF: 48           	pha
  4867 09:82B0: A0 09 00     	ldy	#$9
  4868 09:82B3: B7 09        	lda	[<L142+current_record_1],Y
  4869 09:82B5: 48           	pha
  4870 09:82B6: 22 33 AC 09  	jsl	~~AddReloc
  4871                        ;
  4872                        ;  /* Renvoie la structure */
  4873                        ;  *record_length_rtn = 3*sizeof(BYTE) + 2*sizeof(
                    DWORD);
  4874                        	.line	500
  4875 09:82BA: A9 0B 00     	lda	#$b
  4876 09:82BD: 87 18        	sta	[<L141+record_length_rtn_0]
  4877                        ;  return(current_record);
  4878                        	.line	501
  4879 09:82BF: A6 0B        	ldx	<L142+current_record_1+2
  4880 09:82C1: A5 09        	lda	<L142+current_record_1
  4881 09:82C3: 82 05 FF     	brl	L145
  4882                        ;}
  Sat Jul 10 2021  1:15                                                Page 92


  4883                        	.line	502
  4884                        	.endblock	502
  4885             0000000C   L141	equ	12
  4886             00000009   L142	equ	9
  4887 09:82C6:              	ends
  4888                        	efunc
  4889                        	.endfunc	502,9,12
  4890                        	.line	502
  4891                        ;
  4892                        ;
  4893                        ;/************************************************
                    ***********/
  4894                        ;/*  DecodeRecordINTERSEG() :  Décodage du Record 
                    INTERSEG. */
  4895                        ;/************************************************
                    ***********/
  4896                        ;static void *DecodeRecordINTERSEG(unsigned char *
                    data, int file_offset, int segment_offset, int *record_lengt
                    h_rtn)
  4897                        ;{
  4898                        	.line	508
  4899                        	.line	509
  4900                        	LOADER
  4901                        	func
  4902                        	.function	509
  4903                        ~~DecodeRecordINTERSEG:
  4904                        	longa	on
  4905                        	longi	on
  4906 09:82C6: 3B           	tsc
  4907 09:82C7: 38           	sec
  4908 09:82C8: E9 0C 00     	sbc	#L148
  4909 09:82CB: 1B           	tcs
  4910 09:82CC: 0B           	phd
  4911 09:82CD: 5B           	tcd
  4912             00000004   data_0	set	4
  4913             00000008   file_offset_0	set	8
  4914             0000000A   segment_offset_0	set	10
  4915             0000000C   record_length_rtn_0	set	12
  4916                        	.block	509
  4917                        ;  struct record_INTERSEG *current_record;
  4918                        ;
  4919                        ;  /* Allocation mémoire */
  4920                        ;  current_record = (struct record_INTERSEG *) k_c
                    alloc(1,sizeof(struct record_INTERSEG));
  4921             00000000   current_record_1	set	0
  4922                        	.sym	current_record,0,138,1,32,100
  4923                        	.sym	data,4,142,6,32
  4924                        	.sym	file_offset,8,5,6,16
  4925                        	.sym	segment_offset,10,5,6,16
  4926                        	.sym	record_length_rtn,12,133,6,32
  4927                        	.line	513
  4928 09:82CE: F4 17 00     	pea	#<$17
  4929 09:82D1: F4 01 00     	pea	#<$1
  4930 09:82D4: 22 xx xx xx  	jsl	~~k_calloc
  4931 09:82D8: 85 09        	sta	<L149+current_record_1
  4932 09:82DA: 86 0B        	stx	<L149+current_record_1+2
  4933                        ;  if(current_record == NULL)
  4934                        	.line	514
  Sat Jul 10 2021  1:15                                                Page 93


  4935                        ;    {
  4936 09:82DC: A5 09        	lda	<L149+current_record_1
  4937 09:82DE: 05 0B        	ora	<L149+current_record_1+2
  4938 09:82E0: F0 03        	beq	L151
  4939 09:82E2: 82 19 00     	brl	L10174
  4940                        L151:
  4941                        	.line	515
  4942                        ;      //printf("Error : Impossible to allocate me
                    mory to process Segment Body Record.\n");
  4943                        ;      return(NULL);
  4944                        	.line	517
  4945 09:82E5: A9 00 00     	lda	#$0
  4946 09:82E8: AA           	tax
  4947 09:82E9: A9 00 00     	lda	#$0
  4948                        L152:
  4949 09:82EC: A8           	tay
  4950 09:82ED: A5 0E        	lda	<L148+2
  4951 09:82EF: 85 1A        	sta	<L148+2+12
  4952 09:82F1: A5 0D        	lda	<L148+1
  4953 09:82F3: 85 19        	sta	<L148+1+12
  4954 09:82F5: 2B           	pld
  4955 09:82F6: 3B           	tsc
  4956 09:82F7: 18           	clc
  4957 09:82F8: 69 18 00     	adc	#L148+12
  4958 09:82FB: 1B           	tcs
  4959 09:82FC: 98           	tya
  4960 09:82FD: 6B           	rtl
  4961                        ;    }
  4962                        	.line	518
  4963                        ;
  4964                        ;  /* Offset */
  4965                        ;  current_record->FileOffset = (DWORD) file_offse
                    t;
  4966                        L10174:
  4967                        	.line	521
  4968 09:82FE: A0 00 00     	ldy	#$0
  4969 09:8301: A5 14        	lda	<L148+file_offset_0
  4970 09:8303: 10 01        	bpl	L153
  4971 09:8305: 88           	dey
  4972                        L153:
  4973 09:8306: 85 01        	sta	<R0
  4974 09:8308: 84 03        	sty	<R0+2
  4975 09:830A: A5 01        	lda	<R0
  4976 09:830C: 87 09        	sta	[<L149+current_record_1]
  4977 09:830E: A5 03        	lda	<R0+2
  4978 09:8310: A0 02 00     	ldy	#$2
  4979 09:8313: 97 09        	sta	[<L149+current_record_1],Y
  4980                        ;  current_record->SegmentOffset = (DWORD) segment
                    _offset;
  4981                        	.line	522
  4982 09:8315: A0 00 00     	ldy	#$0
  4983 09:8318: A5 16        	lda	<L148+segment_offset_0
  4984 09:831A: 10 01        	bpl	L154
  4985 09:831C: 88           	dey
  4986                        L154:
  4987 09:831D: 85 01        	sta	<R0
  4988 09:831F: 84 03        	sty	<R0+2
  4989 09:8321: A5 01        	lda	<R0
  Sat Jul 10 2021  1:15                                                Page 94


  4990 09:8323: A0 04 00     	ldy	#$4
  4991 09:8326: 97 09        	sta	[<L149+current_record_1],Y
  4992 09:8328: A5 03        	lda	<R0+2
  4993 09:832A: A0 06 00     	ldy	#$6
  4994 09:832D: 97 09        	sta	[<L149+current_record_1],Y
  4995                        ;
  4996                        ;  /* Operation Code */
  4997                        ;  current_record->operation_code = data[0];
  4998                        	.line	525
  4999 09:832F: E2 20        	sep	#$20
  5000                        	longa	off
  5001 09:8331: A7 10        	lda	[<L148+data_0]
  5002 09:8333: A0 08 00     	ldy	#$8
  5003 09:8336: 97 09        	sta	[<L149+current_record_1],Y
  5004 09:8338: C2 20        	rep	#$20
  5005                        	longa	on
  5006                        ;
  5007                        ;  /** Récupère les informations **/
  5008                        ;  current_record->ByteCnt = data[1];
  5009                        	.line	528
  5010 09:833A: E2 20        	sep	#$20
  5011                        	longa	off
  5012 09:833C: A0 01 00     	ldy	#$1
  5013 09:833F: B7 10        	lda	[<L148+data_0],Y
  5014 09:8341: A0 09 00     	ldy	#$9
  5015 09:8344: 97 09        	sta	[<L149+current_record_1],Y
  5016 09:8346: C2 20        	rep	#$20
  5017                        	longa	on
  5018                        ;  current_record->BitShiftCnt = data[2];
  5019                        	.line	529
  5020 09:8348: E2 20        	sep	#$20
  5021                        	longa	off
  5022 09:834A: A0 02 00     	ldy	#$2
  5023 09:834D: B7 10        	lda	[<L148+data_0],Y
  5024 09:834F: A0 0A 00     	ldy	#$a
  5025 09:8352: 97 09        	sta	[<L149+current_record_1],Y
  5026 09:8354: C2 20        	rep	#$20
  5027                        	longa	on
  5028                        ;  memcpy(&current_record->OffsetPatch,&data[3],si
                    zeof(DWORD));
  5029                        	.line	530
  5030 09:8356: F4 04 00     	pea	#<$4
  5031 09:8359: 18           	clc
  5032 09:835A: A9 03 00     	lda	#$3
  5033 09:835D: 65 10        	adc	<L148+data_0
  5034 09:835F: 85 01        	sta	<R0
  5035 09:8361: A9 00 00     	lda	#$0
  5036 09:8364: 65 12        	adc	<L148+data_0+2
  5037 09:8366: 85 03        	sta	<R0+2
  5038 09:8368: D4 03        	pei	<R0+2
  5039 09:836A: D4 01        	pei	<R0
  5040 09:836C: 18           	clc
  5041 09:836D: A9 0B 00     	lda	#$b
  5042 09:8370: 65 09        	adc	<L149+current_record_1
  5043 09:8372: 85 05        	sta	<R1
  5044 09:8374: A9 00 00     	lda	#$0
  5045 09:8377: 65 0B        	adc	<L149+current_record_1+2
  5046 09:8379: 85 07        	sta	<R1+2
  Sat Jul 10 2021  1:15                                                Page 95


  5047 09:837B: D4 07        	pei	<R1+2
  5048 09:837D: D4 05        	pei	<R1
  5049 09:837F: 22 xx xx xx  	jsl	~~memcpy
  5050                        ;  memcpy(&current_record->FileNum,&data[7],sizeof
                    (WORD));
  5051                        	.line	531
  5052 09:8383: F4 02 00     	pea	#<$2
  5053 09:8386: 18           	clc
  5054 09:8387: A9 07 00     	lda	#$7
  5055 09:838A: 65 10        	adc	<L148+data_0
  5056 09:838C: 85 01        	sta	<R0
  5057 09:838E: A9 00 00     	lda	#$0
  5058 09:8391: 65 12        	adc	<L148+data_0+2
  5059 09:8393: 85 03        	sta	<R0+2
  5060 09:8395: D4 03        	pei	<R0+2
  5061 09:8397: D4 01        	pei	<R0
  5062 09:8399: 18           	clc
  5063 09:839A: A9 0F 00     	lda	#$f
  5064 09:839D: 65 09        	adc	<L149+current_record_1
  5065 09:839F: 85 05        	sta	<R1
  5066 09:83A1: A9 00 00     	lda	#$0
  5067 09:83A4: 65 0B        	adc	<L149+current_record_1+2
  5068 09:83A6: 85 07        	sta	<R1+2
  5069 09:83A8: D4 07        	pei	<R1+2
  5070 09:83AA: D4 05        	pei	<R1
  5071 09:83AC: 22 xx xx xx  	jsl	~~memcpy
  5072                        ;  memcpy(&current_record->SegNum,&data[9],sizeof(
                    WORD));
  5073                        	.line	532
  5074 09:83B0: F4 02 00     	pea	#<$2
  5075 09:83B3: 18           	clc
  5076 09:83B4: A9 09 00     	lda	#$9
  5077 09:83B7: 65 10        	adc	<L148+data_0
  5078 09:83B9: 85 01        	sta	<R0
  5079 09:83BB: A9 00 00     	lda	#$0
  5080 09:83BE: 65 12        	adc	<L148+data_0+2
  5081 09:83C0: 85 03        	sta	<R0+2
  5082 09:83C2: D4 03        	pei	<R0+2
  5083 09:83C4: D4 01        	pei	<R0
  5084 09:83C6: 18           	clc
  5085 09:83C7: A9 11 00     	lda	#$11
  5086 09:83CA: 65 09        	adc	<L149+current_record_1
  5087 09:83CC: 85 05        	sta	<R1
  5088 09:83CE: A9 00 00     	lda	#$0
  5089 09:83D1: 65 0B        	adc	<L149+current_record_1+2
  5090 09:83D3: 85 07        	sta	<R1+2
  5091 09:83D5: D4 07        	pei	<R1+2
  5092 09:83D7: D4 05        	pei	<R1
  5093 09:83D9: 22 xx xx xx  	jsl	~~memcpy
  5094                        ;  memcpy(&current_record->OffsetReference,&data[1
                    1],sizeof(DWORD));
  5095                        	.line	533
  5096 09:83DD: F4 04 00     	pea	#<$4
  5097 09:83E0: 18           	clc
  5098 09:83E1: A9 0B 00     	lda	#$b
  5099 09:83E4: 65 10        	adc	<L148+data_0
  5100 09:83E6: 85 01        	sta	<R0
  5101 09:83E8: A9 00 00     	lda	#$0
  Sat Jul 10 2021  1:15                                                Page 96


  5102 09:83EB: 65 12        	adc	<L148+data_0+2
  5103 09:83ED: 85 03        	sta	<R0+2
  5104 09:83EF: D4 03        	pei	<R0+2
  5105 09:83F1: D4 01        	pei	<R0
  5106 09:83F3: 18           	clc
  5107 09:83F4: A9 13 00     	lda	#$13
  5108 09:83F7: 65 09        	adc	<L149+current_record_1
  5109 09:83F9: 85 05        	sta	<R1
  5110 09:83FB: A9 00 00     	lda	#$0
  5111 09:83FE: 65 0B        	adc	<L149+current_record_1+2
  5112 09:8400: 85 07        	sta	<R1+2
  5113 09:8402: D4 07        	pei	<R1+2
  5114 09:8404: D4 05        	pei	<R1
  5115 09:8406: 22 xx xx xx  	jsl	~~memcpy
  5116                        ;
  5117                        ;  /* Conserve ce INTERSEG */
  5118                        ;  AddInterseg(current_record->ByteCnt,current_rec
                    ord->BitShiftCnt,current_record->OffsetPatch,current_record-
                    >OffsetReference,current_record->FileNum,current_record->Seg
                    Num,RECORD_INTERSEG);
  5119                        	.line	536
  5120 09:840A: F4 02 00     	pea	#<$2
  5121 09:840D: A0 11 00     	ldy	#$11
  5122 09:8410: B7 09        	lda	[<L149+current_record_1],Y
  5123 09:8412: 48           	pha
  5124 09:8413: A0 0F 00     	ldy	#$f
  5125 09:8416: B7 09        	lda	[<L149+current_record_1],Y
  5126 09:8418: 48           	pha
  5127 09:8419: A0 15 00     	ldy	#$15
  5128 09:841C: B7 09        	lda	[<L149+current_record_1],Y
  5129 09:841E: 48           	pha
  5130 09:841F: A0 13 00     	ldy	#$13
  5131 09:8422: B7 09        	lda	[<L149+current_record_1],Y
  5132 09:8424: 48           	pha
  5133 09:8425: A0 0D 00     	ldy	#$d
  5134 09:8428: B7 09        	lda	[<L149+current_record_1],Y
  5135 09:842A: 48           	pha
  5136 09:842B: A0 0B 00     	ldy	#$b
  5137 09:842E: B7 09        	lda	[<L149+current_record_1],Y
  5138 09:8430: 48           	pha
  5139 09:8431: A0 0A 00     	ldy	#$a
  5140 09:8434: B7 09        	lda	[<L149+current_record_1],Y
  5141 09:8436: 48           	pha
  5142 09:8437: A0 09 00     	ldy	#$9
  5143 09:843A: B7 09        	lda	[<L149+current_record_1],Y
  5144 09:843C: 48           	pha
  5145 09:843D: 22 A9 AC 09  	jsl	~~AddInterseg
  5146                        ;
  5147                        ;  /* Renvoie la structure */
  5148                        ;  *record_length_rtn = 3*sizeof(BYTE) + 2*sizeof(
                    DWORD) + 2*sizeof(WORD);
  5149                        	.line	539
  5150 09:8441: A9 0F 00     	lda	#$f
  5151 09:8444: 87 18        	sta	[<L148+record_length_rtn_0]
  5152                        ;  return(current_record);
  5153                        	.line	540
  5154 09:8446: A6 0B        	ldx	<L149+current_record_1+2
  5155 09:8448: A5 09        	lda	<L149+current_record_1
  Sat Jul 10 2021  1:15                                                Page 97


  5156 09:844A: 82 9F FE     	brl	L152
  5157                        ;}
  5158                        	.line	541
  5159                        	.endblock	541
  5160             0000000C   L148	equ	12
  5161             00000009   L149	equ	9
  5162 09:844D:              	ends
  5163                        	efunc
  5164                        	.endfunc	541,9,12
  5165                        	.line	541
  5166                        ;
  5167                        ;
  5168                        ;/************************************************
                    *****/
  5169                        ;/*  DecodeRecordUSING() :  Décodage du Record USI
                    NG. */
  5170                        ;/************************************************
                    *****/
  5171                        ;static void *DecodeRecordUSING(unsigned char *dat
                    a, int file_offset, int segment_offset, int *record_length_r
                    tn)
  5172                        ;{
  5173                        	.line	547
  5174                        	.line	548
  5175                        	LOADER
  5176                        	func
  5177                        	.function	548
  5178                        ~~DecodeRecordUSING:
  5179                        	longa	on
  5180                        	longi	on
  5181 09:844D: 3B           	tsc
  5182 09:844E: 38           	sec
  5183 09:844F: E9 08 00     	sbc	#L155
  5184 09:8452: 1B           	tcs
  5185 09:8453: 0B           	phd
  5186 09:8454: 5B           	tcd
  5187             00000004   data_0	set	4
  5188             00000008   file_offset_0	set	8
  5189             0000000A   segment_offset_0	set	10
  5190             0000000C   record_length_rtn_0	set	12
  5191                        	.block	548
  5192                        ;  struct record_USING *current_record;
  5193                        ;
  5194                        ;  /* Allocation mémoire */
  5195                        ;  current_record = (struct record_USING *) k_call
                    oc(1,sizeof(struct record_USING));
  5196             00000000   current_record_1	set	0
  5197                        	.sym	current_record,0,138,1,32,101
  5198                        	.sym	data,4,142,6,32
  5199                        	.sym	file_offset,8,5,6,16
  5200                        	.sym	segment_offset,10,5,6,16
  5201                        	.sym	record_length_rtn,12,133,6,32
  5202                        	.line	552
  5203 09:8455: F4 09 00     	pea	#<$9
  5204 09:8458: F4 01 00     	pea	#<$1
  5205 09:845B: 22 xx xx xx  	jsl	~~k_calloc
  5206 09:845F: 85 05        	sta	<L156+current_record_1
  5207 09:8461: 86 07        	stx	<L156+current_record_1+2
  Sat Jul 10 2021  1:15                                                Page 98


  5208                        ;  if(current_record == NULL)
  5209                        	.line	553
  5210                        ;    {
  5211 09:8463: A5 05        	lda	<L156+current_record_1
  5212 09:8465: 05 07        	ora	<L156+current_record_1+2
  5213 09:8467: F0 03        	beq	L158
  5214 09:8469: 82 19 00     	brl	L10175
  5215                        L158:
  5216                        	.line	554
  5217                        ;      //printf("Error : Impossible to allocate me
                    mory to process Segment Body Record.\n");
  5218                        ;      return(NULL);
  5219                        	.line	556
  5220 09:846C: A9 00 00     	lda	#$0
  5221 09:846F: AA           	tax
  5222 09:8470: A9 00 00     	lda	#$0
  5223                        L159:
  5224 09:8473: A8           	tay
  5225 09:8474: A5 0A        	lda	<L155+2
  5226 09:8476: 85 16        	sta	<L155+2+12
  5227 09:8478: A5 09        	lda	<L155+1
  5228 09:847A: 85 15        	sta	<L155+1+12
  5229 09:847C: 2B           	pld
  5230 09:847D: 3B           	tsc
  5231 09:847E: 18           	clc
  5232 09:847F: 69 14 00     	adc	#L155+12
  5233 09:8482: 1B           	tcs
  5234 09:8483: 98           	tya
  5235 09:8484: 6B           	rtl
  5236                        ;    }
  5237                        	.line	557
  5238                        ;
  5239                        ;
  5240                        ;  /* Offset */
  5241                        ;  current_record->FileOffset = (DWORD) file_offse
                    t;
  5242                        L10175:
  5243                        	.line	561
  5244 09:8485: A0 00 00     	ldy	#$0
  5245 09:8488: A5 10        	lda	<L155+file_offset_0
  5246 09:848A: 10 01        	bpl	L160
  5247 09:848C: 88           	dey
  5248                        L160:
  5249 09:848D: 85 01        	sta	<R0
  5250 09:848F: 84 03        	sty	<R0+2
  5251 09:8491: A5 01        	lda	<R0
  5252 09:8493: 87 05        	sta	[<L156+current_record_1]
  5253 09:8495: A5 03        	lda	<R0+2
  5254 09:8497: A0 02 00     	ldy	#$2
  5255 09:849A: 97 05        	sta	[<L156+current_record_1],Y
  5256                        ;  current_record->SegmentOffset = (DWORD) segment
                    _offset;
  5257                        	.line	562
  5258 09:849C: A0 00 00     	ldy	#$0
  5259 09:849F: A5 12        	lda	<L155+segment_offset_0
  5260 09:84A1: 10 01        	bpl	L161
  5261 09:84A3: 88           	dey
  5262                        L161:
  Sat Jul 10 2021  1:15                                                Page 99


  5263 09:84A4: 85 01        	sta	<R0
  5264 09:84A6: 84 03        	sty	<R0+2
  5265 09:84A8: A5 01        	lda	<R0
  5266 09:84AA: A0 04 00     	ldy	#$4
  5267 09:84AD: 97 05        	sta	[<L156+current_record_1],Y
  5268 09:84AF: A5 03        	lda	<R0+2
  5269 09:84B1: A0 06 00     	ldy	#$6
  5270 09:84B4: 97 05        	sta	[<L156+current_record_1],Y
  5271                        ;
  5272                        ;  /* Operation Code */
  5273                        ;  current_record->operation_code = data[0];
  5274                        	.line	565
  5275 09:84B6: E2 20        	sep	#$20
  5276                        	longa	off
  5277 09:84B8: A7 0C        	lda	[<L155+data_0]
  5278 09:84BA: A0 08 00     	ldy	#$8
  5279 09:84BD: 97 05        	sta	[<L156+current_record_1],Y
  5280 09:84BF: C2 20        	rep	#$20
  5281                        	longa	on
  5282                        ;
  5283                        ;  /* Renvoie la structure */
  5284                        ;  return(current_record);
  5285                        	.line	568
  5286 09:84C1: A6 07        	ldx	<L156+current_record_1+2
  5287 09:84C3: A5 05        	lda	<L156+current_record_1
  5288 09:84C5: 82 AB FF     	brl	L159
  5289                        ;}
  5290                        	.line	569
  5291                        	.endblock	569
  5292             00000008   L155	equ	8
  5293             00000005   L156	equ	5
  5294 09:84C8:              	ends
  5295                        	efunc
  5296                        	.endfunc	569,5,8
  5297                        	.line	569
  5298                        ;
  5299                        ;  
  5300                        ;/************************************************
                    *******/
  5301                        ;/*  DecodeRecordSTRONG() :  Décodage du Record ST
                    RONG. */
  5302                        ;/************************************************
                    *******/
  5303                        ;static void *DecodeRecordSTRONG(unsigned char *da
                    ta, int file_offset, int segment_offset, int *record_length_
                    rtn)
  5304                        ;{
  5305                        	.line	575
  5306                        	.line	576
  5307                        	LOADER
  5308                        	func
  5309                        	.function	576
  5310                        ~~DecodeRecordSTRONG:
  5311                        	longa	on
  5312                        	longi	on
  5313 09:84C8: 3B           	tsc
  5314 09:84C9: 38           	sec
  5315 09:84CA: E9 08 00     	sbc	#L162
  Sat Jul 10 2021  1:15                                                Page 100


  5316 09:84CD: 1B           	tcs
  5317 09:84CE: 0B           	phd
  5318 09:84CF: 5B           	tcd
  5319             00000004   data_0	set	4
  5320             00000008   file_offset_0	set	8
  5321             0000000A   segment_offset_0	set	10
  5322             0000000C   record_length_rtn_0	set	12
  5323                        	.block	576
  5324                        ;  struct record_STRONG *current_record;
  5325                        ;
  5326                        ;  /* Allocation mémoire */
  5327                        ;  current_record = (struct record_STRONG *) k_cal
                    loc(1,sizeof(struct record_STRONG));
  5328             00000000   current_record_1	set	0
  5329                        	.sym	current_record,0,138,1,32,102
  5330                        	.sym	data,4,142,6,32
  5331                        	.sym	file_offset,8,5,6,16
  5332                        	.sym	segment_offset,10,5,6,16
  5333                        	.sym	record_length_rtn,12,133,6,32
  5334                        	.line	580
  5335 09:84D0: F4 09 00     	pea	#<$9
  5336 09:84D3: F4 01 00     	pea	#<$1
  5337 09:84D6: 22 xx xx xx  	jsl	~~k_calloc
  5338 09:84DA: 85 05        	sta	<L163+current_record_1
  5339 09:84DC: 86 07        	stx	<L163+current_record_1+2
  5340                        ;  if(current_record == NULL)
  5341                        	.line	581
  5342                        ;    {
  5343 09:84DE: A5 05        	lda	<L163+current_record_1
  5344 09:84E0: 05 07        	ora	<L163+current_record_1+2
  5345 09:84E2: F0 03        	beq	L165
  5346 09:84E4: 82 19 00     	brl	L10176
  5347                        L165:
  5348                        	.line	582
  5349                        ;      //printf("Error : Impossible to allocate me
                    mory to process Segment Body Record.\n");
  5350                        ;      return(NULL);
  5351                        	.line	584
  5352 09:84E7: A9 00 00     	lda	#$0
  5353 09:84EA: AA           	tax
  5354 09:84EB: A9 00 00     	lda	#$0
  5355                        L166:
  5356 09:84EE: A8           	tay
  5357 09:84EF: A5 0A        	lda	<L162+2
  5358 09:84F1: 85 16        	sta	<L162+2+12
  5359 09:84F3: A5 09        	lda	<L162+1
  5360 09:84F5: 85 15        	sta	<L162+1+12
  5361 09:84F7: 2B           	pld
  5362 09:84F8: 3B           	tsc
  5363 09:84F9: 18           	clc
  5364 09:84FA: 69 14 00     	adc	#L162+12
  5365 09:84FD: 1B           	tcs
  5366 09:84FE: 98           	tya
  5367 09:84FF: 6B           	rtl
  5368                        ;    }
  5369                        	.line	585
  5370                        ;
  5371                        ;  /* Offset */
  Sat Jul 10 2021  1:15                                                Page 101


  5372                        ;  current_record->FileOffset = (DWORD) file_offse
                    t;
  5373                        L10176:
  5374                        	.line	588
  5375 09:8500: A0 00 00     	ldy	#$0
  5376 09:8503: A5 10        	lda	<L162+file_offset_0
  5377 09:8505: 10 01        	bpl	L167
  5378 09:8507: 88           	dey
  5379                        L167:
  5380 09:8508: 85 01        	sta	<R0
  5381 09:850A: 84 03        	sty	<R0+2
  5382 09:850C: A5 01        	lda	<R0
  5383 09:850E: 87 05        	sta	[<L163+current_record_1]
  5384 09:8510: A5 03        	lda	<R0+2
  5385 09:8512: A0 02 00     	ldy	#$2
  5386 09:8515: 97 05        	sta	[<L163+current_record_1],Y
  5387                        ;  current_record->SegmentOffset = (DWORD) segment
                    _offset;
  5388                        	.line	589
  5389 09:8517: A0 00 00     	ldy	#$0
  5390 09:851A: A5 12        	lda	<L162+segment_offset_0
  5391 09:851C: 10 01        	bpl	L168
  5392 09:851E: 88           	dey
  5393                        L168:
  5394 09:851F: 85 01        	sta	<R0
  5395 09:8521: 84 03        	sty	<R0+2
  5396 09:8523: A5 01        	lda	<R0
  5397 09:8525: A0 04 00     	ldy	#$4
  5398 09:8528: 97 05        	sta	[<L163+current_record_1],Y
  5399 09:852A: A5 03        	lda	<R0+2
  5400 09:852C: A0 06 00     	ldy	#$6
  5401 09:852F: 97 05        	sta	[<L163+current_record_1],Y
  5402                        ;
  5403                        ;  /* Operation Code */
  5404                        ;  current_record->operation_code = data[0];
  5405                        	.line	592
  5406 09:8531: E2 20        	sep	#$20
  5407                        	longa	off
  5408 09:8533: A7 0C        	lda	[<L162+data_0]
  5409 09:8535: A0 08 00     	ldy	#$8
  5410 09:8538: 97 05        	sta	[<L163+current_record_1],Y
  5411 09:853A: C2 20        	rep	#$20
  5412                        	longa	on
  5413                        ;
  5414                        ;  /* Renvoie la structure */
  5415                        ;  return(current_record);
  5416                        	.line	595
  5417 09:853C: A6 07        	ldx	<L163+current_record_1+2
  5418 09:853E: A5 05        	lda	<L163+current_record_1
  5419 09:8540: 82 AB FF     	brl	L166
  5420                        ;}
  5421                        	.line	596
  5422                        	.endblock	596
  5423             00000008   L162	equ	8
  5424             00000005   L163	equ	5
  5425 09:8543:              	ends
  5426                        	efunc
  5427                        	.endfunc	596,5,8
  Sat Jul 10 2021  1:15                                                Page 102


  5428                        	.line	596
  5429                        ;
  5430                        ;
  5431                        ;/************************************************
                    *******/
  5432                        ;/*  DecodeRecordGLOBAL() :  Décodage du Record GL
                    OBAL. */
  5433                        ;/************************************************
                    *******/
  5434                        ;static void *DecodeRecordGLOBAL(unsigned char *da
                    ta, int file_offset, int segment_offset, int *record_length_
                    rtn)
  5435                        ;{
  5436                        	.line	602
  5437                        	.line	603
  5438                        	LOADER
  5439                        	func
  5440                        	.function	603
  5441                        ~~DecodeRecordGLOBAL:
  5442                        	longa	on
  5443                        	longi	on
  5444 09:8543: 3B           	tsc
  5445 09:8544: 38           	sec
  5446 09:8545: E9 08 00     	sbc	#L169
  5447 09:8548: 1B           	tcs
  5448 09:8549: 0B           	phd
  5449 09:854A: 5B           	tcd
  5450             00000004   data_0	set	4
  5451             00000008   file_offset_0	set	8
  5452             0000000A   segment_offset_0	set	10
  5453             0000000C   record_length_rtn_0	set	12
  5454                        	.block	603
  5455                        ;  struct record_GLOBAL *current_record;
  5456                        ;
  5457                        ;  /* Allocation mémoire */
  5458                        ;  current_record = (struct record_GLOBAL *) k_cal
                    loc(1,sizeof(struct record_GLOBAL));
  5459             00000000   current_record_1	set	0
  5460                        	.sym	current_record,0,138,1,32,103
  5461                        	.sym	data,4,142,6,32
  5462                        	.sym	file_offset,8,5,6,16
  5463                        	.sym	segment_offset,10,5,6,16
  5464                        	.sym	record_length_rtn,12,133,6,32
  5465                        	.line	607
  5466 09:854B: F4 09 00     	pea	#<$9
  5467 09:854E: F4 01 00     	pea	#<$1
  5468 09:8551: 22 xx xx xx  	jsl	~~k_calloc
  5469 09:8555: 85 05        	sta	<L170+current_record_1
  5470 09:8557: 86 07        	stx	<L170+current_record_1+2
  5471                        ;  if(current_record == NULL)
  5472                        	.line	608
  5473                        ;    {
  5474 09:8559: A5 05        	lda	<L170+current_record_1
  5475 09:855B: 05 07        	ora	<L170+current_record_1+2
  5476 09:855D: F0 03        	beq	L172
  5477 09:855F: 82 19 00     	brl	L10177
  5478                        L172:
  5479                        	.line	609
  Sat Jul 10 2021  1:15                                                Page 103


  5480                        ;      //printf("Error : Impossible to allocate me
                    mory to process Segment Body Record.\n");
  5481                        ;      return(NULL);
  5482                        	.line	611
  5483 09:8562: A9 00 00     	lda	#$0
  5484 09:8565: AA           	tax
  5485 09:8566: A9 00 00     	lda	#$0
  5486                        L173:
  5487 09:8569: A8           	tay
  5488 09:856A: A5 0A        	lda	<L169+2
  5489 09:856C: 85 16        	sta	<L169+2+12
  5490 09:856E: A5 09        	lda	<L169+1
  5491 09:8570: 85 15        	sta	<L169+1+12
  5492 09:8572: 2B           	pld
  5493 09:8573: 3B           	tsc
  5494 09:8574: 18           	clc
  5495 09:8575: 69 14 00     	adc	#L169+12
  5496 09:8578: 1B           	tcs
  5497 09:8579: 98           	tya
  5498 09:857A: 6B           	rtl
  5499                        ;    }
  5500                        	.line	612
  5501                        ;
  5502                        ;  /* Offset */
  5503                        ;  current_record->FileOffset = (DWORD) file_offse
                    t;
  5504                        L10177:
  5505                        	.line	615
  5506 09:857B: A0 00 00     	ldy	#$0
  5507 09:857E: A5 10        	lda	<L169+file_offset_0
  5508 09:8580: 10 01        	bpl	L174
  5509 09:8582: 88           	dey
  5510                        L174:
  5511 09:8583: 85 01        	sta	<R0
  5512 09:8585: 84 03        	sty	<R0+2
  5513 09:8587: A5 01        	lda	<R0
  5514 09:8589: 87 05        	sta	[<L170+current_record_1]
  5515 09:858B: A5 03        	lda	<R0+2
  5516 09:858D: A0 02 00     	ldy	#$2
  5517 09:8590: 97 05        	sta	[<L170+current_record_1],Y
  5518                        ;  current_record->SegmentOffset = (DWORD) segment
                    _offset;
  5519                        	.line	616
  5520 09:8592: A0 00 00     	ldy	#$0
  5521 09:8595: A5 12        	lda	<L169+segment_offset_0
  5522 09:8597: 10 01        	bpl	L175
  5523 09:8599: 88           	dey
  5524                        L175:
  5525 09:859A: 85 01        	sta	<R0
  5526 09:859C: 84 03        	sty	<R0+2
  5527 09:859E: A5 01        	lda	<R0
  5528 09:85A0: A0 04 00     	ldy	#$4
  5529 09:85A3: 97 05        	sta	[<L170+current_record_1],Y
  5530 09:85A5: A5 03        	lda	<R0+2
  5531 09:85A7: A0 06 00     	ldy	#$6
  5532 09:85AA: 97 05        	sta	[<L170+current_record_1],Y
  5533                        ;
  5534                        ;  /* Operation Code */
  Sat Jul 10 2021  1:15                                                Page 104


  5535                        ;  current_record->operation_code = data[0];
  5536                        	.line	619
  5537 09:85AC: E2 20        	sep	#$20
  5538                        	longa	off
  5539 09:85AE: A7 0C        	lda	[<L169+data_0]
  5540 09:85B0: A0 08 00     	ldy	#$8
  5541 09:85B3: 97 05        	sta	[<L170+current_record_1],Y
  5542 09:85B5: C2 20        	rep	#$20
  5543                        	longa	on
  5544                        ;
  5545                        ;  /* Renvoie la structure */
  5546                        ;  return(current_record);
  5547                        	.line	622
  5548 09:85B7: A6 07        	ldx	<L170+current_record_1+2
  5549 09:85B9: A5 05        	lda	<L170+current_record_1
  5550 09:85BB: 82 AB FF     	brl	L173
  5551                        ;}
  5552                        	.line	623
  5553                        	.endblock	623
  5554             00000008   L169	equ	8
  5555             00000005   L170	equ	5
  5556 09:85BE:              	ends
  5557                        	efunc
  5558                        	.endfunc	623,5,8
  5559                        	.line	623
  5560                        ;
  5561                        ;
  5562                        ;/************************************************
                    ***/
  5563                        ;/*  DecodeRecordGEQU() :  Décodage du Record GEQU
                    . */
  5564                        ;/************************************************
                    ***/
  5565                        ;static void *DecodeRecordGEQU(unsigned char *data
                    , int file_offset, int segment_offset, int *record_length_rt
                    n)
  5566                        ;{
  5567                        	.line	629
  5568                        	.line	630
  5569                        	LOADER
  5570                        	func
  5571                        	.function	630
  5572                        ~~DecodeRecordGEQU:
  5573                        	longa	on
  5574                        	longi	on
  5575 09:85BE: 3B           	tsc
  5576 09:85BF: 38           	sec
  5577 09:85C0: E9 08 00     	sbc	#L176
  5578 09:85C3: 1B           	tcs
  5579 09:85C4: 0B           	phd
  5580 09:85C5: 5B           	tcd
  5581             00000004   data_0	set	4
  5582             00000008   file_offset_0	set	8
  5583             0000000A   segment_offset_0	set	10
  5584             0000000C   record_length_rtn_0	set	12
  5585                        	.block	630
  5586                        ;  struct record_GEQU *current_record;
  5587                        ;
  Sat Jul 10 2021  1:15                                                Page 105


  5588                        ;  /* Allocation mémoire */
  5589                        ;  current_record = (struct record_GEQU *) k_callo
                    c(1,sizeof(struct record_GEQU));
  5590             00000000   current_record_1	set	0
  5591                        	.sym	current_record,0,138,1,32,104
  5592                        	.sym	data,4,142,6,32
  5593                        	.sym	file_offset,8,5,6,16
  5594                        	.sym	segment_offset,10,5,6,16
  5595                        	.sym	record_length_rtn,12,133,6,32
  5596                        	.line	634
  5597 09:85C6: F4 09 00     	pea	#<$9
  5598 09:85C9: F4 01 00     	pea	#<$1
  5599 09:85CC: 22 xx xx xx  	jsl	~~k_calloc
  5600 09:85D0: 85 05        	sta	<L177+current_record_1
  5601 09:85D2: 86 07        	stx	<L177+current_record_1+2
  5602                        ;  if(current_record == NULL)
  5603                        	.line	635
  5604                        ;    {
  5605 09:85D4: A5 05        	lda	<L177+current_record_1
  5606 09:85D6: 05 07        	ora	<L177+current_record_1+2
  5607 09:85D8: F0 03        	beq	L179
  5608 09:85DA: 82 19 00     	brl	L10178
  5609                        L179:
  5610                        	.line	636
  5611                        ;      //printf("Error : Impossible to allocate me
                    mory to process Segment Body Record.\n");
  5612                        ;      return(NULL);
  5613                        	.line	638
  5614 09:85DD: A9 00 00     	lda	#$0
  5615 09:85E0: AA           	tax
  5616 09:85E1: A9 00 00     	lda	#$0
  5617                        L180:
  5618 09:85E4: A8           	tay
  5619 09:85E5: A5 0A        	lda	<L176+2
  5620 09:85E7: 85 16        	sta	<L176+2+12
  5621 09:85E9: A5 09        	lda	<L176+1
  5622 09:85EB: 85 15        	sta	<L176+1+12
  5623 09:85ED: 2B           	pld
  5624 09:85EE: 3B           	tsc
  5625 09:85EF: 18           	clc
  5626 09:85F0: 69 14 00     	adc	#L176+12
  5627 09:85F3: 1B           	tcs
  5628 09:85F4: 98           	tya
  5629 09:85F5: 6B           	rtl
  5630                        ;    }
  5631                        	.line	639
  5632                        ;
  5633                        ;  /* Offset */
  5634                        ;  current_record->FileOffset = (DWORD) file_offse
                    t;
  5635                        L10178:
  5636                        	.line	642
  5637 09:85F6: A0 00 00     	ldy	#$0
  5638 09:85F9: A5 10        	lda	<L176+file_offset_0
  5639 09:85FB: 10 01        	bpl	L181
  5640 09:85FD: 88           	dey
  5641                        L181:
  5642 09:85FE: 85 01        	sta	<R0
  Sat Jul 10 2021  1:15                                                Page 106


  5643 09:8600: 84 03        	sty	<R0+2
  5644 09:8602: A5 01        	lda	<R0
  5645 09:8604: 87 05        	sta	[<L177+current_record_1]
  5646 09:8606: A5 03        	lda	<R0+2
  5647 09:8608: A0 02 00     	ldy	#$2
  5648 09:860B: 97 05        	sta	[<L177+current_record_1],Y
  5649                        ;  current_record->SegmentOffset = (DWORD) segment
                    _offset;
  5650                        	.line	643
  5651 09:860D: A0 00 00     	ldy	#$0
  5652 09:8610: A5 12        	lda	<L176+segment_offset_0
  5653 09:8612: 10 01        	bpl	L182
  5654 09:8614: 88           	dey
  5655                        L182:
  5656 09:8615: 85 01        	sta	<R0
  5657 09:8617: 84 03        	sty	<R0+2
  5658 09:8619: A5 01        	lda	<R0
  5659 09:861B: A0 04 00     	ldy	#$4
  5660 09:861E: 97 05        	sta	[<L177+current_record_1],Y
  5661 09:8620: A5 03        	lda	<R0+2
  5662 09:8622: A0 06 00     	ldy	#$6
  5663 09:8625: 97 05        	sta	[<L177+current_record_1],Y
  5664                        ;
  5665                        ;  /* Operation Code */
  5666                        ;  current_record->operation_code = data[0];
  5667                        	.line	646
  5668 09:8627: E2 20        	sep	#$20
  5669                        	longa	off
  5670 09:8629: A7 0C        	lda	[<L176+data_0]
  5671 09:862B: A0 08 00     	ldy	#$8
  5672 09:862E: 97 05        	sta	[<L177+current_record_1],Y
  5673 09:8630: C2 20        	rep	#$20
  5674                        	longa	on
  5675                        ;
  5676                        ;  /* Renvoie la structure */
  5677                        ;  return(current_record);
  5678                        	.line	649
  5679 09:8632: A6 07        	ldx	<L177+current_record_1+2
  5680 09:8634: A5 05        	lda	<L177+current_record_1
  5681 09:8636: 82 AB FF     	brl	L180
  5682                        ;}
  5683                        	.line	650
  5684                        	.endblock	650
  5685             00000008   L176	equ	8
  5686             00000005   L177	equ	5
  5687 09:8639:              	ends
  5688                        	efunc
  5689                        	.endfunc	650,5,8
  5690                        	.line	650
  5691                        ;
  5692                        ;
  5693                        ;/************************************************
                    */
  5694                        ;/*  DecodeRecordMEM() :  Décodage du Record MEM. 
                    */
  5695                        ;/************************************************
                    */
  5696                        ;static void *DecodeRecordMEM(unsigned char *data,
  Sat Jul 10 2021  1:15                                                Page 107


                     int file_offset, int segment_offset, int *record_length_rtn
                    )
  5697                        ;{
  5698                        	.line	656
  5699                        	.line	657
  5700                        	LOADER
  5701                        	func
  5702                        	.function	657
  5703                        ~~DecodeRecordMEM:
  5704                        	longa	on
  5705                        	longi	on
  5706 09:8639: 3B           	tsc
  5707 09:863A: 38           	sec
  5708 09:863B: E9 08 00     	sbc	#L183
  5709 09:863E: 1B           	tcs
  5710 09:863F: 0B           	phd
  5711 09:8640: 5B           	tcd
  5712             00000004   data_0	set	4
  5713             00000008   file_offset_0	set	8
  5714             0000000A   segment_offset_0	set	10
  5715             0000000C   record_length_rtn_0	set	12
  5716                        	.block	657
  5717                        ;  struct record_MEM *current_record;
  5718                        ;
  5719                        ;  /* Allocation mémoire */
  5720                        ;  current_record = (struct record_MEM *) k_calloc
                    (1,sizeof(struct record_MEM));
  5721             00000000   current_record_1	set	0
  5722                        	.sym	current_record,0,138,1,32,105
  5723                        	.sym	data,4,142,6,32
  5724                        	.sym	file_offset,8,5,6,16
  5725                        	.sym	segment_offset,10,5,6,16
  5726                        	.sym	record_length_rtn,12,133,6,32
  5727                        	.line	661
  5728 09:8641: F4 09 00     	pea	#<$9
  5729 09:8644: F4 01 00     	pea	#<$1
  5730 09:8647: 22 xx xx xx  	jsl	~~k_calloc
  5731 09:864B: 85 05        	sta	<L184+current_record_1
  5732 09:864D: 86 07        	stx	<L184+current_record_1+2
  5733                        ;  if(current_record == NULL)
  5734                        	.line	662
  5735                        ;    {
  5736 09:864F: A5 05        	lda	<L184+current_record_1
  5737 09:8651: 05 07        	ora	<L184+current_record_1+2
  5738 09:8653: F0 03        	beq	L186
  5739 09:8655: 82 19 00     	brl	L10179
  5740                        L186:
  5741                        	.line	663
  5742                        ;      //printf("Error : Impossible to allocate me
                    mory to process Segment Body Record.\n");
  5743                        ;      return(NULL);
  5744                        	.line	665
  5745 09:8658: A9 00 00     	lda	#$0
  5746 09:865B: AA           	tax
  5747 09:865C: A9 00 00     	lda	#$0
  5748                        L187:
  5749 09:865F: A8           	tay
  5750 09:8660: A5 0A        	lda	<L183+2
  Sat Jul 10 2021  1:15                                                Page 108


  5751 09:8662: 85 16        	sta	<L183+2+12
  5752 09:8664: A5 09        	lda	<L183+1
  5753 09:8666: 85 15        	sta	<L183+1+12
  5754 09:8668: 2B           	pld
  5755 09:8669: 3B           	tsc
  5756 09:866A: 18           	clc
  5757 09:866B: 69 14 00     	adc	#L183+12
  5758 09:866E: 1B           	tcs
  5759 09:866F: 98           	tya
  5760 09:8670: 6B           	rtl
  5761                        ;    }
  5762                        	.line	666
  5763                        ;
  5764                        ;  /* Offset */
  5765                        ;  current_record->FileOffset = (DWORD) file_offse
                    t;
  5766                        L10179:
  5767                        	.line	669
  5768 09:8671: A0 00 00     	ldy	#$0
  5769 09:8674: A5 10        	lda	<L183+file_offset_0
  5770 09:8676: 10 01        	bpl	L188
  5771 09:8678: 88           	dey
  5772                        L188:
  5773 09:8679: 85 01        	sta	<R0
  5774 09:867B: 84 03        	sty	<R0+2
  5775 09:867D: A5 01        	lda	<R0
  5776 09:867F: 87 05        	sta	[<L184+current_record_1]
  5777 09:8681: A5 03        	lda	<R0+2
  5778 09:8683: A0 02 00     	ldy	#$2
  5779 09:8686: 97 05        	sta	[<L184+current_record_1],Y
  5780                        ;  current_record->SegmentOffset = (DWORD) segment
                    _offset;
  5781                        	.line	670
  5782 09:8688: A0 00 00     	ldy	#$0
  5783 09:868B: A5 12        	lda	<L183+segment_offset_0
  5784 09:868D: 10 01        	bpl	L189
  5785 09:868F: 88           	dey
  5786                        L189:
  5787 09:8690: 85 01        	sta	<R0
  5788 09:8692: 84 03        	sty	<R0+2
  5789 09:8694: A5 01        	lda	<R0
  5790 09:8696: A0 04 00     	ldy	#$4
  5791 09:8699: 97 05        	sta	[<L184+current_record_1],Y
  5792 09:869B: A5 03        	lda	<R0+2
  5793 09:869D: A0 06 00     	ldy	#$6
  5794 09:86A0: 97 05        	sta	[<L184+current_record_1],Y
  5795                        ;
  5796                        ;  /* Operation Code */
  5797                        ;  current_record->operation_code = data[0];
  5798                        	.line	673
  5799 09:86A2: E2 20        	sep	#$20
  5800                        	longa	off
  5801 09:86A4: A7 0C        	lda	[<L183+data_0]
  5802 09:86A6: A0 08 00     	ldy	#$8
  5803 09:86A9: 97 05        	sta	[<L184+current_record_1],Y
  5804 09:86AB: C2 20        	rep	#$20
  5805                        	longa	on
  5806                        ;
  Sat Jul 10 2021  1:15                                                Page 109


  5807                        ;  /* Renvoie la structure */
  5808                        ;  return(current_record);
  5809                        	.line	676
  5810 09:86AD: A6 07        	ldx	<L184+current_record_1+2
  5811 09:86AF: A5 05        	lda	<L184+current_record_1
  5812 09:86B1: 82 AB FF     	brl	L187
  5813                        ;}
  5814                        	.line	677
  5815                        	.endblock	677
  5816             00000008   L183	equ	8
  5817             00000005   L184	equ	5
  5818 09:86B4:              	ends
  5819                        	efunc
  5820                        	.endfunc	677,5,8
  5821                        	.line	677
  5822                        ;
  5823                        ;
  5824                        ;/************************************************
                    ***/
  5825                        ;/*  DecodeRecordEXPR() :  Décodage du Record EXPR
                    . */
  5826                        ;/************************************************
                    ***/
  5827                        ;static void *DecodeRecordEXPR(unsigned char *data
                    , int file_offset, int segment_offset, int *record_length_rt
                    n)
  5828                        ;{
  5829                        	.line	683
  5830                        	.line	684
  5831                        	LOADER
  5832                        	func
  5833                        	.function	684
  5834                        ~~DecodeRecordEXPR:
  5835                        	longa	on
  5836                        	longi	on
  5837 09:86B4: 3B           	tsc
  5838 09:86B5: 38           	sec
  5839 09:86B6: E9 08 00     	sbc	#L190
  5840 09:86B9: 1B           	tcs
  5841 09:86BA: 0B           	phd
  5842 09:86BB: 5B           	tcd
  5843             00000004   data_0	set	4
  5844             00000008   file_offset_0	set	8
  5845             0000000A   segment_offset_0	set	10
  5846             0000000C   record_length_rtn_0	set	12
  5847                        	.block	684
  5848                        ;  struct record_EXPR *current_record;
  5849                        ;
  5850                        ;  /* Allocation mémoire */
  5851                        ;  current_record = (struct record_EXPR *) k_callo
                    c(1,sizeof(struct record_EXPR));
  5852             00000000   current_record_1	set	0
  5853                        	.sym	current_record,0,138,1,32,106
  5854                        	.sym	data,4,142,6,32
  5855                        	.sym	file_offset,8,5,6,16
  5856                        	.sym	segment_offset,10,5,6,16
  5857                        	.sym	record_length_rtn,12,133,6,32
  5858                        	.line	688
  Sat Jul 10 2021  1:15                                                Page 110


  5859 09:86BC: F4 09 00     	pea	#<$9
  5860 09:86BF: F4 01 00     	pea	#<$1
  5861 09:86C2: 22 xx xx xx  	jsl	~~k_calloc
  5862 09:86C6: 85 05        	sta	<L191+current_record_1
  5863 09:86C8: 86 07        	stx	<L191+current_record_1+2
  5864                        ;  if(current_record == NULL)
  5865                        	.line	689
  5866                        ;    {
  5867 09:86CA: A5 05        	lda	<L191+current_record_1
  5868 09:86CC: 05 07        	ora	<L191+current_record_1+2
  5869 09:86CE: F0 03        	beq	L193
  5870 09:86D0: 82 19 00     	brl	L10180
  5871                        L193:
  5872                        	.line	690
  5873                        ;      //printf("Error : Impossible to allocate me
                    mory to process Segment Body Record.\n");
  5874                        ;      return(NULL);
  5875                        	.line	692
  5876 09:86D3: A9 00 00     	lda	#$0
  5877 09:86D6: AA           	tax
  5878 09:86D7: A9 00 00     	lda	#$0
  5879                        L194:
  5880 09:86DA: A8           	tay
  5881 09:86DB: A5 0A        	lda	<L190+2
  5882 09:86DD: 85 16        	sta	<L190+2+12
  5883 09:86DF: A5 09        	lda	<L190+1
  5884 09:86E1: 85 15        	sta	<L190+1+12
  5885 09:86E3: 2B           	pld
  5886 09:86E4: 3B           	tsc
  5887 09:86E5: 18           	clc
  5888 09:86E6: 69 14 00     	adc	#L190+12
  5889 09:86E9: 1B           	tcs
  5890 09:86EA: 98           	tya
  5891 09:86EB: 6B           	rtl
  5892                        ;    }
  5893                        	.line	693
  5894                        ;
  5895                        ;  /* Offset */
  5896                        ;  current_record->FileOffset = (DWORD) file_offse
                    t;
  5897                        L10180:
  5898                        	.line	696
  5899 09:86EC: A0 00 00     	ldy	#$0
  5900 09:86EF: A5 10        	lda	<L190+file_offset_0
  5901 09:86F1: 10 01        	bpl	L195
  5902 09:86F3: 88           	dey
  5903                        L195:
  5904 09:86F4: 85 01        	sta	<R0
  5905 09:86F6: 84 03        	sty	<R0+2
  5906 09:86F8: A5 01        	lda	<R0
  5907 09:86FA: 87 05        	sta	[<L191+current_record_1]
  5908 09:86FC: A5 03        	lda	<R0+2
  5909 09:86FE: A0 02 00     	ldy	#$2
  5910 09:8701: 97 05        	sta	[<L191+current_record_1],Y
  5911                        ;  current_record->SegmentOffset = (DWORD) segment
                    _offset;
  5912                        	.line	697
  5913 09:8703: A0 00 00     	ldy	#$0
  Sat Jul 10 2021  1:15                                                Page 111


  5914 09:8706: A5 12        	lda	<L190+segment_offset_0
  5915 09:8708: 10 01        	bpl	L196
  5916 09:870A: 88           	dey
  5917                        L196:
  5918 09:870B: 85 01        	sta	<R0
  5919 09:870D: 84 03        	sty	<R0+2
  5920 09:870F: A5 01        	lda	<R0
  5921 09:8711: A0 04 00     	ldy	#$4
  5922 09:8714: 97 05        	sta	[<L191+current_record_1],Y
  5923 09:8716: A5 03        	lda	<R0+2
  5924 09:8718: A0 06 00     	ldy	#$6
  5925 09:871B: 97 05        	sta	[<L191+current_record_1],Y
  5926                        ;
  5927                        ;  /* Operation Code */
  5928                        ;  current_record->operation_code = data[0];
  5929                        	.line	700
  5930 09:871D: E2 20        	sep	#$20
  5931                        	longa	off
  5932 09:871F: A7 0C        	lda	[<L190+data_0]
  5933 09:8721: A0 08 00     	ldy	#$8
  5934 09:8724: 97 05        	sta	[<L191+current_record_1],Y
  5935 09:8726: C2 20        	rep	#$20
  5936                        	longa	on
  5937                        ;
  5938                        ;  /* Renvoie la structure */
  5939                        ;  return(current_record);
  5940                        	.line	703
  5941 09:8728: A6 07        	ldx	<L191+current_record_1+2
  5942 09:872A: A5 05        	lda	<L191+current_record_1
  5943 09:872C: 82 AB FF     	brl	L194
  5944                        ;}
  5945                        	.line	704
  5946                        	.endblock	704
  5947             00000008   L190	equ	8
  5948             00000005   L191	equ	5
  5949 09:872F:              	ends
  5950                        	efunc
  5951                        	.endfunc	704,5,8
  5952                        	.line	704
  5953                        ;
  5954                        ;
  5955                        ;/************************************************
                    *****/
  5956                        ;/*  DecodeRecordZEXPR() :  Décodage du Record ZEX
                    PR. */
  5957                        ;/************************************************
                    *****/
  5958                        ;static void *DecodeRecordZEXPR(unsigned char *dat
                    a, int file_offset, int segment_offset, int *record_length_r
                    tn)
  5959                        ;{
  5960                        	.line	710
  5961                        	.line	711
  5962                        	LOADER
  5963                        	func
  5964                        	.function	711
  5965                        ~~DecodeRecordZEXPR:
  5966                        	longa	on
  Sat Jul 10 2021  1:15                                                Page 112


  5967                        	longi	on
  5968 09:872F: 3B           	tsc
  5969 09:8730: 38           	sec
  5970 09:8731: E9 08 00     	sbc	#L197
  5971 09:8734: 1B           	tcs
  5972 09:8735: 0B           	phd
  5973 09:8736: 5B           	tcd
  5974             00000004   data_0	set	4
  5975             00000008   file_offset_0	set	8
  5976             0000000A   segment_offset_0	set	10
  5977             0000000C   record_length_rtn_0	set	12
  5978                        	.block	711
  5979                        ;  struct record_ZEXPR *current_record;
  5980                        ;
  5981                        ;  /* Allocation mémoire */
  5982                        ;  current_record = (struct record_ZEXPR *) k_call
                    oc(1,sizeof(struct record_ZEXPR));
  5983             00000000   current_record_1	set	0
  5984                        	.sym	current_record,0,138,1,32,107
  5985                        	.sym	data,4,142,6,32
  5986                        	.sym	file_offset,8,5,6,16
  5987                        	.sym	segment_offset,10,5,6,16
  5988                        	.sym	record_length_rtn,12,133,6,32
  5989                        	.line	715
  5990 09:8737: F4 09 00     	pea	#<$9
  5991 09:873A: F4 01 00     	pea	#<$1
  5992 09:873D: 22 xx xx xx  	jsl	~~k_calloc
  5993 09:8741: 85 05        	sta	<L198+current_record_1
  5994 09:8743: 86 07        	stx	<L198+current_record_1+2
  5995                        ;  if(current_record == NULL)
  5996                        	.line	716
  5997                        ;    {
  5998 09:8745: A5 05        	lda	<L198+current_record_1
  5999 09:8747: 05 07        	ora	<L198+current_record_1+2
  6000 09:8749: F0 03        	beq	L200
  6001 09:874B: 82 19 00     	brl	L10181
  6002                        L200:
  6003                        	.line	717
  6004                        ;      //printf("Error : Impossible to allocate me
                    mory to process Segment Body Record.\n");
  6005                        ;      return(NULL);
  6006                        	.line	719
  6007 09:874E: A9 00 00     	lda	#$0
  6008 09:8751: AA           	tax
  6009 09:8752: A9 00 00     	lda	#$0
  6010                        L201:
  6011 09:8755: A8           	tay
  6012 09:8756: A5 0A        	lda	<L197+2
  6013 09:8758: 85 16        	sta	<L197+2+12
  6014 09:875A: A5 09        	lda	<L197+1
  6015 09:875C: 85 15        	sta	<L197+1+12
  6016 09:875E: 2B           	pld
  6017 09:875F: 3B           	tsc
  6018 09:8760: 18           	clc
  6019 09:8761: 69 14 00     	adc	#L197+12
  6020 09:8764: 1B           	tcs
  6021 09:8765: 98           	tya
  6022 09:8766: 6B           	rtl
  Sat Jul 10 2021  1:15                                                Page 113


  6023                        ;    }
  6024                        	.line	720
  6025                        ;
  6026                        ;  /* Offset */
  6027                        ;  current_record->FileOffset = (DWORD) file_offse
                    t;
  6028                        L10181:
  6029                        	.line	723
  6030 09:8767: A0 00 00     	ldy	#$0
  6031 09:876A: A5 10        	lda	<L197+file_offset_0
  6032 09:876C: 10 01        	bpl	L202
  6033 09:876E: 88           	dey
  6034                        L202:
  6035 09:876F: 85 01        	sta	<R0
  6036 09:8771: 84 03        	sty	<R0+2
  6037 09:8773: A5 01        	lda	<R0
  6038 09:8775: 87 05        	sta	[<L198+current_record_1]
  6039 09:8777: A5 03        	lda	<R0+2
  6040 09:8779: A0 02 00     	ldy	#$2
  6041 09:877C: 97 05        	sta	[<L198+current_record_1],Y
  6042                        ;  current_record->SegmentOffset = (DWORD) segment
                    _offset;
  6043                        	.line	724
  6044 09:877E: A0 00 00     	ldy	#$0
  6045 09:8781: A5 12        	lda	<L197+segment_offset_0
  6046 09:8783: 10 01        	bpl	L203
  6047 09:8785: 88           	dey
  6048                        L203:
  6049 09:8786: 85 01        	sta	<R0
  6050 09:8788: 84 03        	sty	<R0+2
  6051 09:878A: A5 01        	lda	<R0
  6052 09:878C: A0 04 00     	ldy	#$4
  6053 09:878F: 97 05        	sta	[<L198+current_record_1],Y
  6054 09:8791: A5 03        	lda	<R0+2
  6055 09:8793: A0 06 00     	ldy	#$6
  6056 09:8796: 97 05        	sta	[<L198+current_record_1],Y
  6057                        ;
  6058                        ;  /* Operation Code */
  6059                        ;  current_record->operation_code = data[0];
  6060                        	.line	727
  6061 09:8798: E2 20        	sep	#$20
  6062                        	longa	off
  6063 09:879A: A7 0C        	lda	[<L197+data_0]
  6064 09:879C: A0 08 00     	ldy	#$8
  6065 09:879F: 97 05        	sta	[<L198+current_record_1],Y
  6066 09:87A1: C2 20        	rep	#$20
  6067                        	longa	on
  6068                        ;
  6069                        ;  /* Renvoie la structure */
  6070                        ;  return(current_record);
  6071                        	.line	730
  6072 09:87A3: A6 07        	ldx	<L198+current_record_1+2
  6073 09:87A5: A5 05        	lda	<L198+current_record_1
  6074 09:87A7: 82 AB FF     	brl	L201
  6075                        ;}
  6076                        	.line	731
  6077                        	.endblock	731
  6078             00000008   L197	equ	8
  Sat Jul 10 2021  1:15                                                Page 114


  6079             00000005   L198	equ	5
  6080 09:87AA:              	ends
  6081                        	efunc
  6082                        	.endfunc	731,5,8
  6083                        	.line	731
  6084                        ;
  6085                        ;
  6086                        ;/************************************************
                    *****/
  6087                        ;/*  DecodeRecordBEXPR() :  Décodage du Record BEX
                    PR. */
  6088                        ;/************************************************
                    *****/
  6089                        ;static void *DecodeRecordBEXPR(unsigned char *dat
                    a, int file_offset, int segment_offset, int *record_length_r
                    tn)
  6090                        ;{
  6091                        	.line	737
  6092                        	.line	738
  6093                        	LOADER
  6094                        	func
  6095                        	.function	738
  6096                        ~~DecodeRecordBEXPR:
  6097                        	longa	on
  6098                        	longi	on
  6099 09:87AA: 3B           	tsc
  6100 09:87AB: 38           	sec
  6101 09:87AC: E9 08 00     	sbc	#L204
  6102 09:87AF: 1B           	tcs
  6103 09:87B0: 0B           	phd
  6104 09:87B1: 5B           	tcd
  6105             00000004   data_0	set	4
  6106             00000008   file_offset_0	set	8
  6107             0000000A   segment_offset_0	set	10
  6108             0000000C   record_length_rtn_0	set	12
  6109                        	.block	738
  6110                        ;  struct record_BEXPR *current_record;
  6111                        ;
  6112                        ;  /* Allocation mémoire */
  6113                        ;  current_record = (struct record_BEXPR *) k_call
                    oc(1,sizeof(struct record_BEXPR));
  6114             00000000   current_record_1	set	0
  6115                        	.sym	current_record,0,138,1,32,108
  6116                        	.sym	data,4,142,6,32
  6117                        	.sym	file_offset,8,5,6,16
  6118                        	.sym	segment_offset,10,5,6,16
  6119                        	.sym	record_length_rtn,12,133,6,32
  6120                        	.line	742
  6121 09:87B2: F4 09 00     	pea	#<$9
  6122 09:87B5: F4 01 00     	pea	#<$1
  6123 09:87B8: 22 xx xx xx  	jsl	~~k_calloc
  6124 09:87BC: 85 05        	sta	<L205+current_record_1
  6125 09:87BE: 86 07        	stx	<L205+current_record_1+2
  6126                        ;  if(current_record == NULL)
  6127                        	.line	743
  6128                        ;    {
  6129 09:87C0: A5 05        	lda	<L205+current_record_1
  6130 09:87C2: 05 07        	ora	<L205+current_record_1+2
  Sat Jul 10 2021  1:15                                                Page 115


  6131 09:87C4: F0 03        	beq	L207
  6132 09:87C6: 82 19 00     	brl	L10182
  6133                        L207:
  6134                        	.line	744
  6135                        ;      //printf("Error : Impossible to allocate me
                    mory to process Segment Body Record.\n");
  6136                        ;      return(NULL);
  6137                        	.line	746
  6138 09:87C9: A9 00 00     	lda	#$0
  6139 09:87CC: AA           	tax
  6140 09:87CD: A9 00 00     	lda	#$0
  6141                        L208:
  6142 09:87D0: A8           	tay
  6143 09:87D1: A5 0A        	lda	<L204+2
  6144 09:87D3: 85 16        	sta	<L204+2+12
  6145 09:87D5: A5 09        	lda	<L204+1
  6146 09:87D7: 85 15        	sta	<L204+1+12
  6147 09:87D9: 2B           	pld
  6148 09:87DA: 3B           	tsc
  6149 09:87DB: 18           	clc
  6150 09:87DC: 69 14 00     	adc	#L204+12
  6151 09:87DF: 1B           	tcs
  6152 09:87E0: 98           	tya
  6153 09:87E1: 6B           	rtl
  6154                        ;    }
  6155                        	.line	747
  6156                        ;
  6157                        ;  /* Offset */
  6158                        ;  current_record->FileOffset = (DWORD) file_offse
                    t;
  6159                        L10182:
  6160                        	.line	750
  6161 09:87E2: A0 00 00     	ldy	#$0
  6162 09:87E5: A5 10        	lda	<L204+file_offset_0
  6163 09:87E7: 10 01        	bpl	L209
  6164 09:87E9: 88           	dey
  6165                        L209:
  6166 09:87EA: 85 01        	sta	<R0
  6167 09:87EC: 84 03        	sty	<R0+2
  6168 09:87EE: A5 01        	lda	<R0
  6169 09:87F0: 87 05        	sta	[<L205+current_record_1]
  6170 09:87F2: A5 03        	lda	<R0+2
  6171 09:87F4: A0 02 00     	ldy	#$2
  6172 09:87F7: 97 05        	sta	[<L205+current_record_1],Y
  6173                        ;  current_record->SegmentOffset = (DWORD) segment
                    _offset;
  6174                        	.line	751
  6175 09:87F9: A0 00 00     	ldy	#$0
  6176 09:87FC: A5 12        	lda	<L204+segment_offset_0
  6177 09:87FE: 10 01        	bpl	L210
  6178 09:8800: 88           	dey
  6179                        L210:
  6180 09:8801: 85 01        	sta	<R0
  6181 09:8803: 84 03        	sty	<R0+2
  6182 09:8805: A5 01        	lda	<R0
  6183 09:8807: A0 04 00     	ldy	#$4
  6184 09:880A: 97 05        	sta	[<L205+current_record_1],Y
  6185 09:880C: A5 03        	lda	<R0+2
  Sat Jul 10 2021  1:15                                                Page 116


  6186 09:880E: A0 06 00     	ldy	#$6
  6187 09:8811: 97 05        	sta	[<L205+current_record_1],Y
  6188                        ;
  6189                        ;  /* Operation Code */
  6190                        ;  current_record->operation_code = data[0];
  6191                        	.line	754
  6192 09:8813: E2 20        	sep	#$20
  6193                        	longa	off
  6194 09:8815: A7 0C        	lda	[<L204+data_0]
  6195 09:8817: A0 08 00     	ldy	#$8
  6196 09:881A: 97 05        	sta	[<L205+current_record_1],Y
  6197 09:881C: C2 20        	rep	#$20
  6198                        	longa	on
  6199                        ;
  6200                        ;  /* Renvoie la structure */
  6201                        ;  return(current_record);
  6202                        	.line	757
  6203 09:881E: A6 07        	ldx	<L205+current_record_1+2
  6204 09:8820: A5 05        	lda	<L205+current_record_1
  6205 09:8822: 82 AB FF     	brl	L208
  6206                        ;}
  6207                        	.line	758
  6208                        	.endblock	758
  6209             00000008   L204	equ	8
  6210             00000005   L205	equ	5
  6211 09:8825:              	ends
  6212                        	efunc
  6213                        	.endfunc	758,5,8
  6214                        	.line	758
  6215                        ;
  6216                        ;
  6217                        ;/************************************************
                    ********/
  6218                        ;/*  DecodeRecordRELEXPR() :  Décodage du Record E
                    LEXPR. */
  6219                        ;/************************************************
                    ********/
  6220                        ;static void *DecodeRecordRELEXPR(unsigned char *d
                    ata, int file_offset, int segment_offset, int *record_length
                    _rtn)
  6221                        ;{
  6222                        	.line	764
  6223                        	.line	765
  6224                        	LOADER
  6225                        	func
  6226                        	.function	765
  6227                        ~~DecodeRecordRELEXPR:
  6228                        	longa	on
  6229                        	longi	on
  6230 09:8825: 3B           	tsc
  6231 09:8826: 38           	sec
  6232 09:8827: E9 08 00     	sbc	#L211
  6233 09:882A: 1B           	tcs
  6234 09:882B: 0B           	phd
  6235 09:882C: 5B           	tcd
  6236             00000004   data_0	set	4
  6237             00000008   file_offset_0	set	8
  6238             0000000A   segment_offset_0	set	10
  Sat Jul 10 2021  1:15                                                Page 117


  6239             0000000C   record_length_rtn_0	set	12
  6240                        	.block	765
  6241                        ;  struct record_RELEXPR *current_record;
  6242                        ;
  6243                        ;  /* Allocation mémoire */
  6244                        ;  current_record = (struct record_RELEXPR *) k_ca
                    lloc(1,sizeof(struct record_RELEXPR));
  6245             00000000   current_record_1	set	0
  6246                        	.sym	current_record,0,138,1,32,109
  6247                        	.sym	data,4,142,6,32
  6248                        	.sym	file_offset,8,5,6,16
  6249                        	.sym	segment_offset,10,5,6,16
  6250                        	.sym	record_length_rtn,12,133,6,32
  6251                        	.line	769
  6252 09:882D: F4 09 00     	pea	#<$9
  6253 09:8830: F4 01 00     	pea	#<$1
  6254 09:8833: 22 xx xx xx  	jsl	~~k_calloc
  6255 09:8837: 85 05        	sta	<L212+current_record_1
  6256 09:8839: 86 07        	stx	<L212+current_record_1+2
  6257                        ;  if(current_record == NULL)
  6258                        	.line	770
  6259                        ;    {
  6260 09:883B: A5 05        	lda	<L212+current_record_1
  6261 09:883D: 05 07        	ora	<L212+current_record_1+2
  6262 09:883F: F0 03        	beq	L214
  6263 09:8841: 82 19 00     	brl	L10183
  6264                        L214:
  6265                        	.line	771
  6266                        ;      //printf("Error : Impossible to allocate me
                    mory to process Segment Body Record.\n");
  6267                        ;      return(NULL);
  6268                        	.line	773
  6269 09:8844: A9 00 00     	lda	#$0
  6270 09:8847: AA           	tax
  6271 09:8848: A9 00 00     	lda	#$0
  6272                        L215:
  6273 09:884B: A8           	tay
  6274 09:884C: A5 0A        	lda	<L211+2
  6275 09:884E: 85 16        	sta	<L211+2+12
  6276 09:8850: A5 09        	lda	<L211+1
  6277 09:8852: 85 15        	sta	<L211+1+12
  6278 09:8854: 2B           	pld
  6279 09:8855: 3B           	tsc
  6280 09:8856: 18           	clc
  6281 09:8857: 69 14 00     	adc	#L211+12
  6282 09:885A: 1B           	tcs
  6283 09:885B: 98           	tya
  6284 09:885C: 6B           	rtl
  6285                        ;    }
  6286                        	.line	774
  6287                        ;
  6288                        ;  /* Offset */
  6289                        ;  current_record->FileOffset = (DWORD) file_offse
                    t;
  6290                        L10183:
  6291                        	.line	777
  6292 09:885D: A0 00 00     	ldy	#$0
  6293 09:8860: A5 10        	lda	<L211+file_offset_0
  Sat Jul 10 2021  1:15                                                Page 118


  6294 09:8862: 10 01        	bpl	L216
  6295 09:8864: 88           	dey
  6296                        L216:
  6297 09:8865: 85 01        	sta	<R0
  6298 09:8867: 84 03        	sty	<R0+2
  6299 09:8869: A5 01        	lda	<R0
  6300 09:886B: 87 05        	sta	[<L212+current_record_1]
  6301 09:886D: A5 03        	lda	<R0+2
  6302 09:886F: A0 02 00     	ldy	#$2
  6303 09:8872: 97 05        	sta	[<L212+current_record_1],Y
  6304                        ;  current_record->SegmentOffset = (DWORD) segment
                    _offset;
  6305                        	.line	778
  6306 09:8874: A0 00 00     	ldy	#$0
  6307 09:8877: A5 12        	lda	<L211+segment_offset_0
  6308 09:8879: 10 01        	bpl	L217
  6309 09:887B: 88           	dey
  6310                        L217:
  6311 09:887C: 85 01        	sta	<R0
  6312 09:887E: 84 03        	sty	<R0+2
  6313 09:8880: A5 01        	lda	<R0
  6314 09:8882: A0 04 00     	ldy	#$4
  6315 09:8885: 97 05        	sta	[<L212+current_record_1],Y
  6316 09:8887: A5 03        	lda	<R0+2
  6317 09:8889: A0 06 00     	ldy	#$6
  6318 09:888C: 97 05        	sta	[<L212+current_record_1],Y
  6319                        ;
  6320                        ;  /* Operation Code */
  6321                        ;  current_record->operation_code = data[0];
  6322                        	.line	781
  6323 09:888E: E2 20        	sep	#$20
  6324                        	longa	off
  6325 09:8890: A7 0C        	lda	[<L211+data_0]
  6326 09:8892: A0 08 00     	ldy	#$8
  6327 09:8895: 97 05        	sta	[<L212+current_record_1],Y
  6328 09:8897: C2 20        	rep	#$20
  6329                        	longa	on
  6330                        ;
  6331                        ;  /* Renvoie la structure */
  6332                        ;  return(current_record);
  6333                        	.line	784
  6334 09:8899: A6 07        	ldx	<L212+current_record_1+2
  6335 09:889B: A5 05        	lda	<L212+current_record_1
  6336 09:889D: 82 AB FF     	brl	L215
  6337                        ;}
  6338                        	.line	785
  6339                        	.endblock	785
  6340             00000008   L211	equ	8
  6341             00000005   L212	equ	5
  6342 09:88A0:              	ends
  6343                        	efunc
  6344                        	.endfunc	785,5,8
  6345                        	.line	785
  6346                        ;
  6347                        ;
  6348                        ;/************************************************
                    *****/
  6349                        ;/*  DecodeRecordLOCAL() :  Décodage du Record LOC
  Sat Jul 10 2021  1:15                                                Page 119


                    AL. */
  6350                        ;/************************************************
                    *****/
  6351                        ;static void *DecodeRecordLOCAL(unsigned char *dat
                    a, int file_offset, int segment_offset, int *record_length_r
                    tn)
  6352                        ;{
  6353                        	.line	791
  6354                        	.line	792
  6355                        	LOADER
  6356                        	func
  6357                        	.function	792
  6358                        ~~DecodeRecordLOCAL:
  6359                        	longa	on
  6360                        	longi	on
  6361 09:88A0: 3B           	tsc
  6362 09:88A1: 38           	sec
  6363 09:88A2: E9 08 00     	sbc	#L218
  6364 09:88A5: 1B           	tcs
  6365 09:88A6: 0B           	phd
  6366 09:88A7: 5B           	tcd
  6367             00000004   data_0	set	4
  6368             00000008   file_offset_0	set	8
  6369             0000000A   segment_offset_0	set	10
  6370             0000000C   record_length_rtn_0	set	12
  6371                        	.block	792
  6372                        ;  struct record_LOCAL *current_record;
  6373                        ;
  6374                        ;  /* Allocation mémoire */
  6375                        ;  current_record = (struct record_LOCAL *) k_call
                    oc(1,sizeof(struct record_LOCAL));
  6376             00000000   current_record_1	set	0
  6377                        	.sym	current_record,0,138,1,32,110
  6378                        	.sym	data,4,142,6,32
  6379                        	.sym	file_offset,8,5,6,16
  6380                        	.sym	segment_offset,10,5,6,16
  6381                        	.sym	record_length_rtn,12,133,6,32
  6382                        	.line	796
  6383 09:88A8: F4 09 00     	pea	#<$9
  6384 09:88AB: F4 01 00     	pea	#<$1
  6385 09:88AE: 22 xx xx xx  	jsl	~~k_calloc
  6386 09:88B2: 85 05        	sta	<L219+current_record_1
  6387 09:88B4: 86 07        	stx	<L219+current_record_1+2
  6388                        ;  if(current_record == NULL)
  6389                        	.line	797
  6390                        ;    {
  6391 09:88B6: A5 05        	lda	<L219+current_record_1
  6392 09:88B8: 05 07        	ora	<L219+current_record_1+2
  6393 09:88BA: F0 03        	beq	L221
  6394 09:88BC: 82 19 00     	brl	L10184
  6395                        L221:
  6396                        	.line	798
  6397                        ;      //printf("Error : Impossible to allocate me
                    mory to process Segment Body Record.\n");
  6398                        ;      return(NULL);
  6399                        	.line	800
  6400 09:88BF: A9 00 00     	lda	#$0
  6401 09:88C2: AA           	tax
  Sat Jul 10 2021  1:15                                                Page 120


  6402 09:88C3: A9 00 00     	lda	#$0
  6403                        L222:
  6404 09:88C6: A8           	tay
  6405 09:88C7: A5 0A        	lda	<L218+2
  6406 09:88C9: 85 16        	sta	<L218+2+12
  6407 09:88CB: A5 09        	lda	<L218+1
  6408 09:88CD: 85 15        	sta	<L218+1+12
  6409 09:88CF: 2B           	pld
  6410 09:88D0: 3B           	tsc
  6411 09:88D1: 18           	clc
  6412 09:88D2: 69 14 00     	adc	#L218+12
  6413 09:88D5: 1B           	tcs
  6414 09:88D6: 98           	tya
  6415 09:88D7: 6B           	rtl
  6416                        ;    }
  6417                        	.line	801
  6418                        ;
  6419                        ;  /* Offset */
  6420                        ;  current_record->FileOffset = (DWORD) file_offse
                    t;
  6421                        L10184:
  6422                        	.line	804
  6423 09:88D8: A0 00 00     	ldy	#$0
  6424 09:88DB: A5 10        	lda	<L218+file_offset_0
  6425 09:88DD: 10 01        	bpl	L223
  6426 09:88DF: 88           	dey
  6427                        L223:
  6428 09:88E0: 85 01        	sta	<R0
  6429 09:88E2: 84 03        	sty	<R0+2
  6430 09:88E4: A5 01        	lda	<R0
  6431 09:88E6: 87 05        	sta	[<L219+current_record_1]
  6432 09:88E8: A5 03        	lda	<R0+2
  6433 09:88EA: A0 02 00     	ldy	#$2
  6434 09:88ED: 97 05        	sta	[<L219+current_record_1],Y
  6435                        ;  current_record->SegmentOffset = (DWORD) segment
                    _offset;
  6436                        	.line	805
  6437 09:88EF: A0 00 00     	ldy	#$0
  6438 09:88F2: A5 12        	lda	<L218+segment_offset_0
  6439 09:88F4: 10 01        	bpl	L224
  6440 09:88F6: 88           	dey
  6441                        L224:
  6442 09:88F7: 85 01        	sta	<R0
  6443 09:88F9: 84 03        	sty	<R0+2
  6444 09:88FB: A5 01        	lda	<R0
  6445 09:88FD: A0 04 00     	ldy	#$4
  6446 09:8900: 97 05        	sta	[<L219+current_record_1],Y
  6447 09:8902: A5 03        	lda	<R0+2
  6448 09:8904: A0 06 00     	ldy	#$6
  6449 09:8907: 97 05        	sta	[<L219+current_record_1],Y
  6450                        ;
  6451                        ;  /* Operation Code */
  6452                        ;  current_record->operation_code = data[0];
  6453                        	.line	808
  6454 09:8909: E2 20        	sep	#$20
  6455                        	longa	off
  6456 09:890B: A7 0C        	lda	[<L218+data_0]
  6457 09:890D: A0 08 00     	ldy	#$8
  Sat Jul 10 2021  1:15                                                Page 121


  6458 09:8910: 97 05        	sta	[<L219+current_record_1],Y
  6459 09:8912: C2 20        	rep	#$20
  6460                        	longa	on
  6461                        ;
  6462                        ;  /* Renvoie la structure */
  6463                        ;  return(current_record);
  6464                        	.line	811
  6465 09:8914: A6 07        	ldx	<L219+current_record_1+2
  6466 09:8916: A5 05        	lda	<L219+current_record_1
  6467 09:8918: 82 AB FF     	brl	L222
  6468                        ;}
  6469                        	.line	812
  6470                        	.endblock	812
  6471             00000008   L218	equ	8
  6472             00000005   L219	equ	5
  6473 09:891B:              	ends
  6474                        	efunc
  6475                        	.endfunc	812,5,8
  6476                        	.line	812
  6477                        ;
  6478                        ;
  6479                        ;/************************************************
                    */
  6480                        ;/*  DecodeRecordEQU() :  Décodage du Record EQU. 
                    */
  6481                        ;/************************************************
                    */
  6482                        ;static void *DecodeRecordEQU(unsigned char *data,
                     int file_offset, int segment_offset, int *record_length_rtn
                    )
  6483                        ;{
  6484                        	.line	818
  6485                        	.line	819
  6486                        	LOADER
  6487                        	func
  6488                        	.function	819
  6489                        ~~DecodeRecordEQU:
  6490                        	longa	on
  6491                        	longi	on
  6492 09:891B: 3B           	tsc
  6493 09:891C: 38           	sec
  6494 09:891D: E9 08 00     	sbc	#L225
  6495 09:8920: 1B           	tcs
  6496 09:8921: 0B           	phd
  6497 09:8922: 5B           	tcd
  6498             00000004   data_0	set	4
  6499             00000008   file_offset_0	set	8
  6500             0000000A   segment_offset_0	set	10
  6501             0000000C   record_length_rtn_0	set	12
  6502                        	.block	819
  6503                        ;  struct record_EQU *current_record;
  6504                        ;
  6505                        ;  /* Allocation mémoire */
  6506                        ;  current_record = (struct record_EQU *) k_calloc
                    (1,sizeof(struct record_EQU));
  6507             00000000   current_record_1	set	0
  6508                        	.sym	current_record,0,138,1,32,111
  6509                        	.sym	data,4,142,6,32
  Sat Jul 10 2021  1:15                                                Page 122


  6510                        	.sym	file_offset,8,5,6,16
  6511                        	.sym	segment_offset,10,5,6,16
  6512                        	.sym	record_length_rtn,12,133,6,32
  6513                        	.line	823
  6514 09:8923: F4 09 00     	pea	#<$9
  6515 09:8926: F4 01 00     	pea	#<$1
  6516 09:8929: 22 xx xx xx  	jsl	~~k_calloc
  6517 09:892D: 85 05        	sta	<L226+current_record_1
  6518 09:892F: 86 07        	stx	<L226+current_record_1+2
  6519                        ;  if(current_record == NULL)
  6520                        	.line	824
  6521                        ;    {
  6522 09:8931: A5 05        	lda	<L226+current_record_1
  6523 09:8933: 05 07        	ora	<L226+current_record_1+2
  6524 09:8935: F0 03        	beq	L228
  6525 09:8937: 82 19 00     	brl	L10185
  6526                        L228:
  6527                        	.line	825
  6528                        ;      //printf("Error : Impossible to allocate me
                    mory to process Segment Body Record.\n");
  6529                        ;      return(NULL);
  6530                        	.line	827
  6531 09:893A: A9 00 00     	lda	#$0
  6532 09:893D: AA           	tax
  6533 09:893E: A9 00 00     	lda	#$0
  6534                        L229:
  6535 09:8941: A8           	tay
  6536 09:8942: A5 0A        	lda	<L225+2
  6537 09:8944: 85 16        	sta	<L225+2+12
  6538 09:8946: A5 09        	lda	<L225+1
  6539 09:8948: 85 15        	sta	<L225+1+12
  6540 09:894A: 2B           	pld
  6541 09:894B: 3B           	tsc
  6542 09:894C: 18           	clc
  6543 09:894D: 69 14 00     	adc	#L225+12
  6544 09:8950: 1B           	tcs
  6545 09:8951: 98           	tya
  6546 09:8952: 6B           	rtl
  6547                        ;    }
  6548                        	.line	828
  6549                        ;
  6550                        ;  /* Offset */
  6551                        ;  current_record->FileOffset = (DWORD) file_offse
                    t;
  6552                        L10185:
  6553                        	.line	831
  6554 09:8953: A0 00 00     	ldy	#$0
  6555 09:8956: A5 10        	lda	<L225+file_offset_0
  6556 09:8958: 10 01        	bpl	L230
  6557 09:895A: 88           	dey
  6558                        L230:
  6559 09:895B: 85 01        	sta	<R0
  6560 09:895D: 84 03        	sty	<R0+2
  6561 09:895F: A5 01        	lda	<R0
  6562 09:8961: 87 05        	sta	[<L226+current_record_1]
  6563 09:8963: A5 03        	lda	<R0+2
  6564 09:8965: A0 02 00     	ldy	#$2
  6565 09:8968: 97 05        	sta	[<L226+current_record_1],Y
  Sat Jul 10 2021  1:15                                                Page 123


  6566                        ;  current_record->SegmentOffset = (DWORD) segment
                    _offset;
  6567                        	.line	832
  6568 09:896A: A0 00 00     	ldy	#$0
  6569 09:896D: A5 12        	lda	<L225+segment_offset_0
  6570 09:896F: 10 01        	bpl	L231
  6571 09:8971: 88           	dey
  6572                        L231:
  6573 09:8972: 85 01        	sta	<R0
  6574 09:8974: 84 03        	sty	<R0+2
  6575 09:8976: A5 01        	lda	<R0
  6576 09:8978: A0 04 00     	ldy	#$4
  6577 09:897B: 97 05        	sta	[<L226+current_record_1],Y
  6578 09:897D: A5 03        	lda	<R0+2
  6579 09:897F: A0 06 00     	ldy	#$6
  6580 09:8982: 97 05        	sta	[<L226+current_record_1],Y
  6581                        ;
  6582                        ;  /* Operation Code */
  6583                        ;  current_record->operation_code = data[0];
  6584                        	.line	835
  6585 09:8984: E2 20        	sep	#$20
  6586                        	longa	off
  6587 09:8986: A7 0C        	lda	[<L225+data_0]
  6588 09:8988: A0 08 00     	ldy	#$8
  6589 09:898B: 97 05        	sta	[<L226+current_record_1],Y
  6590 09:898D: C2 20        	rep	#$20
  6591                        	longa	on
  6592                        ;
  6593                        ;  /* Renvoie la structure */
  6594                        ;  return(current_record);
  6595                        	.line	838
  6596 09:898F: A6 07        	ldx	<L226+current_record_1+2
  6597 09:8991: A5 05        	lda	<L226+current_record_1
  6598 09:8993: 82 AB FF     	brl	L229
  6599                        ;}
  6600                        	.line	839
  6601                        	.endblock	839
  6602             00000008   L225	equ	8
  6603             00000005   L226	equ	5
  6604 09:8996:              	ends
  6605                        	efunc
  6606                        	.endfunc	839,5,8
  6607                        	.line	839
  6608                        ;
  6609                        ;
  6610                        ;/***********************************************/
  6611                        ;/*  DecodeRecordDS() :  Décodage du Record DS. */
  6612                        ;/***********************************************/
  6613                        ;static void *DecodeRecordDS(unsigned char *data, 
                    int file_offset, int segment_offset, int *record_length_rtn)
  6614                        ;{
  6615                        	.line	845
  6616                        	.line	846
  6617                        	LOADER
  6618                        	func
  6619                        	.function	846
  6620                        ~~DecodeRecordDS:
  6621                        	longa	on
  Sat Jul 10 2021  1:15                                                Page 124


  6622                        	longi	on
  6623 09:8996: 3B           	tsc
  6624 09:8997: 38           	sec
  6625 09:8998: E9 0C 00     	sbc	#L232
  6626 09:899B: 1B           	tcs
  6627 09:899C: 0B           	phd
  6628 09:899D: 5B           	tcd
  6629             00000004   data_0	set	4
  6630             00000008   file_offset_0	set	8
  6631             0000000A   segment_offset_0	set	10
  6632             0000000C   record_length_rtn_0	set	12
  6633                        	.block	846
  6634                        ;  struct record_DS *current_record;
  6635                        ;
  6636                        ;  /* Allocation mémoire */
  6637                        ;  current_record = (struct record_DS *) k_calloc(
                    1,sizeof(struct record_DS));
  6638             00000000   current_record_1	set	0
  6639                        	.sym	current_record,0,138,1,32,112
  6640                        	.sym	data,4,142,6,32
  6641                        	.sym	file_offset,8,5,6,16
  6642                        	.sym	segment_offset,10,5,6,16
  6643                        	.sym	record_length_rtn,12,133,6,32
  6644                        	.line	850
  6645 09:899E: F4 0D 00     	pea	#<$d
  6646 09:89A1: F4 01 00     	pea	#<$1
  6647 09:89A4: 22 xx xx xx  	jsl	~~k_calloc
  6648 09:89A8: 85 09        	sta	<L233+current_record_1
  6649 09:89AA: 86 0B        	stx	<L233+current_record_1+2
  6650                        ;  if(current_record == NULL)
  6651                        	.line	851
  6652                        ;    {
  6653 09:89AC: A5 09        	lda	<L233+current_record_1
  6654 09:89AE: 05 0B        	ora	<L233+current_record_1+2
  6655 09:89B0: F0 03        	beq	L235
  6656 09:89B2: 82 19 00     	brl	L10186
  6657                        L235:
  6658                        	.line	852
  6659                        ;      //printf("Error : Impossible to allocate me
                    mory to process Segment Body Record.\n");
  6660                        ;      return(NULL);
  6661                        	.line	854
  6662 09:89B5: A9 00 00     	lda	#$0
  6663 09:89B8: AA           	tax
  6664 09:89B9: A9 00 00     	lda	#$0
  6665                        L236:
  6666 09:89BC: A8           	tay
  6667 09:89BD: A5 0E        	lda	<L232+2
  6668 09:89BF: 85 1A        	sta	<L232+2+12
  6669 09:89C1: A5 0D        	lda	<L232+1
  6670 09:89C3: 85 19        	sta	<L232+1+12
  6671 09:89C5: 2B           	pld
  6672 09:89C6: 3B           	tsc
  6673 09:89C7: 18           	clc
  6674 09:89C8: 69 18 00     	adc	#L232+12
  6675 09:89CB: 1B           	tcs
  6676 09:89CC: 98           	tya
  6677 09:89CD: 6B           	rtl
  Sat Jul 10 2021  1:15                                                Page 125


  6678                        ;    }
  6679                        	.line	855
  6680                        ;
  6681                        ;  /* Offset */
  6682                        ;  current_record->FileOffset = (DWORD) file_offse
                    t;
  6683                        L10186:
  6684                        	.line	858
  6685 09:89CE: A0 00 00     	ldy	#$0
  6686 09:89D1: A5 14        	lda	<L232+file_offset_0
  6687 09:89D3: 10 01        	bpl	L237
  6688 09:89D5: 88           	dey
  6689                        L237:
  6690 09:89D6: 85 01        	sta	<R0
  6691 09:89D8: 84 03        	sty	<R0+2
  6692 09:89DA: A5 01        	lda	<R0
  6693 09:89DC: 87 09        	sta	[<L233+current_record_1]
  6694 09:89DE: A5 03        	lda	<R0+2
  6695 09:89E0: A0 02 00     	ldy	#$2
  6696 09:89E3: 97 09        	sta	[<L233+current_record_1],Y
  6697                        ;  current_record->SegmentOffset = (DWORD) segment
                    _offset;
  6698                        	.line	859
  6699 09:89E5: A0 00 00     	ldy	#$0
  6700 09:89E8: A5 16        	lda	<L232+segment_offset_0
  6701 09:89EA: 10 01        	bpl	L238
  6702 09:89EC: 88           	dey
  6703                        L238:
  6704 09:89ED: 85 01        	sta	<R0
  6705 09:89EF: 84 03        	sty	<R0+2
  6706 09:89F1: A5 01        	lda	<R0
  6707 09:89F3: A0 04 00     	ldy	#$4
  6708 09:89F6: 97 09        	sta	[<L233+current_record_1],Y
  6709 09:89F8: A5 03        	lda	<R0+2
  6710 09:89FA: A0 06 00     	ldy	#$6
  6711 09:89FD: 97 09        	sta	[<L233+current_record_1],Y
  6712                        ;
  6713                        ;  /* Operation Code */
  6714                        ;  current_record->operation_code = data[0];
  6715                        	.line	862
  6716 09:89FF: E2 20        	sep	#$20
  6717                        	longa	off
  6718 09:8A01: A7 10        	lda	[<L232+data_0]
  6719 09:8A03: A0 08 00     	ldy	#$8
  6720 09:8A06: 97 09        	sta	[<L233+current_record_1],Y
  6721 09:8A08: C2 20        	rep	#$20
  6722                        	longa	on
  6723                        ;
  6724                        ;  /* Nombre de Byte à $00 */
  6725                        ;  memcpy(&current_record->nb_zero_byte,&data[1],s
                    izeof(DWORD));
  6726                        	.line	865
  6727 09:8A0A: F4 04 00     	pea	#<$4
  6728 09:8A0D: 18           	clc
  6729 09:8A0E: A9 01 00     	lda	#$1
  6730 09:8A11: 65 10        	adc	<L232+data_0
  6731 09:8A13: 85 01        	sta	<R0
  6732 09:8A15: A9 00 00     	lda	#$0
  Sat Jul 10 2021  1:15                                                Page 126


  6733 09:8A18: 65 12        	adc	<L232+data_0+2
  6734 09:8A1A: 85 03        	sta	<R0+2
  6735 09:8A1C: D4 03        	pei	<R0+2
  6736 09:8A1E: D4 01        	pei	<R0
  6737 09:8A20: 18           	clc
  6738 09:8A21: A9 09 00     	lda	#$9
  6739 09:8A24: 65 09        	adc	<L233+current_record_1
  6740 09:8A26: 85 05        	sta	<R1
  6741 09:8A28: A9 00 00     	lda	#$0
  6742 09:8A2B: 65 0B        	adc	<L233+current_record_1+2
  6743 09:8A2D: 85 07        	sta	<R1+2
  6744 09:8A2F: D4 07        	pei	<R1+2
  6745 09:8A31: D4 05        	pei	<R1
  6746 09:8A33: 22 xx xx xx  	jsl	~~memcpy
  6747                        ;
  6748                        ;  /* Renvoie la structure */
  6749                        ;  *record_length_rtn = 1 + sizeof(DWORD);
  6750                        	.line	868
  6751 09:8A37: A9 05 00     	lda	#$5
  6752 09:8A3A: 87 18        	sta	[<L232+record_length_rtn_0]
  6753                        ;  return(current_record);
  6754                        	.line	869
  6755 09:8A3C: A6 0B        	ldx	<L233+current_record_1+2
  6756 09:8A3E: A5 09        	lda	<L233+current_record_1
  6757 09:8A40: 82 79 FF     	brl	L236
  6758                        ;}
  6759                        	.line	870
  6760                        	.endblock	870
  6761             0000000C   L232	equ	12
  6762             00000009   L233	equ	9
  6763 09:8A43:              	ends
  6764                        	efunc
  6765                        	.endfunc	870,9,12
  6766                        	.line	870
  6767                        ;
  6768                        ;
  6769                        ;/************************************************
                    *******/
  6770                        ;/*  DecodeRecordLCONST() :  Décodage du Record LC
                    ONST. */
  6771                        ;/************************************************
                    *******/
  6772                        ;static void *DecodeRecordLCONST(unsigned char *da
                    ta, int file_offset, int segment_offset, int *record_length_
                    rtn)
  6773                        ;{
  6774                        	.line	876
  6775                        	.line	877
  6776                        	LOADER
  6777                        	func
  6778                        	.function	877
  6779                        ~~DecodeRecordLCONST:
  6780                        	longa	on
  6781                        	longi	on
  6782 09:8A43: 3B           	tsc
  6783 09:8A44: 38           	sec
  6784 09:8A45: E9 0C 00     	sbc	#L239
  6785 09:8A48: 1B           	tcs
  Sat Jul 10 2021  1:15                                                Page 127


  6786 09:8A49: 0B           	phd
  6787 09:8A4A: 5B           	tcd
  6788             00000004   data_0	set	4
  6789             00000008   file_offset_0	set	8
  6790             0000000A   segment_offset_0	set	10
  6791             0000000C   record_length_rtn_0	set	12
  6792                        	.block	877
  6793                        ;  struct record_LCONST *current_record;
  6794                        ;
  6795                        ;  /* Allocation mémoire */
  6796                        ;  current_record = (struct record_LCONST *) k_cal
                    loc(1,sizeof(struct record_LCONST));
  6797             00000000   current_record_1	set	0
  6798                        	.sym	current_record,0,138,1,32,113
  6799                        	.sym	data,4,142,6,32
  6800                        	.sym	file_offset,8,5,6,16
  6801                        	.sym	segment_offset,10,5,6,16
  6802                        	.sym	record_length_rtn,12,133,6,32
  6803                        	.line	881
  6804 09:8A4B: F4 11 00     	pea	#<$11
  6805 09:8A4E: F4 01 00     	pea	#<$1
  6806 09:8A51: 22 xx xx xx  	jsl	~~k_calloc
  6807 09:8A55: 85 09        	sta	<L240+current_record_1
  6808 09:8A57: 86 0B        	stx	<L240+current_record_1+2
  6809                        ;  if(current_record == NULL)
  6810                        	.line	882
  6811                        ;    {
  6812 09:8A59: A5 09        	lda	<L240+current_record_1
  6813 09:8A5B: 05 0B        	ora	<L240+current_record_1+2
  6814 09:8A5D: F0 03        	beq	L242
  6815 09:8A5F: 82 19 00     	brl	L10187
  6816                        L242:
  6817                        	.line	883
  6818                        ;      //printf("Error : Impossible to allocate me
                    mory to process Segment Body Record.\n");
  6819                        ;      return(NULL);
  6820                        	.line	885
  6821 09:8A62: A9 00 00     	lda	#$0
  6822 09:8A65: AA           	tax
  6823 09:8A66: A9 00 00     	lda	#$0
  6824                        L243:
  6825 09:8A69: A8           	tay
  6826 09:8A6A: A5 0E        	lda	<L239+2
  6827 09:8A6C: 85 1A        	sta	<L239+2+12
  6828 09:8A6E: A5 0D        	lda	<L239+1
  6829 09:8A70: 85 19        	sta	<L239+1+12
  6830 09:8A72: 2B           	pld
  6831 09:8A73: 3B           	tsc
  6832 09:8A74: 18           	clc
  6833 09:8A75: 69 18 00     	adc	#L239+12
  6834 09:8A78: 1B           	tcs
  6835 09:8A79: 98           	tya
  6836 09:8A7A: 6B           	rtl
  6837                        ;    }
  6838                        	.line	886
  6839                        ;
  6840                        ;  /* Offset */
  6841                        ;  current_record->FileOffset = (DWORD) file_offse
  Sat Jul 10 2021  1:15                                                Page 128


                    t;
  6842                        L10187:
  6843                        	.line	889
  6844 09:8A7B: A0 00 00     	ldy	#$0
  6845 09:8A7E: A5 14        	lda	<L239+file_offset_0
  6846 09:8A80: 10 01        	bpl	L244
  6847 09:8A82: 88           	dey
  6848                        L244:
  6849 09:8A83: 85 01        	sta	<R0
  6850 09:8A85: 84 03        	sty	<R0+2
  6851 09:8A87: A5 01        	lda	<R0
  6852 09:8A89: 87 09        	sta	[<L240+current_record_1]
  6853 09:8A8B: A5 03        	lda	<R0+2
  6854 09:8A8D: A0 02 00     	ldy	#$2
  6855 09:8A90: 97 09        	sta	[<L240+current_record_1],Y
  6856                        ;  current_record->SegmentOffset = (DWORD) segment
                    _offset;
  6857                        	.line	890
  6858 09:8A92: A0 00 00     	ldy	#$0
  6859 09:8A95: A5 16        	lda	<L239+segment_offset_0
  6860 09:8A97: 10 01        	bpl	L245
  6861 09:8A99: 88           	dey
  6862                        L245:
  6863 09:8A9A: 85 01        	sta	<R0
  6864 09:8A9C: 84 03        	sty	<R0+2
  6865 09:8A9E: A5 01        	lda	<R0
  6866 09:8AA0: A0 04 00     	ldy	#$4
  6867 09:8AA3: 97 09        	sta	[<L240+current_record_1],Y
  6868 09:8AA5: A5 03        	lda	<R0+2
  6869 09:8AA7: A0 06 00     	ldy	#$6
  6870 09:8AAA: 97 09        	sta	[<L240+current_record_1],Y
  6871                        ;
  6872                        ;  /* Operation Code : 0xF2 */
  6873                        ;  current_record->operation_code = data[0];
  6874                        	.line	893
  6875 09:8AAC: E2 20        	sep	#$20
  6876                        	longa	off
  6877 09:8AAE: A7 10        	lda	[<L239+data_0]
  6878 09:8AB0: A0 08 00     	ldy	#$8
  6879 09:8AB3: 97 09        	sta	[<L240+current_record_1],Y
  6880 09:8AB5: C2 20        	rep	#$20
  6881                        	longa	on
  6882                        ;
  6883                        ;  /** Zone de Data ou de Code **/
  6884                        ;  memcpy(&current_record->ByteCnt,&data[1],sizeof
                    (DWORD));
  6885                        	.line	896
  6886 09:8AB7: F4 04 00     	pea	#<$4
  6887 09:8ABA: 18           	clc
  6888 09:8ABB: A9 01 00     	lda	#$1
  6889 09:8ABE: 65 10        	adc	<L239+data_0
  6890 09:8AC0: 85 01        	sta	<R0
  6891 09:8AC2: A9 00 00     	lda	#$0
  6892 09:8AC5: 65 12        	adc	<L239+data_0+2
  6893 09:8AC7: 85 03        	sta	<R0+2
  6894 09:8AC9: D4 03        	pei	<R0+2
  6895 09:8ACB: D4 01        	pei	<R0
  6896 09:8ACD: 18           	clc
  Sat Jul 10 2021  1:15                                                Page 129


  6897 09:8ACE: A9 09 00     	lda	#$9
  6898 09:8AD1: 65 09        	adc	<L240+current_record_1
  6899 09:8AD3: 85 05        	sta	<R1
  6900 09:8AD5: A9 00 00     	lda	#$0
  6901 09:8AD8: 65 0B        	adc	<L240+current_record_1+2
  6902 09:8ADA: 85 07        	sta	<R1+2
  6903 09:8ADC: D4 07        	pei	<R1+2
  6904 09:8ADE: D4 05        	pei	<R1
  6905 09:8AE0: 22 xx xx xx  	jsl	~~memcpy
  6906                        ;
  6907                        ;  /* Allocation mémoire */
  6908                        ;  current_record->data = (unsigned char *) k_call
                    oc(current_record->ByteCnt,sizeof(unsigned char));
  6909                        	.line	899
  6910 09:8AE4: F4 01 00     	pea	#<$1
  6911 09:8AE7: A0 09 00     	ldy	#$9
  6912 09:8AEA: B7 09        	lda	[<L240+current_record_1],Y
  6913 09:8AEC: 48           	pha
  6914 09:8AED: 22 xx xx xx  	jsl	~~k_calloc
  6915 09:8AF1: 85 01        	sta	<R0
  6916 09:8AF3: 86 03        	stx	<R0+2
  6917 09:8AF5: A5 01        	lda	<R0
  6918 09:8AF7: A0 0D 00     	ldy	#$d
  6919 09:8AFA: 97 09        	sta	[<L240+current_record_1],Y
  6920 09:8AFC: A5 03        	lda	<R0+2
  6921 09:8AFE: A0 0F 00     	ldy	#$f
  6922 09:8B01: 97 09        	sta	[<L240+current_record_1],Y
  6923                        ;  if(current_record->data == NULL)
  6924                        	.line	900
  6925                        ;    {
  6926 09:8B03: A0 0D 00     	ldy	#$d
  6927 09:8B06: B7 09        	lda	[<L240+current_record_1],Y
  6928 09:8B08: A0 0F 00     	ldy	#$f
  6929 09:8B0B: 17 09        	ora	[<L240+current_record_1],Y
  6930 09:8B0D: F0 03        	beq	L246
  6931 09:8B0F: 82 12 00     	brl	L10188
  6932                        L246:
  6933                        	.line	901
  6934                        ;      //printf("Error : Impossible to allocate me
                    mory to process Segment Body Record LCONST : %d bytes requir
                    ed.\n",current_record->ByteCnt);
  6935                        ;      mem_free_LCONST(current_record);
  6936                        	.line	903
  6937 09:8B12: D4 0B        	pei	<L240+current_record_1+2
  6938 09:8B14: D4 09        	pei	<L240+current_record_1
  6939 09:8B16: 22 2E B0 09  	jsl	~~mem_free_LCONST
  6940                        ;      return(NULL);
  6941                        	.line	904
  6942 09:8B1A: A9 00 00     	lda	#$0
  6943 09:8B1D: AA           	tax
  6944 09:8B1E: A9 00 00     	lda	#$0
  6945 09:8B21: 82 45 FF     	brl	L243
  6946                        ;    }
  6947                        	.line	905
  6948                        ;  
  6949                        ;  /* Copie les Data */
  6950                        ;  memcpy(current_record->data,&data[5],current_re
                    cord->ByteCnt);
  Sat Jul 10 2021  1:15                                                Page 130


  6951                        L10188:
  6952                        	.line	908
  6953 09:8B24: A0 09 00     	ldy	#$9
  6954 09:8B27: B7 09        	lda	[<L240+current_record_1],Y
  6955 09:8B29: 48           	pha
  6956 09:8B2A: 18           	clc
  6957 09:8B2B: A9 05 00     	lda	#$5
  6958 09:8B2E: 65 10        	adc	<L239+data_0
  6959 09:8B30: 85 01        	sta	<R0
  6960 09:8B32: A9 00 00     	lda	#$0
  6961 09:8B35: 65 12        	adc	<L239+data_0+2
  6962 09:8B37: 85 03        	sta	<R0+2
  6963 09:8B39: D4 03        	pei	<R0+2
  6964 09:8B3B: D4 01        	pei	<R0
  6965 09:8B3D: A0 0F 00     	ldy	#$f
  6966 09:8B40: B7 09        	lda	[<L240+current_record_1],Y
  6967 09:8B42: 48           	pha
  6968 09:8B43: A0 0D 00     	ldy	#$d
  6969 09:8B46: B7 09        	lda	[<L240+current_record_1],Y
  6970 09:8B48: 48           	pha
  6971 09:8B49: 22 xx xx xx  	jsl	~~memcpy
  6972                        ;
  6973                        ;  /* Renvoie la structure */
  6974                        ;  *record_length_rtn = 1 + sizeof(DWORD) + curren
                    t_record->ByteCnt;
  6975                        	.line	911
  6976 09:8B4D: 18           	clc
  6977 09:8B4E: A9 05 00     	lda	#$5
  6978 09:8B51: A0 09 00     	ldy	#$9
  6979 09:8B54: 77 09        	adc	[<L240+current_record_1],Y
  6980 09:8B56: 85 01        	sta	<R0
  6981 09:8B58: A9 00 00     	lda	#$0
  6982 09:8B5B: A0 0B 00     	ldy	#$b
  6983 09:8B5E: 77 09        	adc	[<L240+current_record_1],Y
  6984 09:8B60: 85 03        	sta	<R0+2
  6985 09:8B62: A5 01        	lda	<R0
  6986 09:8B64: 87 18        	sta	[<L239+record_length_rtn_0]
  6987                        ;  return(current_record);
  6988                        	.line	912
  6989 09:8B66: A6 0B        	ldx	<L240+current_record_1+2
  6990 09:8B68: A5 09        	lda	<L240+current_record_1
  6991 09:8B6A: 82 FC FE     	brl	L243
  6992                        ;}
  6993                        	.line	913
  6994                        	.endblock	913
  6995             0000000C   L239	equ	12
  6996             00000009   L240	equ	9
  6997 09:8B6D:              	ends
  6998                        	efunc
  6999                        	.endfunc	913,9,12
  7000                        	.line	913
  7001                        ;
  7002                        ;
  7003                        ;/************************************************
                    *****/
  7004                        ;/*  DecodeRecordLEXPR() :  Décodage du Record LEX
                    PR. */
  7005                        ;/************************************************
  Sat Jul 10 2021  1:15                                                Page 131


                    *****/
  7006                        ;static void *DecodeRecordLEXPR(unsigned char *dat
                    a, int file_offset, int segment_offset, int *record_length_r
                    tn)
  7007                        ;{
  7008                        	.line	919
  7009                        	.line	920
  7010                        	LOADER
  7011                        	func
  7012                        	.function	920
  7013                        ~~DecodeRecordLEXPR:
  7014                        	longa	on
  7015                        	longi	on
  7016 09:8B6D: 3B           	tsc
  7017 09:8B6E: 38           	sec
  7018 09:8B6F: E9 08 00     	sbc	#L247
  7019 09:8B72: 1B           	tcs
  7020 09:8B73: 0B           	phd
  7021 09:8B74: 5B           	tcd
  7022             00000004   data_0	set	4
  7023             00000008   file_offset_0	set	8
  7024             0000000A   segment_offset_0	set	10
  7025             0000000C   record_length_rtn_0	set	12
  7026                        	.block	920
  7027                        ;  struct record_LEXPR *current_record;
  7028                        ;
  7029                        ;  /* Allocation mémoire */
  7030                        ;  current_record = (struct record_LEXPR *) k_call
                    oc(1,sizeof(struct record_LEXPR));
  7031             00000000   current_record_1	set	0
  7032                        	.sym	current_record,0,138,1,32,114
  7033                        	.sym	data,4,142,6,32
  7034                        	.sym	file_offset,8,5,6,16
  7035                        	.sym	segment_offset,10,5,6,16
  7036                        	.sym	record_length_rtn,12,133,6,32
  7037                        	.line	924
  7038 09:8B75: F4 09 00     	pea	#<$9
  7039 09:8B78: F4 01 00     	pea	#<$1
  7040 09:8B7B: 22 xx xx xx  	jsl	~~k_calloc
  7041 09:8B7F: 85 05        	sta	<L248+current_record_1
  7042 09:8B81: 86 07        	stx	<L248+current_record_1+2
  7043                        ;  if(current_record == NULL)
  7044                        	.line	925
  7045                        ;    {
  7046 09:8B83: A5 05        	lda	<L248+current_record_1
  7047 09:8B85: 05 07        	ora	<L248+current_record_1+2
  7048 09:8B87: F0 03        	beq	L250
  7049 09:8B89: 82 19 00     	brl	L10189
  7050                        L250:
  7051                        	.line	926
  7052                        ;      //printf("Error : Impossible to allocate me
                    mory to process Segment Body Record.\n");
  7053                        ;      return(NULL);
  7054                        	.line	928
  7055 09:8B8C: A9 00 00     	lda	#$0
  7056 09:8B8F: AA           	tax
  7057 09:8B90: A9 00 00     	lda	#$0
  7058                        L251:
  Sat Jul 10 2021  1:15                                                Page 132


  7059 09:8B93: A8           	tay
  7060 09:8B94: A5 0A        	lda	<L247+2
  7061 09:8B96: 85 16        	sta	<L247+2+12
  7062 09:8B98: A5 09        	lda	<L247+1
  7063 09:8B9A: 85 15        	sta	<L247+1+12
  7064 09:8B9C: 2B           	pld
  7065 09:8B9D: 3B           	tsc
  7066 09:8B9E: 18           	clc
  7067 09:8B9F: 69 14 00     	adc	#L247+12
  7068 09:8BA2: 1B           	tcs
  7069 09:8BA3: 98           	tya
  7070 09:8BA4: 6B           	rtl
  7071                        ;    }
  7072                        	.line	929
  7073                        ;
  7074                        ;  /* Offset */
  7075                        ;  current_record->FileOffset = (DWORD) file_offse
                    t;
  7076                        L10189:
  7077                        	.line	932
  7078 09:8BA5: A0 00 00     	ldy	#$0
  7079 09:8BA8: A5 10        	lda	<L247+file_offset_0
  7080 09:8BAA: 10 01        	bpl	L252
  7081 09:8BAC: 88           	dey
  7082                        L252:
  7083 09:8BAD: 85 01        	sta	<R0
  7084 09:8BAF: 84 03        	sty	<R0+2
  7085 09:8BB1: A5 01        	lda	<R0
  7086 09:8BB3: 87 05        	sta	[<L248+current_record_1]
  7087 09:8BB5: A5 03        	lda	<R0+2
  7088 09:8BB7: A0 02 00     	ldy	#$2
  7089 09:8BBA: 97 05        	sta	[<L248+current_record_1],Y
  7090                        ;  current_record->SegmentOffset = (DWORD) segment
                    _offset;
  7091                        	.line	933
  7092 09:8BBC: A0 00 00     	ldy	#$0
  7093 09:8BBF: A5 12        	lda	<L247+segment_offset_0
  7094 09:8BC1: 10 01        	bpl	L253
  7095 09:8BC3: 88           	dey
  7096                        L253:
  7097 09:8BC4: 85 01        	sta	<R0
  7098 09:8BC6: 84 03        	sty	<R0+2
  7099 09:8BC8: A5 01        	lda	<R0
  7100 09:8BCA: A0 04 00     	ldy	#$4
  7101 09:8BCD: 97 05        	sta	[<L248+current_record_1],Y
  7102 09:8BCF: A5 03        	lda	<R0+2
  7103 09:8BD1: A0 06 00     	ldy	#$6
  7104 09:8BD4: 97 05        	sta	[<L248+current_record_1],Y
  7105                        ;
  7106                        ;  /* Operation Code */
  7107                        ;  current_record->operation_code = data[0];
  7108                        	.line	936
  7109 09:8BD6: E2 20        	sep	#$20
  7110                        	longa	off
  7111 09:8BD8: A7 0C        	lda	[<L247+data_0]
  7112 09:8BDA: A0 08 00     	ldy	#$8
  7113 09:8BDD: 97 05        	sta	[<L248+current_record_1],Y
  7114 09:8BDF: C2 20        	rep	#$20
  Sat Jul 10 2021  1:15                                                Page 133


  7115                        	longa	on
  7116                        ;
  7117                        ;  /* Renvoie la structure */
  7118                        ;  return(current_record);
  7119                        	.line	939
  7120 09:8BE1: A6 07        	ldx	<L248+current_record_1+2
  7121 09:8BE3: A5 05        	lda	<L248+current_record_1
  7122 09:8BE5: 82 AB FF     	brl	L251
  7123                        ;}
  7124                        	.line	940
  7125                        	.endblock	940
  7126             00000008   L247	equ	8
  7127             00000005   L248	equ	5
  7128 09:8BE8:              	ends
  7129                        	efunc
  7130                        	.endfunc	940,5,8
  7131                        	.line	940
  7132                        ;
  7133                        ;
  7134                        ;/************************************************
                    *****/
  7135                        ;/*  DecodeRecordENTRY() :  Décodage du Record ENT
                    RY. */
  7136                        ;/************************************************
                    *****/
  7137                        ;static void *DecodeRecordENTRY(unsigned char *dat
                    a, int file_offset, int segment_offset, int *record_length_r
                    tn)
  7138                        ;{
  7139                        	.line	946
  7140                        	.line	947
  7141                        	LOADER
  7142                        	func
  7143                        	.function	947
  7144                        ~~DecodeRecordENTRY:
  7145                        	longa	on
  7146                        	longi	on
  7147 09:8BE8: 3B           	tsc
  7148 09:8BE9: 38           	sec
  7149 09:8BEA: E9 08 00     	sbc	#L254
  7150 09:8BED: 1B           	tcs
  7151 09:8BEE: 0B           	phd
  7152 09:8BEF: 5B           	tcd
  7153             00000004   data_0	set	4
  7154             00000008   file_offset_0	set	8
  7155             0000000A   segment_offset_0	set	10
  7156             0000000C   record_length_rtn_0	set	12
  7157                        	.block	947
  7158                        ;  struct record_ENTRY *current_record;
  7159                        ;
  7160                        ;  /* Allocation mémoire */
  7161                        ;  current_record = (struct record_ENTRY *) k_call
                    oc(1,sizeof(struct record_ENTRY));
  7162             00000000   current_record_1	set	0
  7163                        	.sym	current_record,0,138,1,32,115
  7164                        	.sym	data,4,142,6,32
  7165                        	.sym	file_offset,8,5,6,16
  7166                        	.sym	segment_offset,10,5,6,16
  Sat Jul 10 2021  1:15                                                Page 134


  7167                        	.sym	record_length_rtn,12,133,6,32
  7168                        	.line	951
  7169 09:8BF0: F4 09 00     	pea	#<$9
  7170 09:8BF3: F4 01 00     	pea	#<$1
  7171 09:8BF6: 22 xx xx xx  	jsl	~~k_calloc
  7172 09:8BFA: 85 05        	sta	<L255+current_record_1
  7173 09:8BFC: 86 07        	stx	<L255+current_record_1+2
  7174                        ;  if(current_record == NULL)
  7175                        	.line	952
  7176                        ;    {
  7177 09:8BFE: A5 05        	lda	<L255+current_record_1
  7178 09:8C00: 05 07        	ora	<L255+current_record_1+2
  7179 09:8C02: F0 03        	beq	L257
  7180 09:8C04: 82 19 00     	brl	L10190
  7181                        L257:
  7182                        	.line	953
  7183                        ;      //printf("Error : Impossible to allocate me
                    mory to process Segment Body Record.\n");
  7184                        ;      return(NULL);
  7185                        	.line	955
  7186 09:8C07: A9 00 00     	lda	#$0
  7187 09:8C0A: AA           	tax
  7188 09:8C0B: A9 00 00     	lda	#$0
  7189                        L258:
  7190 09:8C0E: A8           	tay
  7191 09:8C0F: A5 0A        	lda	<L254+2
  7192 09:8C11: 85 16        	sta	<L254+2+12
  7193 09:8C13: A5 09        	lda	<L254+1
  7194 09:8C15: 85 15        	sta	<L254+1+12
  7195 09:8C17: 2B           	pld
  7196 09:8C18: 3B           	tsc
  7197 09:8C19: 18           	clc
  7198 09:8C1A: 69 14 00     	adc	#L254+12
  7199 09:8C1D: 1B           	tcs
  7200 09:8C1E: 98           	tya
  7201 09:8C1F: 6B           	rtl
  7202                        ;    }
  7203                        	.line	956
  7204                        ;
  7205                        ;  /* Offset */
  7206                        ;  current_record->FileOffset = (DWORD) file_offse
                    t;
  7207                        L10190:
  7208                        	.line	959
  7209 09:8C20: A0 00 00     	ldy	#$0
  7210 09:8C23: A5 10        	lda	<L254+file_offset_0
  7211 09:8C25: 10 01        	bpl	L259
  7212 09:8C27: 88           	dey
  7213                        L259:
  7214 09:8C28: 85 01        	sta	<R0
  7215 09:8C2A: 84 03        	sty	<R0+2
  7216 09:8C2C: A5 01        	lda	<R0
  7217 09:8C2E: 87 05        	sta	[<L255+current_record_1]
  7218 09:8C30: A5 03        	lda	<R0+2
  7219 09:8C32: A0 02 00     	ldy	#$2
  7220 09:8C35: 97 05        	sta	[<L255+current_record_1],Y
  7221                        ;  current_record->SegmentOffset = (DWORD) segment
                    _offset;
  Sat Jul 10 2021  1:15                                                Page 135


  7222                        	.line	960
  7223 09:8C37: A0 00 00     	ldy	#$0
  7224 09:8C3A: A5 12        	lda	<L254+segment_offset_0
  7225 09:8C3C: 10 01        	bpl	L260
  7226 09:8C3E: 88           	dey
  7227                        L260:
  7228 09:8C3F: 85 01        	sta	<R0
  7229 09:8C41: 84 03        	sty	<R0+2
  7230 09:8C43: A5 01        	lda	<R0
  7231 09:8C45: A0 04 00     	ldy	#$4
  7232 09:8C48: 97 05        	sta	[<L255+current_record_1],Y
  7233 09:8C4A: A5 03        	lda	<R0+2
  7234 09:8C4C: A0 06 00     	ldy	#$6
  7235 09:8C4F: 97 05        	sta	[<L255+current_record_1],Y
  7236                        ;
  7237                        ;  /* Operation Code */
  7238                        ;  current_record->operation_code = data[0];
  7239                        	.line	963
  7240 09:8C51: E2 20        	sep	#$20
  7241                        	longa	off
  7242 09:8C53: A7 0C        	lda	[<L254+data_0]
  7243 09:8C55: A0 08 00     	ldy	#$8
  7244 09:8C58: 97 05        	sta	[<L255+current_record_1],Y
  7245 09:8C5A: C2 20        	rep	#$20
  7246                        	longa	on
  7247                        ;
  7248                        ;  /* Renvoie la structure */
  7249                        ;  return(current_record);
  7250                        	.line	966
  7251 09:8C5C: A6 07        	ldx	<L255+current_record_1+2
  7252 09:8C5E: A5 05        	lda	<L255+current_record_1
  7253 09:8C60: 82 AB FF     	brl	L258
  7254                        ;}
  7255                        	.line	967
  7256                        	.endblock	967
  7257             00000008   L254	equ	8
  7258             00000005   L255	equ	5
  7259 09:8C63:              	ends
  7260                        	efunc
  7261                        	.endfunc	967,5,8
  7262                        	.line	967
  7263                        ;
  7264                        ;
  7265                        ;/************************************************
                    *******/
  7266                        ;/*  DecodeRecordcRELOC() :  Décodage du Record cR
                    ELOC. */
  7267                        ;/************************************************
                    *******/
  7268                        ;static void *DecodeRecordcRELOC(unsigned char *da
                    ta, int file_offset, int segment_offset, int *record_length_
                    rtn)
  7269                        ;{
  7270                        	.line	973
  7271                        	.line	974
  7272                        	LOADER
  7273                        	func
  7274                        	.function	974
  Sat Jul 10 2021  1:15                                                Page 136


  7275                        ~~DecodeRecordcRELOC:
  7276                        	longa	on
  7277                        	longi	on
  7278 09:8C63: 3B           	tsc
  7279 09:8C64: 38           	sec
  7280 09:8C65: E9 0A 00     	sbc	#L261
  7281 09:8C68: 1B           	tcs
  7282 09:8C69: 0B           	phd
  7283 09:8C6A: 5B           	tcd
  7284             00000004   data_0	set	4
  7285             00000008   file_offset_0	set	8
  7286             0000000A   segment_offset_0	set	10
  7287             0000000C   record_length_rtn_0	set	12
  7288                        	.block	974
  7289                        ;  WORD one_word;
  7290                        ;  struct record_cRELOC *current_record;
  7291                        ;
  7292                        ;  /* Allocation mémoire */
  7293                        ;  current_record = (struct record_cRELOC *) k_cal
                    loc(1,sizeof(struct record_cRELOC));
  7294             00000000   one_word_1	set	0
  7295             00000002   current_record_1	set	2
  7296                        	.sym	one_word,0,5,1,16
  7297                        	.sym	current_record,2,138,1,32,116
  7298                        	.sym	data,4,142,6,32
  7299                        	.sym	file_offset,8,5,6,16
  7300                        	.sym	segment_offset,10,5,6,16
  7301                        	.sym	record_length_rtn,12,133,6,32
  7302                        	.line	979
  7303 09:8C6B: F4 13 00     	pea	#<$13
  7304 09:8C6E: F4 01 00     	pea	#<$1
  7305 09:8C71: 22 xx xx xx  	jsl	~~k_calloc
  7306 09:8C75: 85 07        	sta	<L262+current_record_1
  7307 09:8C77: 86 09        	stx	<L262+current_record_1+2
  7308                        ;  if(current_record == NULL)
  7309                        	.line	980
  7310                        ;    {
  7311 09:8C79: A5 07        	lda	<L262+current_record_1
  7312 09:8C7B: 05 09        	ora	<L262+current_record_1+2
  7313 09:8C7D: F0 03        	beq	L264
  7314 09:8C7F: 82 19 00     	brl	L10191
  7315                        L264:
  7316                        	.line	981
  7317                        ;      //printf("Error : Impossible to allocate me
                    mory to process Segment Body Record.\n");
  7318                        ;      return(NULL);
  7319                        	.line	983
  7320 09:8C82: A9 00 00     	lda	#$0
  7321 09:8C85: AA           	tax
  7322 09:8C86: A9 00 00     	lda	#$0
  7323                        L265:
  7324 09:8C89: A8           	tay
  7325 09:8C8A: A5 0C        	lda	<L261+2
  7326 09:8C8C: 85 18        	sta	<L261+2+12
  7327 09:8C8E: A5 0B        	lda	<L261+1
  7328 09:8C90: 85 17        	sta	<L261+1+12
  7329 09:8C92: 2B           	pld
  7330 09:8C93: 3B           	tsc
  Sat Jul 10 2021  1:15                                                Page 137


  7331 09:8C94: 18           	clc
  7332 09:8C95: 69 16 00     	adc	#L261+12
  7333 09:8C98: 1B           	tcs
  7334 09:8C99: 98           	tya
  7335 09:8C9A: 6B           	rtl
  7336                        ;    }
  7337                        	.line	984
  7338                        ;
  7339                        ;  /* Offset */
  7340                        ;  current_record->FileOffset = (DWORD) file_offse
                    t;
  7341                        L10191:
  7342                        	.line	987
  7343 09:8C9B: A0 00 00     	ldy	#$0
  7344 09:8C9E: A5 12        	lda	<L261+file_offset_0
  7345 09:8CA0: 10 01        	bpl	L266
  7346 09:8CA2: 88           	dey
  7347                        L266:
  7348 09:8CA3: 85 01        	sta	<R0
  7349 09:8CA5: 84 03        	sty	<R0+2
  7350 09:8CA7: A5 01        	lda	<R0
  7351 09:8CA9: 87 07        	sta	[<L262+current_record_1]
  7352 09:8CAB: A5 03        	lda	<R0+2
  7353 09:8CAD: A0 02 00     	ldy	#$2
  7354 09:8CB0: 97 07        	sta	[<L262+current_record_1],Y
  7355                        ;  current_record->SegmentOffset = (DWORD) segment
                    _offset;
  7356                        	.line	988
  7357 09:8CB2: A0 00 00     	ldy	#$0
  7358 09:8CB5: A5 14        	lda	<L261+segment_offset_0
  7359 09:8CB7: 10 01        	bpl	L267
  7360 09:8CB9: 88           	dey
  7361                        L267:
  7362 09:8CBA: 85 01        	sta	<R0
  7363 09:8CBC: 84 03        	sty	<R0+2
  7364 09:8CBE: A5 01        	lda	<R0
  7365 09:8CC0: A0 04 00     	ldy	#$4
  7366 09:8CC3: 97 07        	sta	[<L262+current_record_1],Y
  7367 09:8CC5: A5 03        	lda	<R0+2
  7368 09:8CC7: A0 06 00     	ldy	#$6
  7369 09:8CCA: 97 07        	sta	[<L262+current_record_1],Y
  7370                        ;
  7371                        ;  /* Operation Code */
  7372                        ;  current_record->operation_code = data[0];
  7373                        	.line	991
  7374 09:8CCC: E2 20        	sep	#$20
  7375                        	longa	off
  7376 09:8CCE: A7 0E        	lda	[<L261+data_0]
  7377 09:8CD0: A0 08 00     	ldy	#$8
  7378 09:8CD3: 97 07        	sta	[<L262+current_record_1],Y
  7379 09:8CD5: C2 20        	rep	#$20
  7380                        	longa	on
  7381                        ;
  7382                        ;  /* Récupère les données */
  7383                        ;  current_record->ByteCnt = data[1];
  7384                        	.line	994
  7385 09:8CD7: E2 20        	sep	#$20
  7386                        	longa	off
  Sat Jul 10 2021  1:15                                                Page 138


  7387 09:8CD9: A0 01 00     	ldy	#$1
  7388 09:8CDC: B7 0E        	lda	[<L261+data_0],Y
  7389 09:8CDE: A0 09 00     	ldy	#$9
  7390 09:8CE1: 97 07        	sta	[<L262+current_record_1],Y
  7391 09:8CE3: C2 20        	rep	#$20
  7392                        	longa	on
  7393                        ;  current_record->BitShiftCnt = data[2];
  7394                        	.line	995
  7395 09:8CE5: E2 20        	sep	#$20
  7396                        	longa	off
  7397 09:8CE7: A0 02 00     	ldy	#$2
  7398 09:8CEA: B7 0E        	lda	[<L261+data_0],Y
  7399 09:8CEC: A0 0A 00     	ldy	#$a
  7400 09:8CEF: 97 07        	sta	[<L262+current_record_1],Y
  7401 09:8CF1: C2 20        	rep	#$20
  7402                        	longa	on
  7403                        ;  memcpy(&one_word,&data[3],sizeof(WORD));
  7404                        	.line	996
  7405 09:8CF3: F4 02 00     	pea	#<$2
  7406 09:8CF6: 18           	clc
  7407 09:8CF7: A9 03 00     	lda	#$3
  7408 09:8CFA: 65 0E        	adc	<L261+data_0
  7409 09:8CFC: 85 01        	sta	<R0
  7410 09:8CFE: A9 00 00     	lda	#$0
  7411 09:8D01: 65 10        	adc	<L261+data_0+2
  7412 09:8D03: 85 03        	sta	<R0+2
  7413 09:8D05: D4 03        	pei	<R0+2
  7414 09:8D07: D4 01        	pei	<R0
  7415 09:8D09: F4 00 00     	pea	#0
  7416 09:8D0C: 18           	clc
  7417 09:8D0D: 7B           	tdc
  7418 09:8D0E: 69 05 00     	adc	#<L262+one_word_1
  7419 09:8D11: 48           	pha
  7420 09:8D12: 22 xx xx xx  	jsl	~~memcpy
  7421                        ;  current_record->OffsetPatch = (DWORD) one_word;
  7422                        	.line	997
  7423 09:8D16: A0 00 00     	ldy	#$0
  7424 09:8D19: A5 05        	lda	<L262+one_word_1
  7425 09:8D1B: 10 01        	bpl	L268
  7426 09:8D1D: 88           	dey
  7427                        L268:
  7428 09:8D1E: 85 01        	sta	<R0
  7429 09:8D20: 84 03        	sty	<R0+2
  7430 09:8D22: A5 01        	lda	<R0
  7431 09:8D24: A0 0B 00     	ldy	#$b
  7432 09:8D27: 97 07        	sta	[<L262+current_record_1],Y
  7433 09:8D29: A5 03        	lda	<R0+2
  7434 09:8D2B: A0 0D 00     	ldy	#$d
  7435 09:8D2E: 97 07        	sta	[<L262+current_record_1],Y
  7436                        ;  memcpy(&one_word,&data[5],sizeof(WORD));
  7437                        	.line	998
  7438 09:8D30: F4 02 00     	pea	#<$2
  7439 09:8D33: 18           	clc
  7440 09:8D34: A9 05 00     	lda	#$5
  7441 09:8D37: 65 0E        	adc	<L261+data_0
  7442 09:8D39: 85 01        	sta	<R0
  7443 09:8D3B: A9 00 00     	lda	#$0
  7444 09:8D3E: 65 10        	adc	<L261+data_0+2
  Sat Jul 10 2021  1:15                                                Page 139


  7445 09:8D40: 85 03        	sta	<R0+2
  7446 09:8D42: D4 03        	pei	<R0+2
  7447 09:8D44: D4 01        	pei	<R0
  7448 09:8D46: F4 00 00     	pea	#0
  7449 09:8D49: 18           	clc
  7450 09:8D4A: 7B           	tdc
  7451 09:8D4B: 69 05 00     	adc	#<L262+one_word_1
  7452 09:8D4E: 48           	pha
  7453 09:8D4F: 22 xx xx xx  	jsl	~~memcpy
  7454                        ;  current_record->OffsetReference = (DWORD) one_w
                    ord;
  7455                        	.line	999
  7456 09:8D53: A0 00 00     	ldy	#$0
  7457 09:8D56: A5 05        	lda	<L262+one_word_1
  7458 09:8D58: 10 01        	bpl	L269
  7459 09:8D5A: 88           	dey
  7460                        L269:
  7461 09:8D5B: 85 01        	sta	<R0
  7462 09:8D5D: 84 03        	sty	<R0+2
  7463 09:8D5F: A5 01        	lda	<R0
  7464 09:8D61: A0 0F 00     	ldy	#$f
  7465 09:8D64: 97 07        	sta	[<L262+current_record_1],Y
  7466 09:8D66: A5 03        	lda	<R0+2
  7467 09:8D68: A0 11 00     	ldy	#$11
  7468 09:8D6B: 97 07        	sta	[<L262+current_record_1],Y
  7469                        ;
  7470                        ;  /* Conserve ce RELOC */
  7471                        ;  AddReloc(current_record->ByteCnt,current_record
                    ->BitShiftCnt,current_record->OffsetPatch,current_record->Of
                    fsetReference,RECORD_cRELOC);
  7472                        	.line	1002
  7473 09:8D6D: F4 03 00     	pea	#<$3
  7474 09:8D70: A0 11 00     	ldy	#$11
  7475 09:8D73: B7 07        	lda	[<L262+current_record_1],Y
  7476 09:8D75: 48           	pha
  7477 09:8D76: A0 0F 00     	ldy	#$f
  7478 09:8D79: B7 07        	lda	[<L262+current_record_1],Y
  7479 09:8D7B: 48           	pha
  7480 09:8D7C: A0 0D 00     	ldy	#$d
  7481 09:8D7F: B7 07        	lda	[<L262+current_record_1],Y
  7482 09:8D81: 48           	pha
  7483 09:8D82: A0 0B 00     	ldy	#$b
  7484 09:8D85: B7 07        	lda	[<L262+current_record_1],Y
  7485 09:8D87: 48           	pha
  7486 09:8D88: A0 0A 00     	ldy	#$a
  7487 09:8D8B: B7 07        	lda	[<L262+current_record_1],Y
  7488 09:8D8D: 48           	pha
  7489 09:8D8E: A0 09 00     	ldy	#$9
  7490 09:8D91: B7 07        	lda	[<L262+current_record_1],Y
  7491 09:8D93: 48           	pha
  7492 09:8D94: 22 33 AC 09  	jsl	~~AddReloc
  7493                        ;
  7494                        ;  /* Renvoie la structure */
  7495                        ;  *record_length_rtn = 3*sizeof(BYTE) + 2*sizeof(
                    WORD);
  7496                        	.line	1005
  7497 09:8D98: A9 07 00     	lda	#$7
  7498 09:8D9B: 87 16        	sta	[<L261+record_length_rtn_0]
  Sat Jul 10 2021  1:15                                                Page 140


  7499                        ;  return(current_record);
  7500                        	.line	1006
  7501 09:8D9D: A6 09        	ldx	<L262+current_record_1+2
  7502 09:8D9F: A5 07        	lda	<L262+current_record_1
  7503 09:8DA1: 82 E5 FE     	brl	L265
  7504                        ;}
  7505                        	.line	1007
  7506                        	.endblock	1007
  7507             0000000A   L261	equ	10
  7508             00000005   L262	equ	5
  7509 09:8DA4:              	ends
  7510                        	efunc
  7511                        	.endfunc	1007,5,10
  7512                        	.line	1007
  7513                        ;
  7514                        ;
  7515                        ;/************************************************
                    *************/
  7516                        ;/*  DecodeRecordcINTERSEG() :  Décodage du Record
                     cINTERSEG. */
  7517                        ;/************************************************
                    *************/
  7518                        ;static void *DecodeRecordcINTERSEG(unsigned char 
                    *data, int file_offset, int segment_offset, int *record_leng
                    th_rtn)
  7519                        ;{
  7520                        	.line	1013
  7521                        	.line	1014
  7522                        	LOADER
  7523                        	func
  7524                        	.function	1014
  7525                        ~~DecodeRecordcINTERSEG:
  7526                        	longa	on
  7527                        	longi	on
  7528 09:8DA4: 3B           	tsc
  7529 09:8DA5: 38           	sec
  7530 09:8DA6: E9 0A 00     	sbc	#L270
  7531 09:8DA9: 1B           	tcs
  7532 09:8DAA: 0B           	phd
  7533 09:8DAB: 5B           	tcd
  7534             00000004   data_0	set	4
  7535             00000008   file_offset_0	set	8
  7536             0000000A   segment_offset_0	set	10
  7537             0000000C   record_length_rtn_0	set	12
  7538                        	.block	1014
  7539                        ;  WORD one_word;
  7540                        ;  struct record_cINTERSEG *current_record;
  7541                        ;
  7542                        ;  /* Allocation mémoire */
  7543                        ;  current_record = (struct record_cINTERSEG *) k_
                    calloc(1,sizeof(struct record_cINTERSEG));
  7544             00000000   one_word_1	set	0
  7545             00000002   current_record_1	set	2
  7546                        	.sym	one_word,0,5,1,16
  7547                        	.sym	current_record,2,138,1,32,117
  7548                        	.sym	data,4,142,6,32
  7549                        	.sym	file_offset,8,5,6,16
  7550                        	.sym	segment_offset,10,5,6,16
  Sat Jul 10 2021  1:15                                                Page 141


  7551                        	.sym	record_length_rtn,12,133,6,32
  7552                        	.line	1019
  7553 09:8DAC: F4 16 00     	pea	#<$16
  7554 09:8DAF: F4 01 00     	pea	#<$1
  7555 09:8DB2: 22 xx xx xx  	jsl	~~k_calloc
  7556 09:8DB6: 85 07        	sta	<L271+current_record_1
  7557 09:8DB8: 86 09        	stx	<L271+current_record_1+2
  7558                        ;  if(current_record == NULL)
  7559                        	.line	1020
  7560                        ;    {
  7561 09:8DBA: A5 07        	lda	<L271+current_record_1
  7562 09:8DBC: 05 09        	ora	<L271+current_record_1+2
  7563 09:8DBE: F0 03        	beq	L273
  7564 09:8DC0: 82 19 00     	brl	L10192
  7565                        L273:
  7566                        	.line	1021
  7567                        ;      //printf("Error : Impossible to allocate me
                    mory to process Segment Body Record.\n");
  7568                        ;      return(NULL);
  7569                        	.line	1023
  7570 09:8DC3: A9 00 00     	lda	#$0
  7571 09:8DC6: AA           	tax
  7572 09:8DC7: A9 00 00     	lda	#$0
  7573                        L274:
  7574 09:8DCA: A8           	tay
  7575 09:8DCB: A5 0C        	lda	<L270+2
  7576 09:8DCD: 85 18        	sta	<L270+2+12
  7577 09:8DCF: A5 0B        	lda	<L270+1
  7578 09:8DD1: 85 17        	sta	<L270+1+12
  7579 09:8DD3: 2B           	pld
  7580 09:8DD4: 3B           	tsc
  7581 09:8DD5: 18           	clc
  7582 09:8DD6: 69 16 00     	adc	#L270+12
  7583 09:8DD9: 1B           	tcs
  7584 09:8DDA: 98           	tya
  7585 09:8DDB: 6B           	rtl
  7586                        ;    }
  7587                        	.line	1024
  7588                        ;
  7589                        ;  /* Offset */
  7590                        ;  current_record->FileOffset = (DWORD) file_offse
                    t;
  7591                        L10192:
  7592                        	.line	1027
  7593 09:8DDC: A0 00 00     	ldy	#$0
  7594 09:8DDF: A5 12        	lda	<L270+file_offset_0
  7595 09:8DE1: 10 01        	bpl	L275
  7596 09:8DE3: 88           	dey
  7597                        L275:
  7598 09:8DE4: 85 01        	sta	<R0
  7599 09:8DE6: 84 03        	sty	<R0+2
  7600 09:8DE8: A5 01        	lda	<R0
  7601 09:8DEA: 87 07        	sta	[<L271+current_record_1]
  7602 09:8DEC: A5 03        	lda	<R0+2
  7603 09:8DEE: A0 02 00     	ldy	#$2
  7604 09:8DF1: 97 07        	sta	[<L271+current_record_1],Y
  7605                        ;  current_record->SegmentOffset = (DWORD) segment
                    _offset;
  Sat Jul 10 2021  1:15                                                Page 142


  7606                        	.line	1028
  7607 09:8DF3: A0 00 00     	ldy	#$0
  7608 09:8DF6: A5 14        	lda	<L270+segment_offset_0
  7609 09:8DF8: 10 01        	bpl	L276
  7610 09:8DFA: 88           	dey
  7611                        L276:
  7612 09:8DFB: 85 01        	sta	<R0
  7613 09:8DFD: 84 03        	sty	<R0+2
  7614 09:8DFF: A5 01        	lda	<R0
  7615 09:8E01: A0 04 00     	ldy	#$4
  7616 09:8E04: 97 07        	sta	[<L271+current_record_1],Y
  7617 09:8E06: A5 03        	lda	<R0+2
  7618 09:8E08: A0 06 00     	ldy	#$6
  7619 09:8E0B: 97 07        	sta	[<L271+current_record_1],Y
  7620                        ;
  7621                        ;  /* Operation Code */
  7622                        ;  current_record->operation_code = data[0];
  7623                        	.line	1031
  7624 09:8E0D: E2 20        	sep	#$20
  7625                        	longa	off
  7626 09:8E0F: A7 0E        	lda	[<L270+data_0]
  7627 09:8E11: A0 08 00     	ldy	#$8
  7628 09:8E14: 97 07        	sta	[<L271+current_record_1],Y
  7629 09:8E16: C2 20        	rep	#$20
  7630                        	longa	on
  7631                        ;
  7632                        ;  /* File Number toujours à 1 */
  7633                        ;  current_record->FileNum = 1;
  7634                        	.line	1034
  7635 09:8E18: A9 01 00     	lda	#$1
  7636 09:8E1B: A0 0F 00     	ldy	#$f
  7637 09:8E1E: 97 07        	sta	[<L271+current_record_1],Y
  7638                        ;
  7639                        ;  /** Récupère les informations **/
  7640                        ;  current_record->ByteCnt = data[1];
  7641                        	.line	1037
  7642 09:8E20: E2 20        	sep	#$20
  7643                        	longa	off
  7644 09:8E22: A0 01 00     	ldy	#$1
  7645 09:8E25: B7 0E        	lda	[<L270+data_0],Y
  7646 09:8E27: A0 09 00     	ldy	#$9
  7647 09:8E2A: 97 07        	sta	[<L271+current_record_1],Y
  7648 09:8E2C: C2 20        	rep	#$20
  7649                        	longa	on
  7650                        ;  current_record->BitShiftCnt = data[2];
  7651                        	.line	1038
  7652 09:8E2E: E2 20        	sep	#$20
  7653                        	longa	off
  7654 09:8E30: A0 02 00     	ldy	#$2
  7655 09:8E33: B7 0E        	lda	[<L270+data_0],Y
  7656 09:8E35: A0 0A 00     	ldy	#$a
  7657 09:8E38: 97 07        	sta	[<L271+current_record_1],Y
  7658 09:8E3A: C2 20        	rep	#$20
  7659                        	longa	on
  7660                        ;  memcpy(&one_word,&data[3],sizeof(WORD));
  7661                        	.line	1039
  7662 09:8E3C: F4 02 00     	pea	#<$2
  7663 09:8E3F: 18           	clc
  Sat Jul 10 2021  1:15                                                Page 143


  7664 09:8E40: A9 03 00     	lda	#$3
  7665 09:8E43: 65 0E        	adc	<L270+data_0
  7666 09:8E45: 85 01        	sta	<R0
  7667 09:8E47: A9 00 00     	lda	#$0
  7668 09:8E4A: 65 10        	adc	<L270+data_0+2
  7669 09:8E4C: 85 03        	sta	<R0+2
  7670 09:8E4E: D4 03        	pei	<R0+2
  7671 09:8E50: D4 01        	pei	<R0
  7672 09:8E52: F4 00 00     	pea	#0
  7673 09:8E55: 18           	clc
  7674 09:8E56: 7B           	tdc
  7675 09:8E57: 69 05 00     	adc	#<L271+one_word_1
  7676 09:8E5A: 48           	pha
  7677 09:8E5B: 22 xx xx xx  	jsl	~~memcpy
  7678                        ;  current_record->OffsetPatch = (DWORD) one_word;
  7679                        	.line	1040
  7680 09:8E5F: A0 00 00     	ldy	#$0
  7681 09:8E62: A5 05        	lda	<L271+one_word_1
  7682 09:8E64: 10 01        	bpl	L277
  7683 09:8E66: 88           	dey
  7684                        L277:
  7685 09:8E67: 85 01        	sta	<R0
  7686 09:8E69: 84 03        	sty	<R0+2
  7687 09:8E6B: A5 01        	lda	<R0
  7688 09:8E6D: A0 0B 00     	ldy	#$b
  7689 09:8E70: 97 07        	sta	[<L271+current_record_1],Y
  7690 09:8E72: A5 03        	lda	<R0+2
  7691 09:8E74: A0 0D 00     	ldy	#$d
  7692 09:8E77: 97 07        	sta	[<L271+current_record_1],Y
  7693                        ;  current_record->SegNum = data[5];
  7694                        	.line	1041
  7695 09:8E79: E2 20        	sep	#$20
  7696                        	longa	off
  7697 09:8E7B: A0 05 00     	ldy	#$5
  7698 09:8E7E: B7 0E        	lda	[<L270+data_0],Y
  7699 09:8E80: A0 11 00     	ldy	#$11
  7700 09:8E83: 97 07        	sta	[<L271+current_record_1],Y
  7701 09:8E85: C2 20        	rep	#$20
  7702                        	longa	on
  7703                        ;  memcpy(&one_word,&data[6],sizeof(WORD));
  7704                        	.line	1042
  7705 09:8E87: F4 02 00     	pea	#<$2
  7706 09:8E8A: 18           	clc
  7707 09:8E8B: A9 06 00     	lda	#$6
  7708 09:8E8E: 65 0E        	adc	<L270+data_0
  7709 09:8E90: 85 01        	sta	<R0
  7710 09:8E92: A9 00 00     	lda	#$0
  7711 09:8E95: 65 10        	adc	<L270+data_0+2
  7712 09:8E97: 85 03        	sta	<R0+2
  7713 09:8E99: D4 03        	pei	<R0+2
  7714 09:8E9B: D4 01        	pei	<R0
  7715 09:8E9D: F4 00 00     	pea	#0
  7716 09:8EA0: 18           	clc
  7717 09:8EA1: 7B           	tdc
  7718 09:8EA2: 69 05 00     	adc	#<L271+one_word_1
  7719 09:8EA5: 48           	pha
  7720 09:8EA6: 22 xx xx xx  	jsl	~~memcpy
  7721                        ;  current_record->OffsetReference = (DWORD) one_w
  Sat Jul 10 2021  1:15                                                Page 144


                    ord;
  7722                        	.line	1043
  7723 09:8EAA: A0 00 00     	ldy	#$0
  7724 09:8EAD: A5 05        	lda	<L271+one_word_1
  7725 09:8EAF: 10 01        	bpl	L278
  7726 09:8EB1: 88           	dey
  7727                        L278:
  7728 09:8EB2: 85 01        	sta	<R0
  7729 09:8EB4: 84 03        	sty	<R0+2
  7730 09:8EB6: A5 01        	lda	<R0
  7731 09:8EB8: A0 12 00     	ldy	#$12
  7732 09:8EBB: 97 07        	sta	[<L271+current_record_1],Y
  7733 09:8EBD: A5 03        	lda	<R0+2
  7734 09:8EBF: A0 14 00     	ldy	#$14
  7735 09:8EC2: 97 07        	sta	[<L271+current_record_1],Y
  7736                        ;
  7737                        ;  /* Conserve ce INTERSEG */
  7738                        ;  AddInterseg(current_record->ByteCnt,current_rec
                    ord->BitShiftCnt,current_record->OffsetPatch,current_record-
                    >OffsetReference,current_record->FileNum,current_record->Seg
                    Num,RECORD_cINTERSEG);
  7739                        	.line	1046
  7740 09:8EC4: F4 04 00     	pea	#<$4
  7741 09:8EC7: A0 11 00     	ldy	#$11
  7742 09:8ECA: B7 07        	lda	[<L271+current_record_1],Y
  7743 09:8ECC: 29 FF 00     	and	#$ff
  7744 09:8ECF: 48           	pha
  7745 09:8ED0: A0 0F 00     	ldy	#$f
  7746 09:8ED3: B7 07        	lda	[<L271+current_record_1],Y
  7747 09:8ED5: 48           	pha
  7748 09:8ED6: A0 14 00     	ldy	#$14
  7749 09:8ED9: B7 07        	lda	[<L271+current_record_1],Y
  7750 09:8EDB: 48           	pha
  7751 09:8EDC: A0 12 00     	ldy	#$12
  7752 09:8EDF: B7 07        	lda	[<L271+current_record_1],Y
  7753 09:8EE1: 48           	pha
  7754 09:8EE2: A0 0D 00     	ldy	#$d
  7755 09:8EE5: B7 07        	lda	[<L271+current_record_1],Y
  7756 09:8EE7: 48           	pha
  7757 09:8EE8: A0 0B 00     	ldy	#$b
  7758 09:8EEB: B7 07        	lda	[<L271+current_record_1],Y
  7759 09:8EED: 48           	pha
  7760 09:8EEE: A0 0A 00     	ldy	#$a
  7761 09:8EF1: B7 07        	lda	[<L271+current_record_1],Y
  7762 09:8EF3: 48           	pha
  7763 09:8EF4: A0 09 00     	ldy	#$9
  7764 09:8EF7: B7 07        	lda	[<L271+current_record_1],Y
  7765 09:8EF9: 48           	pha
  7766 09:8EFA: 22 A9 AC 09  	jsl	~~AddInterseg
  7767                        ;
  7768                        ;  /* Renvoie la structure */
  7769                        ;  *record_length_rtn = 4*sizeof(BYTE) + 2*sizeof(
                    WORD);
  7770                        	.line	1049
  7771 09:8EFE: A9 08 00     	lda	#$8
  7772 09:8F01: 87 16        	sta	[<L270+record_length_rtn_0]
  7773                        ;  return(current_record);
  7774                        	.line	1050
  Sat Jul 10 2021  1:15                                                Page 145


  7775 09:8F03: A6 09        	ldx	<L271+current_record_1+2
  7776 09:8F05: A5 07        	lda	<L271+current_record_1
  7777 09:8F07: 82 C0 FE     	brl	L274
  7778                        ;}
  7779                        	.line	1051
  7780                        	.endblock	1051
  7781             0000000A   L270	equ	10
  7782             00000005   L271	equ	5
  7783 09:8F0A:              	ends
  7784                        	efunc
  7785                        	.endfunc	1051,5,10
  7786                        	.line	1051
  7787                        ;
  7788                        ;
  7789                        ;/************************************************
                    *****/
  7790                        ;/*  DecodeRecordSUPER() :  Décodage du Record SUP
                    ER. */
  7791                        ;/************************************************
                    *****/
  7792                        ;static void *DecodeRecordSUPER(unsigned char *dat
                    a, int file_offset, int segment_offset, unsigned char *lcons
                    t, int lconst_length, int *record_length_rtn, struct omf_seg
                    ment *current_segment)
  7793                        ;{
  7794                        	.line	1057
  7795                        	.line	1058
  7796                        	LOADER
  7797                        	func
  7798                        	.function	1058
  7799                        ~~DecodeRecordSUPER:
  7800                        	longa	on
  7801                        	longi	on
  7802 09:8F0A: 3B           	tsc
  7803 09:8F0B: 38           	sec
  7804 09:8F0C: E9 29 00     	sbc	#L279
  7805 09:8F0F: 1B           	tcs
  7806 09:8F10: 0B           	phd
  7807 09:8F11: 5B           	tcd
  7808             00000004   data_0	set	4
  7809             00000008   file_offset_0	set	8
  7810             0000000A   segment_offset_0	set	10
  7811             0000000C   lconst_0	set	12
  7812             00000010   lconst_length_0	set	16
  7813             00000012   record_length_rtn_0	set	18
  7814             00000016   current_segment_0	set	22
  7815                        	.block	1058
  7816                        ;  int offset, length;
  7817                        ;  BYTE page;
  7818                        ;  struct record_SUPER *current_record;
  7819                        ;  struct subrecord_SuperReloc2 *current_SuperRelo
                    c2;
  7820                        ;  struct subrecord_SuperReloc3 *current_SuperRelo
                    c3;
  7821                        ;  struct subrecord_SuperInterseg1 *current_SuperI
                    nterseg1;
  7822                        ;  struct subrecord_SuperInterseg212 *current_Supe
                    rInterseg212;
  Sat Jul 10 2021  1:15                                                Page 146


  7823                        ;  struct subrecord_SuperInterseg1324 *current_Sup
                    erInterseg1324;
  7824                        ;  struct subrecord_SuperInterseg2536 *current_Sup
                    erInterseg2536;
  7825                        ;
  7826                        ;  /* Allocation mémoire */
  7827                        ;  current_record = (struct record_SUPER *) k_call
                    oc(1,sizeof(struct record_SUPER));
  7828             00000000   offset_1	set	0
  7829             00000002   length_1	set	2
  7830             00000004   page_1	set	4
  7831             00000005   current_record_1	set	5
  7832             00000009   current_SuperReloc2_1	set	9
  7833             0000000D   current_SuperReloc3_1	set	13
  7834             00000011   current_SuperInterseg1_1	set	17
  7835             00000015   current_SuperInterseg212_1	set	21
  7836             00000019   current_SuperInterseg1324_1	set	25
  7837             0000001D   current_SuperInterseg2536_1	set	29
  7838                        	.sym	offset,0,5,1,16
  7839                        	.sym	length,2,5,1,16
  7840                        	.sym	page,4,14,1,8
  7841                        	.sym	current_record,5,138,1,32,118
  7842                        	.sym	current_SuperReloc2,9,138,1,32,89
  7843                        	.sym	current_SuperReloc3,13,138,1,32,90
  7844                        	.sym	current_SuperInterseg1,17,138,1,32,91
  7845                        	.sym	current_SuperInterseg212,21,138,1,32,92
  7846                        	.sym	current_SuperInterseg1324,25,138,1,32,93
  7847                        	.sym	current_SuperInterseg2536,29,138,1,32,94
  7848                        	.sym	data,4,142,6,32
  7849                        	.sym	file_offset,8,5,6,16
  7850                        	.sym	segment_offset,10,5,6,16
  7851                        	.sym	lconst,12,142,6,32
  7852                        	.sym	lconst_length,16,5,6,16
  7853                        	.sym	record_length_rtn,18,133,6,32
  7854                        	.sym	current_segment,22,138,6,32,86
  7855                        	.line	1070
  7856 09:8F12: F4 4A 00     	pea	#<$4a
  7857 09:8F15: F4 01 00     	pea	#<$1
  7858 09:8F18: 22 xx xx xx  	jsl	~~k_calloc
  7859 09:8F1C: 85 0E        	sta	<L280+current_record_1
  7860 09:8F1E: 86 10        	stx	<L280+current_record_1+2
  7861                        ;  if(current_record == NULL)
  7862                        	.line	1071
  7863                        ;    {
  7864 09:8F20: A5 0E        	lda	<L280+current_record_1
  7865 09:8F22: 05 10        	ora	<L280+current_record_1+2
  7866 09:8F24: F0 03        	beq	L282
  7867 09:8F26: 82 19 00     	brl	L10193
  7868                        L282:
  7869                        	.line	1072
  7870                        ;      //printf("Error : Impossible to allocate me
                    mory to process Segment Body Record.\n");
  7871                        ;      return(NULL);
  7872                        	.line	1074
  7873 09:8F29: A9 00 00     	lda	#$0
  7874 09:8F2C: AA           	tax
  7875 09:8F2D: A9 00 00     	lda	#$0
  7876                        L283:
  Sat Jul 10 2021  1:15                                                Page 147


  7877 09:8F30: A8           	tay
  7878 09:8F31: A5 2B        	lda	<L279+2
  7879 09:8F33: 85 41        	sta	<L279+2+22
  7880 09:8F35: A5 2A        	lda	<L279+1
  7881 09:8F37: 85 40        	sta	<L279+1+22
  7882 09:8F39: 2B           	pld
  7883 09:8F3A: 3B           	tsc
  7884 09:8F3B: 18           	clc
  7885 09:8F3C: 69 3F 00     	adc	#L279+22
  7886 09:8F3F: 1B           	tcs
  7887 09:8F40: 98           	tya
  7888 09:8F41: 6B           	rtl
  7889                        ;    }
  7890                        	.line	1075
  7891                        ;
  7892                        ;  /* Offset */
  7893                        ;  current_record->FileOffset = (DWORD) file_offse
                    t;
  7894                        L10193:
  7895                        	.line	1078
  7896 09:8F42: A0 00 00     	ldy	#$0
  7897 09:8F45: A5 31        	lda	<L279+file_offset_0
  7898 09:8F47: 10 01        	bpl	L284
  7899 09:8F49: 88           	dey
  7900                        L284:
  7901 09:8F4A: 85 01        	sta	<R0
  7902 09:8F4C: 84 03        	sty	<R0+2
  7903 09:8F4E: A5 01        	lda	<R0
  7904 09:8F50: 87 0E        	sta	[<L280+current_record_1]
  7905 09:8F52: A5 03        	lda	<R0+2
  7906 09:8F54: A0 02 00     	ldy	#$2
  7907 09:8F57: 97 0E        	sta	[<L280+current_record_1],Y
  7908                        ;  current_record->SegmentOffset = (DWORD) segment
                    _offset;
  7909                        	.line	1079
  7910 09:8F59: A0 00 00     	ldy	#$0
  7911 09:8F5C: A5 33        	lda	<L279+segment_offset_0
  7912 09:8F5E: 10 01        	bpl	L285
  7913 09:8F60: 88           	dey
  7914                        L285:
  7915 09:8F61: 85 01        	sta	<R0
  7916 09:8F63: 84 03        	sty	<R0+2
  7917 09:8F65: A5 01        	lda	<R0
  7918 09:8F67: A0 04 00     	ldy	#$4
  7919 09:8F6A: 97 0E        	sta	[<L280+current_record_1],Y
  7920 09:8F6C: A5 03        	lda	<R0+2
  7921 09:8F6E: A0 06 00     	ldy	#$6
  7922 09:8F71: 97 0E        	sta	[<L280+current_record_1],Y
  7923                        ;
  7924                        ;  /* Operation Code : 0xF7 */
  7925                        ;  current_record->operation_code = data[0];
  7926                        	.line	1082
  7927 09:8F73: E2 20        	sep	#$20
  7928                        	longa	off
  7929 09:8F75: A7 2D        	lda	[<L279+data_0]
  7930 09:8F77: A0 08 00     	ldy	#$8
  7931 09:8F7A: 97 0E        	sta	[<L280+current_record_1],Y
  7932 09:8F7C: C2 20        	rep	#$20
  Sat Jul 10 2021  1:15                                                Page 148


  7933                        	longa	on
  7934                        ;
  7935                        ;  /* Longueur */
  7936                        ;  memcpy(&current_record->ByteCnt,&data[1],sizeof
                    (DWORD));
  7937                        	.line	1085
  7938 09:8F7E: F4 04 00     	pea	#<$4
  7939 09:8F81: 18           	clc
  7940 09:8F82: A9 01 00     	lda	#$1
  7941 09:8F85: 65 2D        	adc	<L279+data_0
  7942 09:8F87: 85 01        	sta	<R0
  7943 09:8F89: A9 00 00     	lda	#$0
  7944 09:8F8C: 65 2F        	adc	<L279+data_0+2
  7945 09:8F8E: 85 03        	sta	<R0+2
  7946 09:8F90: D4 03        	pei	<R0+2
  7947 09:8F92: D4 01        	pei	<R0
  7948 09:8F94: 18           	clc
  7949 09:8F95: A9 09 00     	lda	#$9
  7950 09:8F98: 65 0E        	adc	<L280+current_record_1
  7951 09:8F9A: 85 05        	sta	<R1
  7952 09:8F9C: A9 00 00     	lda	#$0
  7953 09:8F9F: 65 10        	adc	<L280+current_record_1+2
  7954 09:8FA1: 85 07        	sta	<R1+2
  7955 09:8FA3: D4 07        	pei	<R1+2
  7956 09:8FA5: D4 05        	pei	<R1
  7957 09:8FA7: 22 xx xx xx  	jsl	~~memcpy
  7958                        ;
  7959                        ;  /* Type */
  7960                        ;  current_record->RecordType = data[5];
  7961                        	.line	1088
  7962 09:8FAB: E2 20        	sep	#$20
  7963                        	longa	off
  7964 09:8FAD: A0 05 00     	ldy	#$5
  7965 09:8FB0: B7 2D        	lda	[<L279+data_0],Y
  7966 09:8FB2: A0 0D 00     	ldy	#$d
  7967 09:8FB5: 97 0E        	sta	[<L280+current_record_1],Y
  7968 09:8FB7: C2 20        	rep	#$20
  7969                        	longa	on
  7970                        ;
  7971                        ;  /** Décodage des Sous Record **/
  7972                        ;  if(current_record->RecordType == 0x00)
  7973                        	.line	1091
  7974                        ;    {
  7975 09:8FB9: A0 0D 00     	ldy	#$d
  7976 09:8FBC: B7 0E        	lda	[<L280+current_record_1],Y
  7977 09:8FBE: 29 FF 00     	and	#$ff
  7978 09:8FC1: F0 03        	beq	L286
  7979 09:8FC3: 82 E6 00     	brl	L10194
  7980                        L286:
  7981                        	.line	1092
  7982                        ;      /** Super Reloc2 **/
  7983                        ;      offset = 0;
  7984                        	.line	1094
  7985 09:8FC6: 64 09        	stz	<L280+offset_1
  7986                        ;      page = 0x00;
  7987                        	.line	1095
  7988 09:8FC8: E2 20        	sep	#$20
  7989                        	longa	off
  Sat Jul 10 2021  1:15                                                Page 149


  7990 09:8FCA: 64 0D        	stz	<L280+page_1
  7991 09:8FCC: C2 20        	rep	#$20
  7992                        	longa	on
  7993                        ;      while(1)
  7994                        	.line	1096
  7995                        L10195:
  7996                        ;        {
  7997                        	.line	1097
  7998                        ;          /* Récupère les données */
  7999                        ;          current_SuperReloc2 = DecodeSuperReloc2
                    (&data[1+sizeof(DWORD)+1+offset],lconst,lconst_length,&page,
                    &length,current_segment);
  8000                        	.line	1099
  8001 09:8FCE: D4 41        	pei	<L279+current_segment_0+2
  8002 09:8FD0: D4 3F        	pei	<L279+current_segment_0
  8003 09:8FD2: F4 00 00     	pea	#0
  8004 09:8FD5: 18           	clc
  8005 09:8FD6: 7B           	tdc
  8006 09:8FD7: 69 0B 00     	adc	#<L280+length_1
  8007 09:8FDA: 48           	pha
  8008 09:8FDB: F4 00 00     	pea	#0
  8009 09:8FDE: 18           	clc
  8010 09:8FDF: 7B           	tdc
  8011 09:8FE0: 69 0D 00     	adc	#<L280+page_1
  8012 09:8FE3: 48           	pha
  8013 09:8FE4: D4 39        	pei	<L279+lconst_length_0
  8014 09:8FE6: D4 37        	pei	<L279+lconst_0+2
  8015 09:8FE8: D4 35        	pei	<L279+lconst_0
  8016 09:8FEA: 18           	clc
  8017 09:8FEB: A9 06 00     	lda	#$6
  8018 09:8FEE: 65 09        	adc	<L280+offset_1
  8019 09:8FF0: 85 01        	sta	<R0
  8020 09:8FF2: A5 01        	lda	<R0
  8021 09:8FF4: 85 01        	sta	<R0
  8022 09:8FF6: 64 03        	stz	<R0+2
  8023 09:8FF8: 18           	clc
  8024 09:8FF9: A5 2D        	lda	<L279+data_0
  8025 09:8FFB: 65 01        	adc	<R0
  8026 09:8FFD: 85 05        	sta	<R1
  8027 09:8FFF: A5 2F        	lda	<L279+data_0+2
  8028 09:9001: 65 03        	adc	<R0+2
  8029 09:9003: 85 07        	sta	<R1+2
  8030 09:9005: D4 07        	pei	<R1+2
  8031 09:9007: D4 05        	pei	<R1
  8032 09:9009: 22 F3 96 09  	jsl	~~DecodeSuperReloc2
  8033 09:900D: 85 12        	sta	<L280+current_SuperReloc2_1
  8034 09:900F: 86 14        	stx	<L280+current_SuperReloc2_1+2
  8035                        ;          if(current_SuperReloc2 == NULL)
  8036                        	.line	1100
  8037                        ;            {
  8038 09:9011: A5 12        	lda	<L280+current_SuperReloc2_1
  8039 09:9013: 05 14        	ora	<L280+current_SuperReloc2_1+2
  8040 09:9015: F0 03        	beq	L287
  8041 09:9017: 82 12 00     	brl	L10197
  8042                        L287:
  8043                        	.line	1101
  8044                        ;              mem_free_SUPER(current_record);
  8045                        	.line	1102
  Sat Jul 10 2021  1:15                                                Page 150


  8046 09:901A: D4 10        	pei	<L280+current_record_1+2
  8047 09:901C: D4 0E        	pei	<L280+current_record_1
  8048 09:901E: 22 1A B1 09  	jsl	~~mem_free_SUPER
  8049                        ;              return(NULL);
  8050                        	.line	1103
  8051 09:9022: A9 00 00     	lda	#$0
  8052 09:9025: AA           	tax
  8053 09:9026: A9 00 00     	lda	#$0
  8054 09:9029: 82 04 FF     	brl	L283
  8055                        ;            }
  8056                        	.line	1104
  8057                        ;
  8058                        ;          /* Attache à la liste chainée */
  8059                        ;          if(current_record->first_SuperReloc2 ==
                     NULL)
  8060                        L10197:
  8061                        	.line	1107
  8062                        ;            current_record->first_SuperReloc2 = c
                    urrent_SuperReloc2;
  8063 09:902C: A0 10 00     	ldy	#$10
  8064 09:902F: B7 0E        	lda	[<L280+current_record_1],Y
  8065 09:9031: A0 12 00     	ldy	#$12
  8066 09:9034: 17 0E        	ora	[<L280+current_record_1],Y
  8067 09:9036: F0 03        	beq	L288
  8068 09:9038: 82 11 00     	brl	L10198
  8069                        L288:
  8070                        	.line	1108
  8071 09:903B: A5 12        	lda	<L280+current_SuperReloc2_1
  8072 09:903D: A0 10 00     	ldy	#$10
  8073 09:9040: 97 0E        	sta	[<L280+current_record_1],Y
  8074 09:9042: A5 14        	lda	<L280+current_SuperReloc2_1+2
  8075 09:9044: A0 12 00     	ldy	#$12
  8076 09:9047: 97 0E        	sta	[<L280+current_record_1],Y
  8077                        ;          else
  8078 09:9049: 82 1C 00     	brl	L10199
  8079                        L10198:
  8080                        ;            current_record->last_SuperReloc2->nex
                    t = current_SuperReloc2;
  8081                        	.line	1110
  8082 09:904C: A0 14 00     	ldy	#$14
  8083 09:904F: B7 0E        	lda	[<L280+current_record_1],Y
  8084 09:9051: 85 01        	sta	<R0
  8085 09:9053: A0 16 00     	ldy	#$16
  8086 09:9056: B7 0E        	lda	[<L280+current_record_1],Y
  8087 09:9058: 85 03        	sta	<R0+2
  8088 09:905A: A5 12        	lda	<L280+current_SuperReloc2_1
  8089 09:905C: A0 0D 08     	ldy	#$80d
  8090 09:905F: 97 01        	sta	[<R0],Y
  8091 09:9061: A5 14        	lda	<L280+current_SuperReloc2_1+2
  8092 09:9063: A0 0F 08     	ldy	#$80f
  8093 09:9066: 97 01        	sta	[<R0],Y
  8094                        L10199:
  8095                        ;          current_record->last_SuperReloc2 = curr
                    ent_SuperReloc2;
  8096                        	.line	1111
  8097 09:9068: A5 12        	lda	<L280+current_SuperReloc2_1
  8098 09:906A: A0 14 00     	ldy	#$14
  8099 09:906D: 97 0E        	sta	[<L280+current_record_1],Y
  Sat Jul 10 2021  1:15                                                Page 151


  8100 09:906F: A5 14        	lda	<L280+current_SuperReloc2_1+2
  8101 09:9071: A0 16 00     	ldy	#$16
  8102 09:9074: 97 0E        	sta	[<L280+current_record_1],Y
  8103                        ;          current_record->nb_SuperReloc2++;
  8104                        	.line	1112
  8105 09:9076: A0 0E 00     	ldy	#$e
  8106 09:9079: B7 0E        	lda	[<L280+current_record_1],Y
  8107 09:907B: 1A           	ina
  8108 09:907C: A0 0E 00     	ldy	#$e
  8109 09:907F: 97 0E        	sta	[<L280+current_record_1],Y
  8110                        ;
  8111                        ;          /* SubRecord suivant */
  8112                        ;          offset += length;
  8113                        	.line	1115
  8114 09:9081: 18           	clc
  8115 09:9082: A5 09        	lda	<L280+offset_1
  8116 09:9084: 65 0B        	adc	<L280+length_1
  8117 09:9086: 85 09        	sta	<L280+offset_1
  8118                        ;          if(offset == (int) (current_record->Byt
                    eCnt-1))
  8119                        	.line	1116
  8120                        ;            break;
  8121 09:9088: 18           	clc
  8122 09:9089: A9 FF FF     	lda	#$ffff
  8123 09:908C: A0 09 00     	ldy	#$9
  8124 09:908F: 77 0E        	adc	[<L280+current_record_1],Y
  8125 09:9091: 85 01        	sta	<R0
  8126 09:9093: A9 FF FF     	lda	#$ffff
  8127 09:9096: A0 0B 00     	ldy	#$b
  8128 09:9099: 77 0E        	adc	[<L280+current_record_1],Y
  8129 09:909B: 85 03        	sta	<R0+2
  8130 09:909D: A5 01        	lda	<R0
  8131 09:909F: C5 09        	cmp	<L280+offset_1
  8132 09:90A1: D0 03        	bne	L289
  8133 09:90A3: 82 03 00     	brl	L10196
  8134                        L289:
  8135                        ;        }
  8136                        	.line	1118
  8137 09:90A6: 82 25 FF     	brl	L10195
  8138                        L10196:
  8139                        ;    }
  8140                        	.line	1119
  8141                        ;  else if(current_record->RecordType == 0x01)
  8142 09:90A9: 82 31 05     	brl	L10200
  8143                        L10194:
  8144                        	.line	1120
  8145                        ;    {
  8146 09:90AC: E2 20        	sep	#$20
  8147                        	longa	off
  8148 09:90AE: A0 0D 00     	ldy	#$d
  8149 09:90B1: B7 0E        	lda	[<L280+current_record_1],Y
  8150 09:90B3: C9 01        	cmp	#<$1
  8151 09:90B5: C2 20        	rep	#$20
  8152                        	longa	on
  8153 09:90B7: F0 03        	beq	L290
  8154 09:90B9: 82 E6 00     	brl	L10201
  8155                        L290:
  8156                        	.line	1121
  Sat Jul 10 2021  1:15                                                Page 152


  8157                        ;      /** Super Reloc3 **/
  8158                        ;      offset = 0;
  8159                        	.line	1123
  8160 09:90BC: 64 09        	stz	<L280+offset_1
  8161                        ;      page = 0x00;
  8162                        	.line	1124
  8163 09:90BE: E2 20        	sep	#$20
  8164                        	longa	off
  8165 09:90C0: 64 0D        	stz	<L280+page_1
  8166 09:90C2: C2 20        	rep	#$20
  8167                        	longa	on
  8168                        ;      while(1)
  8169                        	.line	1125
  8170                        L10202:
  8171                        ;        {
  8172                        	.line	1126
  8173                        ;          /* Récupère les données */
  8174                        ;          current_SuperReloc3 = DecodeSuperReloc3
                    (&data[1+sizeof(DWORD)+1+offset],lconst,lconst_length,&page,
                    &length,current_segment);
  8175                        	.line	1128
  8176 09:90C4: D4 41        	pei	<L279+current_segment_0+2
  8177 09:90C6: D4 3F        	pei	<L279+current_segment_0
  8178 09:90C8: F4 00 00     	pea	#0
  8179 09:90CB: 18           	clc
  8180 09:90CC: 7B           	tdc
  8181 09:90CD: 69 0B 00     	adc	#<L280+length_1
  8182 09:90D0: 48           	pha
  8183 09:90D1: F4 00 00     	pea	#0
  8184 09:90D4: 18           	clc
  8185 09:90D5: 7B           	tdc
  8186 09:90D6: 69 0D 00     	adc	#<L280+page_1
  8187 09:90D9: 48           	pha
  8188 09:90DA: D4 39        	pei	<L279+lconst_length_0
  8189 09:90DC: D4 37        	pei	<L279+lconst_0+2
  8190 09:90DE: D4 35        	pei	<L279+lconst_0
  8191 09:90E0: 18           	clc
  8192 09:90E1: A9 06 00     	lda	#$6
  8193 09:90E4: 65 09        	adc	<L280+offset_1
  8194 09:90E6: 85 01        	sta	<R0
  8195 09:90E8: A5 01        	lda	<R0
  8196 09:90EA: 85 01        	sta	<R0
  8197 09:90EC: 64 03        	stz	<R0+2
  8198 09:90EE: 18           	clc
  8199 09:90EF: A5 2D        	lda	<L279+data_0
  8200 09:90F1: 65 01        	adc	<R0
  8201 09:90F3: 85 05        	sta	<R1
  8202 09:90F5: A5 2F        	lda	<L279+data_0+2
  8203 09:90F7: 65 03        	adc	<R0+2
  8204 09:90F9: 85 07        	sta	<R1+2
  8205 09:90FB: D4 07        	pei	<R1+2
  8206 09:90FD: D4 05        	pei	<R1
  8207 09:90FF: 22 12 9A 09  	jsl	~~DecodeSuperReloc3
  8208 09:9103: 85 16        	sta	<L280+current_SuperReloc3_1
  8209 09:9105: 86 18        	stx	<L280+current_SuperReloc3_1+2
  8210                        ;          if(current_SuperReloc3 == NULL)
  8211                        	.line	1129
  8212                        ;            {
  Sat Jul 10 2021  1:15                                                Page 153


  8213 09:9107: A5 16        	lda	<L280+current_SuperReloc3_1
  8214 09:9109: 05 18        	ora	<L280+current_SuperReloc3_1+2
  8215 09:910B: F0 03        	beq	L291
  8216 09:910D: 82 12 00     	brl	L10204
  8217                        L291:
  8218                        	.line	1130
  8219                        ;              mem_free_SUPER(current_record);
  8220                        	.line	1131
  8221 09:9110: D4 10        	pei	<L280+current_record_1+2
  8222 09:9112: D4 0E        	pei	<L280+current_record_1
  8223 09:9114: 22 1A B1 09  	jsl	~~mem_free_SUPER
  8224                        ;              return(NULL);
  8225                        	.line	1132
  8226 09:9118: A9 00 00     	lda	#$0
  8227 09:911B: AA           	tax
  8228 09:911C: A9 00 00     	lda	#$0
  8229 09:911F: 82 0E FE     	brl	L283
  8230                        ;            }
  8231                        	.line	1133
  8232                        ;
  8233                        ;          /* Attache à la liste chainée */
  8234                        ;          if(current_record->first_SuperReloc3 ==
                     NULL)
  8235                        L10204:
  8236                        	.line	1136
  8237                        ;            current_record->first_SuperReloc3 = c
                    urrent_SuperReloc3;
  8238 09:9122: A0 1A 00     	ldy	#$1a
  8239 09:9125: B7 0E        	lda	[<L280+current_record_1],Y
  8240 09:9127: A0 1C 00     	ldy	#$1c
  8241 09:912A: 17 0E        	ora	[<L280+current_record_1],Y
  8242 09:912C: F0 03        	beq	L292
  8243 09:912E: 82 11 00     	brl	L10205
  8244                        L292:
  8245                        	.line	1137
  8246 09:9131: A5 16        	lda	<L280+current_SuperReloc3_1
  8247 09:9133: A0 1A 00     	ldy	#$1a
  8248 09:9136: 97 0E        	sta	[<L280+current_record_1],Y
  8249 09:9138: A5 18        	lda	<L280+current_SuperReloc3_1+2
  8250 09:913A: A0 1C 00     	ldy	#$1c
  8251 09:913D: 97 0E        	sta	[<L280+current_record_1],Y
  8252                        ;          else
  8253 09:913F: 82 1C 00     	brl	L10206
  8254                        L10205:
  8255                        ;            current_record->last_SuperReloc3->nex
                    t = current_SuperReloc3;
  8256                        	.line	1139
  8257 09:9142: A0 1E 00     	ldy	#$1e
  8258 09:9145: B7 0E        	lda	[<L280+current_record_1],Y
  8259 09:9147: 85 01        	sta	<R0
  8260 09:9149: A0 20 00     	ldy	#$20
  8261 09:914C: B7 0E        	lda	[<L280+current_record_1],Y
  8262 09:914E: 85 03        	sta	<R0+2
  8263 09:9150: A5 16        	lda	<L280+current_SuperReloc3_1
  8264 09:9152: A0 0D 08     	ldy	#$80d
  8265 09:9155: 97 01        	sta	[<R0],Y
  8266 09:9157: A5 18        	lda	<L280+current_SuperReloc3_1+2
  8267 09:9159: A0 0F 08     	ldy	#$80f
  Sat Jul 10 2021  1:15                                                Page 154


  8268 09:915C: 97 01        	sta	[<R0],Y
  8269                        L10206:
  8270                        ;          current_record->last_SuperReloc3 = curr
                    ent_SuperReloc3;
  8271                        	.line	1140
  8272 09:915E: A5 16        	lda	<L280+current_SuperReloc3_1
  8273 09:9160: A0 1E 00     	ldy	#$1e
  8274 09:9163: 97 0E        	sta	[<L280+current_record_1],Y
  8275 09:9165: A5 18        	lda	<L280+current_SuperReloc3_1+2
  8276 09:9167: A0 20 00     	ldy	#$20
  8277 09:916A: 97 0E        	sta	[<L280+current_record_1],Y
  8278                        ;          current_record->nb_SuperReloc3++;
  8279                        	.line	1141
  8280 09:916C: A0 18 00     	ldy	#$18
  8281 09:916F: B7 0E        	lda	[<L280+current_record_1],Y
  8282 09:9171: 1A           	ina
  8283 09:9172: A0 18 00     	ldy	#$18
  8284 09:9175: 97 0E        	sta	[<L280+current_record_1],Y
  8285                        ;
  8286                        ;          /* SubRecord suivant */
  8287                        ;          offset += length;
  8288                        	.line	1144
  8289 09:9177: 18           	clc
  8290 09:9178: A5 09        	lda	<L280+offset_1
  8291 09:917A: 65 0B        	adc	<L280+length_1
  8292 09:917C: 85 09        	sta	<L280+offset_1
  8293                        ;          if(offset == (int) (current_record->Byt
                    eCnt-1))
  8294                        	.line	1145
  8295                        ;            break;
  8296 09:917E: 18           	clc
  8297 09:917F: A9 FF FF     	lda	#$ffff
  8298 09:9182: A0 09 00     	ldy	#$9
  8299 09:9185: 77 0E        	adc	[<L280+current_record_1],Y
  8300 09:9187: 85 01        	sta	<R0
  8301 09:9189: A9 FF FF     	lda	#$ffff
  8302 09:918C: A0 0B 00     	ldy	#$b
  8303 09:918F: 77 0E        	adc	[<L280+current_record_1],Y
  8304 09:9191: 85 03        	sta	<R0+2
  8305 09:9193: A5 01        	lda	<R0
  8306 09:9195: C5 09        	cmp	<L280+offset_1
  8307 09:9197: D0 03        	bne	L293
  8308 09:9199: 82 03 00     	brl	L10203
  8309                        L293:
  8310                        ;        }      
  8311                        	.line	1147
  8312 09:919C: 82 25 FF     	brl	L10202
  8313                        L10203:
  8314                        ;    }
  8315                        	.line	1148
  8316                        ;  else if(current_record->RecordType == 0x02)  /*
                     2 */
  8317 09:919F: 82 3B 04     	brl	L10207
  8318                        L10201:
  8319                        	.line	1149
  8320                        ;    {
  8321 09:91A2: E2 20        	sep	#$20
  8322                        	longa	off
  Sat Jul 10 2021  1:15                                                Page 155


  8323 09:91A4: A0 0D 00     	ldy	#$d
  8324 09:91A7: B7 0E        	lda	[<L280+current_record_1],Y
  8325 09:91A9: C9 02        	cmp	#<$2
  8326 09:91AB: C2 20        	rep	#$20
  8327                        	longa	on
  8328 09:91AD: F0 03        	beq	L294
  8329 09:91AF: 82 E6 00     	brl	L10208
  8330                        L294:
  8331                        	.line	1150
  8332                        ;      /** Super Interseg1 **/
  8333                        ;      offset = 0;
  8334                        	.line	1152
  8335 09:91B2: 64 09        	stz	<L280+offset_1
  8336                        ;      page = 0x00;
  8337                        	.line	1153
  8338 09:91B4: E2 20        	sep	#$20
  8339                        	longa	off
  8340 09:91B6: 64 0D        	stz	<L280+page_1
  8341 09:91B8: C2 20        	rep	#$20
  8342                        	longa	on
  8343                        ;      while(1)
  8344                        	.line	1154
  8345                        L10209:
  8346                        ;        {
  8347                        	.line	1155
  8348                        ;          /* Récupère les données */
  8349                        ;          current_SuperInterseg1 = DecodeSuperInt
                    erseg1(&data[1+sizeof(DWORD)+1+offset],lconst,lconst_length,
                    &page,&length,current_segment);
  8350                        	.line	1157
  8351 09:91BA: D4 41        	pei	<L279+current_segment_0+2
  8352 09:91BC: D4 3F        	pei	<L279+current_segment_0
  8353 09:91BE: F4 00 00     	pea	#0
  8354 09:91C1: 18           	clc
  8355 09:91C2: 7B           	tdc
  8356 09:91C3: 69 0B 00     	adc	#<L280+length_1
  8357 09:91C6: 48           	pha
  8358 09:91C7: F4 00 00     	pea	#0
  8359 09:91CA: 18           	clc
  8360 09:91CB: 7B           	tdc
  8361 09:91CC: 69 0D 00     	adc	#<L280+page_1
  8362 09:91CF: 48           	pha
  8363 09:91D0: D4 39        	pei	<L279+lconst_length_0
  8364 09:91D2: D4 37        	pei	<L279+lconst_0+2
  8365 09:91D4: D4 35        	pei	<L279+lconst_0
  8366 09:91D6: 18           	clc
  8367 09:91D7: A9 06 00     	lda	#$6
  8368 09:91DA: 65 09        	adc	<L280+offset_1
  8369 09:91DC: 85 01        	sta	<R0
  8370 09:91DE: A5 01        	lda	<R0
  8371 09:91E0: 85 01        	sta	<R0
  8372 09:91E2: 64 03        	stz	<R0+2
  8373 09:91E4: 18           	clc
  8374 09:91E5: A5 2D        	lda	<L279+data_0
  8375 09:91E7: 65 01        	adc	<R0
  8376 09:91E9: 85 05        	sta	<R1
  8377 09:91EB: A5 2F        	lda	<L279+data_0+2
  8378 09:91ED: 65 03        	adc	<R0+2
  Sat Jul 10 2021  1:15                                                Page 156


  8379 09:91EF: 85 07        	sta	<R1+2
  8380 09:91F1: D4 07        	pei	<R1+2
  8381 09:91F3: D4 05        	pei	<R1
  8382 09:91F5: 22 31 9D 09  	jsl	~~DecodeSuperInterseg1
  8383 09:91F9: 85 1A        	sta	<L280+current_SuperInterseg1_1
  8384 09:91FB: 86 1C        	stx	<L280+current_SuperInterseg1_1+2
  8385                        ;          if(current_SuperInterseg1 == NULL)
  8386                        	.line	1158
  8387                        ;            {
  8388 09:91FD: A5 1A        	lda	<L280+current_SuperInterseg1_1
  8389 09:91FF: 05 1C        	ora	<L280+current_SuperInterseg1_1+2
  8390 09:9201: F0 03        	beq	L295
  8391 09:9203: 82 12 00     	brl	L10211
  8392                        L295:
  8393                        	.line	1159
  8394                        ;              mem_free_SUPER(current_record);
  8395                        	.line	1160
  8396 09:9206: D4 10        	pei	<L280+current_record_1+2
  8397 09:9208: D4 0E        	pei	<L280+current_record_1
  8398 09:920A: 22 1A B1 09  	jsl	~~mem_free_SUPER
  8399                        ;              return(NULL);
  8400                        	.line	1161
  8401 09:920E: A9 00 00     	lda	#$0
  8402 09:9211: AA           	tax
  8403 09:9212: A9 00 00     	lda	#$0
  8404 09:9215: 82 18 FD     	brl	L283
  8405                        ;            }
  8406                        	.line	1162
  8407                        ;
  8408                        ;          /* Attache à la liste chainée */
  8409                        ;          if(current_record->first_SuperInterseg1
                     == NULL)
  8410                        L10211:
  8411                        	.line	1165
  8412                        ;            current_record->first_SuperInterseg1 
                    = current_SuperInterseg1;
  8413 09:9218: A0 24 00     	ldy	#$24
  8414 09:921B: B7 0E        	lda	[<L280+current_record_1],Y
  8415 09:921D: A0 26 00     	ldy	#$26
  8416 09:9220: 17 0E        	ora	[<L280+current_record_1],Y
  8417 09:9222: F0 03        	beq	L296
  8418 09:9224: 82 11 00     	brl	L10212
  8419                        L296:
  8420                        	.line	1166
  8421 09:9227: A5 1A        	lda	<L280+current_SuperInterseg1_1
  8422 09:9229: A0 24 00     	ldy	#$24
  8423 09:922C: 97 0E        	sta	[<L280+current_record_1],Y
  8424 09:922E: A5 1C        	lda	<L280+current_SuperInterseg1_1+2
  8425 09:9230: A0 26 00     	ldy	#$26
  8426 09:9233: 97 0E        	sta	[<L280+current_record_1],Y
  8427                        ;          else
  8428 09:9235: 82 1C 00     	brl	L10213
  8429                        L10212:
  8430                        ;            current_record->last_SuperInterseg1->
                    next = current_SuperInterseg1;
  8431                        	.line	1168
  8432 09:9238: A0 28 00     	ldy	#$28
  8433 09:923B: B7 0E        	lda	[<L280+current_record_1],Y
  Sat Jul 10 2021  1:15                                                Page 157


  8434 09:923D: 85 01        	sta	<R0
  8435 09:923F: A0 2A 00     	ldy	#$2a
  8436 09:9242: B7 0E        	lda	[<L280+current_record_1],Y
  8437 09:9244: 85 03        	sta	<R0+2
  8438 09:9246: A5 1A        	lda	<L280+current_SuperInterseg1_1
  8439 09:9248: A0 0F 0A     	ldy	#$a0f
  8440 09:924B: 97 01        	sta	[<R0],Y
  8441 09:924D: A5 1C        	lda	<L280+current_SuperInterseg1_1+2
  8442 09:924F: A0 11 0A     	ldy	#$a11
  8443 09:9252: 97 01        	sta	[<R0],Y
  8444                        L10213:
  8445                        ;          current_record->last_SuperInterseg1 = c
                    urrent_SuperInterseg1;
  8446                        	.line	1169
  8447 09:9254: A5 1A        	lda	<L280+current_SuperInterseg1_1
  8448 09:9256: A0 28 00     	ldy	#$28
  8449 09:9259: 97 0E        	sta	[<L280+current_record_1],Y
  8450 09:925B: A5 1C        	lda	<L280+current_SuperInterseg1_1+2
  8451 09:925D: A0 2A 00     	ldy	#$2a
  8452 09:9260: 97 0E        	sta	[<L280+current_record_1],Y
  8453                        ;          current_record->nb_SuperInterseg1++;
  8454                        	.line	1170
  8455 09:9262: A0 22 00     	ldy	#$22
  8456 09:9265: B7 0E        	lda	[<L280+current_record_1],Y
  8457 09:9267: 1A           	ina
  8458 09:9268: A0 22 00     	ldy	#$22
  8459 09:926B: 97 0E        	sta	[<L280+current_record_1],Y
  8460                        ;
  8461                        ;          /* SubRecord suivant */
  8462                        ;          offset += length;
  8463                        	.line	1173
  8464 09:926D: 18           	clc
  8465 09:926E: A5 09        	lda	<L280+offset_1
  8466 09:9270: 65 0B        	adc	<L280+length_1
  8467 09:9272: 85 09        	sta	<L280+offset_1
  8468                        ;          if(offset == (int) (current_record->Byt
                    eCnt-1))
  8469                        	.line	1174
  8470                        ;            break;
  8471 09:9274: 18           	clc
  8472 09:9275: A9 FF FF     	lda	#$ffff
  8473 09:9278: A0 09 00     	ldy	#$9
  8474 09:927B: 77 0E        	adc	[<L280+current_record_1],Y
  8475 09:927D: 85 01        	sta	<R0
  8476 09:927F: A9 FF FF     	lda	#$ffff
  8477 09:9282: A0 0B 00     	ldy	#$b
  8478 09:9285: 77 0E        	adc	[<L280+current_record_1],Y
  8479 09:9287: 85 03        	sta	<R0+2
  8480 09:9289: A5 01        	lda	<R0
  8481 09:928B: C5 09        	cmp	<L280+offset_1
  8482 09:928D: D0 03        	bne	L297
  8483 09:928F: 82 03 00     	brl	L10210
  8484                        L297:
  8485                        ;        }  
  8486                        	.line	1176
  8487 09:9292: 82 25 FF     	brl	L10209
  8488                        L10210:
  8489                        ;    }
  Sat Jul 10 2021  1:15                                                Page 158


  8490                        	.line	1177
  8491                        ;  else if(current_record->RecordType >= 0x03 && c
                    urrent_record->RecordType <= 0x0D)  /* 3-13 */
  8492 09:9295: 82 45 03     	brl	L10214
  8493                        L10208:
  8494                        	.line	1178
  8495                        ;    {
  8496 09:9298: E2 20        	sep	#$20
  8497                        	longa	off
  8498 09:929A: A0 0D 00     	ldy	#$d
  8499 09:929D: B7 0E        	lda	[<L280+current_record_1],Y
  8500 09:929F: C9 03        	cmp	#<$3
  8501 09:92A1: C2 20        	rep	#$20
  8502                        	longa	on
  8503 09:92A3: B0 03        	bcs	L298
  8504 09:92A5: 82 07 01     	brl	L10215
  8505                        L298:
  8506 09:92A8: E2 20        	sep	#$20
  8507                        	longa	off
  8508 09:92AA: A9 0D        	lda	#$d
  8509 09:92AC: A0 0D 00     	ldy	#$d
  8510 09:92AF: D7 0E        	cmp	[<L280+current_record_1],Y
  8511 09:92B1: C2 20        	rep	#$20
  8512                        	longa	on
  8513 09:92B3: B0 03        	bcs	L299
  8514 09:92B5: 82 F7 00     	brl	L10215
  8515                        L299:
  8516                        	.line	1179
  8517                        ;      /** Super Interseg 2-12 **/
  8518                        ;      offset = 0;
  8519                        	.line	1181
  8520 09:92B8: 64 09        	stz	<L280+offset_1
  8521                        ;      page = 0x00;
  8522                        	.line	1182
  8523 09:92BA: E2 20        	sep	#$20
  8524                        	longa	off
  8525 09:92BC: 64 0D        	stz	<L280+page_1
  8526 09:92BE: C2 20        	rep	#$20
  8527                        	longa	on
  8528                        ;      while(1)
  8529                        	.line	1183
  8530                        L10216:
  8531                        ;        {
  8532                        	.line	1184
  8533                        ;          /* Récupère les données */
  8534                        ;          current_SuperInterseg212 = DecodeSuperI
                    nterseg212(&data[1+sizeof(DWORD)+1+offset],current_record->R
                    ecordType-1,lconst,lconst_length,&page,&length,current_segme
                    nt);
  8535                        	.line	1186
  8536 09:92C0: D4 41        	pei	<L279+current_segment_0+2
  8537 09:92C2: D4 3F        	pei	<L279+current_segment_0
  8538 09:92C4: F4 00 00     	pea	#0
  8539 09:92C7: 18           	clc
  8540 09:92C8: 7B           	tdc
  8541 09:92C9: 69 0B 00     	adc	#<L280+length_1
  8542 09:92CC: 48           	pha
  8543 09:92CD: F4 00 00     	pea	#0
  Sat Jul 10 2021  1:15                                                Page 159


  8544 09:92D0: 18           	clc
  8545 09:92D1: 7B           	tdc
  8546 09:92D2: 69 0D 00     	adc	#<L280+page_1
  8547 09:92D5: 48           	pha
  8548 09:92D6: D4 39        	pei	<L279+lconst_length_0
  8549 09:92D8: D4 37        	pei	<L279+lconst_0+2
  8550 09:92DA: D4 35        	pei	<L279+lconst_0
  8551 09:92DC: A0 0D 00     	ldy	#$d
  8552 09:92DF: B7 0E        	lda	[<L280+current_record_1],Y
  8553 09:92E1: 29 FF 00     	and	#$ff
  8554 09:92E4: 85 01        	sta	<R0
  8555 09:92E6: 18           	clc
  8556 09:92E7: A9 FF FF     	lda	#$ffff
  8557 09:92EA: 65 01        	adc	<R0
  8558 09:92EC: 48           	pha
  8559 09:92ED: 18           	clc
  8560 09:92EE: A9 06 00     	lda	#$6
  8561 09:92F1: 65 09        	adc	<L280+offset_1
  8562 09:92F3: 85 01        	sta	<R0
  8563 09:92F5: A5 01        	lda	<R0
  8564 09:92F7: 85 01        	sta	<R0
  8565 09:92F9: 64 03        	stz	<R0+2
  8566 09:92FB: 18           	clc
  8567 09:92FC: A5 2D        	lda	<L279+data_0
  8568 09:92FE: 65 01        	adc	<R0
  8569 09:9300: 85 05        	sta	<R1
  8570 09:9302: A5 2F        	lda	<L279+data_0+2
  8571 09:9304: 65 03        	adc	<R0+2
  8572 09:9306: 85 07        	sta	<R1+2
  8573 09:9308: D4 07        	pei	<R1+2
  8574 09:930A: D4 05        	pei	<R1
  8575 09:930C: 22 70 A1 09  	jsl	~~DecodeSuperInterseg212
  8576 09:9310: 85 1E        	sta	<L280+current_SuperInterseg212_1
  8577 09:9312: 86 20        	stx	<L280+current_SuperInterseg212_1+2
  8578                        ;          if(current_SuperInterseg212 == NULL)
  8579                        	.line	1187
  8580                        ;            {
  8581 09:9314: A5 1E        	lda	<L280+current_SuperInterseg212_1
  8582 09:9316: 05 20        	ora	<L280+current_SuperInterseg212_1+2
  8583 09:9318: F0 03        	beq	L300
  8584 09:931A: 82 12 00     	brl	L10218
  8585                        L300:
  8586                        	.line	1188
  8587                        ;              mem_free_SUPER(current_record);
  8588                        	.line	1189
  8589 09:931D: D4 10        	pei	<L280+current_record_1+2
  8590 09:931F: D4 0E        	pei	<L280+current_record_1
  8591 09:9321: 22 1A B1 09  	jsl	~~mem_free_SUPER
  8592                        ;              return(NULL);
  8593                        	.line	1190
  8594 09:9325: A9 00 00     	lda	#$0
  8595 09:9328: AA           	tax
  8596 09:9329: A9 00 00     	lda	#$0
  8597 09:932C: 82 01 FC     	brl	L283
  8598                        ;            }
  8599                        	.line	1191
  8600                        ;
  8601                        ;          /* Attache à la liste chainée */
  Sat Jul 10 2021  1:15                                                Page 160


  8602                        ;          if(current_record->first_SuperInterseg2
                    12 == NULL)
  8603                        L10218:
  8604                        	.line	1194
  8605                        ;            current_record->first_SuperInterseg21
                    2 = current_SuperInterseg212;
  8606 09:932F: A0 2E 00     	ldy	#$2e
  8607 09:9332: B7 0E        	lda	[<L280+current_record_1],Y
  8608 09:9334: A0 30 00     	ldy	#$30
  8609 09:9337: 17 0E        	ora	[<L280+current_record_1],Y
  8610 09:9339: F0 03        	beq	L301
  8611 09:933B: 82 11 00     	brl	L10219
  8612                        L301:
  8613                        	.line	1195
  8614 09:933E: A5 1E        	lda	<L280+current_SuperInterseg212_1
  8615 09:9340: A0 2E 00     	ldy	#$2e
  8616 09:9343: 97 0E        	sta	[<L280+current_record_1],Y
  8617 09:9345: A5 20        	lda	<L280+current_SuperInterseg212_1+2
  8618 09:9347: A0 30 00     	ldy	#$30
  8619 09:934A: 97 0E        	sta	[<L280+current_record_1],Y
  8620                        ;          else
  8621 09:934C: 82 1C 00     	brl	L10220
  8622                        L10219:
  8623                        ;            current_record->last_SuperInterseg212
                    ->next = current_SuperInterseg212;
  8624                        	.line	1197
  8625 09:934F: A0 32 00     	ldy	#$32
  8626 09:9352: B7 0E        	lda	[<L280+current_record_1],Y
  8627 09:9354: 85 01        	sta	<R0
  8628 09:9356: A0 34 00     	ldy	#$34
  8629 09:9359: B7 0E        	lda	[<L280+current_record_1],Y
  8630 09:935B: 85 03        	sta	<R0+2
  8631 09:935D: A5 1E        	lda	<L280+current_SuperInterseg212_1
  8632 09:935F: A0 0F 0A     	ldy	#$a0f
  8633 09:9362: 97 01        	sta	[<R0],Y
  8634 09:9364: A5 20        	lda	<L280+current_SuperInterseg212_1+2
  8635 09:9366: A0 11 0A     	ldy	#$a11
  8636 09:9369: 97 01        	sta	[<R0],Y
  8637                        L10220:
  8638                        ;          current_record->last_SuperInterseg212 =
                     current_SuperInterseg212;
  8639                        	.line	1198
  8640 09:936B: A5 1E        	lda	<L280+current_SuperInterseg212_1
  8641 09:936D: A0 32 00     	ldy	#$32
  8642 09:9370: 97 0E        	sta	[<L280+current_record_1],Y
  8643 09:9372: A5 20        	lda	<L280+current_SuperInterseg212_1+2
  8644 09:9374: A0 34 00     	ldy	#$34
  8645 09:9377: 97 0E        	sta	[<L280+current_record_1],Y
  8646                        ;          current_record->nb_SuperInterseg212++;
  8647                        	.line	1199
  8648 09:9379: A0 2C 00     	ldy	#$2c
  8649 09:937C: B7 0E        	lda	[<L280+current_record_1],Y
  8650 09:937E: 1A           	ina
  8651 09:937F: A0 2C 00     	ldy	#$2c
  8652 09:9382: 97 0E        	sta	[<L280+current_record_1],Y
  8653                        ;
  8654                        ;          /* SubRecord suivant */
  8655                        ;          offset += length;
  Sat Jul 10 2021  1:15                                                Page 161


  8656                        	.line	1202
  8657 09:9384: 18           	clc
  8658 09:9385: A5 09        	lda	<L280+offset_1
  8659 09:9387: 65 0B        	adc	<L280+length_1
  8660 09:9389: 85 09        	sta	<L280+offset_1
  8661                        ;          if(offset == (int) (current_record->Byt
                    eCnt-1))
  8662                        	.line	1203
  8663                        ;            break;
  8664 09:938B: 18           	clc
  8665 09:938C: A9 FF FF     	lda	#$ffff
  8666 09:938F: A0 09 00     	ldy	#$9
  8667 09:9392: 77 0E        	adc	[<L280+current_record_1],Y
  8668 09:9394: 85 01        	sta	<R0
  8669 09:9396: A9 FF FF     	lda	#$ffff
  8670 09:9399: A0 0B 00     	ldy	#$b
  8671 09:939C: 77 0E        	adc	[<L280+current_record_1],Y
  8672 09:939E: 85 03        	sta	<R0+2
  8673 09:93A0: A5 01        	lda	<R0
  8674 09:93A2: C5 09        	cmp	<L280+offset_1
  8675 09:93A4: D0 03        	bne	L302
  8676 09:93A6: 82 03 00     	brl	L10217
  8677                        L302:
  8678                        ;        }
  8679                        	.line	1205
  8680 09:93A9: 82 14 FF     	brl	L10216
  8681                        L10217:
  8682                        ;    }
  8683                        	.line	1206
  8684                        ;  else if(current_record->RecordType >= 0x0E && c
                    urrent_record->RecordType <= 0x19)  /* 14-25 */
  8685 09:93AC: 82 2E 02     	brl	L10221
  8686                        L10215:
  8687                        	.line	1207
  8688                        ;    {
  8689 09:93AF: E2 20        	sep	#$20
  8690                        	longa	off
  8691 09:93B1: A0 0D 00     	ldy	#$d
  8692 09:93B4: B7 0E        	lda	[<L280+current_record_1],Y
  8693 09:93B6: C9 0E        	cmp	#<$e
  8694 09:93B8: C2 20        	rep	#$20
  8695                        	longa	on
  8696 09:93BA: B0 03        	bcs	L303
  8697 09:93BC: 82 07 01     	brl	L10222
  8698                        L303:
  8699 09:93BF: E2 20        	sep	#$20
  8700                        	longa	off
  8701 09:93C1: A9 19        	lda	#$19
  8702 09:93C3: A0 0D 00     	ldy	#$d
  8703 09:93C6: D7 0E        	cmp	[<L280+current_record_1],Y
  8704 09:93C8: C2 20        	rep	#$20
  8705                        	longa	on
  8706 09:93CA: B0 03        	bcs	L304
  8707 09:93CC: 82 F7 00     	brl	L10222
  8708                        L304:
  8709                        	.line	1208
  8710                        ;      /** Super Interseg 13-24 **/
  8711                        ;      offset = 0;
  Sat Jul 10 2021  1:15                                                Page 162


  8712                        	.line	1210
  8713 09:93CF: 64 09        	stz	<L280+offset_1
  8714                        ;      page = 0x00;
  8715                        	.line	1211
  8716 09:93D1: E2 20        	sep	#$20
  8717                        	longa	off
  8718 09:93D3: 64 0D        	stz	<L280+page_1
  8719 09:93D5: C2 20        	rep	#$20
  8720                        	longa	on
  8721                        ;      while(1)
  8722                        	.line	1212
  8723                        L10223:
  8724                        ;        {
  8725                        	.line	1213
  8726                        ;          /* Récupère les données */
  8727                        ;          current_SuperInterseg1324 = DecodeSuper
                    Interseg1324(&data[1+sizeof(DWORD)+1+offset],current_record-
                    >RecordType-1-12,lconst,lconst_length,&page,&length,current_
                    segment);
  8728                        	.line	1215
  8729 09:93D7: D4 41        	pei	<L279+current_segment_0+2
  8730 09:93D9: D4 3F        	pei	<L279+current_segment_0
  8731 09:93DB: F4 00 00     	pea	#0
  8732 09:93DE: 18           	clc
  8733 09:93DF: 7B           	tdc
  8734 09:93E0: 69 0B 00     	adc	#<L280+length_1
  8735 09:93E3: 48           	pha
  8736 09:93E4: F4 00 00     	pea	#0
  8737 09:93E7: 18           	clc
  8738 09:93E8: 7B           	tdc
  8739 09:93E9: 69 0D 00     	adc	#<L280+page_1
  8740 09:93EC: 48           	pha
  8741 09:93ED: D4 39        	pei	<L279+lconst_length_0
  8742 09:93EF: D4 37        	pei	<L279+lconst_0+2
  8743 09:93F1: D4 35        	pei	<L279+lconst_0
  8744 09:93F3: A0 0D 00     	ldy	#$d
  8745 09:93F6: B7 0E        	lda	[<L280+current_record_1],Y
  8746 09:93F8: 29 FF 00     	and	#$ff
  8747 09:93FB: 85 01        	sta	<R0
  8748 09:93FD: 18           	clc
  8749 09:93FE: A9 F3 FF     	lda	#$fff3
  8750 09:9401: 65 01        	adc	<R0
  8751 09:9403: 48           	pha
  8752 09:9404: 18           	clc
  8753 09:9405: A9 06 00     	lda	#$6
  8754 09:9408: 65 09        	adc	<L280+offset_1
  8755 09:940A: 85 01        	sta	<R0
  8756 09:940C: A5 01        	lda	<R0
  8757 09:940E: 85 01        	sta	<R0
  8758 09:9410: 64 03        	stz	<R0+2
  8759 09:9412: 18           	clc
  8760 09:9413: A5 2D        	lda	<L279+data_0
  8761 09:9415: 65 01        	adc	<R0
  8762 09:9417: 85 05        	sta	<R1
  8763 09:9419: A5 2F        	lda	<L279+data_0+2
  8764 09:941B: 65 03        	adc	<R0+2
  8765 09:941D: 85 07        	sta	<R1+2
  8766 09:941F: D4 07        	pei	<R1+2
  Sat Jul 10 2021  1:15                                                Page 163


  8767 09:9421: D4 05        	pei	<R1
  8768 09:9423: 22 B1 A5 09  	jsl	~~DecodeSuperInterseg1324
  8769 09:9427: 85 22        	sta	<L280+current_SuperInterseg1324_1
  8770 09:9429: 86 24        	stx	<L280+current_SuperInterseg1324_1+2
  8771                        ;          if(current_SuperInterseg1324 == NULL)
  8772                        	.line	1216
  8773                        ;            {
  8774 09:942B: A5 22        	lda	<L280+current_SuperInterseg1324_1
  8775 09:942D: 05 24        	ora	<L280+current_SuperInterseg1324_1+2
  8776 09:942F: F0 03        	beq	L305
  8777 09:9431: 82 12 00     	brl	L10225
  8778                        L305:
  8779                        	.line	1217
  8780                        ;              mem_free_SUPER(current_record);
  8781                        	.line	1218
  8782 09:9434: D4 10        	pei	<L280+current_record_1+2
  8783 09:9436: D4 0E        	pei	<L280+current_record_1
  8784 09:9438: 22 1A B1 09  	jsl	~~mem_free_SUPER
  8785                        ;              return(NULL);
  8786                        	.line	1219
  8787 09:943C: A9 00 00     	lda	#$0
  8788 09:943F: AA           	tax
  8789 09:9440: A9 00 00     	lda	#$0
  8790 09:9443: 82 EA FA     	brl	L283
  8791                        ;            }
  8792                        	.line	1220
  8793                        ;
  8794                        ;          /* Attache à la liste chainée */
  8795                        ;          if(current_record->first_SuperInterseg1
                    324 == NULL)
  8796                        L10225:
  8797                        	.line	1223
  8798                        ;            current_record->first_SuperInterseg13
                    24 = current_SuperInterseg1324;
  8799 09:9446: A0 38 00     	ldy	#$38
  8800 09:9449: B7 0E        	lda	[<L280+current_record_1],Y
  8801 09:944B: A0 3A 00     	ldy	#$3a
  8802 09:944E: 17 0E        	ora	[<L280+current_record_1],Y
  8803 09:9450: F0 03        	beq	L306
  8804 09:9452: 82 11 00     	brl	L10226
  8805                        L306:
  8806                        	.line	1224
  8807 09:9455: A5 22        	lda	<L280+current_SuperInterseg1324_1
  8808 09:9457: A0 38 00     	ldy	#$38
  8809 09:945A: 97 0E        	sta	[<L280+current_record_1],Y
  8810 09:945C: A5 24        	lda	<L280+current_SuperInterseg1324_1+2
  8811 09:945E: A0 3A 00     	ldy	#$3a
  8812 09:9461: 97 0E        	sta	[<L280+current_record_1],Y
  8813                        ;          else
  8814 09:9463: 82 1C 00     	brl	L10227
  8815                        L10226:
  8816                        ;            current_record->last_SuperInterseg132
                    4->next = current_SuperInterseg1324;
  8817                        	.line	1226
  8818 09:9466: A0 3C 00     	ldy	#$3c
  8819 09:9469: B7 0E        	lda	[<L280+current_record_1],Y
  8820 09:946B: 85 01        	sta	<R0
  8821 09:946D: A0 3E 00     	ldy	#$3e
  Sat Jul 10 2021  1:15                                                Page 164


  8822 09:9470: B7 0E        	lda	[<L280+current_record_1],Y
  8823 09:9472: 85 03        	sta	<R0+2
  8824 09:9474: A5 22        	lda	<L280+current_SuperInterseg1324_1
  8825 09:9476: A0 10 08     	ldy	#$810
  8826 09:9479: 97 01        	sta	[<R0],Y
  8827 09:947B: A5 24        	lda	<L280+current_SuperInterseg1324_1+2
  8828 09:947D: A0 12 08     	ldy	#$812
  8829 09:9480: 97 01        	sta	[<R0],Y
  8830                        L10227:
  8831                        ;          current_record->last_SuperInterseg1324 
                    = current_SuperInterseg1324;
  8832                        	.line	1227
  8833 09:9482: A5 22        	lda	<L280+current_SuperInterseg1324_1
  8834 09:9484: A0 3C 00     	ldy	#$3c
  8835 09:9487: 97 0E        	sta	[<L280+current_record_1],Y
  8836 09:9489: A5 24        	lda	<L280+current_SuperInterseg1324_1+2
  8837 09:948B: A0 3E 00     	ldy	#$3e
  8838 09:948E: 97 0E        	sta	[<L280+current_record_1],Y
  8839                        ;          current_record->nb_SuperInterseg1324++;
  8840                        	.line	1228
  8841 09:9490: A0 36 00     	ldy	#$36
  8842 09:9493: B7 0E        	lda	[<L280+current_record_1],Y
  8843 09:9495: 1A           	ina
  8844 09:9496: A0 36 00     	ldy	#$36
  8845 09:9499: 97 0E        	sta	[<L280+current_record_1],Y
  8846                        ;
  8847                        ;          /* SubRecord suivant */
  8848                        ;          offset += length;
  8849                        	.line	1231
  8850 09:949B: 18           	clc
  8851 09:949C: A5 09        	lda	<L280+offset_1
  8852 09:949E: 65 0B        	adc	<L280+length_1
  8853 09:94A0: 85 09        	sta	<L280+offset_1
  8854                        ;          if(offset == (int) (current_record->Byt
                    eCnt-1))
  8855                        	.line	1232
  8856                        ;            break;
  8857 09:94A2: 18           	clc
  8858 09:94A3: A9 FF FF     	lda	#$ffff
  8859 09:94A6: A0 09 00     	ldy	#$9
  8860 09:94A9: 77 0E        	adc	[<L280+current_record_1],Y
  8861 09:94AB: 85 01        	sta	<R0
  8862 09:94AD: A9 FF FF     	lda	#$ffff
  8863 09:94B0: A0 0B 00     	ldy	#$b
  8864 09:94B3: 77 0E        	adc	[<L280+current_record_1],Y
  8865 09:94B5: 85 03        	sta	<R0+2
  8866 09:94B7: A5 01        	lda	<R0
  8867 09:94B9: C5 09        	cmp	<L280+offset_1
  8868 09:94BB: D0 03        	bne	L307
  8869 09:94BD: 82 03 00     	brl	L10224
  8870                        L307:
  8871                        ;        }
  8872                        	.line	1234
  8873 09:94C0: 82 14 FF     	brl	L10223
  8874                        L10224:
  8875                        ;    }
  8876                        	.line	1235
  8877                        ;  else if(current_record->RecordType >= 0x1A && c
  Sat Jul 10 2021  1:15                                                Page 165


                    urrent_record->RecordType <= 0x25)  /* 26-37 */
  8878 09:94C3: 82 17 01     	brl	L10228
  8879                        L10222:
  8880                        	.line	1236
  8881                        ;    {
  8882 09:94C6: E2 20        	sep	#$20
  8883                        	longa	off
  8884 09:94C8: A0 0D 00     	ldy	#$d
  8885 09:94CB: B7 0E        	lda	[<L280+current_record_1],Y
  8886 09:94CD: C9 1A        	cmp	#<$1a
  8887 09:94CF: C2 20        	rep	#$20
  8888                        	longa	on
  8889 09:94D1: B0 03        	bcs	L308
  8890 09:94D3: 82 07 01     	brl	L10229
  8891                        L308:
  8892 09:94D6: E2 20        	sep	#$20
  8893                        	longa	off
  8894 09:94D8: A9 25        	lda	#$25
  8895 09:94DA: A0 0D 00     	ldy	#$d
  8896 09:94DD: D7 0E        	cmp	[<L280+current_record_1],Y
  8897 09:94DF: C2 20        	rep	#$20
  8898                        	longa	on
  8899 09:94E1: B0 03        	bcs	L309
  8900 09:94E3: 82 F7 00     	brl	L10229
  8901                        L309:
  8902                        	.line	1237
  8903                        ;      /** Super Interseg 25-36 **/
  8904                        ;      offset = 0;
  8905                        	.line	1239
  8906 09:94E6: 64 09        	stz	<L280+offset_1
  8907                        ;      page = 0x00;
  8908                        	.line	1240
  8909 09:94E8: E2 20        	sep	#$20
  8910                        	longa	off
  8911 09:94EA: 64 0D        	stz	<L280+page_1
  8912 09:94EC: C2 20        	rep	#$20
  8913                        	longa	on
  8914                        ;      while(1)
  8915                        	.line	1241
  8916                        L10230:
  8917                        ;        {
  8918                        	.line	1242
  8919                        ;          /* Récupère les données */
  8920                        ;          current_SuperInterseg2536 = DecodeSuper
                    Interseg2536(&data[1+sizeof(DWORD)+1+offset],current_record-
                    >RecordType-1-24,lconst,lconst_length,&page,&length,current_
                    segment);
  8921                        	.line	1244
  8922 09:94EE: D4 41        	pei	<L279+current_segment_0+2
  8923 09:94F0: D4 3F        	pei	<L279+current_segment_0
  8924 09:94F2: F4 00 00     	pea	#0
  8925 09:94F5: 18           	clc
  8926 09:94F6: 7B           	tdc
  8927 09:94F7: 69 0B 00     	adc	#<L280+length_1
  8928 09:94FA: 48           	pha
  8929 09:94FB: F4 00 00     	pea	#0
  8930 09:94FE: 18           	clc
  8931 09:94FF: 7B           	tdc
  Sat Jul 10 2021  1:15                                                Page 166


  8932 09:9500: 69 0D 00     	adc	#<L280+page_1
  8933 09:9503: 48           	pha
  8934 09:9504: D4 39        	pei	<L279+lconst_length_0
  8935 09:9506: D4 37        	pei	<L279+lconst_0+2
  8936 09:9508: D4 35        	pei	<L279+lconst_0
  8937 09:950A: A0 0D 00     	ldy	#$d
  8938 09:950D: B7 0E        	lda	[<L280+current_record_1],Y
  8939 09:950F: 29 FF 00     	and	#$ff
  8940 09:9512: 85 01        	sta	<R0
  8941 09:9514: 18           	clc
  8942 09:9515: A9 E7 FF     	lda	#$ffe7
  8943 09:9518: 65 01        	adc	<R0
  8944 09:951A: 48           	pha
  8945 09:951B: 18           	clc
  8946 09:951C: A9 06 00     	lda	#$6
  8947 09:951F: 65 09        	adc	<L280+offset_1
  8948 09:9521: 85 01        	sta	<R0
  8949 09:9523: A5 01        	lda	<R0
  8950 09:9525: 85 01        	sta	<R0
  8951 09:9527: 64 03        	stz	<R0+2
  8952 09:9529: 18           	clc
  8953 09:952A: A5 2D        	lda	<L279+data_0
  8954 09:952C: 65 01        	adc	<R0
  8955 09:952E: 85 05        	sta	<R1
  8956 09:9530: A5 2F        	lda	<L279+data_0+2
  8957 09:9532: 65 03        	adc	<R0+2
  8958 09:9534: 85 07        	sta	<R1+2
  8959 09:9536: D4 07        	pei	<R1+2
  8960 09:9538: D4 05        	pei	<R1
  8961 09:953A: 22 F2 A8 09  	jsl	~~DecodeSuperInterseg2536
  8962 09:953E: 85 26        	sta	<L280+current_SuperInterseg2536_1
  8963 09:9540: 86 28        	stx	<L280+current_SuperInterseg2536_1+2
  8964                        ;          if(current_SuperInterseg2536 == NULL)
  8965                        	.line	1245
  8966                        ;            {
  8967 09:9542: A5 26        	lda	<L280+current_SuperInterseg2536_1
  8968 09:9544: 05 28        	ora	<L280+current_SuperInterseg2536_1+2
  8969 09:9546: F0 03        	beq	L310
  8970 09:9548: 82 12 00     	brl	L10232
  8971                        L310:
  8972                        	.line	1246
  8973                        ;              mem_free_SUPER(current_record);
  8974                        	.line	1247
  8975 09:954B: D4 10        	pei	<L280+current_record_1+2
  8976 09:954D: D4 0E        	pei	<L280+current_record_1
  8977 09:954F: 22 1A B1 09  	jsl	~~mem_free_SUPER
  8978                        ;              return(NULL);
  8979                        	.line	1248
  8980 09:9553: A9 00 00     	lda	#$0
  8981 09:9556: AA           	tax
  8982 09:9557: A9 00 00     	lda	#$0
  8983 09:955A: 82 D3 F9     	brl	L283
  8984                        ;            }
  8985                        	.line	1249
  8986                        ;
  8987                        ;          /* Attache à la liste chainée */
  8988                        ;          if(current_record->first_SuperInterseg2
                    536 == NULL)
  Sat Jul 10 2021  1:15                                                Page 167


  8989                        L10232:
  8990                        	.line	1252
  8991                        ;            current_record->first_SuperInterseg25
                    36 = current_SuperInterseg2536;
  8992 09:955D: A0 42 00     	ldy	#$42
  8993 09:9560: B7 0E        	lda	[<L280+current_record_1],Y
  8994 09:9562: A0 44 00     	ldy	#$44
  8995 09:9565: 17 0E        	ora	[<L280+current_record_1],Y
  8996 09:9567: F0 03        	beq	L311
  8997 09:9569: 82 11 00     	brl	L10233
  8998                        L311:
  8999                        	.line	1253
  9000 09:956C: A5 26        	lda	<L280+current_SuperInterseg2536_1
  9001 09:956E: A0 42 00     	ldy	#$42
  9002 09:9571: 97 0E        	sta	[<L280+current_record_1],Y
  9003 09:9573: A5 28        	lda	<L280+current_SuperInterseg2536_1+2
  9004 09:9575: A0 44 00     	ldy	#$44
  9005 09:9578: 97 0E        	sta	[<L280+current_record_1],Y
  9006                        ;          else
  9007 09:957A: 82 1C 00     	brl	L10234
  9008                        L10233:
  9009                        ;            current_record->last_SuperInterseg253
                    6->next = current_SuperInterseg2536;
  9010                        	.line	1255
  9011 09:957D: A0 46 00     	ldy	#$46
  9012 09:9580: B7 0E        	lda	[<L280+current_record_1],Y
  9013 09:9582: 85 01        	sta	<R0
  9014 09:9584: A0 48 00     	ldy	#$48
  9015 09:9587: B7 0E        	lda	[<L280+current_record_1],Y
  9016 09:9589: 85 03        	sta	<R0+2
  9017 09:958B: A5 26        	lda	<L280+current_SuperInterseg2536_1
  9018 09:958D: A0 10 08     	ldy	#$810
  9019 09:9590: 97 01        	sta	[<R0],Y
  9020 09:9592: A5 28        	lda	<L280+current_SuperInterseg2536_1+2
  9021 09:9594: A0 12 08     	ldy	#$812
  9022 09:9597: 97 01        	sta	[<R0],Y
  9023                        L10234:
  9024                        ;          current_record->last_SuperInterseg2536 
                    = current_SuperInterseg2536;
  9025                        	.line	1256
  9026 09:9599: A5 26        	lda	<L280+current_SuperInterseg2536_1
  9027 09:959B: A0 46 00     	ldy	#$46
  9028 09:959E: 97 0E        	sta	[<L280+current_record_1],Y
  9029 09:95A0: A5 28        	lda	<L280+current_SuperInterseg2536_1+2
  9030 09:95A2: A0 48 00     	ldy	#$48
  9031 09:95A5: 97 0E        	sta	[<L280+current_record_1],Y
  9032                        ;          current_record->nb_SuperInterseg2536++;
  9033                        	.line	1257
  9034 09:95A7: A0 40 00     	ldy	#$40
  9035 09:95AA: B7 0E        	lda	[<L280+current_record_1],Y
  9036 09:95AC: 1A           	ina
  9037 09:95AD: A0 40 00     	ldy	#$40
  9038 09:95B0: 97 0E        	sta	[<L280+current_record_1],Y
  9039                        ;
  9040                        ;          /* SubRecord suivant */
  9041                        ;          offset += length;
  9042                        	.line	1260
  9043 09:95B2: 18           	clc
  Sat Jul 10 2021  1:15                                                Page 168


  9044 09:95B3: A5 09        	lda	<L280+offset_1
  9045 09:95B5: 65 0B        	adc	<L280+length_1
  9046 09:95B7: 85 09        	sta	<L280+offset_1
  9047                        ;          if(offset == (int) (current_record->Byt
                    eCnt-1))
  9048                        	.line	1261
  9049                        ;            break;
  9050 09:95B9: 18           	clc
  9051 09:95BA: A9 FF FF     	lda	#$ffff
  9052 09:95BD: A0 09 00     	ldy	#$9
  9053 09:95C0: 77 0E        	adc	[<L280+current_record_1],Y
  9054 09:95C2: 85 01        	sta	<R0
  9055 09:95C4: A9 FF FF     	lda	#$ffff
  9056 09:95C7: A0 0B 00     	ldy	#$b
  9057 09:95CA: 77 0E        	adc	[<L280+current_record_1],Y
  9058 09:95CC: 85 03        	sta	<R0+2
  9059 09:95CE: A5 01        	lda	<R0
  9060 09:95D0: C5 09        	cmp	<L280+offset_1
  9061 09:95D2: D0 03        	bne	L312
  9062 09:95D4: 82 03 00     	brl	L10231
  9063                        L312:
  9064                        ;        }
  9065                        	.line	1263
  9066 09:95D7: 82 14 FF     	brl	L10230
  9067                        L10231:
  9068                        ;    }
  9069                        	.line	1264
  9070                        ;  else
  9071 09:95DA: 82 00 00     	brl	L10235
  9072                        L10229:
  9073                        ;    {
  9074                        	.line	1266
  9075                        ;      //printf("");
  9076                        ;    }
  9077                        	.line	1268
  9078                        L10235:
  9079                        L10228:
  9080                        L10221:
  9081                        L10214:
  9082                        L10207:
  9083                        L10200:
  9084                        ;
  9085                        ;  /* Renvoie la structure */
  9086                        ;  *record_length_rtn = 1 + sizeof(DWORD) + curren
                    t_record->ByteCnt;
  9087                        	.line	1271
  9088 09:95DD: 18           	clc
  9089 09:95DE: A9 05 00     	lda	#$5
  9090 09:95E1: A0 09 00     	ldy	#$9
  9091 09:95E4: 77 0E        	adc	[<L280+current_record_1],Y
  9092 09:95E6: 85 01        	sta	<R0
  9093 09:95E8: A9 00 00     	lda	#$0
  9094 09:95EB: A0 0B 00     	ldy	#$b
  9095 09:95EE: 77 0E        	adc	[<L280+current_record_1],Y
  9096 09:95F0: 85 03        	sta	<R0+2
  9097 09:95F2: A5 01        	lda	<R0
  9098 09:95F4: 87 3B        	sta	[<L279+record_length_rtn_0]
  9099                        ;  return(current_record);
  Sat Jul 10 2021  1:15                                                Page 169


  9100                        	.line	1272
  9101 09:95F6: A6 10        	ldx	<L280+current_record_1+2
  9102 09:95F8: A5 0E        	lda	<L280+current_record_1
  9103 09:95FA: 82 33 F9     	brl	L283
  9104                        ;}
  9105                        	.line	1273
  9106                        	.endblock	1273
  9107             00000029   L279	equ	41
  9108             00000009   L280	equ	9
  9109 09:95FD:              	ends
  9110                        	efunc
  9111                        	.endfunc	1273,9,41
  9112                        	.line	1273
  9113                        ;
  9114                        ;
  9115                        ;/************************************************
                    *********/
  9116                        ;/*  DecodeRecordGeneral() :  Décodage du Record G
                    eneral. */
  9117                        ;/************************************************
                    *********/
  9118                        ;static void *DecodeRecordGeneral(unsigned char *d
                    ata, int file_offset, int segment_offset, int *record_length
                    _rtn)
  9119                        ;{
  9120                        	.line	1279
  9121                        	.line	1280
  9122                        	LOADER
  9123                        	func
  9124                        	.function	1280
  9125                        ~~DecodeRecordGeneral:
  9126                        	longa	on
  9127                        	longi	on
  9128 09:95FD: 3B           	tsc
  9129 09:95FE: 38           	sec
  9130 09:95FF: E9 08 00     	sbc	#L313
  9131 09:9602: 1B           	tcs
  9132 09:9603: 0B           	phd
  9133 09:9604: 5B           	tcd
  9134             00000004   data_0	set	4
  9135             00000008   file_offset_0	set	8
  9136             0000000A   segment_offset_0	set	10
  9137             0000000C   record_length_rtn_0	set	12
  9138                        	.block	1280
  9139                        ;  struct record_General *current_record;
  9140                        ;
  9141                        ;  /* Allocation mémoire */
  9142                        ;  current_record = (struct record_General *) k_ca
                    lloc(1,sizeof(struct record_General));
  9143             00000000   current_record_1	set	0
  9144                        	.sym	current_record,0,138,1,32,119
  9145                        	.sym	data,4,142,6,32
  9146                        	.sym	file_offset,8,5,6,16
  9147                        	.sym	segment_offset,10,5,6,16
  9148                        	.sym	record_length_rtn,12,133,6,32
  9149                        	.line	1284
  9150 09:9605: F4 09 00     	pea	#<$9
  9151 09:9608: F4 01 00     	pea	#<$1
  Sat Jul 10 2021  1:15                                                Page 170


  9152 09:960B: 22 xx xx xx  	jsl	~~k_calloc
  9153 09:960F: 85 05        	sta	<L314+current_record_1
  9154 09:9611: 86 07        	stx	<L314+current_record_1+2
  9155                        ;  if(current_record == NULL)
  9156                        	.line	1285
  9157                        ;    {
  9158 09:9613: A5 05        	lda	<L314+current_record_1
  9159 09:9615: 05 07        	ora	<L314+current_record_1+2
  9160 09:9617: F0 03        	beq	L316
  9161 09:9619: 82 19 00     	brl	L10236
  9162                        L316:
  9163                        	.line	1286
  9164                        ;      //printf("Error : Impossible to allocate me
                    mory to process Segment Body Record.\n");
  9165                        ;      return(NULL);
  9166                        	.line	1288
  9167 09:961C: A9 00 00     	lda	#$0
  9168 09:961F: AA           	tax
  9169 09:9620: A9 00 00     	lda	#$0
  9170                        L317:
  9171 09:9623: A8           	tay
  9172 09:9624: A5 0A        	lda	<L313+2
  9173 09:9626: 85 16        	sta	<L313+2+12
  9174 09:9628: A5 09        	lda	<L313+1
  9175 09:962A: 85 15        	sta	<L313+1+12
  9176 09:962C: 2B           	pld
  9177 09:962D: 3B           	tsc
  9178 09:962E: 18           	clc
  9179 09:962F: 69 14 00     	adc	#L313+12
  9180 09:9632: 1B           	tcs
  9181 09:9633: 98           	tya
  9182 09:9634: 6B           	rtl
  9183                        ;    }
  9184                        	.line	1289
  9185                        ;
  9186                        ;  /* Offset */
  9187                        ;  current_record->FileOffset = (DWORD) file_offse
                    t;
  9188                        L10236:
  9189                        	.line	1292
  9190 09:9635: A0 00 00     	ldy	#$0
  9191 09:9638: A5 10        	lda	<L313+file_offset_0
  9192 09:963A: 10 01        	bpl	L318
  9193 09:963C: 88           	dey
  9194                        L318:
  9195 09:963D: 85 01        	sta	<R0
  9196 09:963F: 84 03        	sty	<R0+2
  9197 09:9641: A5 01        	lda	<R0
  9198 09:9643: 87 05        	sta	[<L314+current_record_1]
  9199 09:9645: A5 03        	lda	<R0+2
  9200 09:9647: A0 02 00     	ldy	#$2
  9201 09:964A: 97 05        	sta	[<L314+current_record_1],Y
  9202                        ;  current_record->SegmentOffset = (DWORD) segment
                    _offset;
  9203                        	.line	1293
  9204 09:964C: A0 00 00     	ldy	#$0
  9205 09:964F: A5 12        	lda	<L313+segment_offset_0
  9206 09:9651: 10 01        	bpl	L319
  Sat Jul 10 2021  1:15                                                Page 171


  9207 09:9653: 88           	dey
  9208                        L319:
  9209 09:9654: 85 01        	sta	<R0
  9210 09:9656: 84 03        	sty	<R0+2
  9211 09:9658: A5 01        	lda	<R0
  9212 09:965A: A0 04 00     	ldy	#$4
  9213 09:965D: 97 05        	sta	[<L314+current_record_1],Y
  9214 09:965F: A5 03        	lda	<R0+2
  9215 09:9661: A0 06 00     	ldy	#$6
  9216 09:9664: 97 05        	sta	[<L314+current_record_1],Y
  9217                        ;
  9218                        ;  /* Operation Code */
  9219                        ;  current_record->operation_code = data[0];
  9220                        	.line	1296
  9221 09:9666: E2 20        	sep	#$20
  9222                        	longa	off
  9223 09:9668: A7 0C        	lda	[<L313+data_0]
  9224 09:966A: A0 08 00     	ldy	#$8
  9225 09:966D: 97 05        	sta	[<L314+current_record_1],Y
  9226 09:966F: C2 20        	rep	#$20
  9227                        	longa	on
  9228                        ;
  9229                        ;  /* Renvoie la structure */
  9230                        ;  return(current_record);
  9231                        	.line	1299
  9232 09:9671: A6 07        	ldx	<L314+current_record_1+2
  9233 09:9673: A5 05        	lda	<L314+current_record_1
  9234 09:9675: 82 AB FF     	brl	L317
  9235                        ;}
  9236                        	.line	1300
  9237                        	.endblock	1300
  9238             00000008   L313	equ	8
  9239             00000005   L314	equ	5
  9240 09:9678:              	ends
  9241                        	efunc
  9242                        	.endfunc	1300,5,8
  9243                        	.line	1300
  9244                        ;
  9245                        ;
  9246                        ;/************************************************
                    *******************/
  9247                        ;/*  DecodeRecordExperimental() :  Décodage du Rec
                    ord Experimental. */
  9248                        ;/************************************************
                    *******************/
  9249                        ;static void *DecodeRecordExperimental(unsigned ch
                    ar *data, int file_offset, int segment_offset, int *record_l
                    ength_rtn)
  9250                        ;{
  9251                        	.line	1306
  9252                        	.line	1307
  9253                        	LOADER
  9254                        	func
  9255                        	.function	1307
  9256                        ~~DecodeRecordExperimental:
  9257                        	longa	on
  9258                        	longi	on
  9259 09:9678: 3B           	tsc
  Sat Jul 10 2021  1:15                                                Page 172


  9260 09:9679: 38           	sec
  9261 09:967A: E9 08 00     	sbc	#L320
  9262 09:967D: 1B           	tcs
  9263 09:967E: 0B           	phd
  9264 09:967F: 5B           	tcd
  9265             00000004   data_0	set	4
  9266             00000008   file_offset_0	set	8
  9267             0000000A   segment_offset_0	set	10
  9268             0000000C   record_length_rtn_0	set	12
  9269                        	.block	1307
  9270                        ;  struct record_Experimental *current_record;
  9271                        ;
  9272                        ;  /* Allocation mémoire */
  9273                        ;  current_record = (struct record_Experimental *)
                     k_calloc(1,sizeof(struct record_Experimental));
  9274             00000000   current_record_1	set	0
  9275                        	.sym	current_record,0,138,1,32,120
  9276                        	.sym	data,4,142,6,32
  9277                        	.sym	file_offset,8,5,6,16
  9278                        	.sym	segment_offset,10,5,6,16
  9279                        	.sym	record_length_rtn,12,133,6,32
  9280                        	.line	1311
  9281 09:9680: F4 09 00     	pea	#<$9
  9282 09:9683: F4 01 00     	pea	#<$1
  9283 09:9686: 22 xx xx xx  	jsl	~~k_calloc
  9284 09:968A: 85 05        	sta	<L321+current_record_1
  9285 09:968C: 86 07        	stx	<L321+current_record_1+2
  9286                        ;  if(current_record == NULL)
  9287                        	.line	1312
  9288                        ;    {
  9289 09:968E: A5 05        	lda	<L321+current_record_1
  9290 09:9690: 05 07        	ora	<L321+current_record_1+2
  9291 09:9692: F0 03        	beq	L323
  9292 09:9694: 82 19 00     	brl	L10237
  9293                        L323:
  9294                        	.line	1313
  9295                        ;      //printf("Error : Impossible to allocate me
                    mory to process Segment Body Record.\n");
  9296                        ;      return(NULL);
  9297                        	.line	1315
  9298 09:9697: A9 00 00     	lda	#$0
  9299 09:969A: AA           	tax
  9300 09:969B: A9 00 00     	lda	#$0
  9301                        L324:
  9302 09:969E: A8           	tay
  9303 09:969F: A5 0A        	lda	<L320+2
  9304 09:96A1: 85 16        	sta	<L320+2+12
  9305 09:96A3: A5 09        	lda	<L320+1
  9306 09:96A5: 85 15        	sta	<L320+1+12
  9307 09:96A7: 2B           	pld
  9308 09:96A8: 3B           	tsc
  9309 09:96A9: 18           	clc
  9310 09:96AA: 69 14 00     	adc	#L320+12
  9311 09:96AD: 1B           	tcs
  9312 09:96AE: 98           	tya
  9313 09:96AF: 6B           	rtl
  9314                        ;    }
  9315                        	.line	1316
  Sat Jul 10 2021  1:15                                                Page 173


  9316                        ;
  9317                        ;  /* Offset */
  9318                        ;  current_record->FileOffset = (DWORD) file_offse
                    t;
  9319                        L10237:
  9320                        	.line	1319
  9321 09:96B0: A0 00 00     	ldy	#$0
  9322 09:96B3: A5 10        	lda	<L320+file_offset_0
  9323 09:96B5: 10 01        	bpl	L325
  9324 09:96B7: 88           	dey
  9325                        L325:
  9326 09:96B8: 85 01        	sta	<R0
  9327 09:96BA: 84 03        	sty	<R0+2
  9328 09:96BC: A5 01        	lda	<R0
  9329 09:96BE: 87 05        	sta	[<L321+current_record_1]
  9330 09:96C0: A5 03        	lda	<R0+2
  9331 09:96C2: A0 02 00     	ldy	#$2
  9332 09:96C5: 97 05        	sta	[<L321+current_record_1],Y
  9333                        ;  current_record->SegmentOffset = (DWORD) segment
                    _offset;
  9334                        	.line	1320
  9335 09:96C7: A0 00 00     	ldy	#$0
  9336 09:96CA: A5 12        	lda	<L320+segment_offset_0
  9337 09:96CC: 10 01        	bpl	L326
  9338 09:96CE: 88           	dey
  9339                        L326:
  9340 09:96CF: 85 01        	sta	<R0
  9341 09:96D1: 84 03        	sty	<R0+2
  9342 09:96D3: A5 01        	lda	<R0
  9343 09:96D5: A0 04 00     	ldy	#$4
  9344 09:96D8: 97 05        	sta	[<L321+current_record_1],Y
  9345 09:96DA: A5 03        	lda	<R0+2
  9346 09:96DC: A0 06 00     	ldy	#$6
  9347 09:96DF: 97 05        	sta	[<L321+current_record_1],Y
  9348                        ;
  9349                        ;  /* Operation Code */
  9350                        ;  current_record->operation_code = data[0];
  9351                        	.line	1323
  9352 09:96E1: E2 20        	sep	#$20
  9353                        	longa	off
  9354 09:96E3: A7 0C        	lda	[<L320+data_0]
  9355 09:96E5: A0 08 00     	ldy	#$8
  9356 09:96E8: 97 05        	sta	[<L321+current_record_1],Y
  9357 09:96EA: C2 20        	rep	#$20
  9358                        	longa	on
  9359                        ;
  9360                        ;  /* Renvoie la structure */
  9361                        ;  return(current_record);
  9362                        	.line	1326
  9363 09:96EC: A6 07        	ldx	<L321+current_record_1+2
  9364 09:96EE: A5 05        	lda	<L321+current_record_1
  9365 09:96F0: 82 AB FF     	brl	L324
  9366                        ;}
  9367                        	.line	1327
  9368                        	.endblock	1327
  9369             00000008   L320	equ	8
  9370             00000005   L321	equ	5
  9371 09:96F3:              	ends
  Sat Jul 10 2021  1:15                                                Page 174


  9372                        	efunc
  9373                        	.endfunc	1327,5,8
  9374                        	.line	1327
  9375                        ;
  9376                        ;
  9377                        ;/************************************************
                    ****************/
  9378                        ;/*  DecodeSuperReloc2() :  Décodage d'un SubRecor
                    d SuperReloc2. */
  9379                        ;/************************************************
                    ****************/
  9380                        ;static struct subrecord_SuperReloc2 *DecodeSuperR
                    eloc2(unsigned char *data, unsigned char *lconst, int lconst
                    _length, BYTE *page_rtn, int *length_rtn, struct omf_segment
                     *current_segment)
  9381                        ;{
  9382                        	.line	1333
  9383                        	.line	1334
  9384                        	LOADER
  9385                        	func
  9386                        	.function	1334
  9387                        ~~DecodeSuperReloc2:
  9388                        	longa	on
  9389                        	longi	on
  9390 09:96F3: 3B           	tsc
  9391 09:96F4: 38           	sec
  9392 09:96F5: E9 20 00     	sbc	#L327
  9393 09:96F8: 1B           	tcs
  9394 09:96F9: 0B           	phd
  9395 09:96FA: 5B           	tcd
  9396             00000004   data_0	set	4
  9397             00000008   lconst_0	set	8
  9398             0000000C   lconst_length_0	set	12
  9399             0000000E   page_rtn_0	set	14
  9400             00000012   length_rtn_0	set	18
  9401             00000016   current_segment_0	set	22
  9402                        	.block	1334
  9403                        ;  int i;
  9404                        ;  WORD one_word;
  9405                        ;  struct subrecord_SuperReloc2 *current_SuperRelo
                    c2;
  9406                        ;
  9407                        ;  /* Allocation mémoire */
  9408                        ;  current_SuperReloc2 = (struct subrecord_SuperRe
                    loc2 *) k_calloc(1,sizeof(struct subrecord_SuperReloc2));
  9409             00000000   i_1	set	0
  9410             00000002   one_word_1	set	2
  9411             00000004   current_SuperReloc2_1	set	4
  9412                        	.sym	i,0,5,1,16
  9413                        	.sym	one_word,2,5,1,16
  9414                        	.sym	current_SuperReloc2,4,138,1,32,89
  9415                        	.sym	data,4,142,6,32
  9416                        	.sym	lconst,8,142,6,32
  9417                        	.sym	lconst_length,12,5,6,16
  9418                        	.sym	page_rtn,14,142,6,32
  9419                        	.sym	length_rtn,18,133,6,32
  9420                        	.sym	current_segment,22,138,6,32,86
  9421                        	.line	1340
  Sat Jul 10 2021  1:15                                                Page 175


  9422 09:96FB: F4 11 08     	pea	#<$811
  9423 09:96FE: F4 01 00     	pea	#<$1
  9424 09:9701: 22 xx xx xx  	jsl	~~k_calloc
  9425 09:9705: 85 1D        	sta	<L328+current_SuperReloc2_1
  9426 09:9707: 86 1F        	stx	<L328+current_SuperReloc2_1+2
  9427                        ;  if(current_SuperReloc2 == NULL)
  9428                        	.line	1341
  9429                        ;    {
  9430 09:9709: A5 1D        	lda	<L328+current_SuperReloc2_1
  9431 09:970B: 05 1F        	ora	<L328+current_SuperReloc2_1+2
  9432 09:970D: F0 03        	beq	L330
  9433 09:970F: 82 19 00     	brl	L10238
  9434                        L330:
  9435                        	.line	1342
  9436                        ;      //printf("Error : Impossible to allocate me
                    mory for SubRecord SuperReloc2 for Segment #%02X.\n",current
                    _segment->header.SegNum);
  9437                        ;      return(NULL);
  9438                        	.line	1344
  9439 09:9712: A9 00 00     	lda	#$0
  9440 09:9715: AA           	tax
  9441 09:9716: A9 00 00     	lda	#$0
  9442                        L331:
  9443 09:9719: A8           	tay
  9444 09:971A: A5 22        	lda	<L327+2
  9445 09:971C: 85 38        	sta	<L327+2+22
  9446 09:971E: A5 21        	lda	<L327+1
  9447 09:9720: 85 37        	sta	<L327+1+22
  9448 09:9722: 2B           	pld
  9449 09:9723: 3B           	tsc
  9450 09:9724: 18           	clc
  9451 09:9725: 69 36 00     	adc	#L327+22
  9452 09:9728: 1B           	tcs
  9453 09:9729: 98           	tya
  9454 09:972A: 6B           	rtl
  9455                        ;    }
  9456                        	.line	1345
  9457                        ;
  9458                        ;  /* Nombre d'adresse-1 ou Saut de Page */
  9459                        ;  current_SuperReloc2->Count = data[0];
  9460                        L10238:
  9461                        	.line	1348
  9462 09:972B: E2 20        	sep	#$20
  9463                        	longa	off
  9464 09:972D: A7 24        	lda	[<L327+data_0]
  9465 09:972F: A0 08 00     	ldy	#$8
  9466 09:9732: 97 1D        	sta	[<L328+current_SuperReloc2_1],Y
  9467 09:9734: C2 20        	rep	#$20
  9468                        	longa	on
  9469                        ;
  9470                        ;  /** Saut de Page **/
  9471                        ;  if((current_SuperReloc2->Count & 0x80) == 0x80)
  9472                        	.line	1351
  9473                        ;    {
  9474 09:9736: A0 08 00     	ldy	#$8
  9475 09:9739: B7 1D        	lda	[<L328+current_SuperReloc2_1],Y
  9476 09:973B: 29 80 00     	and	#<$80
  9477 09:973E: 85 01        	sta	<R0
  Sat Jul 10 2021  1:15                                                Page 176


  9478 09:9740: A5 01        	lda	<R0
  9479 09:9742: C9 80 00     	cmp	#<$80
  9480 09:9745: F0 03        	beq	L332
  9481 09:9747: 82 24 00     	brl	L10239
  9482                        L332:
  9483                        	.line	1352
  9484                        ;      /* On saute X pages */
  9485                        ;      *page_rtn = *page_rtn + (current_SuperReloc
                    2->Count & 0x7F);
  9486                        	.line	1354
  9487 09:974A: E2 20        	sep	#$20
  9488                        	longa	off
  9489 09:974C: A0 08 00     	ldy	#$8
  9490 09:974F: B7 1D        	lda	[<L328+current_SuperReloc2_1],Y
  9491 09:9751: 29 7F        	and	#<$7f
  9492 09:9753: 85 01        	sta	<R0
  9493 09:9755: C2 20        	rep	#$20
  9494                        	longa	on
  9495 09:9757: E2 20        	sep	#$20
  9496                        	longa	off
  9497 09:9759: 18           	clc
  9498 09:975A: A7 2E        	lda	[<L327+page_rtn_0]
  9499 09:975C: 65 01        	adc	<R0
  9500 09:975E: C2 20        	rep	#$20
  9501                        	longa	on
  9502 09:9760: E2 20        	sep	#$20
  9503                        	longa	off
  9504 09:9762: 87 2E        	sta	[<L327+page_rtn_0]
  9505 09:9764: C2 20        	rep	#$20
  9506                        	longa	on
  9507                        ;
  9508                        ;      /* Longueur du SubRecord */
  9509                        ;      *length_rtn = 1;
  9510                        	.line	1357
  9511 09:9766: A9 01 00     	lda	#$1
  9512 09:9769: 87 32        	sta	[<L327+length_rtn_0]
  9513                        ;    }
  9514                        	.line	1358
  9515                        ;  else
  9516 09:976B: 82 9D 02     	brl	L10240
  9517                        L10239:
  9518                        ;    {
  9519                        	.line	1360
  9520                        ;      /* Number of Bytes to be relocated = Toujou
                    rs à 2 */
  9521                        ;      current_SuperReloc2->ByteCnt = 0x02;
  9522                        	.line	1362
  9523 09:976E: E2 20        	sep	#$20
  9524                        	longa	off
  9525 09:9770: A9 02        	lda	#$2
  9526 09:9772: A0 09 00     	ldy	#$9
  9527 09:9775: 97 1D        	sta	[<L328+current_SuperReloc2_1],Y
  9528 09:9777: C2 20        	rep	#$20
  9529                        	longa	on
  9530                        ;
  9531                        ;      /* Opérations >> ou << = Toujours à 0  */
  9532                        ;      current_SuperReloc2->BitShiftCnt = 0x00;
  9533                        	.line	1365
  Sat Jul 10 2021  1:15                                                Page 177


  9534 09:9779: E2 20        	sep	#$20
  9535                        	longa	off
  9536 09:977B: A9 00        	lda	#$0
  9537 09:977D: A0 0A 00     	ldy	#$a
  9538 09:9780: 97 1D        	sta	[<L328+current_SuperReloc2_1],Y
  9539 09:9782: C2 20        	rep	#$20
  9540                        	longa	on
  9541                        ;
  9542                        ;      /* Nombre d'adresse */
  9543                        ;      current_SuperReloc2->nb_address = current_S
                    uperReloc2->Count + 1;
  9544                        	.line	1368
  9545 09:9784: A0 08 00     	ldy	#$8
  9546 09:9787: B7 1D        	lda	[<L328+current_SuperReloc2_1],Y
  9547 09:9789: 29 FF 00     	and	#$ff
  9548 09:978C: 85 01        	sta	<R0
  9549 09:978E: A5 01        	lda	<R0
  9550 09:9790: 1A           	ina
  9551 09:9791: A0 0B 00     	ldy	#$b
  9552 09:9794: 97 1D        	sta	[<L328+current_SuperReloc2_1],Y
  9553                        ;
  9554                        ;      /** Copie les adresses **/
  9555                        ;      for(i=0; i<current_SuperReloc2->nb_address;
                     i++)
  9556                        	.line	1371
  9557 09:9796: 64 19        	stz	<L328+i_1
  9558 09:9798: 82 49 02     	brl	L10244
  9559                        L10243:
  9560                        ;        {
  9561                        	.line	1372
  9562                        ;          /* Décode OffsetPath et OffsetReference
                     */
  9563                        ;          current_SuperReloc2->OffsetPatch[i] = (
                    (WORD)*page_rtn) << 8 | data[1+i];
  9564                        	.line	1374
  9565 09:979B: A0 00 00     	ldy	#$0
  9566 09:979E: A5 19        	lda	<L328+i_1
  9567 09:97A0: 10 01        	bpl	L333
  9568 09:97A2: 88           	dey
  9569                        L333:
  9570 09:97A3: 85 05        	sta	<R1
  9571 09:97A5: 84 07        	sty	<R1+2
  9572 09:97A7: D4 07        	pei	<R1+2
  9573 09:97A9: D4 05        	pei	<R1
  9574 09:97AB: A9 02 00     	lda	#$2
  9575                        	xref	~~~lasl
  9576 09:97AE: 22 xx xx xx  	jsl	~~~lasl
  9577 09:97B2: 85 01        	sta	<R0
  9578 09:97B4: 86 03        	stx	<R0+2
  9579 09:97B6: 18           	clc
  9580 09:97B7: A9 0D 00     	lda	#$d
  9581 09:97BA: 65 1D        	adc	<L328+current_SuperReloc2_1
  9582 09:97BC: 85 09        	sta	<R2
  9583 09:97BE: A9 00 00     	lda	#$0
  9584 09:97C1: 65 1F        	adc	<L328+current_SuperReloc2_1+2
  9585 09:97C3: 85 0B        	sta	<R2+2
  9586 09:97C5: 18           	clc
  9587 09:97C6: A5 09        	lda	<R2
  Sat Jul 10 2021  1:15                                                Page 178


  9588 09:97C8: 65 01        	adc	<R0
  9589 09:97CA: 85 0D        	sta	<R3
  9590 09:97CC: A5 0B        	lda	<R2+2
  9591 09:97CE: 65 03        	adc	<R0+2
  9592 09:97D0: 85 0F        	sta	<R3+2
  9593 09:97D2: A5 19        	lda	<L328+i_1
  9594 09:97D4: 1A           	ina
  9595 09:97D5: 85 01        	sta	<R0
  9596 09:97D7: A4 01        	ldy	<R0
  9597 09:97D9: B7 24        	lda	[<L327+data_0],Y
  9598 09:97DB: 29 FF 00     	and	#$ff
  9599 09:97DE: 85 09        	sta	<R2
  9600 09:97E0: A7 2E        	lda	[<L327+page_rtn_0]
  9601 09:97E2: 29 FF 00     	and	#$ff
  9602 09:97E5: 85 15        	sta	<21
  9603 09:97E7: A5 15        	lda	<21
  9604 09:97E9: EB           	xba
  9605 09:97EA: 29 00 FF     	and	#$ff00
  9606 09:97ED: 85 11        	sta	<17
  9607 09:97EF: A5 11        	lda	<17
  9608 09:97F1: 05 09        	ora	<R2
  9609 09:97F3: 85 15        	sta	<21
  9610 09:97F5: A0 00 00     	ldy	#$0
  9611 09:97F8: A5 15        	lda	<21
  9612 09:97FA: 10 01        	bpl	L334
  9613 09:97FC: 88           	dey
  9614                        L334:
  9615 09:97FD: 85 09        	sta	<R2
  9616 09:97FF: 84 0B        	sty	<R2+2
  9617 09:9801: A5 09        	lda	<R2
  9618 09:9803: 87 0D        	sta	[<R3]
  9619 09:9805: A5 0B        	lda	<R2+2
  9620 09:9807: A0 02 00     	ldy	#$2
  9621 09:980A: 97 0D        	sta	[<R3],Y
  9622                        ;          
  9623                        ;          /* On vérifie qu'on reste dans les limi
                    te du LCONST */
  9624                        ;          if(current_SuperReloc2->OffsetPatch[i] 
                    > (DWORD) lconst_length)
  9625                        	.line	1377
  9626                        ;            {
  9627 09:980C: A0 00 00     	ldy	#$0
  9628 09:980F: A5 2C        	lda	<L327+lconst_length_0
  9629 09:9811: 10 01        	bpl	L335
  9630 09:9813: 88           	dey
  9631                        L335:
  9632 09:9814: 85 01        	sta	<R0
  9633 09:9816: 84 03        	sty	<R0+2
  9634 09:9818: A0 00 00     	ldy	#$0
  9635 09:981B: A5 19        	lda	<L328+i_1
  9636 09:981D: 10 01        	bpl	L336
  9637 09:981F: 88           	dey
  9638                        L336:
  9639 09:9820: 85 09        	sta	<R2
  9640 09:9822: 84 0B        	sty	<R2+2
  9641 09:9824: D4 0B        	pei	<R2+2
  9642 09:9826: D4 09        	pei	<R2
  9643 09:9828: A9 02 00     	lda	#$2
  Sat Jul 10 2021  1:15                                                Page 179


  9644                        	xref	~~~lasl
  9645 09:982B: 22 xx xx xx  	jsl	~~~lasl
  9646 09:982F: 85 05        	sta	<R1
  9647 09:9831: 86 07        	stx	<R1+2
  9648 09:9833: 18           	clc
  9649 09:9834: A9 0D 00     	lda	#$d
  9650 09:9837: 65 1D        	adc	<L328+current_SuperReloc2_1
  9651 09:9839: 85 0D        	sta	<R3
  9652 09:983B: A9 00 00     	lda	#$0
  9653 09:983E: 65 1F        	adc	<L328+current_SuperReloc2_1+2
  9654 09:9840: 85 0F        	sta	<R3+2
  9655 09:9842: 18           	clc
  9656 09:9843: A5 0D        	lda	<R3
  9657 09:9845: 65 05        	adc	<R1
  9658 09:9847: 85 11        	sta	<17
  9659 09:9849: A5 0F        	lda	<R3+2
  9660 09:984B: 65 07        	adc	<R1+2
  9661 09:984D: 85 13        	sta	<17+2
  9662 09:984F: A5 01        	lda	<R0
  9663 09:9851: C7 11        	cmp	[<17]
  9664 09:9853: A5 03        	lda	<R0+2
  9665 09:9855: A0 02 00     	ldy	#$2
  9666 09:9858: F7 11        	sbc	[<17],Y
  9667 09:985A: 90 03        	bcc	L337
  9668 09:985C: 82 47 00     	brl	L10245
  9669                        L337:
  9670                        	.line	1378
  9671                        ;              //printf("  Error : Bad Reference A
                    ddress in SuperReloc2 for Offset %04X in Segment #%02X.\n",c
                    urrent_SuperReloc2->OffsetPatch[i],current_segment->header.S
                    egNum);
  9672                        ;              current_SuperReloc2->OffsetReferenc
                    e[i] = 0xFFFF;   /* Erreur */
  9673                        	.line	1380
  9674 09:985F: A0 00 00     	ldy	#$0
  9675 09:9862: A5 19        	lda	<L328+i_1
  9676 09:9864: 10 01        	bpl	L338
  9677 09:9866: 88           	dey
  9678                        L338:
  9679 09:9867: 85 05        	sta	<R1
  9680 09:9869: 84 07        	sty	<R1+2
  9681 09:986B: D4 07        	pei	<R1+2
  9682 09:986D: D4 05        	pei	<R1
  9683 09:986F: A9 02 00     	lda	#$2
  9684                        	xref	~~~lasl
  9685 09:9872: 22 xx xx xx  	jsl	~~~lasl
  9686 09:9876: 85 01        	sta	<R0
  9687 09:9878: 86 03        	stx	<R0+2
  9688 09:987A: 18           	clc
  9689 09:987B: A9 0D 04     	lda	#$40d
  9690 09:987E: 65 1D        	adc	<L328+current_SuperReloc2_1
  9691 09:9880: 85 09        	sta	<R2
  9692 09:9882: A9 00 00     	lda	#$0
  9693 09:9885: 65 1F        	adc	<L328+current_SuperReloc2_1+2
  9694 09:9887: 85 0B        	sta	<R2+2
  9695 09:9889: 18           	clc
  9696 09:988A: A5 09        	lda	<R2
  9697 09:988C: 65 01        	adc	<R0
  Sat Jul 10 2021  1:15                                                Page 180


  9698 09:988E: 85 0D        	sta	<R3
  9699 09:9890: A5 0B        	lda	<R2+2
  9700 09:9892: 65 03        	adc	<R0+2
  9701 09:9894: 85 0F        	sta	<R3+2
  9702 09:9896: A9 FF FF     	lda	#$ffff
  9703 09:9899: 87 0D        	sta	[<R3]
  9704 09:989B: A9 00 00     	lda	#$0
  9705 09:989E: A0 02 00     	ldy	#$2
  9706 09:98A1: 97 0D        	sta	[<R3],Y
  9707                        ;            }
  9708                        	.line	1381
  9709                        ;          else
  9710 09:98A3: 82 A9 00     	brl	L10246
  9711                        L10245:
  9712                        ;            {
  9713                        	.line	1383
  9714                        ;              memcpy(&one_word,&lconst[current_Su
                    perReloc2->OffsetPatch[i]],sizeof(WORD));
  9715                        	.line	1384
  9716 09:98A6: F4 02 00     	pea	#<$2
  9717 09:98A9: A0 00 00     	ldy	#$0
  9718 09:98AC: A5 19        	lda	<L328+i_1
  9719 09:98AE: 10 01        	bpl	L339
  9720 09:98B0: 88           	dey
  9721                        L339:
  9722 09:98B1: 85 05        	sta	<R1
  9723 09:98B3: 84 07        	sty	<R1+2
  9724 09:98B5: D4 07        	pei	<R1+2
  9725 09:98B7: D4 05        	pei	<R1
  9726 09:98B9: A9 02 00     	lda	#$2
  9727                        	xref	~~~lasl
  9728 09:98BC: 22 xx xx xx  	jsl	~~~lasl
  9729 09:98C0: 85 01        	sta	<R0
  9730 09:98C2: 86 03        	stx	<R0+2
  9731 09:98C4: 18           	clc
  9732 09:98C5: A9 0D 00     	lda	#$d
  9733 09:98C8: 65 1D        	adc	<L328+current_SuperReloc2_1
  9734 09:98CA: 85 09        	sta	<R2
  9735 09:98CC: A9 00 00     	lda	#$0
  9736 09:98CF: 65 1F        	adc	<L328+current_SuperReloc2_1+2
  9737 09:98D1: 85 0B        	sta	<R2+2
  9738 09:98D3: 18           	clc
  9739 09:98D4: A5 09        	lda	<R2
  9740 09:98D6: 65 01        	adc	<R0
  9741 09:98D8: 85 0D        	sta	<R3
  9742 09:98DA: A5 0B        	lda	<R2+2
  9743 09:98DC: 65 03        	adc	<R0+2
  9744 09:98DE: 85 0F        	sta	<R3+2
  9745 09:98E0: 18           	clc
  9746 09:98E1: A5 28        	lda	<L327+lconst_0
  9747 09:98E3: 67 0D        	adc	[<R3]
  9748 09:98E5: 85 01        	sta	<R0
  9749 09:98E7: A5 2A        	lda	<L327+lconst_0+2
  9750 09:98E9: A0 02 00     	ldy	#$2
  9751 09:98EC: 77 0D        	adc	[<R3],Y
  9752 09:98EE: 85 03        	sta	<R0+2
  9753 09:98F0: D4 03        	pei	<R0+2
  9754 09:98F2: D4 01        	pei	<R0
  Sat Jul 10 2021  1:15                                                Page 181


  9755 09:98F4: F4 00 00     	pea	#0
  9756 09:98F7: 18           	clc
  9757 09:98F8: 7B           	tdc
  9758 09:98F9: 69 1B 00     	adc	#<L328+one_word_1
  9759 09:98FC: 48           	pha
  9760 09:98FD: 22 xx xx xx  	jsl	~~memcpy
  9761                        ;              current_SuperReloc2->OffsetReferenc
                    e[i] = (DWORD) one_word;
  9762                        	.line	1385
  9763 09:9901: A0 00 00     	ldy	#$0
  9764 09:9904: A5 19        	lda	<L328+i_1
  9765 09:9906: 10 01        	bpl	L340
  9766 09:9908: 88           	dey
  9767                        L340:
  9768 09:9909: 85 05        	sta	<R1
  9769 09:990B: 84 07        	sty	<R1+2
  9770 09:990D: D4 07        	pei	<R1+2
  9771 09:990F: D4 05        	pei	<R1
  9772 09:9911: A9 02 00     	lda	#$2
  9773                        	xref	~~~lasl
  9774 09:9914: 22 xx xx xx  	jsl	~~~lasl
  9775 09:9918: 85 01        	sta	<R0
  9776 09:991A: 86 03        	stx	<R0+2
  9777 09:991C: 18           	clc
  9778 09:991D: A9 0D 04     	lda	#$40d
  9779 09:9920: 65 1D        	adc	<L328+current_SuperReloc2_1
  9780 09:9922: 85 09        	sta	<R2
  9781 09:9924: A9 00 00     	lda	#$0
  9782 09:9927: 65 1F        	adc	<L328+current_SuperReloc2_1+2
  9783 09:9929: 85 0B        	sta	<R2+2
  9784 09:992B: 18           	clc
  9785 09:992C: A5 09        	lda	<R2
  9786 09:992E: 65 01        	adc	<R0
  9787 09:9930: 85 0D        	sta	<R3
  9788 09:9932: A5 0B        	lda	<R2+2
  9789 09:9934: 65 03        	adc	<R0+2
  9790 09:9936: 85 0F        	sta	<R3+2
  9791 09:9938: A0 00 00     	ldy	#$0
  9792 09:993B: A5 1B        	lda	<L328+one_word_1
  9793 09:993D: 10 01        	bpl	L341
  9794 09:993F: 88           	dey
  9795                        L341:
  9796 09:9940: 85 01        	sta	<R0
  9797 09:9942: 84 03        	sty	<R0+2
  9798 09:9944: A5 01        	lda	<R0
  9799 09:9946: 87 0D        	sta	[<R3]
  9800 09:9948: A5 03        	lda	<R0+2
  9801 09:994A: A0 02 00     	ldy	#$2
  9802 09:994D: 97 0D        	sta	[<R3],Y
  9803                        ;            }
  9804                        	.line	1386
  9805                        L10246:
  9806                        ;
  9807                        ;          /* Conserve ce RELOC */
  9808                        ;          AddReloc(current_SuperReloc2->ByteCnt,c
                    urrent_SuperReloc2->BitShiftCnt,current_SuperReloc2->OffsetP
                    atch[i],current_SuperReloc2->OffsetReference[i],RECORD_SUPER
                    _RELOC2);
  Sat Jul 10 2021  1:15                                                Page 182


  9809                        	.line	1389
  9810 09:994F: F4 05 00     	pea	#<$5
  9811 09:9952: A0 00 00     	ldy	#$0
  9812 09:9955: A5 19        	lda	<L328+i_1
  9813 09:9957: 10 01        	bpl	L342
  9814 09:9959: 88           	dey
  9815                        L342:
  9816 09:995A: 85 05        	sta	<R1
  9817 09:995C: 84 07        	sty	<R1+2
  9818 09:995E: D4 07        	pei	<R1+2
  9819 09:9960: D4 05        	pei	<R1
  9820 09:9962: A9 02 00     	lda	#$2
  9821                        	xref	~~~lasl
  9822 09:9965: 22 xx xx xx  	jsl	~~~lasl
  9823 09:9969: 85 01        	sta	<R0
  9824 09:996B: 86 03        	stx	<R0+2
  9825 09:996D: 18           	clc
  9826 09:996E: A9 0D 04     	lda	#$40d
  9827 09:9971: 65 1D        	adc	<L328+current_SuperReloc2_1
  9828 09:9973: 85 09        	sta	<R2
  9829 09:9975: A9 00 00     	lda	#$0
  9830 09:9978: 65 1F        	adc	<L328+current_SuperReloc2_1+2
  9831 09:997A: 85 0B        	sta	<R2+2
  9832 09:997C: 18           	clc
  9833 09:997D: A5 09        	lda	<R2
  9834 09:997F: 65 01        	adc	<R0
  9835 09:9981: 85 0D        	sta	<R3
  9836 09:9983: A5 0B        	lda	<R2+2
  9837 09:9985: 65 03        	adc	<R0+2
  9838 09:9987: 85 0F        	sta	<R3+2
  9839 09:9989: A0 02 00     	ldy	#$2
  9840 09:998C: B7 0D        	lda	[<R3],Y
  9841 09:998E: 48           	pha
  9842 09:998F: A7 0D        	lda	[<R3]
  9843 09:9991: 48           	pha
  9844 09:9992: A0 00 00     	ldy	#$0
  9845 09:9995: A5 19        	lda	<L328+i_1
  9846 09:9997: 10 01        	bpl	L343
  9847 09:9999: 88           	dey
  9848                        L343:
  9849 09:999A: 85 09        	sta	<R2
  9850 09:999C: 84 0B        	sty	<R2+2
  9851 09:999E: D4 0B        	pei	<R2+2
  9852 09:99A0: D4 09        	pei	<R2
  9853 09:99A2: A9 02 00     	lda	#$2
  9854                        	xref	~~~lasl
  9855 09:99A5: 22 xx xx xx  	jsl	~~~lasl
  9856 09:99A9: 85 01        	sta	<R0
  9857 09:99AB: 86 03        	stx	<R0+2
  9858 09:99AD: 18           	clc
  9859 09:99AE: A9 0D 00     	lda	#$d
  9860 09:99B1: 65 1D        	adc	<L328+current_SuperReloc2_1
  9861 09:99B3: 85 0D        	sta	<R3
  9862 09:99B5: A9 00 00     	lda	#$0
  9863 09:99B8: 65 1F        	adc	<L328+current_SuperReloc2_1+2
  9864 09:99BA: 85 0F        	sta	<R3+2
  9865 09:99BC: 18           	clc
  9866 09:99BD: A5 0D        	lda	<R3
  Sat Jul 10 2021  1:15                                                Page 183


  9867 09:99BF: 65 01        	adc	<R0
  9868 09:99C1: 85 11        	sta	<17
  9869 09:99C3: A5 0F        	lda	<R3+2
  9870 09:99C5: 65 03        	adc	<R0+2
  9871 09:99C7: 85 13        	sta	<17+2
  9872 09:99C9: A0 02 00     	ldy	#$2
  9873 09:99CC: B7 11        	lda	[<17],Y
  9874 09:99CE: 48           	pha
  9875 09:99CF: A7 11        	lda	[<17]
  9876 09:99D1: 48           	pha
  9877 09:99D2: A0 0A 00     	ldy	#$a
  9878 09:99D5: B7 1D        	lda	[<L328+current_SuperReloc2_1],Y
  9879 09:99D7: 48           	pha
  9880 09:99D8: A0 09 00     	ldy	#$9
  9881 09:99DB: B7 1D        	lda	[<L328+current_SuperReloc2_1],Y
  9882 09:99DD: 48           	pha
  9883 09:99DE: 22 33 AC 09  	jsl	~~AddReloc
  9884                        ;          ////printf("  Page %02X : %02X  %04X  %
                    04X\n",*page_rtn,current_SuperReloc2->ByteCnt,current_SuperR
                    eloc2->OffsetPatch[i],current_SuperReloc2->OffsetReference[i
                    ]);
  9885                        ;        }
  9886                        	.line	1391
  9887                        L10241:
  9888 09:99E2: E6 19        	inc	<L328+i_1
  9889                        L10244:
  9890 09:99E4: 38           	sec
  9891 09:99E5: A5 19        	lda	<L328+i_1
  9892 09:99E7: A0 0B 00     	ldy	#$b
  9893 09:99EA: F7 1D        	sbc	[<L328+current_SuperReloc2_1],Y
  9894 09:99EC: 70 03        	bvs	L344
  9895 09:99EE: 49 00 80     	eor	#$8000
  9896                        L344:
  9897 09:99F1: 30 03        	bmi	L345
  9898 09:99F3: 82 A5 FD     	brl	L10243
  9899                        L345:
  9900                        L10242:
  9901                        ;
  9902                        ;      /* Page suivante */
  9903                        ;      *page_rtn = *page_rtn + 1;
  9904                        	.line	1394
  9905 09:99F6: E2 20        	sep	#$20
  9906                        	longa	off
  9907 09:99F8: A7 2E        	lda	[<L327+page_rtn_0]
  9908 09:99FA: 1A           	ina
  9909 09:99FB: C2 20        	rep	#$20
  9910                        	longa	on
  9911 09:99FD: E2 20        	sep	#$20
  9912                        	longa	off
  9913 09:99FF: 87 2E        	sta	[<L327+page_rtn_0]
  9914 09:9A01: C2 20        	rep	#$20
  9915                        	longa	on
  9916                        ;
  9917                        ;      /* Longueur du SubRecord */
  9918                        ;      *length_rtn = 1 + current_SuperReloc2->nb_a
                    ddress*sizeof(BYTE);
  9919                        	.line	1397
  9920 09:9A03: A0 0B 00     	ldy	#$b
  Sat Jul 10 2021  1:15                                                Page 184


  9921 09:9A06: B7 1D        	lda	[<L328+current_SuperReloc2_1],Y
  9922 09:9A08: 1A           	ina
  9923 09:9A09: 87 32        	sta	[<L327+length_rtn_0]
  9924                        ;    }
  9925                        	.line	1398
  9926                        L10240:
  9927                        ;
  9928                        ;  /* Renvoie la structure */
  9929                        ;  return(current_SuperReloc2);
  9930                        	.line	1401
  9931 09:9A0B: A6 1F        	ldx	<L328+current_SuperReloc2_1+2
  9932 09:9A0D: A5 1D        	lda	<L328+current_SuperReloc2_1
  9933 09:9A0F: 82 07 FD     	brl	L331
  9934                        ;}
  9935                        	.line	1402
  9936                        	.endblock	1402
  9937             00000020   L327	equ	32
  9938             00000019   L328	equ	25
  9939 09:9A12:              	ends
  9940                        	efunc
  9941                        	.endfunc	1402,25,32
  9942                        	.line	1402
  9943                        ;
  9944                        ;
  9945                        ;/************************************************
                    ****************/
  9946                        ;/*  DecodeSuperReloc3() :  Décodage d'un SubRecor
                    d SuperReloc3. */
  9947                        ;/************************************************
                    ****************/
  9948                        ;static struct subrecord_SuperReloc3 *DecodeSuperR
                    eloc3(unsigned char *data, unsigned char *lconst, int lconst
                    _length, BYTE *page_rtn, int *length_rtn, struct omf_segment
                     *current_segment)
  9949                        ;{
  9950                        	.line	1408
  9951                        	.line	1409
  9952                        	LOADER
  9953                        	func
  9954                        	.function	1409
  9955                        ~~DecodeSuperReloc3:
  9956                        	longa	on
  9957                        	longi	on
  9958 09:9A12: 3B           	tsc
  9959 09:9A13: 38           	sec
  9960 09:9A14: E9 20 00     	sbc	#L346
  9961 09:9A17: 1B           	tcs
  9962 09:9A18: 0B           	phd
  9963 09:9A19: 5B           	tcd
  9964             00000004   data_0	set	4
  9965             00000008   lconst_0	set	8
  9966             0000000C   lconst_length_0	set	12
  9967             0000000E   page_rtn_0	set	14
  9968             00000012   length_rtn_0	set	18
  9969             00000016   current_segment_0	set	22
  9970                        	.block	1409
  9971                        ;  int i;
  9972                        ;  WORD one_word;
  Sat Jul 10 2021  1:15                                                Page 185


  9973                        ;  struct subrecord_SuperReloc3 *current_SuperRelo
                    c3;
  9974                        ;
  9975                        ;  /* Allocation mémoire */
  9976                        ;  current_SuperReloc3 = (struct subrecord_SuperRe
                    loc3 *) k_calloc(1,sizeof(struct subrecord_SuperReloc3));
  9977             00000000   i_1	set	0
  9978             00000002   one_word_1	set	2
  9979             00000004   current_SuperReloc3_1	set	4
  9980                        	.sym	i,0,5,1,16
  9981                        	.sym	one_word,2,5,1,16
  9982                        	.sym	current_SuperReloc3,4,138,1,32,90
  9983                        	.sym	data,4,142,6,32
  9984                        	.sym	lconst,8,142,6,32
  9985                        	.sym	lconst_length,12,5,6,16
  9986                        	.sym	page_rtn,14,142,6,32
  9987                        	.sym	length_rtn,18,133,6,32
  9988                        	.sym	current_segment,22,138,6,32,86
  9989                        	.line	1415
  9990 09:9A1A: F4 11 08     	pea	#<$811
  9991 09:9A1D: F4 01 00     	pea	#<$1
  9992 09:9A20: 22 xx xx xx  	jsl	~~k_calloc
  9993 09:9A24: 85 1D        	sta	<L347+current_SuperReloc3_1
  9994 09:9A26: 86 1F        	stx	<L347+current_SuperReloc3_1+2
  9995                        ;  if(current_SuperReloc3 == NULL)
  9996                        	.line	1416
  9997                        ;    {
  9998 09:9A28: A5 1D        	lda	<L347+current_SuperReloc3_1
  9999 09:9A2A: 05 1F        	ora	<L347+current_SuperReloc3_1+2
 10000 09:9A2C: F0 03        	beq	L349
 10001 09:9A2E: 82 19 00     	brl	L10247
 10002                        L349:
 10003                        	.line	1417
 10004                        ;      //printf("Error : Impossible to allocate me
                    mory for SubRecord SuperReloc3.\n");
 10005                        ;      return(NULL);
 10006                        	.line	1419
 10007 09:9A31: A9 00 00     	lda	#$0
 10008 09:9A34: AA           	tax
 10009 09:9A35: A9 00 00     	lda	#$0
 10010                        L350:
 10011 09:9A38: A8           	tay
 10012 09:9A39: A5 22        	lda	<L346+2
 10013 09:9A3B: 85 38        	sta	<L346+2+22
 10014 09:9A3D: A5 21        	lda	<L346+1
 10015 09:9A3F: 85 37        	sta	<L346+1+22
 10016 09:9A41: 2B           	pld
 10017 09:9A42: 3B           	tsc
 10018 09:9A43: 18           	clc
 10019 09:9A44: 69 36 00     	adc	#L346+22
 10020 09:9A47: 1B           	tcs
 10021 09:9A48: 98           	tya
 10022 09:9A49: 6B           	rtl
 10023                        ;    }
 10024                        	.line	1420
 10025                        ;
 10026                        ;  /* Nombre d'adresse-1 ou Saut de Page */
 10027                        ;  current_SuperReloc3->Count = data[0];
  Sat Jul 10 2021  1:15                                                Page 186


 10028                        L10247:
 10029                        	.line	1423
 10030 09:9A4A: E2 20        	sep	#$20
 10031                        	longa	off
 10032 09:9A4C: A7 24        	lda	[<L346+data_0]
 10033 09:9A4E: A0 08 00     	ldy	#$8
 10034 09:9A51: 97 1D        	sta	[<L347+current_SuperReloc3_1],Y
 10035 09:9A53: C2 20        	rep	#$20
 10036                        	longa	on
 10037                        ;
 10038                        ;  /** Saut de Page **/
 10039                        ;  if((current_SuperReloc3->Count & 0x80) == 0x80)
 10040                        	.line	1426
 10041                        ;    {
 10042 09:9A55: A0 08 00     	ldy	#$8
 10043 09:9A58: B7 1D        	lda	[<L347+current_SuperReloc3_1],Y
 10044 09:9A5A: 29 80 00     	and	#<$80
 10045 09:9A5D: 85 01        	sta	<R0
 10046 09:9A5F: A5 01        	lda	<R0
 10047 09:9A61: C9 80 00     	cmp	#<$80
 10048 09:9A64: F0 03        	beq	L351
 10049 09:9A66: 82 24 00     	brl	L10248
 10050                        L351:
 10051                        	.line	1427
 10052                        ;      /* On saute X pages */
 10053                        ;      *page_rtn = *page_rtn + (current_SuperReloc
                    3->Count & 0x7F);
 10054                        	.line	1429
 10055 09:9A69: E2 20        	sep	#$20
 10056                        	longa	off
 10057 09:9A6B: A0 08 00     	ldy	#$8
 10058 09:9A6E: B7 1D        	lda	[<L347+current_SuperReloc3_1],Y
 10059 09:9A70: 29 7F        	and	#<$7f
 10060 09:9A72: 85 01        	sta	<R0
 10061 09:9A74: C2 20        	rep	#$20
 10062                        	longa	on
 10063 09:9A76: E2 20        	sep	#$20
 10064                        	longa	off
 10065 09:9A78: 18           	clc
 10066 09:9A79: A7 2E        	lda	[<L346+page_rtn_0]
 10067 09:9A7B: 65 01        	adc	<R0
 10068 09:9A7D: C2 20        	rep	#$20
 10069                        	longa	on
 10070 09:9A7F: E2 20        	sep	#$20
 10071                        	longa	off
 10072 09:9A81: 87 2E        	sta	[<L346+page_rtn_0]
 10073 09:9A83: C2 20        	rep	#$20
 10074                        	longa	on
 10075                        ;
 10076                        ;      /* Longueur du SubRecord */
 10077                        ;      *length_rtn = 1;
 10078                        	.line	1432
 10079 09:9A85: A9 01 00     	lda	#$1
 10080 09:9A88: 87 32        	sta	[<L346+length_rtn_0]
 10081                        ;    }
 10082                        	.line	1433
 10083                        ;  else
 10084 09:9A8A: 82 9D 02     	brl	L10249
  Sat Jul 10 2021  1:15                                                Page 187


 10085                        L10248:
 10086                        ;    {
 10087                        	.line	1435
 10088                        ;      /* Number of Bytes to be relocated = Toujou
                    rs à 3 */
 10089                        ;      current_SuperReloc3->ByteCnt = 0x03;
 10090                        	.line	1437
 10091 09:9A8D: E2 20        	sep	#$20
 10092                        	longa	off
 10093 09:9A8F: A9 03        	lda	#$3
 10094 09:9A91: A0 09 00     	ldy	#$9
 10095 09:9A94: 97 1D        	sta	[<L347+current_SuperReloc3_1],Y
 10096 09:9A96: C2 20        	rep	#$20
 10097                        	longa	on
 10098                        ;
 10099                        ;      /* Opérations >> ou << = Toujours à 0  */
 10100                        ;      current_SuperReloc3->BitShiftCnt = 0x00;
 10101                        	.line	1440
 10102 09:9A98: E2 20        	sep	#$20
 10103                        	longa	off
 10104 09:9A9A: A9 00        	lda	#$0
 10105 09:9A9C: A0 0A 00     	ldy	#$a
 10106 09:9A9F: 97 1D        	sta	[<L347+current_SuperReloc3_1],Y
 10107 09:9AA1: C2 20        	rep	#$20
 10108                        	longa	on
 10109                        ;
 10110                        ;      /* Nombre d'adresse */
 10111                        ;      current_SuperReloc3->nb_address = current_S
                    uperReloc3->Count + 1;
 10112                        	.line	1443
 10113 09:9AA3: A0 08 00     	ldy	#$8
 10114 09:9AA6: B7 1D        	lda	[<L347+current_SuperReloc3_1],Y
 10115 09:9AA8: 29 FF 00     	and	#$ff
 10116 09:9AAB: 85 01        	sta	<R0
 10117 09:9AAD: A5 01        	lda	<R0
 10118 09:9AAF: 1A           	ina
 10119 09:9AB0: A0 0B 00     	ldy	#$b
 10120 09:9AB3: 97 1D        	sta	[<L347+current_SuperReloc3_1],Y
 10121                        ;
 10122                        ;      /** Copie les adresses **/
 10123                        ;      for(i=0; i<current_SuperReloc3->nb_address;
                     i++)
 10124                        	.line	1446
 10125 09:9AB5: 64 19        	stz	<L347+i_1
 10126 09:9AB7: 82 49 02     	brl	L10253
 10127                        L10252:
 10128                        ;        {
 10129                        	.line	1447
 10130                        ;          /* Décode OffsetPath et OffsetReference
                     */
 10131                        ;          current_SuperReloc3->OffsetPatch[i] = (
                    (WORD)(*page_rtn) << 8) | data[1+i];
 10132                        	.line	1449
 10133 09:9ABA: A0 00 00     	ldy	#$0
 10134 09:9ABD: A5 19        	lda	<L347+i_1
 10135 09:9ABF: 10 01        	bpl	L352
 10136 09:9AC1: 88           	dey
 10137                        L352:
  Sat Jul 10 2021  1:15                                                Page 188


 10138 09:9AC2: 85 05        	sta	<R1
 10139 09:9AC4: 84 07        	sty	<R1+2
 10140 09:9AC6: D4 07        	pei	<R1+2
 10141 09:9AC8: D4 05        	pei	<R1
 10142 09:9ACA: A9 02 00     	lda	#$2
 10143                        	xref	~~~lasl
 10144 09:9ACD: 22 xx xx xx  	jsl	~~~lasl
 10145 09:9AD1: 85 01        	sta	<R0
 10146 09:9AD3: 86 03        	stx	<R0+2
 10147 09:9AD5: 18           	clc
 10148 09:9AD6: A9 0D 00     	lda	#$d
 10149 09:9AD9: 65 1D        	adc	<L347+current_SuperReloc3_1
 10150 09:9ADB: 85 09        	sta	<R2
 10151 09:9ADD: A9 00 00     	lda	#$0
 10152 09:9AE0: 65 1F        	adc	<L347+current_SuperReloc3_1+2
 10153 09:9AE2: 85 0B        	sta	<R2+2
 10154 09:9AE4: 18           	clc
 10155 09:9AE5: A5 09        	lda	<R2
 10156 09:9AE7: 65 01        	adc	<R0
 10157 09:9AE9: 85 0D        	sta	<R3
 10158 09:9AEB: A5 0B        	lda	<R2+2
 10159 09:9AED: 65 03        	adc	<R0+2
 10160 09:9AEF: 85 0F        	sta	<R3+2
 10161 09:9AF1: A5 19        	lda	<L347+i_1
 10162 09:9AF3: 1A           	ina
 10163 09:9AF4: 85 01        	sta	<R0
 10164 09:9AF6: A4 01        	ldy	<R0
 10165 09:9AF8: B7 24        	lda	[<L346+data_0],Y
 10166 09:9AFA: 29 FF 00     	and	#$ff
 10167 09:9AFD: 85 09        	sta	<R2
 10168 09:9AFF: A7 2E        	lda	[<L346+page_rtn_0]
 10169 09:9B01: 29 FF 00     	and	#$ff
 10170 09:9B04: 85 15        	sta	<21
 10171 09:9B06: A5 15        	lda	<21
 10172 09:9B08: EB           	xba
 10173 09:9B09: 29 00 FF     	and	#$ff00
 10174 09:9B0C: 85 11        	sta	<17
 10175 09:9B0E: A5 11        	lda	<17
 10176 09:9B10: 05 09        	ora	<R2
 10177 09:9B12: 85 15        	sta	<21
 10178 09:9B14: A0 00 00     	ldy	#$0
 10179 09:9B17: A5 15        	lda	<21
 10180 09:9B19: 10 01        	bpl	L353
 10181 09:9B1B: 88           	dey
 10182                        L353:
 10183 09:9B1C: 85 09        	sta	<R2
 10184 09:9B1E: 84 0B        	sty	<R2+2
 10185 09:9B20: A5 09        	lda	<R2
 10186 09:9B22: 87 0D        	sta	[<R3]
 10187 09:9B24: A5 0B        	lda	<R2+2
 10188 09:9B26: A0 02 00     	ldy	#$2
 10189 09:9B29: 97 0D        	sta	[<R3],Y
 10190                        ;          
 10191                        ;          /* On vérifie qu'on reste dans les limi
                    te du LCONST */
 10192                        ;          if(current_SuperReloc3->OffsetPatch[i] 
                    > (DWORD) lconst_length)
 10193                        	.line	1452
  Sat Jul 10 2021  1:15                                                Page 189


 10194                        ;            {
 10195 09:9B2B: A0 00 00     	ldy	#$0
 10196 09:9B2E: A5 2C        	lda	<L346+lconst_length_0
 10197 09:9B30: 10 01        	bpl	L354
 10198 09:9B32: 88           	dey
 10199                        L354:
 10200 09:9B33: 85 01        	sta	<R0
 10201 09:9B35: 84 03        	sty	<R0+2
 10202 09:9B37: A0 00 00     	ldy	#$0
 10203 09:9B3A: A5 19        	lda	<L347+i_1
 10204 09:9B3C: 10 01        	bpl	L355
 10205 09:9B3E: 88           	dey
 10206                        L355:
 10207 09:9B3F: 85 09        	sta	<R2
 10208 09:9B41: 84 0B        	sty	<R2+2
 10209 09:9B43: D4 0B        	pei	<R2+2
 10210 09:9B45: D4 09        	pei	<R2
 10211 09:9B47: A9 02 00     	lda	#$2
 10212                        	xref	~~~lasl
 10213 09:9B4A: 22 xx xx xx  	jsl	~~~lasl
 10214 09:9B4E: 85 05        	sta	<R1
 10215 09:9B50: 86 07        	stx	<R1+2
 10216 09:9B52: 18           	clc
 10217 09:9B53: A9 0D 00     	lda	#$d
 10218 09:9B56: 65 1D        	adc	<L347+current_SuperReloc3_1
 10219 09:9B58: 85 0D        	sta	<R3
 10220 09:9B5A: A9 00 00     	lda	#$0
 10221 09:9B5D: 65 1F        	adc	<L347+current_SuperReloc3_1+2
 10222 09:9B5F: 85 0F        	sta	<R3+2
 10223 09:9B61: 18           	clc
 10224 09:9B62: A5 0D        	lda	<R3
 10225 09:9B64: 65 05        	adc	<R1
 10226 09:9B66: 85 11        	sta	<17
 10227 09:9B68: A5 0F        	lda	<R3+2
 10228 09:9B6A: 65 07        	adc	<R1+2
 10229 09:9B6C: 85 13        	sta	<17+2
 10230 09:9B6E: A5 01        	lda	<R0
 10231 09:9B70: C7 11        	cmp	[<17]
 10232 09:9B72: A5 03        	lda	<R0+2
 10233 09:9B74: A0 02 00     	ldy	#$2
 10234 09:9B77: F7 11        	sbc	[<17],Y
 10235 09:9B79: 90 03        	bcc	L356
 10236 09:9B7B: 82 47 00     	brl	L10254
 10237                        L356:
 10238                        	.line	1453
 10239                        ;              //printf("  Error : Bad Reference A
                    ddress in SuperReloc3 for Offset %04X in Segment #%02X.\n",c
                    urrent_SuperReloc3->OffsetPatch[i],current_segment->header.S
                    egNum);
 10240                        ;              current_SuperReloc3->OffsetReferenc
                    e[i] = 0xFFFF;   /* Erreur */
 10241                        	.line	1455
 10242 09:9B7E: A0 00 00     	ldy	#$0
 10243 09:9B81: A5 19        	lda	<L347+i_1
 10244 09:9B83: 10 01        	bpl	L357
 10245 09:9B85: 88           	dey
 10246                        L357:
 10247 09:9B86: 85 05        	sta	<R1
  Sat Jul 10 2021  1:15                                                Page 190


 10248 09:9B88: 84 07        	sty	<R1+2
 10249 09:9B8A: D4 07        	pei	<R1+2
 10250 09:9B8C: D4 05        	pei	<R1
 10251 09:9B8E: A9 02 00     	lda	#$2
 10252                        	xref	~~~lasl
 10253 09:9B91: 22 xx xx xx  	jsl	~~~lasl
 10254 09:9B95: 85 01        	sta	<R0
 10255 09:9B97: 86 03        	stx	<R0+2
 10256 09:9B99: 18           	clc
 10257 09:9B9A: A9 0D 04     	lda	#$40d
 10258 09:9B9D: 65 1D        	adc	<L347+current_SuperReloc3_1
 10259 09:9B9F: 85 09        	sta	<R2
 10260 09:9BA1: A9 00 00     	lda	#$0
 10261 09:9BA4: 65 1F        	adc	<L347+current_SuperReloc3_1+2
 10262 09:9BA6: 85 0B        	sta	<R2+2
 10263 09:9BA8: 18           	clc
 10264 09:9BA9: A5 09        	lda	<R2
 10265 09:9BAB: 65 01        	adc	<R0
 10266 09:9BAD: 85 0D        	sta	<R3
 10267 09:9BAF: A5 0B        	lda	<R2+2
 10268 09:9BB1: 65 03        	adc	<R0+2
 10269 09:9BB3: 85 0F        	sta	<R3+2
 10270 09:9BB5: A9 FF FF     	lda	#$ffff
 10271 09:9BB8: 87 0D        	sta	[<R3]
 10272 09:9BBA: A9 00 00     	lda	#$0
 10273 09:9BBD: A0 02 00     	ldy	#$2
 10274 09:9BC0: 97 0D        	sta	[<R3],Y
 10275                        ;            }
 10276                        	.line	1456
 10277                        ;          else
 10278 09:9BC2: 82 A9 00     	brl	L10255
 10279                        L10254:
 10280                        ;            {          
 10281                        	.line	1458
 10282                        ;              memcpy(&one_word,&lconst[current_Su
                    perReloc3->OffsetPatch[i]],sizeof(WORD));
 10283                        	.line	1459
 10284 09:9BC5: F4 02 00     	pea	#<$2
 10285 09:9BC8: A0 00 00     	ldy	#$0
 10286 09:9BCB: A5 19        	lda	<L347+i_1
 10287 09:9BCD: 10 01        	bpl	L358
 10288 09:9BCF: 88           	dey
 10289                        L358:
 10290 09:9BD0: 85 05        	sta	<R1
 10291 09:9BD2: 84 07        	sty	<R1+2
 10292 09:9BD4: D4 07        	pei	<R1+2
 10293 09:9BD6: D4 05        	pei	<R1
 10294 09:9BD8: A9 02 00     	lda	#$2
 10295                        	xref	~~~lasl
 10296 09:9BDB: 22 xx xx xx  	jsl	~~~lasl
 10297 09:9BDF: 85 01        	sta	<R0
 10298 09:9BE1: 86 03        	stx	<R0+2
 10299 09:9BE3: 18           	clc
 10300 09:9BE4: A9 0D 00     	lda	#$d
 10301 09:9BE7: 65 1D        	adc	<L347+current_SuperReloc3_1
 10302 09:9BE9: 85 09        	sta	<R2
 10303 09:9BEB: A9 00 00     	lda	#$0
 10304 09:9BEE: 65 1F        	adc	<L347+current_SuperReloc3_1+2
  Sat Jul 10 2021  1:15                                                Page 191


 10305 09:9BF0: 85 0B        	sta	<R2+2
 10306 09:9BF2: 18           	clc
 10307 09:9BF3: A5 09        	lda	<R2
 10308 09:9BF5: 65 01        	adc	<R0
 10309 09:9BF7: 85 0D        	sta	<R3
 10310 09:9BF9: A5 0B        	lda	<R2+2
 10311 09:9BFB: 65 03        	adc	<R0+2
 10312 09:9BFD: 85 0F        	sta	<R3+2
 10313 09:9BFF: 18           	clc
 10314 09:9C00: A5 28        	lda	<L346+lconst_0
 10315 09:9C02: 67 0D        	adc	[<R3]
 10316 09:9C04: 85 01        	sta	<R0
 10317 09:9C06: A5 2A        	lda	<L346+lconst_0+2
 10318 09:9C08: A0 02 00     	ldy	#$2
 10319 09:9C0B: 77 0D        	adc	[<R3],Y
 10320 09:9C0D: 85 03        	sta	<R0+2
 10321 09:9C0F: D4 03        	pei	<R0+2
 10322 09:9C11: D4 01        	pei	<R0
 10323 09:9C13: F4 00 00     	pea	#0
 10324 09:9C16: 18           	clc
 10325 09:9C17: 7B           	tdc
 10326 09:9C18: 69 1B 00     	adc	#<L347+one_word_1
 10327 09:9C1B: 48           	pha
 10328 09:9C1C: 22 xx xx xx  	jsl	~~memcpy
 10329                        ;              current_SuperReloc3->OffsetReferenc
                    e[i] = (DWORD) one_word;
 10330                        	.line	1460
 10331 09:9C20: A0 00 00     	ldy	#$0
 10332 09:9C23: A5 19        	lda	<L347+i_1
 10333 09:9C25: 10 01        	bpl	L359
 10334 09:9C27: 88           	dey
 10335                        L359:
 10336 09:9C28: 85 05        	sta	<R1
 10337 09:9C2A: 84 07        	sty	<R1+2
 10338 09:9C2C: D4 07        	pei	<R1+2
 10339 09:9C2E: D4 05        	pei	<R1
 10340 09:9C30: A9 02 00     	lda	#$2
 10341                        	xref	~~~lasl
 10342 09:9C33: 22 xx xx xx  	jsl	~~~lasl
 10343 09:9C37: 85 01        	sta	<R0
 10344 09:9C39: 86 03        	stx	<R0+2
 10345 09:9C3B: 18           	clc
 10346 09:9C3C: A9 0D 04     	lda	#$40d
 10347 09:9C3F: 65 1D        	adc	<L347+current_SuperReloc3_1
 10348 09:9C41: 85 09        	sta	<R2
 10349 09:9C43: A9 00 00     	lda	#$0
 10350 09:9C46: 65 1F        	adc	<L347+current_SuperReloc3_1+2
 10351 09:9C48: 85 0B        	sta	<R2+2
 10352 09:9C4A: 18           	clc
 10353 09:9C4B: A5 09        	lda	<R2
 10354 09:9C4D: 65 01        	adc	<R0
 10355 09:9C4F: 85 0D        	sta	<R3
 10356 09:9C51: A5 0B        	lda	<R2+2
 10357 09:9C53: 65 03        	adc	<R0+2
 10358 09:9C55: 85 0F        	sta	<R3+2
 10359 09:9C57: A0 00 00     	ldy	#$0
 10360 09:9C5A: A5 1B        	lda	<L347+one_word_1
 10361 09:9C5C: 10 01        	bpl	L360
  Sat Jul 10 2021  1:15                                                Page 192


 10362 09:9C5E: 88           	dey
 10363                        L360:
 10364 09:9C5F: 85 01        	sta	<R0
 10365 09:9C61: 84 03        	sty	<R0+2
 10366 09:9C63: A5 01        	lda	<R0
 10367 09:9C65: 87 0D        	sta	[<R3]
 10368 09:9C67: A5 03        	lda	<R0+2
 10369 09:9C69: A0 02 00     	ldy	#$2
 10370 09:9C6C: 97 0D        	sta	[<R3],Y
 10371                        ;            }
 10372                        	.line	1461
 10373                        L10255:
 10374                        ;             
 10375                        ;          /* Conserve ce RELOC */
 10376                        ;          AddReloc(current_SuperReloc3->ByteCnt,c
                    urrent_SuperReloc3->BitShiftCnt,current_SuperReloc3->OffsetP
                    atch[i],current_SuperReloc3->OffsetReference[i],RECORD_SUPER
                    _RELOC3);
 10377                        	.line	1464
 10378 09:9C6E: F4 06 00     	pea	#<$6
 10379 09:9C71: A0 00 00     	ldy	#$0
 10380 09:9C74: A5 19        	lda	<L347+i_1
 10381 09:9C76: 10 01        	bpl	L361
 10382 09:9C78: 88           	dey
 10383                        L361:
 10384 09:9C79: 85 05        	sta	<R1
 10385 09:9C7B: 84 07        	sty	<R1+2
 10386 09:9C7D: D4 07        	pei	<R1+2
 10387 09:9C7F: D4 05        	pei	<R1
 10388 09:9C81: A9 02 00     	lda	#$2
 10389                        	xref	~~~lasl
 10390 09:9C84: 22 xx xx xx  	jsl	~~~lasl
 10391 09:9C88: 85 01        	sta	<R0
 10392 09:9C8A: 86 03        	stx	<R0+2
 10393 09:9C8C: 18           	clc
 10394 09:9C8D: A9 0D 04     	lda	#$40d
 10395 09:9C90: 65 1D        	adc	<L347+current_SuperReloc3_1
 10396 09:9C92: 85 09        	sta	<R2
 10397 09:9C94: A9 00 00     	lda	#$0
 10398 09:9C97: 65 1F        	adc	<L347+current_SuperReloc3_1+2
 10399 09:9C99: 85 0B        	sta	<R2+2
 10400 09:9C9B: 18           	clc
 10401 09:9C9C: A5 09        	lda	<R2
 10402 09:9C9E: 65 01        	adc	<R0
 10403 09:9CA0: 85 0D        	sta	<R3
 10404 09:9CA2: A5 0B        	lda	<R2+2
 10405 09:9CA4: 65 03        	adc	<R0+2
 10406 09:9CA6: 85 0F        	sta	<R3+2
 10407 09:9CA8: A0 02 00     	ldy	#$2
 10408 09:9CAB: B7 0D        	lda	[<R3],Y
 10409 09:9CAD: 48           	pha
 10410 09:9CAE: A7 0D        	lda	[<R3]
 10411 09:9CB0: 48           	pha
 10412 09:9CB1: A0 00 00     	ldy	#$0
 10413 09:9CB4: A5 19        	lda	<L347+i_1
 10414 09:9CB6: 10 01        	bpl	L362
 10415 09:9CB8: 88           	dey
 10416                        L362:
  Sat Jul 10 2021  1:15                                                Page 193


 10417 09:9CB9: 85 09        	sta	<R2
 10418 09:9CBB: 84 0B        	sty	<R2+2
 10419 09:9CBD: D4 0B        	pei	<R2+2
 10420 09:9CBF: D4 09        	pei	<R2
 10421 09:9CC1: A9 02 00     	lda	#$2
 10422                        	xref	~~~lasl
 10423 09:9CC4: 22 xx xx xx  	jsl	~~~lasl
 10424 09:9CC8: 85 01        	sta	<R0
 10425 09:9CCA: 86 03        	stx	<R0+2
 10426 09:9CCC: 18           	clc
 10427 09:9CCD: A9 0D 00     	lda	#$d
 10428 09:9CD0: 65 1D        	adc	<L347+current_SuperReloc3_1
 10429 09:9CD2: 85 0D        	sta	<R3
 10430 09:9CD4: A9 00 00     	lda	#$0
 10431 09:9CD7: 65 1F        	adc	<L347+current_SuperReloc3_1+2
 10432 09:9CD9: 85 0F        	sta	<R3+2
 10433 09:9CDB: 18           	clc
 10434 09:9CDC: A5 0D        	lda	<R3
 10435 09:9CDE: 65 01        	adc	<R0
 10436 09:9CE0: 85 11        	sta	<17
 10437 09:9CE2: A5 0F        	lda	<R3+2
 10438 09:9CE4: 65 03        	adc	<R0+2
 10439 09:9CE6: 85 13        	sta	<17+2
 10440 09:9CE8: A0 02 00     	ldy	#$2
 10441 09:9CEB: B7 11        	lda	[<17],Y
 10442 09:9CED: 48           	pha
 10443 09:9CEE: A7 11        	lda	[<17]
 10444 09:9CF0: 48           	pha
 10445 09:9CF1: A0 0A 00     	ldy	#$a
 10446 09:9CF4: B7 1D        	lda	[<L347+current_SuperReloc3_1],Y
 10447 09:9CF6: 48           	pha
 10448 09:9CF7: A0 09 00     	ldy	#$9
 10449 09:9CFA: B7 1D        	lda	[<L347+current_SuperReloc3_1],Y
 10450 09:9CFC: 48           	pha
 10451 09:9CFD: 22 33 AC 09  	jsl	~~AddReloc
 10452                        ;        }
 10453                        	.line	1465
 10454                        L10250:
 10455 09:9D01: E6 19        	inc	<L347+i_1
 10456                        L10253:
 10457 09:9D03: 38           	sec
 10458 09:9D04: A5 19        	lda	<L347+i_1
 10459 09:9D06: A0 0B 00     	ldy	#$b
 10460 09:9D09: F7 1D        	sbc	[<L347+current_SuperReloc3_1],Y
 10461 09:9D0B: 70 03        	bvs	L363
 10462 09:9D0D: 49 00 80     	eor	#$8000
 10463                        L363:
 10464 09:9D10: 30 03        	bmi	L364
 10465 09:9D12: 82 A5 FD     	brl	L10252
 10466                        L364:
 10467                        L10251:
 10468                        ;
 10469                        ;      /* Page suivante */
 10470                        ;      *page_rtn = *page_rtn + 1;
 10471                        	.line	1468
 10472 09:9D15: E2 20        	sep	#$20
 10473                        	longa	off
 10474 09:9D17: A7 2E        	lda	[<L346+page_rtn_0]
  Sat Jul 10 2021  1:15                                                Page 194


 10475 09:9D19: 1A           	ina
 10476 09:9D1A: C2 20        	rep	#$20
 10477                        	longa	on
 10478 09:9D1C: E2 20        	sep	#$20
 10479                        	longa	off
 10480 09:9D1E: 87 2E        	sta	[<L346+page_rtn_0]
 10481 09:9D20: C2 20        	rep	#$20
 10482                        	longa	on
 10483                        ;
 10484                        ;      /* Longueur du SubRecord */
 10485                        ;      *length_rtn = 1 + current_SuperReloc3->nb_a
                    ddress*sizeof(BYTE);
 10486                        	.line	1471
 10487 09:9D22: A0 0B 00     	ldy	#$b
 10488 09:9D25: B7 1D        	lda	[<L347+current_SuperReloc3_1],Y
 10489 09:9D27: 1A           	ina
 10490 09:9D28: 87 32        	sta	[<L346+length_rtn_0]
 10491                        ;    }
 10492                        	.line	1472
 10493                        L10249:
 10494                        ;
 10495                        ;  /* Renvoie la structure */
 10496                        ;  return(current_SuperReloc3);
 10497                        	.line	1475
 10498 09:9D2A: A6 1F        	ldx	<L347+current_SuperReloc3_1+2
 10499 09:9D2C: A5 1D        	lda	<L347+current_SuperReloc3_1
 10500 09:9D2E: 82 07 FD     	brl	L350
 10501                        ;}
 10502                        	.line	1476
 10503                        	.endblock	1476
 10504             00000020   L346	equ	32
 10505             00000019   L347	equ	25
 10506 09:9D31:              	ends
 10507                        	efunc
 10508                        	.endfunc	1476,25,32
 10509                        	.line	1476
 10510                        ;
 10511                        ;
 10512                        ;/************************************************
                    **********************/
 10513                        ;/*  DecodeSuperInterseg1() :  Décodage d'un SubRe
                    cord SuperInterseg1. */
 10514                        ;/************************************************
                    **********************/
 10515                        ;static struct subrecord_SuperInterseg1 *DecodeSup
                    erInterseg1(unsigned char *data, unsigned char *lconst, int 
                    lconst_length, BYTE *page_rtn, int *length_rtn, struct omf_s
                    egment *current_segment)
 10516                        ;{
 10517                        	.line	1482
 10518                        	.line	1483
 10519                        	LOADER
 10520                        	func
 10521                        	.function	1483
 10522                        ~~DecodeSuperInterseg1:
 10523                        	longa	on
 10524                        	longi	on
 10525 09:9D31: 3B           	tsc
  Sat Jul 10 2021  1:15                                                Page 195


 10526 09:9D32: 38           	sec
 10527 09:9D33: E9 20 00     	sbc	#L365
 10528 09:9D36: 1B           	tcs
 10529 09:9D37: 0B           	phd
 10530 09:9D38: 5B           	tcd
 10531             00000004   data_0	set	4
 10532             00000008   lconst_0	set	8
 10533             0000000C   lconst_length_0	set	12
 10534             0000000E   page_rtn_0	set	14
 10535             00000012   length_rtn_0	set	18
 10536             00000016   current_segment_0	set	22
 10537                        	.block	1483
 10538                        ;  int i;
 10539                        ;  WORD one_word;
 10540                        ;  struct subrecord_SuperInterseg1 *current_SuperI
                    nterseg1;
 10541                        ;
 10542                        ;  /* Allocation mémoire */
 10543                        ;  current_SuperInterseg1 = (struct subrecord_Supe
                    rInterseg1 *) k_calloc(1,sizeof(struct subrecord_SuperInters
                    eg1));
 10544             00000000   i_1	set	0
 10545             00000002   one_word_1	set	2
 10546             00000004   current_SuperInterseg1_1	set	4
 10547                        	.sym	i,0,5,1,16
 10548                        	.sym	one_word,2,5,1,16
 10549                        	.sym	current_SuperInterseg1,4,138,1,32,91
 10550                        	.sym	data,4,142,6,32
 10551                        	.sym	lconst,8,142,6,32
 10552                        	.sym	lconst_length,12,5,6,16
 10553                        	.sym	page_rtn,14,142,6,32
 10554                        	.sym	length_rtn,18,133,6,32
 10555                        	.sym	current_segment,22,138,6,32,86
 10556                        	.line	1489
 10557 09:9D39: F4 13 0A     	pea	#<$a13
 10558 09:9D3C: F4 01 00     	pea	#<$1
 10559 09:9D3F: 22 xx xx xx  	jsl	~~k_calloc
 10560 09:9D43: 85 1D        	sta	<L366+current_SuperInterseg1_1
 10561 09:9D45: 86 1F        	stx	<L366+current_SuperInterseg1_1+2
 10562                        ;  if(current_SuperInterseg1 == NULL)
 10563                        	.line	1490
 10564                        ;    {
 10565 09:9D47: A5 1D        	lda	<L366+current_SuperInterseg1_1
 10566 09:9D49: 05 1F        	ora	<L366+current_SuperInterseg1_1+2
 10567 09:9D4B: F0 03        	beq	L368
 10568 09:9D4D: 82 19 00     	brl	L10256
 10569                        L368:
 10570                        	.line	1491
 10571                        ;      //printf("Error : Impossible to allocate me
                    mory for SubRecord SuperInterseg1.\n");
 10572                        ;      return(NULL);
 10573                        	.line	1493
 10574 09:9D50: A9 00 00     	lda	#$0
 10575 09:9D53: AA           	tax
 10576 09:9D54: A9 00 00     	lda	#$0
 10577                        L369:
 10578 09:9D57: A8           	tay
 10579 09:9D58: A5 22        	lda	<L365+2
  Sat Jul 10 2021  1:15                                                Page 196


 10580 09:9D5A: 85 38        	sta	<L365+2+22
 10581 09:9D5C: A5 21        	lda	<L365+1
 10582 09:9D5E: 85 37        	sta	<L365+1+22
 10583 09:9D60: 2B           	pld
 10584 09:9D61: 3B           	tsc
 10585 09:9D62: 18           	clc
 10586 09:9D63: 69 36 00     	adc	#L365+22
 10587 09:9D66: 1B           	tcs
 10588 09:9D67: 98           	tya
 10589 09:9D68: 6B           	rtl
 10590                        ;    }
 10591                        	.line	1494
 10592                        ;
 10593                        ;  /* Nombre d'adresse-1 ou Saut de Page */
 10594                        ;  current_SuperInterseg1->Count = data[0];
 10595                        L10256:
 10596                        	.line	1497
 10597 09:9D69: E2 20        	sep	#$20
 10598                        	longa	off
 10599 09:9D6B: A7 24        	lda	[<L365+data_0]
 10600 09:9D6D: A0 08 00     	ldy	#$8
 10601 09:9D70: 97 1D        	sta	[<L366+current_SuperInterseg1_1],Y
 10602 09:9D72: C2 20        	rep	#$20
 10603                        	longa	on
 10604                        ;
 10605                        ;  /** Saut de Page **/
 10606                        ;  if((current_SuperInterseg1->Count & 0x80) == 0x
                    80)
 10607                        	.line	1500
 10608                        ;    {
 10609 09:9D74: A0 08 00     	ldy	#$8
 10610 09:9D77: B7 1D        	lda	[<L366+current_SuperInterseg1_1],Y
 10611 09:9D79: 29 80 00     	and	#<$80
 10612 09:9D7C: 85 01        	sta	<R0
 10613 09:9D7E: A5 01        	lda	<R0
 10614 09:9D80: C9 80 00     	cmp	#<$80
 10615 09:9D83: F0 03        	beq	L370
 10616 09:9D85: 82 24 00     	brl	L10257
 10617                        L370:
 10618                        	.line	1501
 10619                        ;      /* On saute X pages */
 10620                        ;      *page_rtn = *page_rtn + (current_SuperInter
                    seg1->Count & 0x7F);
 10621                        	.line	1503
 10622 09:9D88: E2 20        	sep	#$20
 10623                        	longa	off
 10624 09:9D8A: A0 08 00     	ldy	#$8
 10625 09:9D8D: B7 1D        	lda	[<L366+current_SuperInterseg1_1],Y
 10626 09:9D8F: 29 7F        	and	#<$7f
 10627 09:9D91: 85 01        	sta	<R0
 10628 09:9D93: C2 20        	rep	#$20
 10629                        	longa	on
 10630 09:9D95: E2 20        	sep	#$20
 10631                        	longa	off
 10632 09:9D97: 18           	clc
 10633 09:9D98: A7 2E        	lda	[<L365+page_rtn_0]
 10634 09:9D9A: 65 01        	adc	<R0
 10635 09:9D9C: C2 20        	rep	#$20
  Sat Jul 10 2021  1:15                                                Page 197


 10636                        	longa	on
 10637 09:9D9E: E2 20        	sep	#$20
 10638                        	longa	off
 10639 09:9DA0: 87 2E        	sta	[<L365+page_rtn_0]
 10640 09:9DA2: C2 20        	rep	#$20
 10641                        	longa	on
 10642                        ;
 10643                        ;      /* Longueur du SubRecord */
 10644                        ;      *length_rtn = 1;
 10645                        	.line	1506
 10646 09:9DA4: A9 01 00     	lda	#$1
 10647 09:9DA7: 87 32        	sta	[<L365+length_rtn_0]
 10648                        ;    }
 10649                        	.line	1507
 10650                        ;  else
 10651 09:9DA9: 82 BD 03     	brl	L10258
 10652                        L10257:
 10653                        ;    {
 10654                        	.line	1509
 10655                        ;      /* Number of Bytes to be relocated = Toujou
                    rs à 3 */
 10656                        ;      current_SuperInterseg1->ByteCnt = 0x03;
 10657                        	.line	1511
 10658 09:9DAC: E2 20        	sep	#$20
 10659                        	longa	off
 10660 09:9DAE: A9 03        	lda	#$3
 10661 09:9DB0: A0 09 00     	ldy	#$9
 10662 09:9DB3: 97 1D        	sta	[<L366+current_SuperInterseg1_1],Y
 10663 09:9DB5: C2 20        	rep	#$20
 10664                        	longa	on
 10665                        ;
 10666                        ;      /* Opérations >> ou << = Toujours à 0  */
 10667                        ;      current_SuperInterseg1->BitShiftCnt = 0x00;
 10668                        	.line	1514
 10669 09:9DB7: E2 20        	sep	#$20
 10670                        	longa	off
 10671 09:9DB9: A9 00        	lda	#$0
 10672 09:9DBB: A0 0A 00     	ldy	#$a
 10673 09:9DBE: 97 1D        	sta	[<L366+current_SuperInterseg1_1],Y
 10674 09:9DC0: C2 20        	rep	#$20
 10675                        	longa	on
 10676                        ;
 10677                        ;      /* File Number toujours à 1 */
 10678                        ;      current_SuperInterseg1->FileNum = 1;
 10679                        	.line	1517
 10680 09:9DC2: A9 01 00     	lda	#$1
 10681 09:9DC5: A0 0B 00     	ldy	#$b
 10682 09:9DC8: 97 1D        	sta	[<L366+current_SuperInterseg1_1],Y
 10683                        ;
 10684                        ;      /* Nombre d'adresse */
 10685                        ;      current_SuperInterseg1->nb_address = curren
                    t_SuperInterseg1->Count + 1;
 10686                        	.line	1520
 10687 09:9DCA: A0 08 00     	ldy	#$8
 10688 09:9DCD: B7 1D        	lda	[<L366+current_SuperInterseg1_1],Y
 10689 09:9DCF: 29 FF 00     	and	#$ff
 10690 09:9DD2: 85 01        	sta	<R0
 10691 09:9DD4: A5 01        	lda	<R0
  Sat Jul 10 2021  1:15                                                Page 198


 10692 09:9DD6: 1A           	ina
 10693 09:9DD7: A0 0D 00     	ldy	#$d
 10694 09:9DDA: 97 1D        	sta	[<L366+current_SuperInterseg1_1],Y
 10695                        ;
 10696                        ;      /** Copie les adresses **/
 10697                        ;      for(i=0; i<current_SuperInterseg1->nb_addre
                    ss; i++)
 10698                        	.line	1523
 10699 09:9DDC: 64 19        	stz	<L366+i_1
 10700 09:9DDE: 82 61 03     	brl	L10262
 10701                        L10261:
 10702                        ;        {
 10703                        	.line	1524
 10704                        ;          /* Décode OffsetPath et OffsetReference
                     */
 10705                        ;          current_SuperInterseg1->OffsetPatch[i] 
                    = ((WORD)(*page_rtn)) << 8 | data[1+i];
 10706                        	.line	1526
 10707 09:9DE1: A0 00 00     	ldy	#$0
 10708 09:9DE4: A5 19        	lda	<L366+i_1
 10709 09:9DE6: 10 01        	bpl	L371
 10710 09:9DE8: 88           	dey
 10711                        L371:
 10712 09:9DE9: 85 05        	sta	<R1
 10713 09:9DEB: 84 07        	sty	<R1+2
 10714 09:9DED: D4 07        	pei	<R1+2
 10715 09:9DEF: D4 05        	pei	<R1
 10716 09:9DF1: A9 02 00     	lda	#$2
 10717                        	xref	~~~lasl
 10718 09:9DF4: 22 xx xx xx  	jsl	~~~lasl
 10719 09:9DF8: 85 01        	sta	<R0
 10720 09:9DFA: 86 03        	stx	<R0+2
 10721 09:9DFC: 18           	clc
 10722 09:9DFD: A9 0F 00     	lda	#$f
 10723 09:9E00: 65 1D        	adc	<L366+current_SuperInterseg1_1
 10724 09:9E02: 85 09        	sta	<R2
 10725 09:9E04: A9 00 00     	lda	#$0
 10726 09:9E07: 65 1F        	adc	<L366+current_SuperInterseg1_1+2
 10727 09:9E09: 85 0B        	sta	<R2+2
 10728 09:9E0B: 18           	clc
 10729 09:9E0C: A5 09        	lda	<R2
 10730 09:9E0E: 65 01        	adc	<R0
 10731 09:9E10: 85 0D        	sta	<R3
 10732 09:9E12: A5 0B        	lda	<R2+2
 10733 09:9E14: 65 03        	adc	<R0+2
 10734 09:9E16: 85 0F        	sta	<R3+2
 10735 09:9E18: A5 19        	lda	<L366+i_1
 10736 09:9E1A: 1A           	ina
 10737 09:9E1B: 85 01        	sta	<R0
 10738 09:9E1D: A4 01        	ldy	<R0
 10739 09:9E1F: B7 24        	lda	[<L365+data_0],Y
 10740 09:9E21: 29 FF 00     	and	#$ff
 10741 09:9E24: 85 09        	sta	<R2
 10742 09:9E26: A7 2E        	lda	[<L365+page_rtn_0]
 10743 09:9E28: 29 FF 00     	and	#$ff
 10744 09:9E2B: 85 15        	sta	<21
 10745 09:9E2D: A5 15        	lda	<21
 10746 09:9E2F: EB           	xba
  Sat Jul 10 2021  1:15                                                Page 199


 10747 09:9E30: 29 00 FF     	and	#$ff00
 10748 09:9E33: 85 11        	sta	<17
 10749 09:9E35: A5 11        	lda	<17
 10750 09:9E37: 05 09        	ora	<R2
 10751 09:9E39: 85 15        	sta	<21
 10752 09:9E3B: A0 00 00     	ldy	#$0
 10753 09:9E3E: A5 15        	lda	<21
 10754 09:9E40: 10 01        	bpl	L372
 10755 09:9E42: 88           	dey
 10756                        L372:
 10757 09:9E43: 85 09        	sta	<R2
 10758 09:9E45: 84 0B        	sty	<R2+2
 10759 09:9E47: A5 09        	lda	<R2
 10760 09:9E49: 87 0D        	sta	[<R3]
 10761 09:9E4B: A5 0B        	lda	<R2+2
 10762 09:9E4D: A0 02 00     	ldy	#$2
 10763 09:9E50: 97 0D        	sta	[<R3],Y
 10764                        ;          
 10765                        ;          /* On vérifie qu'on reste dans les limi
                    te du LCONST */
 10766                        ;          if(current_SuperInterseg1->OffsetPatch[
                    i] > (DWORD) lconst_length)
 10767                        	.line	1529
 10768                        ;            {
 10769 09:9E52: A0 00 00     	ldy	#$0
 10770 09:9E55: A5 2C        	lda	<L365+lconst_length_0
 10771 09:9E57: 10 01        	bpl	L373
 10772 09:9E59: 88           	dey
 10773                        L373:
 10774 09:9E5A: 85 01        	sta	<R0
 10775 09:9E5C: 84 03        	sty	<R0+2
 10776 09:9E5E: A0 00 00     	ldy	#$0
 10777 09:9E61: A5 19        	lda	<L366+i_1
 10778 09:9E63: 10 01        	bpl	L374
 10779 09:9E65: 88           	dey
 10780                        L374:
 10781 09:9E66: 85 09        	sta	<R2
 10782 09:9E68: 84 0B        	sty	<R2+2
 10783 09:9E6A: D4 0B        	pei	<R2+2
 10784 09:9E6C: D4 09        	pei	<R2
 10785 09:9E6E: A9 02 00     	lda	#$2
 10786                        	xref	~~~lasl
 10787 09:9E71: 22 xx xx xx  	jsl	~~~lasl
 10788 09:9E75: 85 05        	sta	<R1
 10789 09:9E77: 86 07        	stx	<R1+2
 10790 09:9E79: 18           	clc
 10791 09:9E7A: A9 0F 00     	lda	#$f
 10792 09:9E7D: 65 1D        	adc	<L366+current_SuperInterseg1_1
 10793 09:9E7F: 85 0D        	sta	<R3
 10794 09:9E81: A9 00 00     	lda	#$0
 10795 09:9E84: 65 1F        	adc	<L366+current_SuperInterseg1_1+2
 10796 09:9E86: 85 0F        	sta	<R3+2
 10797 09:9E88: 18           	clc
 10798 09:9E89: A5 0D        	lda	<R3
 10799 09:9E8B: 65 05        	adc	<R1
 10800 09:9E8D: 85 11        	sta	<17
 10801 09:9E8F: A5 0F        	lda	<R3+2
 10802 09:9E91: 65 07        	adc	<R1+2
  Sat Jul 10 2021  1:15                                                Page 200


 10803 09:9E93: 85 13        	sta	<17+2
 10804 09:9E95: A5 01        	lda	<R0
 10805 09:9E97: C7 11        	cmp	[<17]
 10806 09:9E99: A5 03        	lda	<R0+2
 10807 09:9E9B: A0 02 00     	ldy	#$2
 10808 09:9E9E: F7 11        	sbc	[<17],Y
 10809 09:9EA0: 90 03        	bcc	L375
 10810 09:9EA2: 82 83 00     	brl	L10263
 10811                        L375:
 10812                        	.line	1530
 10813                        ;              //printf("  Error : Bad Reference A
                    ddress in SuperInterseg1 for Offset %04X in Segment #%02X.\n
                    ",current_SuperInterseg1->OffsetPatch[i],current_segment->he
                    ader.SegNum);
 10814                        ;              current_SuperInterseg1->OffsetRefer
                    ence[i] = 0xFFFF;   /* Erreur */
 10815                        	.line	1532
 10816 09:9EA5: A0 00 00     	ldy	#$0
 10817 09:9EA8: A5 19        	lda	<L366+i_1
 10818 09:9EAA: 10 01        	bpl	L376
 10819 09:9EAC: 88           	dey
 10820                        L376:
 10821 09:9EAD: 85 05        	sta	<R1
 10822 09:9EAF: 84 07        	sty	<R1+2
 10823 09:9EB1: D4 07        	pei	<R1+2
 10824 09:9EB3: D4 05        	pei	<R1
 10825 09:9EB5: A9 02 00     	lda	#$2
 10826                        	xref	~~~lasl
 10827 09:9EB8: 22 xx xx xx  	jsl	~~~lasl
 10828 09:9EBC: 85 01        	sta	<R0
 10829 09:9EBE: 86 03        	stx	<R0+2
 10830 09:9EC0: 18           	clc
 10831 09:9EC1: A9 0F 04     	lda	#$40f
 10832 09:9EC4: 65 1D        	adc	<L366+current_SuperInterseg1_1
 10833 09:9EC6: 85 09        	sta	<R2
 10834 09:9EC8: A9 00 00     	lda	#$0
 10835 09:9ECB: 65 1F        	adc	<L366+current_SuperInterseg1_1+2
 10836 09:9ECD: 85 0B        	sta	<R2+2
 10837 09:9ECF: 18           	clc
 10838 09:9ED0: A5 09        	lda	<R2
 10839 09:9ED2: 65 01        	adc	<R0
 10840 09:9ED4: 85 0D        	sta	<R3
 10841 09:9ED6: A5 0B        	lda	<R2+2
 10842 09:9ED8: 65 03        	adc	<R0+2
 10843 09:9EDA: 85 0F        	sta	<R3+2
 10844 09:9EDC: A9 FF FF     	lda	#$ffff
 10845 09:9EDF: 87 0D        	sta	[<R3]
 10846 09:9EE1: A9 00 00     	lda	#$0
 10847 09:9EE4: A0 02 00     	ldy	#$2
 10848 09:9EE7: 97 0D        	sta	[<R3],Y
 10849                        ;              current_SuperInterseg1->SegNum[i] =
                     0xFF;              /* Erreur */
 10850                        	.line	1533
 10851 09:9EE9: A0 00 00     	ldy	#$0
 10852 09:9EEC: A5 19        	lda	<L366+i_1
 10853 09:9EEE: 10 01        	bpl	L377
 10854 09:9EF0: 88           	dey
 10855                        L377:
  Sat Jul 10 2021  1:15                                                Page 201


 10856 09:9EF1: 85 05        	sta	<R1
 10857 09:9EF3: 84 07        	sty	<R1+2
 10858 09:9EF5: D4 07        	pei	<R1+2
 10859 09:9EF7: D4 05        	pei	<R1
 10860 09:9EF9: A9 01 00     	lda	#$1
 10861                        	xref	~~~lasl
 10862 09:9EFC: 22 xx xx xx  	jsl	~~~lasl
 10863 09:9F00: 85 01        	sta	<R0
 10864 09:9F02: 86 03        	stx	<R0+2
 10865 09:9F04: 18           	clc
 10866 09:9F05: A9 0F 08     	lda	#$80f
 10867 09:9F08: 65 1D        	adc	<L366+current_SuperInterseg1_1
 10868 09:9F0A: 85 09        	sta	<R2
 10869 09:9F0C: A9 00 00     	lda	#$0
 10870 09:9F0F: 65 1F        	adc	<L366+current_SuperInterseg1_1+2
 10871 09:9F11: 85 0B        	sta	<R2+2
 10872 09:9F13: 18           	clc
 10873 09:9F14: A5 09        	lda	<R2
 10874 09:9F16: 65 01        	adc	<R0
 10875 09:9F18: 85 0D        	sta	<R3
 10876 09:9F1A: A5 0B        	lda	<R2+2
 10877 09:9F1C: 65 03        	adc	<R0+2
 10878 09:9F1E: 85 0F        	sta	<R3+2
 10879 09:9F20: A9 FF 00     	lda	#$ff
 10880 09:9F23: 87 0D        	sta	[<R3]
 10881                        ;            }
 10882                        	.line	1534
 10883                        ;          else
 10884 09:9F25: 82 45 01     	brl	L10264
 10885                        L10263:
 10886                        ;            {          
 10887                        	.line	1536
 10888                        ;              memcpy(&one_word,&lconst[current_Su
                    perInterseg1->OffsetPatch[i]],sizeof(WORD));
 10889                        	.line	1537
 10890 09:9F28: F4 02 00     	pea	#<$2
 10891 09:9F2B: A0 00 00     	ldy	#$0
 10892 09:9F2E: A5 19        	lda	<L366+i_1
 10893 09:9F30: 10 01        	bpl	L378
 10894 09:9F32: 88           	dey
 10895                        L378:
 10896 09:9F33: 85 05        	sta	<R1
 10897 09:9F35: 84 07        	sty	<R1+2
 10898 09:9F37: D4 07        	pei	<R1+2
 10899 09:9F39: D4 05        	pei	<R1
 10900 09:9F3B: A9 02 00     	lda	#$2
 10901                        	xref	~~~lasl
 10902 09:9F3E: 22 xx xx xx  	jsl	~~~lasl
 10903 09:9F42: 85 01        	sta	<R0
 10904 09:9F44: 86 03        	stx	<R0+2
 10905 09:9F46: 18           	clc
 10906 09:9F47: A9 0F 00     	lda	#$f
 10907 09:9F4A: 65 1D        	adc	<L366+current_SuperInterseg1_1
 10908 09:9F4C: 85 09        	sta	<R2
 10909 09:9F4E: A9 00 00     	lda	#$0
 10910 09:9F51: 65 1F        	adc	<L366+current_SuperInterseg1_1+2
 10911 09:9F53: 85 0B        	sta	<R2+2
 10912 09:9F55: 18           	clc
  Sat Jul 10 2021  1:15                                                Page 202


 10913 09:9F56: A5 09        	lda	<R2
 10914 09:9F58: 65 01        	adc	<R0
 10915 09:9F5A: 85 0D        	sta	<R3
 10916 09:9F5C: A5 0B        	lda	<R2+2
 10917 09:9F5E: 65 03        	adc	<R0+2
 10918 09:9F60: 85 0F        	sta	<R3+2
 10919 09:9F62: 18           	clc
 10920 09:9F63: A5 28        	lda	<L365+lconst_0
 10921 09:9F65: 67 0D        	adc	[<R3]
 10922 09:9F67: 85 01        	sta	<R0
 10923 09:9F69: A5 2A        	lda	<L365+lconst_0+2
 10924 09:9F6B: A0 02 00     	ldy	#$2
 10925 09:9F6E: 77 0D        	adc	[<R3],Y
 10926 09:9F70: 85 03        	sta	<R0+2
 10927 09:9F72: D4 03        	pei	<R0+2
 10928 09:9F74: D4 01        	pei	<R0
 10929 09:9F76: F4 00 00     	pea	#0
 10930 09:9F79: 18           	clc
 10931 09:9F7A: 7B           	tdc
 10932 09:9F7B: 69 1B 00     	adc	#<L366+one_word_1
 10933 09:9F7E: 48           	pha
 10934 09:9F7F: 22 xx xx xx  	jsl	~~memcpy
 10935                        ;              current_SuperInterseg1->OffsetRefer
                    ence[i] = (DWORD) one_word;
 10936                        	.line	1538
 10937 09:9F83: A0 00 00     	ldy	#$0
 10938 09:9F86: A5 19        	lda	<L366+i_1
 10939 09:9F88: 10 01        	bpl	L379
 10940 09:9F8A: 88           	dey
 10941                        L379:
 10942 09:9F8B: 85 05        	sta	<R1
 10943 09:9F8D: 84 07        	sty	<R1+2
 10944 09:9F8F: D4 07        	pei	<R1+2
 10945 09:9F91: D4 05        	pei	<R1
 10946 09:9F93: A9 02 00     	lda	#$2
 10947                        	xref	~~~lasl
 10948 09:9F96: 22 xx xx xx  	jsl	~~~lasl
 10949 09:9F9A: 85 01        	sta	<R0
 10950 09:9F9C: 86 03        	stx	<R0+2
 10951 09:9F9E: 18           	clc
 10952 09:9F9F: A9 0F 04     	lda	#$40f
 10953 09:9FA2: 65 1D        	adc	<L366+current_SuperInterseg1_1
 10954 09:9FA4: 85 09        	sta	<R2
 10955 09:9FA6: A9 00 00     	lda	#$0
 10956 09:9FA9: 65 1F        	adc	<L366+current_SuperInterseg1_1+2
 10957 09:9FAB: 85 0B        	sta	<R2+2
 10958 09:9FAD: 18           	clc
 10959 09:9FAE: A5 09        	lda	<R2
 10960 09:9FB0: 65 01        	adc	<R0
 10961 09:9FB2: 85 0D        	sta	<R3
 10962 09:9FB4: A5 0B        	lda	<R2+2
 10963 09:9FB6: 65 03        	adc	<R0+2
 10964 09:9FB8: 85 0F        	sta	<R3+2
 10965 09:9FBA: A0 00 00     	ldy	#$0
 10966 09:9FBD: A5 1B        	lda	<L366+one_word_1
 10967 09:9FBF: 10 01        	bpl	L380
 10968 09:9FC1: 88           	dey
 10969                        L380:
  Sat Jul 10 2021  1:15                                                Page 203


 10970 09:9FC2: 85 01        	sta	<R0
 10971 09:9FC4: 84 03        	sty	<R0+2
 10972 09:9FC6: A5 01        	lda	<R0
 10973 09:9FC8: 87 0D        	sta	[<R3]
 10974 09:9FCA: A5 03        	lda	<R0+2
 10975 09:9FCC: A0 02 00     	ldy	#$2
 10976 09:9FCF: 97 0D        	sta	[<R3],Y
 10977                        ;              current_SuperInterseg1->SegNum[i] =
                     (WORD) lconst[current_SuperInterseg1->OffsetPatch[i]+2];
 10978                        	.line	1539
 10979 09:9FD1: A0 00 00     	ldy	#$0
 10980 09:9FD4: A5 19        	lda	<L366+i_1
 10981 09:9FD6: 10 01        	bpl	L381
 10982 09:9FD8: 88           	dey
 10983                        L381:
 10984 09:9FD9: 85 05        	sta	<R1
 10985 09:9FDB: 84 07        	sty	<R1+2
 10986 09:9FDD: D4 07        	pei	<R1+2
 10987 09:9FDF: D4 05        	pei	<R1
 10988 09:9FE1: A9 01 00     	lda	#$1
 10989                        	xref	~~~lasl
 10990 09:9FE4: 22 xx xx xx  	jsl	~~~lasl
 10991 09:9FE8: 85 01        	sta	<R0
 10992 09:9FEA: 86 03        	stx	<R0+2
 10993 09:9FEC: 18           	clc
 10994 09:9FED: A9 0F 08     	lda	#$80f
 10995 09:9FF0: 65 1D        	adc	<L366+current_SuperInterseg1_1
 10996 09:9FF2: 85 09        	sta	<R2
 10997 09:9FF4: A9 00 00     	lda	#$0
 10998 09:9FF7: 65 1F        	adc	<L366+current_SuperInterseg1_1+2
 10999 09:9FF9: 85 0B        	sta	<R2+2
 11000 09:9FFB: 18           	clc
 11001 09:9FFC: A5 09        	lda	<R2
 11002 09:9FFE: 65 01        	adc	<R0
 11003 09:A000: 85 0D        	sta	<R3
 11004 09:A002: A5 0B        	lda	<R2+2
 11005 09:A004: 65 03        	adc	<R0+2
 11006 09:A006: 85 0F        	sta	<R3+2
 11007 09:A008: A0 00 00     	ldy	#$0
 11008 09:A00B: A5 19        	lda	<L366+i_1
 11009 09:A00D: 10 01        	bpl	L382
 11010 09:A00F: 88           	dey
 11011                        L382:
 11012 09:A010: 85 09        	sta	<R2
 11013 09:A012: 84 0B        	sty	<R2+2
 11014 09:A014: D4 0B        	pei	<R2+2
 11015 09:A016: D4 09        	pei	<R2
 11016 09:A018: A9 02 00     	lda	#$2
 11017                        	xref	~~~lasl
 11018 09:A01B: 22 xx xx xx  	jsl	~~~lasl
 11019 09:A01F: 85 01        	sta	<R0
 11020 09:A021: 86 03        	stx	<R0+2
 11021 09:A023: 18           	clc
 11022 09:A024: A9 0F 00     	lda	#$f
 11023 09:A027: 65 1D        	adc	<L366+current_SuperInterseg1_1
 11024 09:A029: 85 11        	sta	<17
 11025 09:A02B: A9 00 00     	lda	#$0
 11026 09:A02E: 65 1F        	adc	<L366+current_SuperInterseg1_1+2
  Sat Jul 10 2021  1:15                                                Page 204


 11027 09:A030: 85 13        	sta	<17+2
 11028 09:A032: 18           	clc
 11029 09:A033: A5 11        	lda	<17
 11030 09:A035: 65 01        	adc	<R0
 11031 09:A037: 85 15        	sta	<21
 11032 09:A039: A5 13        	lda	<17+2
 11033 09:A03B: 65 03        	adc	<R0+2
 11034 09:A03D: 85 17        	sta	<21+2
 11035 09:A03F: A7 15        	lda	[<21]
 11036 09:A041: 85 01        	sta	<R0
 11037 09:A043: A0 02 00     	ldy	#$2
 11038 09:A046: B7 15        	lda	[<21],Y
 11039 09:A048: 85 03        	sta	<R0+2
 11040 09:A04A: 18           	clc
 11041 09:A04B: A9 02 00     	lda	#$2
 11042 09:A04E: 65 28        	adc	<L365+lconst_0
 11043 09:A050: 85 11        	sta	<17
 11044 09:A052: A9 00 00     	lda	#$0
 11045 09:A055: 65 2A        	adc	<L365+lconst_0+2
 11046 09:A057: 85 13        	sta	<17+2
 11047 09:A059: 18           	clc
 11048 09:A05A: A5 11        	lda	<17
 11049 09:A05C: 65 01        	adc	<R0
 11050 09:A05E: 85 15        	sta	<21
 11051 09:A060: A5 13        	lda	<17+2
 11052 09:A062: 65 03        	adc	<R0+2
 11053 09:A064: 85 17        	sta	<21+2
 11054 09:A066: A7 15        	lda	[<21]
 11055 09:A068: 29 FF 00     	and	#$ff
 11056 09:A06B: 87 0D        	sta	[<R3]
 11057                        ;            }
 11058                        	.line	1540
 11059                        L10264:
 11060                        ;            
 11061                        ;          /* Conserve ce INTERSEG */
 11062                        ;          AddInterseg(current_SuperInterseg1->Byt
                    eCnt,current_SuperInterseg1->BitShiftCnt,current_SuperInters
                    eg1->OffsetPatch[i],current_SuperInterseg1->OffsetReference[
                    i],current_SuperInterseg1->FileNum,current_SuperInterseg1->S
                    egNum[i],RECORD_SUPER_INTERSEG1);
 11063                        	.line	1543
 11064 09:A06D: F4 07 00     	pea	#<$7
 11065 09:A070: A0 00 00     	ldy	#$0
 11066 09:A073: A5 19        	lda	<L366+i_1
 11067 09:A075: 10 01        	bpl	L383
 11068 09:A077: 88           	dey
 11069                        L383:
 11070 09:A078: 85 05        	sta	<R1
 11071 09:A07A: 84 07        	sty	<R1+2
 11072 09:A07C: D4 07        	pei	<R1+2
 11073 09:A07E: D4 05        	pei	<R1
 11074 09:A080: A9 01 00     	lda	#$1
 11075                        	xref	~~~lasl
 11076 09:A083: 22 xx xx xx  	jsl	~~~lasl
 11077 09:A087: 85 01        	sta	<R0
 11078 09:A089: 86 03        	stx	<R0+2
 11079 09:A08B: 18           	clc
 11080 09:A08C: A9 0F 08     	lda	#$80f
  Sat Jul 10 2021  1:15                                                Page 205


 11081 09:A08F: 65 1D        	adc	<L366+current_SuperInterseg1_1
 11082 09:A091: 85 09        	sta	<R2
 11083 09:A093: A9 00 00     	lda	#$0
 11084 09:A096: 65 1F        	adc	<L366+current_SuperInterseg1_1+2
 11085 09:A098: 85 0B        	sta	<R2+2
 11086 09:A09A: 18           	clc
 11087 09:A09B: A5 09        	lda	<R2
 11088 09:A09D: 65 01        	adc	<R0
 11089 09:A09F: 85 0D        	sta	<R3
 11090 09:A0A1: A5 0B        	lda	<R2+2
 11091 09:A0A3: 65 03        	adc	<R0+2
 11092 09:A0A5: 85 0F        	sta	<R3+2
 11093 09:A0A7: A7 0D        	lda	[<R3]
 11094 09:A0A9: 48           	pha
 11095 09:A0AA: A0 0B 00     	ldy	#$b
 11096 09:A0AD: B7 1D        	lda	[<L366+current_SuperInterseg1_1],Y
 11097 09:A0AF: 48           	pha
 11098 09:A0B0: A0 00 00     	ldy	#$0
 11099 09:A0B3: A5 19        	lda	<L366+i_1
 11100 09:A0B5: 10 01        	bpl	L384
 11101 09:A0B7: 88           	dey
 11102                        L384:
 11103 09:A0B8: 85 09        	sta	<R2
 11104 09:A0BA: 84 0B        	sty	<R2+2
 11105 09:A0BC: D4 0B        	pei	<R2+2
 11106 09:A0BE: D4 09        	pei	<R2
 11107 09:A0C0: A9 02 00     	lda	#$2
 11108                        	xref	~~~lasl
 11109 09:A0C3: 22 xx xx xx  	jsl	~~~lasl
 11110 09:A0C7: 85 01        	sta	<R0
 11111 09:A0C9: 86 03        	stx	<R0+2
 11112 09:A0CB: 18           	clc
 11113 09:A0CC: A9 0F 04     	lda	#$40f
 11114 09:A0CF: 65 1D        	adc	<L366+current_SuperInterseg1_1
 11115 09:A0D1: 85 0D        	sta	<R3
 11116 09:A0D3: A9 00 00     	lda	#$0
 11117 09:A0D6: 65 1F        	adc	<L366+current_SuperInterseg1_1+2
 11118 09:A0D8: 85 0F        	sta	<R3+2
 11119 09:A0DA: 18           	clc
 11120 09:A0DB: A5 0D        	lda	<R3
 11121 09:A0DD: 65 01        	adc	<R0
 11122 09:A0DF: 85 11        	sta	<17
 11123 09:A0E1: A5 0F        	lda	<R3+2
 11124 09:A0E3: 65 03        	adc	<R0+2
 11125 09:A0E5: 85 13        	sta	<17+2
 11126 09:A0E7: A0 02 00     	ldy	#$2
 11127 09:A0EA: B7 11        	lda	[<17],Y
 11128 09:A0EC: 48           	pha
 11129 09:A0ED: A7 11        	lda	[<17]
 11130 09:A0EF: 48           	pha
 11131 09:A0F0: A0 00 00     	ldy	#$0
 11132 09:A0F3: A5 19        	lda	<L366+i_1
 11133 09:A0F5: 10 01        	bpl	L385
 11134 09:A0F7: 88           	dey
 11135                        L385:
 11136 09:A0F8: 85 0D        	sta	<R3
 11137 09:A0FA: 84 0F        	sty	<R3+2
 11138 09:A0FC: D4 0F        	pei	<R3+2
  Sat Jul 10 2021  1:15                                                Page 206


 11139 09:A0FE: D4 0D        	pei	<R3
 11140 09:A100: A9 02 00     	lda	#$2
 11141                        	xref	~~~lasl
 11142 09:A103: 22 xx xx xx  	jsl	~~~lasl
 11143 09:A107: 85 01        	sta	<R0
 11144 09:A109: 86 03        	stx	<R0+2
 11145 09:A10B: 18           	clc
 11146 09:A10C: A9 0F 00     	lda	#$f
 11147 09:A10F: 65 1D        	adc	<L366+current_SuperInterseg1_1
 11148 09:A111: 85 11        	sta	<17
 11149 09:A113: A9 00 00     	lda	#$0
 11150 09:A116: 65 1F        	adc	<L366+current_SuperInterseg1_1+2
 11151 09:A118: 85 13        	sta	<17+2
 11152 09:A11A: 18           	clc
 11153 09:A11B: A5 11        	lda	<17
 11154 09:A11D: 65 01        	adc	<R0
 11155 09:A11F: 85 15        	sta	<21
 11156 09:A121: A5 13        	lda	<17+2
 11157 09:A123: 65 03        	adc	<R0+2
 11158 09:A125: 85 17        	sta	<21+2
 11159 09:A127: A0 02 00     	ldy	#$2
 11160 09:A12A: B7 15        	lda	[<21],Y
 11161 09:A12C: 48           	pha
 11162 09:A12D: A7 15        	lda	[<21]
 11163 09:A12F: 48           	pha
 11164 09:A130: A0 0A 00     	ldy	#$a
 11165 09:A133: B7 1D        	lda	[<L366+current_SuperInterseg1_1],Y
 11166 09:A135: 48           	pha
 11167 09:A136: A0 09 00     	ldy	#$9
 11168 09:A139: B7 1D        	lda	[<L366+current_SuperInterseg1_1],Y
 11169 09:A13B: 48           	pha
 11170 09:A13C: 22 A9 AC 09  	jsl	~~AddInterseg
 11171                        ;        }
 11172                        	.line	1544
 11173                        L10259:
 11174 09:A140: E6 19        	inc	<L366+i_1
 11175                        L10262:
 11176 09:A142: 38           	sec
 11177 09:A143: A5 19        	lda	<L366+i_1
 11178 09:A145: A0 0D 00     	ldy	#$d
 11179 09:A148: F7 1D        	sbc	[<L366+current_SuperInterseg1_1],Y
 11180 09:A14A: 70 03        	bvs	L386
 11181 09:A14C: 49 00 80     	eor	#$8000
 11182                        L386:
 11183 09:A14F: 30 03        	bmi	L387
 11184 09:A151: 82 8D FC     	brl	L10261
 11185                        L387:
 11186                        L10260:
 11187                        ;
 11188                        ;      /* Page suivante */
 11189                        ;      *page_rtn = *page_rtn + 1;
 11190                        	.line	1547
 11191 09:A154: E2 20        	sep	#$20
 11192                        	longa	off
 11193 09:A156: A7 2E        	lda	[<L365+page_rtn_0]
 11194 09:A158: 1A           	ina
 11195 09:A159: C2 20        	rep	#$20
 11196                        	longa	on
  Sat Jul 10 2021  1:15                                                Page 207


 11197 09:A15B: E2 20        	sep	#$20
 11198                        	longa	off
 11199 09:A15D: 87 2E        	sta	[<L365+page_rtn_0]
 11200 09:A15F: C2 20        	rep	#$20
 11201                        	longa	on
 11202                        ;
 11203                        ;      /* Longueur du SubRecord */
 11204                        ;      *length_rtn = 1 + current_SuperInterseg1->n
                    b_address*sizeof(BYTE);
 11205                        	.line	1550
 11206 09:A161: A0 0D 00     	ldy	#$d
 11207 09:A164: B7 1D        	lda	[<L366+current_SuperInterseg1_1],Y
 11208 09:A166: 1A           	ina
 11209 09:A167: 87 32        	sta	[<L365+length_rtn_0]
 11210                        ;    }
 11211                        	.line	1551
 11212                        L10258:
 11213                        ;
 11214                        ;  /* Renvoie la structure */
 11215                        ;  return(current_SuperInterseg1);
 11216                        	.line	1554
 11217 09:A169: A6 1F        	ldx	<L366+current_SuperInterseg1_1+2
 11218 09:A16B: A5 1D        	lda	<L366+current_SuperInterseg1_1
 11219 09:A16D: 82 E7 FB     	brl	L369
 11220                        ;}
 11221                        	.line	1555
 11222                        	.endblock	1555
 11223             00000020   L365	equ	32
 11224             00000019   L366	equ	25
 11225 09:A170:              	ends
 11226                        	efunc
 11227                        	.endfunc	1555,25,32
 11228                        	.line	1555
 11229                        ;
 11230                        ;
 11231                        ;/************************************************
                    **************************/
 11232                        ;/*  DecodeSuperInterseg212() :  Décodage d'un Sub
                    Record SuperInterseg212. */
 11233                        ;/************************************************
                    **************************/
 11234                        ;static struct subrecord_SuperInterseg212 *DecodeS
                    uperInterseg212(unsigned char *data, BYTE FileNum, unsigned 
                    char *lconst, int lconst_length, BYTE *page_rtn, int *length
                    _rtn, struct omf_segment *current_segment)
 11235                        ;{
 11236                        	.line	1561
 11237                        	.line	1562
 11238                        	LOADER
 11239                        	func
 11240                        	.function	1562
 11241                        ~~DecodeSuperInterseg212:
 11242                        	longa	on
 11243                        	longi	on
 11244 09:A170: 3B           	tsc
 11245 09:A171: 38           	sec
 11246 09:A172: E9 20 00     	sbc	#L388
 11247 09:A175: 1B           	tcs
  Sat Jul 10 2021  1:15                                                Page 208


 11248 09:A176: 0B           	phd
 11249 09:A177: 5B           	tcd
 11250             00000004   data_0	set	4
 11251             00000008   FileNum_0	set	8
 11252             0000000A   lconst_0	set	10
 11253             0000000E   lconst_length_0	set	14
 11254             00000010   page_rtn_0	set	16
 11255             00000014   length_rtn_0	set	20
 11256             00000018   current_segment_0	set	24
 11257                        	.block	1562
 11258                        ;  int i;
 11259                        ;  WORD one_word;
 11260                        ;  struct subrecord_SuperInterseg212 *current_Supe
                    rInterseg212;
 11261                        ;
 11262                        ;  /* Allocation mémoire */
 11263                        ;  current_SuperInterseg212 = (struct subrecord_Su
                    perInterseg212 *) k_calloc(1,sizeof(struct subrecord_SuperIn
                    terseg212));
 11264             00000000   i_1	set	0
 11265             00000002   one_word_1	set	2
 11266             00000004   current_SuperInterseg212_1	set	4
 11267                        	.sym	i,0,5,1,16
 11268                        	.sym	one_word,2,5,1,16
 11269                        	.sym	current_SuperInterseg212,4,138,1,32,92
 11270                        	.sym	data,4,142,6,32
 11271                        	.sym	FileNum,8,14,6,8
 11272                        	.sym	lconst,10,142,6,32
 11273                        	.sym	lconst_length,14,5,6,16
 11274                        	.sym	page_rtn,16,142,6,32
 11275                        	.sym	length_rtn,20,133,6,32
 11276                        	.sym	current_segment,24,138,6,32,86
 11277                        	.line	1568
 11278 09:A178: F4 13 0A     	pea	#<$a13
 11279 09:A17B: F4 01 00     	pea	#<$1
 11280 09:A17E: 22 xx xx xx  	jsl	~~k_calloc
 11281 09:A182: 85 1D        	sta	<L389+current_SuperInterseg212_1
 11282 09:A184: 86 1F        	stx	<L389+current_SuperInterseg212_1+2
 11283                        ;  if(current_SuperInterseg212 == NULL)
 11284                        	.line	1569
 11285                        ;    {
 11286 09:A186: A5 1D        	lda	<L389+current_SuperInterseg212_1
 11287 09:A188: 05 1F        	ora	<L389+current_SuperInterseg212_1+2
 11288 09:A18A: F0 03        	beq	L391
 11289 09:A18C: 82 19 00     	brl	L10265
 11290                        L391:
 11291                        	.line	1570
 11292                        ;      //printf("Error : Impossible to allocate me
                    mory for SubRecord SuperInterseg212.\n");
 11293                        ;      return(NULL);
 11294                        	.line	1572
 11295 09:A18F: A9 00 00     	lda	#$0
 11296 09:A192: AA           	tax
 11297 09:A193: A9 00 00     	lda	#$0
 11298                        L392:
 11299 09:A196: A8           	tay
 11300 09:A197: A5 22        	lda	<L388+2
 11301 09:A199: 85 3A        	sta	<L388+2+24
  Sat Jul 10 2021  1:15                                                Page 209


 11302 09:A19B: A5 21        	lda	<L388+1
 11303 09:A19D: 85 39        	sta	<L388+1+24
 11304 09:A19F: 2B           	pld
 11305 09:A1A0: 3B           	tsc
 11306 09:A1A1: 18           	clc
 11307 09:A1A2: 69 38 00     	adc	#L388+24
 11308 09:A1A5: 1B           	tcs
 11309 09:A1A6: 98           	tya
 11310 09:A1A7: 6B           	rtl
 11311                        ;    }
 11312                        	.line	1573
 11313                        ;
 11314                        ;  /* Nombre d'adresse-1 ou Saut de Page */
 11315                        ;  current_SuperInterseg212->Count = data[0];
 11316                        L10265:
 11317                        	.line	1576
 11318 09:A1A8: E2 20        	sep	#$20
 11319                        	longa	off
 11320 09:A1AA: A7 24        	lda	[<L388+data_0]
 11321 09:A1AC: A0 08 00     	ldy	#$8
 11322 09:A1AF: 97 1D        	sta	[<L389+current_SuperInterseg212_1],Y
 11323 09:A1B1: C2 20        	rep	#$20
 11324                        	longa	on
 11325                        ;
 11326                        ;  /** Saut de Page **/
 11327                        ;  if((current_SuperInterseg212->Count & 0x80) == 
                    0x80)
 11328                        	.line	1579
 11329                        ;    {
 11330 09:A1B3: A0 08 00     	ldy	#$8
 11331 09:A1B6: B7 1D        	lda	[<L389+current_SuperInterseg212_1],Y
 11332 09:A1B8: 29 80 00     	and	#<$80
 11333 09:A1BB: 85 01        	sta	<R0
 11334 09:A1BD: A5 01        	lda	<R0
 11335 09:A1BF: C9 80 00     	cmp	#<$80
 11336 09:A1C2: F0 03        	beq	L393
 11337 09:A1C4: 82 24 00     	brl	L10266
 11338                        L393:
 11339                        	.line	1580
 11340                        ;      /* On saute X pages */
 11341                        ;      *page_rtn = *page_rtn + (current_SuperInter
                    seg212->Count & 0x7F);
 11342                        	.line	1582
 11343 09:A1C7: E2 20        	sep	#$20
 11344                        	longa	off
 11345 09:A1C9: A0 08 00     	ldy	#$8
 11346 09:A1CC: B7 1D        	lda	[<L389+current_SuperInterseg212_1],Y
 11347 09:A1CE: 29 7F        	and	#<$7f
 11348 09:A1D0: 85 01        	sta	<R0
 11349 09:A1D2: C2 20        	rep	#$20
 11350                        	longa	on
 11351 09:A1D4: E2 20        	sep	#$20
 11352                        	longa	off
 11353 09:A1D6: 18           	clc
 11354 09:A1D7: A7 30        	lda	[<L388+page_rtn_0]
 11355 09:A1D9: 65 01        	adc	<R0
 11356 09:A1DB: C2 20        	rep	#$20
 11357                        	longa	on
  Sat Jul 10 2021  1:15                                                Page 210


 11358 09:A1DD: E2 20        	sep	#$20
 11359                        	longa	off
 11360 09:A1DF: 87 30        	sta	[<L388+page_rtn_0]
 11361 09:A1E1: C2 20        	rep	#$20
 11362                        	longa	on
 11363                        ;
 11364                        ;      /* Longueur du SubRecord */
 11365                        ;      *length_rtn = 1;
 11366                        	.line	1585
 11367 09:A1E3: A9 01 00     	lda	#$1
 11368 09:A1E6: 87 34        	sta	[<L388+length_rtn_0]
 11369                        ;    }
 11370                        	.line	1586
 11371                        ;  else
 11372 09:A1E8: 82 BF 03     	brl	L10267
 11373                        L10266:
 11374                        ;    {
 11375                        	.line	1588
 11376                        ;      /* Number of Bytes to be relocated = Toujou
                    rs à 3 */
 11377                        ;      current_SuperInterseg212->ByteCnt = 0x03;
 11378                        	.line	1590
 11379 09:A1EB: E2 20        	sep	#$20
 11380                        	longa	off
 11381 09:A1ED: A9 03        	lda	#$3
 11382 09:A1EF: A0 09 00     	ldy	#$9
 11383 09:A1F2: 97 1D        	sta	[<L389+current_SuperInterseg212_1],Y
 11384 09:A1F4: C2 20        	rep	#$20
 11385                        	longa	on
 11386                        ;
 11387                        ;      /* Opérations >> ou << = Toujours à 0  */
 11388                        ;      current_SuperInterseg212->BitShiftCnt = 0x0
                    0;
 11389                        	.line	1593
 11390 09:A1F6: E2 20        	sep	#$20
 11391                        	longa	off
 11392 09:A1F8: A9 00        	lda	#$0
 11393 09:A1FA: A0 0A 00     	ldy	#$a
 11394 09:A1FD: 97 1D        	sta	[<L389+current_SuperInterseg212_1],Y
 11395 09:A1FF: C2 20        	rep	#$20
 11396                        	longa	on
 11397                        ;
 11398                        ;      /* File Number */
 11399                        ;      current_SuperInterseg212->FileNum = FileNum
                    ;
 11400                        	.line	1596
 11401 09:A201: A5 28        	lda	<L388+FileNum_0
 11402 09:A203: 29 FF 00     	and	#$ff
 11403 09:A206: A0 0B 00     	ldy	#$b
 11404 09:A209: 97 1D        	sta	[<L389+current_SuperInterseg212_1],Y
 11405                        ;
 11406                        ;      /* Nombre d'adresse */
 11407                        ;      current_SuperInterseg212->nb_address = curr
                    ent_SuperInterseg212->Count + 1;
 11408                        	.line	1599
 11409 09:A20B: A0 08 00     	ldy	#$8
 11410 09:A20E: B7 1D        	lda	[<L389+current_SuperInterseg212_1],Y
 11411 09:A210: 29 FF 00     	and	#$ff
  Sat Jul 10 2021  1:15                                                Page 211


 11412 09:A213: 85 01        	sta	<R0
 11413 09:A215: A5 01        	lda	<R0
 11414 09:A217: 1A           	ina
 11415 09:A218: A0 0D 00     	ldy	#$d
 11416 09:A21B: 97 1D        	sta	[<L389+current_SuperInterseg212_1],Y
 11417                        ;
 11418                        ;      /** Copie les adresses **/
 11419                        ;      for(i=0; i<current_SuperInterseg212->nb_add
                    ress; i++)
 11420                        	.line	1602
 11421 09:A21D: 64 19        	stz	<L389+i_1
 11422 09:A21F: 82 61 03     	brl	L10271
 11423                        L10270:
 11424                        ;        {
 11425                        	.line	1603
 11426                        ;          /* Décode OffsetPath et OffsetReference
                     */
 11427                        ;          current_SuperInterseg212->OffsetPatch[i
                    ] = ((WORD)*page_rtn) << 8 | data[1+i];
 11428                        	.line	1605
 11429 09:A222: A0 00 00     	ldy	#$0
 11430 09:A225: A5 19        	lda	<L389+i_1
 11431 09:A227: 10 01        	bpl	L394
 11432 09:A229: 88           	dey
 11433                        L394:
 11434 09:A22A: 85 05        	sta	<R1
 11435 09:A22C: 84 07        	sty	<R1+2
 11436 09:A22E: D4 07        	pei	<R1+2
 11437 09:A230: D4 05        	pei	<R1
 11438 09:A232: A9 02 00     	lda	#$2
 11439                        	xref	~~~lasl
 11440 09:A235: 22 xx xx xx  	jsl	~~~lasl
 11441 09:A239: 85 01        	sta	<R0
 11442 09:A23B: 86 03        	stx	<R0+2
 11443 09:A23D: 18           	clc
 11444 09:A23E: A9 0F 00     	lda	#$f
 11445 09:A241: 65 1D        	adc	<L389+current_SuperInterseg212_1
 11446 09:A243: 85 09        	sta	<R2
 11447 09:A245: A9 00 00     	lda	#$0
 11448 09:A248: 65 1F        	adc	<L389+current_SuperInterseg212_1+2
 11449 09:A24A: 85 0B        	sta	<R2+2
 11450 09:A24C: 18           	clc
 11451 09:A24D: A5 09        	lda	<R2
 11452 09:A24F: 65 01        	adc	<R0
 11453 09:A251: 85 0D        	sta	<R3
 11454 09:A253: A5 0B        	lda	<R2+2
 11455 09:A255: 65 03        	adc	<R0+2
 11456 09:A257: 85 0F        	sta	<R3+2
 11457 09:A259: A5 19        	lda	<L389+i_1
 11458 09:A25B: 1A           	ina
 11459 09:A25C: 85 01        	sta	<R0
 11460 09:A25E: A4 01        	ldy	<R0
 11461 09:A260: B7 24        	lda	[<L388+data_0],Y
 11462 09:A262: 29 FF 00     	and	#$ff
 11463 09:A265: 85 09        	sta	<R2
 11464 09:A267: A7 30        	lda	[<L388+page_rtn_0]
 11465 09:A269: 29 FF 00     	and	#$ff
 11466 09:A26C: 85 15        	sta	<21
  Sat Jul 10 2021  1:15                                                Page 212


 11467 09:A26E: A5 15        	lda	<21
 11468 09:A270: EB           	xba
 11469 09:A271: 29 00 FF     	and	#$ff00
 11470 09:A274: 85 11        	sta	<17
 11471 09:A276: A5 11        	lda	<17
 11472 09:A278: 05 09        	ora	<R2
 11473 09:A27A: 85 15        	sta	<21
 11474 09:A27C: A0 00 00     	ldy	#$0
 11475 09:A27F: A5 15        	lda	<21
 11476 09:A281: 10 01        	bpl	L395
 11477 09:A283: 88           	dey
 11478                        L395:
 11479 09:A284: 85 09        	sta	<R2
 11480 09:A286: 84 0B        	sty	<R2+2
 11481 09:A288: A5 09        	lda	<R2
 11482 09:A28A: 87 0D        	sta	[<R3]
 11483 09:A28C: A5 0B        	lda	<R2+2
 11484 09:A28E: A0 02 00     	ldy	#$2
 11485 09:A291: 97 0D        	sta	[<R3],Y
 11486                        ;          
 11487                        ;          /* On vérifie qu'on reste dans les limi
                    te du LCONST */
 11488                        ;          if(current_SuperInterseg212->OffsetPatc
                    h[i] > (DWORD) lconst_length)
 11489                        	.line	1608
 11490                        ;            {
 11491 09:A293: A0 00 00     	ldy	#$0
 11492 09:A296: A5 2E        	lda	<L388+lconst_length_0
 11493 09:A298: 10 01        	bpl	L396
 11494 09:A29A: 88           	dey
 11495                        L396:
 11496 09:A29B: 85 01        	sta	<R0
 11497 09:A29D: 84 03        	sty	<R0+2
 11498 09:A29F: A0 00 00     	ldy	#$0
 11499 09:A2A2: A5 19        	lda	<L389+i_1
 11500 09:A2A4: 10 01        	bpl	L397
 11501 09:A2A6: 88           	dey
 11502                        L397:
 11503 09:A2A7: 85 09        	sta	<R2
 11504 09:A2A9: 84 0B        	sty	<R2+2
 11505 09:A2AB: D4 0B        	pei	<R2+2
 11506 09:A2AD: D4 09        	pei	<R2
 11507 09:A2AF: A9 02 00     	lda	#$2
 11508                        	xref	~~~lasl
 11509 09:A2B2: 22 xx xx xx  	jsl	~~~lasl
 11510 09:A2B6: 85 05        	sta	<R1
 11511 09:A2B8: 86 07        	stx	<R1+2
 11512 09:A2BA: 18           	clc
 11513 09:A2BB: A9 0F 00     	lda	#$f
 11514 09:A2BE: 65 1D        	adc	<L389+current_SuperInterseg212_1
 11515 09:A2C0: 85 0D        	sta	<R3
 11516 09:A2C2: A9 00 00     	lda	#$0
 11517 09:A2C5: 65 1F        	adc	<L389+current_SuperInterseg212_1+2
 11518 09:A2C7: 85 0F        	sta	<R3+2
 11519 09:A2C9: 18           	clc
 11520 09:A2CA: A5 0D        	lda	<R3
 11521 09:A2CC: 65 05        	adc	<R1
 11522 09:A2CE: 85 11        	sta	<17
  Sat Jul 10 2021  1:15                                                Page 213


 11523 09:A2D0: A5 0F        	lda	<R3+2
 11524 09:A2D2: 65 07        	adc	<R1+2
 11525 09:A2D4: 85 13        	sta	<17+2
 11526 09:A2D6: A5 01        	lda	<R0
 11527 09:A2D8: C7 11        	cmp	[<17]
 11528 09:A2DA: A5 03        	lda	<R0+2
 11529 09:A2DC: A0 02 00     	ldy	#$2
 11530 09:A2DF: F7 11        	sbc	[<17],Y
 11531 09:A2E1: 90 03        	bcc	L398
 11532 09:A2E3: 82 83 00     	brl	L10272
 11533                        L398:
 11534                        	.line	1609
 11535                        ;              //printf("  Error : Bad Reference A
                    ddress in SuperInterseg212 for Offset %04X in Segment #%02X.
                    \n",current_SuperInterseg212->OffsetPatch[i],current_segment
                    ->header.SegNum);
 11536                        ;              current_SuperInterseg212->OffsetRef
                    erence[i] = 0xFFFF;   /* Erreur */
 11537                        	.line	1611
 11538 09:A2E6: A0 00 00     	ldy	#$0
 11539 09:A2E9: A5 19        	lda	<L389+i_1
 11540 09:A2EB: 10 01        	bpl	L399
 11541 09:A2ED: 88           	dey
 11542                        L399:
 11543 09:A2EE: 85 05        	sta	<R1
 11544 09:A2F0: 84 07        	sty	<R1+2
 11545 09:A2F2: D4 07        	pei	<R1+2
 11546 09:A2F4: D4 05        	pei	<R1
 11547 09:A2F6: A9 02 00     	lda	#$2
 11548                        	xref	~~~lasl
 11549 09:A2F9: 22 xx xx xx  	jsl	~~~lasl
 11550 09:A2FD: 85 01        	sta	<R0
 11551 09:A2FF: 86 03        	stx	<R0+2
 11552 09:A301: 18           	clc
 11553 09:A302: A9 0F 04     	lda	#$40f
 11554 09:A305: 65 1D        	adc	<L389+current_SuperInterseg212_1
 11555 09:A307: 85 09        	sta	<R2
 11556 09:A309: A9 00 00     	lda	#$0
 11557 09:A30C: 65 1F        	adc	<L389+current_SuperInterseg212_1+2
 11558 09:A30E: 85 0B        	sta	<R2+2
 11559 09:A310: 18           	clc
 11560 09:A311: A5 09        	lda	<R2
 11561 09:A313: 65 01        	adc	<R0
 11562 09:A315: 85 0D        	sta	<R3
 11563 09:A317: A5 0B        	lda	<R2+2
 11564 09:A319: 65 03        	adc	<R0+2
 11565 09:A31B: 85 0F        	sta	<R3+2
 11566 09:A31D: A9 FF FF     	lda	#$ffff
 11567 09:A320: 87 0D        	sta	[<R3]
 11568 09:A322: A9 00 00     	lda	#$0
 11569 09:A325: A0 02 00     	ldy	#$2
 11570 09:A328: 97 0D        	sta	[<R3],Y
 11571                        ;              current_SuperInterseg212->SegNum[i]
                     = 0xFF;              /* Erreur */
 11572                        	.line	1612
 11573 09:A32A: A0 00 00     	ldy	#$0
 11574 09:A32D: A5 19        	lda	<L389+i_1
 11575 09:A32F: 10 01        	bpl	L400
  Sat Jul 10 2021  1:15                                                Page 214


 11576 09:A331: 88           	dey
 11577                        L400:
 11578 09:A332: 85 05        	sta	<R1
 11579 09:A334: 84 07        	sty	<R1+2
 11580 09:A336: D4 07        	pei	<R1+2
 11581 09:A338: D4 05        	pei	<R1
 11582 09:A33A: A9 01 00     	lda	#$1
 11583                        	xref	~~~lasl
 11584 09:A33D: 22 xx xx xx  	jsl	~~~lasl
 11585 09:A341: 85 01        	sta	<R0
 11586 09:A343: 86 03        	stx	<R0+2
 11587 09:A345: 18           	clc
 11588 09:A346: A9 0F 08     	lda	#$80f
 11589 09:A349: 65 1D        	adc	<L389+current_SuperInterseg212_1
 11590 09:A34B: 85 09        	sta	<R2
 11591 09:A34D: A9 00 00     	lda	#$0
 11592 09:A350: 65 1F        	adc	<L389+current_SuperInterseg212_1+2
 11593 09:A352: 85 0B        	sta	<R2+2
 11594 09:A354: 18           	clc
 11595 09:A355: A5 09        	lda	<R2
 11596 09:A357: 65 01        	adc	<R0
 11597 09:A359: 85 0D        	sta	<R3
 11598 09:A35B: A5 0B        	lda	<R2+2
 11599 09:A35D: 65 03        	adc	<R0+2
 11600 09:A35F: 85 0F        	sta	<R3+2
 11601 09:A361: A9 FF 00     	lda	#$ff
 11602 09:A364: 87 0D        	sta	[<R3]
 11603                        ;            }
 11604                        	.line	1613
 11605                        ;          else
 11606 09:A366: 82 45 01     	brl	L10273
 11607                        L10272:
 11608                        ;            {
 11609                        	.line	1615
 11610                        ;              memcpy(&one_word,&lconst[current_Su
                    perInterseg212->OffsetPatch[i]],sizeof(WORD));
 11611                        	.line	1616
 11612 09:A369: F4 02 00     	pea	#<$2
 11613 09:A36C: A0 00 00     	ldy	#$0
 11614 09:A36F: A5 19        	lda	<L389+i_1
 11615 09:A371: 10 01        	bpl	L401
 11616 09:A373: 88           	dey
 11617                        L401:
 11618 09:A374: 85 05        	sta	<R1
 11619 09:A376: 84 07        	sty	<R1+2
 11620 09:A378: D4 07        	pei	<R1+2
 11621 09:A37A: D4 05        	pei	<R1
 11622 09:A37C: A9 02 00     	lda	#$2
 11623                        	xref	~~~lasl
 11624 09:A37F: 22 xx xx xx  	jsl	~~~lasl
 11625 09:A383: 85 01        	sta	<R0
 11626 09:A385: 86 03        	stx	<R0+2
 11627 09:A387: 18           	clc
 11628 09:A388: A9 0F 00     	lda	#$f
 11629 09:A38B: 65 1D        	adc	<L389+current_SuperInterseg212_1
 11630 09:A38D: 85 09        	sta	<R2
 11631 09:A38F: A9 00 00     	lda	#$0
 11632 09:A392: 65 1F        	adc	<L389+current_SuperInterseg212_1+2
  Sat Jul 10 2021  1:15                                                Page 215


 11633 09:A394: 85 0B        	sta	<R2+2
 11634 09:A396: 18           	clc
 11635 09:A397: A5 09        	lda	<R2
 11636 09:A399: 65 01        	adc	<R0
 11637 09:A39B: 85 0D        	sta	<R3
 11638 09:A39D: A5 0B        	lda	<R2+2
 11639 09:A39F: 65 03        	adc	<R0+2
 11640 09:A3A1: 85 0F        	sta	<R3+2
 11641 09:A3A3: 18           	clc
 11642 09:A3A4: A5 2A        	lda	<L388+lconst_0
 11643 09:A3A6: 67 0D        	adc	[<R3]
 11644 09:A3A8: 85 01        	sta	<R0
 11645 09:A3AA: A5 2C        	lda	<L388+lconst_0+2
 11646 09:A3AC: A0 02 00     	ldy	#$2
 11647 09:A3AF: 77 0D        	adc	[<R3],Y
 11648 09:A3B1: 85 03        	sta	<R0+2
 11649 09:A3B3: D4 03        	pei	<R0+2
 11650 09:A3B5: D4 01        	pei	<R0
 11651 09:A3B7: F4 00 00     	pea	#0
 11652 09:A3BA: 18           	clc
 11653 09:A3BB: 7B           	tdc
 11654 09:A3BC: 69 1B 00     	adc	#<L389+one_word_1
 11655 09:A3BF: 48           	pha
 11656 09:A3C0: 22 xx xx xx  	jsl	~~memcpy
 11657                        ;              current_SuperInterseg212->OffsetRef
                    erence[i] = (DWORD) one_word;
 11658                        	.line	1617
 11659 09:A3C4: A0 00 00     	ldy	#$0
 11660 09:A3C7: A5 19        	lda	<L389+i_1
 11661 09:A3C9: 10 01        	bpl	L402
 11662 09:A3CB: 88           	dey
 11663                        L402:
 11664 09:A3CC: 85 05        	sta	<R1
 11665 09:A3CE: 84 07        	sty	<R1+2
 11666 09:A3D0: D4 07        	pei	<R1+2
 11667 09:A3D2: D4 05        	pei	<R1
 11668 09:A3D4: A9 02 00     	lda	#$2
 11669                        	xref	~~~lasl
 11670 09:A3D7: 22 xx xx xx  	jsl	~~~lasl
 11671 09:A3DB: 85 01        	sta	<R0
 11672 09:A3DD: 86 03        	stx	<R0+2
 11673 09:A3DF: 18           	clc
 11674 09:A3E0: A9 0F 04     	lda	#$40f
 11675 09:A3E3: 65 1D        	adc	<L389+current_SuperInterseg212_1
 11676 09:A3E5: 85 09        	sta	<R2
 11677 09:A3E7: A9 00 00     	lda	#$0
 11678 09:A3EA: 65 1F        	adc	<L389+current_SuperInterseg212_1+2
 11679 09:A3EC: 85 0B        	sta	<R2+2
 11680 09:A3EE: 18           	clc
 11681 09:A3EF: A5 09        	lda	<R2
 11682 09:A3F1: 65 01        	adc	<R0
 11683 09:A3F3: 85 0D        	sta	<R3
 11684 09:A3F5: A5 0B        	lda	<R2+2
 11685 09:A3F7: 65 03        	adc	<R0+2
 11686 09:A3F9: 85 0F        	sta	<R3+2
 11687 09:A3FB: A0 00 00     	ldy	#$0
 11688 09:A3FE: A5 1B        	lda	<L389+one_word_1
 11689 09:A400: 10 01        	bpl	L403
  Sat Jul 10 2021  1:15                                                Page 216


 11690 09:A402: 88           	dey
 11691                        L403:
 11692 09:A403: 85 01        	sta	<R0
 11693 09:A405: 84 03        	sty	<R0+2
 11694 09:A407: A5 01        	lda	<R0
 11695 09:A409: 87 0D        	sta	[<R3]
 11696 09:A40B: A5 03        	lda	<R0+2
 11697 09:A40D: A0 02 00     	ldy	#$2
 11698 09:A410: 97 0D        	sta	[<R3],Y
 11699                        ;              current_SuperInterseg212->SegNum[i]
                     = (WORD) lconst[current_SuperInterseg212->OffsetPatch[i]+2]
                    ;
 11700                        	.line	1618
 11701 09:A412: A0 00 00     	ldy	#$0
 11702 09:A415: A5 19        	lda	<L389+i_1
 11703 09:A417: 10 01        	bpl	L404
 11704 09:A419: 88           	dey
 11705                        L404:
 11706 09:A41A: 85 05        	sta	<R1
 11707 09:A41C: 84 07        	sty	<R1+2
 11708 09:A41E: D4 07        	pei	<R1+2
 11709 09:A420: D4 05        	pei	<R1
 11710 09:A422: A9 01 00     	lda	#$1
 11711                        	xref	~~~lasl
 11712 09:A425: 22 xx xx xx  	jsl	~~~lasl
 11713 09:A429: 85 01        	sta	<R0
 11714 09:A42B: 86 03        	stx	<R0+2
 11715 09:A42D: 18           	clc
 11716 09:A42E: A9 0F 08     	lda	#$80f
 11717 09:A431: 65 1D        	adc	<L389+current_SuperInterseg212_1
 11718 09:A433: 85 09        	sta	<R2
 11719 09:A435: A9 00 00     	lda	#$0
 11720 09:A438: 65 1F        	adc	<L389+current_SuperInterseg212_1+2
 11721 09:A43A: 85 0B        	sta	<R2+2
 11722 09:A43C: 18           	clc
 11723 09:A43D: A5 09        	lda	<R2
 11724 09:A43F: 65 01        	adc	<R0
 11725 09:A441: 85 0D        	sta	<R3
 11726 09:A443: A5 0B        	lda	<R2+2
 11727 09:A445: 65 03        	adc	<R0+2
 11728 09:A447: 85 0F        	sta	<R3+2
 11729 09:A449: A0 00 00     	ldy	#$0
 11730 09:A44C: A5 19        	lda	<L389+i_1
 11731 09:A44E: 10 01        	bpl	L405
 11732 09:A450: 88           	dey
 11733                        L405:
 11734 09:A451: 85 09        	sta	<R2
 11735 09:A453: 84 0B        	sty	<R2+2
 11736 09:A455: D4 0B        	pei	<R2+2
 11737 09:A457: D4 09        	pei	<R2
 11738 09:A459: A9 02 00     	lda	#$2
 11739                        	xref	~~~lasl
 11740 09:A45C: 22 xx xx xx  	jsl	~~~lasl
 11741 09:A460: 85 01        	sta	<R0
 11742 09:A462: 86 03        	stx	<R0+2
 11743 09:A464: 18           	clc
 11744 09:A465: A9 0F 00     	lda	#$f
 11745 09:A468: 65 1D        	adc	<L389+current_SuperInterseg212_1
  Sat Jul 10 2021  1:15                                                Page 217


 11746 09:A46A: 85 11        	sta	<17
 11747 09:A46C: A9 00 00     	lda	#$0
 11748 09:A46F: 65 1F        	adc	<L389+current_SuperInterseg212_1+2
 11749 09:A471: 85 13        	sta	<17+2
 11750 09:A473: 18           	clc
 11751 09:A474: A5 11        	lda	<17
 11752 09:A476: 65 01        	adc	<R0
 11753 09:A478: 85 15        	sta	<21
 11754 09:A47A: A5 13        	lda	<17+2
 11755 09:A47C: 65 03        	adc	<R0+2
 11756 09:A47E: 85 17        	sta	<21+2
 11757 09:A480: A7 15        	lda	[<21]
 11758 09:A482: 85 01        	sta	<R0
 11759 09:A484: A0 02 00     	ldy	#$2
 11760 09:A487: B7 15        	lda	[<21],Y
 11761 09:A489: 85 03        	sta	<R0+2
 11762 09:A48B: 18           	clc
 11763 09:A48C: A9 02 00     	lda	#$2
 11764 09:A48F: 65 2A        	adc	<L388+lconst_0
 11765 09:A491: 85 11        	sta	<17
 11766 09:A493: A9 00 00     	lda	#$0
 11767 09:A496: 65 2C        	adc	<L388+lconst_0+2
 11768 09:A498: 85 13        	sta	<17+2
 11769 09:A49A: 18           	clc
 11770 09:A49B: A5 11        	lda	<17
 11771 09:A49D: 65 01        	adc	<R0
 11772 09:A49F: 85 15        	sta	<21
 11773 09:A4A1: A5 13        	lda	<17+2
 11774 09:A4A3: 65 03        	adc	<R0+2
 11775 09:A4A5: 85 17        	sta	<21+2
 11776 09:A4A7: A7 15        	lda	[<21]
 11777 09:A4A9: 29 FF 00     	and	#$ff
 11778 09:A4AC: 87 0D        	sta	[<R3]
 11779                        ;            }
 11780                        	.line	1619
 11781                        L10273:
 11782                        ;
 11783                        ;          /* Conserve ce INTERSEG */
 11784                        ;          AddInterseg(current_SuperInterseg212->B
                    yteCnt,current_SuperInterseg212->BitShiftCnt,current_SuperIn
                    terseg212->OffsetPatch[i],current_SuperInterseg212->OffsetRe
                    ference[i],current_SuperInterseg212->FileNum,current_SuperIn
                    terseg212->SegNum[i],RECORD_SUPER_INTERSEG212);
 11785                        	.line	1622
 11786 09:A4AE: F4 08 00     	pea	#<$8
 11787 09:A4B1: A0 00 00     	ldy	#$0
 11788 09:A4B4: A5 19        	lda	<L389+i_1
 11789 09:A4B6: 10 01        	bpl	L406
 11790 09:A4B8: 88           	dey
 11791                        L406:
 11792 09:A4B9: 85 05        	sta	<R1
 11793 09:A4BB: 84 07        	sty	<R1+2
 11794 09:A4BD: D4 07        	pei	<R1+2
 11795 09:A4BF: D4 05        	pei	<R1
 11796 09:A4C1: A9 01 00     	lda	#$1
 11797                        	xref	~~~lasl
 11798 09:A4C4: 22 xx xx xx  	jsl	~~~lasl
 11799 09:A4C8: 85 01        	sta	<R0
  Sat Jul 10 2021  1:15                                                Page 218


 11800 09:A4CA: 86 03        	stx	<R0+2
 11801 09:A4CC: 18           	clc
 11802 09:A4CD: A9 0F 08     	lda	#$80f
 11803 09:A4D0: 65 1D        	adc	<L389+current_SuperInterseg212_1
 11804 09:A4D2: 85 09        	sta	<R2
 11805 09:A4D4: A9 00 00     	lda	#$0
 11806 09:A4D7: 65 1F        	adc	<L389+current_SuperInterseg212_1+2
 11807 09:A4D9: 85 0B        	sta	<R2+2
 11808 09:A4DB: 18           	clc
 11809 09:A4DC: A5 09        	lda	<R2
 11810 09:A4DE: 65 01        	adc	<R0
 11811 09:A4E0: 85 0D        	sta	<R3
 11812 09:A4E2: A5 0B        	lda	<R2+2
 11813 09:A4E4: 65 03        	adc	<R0+2
 11814 09:A4E6: 85 0F        	sta	<R3+2
 11815 09:A4E8: A7 0D        	lda	[<R3]
 11816 09:A4EA: 48           	pha
 11817 09:A4EB: A0 0B 00     	ldy	#$b
 11818 09:A4EE: B7 1D        	lda	[<L389+current_SuperInterseg212_1],Y
 11819 09:A4F0: 48           	pha
 11820 09:A4F1: A0 00 00     	ldy	#$0
 11821 09:A4F4: A5 19        	lda	<L389+i_1
 11822 09:A4F6: 10 01        	bpl	L407
 11823 09:A4F8: 88           	dey
 11824                        L407:
 11825 09:A4F9: 85 09        	sta	<R2
 11826 09:A4FB: 84 0B        	sty	<R2+2
 11827 09:A4FD: D4 0B        	pei	<R2+2
 11828 09:A4FF: D4 09        	pei	<R2
 11829 09:A501: A9 02 00     	lda	#$2
 11830                        	xref	~~~lasl
 11831 09:A504: 22 xx xx xx  	jsl	~~~lasl
 11832 09:A508: 85 01        	sta	<R0
 11833 09:A50A: 86 03        	stx	<R0+2
 11834 09:A50C: 18           	clc
 11835 09:A50D: A9 0F 04     	lda	#$40f
 11836 09:A510: 65 1D        	adc	<L389+current_SuperInterseg212_1
 11837 09:A512: 85 0D        	sta	<R3
 11838 09:A514: A9 00 00     	lda	#$0
 11839 09:A517: 65 1F        	adc	<L389+current_SuperInterseg212_1+2
 11840 09:A519: 85 0F        	sta	<R3+2
 11841 09:A51B: 18           	clc
 11842 09:A51C: A5 0D        	lda	<R3
 11843 09:A51E: 65 01        	adc	<R0
 11844 09:A520: 85 11        	sta	<17
 11845 09:A522: A5 0F        	lda	<R3+2
 11846 09:A524: 65 03        	adc	<R0+2
 11847 09:A526: 85 13        	sta	<17+2
 11848 09:A528: A0 02 00     	ldy	#$2
 11849 09:A52B: B7 11        	lda	[<17],Y
 11850 09:A52D: 48           	pha
 11851 09:A52E: A7 11        	lda	[<17]
 11852 09:A530: 48           	pha
 11853 09:A531: A0 00 00     	ldy	#$0
 11854 09:A534: A5 19        	lda	<L389+i_1
 11855 09:A536: 10 01        	bpl	L408
 11856 09:A538: 88           	dey
 11857                        L408:
  Sat Jul 10 2021  1:15                                                Page 219


 11858 09:A539: 85 0D        	sta	<R3
 11859 09:A53B: 84 0F        	sty	<R3+2
 11860 09:A53D: D4 0F        	pei	<R3+2
 11861 09:A53F: D4 0D        	pei	<R3
 11862 09:A541: A9 02 00     	lda	#$2
 11863                        	xref	~~~lasl
 11864 09:A544: 22 xx xx xx  	jsl	~~~lasl
 11865 09:A548: 85 01        	sta	<R0
 11866 09:A54A: 86 03        	stx	<R0+2
 11867 09:A54C: 18           	clc
 11868 09:A54D: A9 0F 00     	lda	#$f
 11869 09:A550: 65 1D        	adc	<L389+current_SuperInterseg212_1
 11870 09:A552: 85 11        	sta	<17
 11871 09:A554: A9 00 00     	lda	#$0
 11872 09:A557: 65 1F        	adc	<L389+current_SuperInterseg212_1+2
 11873 09:A559: 85 13        	sta	<17+2
 11874 09:A55B: 18           	clc
 11875 09:A55C: A5 11        	lda	<17
 11876 09:A55E: 65 01        	adc	<R0
 11877 09:A560: 85 15        	sta	<21
 11878 09:A562: A5 13        	lda	<17+2
 11879 09:A564: 65 03        	adc	<R0+2
 11880 09:A566: 85 17        	sta	<21+2
 11881 09:A568: A0 02 00     	ldy	#$2
 11882 09:A56B: B7 15        	lda	[<21],Y
 11883 09:A56D: 48           	pha
 11884 09:A56E: A7 15        	lda	[<21]
 11885 09:A570: 48           	pha
 11886 09:A571: A0 0A 00     	ldy	#$a
 11887 09:A574: B7 1D        	lda	[<L389+current_SuperInterseg212_1],Y
 11888 09:A576: 48           	pha
 11889 09:A577: A0 09 00     	ldy	#$9
 11890 09:A57A: B7 1D        	lda	[<L389+current_SuperInterseg212_1],Y
 11891 09:A57C: 48           	pha
 11892 09:A57D: 22 A9 AC 09  	jsl	~~AddInterseg
 11893                        ;        }
 11894                        	.line	1623
 11895                        L10268:
 11896 09:A581: E6 19        	inc	<L389+i_1
 11897                        L10271:
 11898 09:A583: 38           	sec
 11899 09:A584: A5 19        	lda	<L389+i_1
 11900 09:A586: A0 0D 00     	ldy	#$d
 11901 09:A589: F7 1D        	sbc	[<L389+current_SuperInterseg212_1],Y
 11902 09:A58B: 70 03        	bvs	L409
 11903 09:A58D: 49 00 80     	eor	#$8000
 11904                        L409:
 11905 09:A590: 30 03        	bmi	L410
 11906 09:A592: 82 8D FC     	brl	L10270
 11907                        L410:
 11908                        L10269:
 11909                        ;
 11910                        ;      /* Page suivante */
 11911                        ;      *page_rtn = *page_rtn + 1;
 11912                        	.line	1626
 11913 09:A595: E2 20        	sep	#$20
 11914                        	longa	off
 11915 09:A597: A7 30        	lda	[<L388+page_rtn_0]
  Sat Jul 10 2021  1:15                                                Page 220


 11916 09:A599: 1A           	ina
 11917 09:A59A: C2 20        	rep	#$20
 11918                        	longa	on
 11919 09:A59C: E2 20        	sep	#$20
 11920                        	longa	off
 11921 09:A59E: 87 30        	sta	[<L388+page_rtn_0]
 11922 09:A5A0: C2 20        	rep	#$20
 11923                        	longa	on
 11924                        ;
 11925                        ;      /* Longueur du SubRecord */
 11926                        ;      *length_rtn = 1 + current_SuperInterseg212-
                    >nb_address*sizeof(BYTE);
 11927                        	.line	1629
 11928 09:A5A2: A0 0D 00     	ldy	#$d
 11929 09:A5A5: B7 1D        	lda	[<L389+current_SuperInterseg212_1],Y
 11930 09:A5A7: 1A           	ina
 11931 09:A5A8: 87 34        	sta	[<L388+length_rtn_0]
 11932                        ;    }
 11933                        	.line	1630
 11934                        L10267:
 11935                        ;
 11936                        ;  /* Renvoie la structure */
 11937                        ;  return(current_SuperInterseg212);
 11938                        	.line	1633
 11939 09:A5AA: A6 1F        	ldx	<L389+current_SuperInterseg212_1+2
 11940 09:A5AC: A5 1D        	lda	<L389+current_SuperInterseg212_1
 11941 09:A5AE: 82 E5 FB     	brl	L392
 11942                        ;}
 11943                        	.line	1634
 11944                        	.endblock	1634
 11945             00000020   L388	equ	32
 11946             00000019   L389	equ	25
 11947 09:A5B1:              	ends
 11948                        	efunc
 11949                        	.endfunc	1634,25,32
 11950                        	.line	1634
 11951                        ;
 11952                        ;
 11953                        ;/************************************************
                    ****************************/
 11954                        ;/*  DecodeSuperInterseg1324() :  Décodage d'un Su
                    bRecord SuperInterseg1324. */
 11955                        ;/************************************************
                    ****************************/
 11956                        ;static struct subrecord_SuperInterseg1324 *Decode
                    SuperInterseg1324(unsigned char *data, BYTE SegNum, unsigned
                     char *lconst, int lconst_length, BYTE *page_rtn, int *lengt
                    h_rtn, struct omf_segment *current_segment)
 11957                        ;{
 11958                        	.line	1640
 11959                        	.line	1641
 11960                        	LOADER
 11961                        	func
 11962                        	.function	1641
 11963                        ~~DecodeSuperInterseg1324:
 11964                        	longa	on
 11965                        	longi	on
 11966 09:A5B1: 3B           	tsc
  Sat Jul 10 2021  1:15                                                Page 221


 11967 09:A5B2: 38           	sec
 11968 09:A5B3: E9 20 00     	sbc	#L411
 11969 09:A5B6: 1B           	tcs
 11970 09:A5B7: 0B           	phd
 11971 09:A5B8: 5B           	tcd
 11972             00000004   data_0	set	4
 11973             00000008   SegNum_0	set	8
 11974             0000000A   lconst_0	set	10
 11975             0000000E   lconst_length_0	set	14
 11976             00000010   page_rtn_0	set	16
 11977             00000014   length_rtn_0	set	20
 11978             00000018   current_segment_0	set	24
 11979                        	.block	1641
 11980                        ;  int i;
 11981                        ;  WORD one_word;
 11982                        ;  struct subrecord_SuperInterseg1324 *current_Sup
                    erInterseg1324;
 11983                        ;
 11984                        ;  /* Allocation mémoire */
 11985                        ;  current_SuperInterseg1324 = (struct subrecord_S
                    uperInterseg1324 *) k_calloc(1,sizeof(struct subrecord_Super
                    Interseg1324));
 11986             00000000   i_1	set	0
 11987             00000002   one_word_1	set	2
 11988             00000004   current_SuperInterseg1324_1	set	4
 11989                        	.sym	i,0,5,1,16
 11990                        	.sym	one_word,2,5,1,16
 11991                        	.sym	current_SuperInterseg1324,4,138,1,32,93
 11992                        	.sym	data,4,142,6,32
 11993                        	.sym	SegNum,8,14,6,8
 11994                        	.sym	lconst,10,142,6,32
 11995                        	.sym	lconst_length,14,5,6,16
 11996                        	.sym	page_rtn,16,142,6,32
 11997                        	.sym	length_rtn,20,133,6,32
 11998                        	.sym	current_segment,24,138,6,32,86
 11999                        	.line	1647
 12000 09:A5B9: F4 14 08     	pea	#<$814
 12001 09:A5BC: F4 01 00     	pea	#<$1
 12002 09:A5BF: 22 xx xx xx  	jsl	~~k_calloc
 12003 09:A5C3: 85 1D        	sta	<L412+current_SuperInterseg1324_1
 12004 09:A5C5: 86 1F        	stx	<L412+current_SuperInterseg1324_1+2
 12005                        ;  if(current_SuperInterseg1324 == NULL)
 12006                        	.line	1648
 12007                        ;    {
 12008 09:A5C7: A5 1D        	lda	<L412+current_SuperInterseg1324_1
 12009 09:A5C9: 05 1F        	ora	<L412+current_SuperInterseg1324_1+2
 12010 09:A5CB: F0 03        	beq	L414
 12011 09:A5CD: 82 19 00     	brl	L10274
 12012                        L414:
 12013                        	.line	1649
 12014                        ;      //printf("Error : Impossible to allocate me
                    mory for SubRecord SuperInterseg1324.\n");
 12015                        ;      return(NULL);
 12016                        	.line	1651
 12017 09:A5D0: A9 00 00     	lda	#$0
 12018 09:A5D3: AA           	tax
 12019 09:A5D4: A9 00 00     	lda	#$0
 12020                        L415:
  Sat Jul 10 2021  1:15                                                Page 222


 12021 09:A5D7: A8           	tay
 12022 09:A5D8: A5 22        	lda	<L411+2
 12023 09:A5DA: 85 3A        	sta	<L411+2+24
 12024 09:A5DC: A5 21        	lda	<L411+1
 12025 09:A5DE: 85 39        	sta	<L411+1+24
 12026 09:A5E0: 2B           	pld
 12027 09:A5E1: 3B           	tsc
 12028 09:A5E2: 18           	clc
 12029 09:A5E3: 69 38 00     	adc	#L411+24
 12030 09:A5E6: 1B           	tcs
 12031 09:A5E7: 98           	tya
 12032 09:A5E8: 6B           	rtl
 12033                        ;    }
 12034                        	.line	1652
 12035                        ;
 12036                        ;  /* Nombre d'adresse-1 ou Saut de Page */
 12037                        ;  current_SuperInterseg1324->Count = data[0];
 12038                        L10274:
 12039                        	.line	1655
 12040 09:A5E9: E2 20        	sep	#$20
 12041                        	longa	off
 12042 09:A5EB: A7 24        	lda	[<L411+data_0]
 12043 09:A5ED: A0 08 00     	ldy	#$8
 12044 09:A5F0: 97 1D        	sta	[<L412+current_SuperInterseg1324_1],Y
 12045 09:A5F2: C2 20        	rep	#$20
 12046                        	longa	on
 12047                        ;
 12048                        ;  /** Saut de Page **/
 12049                        ;  if((current_SuperInterseg1324->Count & 0x80) ==
                     0x80)
 12050                        	.line	1658
 12051                        ;    {
 12052 09:A5F4: A0 08 00     	ldy	#$8
 12053 09:A5F7: B7 1D        	lda	[<L412+current_SuperInterseg1324_1],Y
 12054 09:A5F9: 29 80 00     	and	#<$80
 12055 09:A5FC: 85 01        	sta	<R0
 12056 09:A5FE: A5 01        	lda	<R0
 12057 09:A600: C9 80 00     	cmp	#<$80
 12058 09:A603: F0 03        	beq	L416
 12059 09:A605: 82 24 00     	brl	L10275
 12060                        L416:
 12061                        	.line	1659
 12062                        ;      /* On saute X pages */
 12063                        ;      *page_rtn = *page_rtn + (current_SuperInter
                    seg1324->Count & 0x7F);
 12064                        	.line	1661
 12065 09:A608: E2 20        	sep	#$20
 12066                        	longa	off
 12067 09:A60A: A0 08 00     	ldy	#$8
 12068 09:A60D: B7 1D        	lda	[<L412+current_SuperInterseg1324_1],Y
 12069 09:A60F: 29 7F        	and	#<$7f
 12070 09:A611: 85 01        	sta	<R0
 12071 09:A613: C2 20        	rep	#$20
 12072                        	longa	on
 12073 09:A615: E2 20        	sep	#$20
 12074                        	longa	off
 12075 09:A617: 18           	clc
 12076 09:A618: A7 30        	lda	[<L411+page_rtn_0]
  Sat Jul 10 2021  1:15                                                Page 223


 12077 09:A61A: 65 01        	adc	<R0
 12078 09:A61C: C2 20        	rep	#$20
 12079                        	longa	on
 12080 09:A61E: E2 20        	sep	#$20
 12081                        	longa	off
 12082 09:A620: 87 30        	sta	[<L411+page_rtn_0]
 12083 09:A622: C2 20        	rep	#$20
 12084                        	longa	on
 12085                        ;
 12086                        ;      /* Longueur du SubRecord */
 12087                        ;      *length_rtn = 1;
 12088                        	.line	1664
 12089 09:A624: A9 01 00     	lda	#$1
 12090 09:A627: 87 34        	sta	[<L411+length_rtn_0]
 12091                        ;    }
 12092                        	.line	1665
 12093                        ;  else
 12094 09:A629: 82 BF 02     	brl	L10276
 12095                        L10275:
 12096                        ;    {
 12097                        	.line	1667
 12098                        ;      /* Number of Bytes to be relocated = Toujou
                    rs à 2 */
 12099                        ;      current_SuperInterseg1324->ByteCnt = 0x02;
 12100                        	.line	1669
 12101 09:A62C: E2 20        	sep	#$20
 12102                        	longa	off
 12103 09:A62E: A9 02        	lda	#$2
 12104 09:A630: A0 09 00     	ldy	#$9
 12105 09:A633: 97 1D        	sta	[<L412+current_SuperInterseg1324_1],Y
 12106 09:A635: C2 20        	rep	#$20
 12107                        	longa	on
 12108                        ;
 12109                        ;      /* Opérations >> ou << = Toujours à 0  */
 12110                        ;      current_SuperInterseg1324->BitShiftCnt = 0x
                    00;
 12111                        	.line	1672
 12112 09:A637: E2 20        	sep	#$20
 12113                        	longa	off
 12114 09:A639: A9 00        	lda	#$0
 12115 09:A63B: A0 0A 00     	ldy	#$a
 12116 09:A63E: 97 1D        	sta	[<L412+current_SuperInterseg1324_1],Y
 12117 09:A640: C2 20        	rep	#$20
 12118                        	longa	on
 12119                        ;
 12120                        ;      /* Segment Number */
 12121                        ;      current_SuperInterseg1324->SegNum = SegNum;
 12122                        	.line	1675
 12123 09:A642: E2 20        	sep	#$20
 12124                        	longa	off
 12125 09:A644: A5 28        	lda	<L411+SegNum_0
 12126 09:A646: A0 0B 00     	ldy	#$b
 12127 09:A649: 97 1D        	sta	[<L412+current_SuperInterseg1324_1],Y
 12128 09:A64B: C2 20        	rep	#$20
 12129                        	longa	on
 12130                        ;
 12131                        ;      /* File Number toujours à 1 */
 12132                        ;      current_SuperInterseg1324->FileNum = 1;
  Sat Jul 10 2021  1:15                                                Page 224


 12133                        	.line	1678
 12134 09:A64D: A9 01 00     	lda	#$1
 12135 09:A650: A0 0C 00     	ldy	#$c
 12136 09:A653: 97 1D        	sta	[<L412+current_SuperInterseg1324_1],Y
 12137                        ;
 12138                        ;      /* Nombre d'adresse */
 12139                        ;      current_SuperInterseg1324->nb_address = cur
                    rent_SuperInterseg1324->Count + 1;
 12140                        	.line	1681
 12141 09:A655: A0 08 00     	ldy	#$8
 12142 09:A658: B7 1D        	lda	[<L412+current_SuperInterseg1324_1],Y
 12143 09:A65A: 29 FF 00     	and	#$ff
 12144 09:A65D: 85 01        	sta	<R0
 12145 09:A65F: A5 01        	lda	<R0
 12146 09:A661: 1A           	ina
 12147 09:A662: A0 0E 00     	ldy	#$e
 12148 09:A665: 97 1D        	sta	[<L412+current_SuperInterseg1324_1],Y
 12149                        ;
 12150                        ;      /** Copie les adresses **/
 12151                        ;      for(i=0; i<current_SuperInterseg1324->nb_ad
                    dress; i++)
 12152                        	.line	1684
 12153 09:A667: 64 19        	stz	<L412+i_1
 12154 09:A669: 82 58 02     	brl	L10280
 12155                        L10279:
 12156                        ;        {
 12157                        	.line	1685
 12158                        ;          /* Décode OffsetPath et OffsetReference
                     */
 12159                        ;          current_SuperInterseg1324->OffsetPatch[
                    i] = ((WORD)*page_rtn) << 8 | data[1+i];
 12160                        	.line	1687
 12161 09:A66C: A0 00 00     	ldy	#$0
 12162 09:A66F: A5 19        	lda	<L412+i_1
 12163 09:A671: 10 01        	bpl	L417
 12164 09:A673: 88           	dey
 12165                        L417:
 12166 09:A674: 85 05        	sta	<R1
 12167 09:A676: 84 07        	sty	<R1+2
 12168 09:A678: D4 07        	pei	<R1+2
 12169 09:A67A: D4 05        	pei	<R1
 12170 09:A67C: A9 02 00     	lda	#$2
 12171                        	xref	~~~lasl
 12172 09:A67F: 22 xx xx xx  	jsl	~~~lasl
 12173 09:A683: 85 01        	sta	<R0
 12174 09:A685: 86 03        	stx	<R0+2
 12175 09:A687: 18           	clc
 12176 09:A688: A9 10 00     	lda	#$10
 12177 09:A68B: 65 1D        	adc	<L412+current_SuperInterseg1324_1
 12178 09:A68D: 85 09        	sta	<R2
 12179 09:A68F: A9 00 00     	lda	#$0
 12180 09:A692: 65 1F        	adc	<L412+current_SuperInterseg1324_1+2
 12181 09:A694: 85 0B        	sta	<R2+2
 12182 09:A696: 18           	clc
 12183 09:A697: A5 09        	lda	<R2
 12184 09:A699: 65 01        	adc	<R0
 12185 09:A69B: 85 0D        	sta	<R3
 12186 09:A69D: A5 0B        	lda	<R2+2
  Sat Jul 10 2021  1:15                                                Page 225


 12187 09:A69F: 65 03        	adc	<R0+2
 12188 09:A6A1: 85 0F        	sta	<R3+2
 12189 09:A6A3: A5 19        	lda	<L412+i_1
 12190 09:A6A5: 1A           	ina
 12191 09:A6A6: 85 01        	sta	<R0
 12192 09:A6A8: A4 01        	ldy	<R0
 12193 09:A6AA: B7 24        	lda	[<L411+data_0],Y
 12194 09:A6AC: 29 FF 00     	and	#$ff
 12195 09:A6AF: 85 09        	sta	<R2
 12196 09:A6B1: A7 30        	lda	[<L411+page_rtn_0]
 12197 09:A6B3: 29 FF 00     	and	#$ff
 12198 09:A6B6: 85 15        	sta	<21
 12199 09:A6B8: A5 15        	lda	<21
 12200 09:A6BA: EB           	xba
 12201 09:A6BB: 29 00 FF     	and	#$ff00
 12202 09:A6BE: 85 11        	sta	<17
 12203 09:A6C0: A5 11        	lda	<17
 12204 09:A6C2: 05 09        	ora	<R2
 12205 09:A6C4: 85 15        	sta	<21
 12206 09:A6C6: A0 00 00     	ldy	#$0
 12207 09:A6C9: A5 15        	lda	<21
 12208 09:A6CB: 10 01        	bpl	L418
 12209 09:A6CD: 88           	dey
 12210                        L418:
 12211 09:A6CE: 85 09        	sta	<R2
 12212 09:A6D0: 84 0B        	sty	<R2+2
 12213 09:A6D2: A5 09        	lda	<R2
 12214 09:A6D4: 87 0D        	sta	[<R3]
 12215 09:A6D6: A5 0B        	lda	<R2+2
 12216 09:A6D8: A0 02 00     	ldy	#$2
 12217 09:A6DB: 97 0D        	sta	[<R3],Y
 12218                        ;          
 12219                        ;          /* On vérifie qu'on reste dans les limi
                    te du LCONST */
 12220                        ;          if(current_SuperInterseg1324->OffsetPat
                    ch[i] > (DWORD) lconst_length)
 12221                        	.line	1690
 12222                        ;            {
 12223 09:A6DD: A0 00 00     	ldy	#$0
 12224 09:A6E0: A5 2E        	lda	<L411+lconst_length_0
 12225 09:A6E2: 10 01        	bpl	L419
 12226 09:A6E4: 88           	dey
 12227                        L419:
 12228 09:A6E5: 85 01        	sta	<R0
 12229 09:A6E7: 84 03        	sty	<R0+2
 12230 09:A6E9: A0 00 00     	ldy	#$0
 12231 09:A6EC: A5 19        	lda	<L412+i_1
 12232 09:A6EE: 10 01        	bpl	L420
 12233 09:A6F0: 88           	dey
 12234                        L420:
 12235 09:A6F1: 85 09        	sta	<R2
 12236 09:A6F3: 84 0B        	sty	<R2+2
 12237 09:A6F5: D4 0B        	pei	<R2+2
 12238 09:A6F7: D4 09        	pei	<R2
 12239 09:A6F9: A9 02 00     	lda	#$2
 12240                        	xref	~~~lasl
 12241 09:A6FC: 22 xx xx xx  	jsl	~~~lasl
 12242 09:A700: 85 05        	sta	<R1
  Sat Jul 10 2021  1:15                                                Page 226


 12243 09:A702: 86 07        	stx	<R1+2
 12244 09:A704: 18           	clc
 12245 09:A705: A9 10 00     	lda	#$10
 12246 09:A708: 65 1D        	adc	<L412+current_SuperInterseg1324_1
 12247 09:A70A: 85 0D        	sta	<R3
 12248 09:A70C: A9 00 00     	lda	#$0
 12249 09:A70F: 65 1F        	adc	<L412+current_SuperInterseg1324_1+2
 12250 09:A711: 85 0F        	sta	<R3+2
 12251 09:A713: 18           	clc
 12252 09:A714: A5 0D        	lda	<R3
 12253 09:A716: 65 05        	adc	<R1
 12254 09:A718: 85 11        	sta	<17
 12255 09:A71A: A5 0F        	lda	<R3+2
 12256 09:A71C: 65 07        	adc	<R1+2
 12257 09:A71E: 85 13        	sta	<17+2
 12258 09:A720: A5 01        	lda	<R0
 12259 09:A722: C7 11        	cmp	[<17]
 12260 09:A724: A5 03        	lda	<R0+2
 12261 09:A726: A0 02 00     	ldy	#$2
 12262 09:A729: F7 11        	sbc	[<17],Y
 12263 09:A72B: 90 03        	bcc	L421
 12264 09:A72D: 82 47 00     	brl	L10281
 12265                        L421:
 12266                        	.line	1691
 12267                        ;              current_SuperInterseg1324->OffsetRe
                    ference[i] = 0xFFFF;     /* Erreur */
 12268                        	.line	1692
 12269 09:A730: A0 00 00     	ldy	#$0
 12270 09:A733: A5 19        	lda	<L412+i_1
 12271 09:A735: 10 01        	bpl	L422
 12272 09:A737: 88           	dey
 12273                        L422:
 12274 09:A738: 85 05        	sta	<R1
 12275 09:A73A: 84 07        	sty	<R1+2
 12276 09:A73C: D4 07        	pei	<R1+2
 12277 09:A73E: D4 05        	pei	<R1
 12278 09:A740: A9 02 00     	lda	#$2
 12279                        	xref	~~~lasl
 12280 09:A743: 22 xx xx xx  	jsl	~~~lasl
 12281 09:A747: 85 01        	sta	<R0
 12282 09:A749: 86 03        	stx	<R0+2
 12283 09:A74B: 18           	clc
 12284 09:A74C: A9 10 04     	lda	#$410
 12285 09:A74F: 65 1D        	adc	<L412+current_SuperInterseg1324_1
 12286 09:A751: 85 09        	sta	<R2
 12287 09:A753: A9 00 00     	lda	#$0
 12288 09:A756: 65 1F        	adc	<L412+current_SuperInterseg1324_1+2
 12289 09:A758: 85 0B        	sta	<R2+2
 12290 09:A75A: 18           	clc
 12291 09:A75B: A5 09        	lda	<R2
 12292 09:A75D: 65 01        	adc	<R0
 12293 09:A75F: 85 0D        	sta	<R3
 12294 09:A761: A5 0B        	lda	<R2+2
 12295 09:A763: 65 03        	adc	<R0+2
 12296 09:A765: 85 0F        	sta	<R3+2
 12297 09:A767: A9 FF FF     	lda	#$ffff
 12298 09:A76A: 87 0D        	sta	[<R3]
 12299 09:A76C: A9 00 00     	lda	#$0
  Sat Jul 10 2021  1:15                                                Page 227


 12300 09:A76F: A0 02 00     	ldy	#$2
 12301 09:A772: 97 0D        	sta	[<R3],Y
 12302                        ;              //printf("  Error : Bad Reference A
                    ddress in SuperInterseg1324 for Offset %04X in Segment #%02X
                    .\n",current_SuperInterseg1324->OffsetPatch[i],current_segme
                    nt->header.SegNum);
 12303                        ;            }
 12304                        	.line	1694
 12305                        ;          else
 12306 09:A774: 82 A9 00     	brl	L10282
 12307                        L10281:
 12308                        ;            {
 12309                        	.line	1696
 12310                        ;              memcpy(&one_word,&lconst[current_Su
                    perInterseg1324->OffsetPatch[i]],sizeof(WORD));
 12311                        	.line	1697
 12312 09:A777: F4 02 00     	pea	#<$2
 12313 09:A77A: A0 00 00     	ldy	#$0
 12314 09:A77D: A5 19        	lda	<L412+i_1
 12315 09:A77F: 10 01        	bpl	L423
 12316 09:A781: 88           	dey
 12317                        L423:
 12318 09:A782: 85 05        	sta	<R1
 12319 09:A784: 84 07        	sty	<R1+2
 12320 09:A786: D4 07        	pei	<R1+2
 12321 09:A788: D4 05        	pei	<R1
 12322 09:A78A: A9 02 00     	lda	#$2
 12323                        	xref	~~~lasl
 12324 09:A78D: 22 xx xx xx  	jsl	~~~lasl
 12325 09:A791: 85 01        	sta	<R0
 12326 09:A793: 86 03        	stx	<R0+2
 12327 09:A795: 18           	clc
 12328 09:A796: A9 10 00     	lda	#$10
 12329 09:A799: 65 1D        	adc	<L412+current_SuperInterseg1324_1
 12330 09:A79B: 85 09        	sta	<R2
 12331 09:A79D: A9 00 00     	lda	#$0
 12332 09:A7A0: 65 1F        	adc	<L412+current_SuperInterseg1324_1+2
 12333 09:A7A2: 85 0B        	sta	<R2+2
 12334 09:A7A4: 18           	clc
 12335 09:A7A5: A5 09        	lda	<R2
 12336 09:A7A7: 65 01        	adc	<R0
 12337 09:A7A9: 85 0D        	sta	<R3
 12338 09:A7AB: A5 0B        	lda	<R2+2
 12339 09:A7AD: 65 03        	adc	<R0+2
 12340 09:A7AF: 85 0F        	sta	<R3+2
 12341 09:A7B1: 18           	clc
 12342 09:A7B2: A5 2A        	lda	<L411+lconst_0
 12343 09:A7B4: 67 0D        	adc	[<R3]
 12344 09:A7B6: 85 01        	sta	<R0
 12345 09:A7B8: A5 2C        	lda	<L411+lconst_0+2
 12346 09:A7BA: A0 02 00     	ldy	#$2
 12347 09:A7BD: 77 0D        	adc	[<R3],Y
 12348 09:A7BF: 85 03        	sta	<R0+2
 12349 09:A7C1: D4 03        	pei	<R0+2
 12350 09:A7C3: D4 01        	pei	<R0
 12351 09:A7C5: F4 00 00     	pea	#0
 12352 09:A7C8: 18           	clc
 12353 09:A7C9: 7B           	tdc
  Sat Jul 10 2021  1:15                                                Page 228


 12354 09:A7CA: 69 1B 00     	adc	#<L412+one_word_1
 12355 09:A7CD: 48           	pha
 12356 09:A7CE: 22 xx xx xx  	jsl	~~memcpy
 12357                        ;              current_SuperInterseg1324->OffsetRe
                    ference[i] = (DWORD) one_word;
 12358                        	.line	1698
 12359 09:A7D2: A0 00 00     	ldy	#$0
 12360 09:A7D5: A5 19        	lda	<L412+i_1
 12361 09:A7D7: 10 01        	bpl	L424
 12362 09:A7D9: 88           	dey
 12363                        L424:
 12364 09:A7DA: 85 05        	sta	<R1
 12365 09:A7DC: 84 07        	sty	<R1+2
 12366 09:A7DE: D4 07        	pei	<R1+2
 12367 09:A7E0: D4 05        	pei	<R1
 12368 09:A7E2: A9 02 00     	lda	#$2
 12369                        	xref	~~~lasl
 12370 09:A7E5: 22 xx xx xx  	jsl	~~~lasl
 12371 09:A7E9: 85 01        	sta	<R0
 12372 09:A7EB: 86 03        	stx	<R0+2
 12373 09:A7ED: 18           	clc
 12374 09:A7EE: A9 10 04     	lda	#$410
 12375 09:A7F1: 65 1D        	adc	<L412+current_SuperInterseg1324_1
 12376 09:A7F3: 85 09        	sta	<R2
 12377 09:A7F5: A9 00 00     	lda	#$0
 12378 09:A7F8: 65 1F        	adc	<L412+current_SuperInterseg1324_1+2
 12379 09:A7FA: 85 0B        	sta	<R2+2
 12380 09:A7FC: 18           	clc
 12381 09:A7FD: A5 09        	lda	<R2
 12382 09:A7FF: 65 01        	adc	<R0
 12383 09:A801: 85 0D        	sta	<R3
 12384 09:A803: A5 0B        	lda	<R2+2
 12385 09:A805: 65 03        	adc	<R0+2
 12386 09:A807: 85 0F        	sta	<R3+2
 12387 09:A809: A0 00 00     	ldy	#$0
 12388 09:A80C: A5 1B        	lda	<L412+one_word_1
 12389 09:A80E: 10 01        	bpl	L425
 12390 09:A810: 88           	dey
 12391                        L425:
 12392 09:A811: 85 01        	sta	<R0
 12393 09:A813: 84 03        	sty	<R0+2
 12394 09:A815: A5 01        	lda	<R0
 12395 09:A817: 87 0D        	sta	[<R3]
 12396 09:A819: A5 03        	lda	<R0+2
 12397 09:A81B: A0 02 00     	ldy	#$2
 12398 09:A81E: 97 0D        	sta	[<R3],Y
 12399                        ;            }
 12400                        	.line	1699
 12401                        L10282:
 12402                        ;
 12403                        ;          /* Conserve ce INTERSEG */
 12404                        ;          AddInterseg(current_SuperInterseg1324->
                    ByteCnt,current_SuperInterseg1324->BitShiftCnt,current_Super
                    Interseg1324->OffsetPatch[i],current_SuperInterseg1324->Offs
                    etReference[i],current_SuperInterseg1324->FileNum,current_Su
                    perInterseg1324->SegNum,RECORD_SUPER_INTERSEG1324);
 12405                        	.line	1702
 12406 09:A820: F4 09 00     	pea	#<$9
  Sat Jul 10 2021  1:15                                                Page 229


 12407 09:A823: A0 0B 00     	ldy	#$b
 12408 09:A826: B7 1D        	lda	[<L412+current_SuperInterseg1324_1],Y
 12409 09:A828: 29 FF 00     	and	#$ff
 12410 09:A82B: 48           	pha
 12411 09:A82C: A0 0C 00     	ldy	#$c
 12412 09:A82F: B7 1D        	lda	[<L412+current_SuperInterseg1324_1],Y
 12413 09:A831: 48           	pha
 12414 09:A832: A0 00 00     	ldy	#$0
 12415 09:A835: A5 19        	lda	<L412+i_1
 12416 09:A837: 10 01        	bpl	L426
 12417 09:A839: 88           	dey
 12418                        L426:
 12419 09:A83A: 85 05        	sta	<R1
 12420 09:A83C: 84 07        	sty	<R1+2
 12421 09:A83E: D4 07        	pei	<R1+2
 12422 09:A840: D4 05        	pei	<R1
 12423 09:A842: A9 02 00     	lda	#$2
 12424                        	xref	~~~lasl
 12425 09:A845: 22 xx xx xx  	jsl	~~~lasl
 12426 09:A849: 85 01        	sta	<R0
 12427 09:A84B: 86 03        	stx	<R0+2
 12428 09:A84D: 18           	clc
 12429 09:A84E: A9 10 04     	lda	#$410
 12430 09:A851: 65 1D        	adc	<L412+current_SuperInterseg1324_1
 12431 09:A853: 85 09        	sta	<R2
 12432 09:A855: A9 00 00     	lda	#$0
 12433 09:A858: 65 1F        	adc	<L412+current_SuperInterseg1324_1+2
 12434 09:A85A: 85 0B        	sta	<R2+2
 12435 09:A85C: 18           	clc
 12436 09:A85D: A5 09        	lda	<R2
 12437 09:A85F: 65 01        	adc	<R0
 12438 09:A861: 85 0D        	sta	<R3
 12439 09:A863: A5 0B        	lda	<R2+2
 12440 09:A865: 65 03        	adc	<R0+2
 12441 09:A867: 85 0F        	sta	<R3+2
 12442 09:A869: A0 02 00     	ldy	#$2
 12443 09:A86C: B7 0D        	lda	[<R3],Y
 12444 09:A86E: 48           	pha
 12445 09:A86F: A7 0D        	lda	[<R3]
 12446 09:A871: 48           	pha
 12447 09:A872: A0 00 00     	ldy	#$0
 12448 09:A875: A5 19        	lda	<L412+i_1
 12449 09:A877: 10 01        	bpl	L427
 12450 09:A879: 88           	dey
 12451                        L427:
 12452 09:A87A: 85 09        	sta	<R2
 12453 09:A87C: 84 0B        	sty	<R2+2
 12454 09:A87E: D4 0B        	pei	<R2+2
 12455 09:A880: D4 09        	pei	<R2
 12456 09:A882: A9 02 00     	lda	#$2
 12457                        	xref	~~~lasl
 12458 09:A885: 22 xx xx xx  	jsl	~~~lasl
 12459 09:A889: 85 01        	sta	<R0
 12460 09:A88B: 86 03        	stx	<R0+2
 12461 09:A88D: 18           	clc
 12462 09:A88E: A9 10 00     	lda	#$10
 12463 09:A891: 65 1D        	adc	<L412+current_SuperInterseg1324_1
 12464 09:A893: 85 0D        	sta	<R3
  Sat Jul 10 2021  1:15                                                Page 230


 12465 09:A895: A9 00 00     	lda	#$0
 12466 09:A898: 65 1F        	adc	<L412+current_SuperInterseg1324_1+2
 12467 09:A89A: 85 0F        	sta	<R3+2
 12468 09:A89C: 18           	clc
 12469 09:A89D: A5 0D        	lda	<R3
 12470 09:A89F: 65 01        	adc	<R0
 12471 09:A8A1: 85 11        	sta	<17
 12472 09:A8A3: A5 0F        	lda	<R3+2
 12473 09:A8A5: 65 03        	adc	<R0+2
 12474 09:A8A7: 85 13        	sta	<17+2
 12475 09:A8A9: A0 02 00     	ldy	#$2
 12476 09:A8AC: B7 11        	lda	[<17],Y
 12477 09:A8AE: 48           	pha
 12478 09:A8AF: A7 11        	lda	[<17]
 12479 09:A8B1: 48           	pha
 12480 09:A8B2: A0 0A 00     	ldy	#$a
 12481 09:A8B5: B7 1D        	lda	[<L412+current_SuperInterseg1324_1],Y
 12482 09:A8B7: 48           	pha
 12483 09:A8B8: A0 09 00     	ldy	#$9
 12484 09:A8BB: B7 1D        	lda	[<L412+current_SuperInterseg1324_1],Y
 12485 09:A8BD: 48           	pha
 12486 09:A8BE: 22 A9 AC 09  	jsl	~~AddInterseg
 12487                        ;        }
 12488                        	.line	1703
 12489                        L10277:
 12490 09:A8C2: E6 19        	inc	<L412+i_1
 12491                        L10280:
 12492 09:A8C4: 38           	sec
 12493 09:A8C5: A5 19        	lda	<L412+i_1
 12494 09:A8C7: A0 0E 00     	ldy	#$e
 12495 09:A8CA: F7 1D        	sbc	[<L412+current_SuperInterseg1324_1],Y
 12496 09:A8CC: 70 03        	bvs	L428
 12497 09:A8CE: 49 00 80     	eor	#$8000
 12498                        L428:
 12499 09:A8D1: 30 03        	bmi	L429
 12500 09:A8D3: 82 96 FD     	brl	L10279
 12501                        L429:
 12502                        L10278:
 12503                        ;
 12504                        ;      /* Page suivante */
 12505                        ;      *page_rtn = *page_rtn + 1;
 12506                        	.line	1706
 12507 09:A8D6: E2 20        	sep	#$20
 12508                        	longa	off
 12509 09:A8D8: A7 30        	lda	[<L411+page_rtn_0]
 12510 09:A8DA: 1A           	ina
 12511 09:A8DB: C2 20        	rep	#$20
 12512                        	longa	on
 12513 09:A8DD: E2 20        	sep	#$20
 12514                        	longa	off
 12515 09:A8DF: 87 30        	sta	[<L411+page_rtn_0]
 12516 09:A8E1: C2 20        	rep	#$20
 12517                        	longa	on
 12518                        ;
 12519                        ;      /* Longueur du SubRecord */
 12520                        ;      *length_rtn = 1 + current_SuperInterseg1324
                    ->nb_address*sizeof(BYTE);
 12521                        	.line	1709
  Sat Jul 10 2021  1:15                                                Page 231


 12522 09:A8E3: A0 0E 00     	ldy	#$e
 12523 09:A8E6: B7 1D        	lda	[<L412+current_SuperInterseg1324_1],Y
 12524 09:A8E8: 1A           	ina
 12525 09:A8E9: 87 34        	sta	[<L411+length_rtn_0]
 12526                        ;    }
 12527                        	.line	1710
 12528                        L10276:
 12529                        ;
 12530                        ;  /* Renvoie la structure */
 12531                        ;  return(current_SuperInterseg1324);
 12532                        	.line	1713
 12533 09:A8EB: A6 1F        	ldx	<L412+current_SuperInterseg1324_1+2
 12534 09:A8ED: A5 1D        	lda	<L412+current_SuperInterseg1324_1
 12535 09:A8EF: 82 E5 FC     	brl	L415
 12536                        ;}
 12537                        	.line	1714
 12538                        	.endblock	1714
 12539             00000020   L411	equ	32
 12540             00000019   L412	equ	25
 12541 09:A8F2:              	ends
 12542                        	efunc
 12543                        	.endfunc	1714,25,32
 12544                        	.line	1714
 12545                        ;
 12546                        ;
 12547                        ;/************************************************
                    ****************************/
 12548                        ;/*  DecodeSuperInterseg2536() :  Décodage d'un Su
                    bRecord SuperInterseg2536. */
 12549                        ;/************************************************
                    ****************************/
 12550                        ;static struct subrecord_SuperInterseg2536 *Decode
                    SuperInterseg2536(unsigned char *data, BYTE SegNum, unsigned
                     char *lconst, int lconst_length, BYTE *page_rtn, int *lengt
                    h_rtn, struct omf_segment *current_segment)
 12551                        ;{
 12552                        	.line	1720
 12553                        	.line	1721
 12554                        	LOADER
 12555                        	func
 12556                        	.function	1721
 12557                        ~~DecodeSuperInterseg2536:
 12558                        	longa	on
 12559                        	longi	on
 12560 09:A8F2: 3B           	tsc
 12561 09:A8F3: 38           	sec
 12562 09:A8F4: E9 20 00     	sbc	#L430
 12563 09:A8F7: 1B           	tcs
 12564 09:A8F8: 0B           	phd
 12565 09:A8F9: 5B           	tcd
 12566             00000004   data_0	set	4
 12567             00000008   SegNum_0	set	8
 12568             0000000A   lconst_0	set	10
 12569             0000000E   lconst_length_0	set	14
 12570             00000010   page_rtn_0	set	16
 12571             00000014   length_rtn_0	set	20
 12572             00000018   current_segment_0	set	24
 12573                        	.block	1721
  Sat Jul 10 2021  1:15                                                Page 232


 12574                        ;  int i;
 12575                        ;  WORD one_word;
 12576                        ;  struct subrecord_SuperInterseg2536 *current_Sup
                    erInterseg2536;
 12577                        ;
 12578                        ;  /* Allocation mémoire */
 12579                        ;  current_SuperInterseg2536 = (struct subrecord_S
                    uperInterseg2536 *) k_calloc(1,sizeof(struct subrecord_Super
                    Interseg2536));
 12580             00000000   i_1	set	0
 12581             00000002   one_word_1	set	2
 12582             00000004   current_SuperInterseg2536_1	set	4
 12583                        	.sym	i,0,5,1,16
 12584                        	.sym	one_word,2,5,1,16
 12585                        	.sym	current_SuperInterseg2536,4,138,1,32,94
 12586                        	.sym	data,4,142,6,32
 12587                        	.sym	SegNum,8,14,6,8
 12588                        	.sym	lconst,10,142,6,32
 12589                        	.sym	lconst_length,14,5,6,16
 12590                        	.sym	page_rtn,16,142,6,32
 12591                        	.sym	length_rtn,20,133,6,32
 12592                        	.sym	current_segment,24,138,6,32,86
 12593                        	.line	1727
 12594 09:A8FA: F4 14 08     	pea	#<$814
 12595 09:A8FD: F4 01 00     	pea	#<$1
 12596 09:A900: 22 xx xx xx  	jsl	~~k_calloc
 12597 09:A904: 85 1D        	sta	<L431+current_SuperInterseg2536_1
 12598 09:A906: 86 1F        	stx	<L431+current_SuperInterseg2536_1+2
 12599                        ;  if(current_SuperInterseg2536 == NULL)
 12600                        	.line	1728
 12601                        ;    {
 12602 09:A908: A5 1D        	lda	<L431+current_SuperInterseg2536_1
 12603 09:A90A: 05 1F        	ora	<L431+current_SuperInterseg2536_1+2
 12604 09:A90C: F0 03        	beq	L433
 12605 09:A90E: 82 19 00     	brl	L10283
 12606                        L433:
 12607                        	.line	1729
 12608                        ;      //printf("Error : Impossible to allocate me
                    mory for SubRecord SuperInterseg2536.\n");
 12609                        ;      return(NULL);
 12610                        	.line	1731
 12611 09:A911: A9 00 00     	lda	#$0
 12612 09:A914: AA           	tax
 12613 09:A915: A9 00 00     	lda	#$0
 12614                        L434:
 12615 09:A918: A8           	tay
 12616 09:A919: A5 22        	lda	<L430+2
 12617 09:A91B: 85 3A        	sta	<L430+2+24
 12618 09:A91D: A5 21        	lda	<L430+1
 12619 09:A91F: 85 39        	sta	<L430+1+24
 12620 09:A921: 2B           	pld
 12621 09:A922: 3B           	tsc
 12622 09:A923: 18           	clc
 12623 09:A924: 69 38 00     	adc	#L430+24
 12624 09:A927: 1B           	tcs
 12625 09:A928: 98           	tya
 12626 09:A929: 6B           	rtl
 12627                        ;    }
  Sat Jul 10 2021  1:15                                                Page 233


 12628                        	.line	1732
 12629                        ;
 12630                        ;  /* Nombre d'adresse-1 ou Saut de Page */
 12631                        ;  current_SuperInterseg2536->Count = data[0];
 12632                        L10283:
 12633                        	.line	1735
 12634 09:A92A: E2 20        	sep	#$20
 12635                        	longa	off
 12636 09:A92C: A7 24        	lda	[<L430+data_0]
 12637 09:A92E: A0 08 00     	ldy	#$8
 12638 09:A931: 97 1D        	sta	[<L431+current_SuperInterseg2536_1],Y
 12639 09:A933: C2 20        	rep	#$20
 12640                        	longa	on
 12641                        ;
 12642                        ;  /** Saut de Page **/
 12643                        ;  if((current_SuperInterseg2536->Count & 0x80) ==
                     0x80)
 12644                        	.line	1738
 12645                        ;    {
 12646 09:A935: A0 08 00     	ldy	#$8
 12647 09:A938: B7 1D        	lda	[<L431+current_SuperInterseg2536_1],Y
 12648 09:A93A: 29 80 00     	and	#<$80
 12649 09:A93D: 85 01        	sta	<R0
 12650 09:A93F: A5 01        	lda	<R0
 12651 09:A941: C9 80 00     	cmp	#<$80
 12652 09:A944: F0 03        	beq	L435
 12653 09:A946: 82 24 00     	brl	L10284
 12654                        L435:
 12655                        	.line	1739
 12656                        ;      /* On saute X pages */
 12657                        ;      *page_rtn = *page_rtn + (current_SuperInter
                    seg2536->Count & 0x7F);
 12658                        	.line	1741
 12659 09:A949: E2 20        	sep	#$20
 12660                        	longa	off
 12661 09:A94B: A0 08 00     	ldy	#$8
 12662 09:A94E: B7 1D        	lda	[<L431+current_SuperInterseg2536_1],Y
 12663 09:A950: 29 7F        	and	#<$7f
 12664 09:A952: 85 01        	sta	<R0
 12665 09:A954: C2 20        	rep	#$20
 12666                        	longa	on
 12667 09:A956: E2 20        	sep	#$20
 12668                        	longa	off
 12669 09:A958: 18           	clc
 12670 09:A959: A7 30        	lda	[<L430+page_rtn_0]
 12671 09:A95B: 65 01        	adc	<R0
 12672 09:A95D: C2 20        	rep	#$20
 12673                        	longa	on
 12674 09:A95F: E2 20        	sep	#$20
 12675                        	longa	off
 12676 09:A961: 87 30        	sta	[<L430+page_rtn_0]
 12677 09:A963: C2 20        	rep	#$20
 12678                        	longa	on
 12679                        ;
 12680                        ;      /* Longueur du SubRecord */
 12681                        ;      *length_rtn = 1;
 12682                        	.line	1744
 12683 09:A965: A9 01 00     	lda	#$1
  Sat Jul 10 2021  1:15                                                Page 234


 12684 09:A968: 87 34        	sta	[<L430+length_rtn_0]
 12685                        ;    }
 12686                        	.line	1745
 12687                        ;  else
 12688 09:A96A: 82 BF 02     	brl	L10285
 12689                        L10284:
 12690                        ;    {
 12691                        	.line	1747
 12692                        ;      /* Number of Bytes to be relocated = Toujou
                    rs à 2 */
 12693                        ;      current_SuperInterseg2536->ByteCnt = 0x02;
 12694                        	.line	1749
 12695 09:A96D: E2 20        	sep	#$20
 12696                        	longa	off
 12697 09:A96F: A9 02        	lda	#$2
 12698 09:A971: A0 09 00     	ldy	#$9
 12699 09:A974: 97 1D        	sta	[<L431+current_SuperInterseg2536_1],Y
 12700 09:A976: C2 20        	rep	#$20
 12701                        	longa	on
 12702                        ;
 12703                        ;      /* Opérations >> ou << = Toujours à 0xF0  *
                    /
 12704                        ;      current_SuperInterseg2536->BitShiftCnt = 0x
                    F0;
 12705                        	.line	1752
 12706 09:A978: E2 20        	sep	#$20
 12707                        	longa	off
 12708 09:A97A: A9 F0        	lda	#$f0
 12709 09:A97C: A0 0A 00     	ldy	#$a
 12710 09:A97F: 97 1D        	sta	[<L431+current_SuperInterseg2536_1],Y
 12711 09:A981: C2 20        	rep	#$20
 12712                        	longa	on
 12713                        ;
 12714                        ;      /* Segment Number */
 12715                        ;      current_SuperInterseg2536->SegNum = SegNum;
 12716                        	.line	1755
 12717 09:A983: E2 20        	sep	#$20
 12718                        	longa	off
 12719 09:A985: A5 28        	lda	<L430+SegNum_0
 12720 09:A987: A0 0B 00     	ldy	#$b
 12721 09:A98A: 97 1D        	sta	[<L431+current_SuperInterseg2536_1],Y
 12722 09:A98C: C2 20        	rep	#$20
 12723                        	longa	on
 12724                        ;
 12725                        ;      /* File Number toujours à 1 */
 12726                        ;      current_SuperInterseg2536->FileNum = 1;
 12727                        	.line	1758
 12728 09:A98E: A9 01 00     	lda	#$1
 12729 09:A991: A0 0C 00     	ldy	#$c
 12730 09:A994: 97 1D        	sta	[<L431+current_SuperInterseg2536_1],Y
 12731                        ;
 12732                        ;      /* Nombre d'adresse */
 12733                        ;      current_SuperInterseg2536->nb_address = cur
                    rent_SuperInterseg2536->Count + 1;
 12734                        	.line	1761
 12735 09:A996: A0 08 00     	ldy	#$8
 12736 09:A999: B7 1D        	lda	[<L431+current_SuperInterseg2536_1],Y
 12737 09:A99B: 29 FF 00     	and	#$ff
  Sat Jul 10 2021  1:15                                                Page 235


 12738 09:A99E: 85 01        	sta	<R0
 12739 09:A9A0: A5 01        	lda	<R0
 12740 09:A9A2: 1A           	ina
 12741 09:A9A3: A0 0E 00     	ldy	#$e
 12742 09:A9A6: 97 1D        	sta	[<L431+current_SuperInterseg2536_1],Y
 12743                        ;
 12744                        ;      /** Copie les adresses **/
 12745                        ;      for(i=0; i<current_SuperInterseg2536->nb_ad
                    dress; i++)
 12746                        	.line	1764
 12747 09:A9A8: 64 19        	stz	<L431+i_1
 12748 09:A9AA: 82 58 02     	brl	L10289
 12749                        L10288:
 12750                        ;        {
 12751                        	.line	1765
 12752                        ;          /* Décode OffsetPath et OffsetReference
                     */
 12753                        ;          current_SuperInterseg2536->OffsetPatch[
                    i] = ((WORD)*page_rtn) << 8 | data[1+i];
 12754                        	.line	1767
 12755 09:A9AD: A0 00 00     	ldy	#$0
 12756 09:A9B0: A5 19        	lda	<L431+i_1
 12757 09:A9B2: 10 01        	bpl	L436
 12758 09:A9B4: 88           	dey
 12759                        L436:
 12760 09:A9B5: 85 05        	sta	<R1
 12761 09:A9B7: 84 07        	sty	<R1+2
 12762 09:A9B9: D4 07        	pei	<R1+2
 12763 09:A9BB: D4 05        	pei	<R1
 12764 09:A9BD: A9 02 00     	lda	#$2
 12765                        	xref	~~~lasl
 12766 09:A9C0: 22 xx xx xx  	jsl	~~~lasl
 12767 09:A9C4: 85 01        	sta	<R0
 12768 09:A9C6: 86 03        	stx	<R0+2
 12769 09:A9C8: 18           	clc
 12770 09:A9C9: A9 10 00     	lda	#$10
 12771 09:A9CC: 65 1D        	adc	<L431+current_SuperInterseg2536_1
 12772 09:A9CE: 85 09        	sta	<R2
 12773 09:A9D0: A9 00 00     	lda	#$0
 12774 09:A9D3: 65 1F        	adc	<L431+current_SuperInterseg2536_1+2
 12775 09:A9D5: 85 0B        	sta	<R2+2
 12776 09:A9D7: 18           	clc
 12777 09:A9D8: A5 09        	lda	<R2
 12778 09:A9DA: 65 01        	adc	<R0
 12779 09:A9DC: 85 0D        	sta	<R3
 12780 09:A9DE: A5 0B        	lda	<R2+2
 12781 09:A9E0: 65 03        	adc	<R0+2
 12782 09:A9E2: 85 0F        	sta	<R3+2
 12783 09:A9E4: A5 19        	lda	<L431+i_1
 12784 09:A9E6: 1A           	ina
 12785 09:A9E7: 85 01        	sta	<R0
 12786 09:A9E9: A4 01        	ldy	<R0
 12787 09:A9EB: B7 24        	lda	[<L430+data_0],Y
 12788 09:A9ED: 29 FF 00     	and	#$ff
 12789 09:A9F0: 85 09        	sta	<R2
 12790 09:A9F2: A7 30        	lda	[<L430+page_rtn_0]
 12791 09:A9F4: 29 FF 00     	and	#$ff
 12792 09:A9F7: 85 15        	sta	<21
  Sat Jul 10 2021  1:15                                                Page 236


 12793 09:A9F9: A5 15        	lda	<21
 12794 09:A9FB: EB           	xba
 12795 09:A9FC: 29 00 FF     	and	#$ff00
 12796 09:A9FF: 85 11        	sta	<17
 12797 09:AA01: A5 11        	lda	<17
 12798 09:AA03: 05 09        	ora	<R2
 12799 09:AA05: 85 15        	sta	<21
 12800 09:AA07: A0 00 00     	ldy	#$0
 12801 09:AA0A: A5 15        	lda	<21
 12802 09:AA0C: 10 01        	bpl	L437
 12803 09:AA0E: 88           	dey
 12804                        L437:
 12805 09:AA0F: 85 09        	sta	<R2
 12806 09:AA11: 84 0B        	sty	<R2+2
 12807 09:AA13: A5 09        	lda	<R2
 12808 09:AA15: 87 0D        	sta	[<R3]
 12809 09:AA17: A5 0B        	lda	<R2+2
 12810 09:AA19: A0 02 00     	ldy	#$2
 12811 09:AA1C: 97 0D        	sta	[<R3],Y
 12812                        ;          
 12813                        ;          /* On vérifie qu'on reste dans les limi
                    te du LCONST */
 12814                        ;          if(current_SuperInterseg2536->OffsetPat
                    ch[i] > (DWORD) lconst_length)
 12815                        	.line	1770
 12816                        ;            {
 12817 09:AA1E: A0 00 00     	ldy	#$0
 12818 09:AA21: A5 2E        	lda	<L430+lconst_length_0
 12819 09:AA23: 10 01        	bpl	L438
 12820 09:AA25: 88           	dey
 12821                        L438:
 12822 09:AA26: 85 01        	sta	<R0
 12823 09:AA28: 84 03        	sty	<R0+2
 12824 09:AA2A: A0 00 00     	ldy	#$0
 12825 09:AA2D: A5 19        	lda	<L431+i_1
 12826 09:AA2F: 10 01        	bpl	L439
 12827 09:AA31: 88           	dey
 12828                        L439:
 12829 09:AA32: 85 09        	sta	<R2
 12830 09:AA34: 84 0B        	sty	<R2+2
 12831 09:AA36: D4 0B        	pei	<R2+2
 12832 09:AA38: D4 09        	pei	<R2
 12833 09:AA3A: A9 02 00     	lda	#$2
 12834                        	xref	~~~lasl
 12835 09:AA3D: 22 xx xx xx  	jsl	~~~lasl
 12836 09:AA41: 85 05        	sta	<R1
 12837 09:AA43: 86 07        	stx	<R1+2
 12838 09:AA45: 18           	clc
 12839 09:AA46: A9 10 00     	lda	#$10
 12840 09:AA49: 65 1D        	adc	<L431+current_SuperInterseg2536_1
 12841 09:AA4B: 85 0D        	sta	<R3
 12842 09:AA4D: A9 00 00     	lda	#$0
 12843 09:AA50: 65 1F        	adc	<L431+current_SuperInterseg2536_1+2
 12844 09:AA52: 85 0F        	sta	<R3+2
 12845 09:AA54: 18           	clc
 12846 09:AA55: A5 0D        	lda	<R3
 12847 09:AA57: 65 05        	adc	<R1
 12848 09:AA59: 85 11        	sta	<17
  Sat Jul 10 2021  1:15                                                Page 237


 12849 09:AA5B: A5 0F        	lda	<R3+2
 12850 09:AA5D: 65 07        	adc	<R1+2
 12851 09:AA5F: 85 13        	sta	<17+2
 12852 09:AA61: A5 01        	lda	<R0
 12853 09:AA63: C7 11        	cmp	[<17]
 12854 09:AA65: A5 03        	lda	<R0+2
 12855 09:AA67: A0 02 00     	ldy	#$2
 12856 09:AA6A: F7 11        	sbc	[<17],Y
 12857 09:AA6C: 90 03        	bcc	L440
 12858 09:AA6E: 82 47 00     	brl	L10290
 12859                        L440:
 12860                        	.line	1771
 12861                        ;              current_SuperInterseg2536->OffsetRe
                    ference[i] = 0xFFFF;     /* Erreur */
 12862                        	.line	1772
 12863 09:AA71: A0 00 00     	ldy	#$0
 12864 09:AA74: A5 19        	lda	<L431+i_1
 12865 09:AA76: 10 01        	bpl	L441
 12866 09:AA78: 88           	dey
 12867                        L441:
 12868 09:AA79: 85 05        	sta	<R1
 12869 09:AA7B: 84 07        	sty	<R1+2
 12870 09:AA7D: D4 07        	pei	<R1+2
 12871 09:AA7F: D4 05        	pei	<R1
 12872 09:AA81: A9 02 00     	lda	#$2
 12873                        	xref	~~~lasl
 12874 09:AA84: 22 xx xx xx  	jsl	~~~lasl
 12875 09:AA88: 85 01        	sta	<R0
 12876 09:AA8A: 86 03        	stx	<R0+2
 12877 09:AA8C: 18           	clc
 12878 09:AA8D: A9 10 04     	lda	#$410
 12879 09:AA90: 65 1D        	adc	<L431+current_SuperInterseg2536_1
 12880 09:AA92: 85 09        	sta	<R2
 12881 09:AA94: A9 00 00     	lda	#$0
 12882 09:AA97: 65 1F        	adc	<L431+current_SuperInterseg2536_1+2
 12883 09:AA99: 85 0B        	sta	<R2+2
 12884 09:AA9B: 18           	clc
 12885 09:AA9C: A5 09        	lda	<R2
 12886 09:AA9E: 65 01        	adc	<R0
 12887 09:AAA0: 85 0D        	sta	<R3
 12888 09:AAA2: A5 0B        	lda	<R2+2
 12889 09:AAA4: 65 03        	adc	<R0+2
 12890 09:AAA6: 85 0F        	sta	<R3+2
 12891 09:AAA8: A9 FF FF     	lda	#$ffff
 12892 09:AAAB: 87 0D        	sta	[<R3]
 12893 09:AAAD: A9 00 00     	lda	#$0
 12894 09:AAB0: A0 02 00     	ldy	#$2
 12895 09:AAB3: 97 0D        	sta	[<R3],Y
 12896                        ;              //printf("  Error : Bad Reference A
                    ddress in SuperInterseg2536 for Offset %04X in Segment #%02X
                    .\n",current_SuperInterseg2536->OffsetPatch[i],current_segme
                    nt->header.SegNum);
 12897                        ;            }
 12898                        	.line	1774
 12899                        ;          else
 12900 09:AAB5: 82 A9 00     	brl	L10291
 12901                        L10290:
 12902                        ;            {          
  Sat Jul 10 2021  1:15                                                Page 238


 12903                        	.line	1776
 12904                        ;              memcpy(&one_word,&lconst[current_Su
                    perInterseg2536->OffsetPatch[i]],sizeof(WORD));
 12905                        	.line	1777
 12906 09:AAB8: F4 02 00     	pea	#<$2
 12907 09:AABB: A0 00 00     	ldy	#$0
 12908 09:AABE: A5 19        	lda	<L431+i_1
 12909 09:AAC0: 10 01        	bpl	L442
 12910 09:AAC2: 88           	dey
 12911                        L442:
 12912 09:AAC3: 85 05        	sta	<R1
 12913 09:AAC5: 84 07        	sty	<R1+2
 12914 09:AAC7: D4 07        	pei	<R1+2
 12915 09:AAC9: D4 05        	pei	<R1
 12916 09:AACB: A9 02 00     	lda	#$2
 12917                        	xref	~~~lasl
 12918 09:AACE: 22 xx xx xx  	jsl	~~~lasl
 12919 09:AAD2: 85 01        	sta	<R0
 12920 09:AAD4: 86 03        	stx	<R0+2
 12921 09:AAD6: 18           	clc
 12922 09:AAD7: A9 10 00     	lda	#$10
 12923 09:AADA: 65 1D        	adc	<L431+current_SuperInterseg2536_1
 12924 09:AADC: 85 09        	sta	<R2
 12925 09:AADE: A9 00 00     	lda	#$0
 12926 09:AAE1: 65 1F        	adc	<L431+current_SuperInterseg2536_1+2
 12927 09:AAE3: 85 0B        	sta	<R2+2
 12928 09:AAE5: 18           	clc
 12929 09:AAE6: A5 09        	lda	<R2
 12930 09:AAE8: 65 01        	adc	<R0
 12931 09:AAEA: 85 0D        	sta	<R3
 12932 09:AAEC: A5 0B        	lda	<R2+2
 12933 09:AAEE: 65 03        	adc	<R0+2
 12934 09:AAF0: 85 0F        	sta	<R3+2
 12935 09:AAF2: 18           	clc
 12936 09:AAF3: A5 2A        	lda	<L430+lconst_0
 12937 09:AAF5: 67 0D        	adc	[<R3]
 12938 09:AAF7: 85 01        	sta	<R0
 12939 09:AAF9: A5 2C        	lda	<L430+lconst_0+2
 12940 09:AAFB: A0 02 00     	ldy	#$2
 12941 09:AAFE: 77 0D        	adc	[<R3],Y
 12942 09:AB00: 85 03        	sta	<R0+2
 12943 09:AB02: D4 03        	pei	<R0+2
 12944 09:AB04: D4 01        	pei	<R0
 12945 09:AB06: F4 00 00     	pea	#0
 12946 09:AB09: 18           	clc
 12947 09:AB0A: 7B           	tdc
 12948 09:AB0B: 69 1B 00     	adc	#<L431+one_word_1
 12949 09:AB0E: 48           	pha
 12950 09:AB0F: 22 xx xx xx  	jsl	~~memcpy
 12951                        ;              current_SuperInterseg2536->OffsetRe
                    ference[i] = (DWORD) one_word;
 12952                        	.line	1778
 12953 09:AB13: A0 00 00     	ldy	#$0
 12954 09:AB16: A5 19        	lda	<L431+i_1
 12955 09:AB18: 10 01        	bpl	L443
 12956 09:AB1A: 88           	dey
 12957                        L443:
 12958 09:AB1B: 85 05        	sta	<R1
  Sat Jul 10 2021  1:15                                                Page 239


 12959 09:AB1D: 84 07        	sty	<R1+2
 12960 09:AB1F: D4 07        	pei	<R1+2
 12961 09:AB21: D4 05        	pei	<R1
 12962 09:AB23: A9 02 00     	lda	#$2
 12963                        	xref	~~~lasl
 12964 09:AB26: 22 xx xx xx  	jsl	~~~lasl
 12965 09:AB2A: 85 01        	sta	<R0
 12966 09:AB2C: 86 03        	stx	<R0+2
 12967 09:AB2E: 18           	clc
 12968 09:AB2F: A9 10 04     	lda	#$410
 12969 09:AB32: 65 1D        	adc	<L431+current_SuperInterseg2536_1
 12970 09:AB34: 85 09        	sta	<R2
 12971 09:AB36: A9 00 00     	lda	#$0
 12972 09:AB39: 65 1F        	adc	<L431+current_SuperInterseg2536_1+2
 12973 09:AB3B: 85 0B        	sta	<R2+2
 12974 09:AB3D: 18           	clc
 12975 09:AB3E: A5 09        	lda	<R2
 12976 09:AB40: 65 01        	adc	<R0
 12977 09:AB42: 85 0D        	sta	<R3
 12978 09:AB44: A5 0B        	lda	<R2+2
 12979 09:AB46: 65 03        	adc	<R0+2
 12980 09:AB48: 85 0F        	sta	<R3+2
 12981 09:AB4A: A0 00 00     	ldy	#$0
 12982 09:AB4D: A5 1B        	lda	<L431+one_word_1
 12983 09:AB4F: 10 01        	bpl	L444
 12984 09:AB51: 88           	dey
 12985                        L444:
 12986 09:AB52: 85 01        	sta	<R0
 12987 09:AB54: 84 03        	sty	<R0+2
 12988 09:AB56: A5 01        	lda	<R0
 12989 09:AB58: 87 0D        	sta	[<R3]
 12990 09:AB5A: A5 03        	lda	<R0+2
 12991 09:AB5C: A0 02 00     	ldy	#$2
 12992 09:AB5F: 97 0D        	sta	[<R3],Y
 12993                        ;            }
 12994                        	.line	1779
 12995                        L10291:
 12996                        ;             
 12997                        ;          /* Conserve ce INTERSEG */
 12998                        ;          AddInterseg(current_SuperInterseg2536->
                    ByteCnt,current_SuperInterseg2536->BitShiftCnt,current_Super
                    Interseg2536->OffsetPatch[i],current_SuperInterseg2536->Offs
                    etReference[i],current_SuperInterseg2536->FileNum,current_Su
                    perInterseg2536->SegNum,RECORD_SUPER_INTERSEG2536);
 12999                        	.line	1782
 13000 09:AB61: F4 0A 00     	pea	#<$a
 13001 09:AB64: A0 0B 00     	ldy	#$b
 13002 09:AB67: B7 1D        	lda	[<L431+current_SuperInterseg2536_1],Y
 13003 09:AB69: 29 FF 00     	and	#$ff
 13004 09:AB6C: 48           	pha
 13005 09:AB6D: A0 0C 00     	ldy	#$c
 13006 09:AB70: B7 1D        	lda	[<L431+current_SuperInterseg2536_1],Y
 13007 09:AB72: 48           	pha
 13008 09:AB73: A0 00 00     	ldy	#$0
 13009 09:AB76: A5 19        	lda	<L431+i_1
 13010 09:AB78: 10 01        	bpl	L445
 13011 09:AB7A: 88           	dey
 13012                        L445:
  Sat Jul 10 2021  1:15                                                Page 240


 13013 09:AB7B: 85 05        	sta	<R1
 13014 09:AB7D: 84 07        	sty	<R1+2
 13015 09:AB7F: D4 07        	pei	<R1+2
 13016 09:AB81: D4 05        	pei	<R1
 13017 09:AB83: A9 02 00     	lda	#$2
 13018                        	xref	~~~lasl
 13019 09:AB86: 22 xx xx xx  	jsl	~~~lasl
 13020 09:AB8A: 85 01        	sta	<R0
 13021 09:AB8C: 86 03        	stx	<R0+2
 13022 09:AB8E: 18           	clc
 13023 09:AB8F: A9 10 04     	lda	#$410
 13024 09:AB92: 65 1D        	adc	<L431+current_SuperInterseg2536_1
 13025 09:AB94: 85 09        	sta	<R2
 13026 09:AB96: A9 00 00     	lda	#$0
 13027 09:AB99: 65 1F        	adc	<L431+current_SuperInterseg2536_1+2
 13028 09:AB9B: 85 0B        	sta	<R2+2
 13029 09:AB9D: 18           	clc
 13030 09:AB9E: A5 09        	lda	<R2
 13031 09:ABA0: 65 01        	adc	<R0
 13032 09:ABA2: 85 0D        	sta	<R3
 13033 09:ABA4: A5 0B        	lda	<R2+2
 13034 09:ABA6: 65 03        	adc	<R0+2
 13035 09:ABA8: 85 0F        	sta	<R3+2
 13036 09:ABAA: A0 02 00     	ldy	#$2
 13037 09:ABAD: B7 0D        	lda	[<R3],Y
 13038 09:ABAF: 48           	pha
 13039 09:ABB0: A7 0D        	lda	[<R3]
 13040 09:ABB2: 48           	pha
 13041 09:ABB3: A0 00 00     	ldy	#$0
 13042 09:ABB6: A5 19        	lda	<L431+i_1
 13043 09:ABB8: 10 01        	bpl	L446
 13044 09:ABBA: 88           	dey
 13045                        L446:
 13046 09:ABBB: 85 09        	sta	<R2
 13047 09:ABBD: 84 0B        	sty	<R2+2
 13048 09:ABBF: D4 0B        	pei	<R2+2
 13049 09:ABC1: D4 09        	pei	<R2
 13050 09:ABC3: A9 02 00     	lda	#$2
 13051                        	xref	~~~lasl
 13052 09:ABC6: 22 xx xx xx  	jsl	~~~lasl
 13053 09:ABCA: 85 01        	sta	<R0
 13054 09:ABCC: 86 03        	stx	<R0+2
 13055 09:ABCE: 18           	clc
 13056 09:ABCF: A9 10 00     	lda	#$10
 13057 09:ABD2: 65 1D        	adc	<L431+current_SuperInterseg2536_1
 13058 09:ABD4: 85 0D        	sta	<R3
 13059 09:ABD6: A9 00 00     	lda	#$0
 13060 09:ABD9: 65 1F        	adc	<L431+current_SuperInterseg2536_1+2
 13061 09:ABDB: 85 0F        	sta	<R3+2
 13062 09:ABDD: 18           	clc
 13063 09:ABDE: A5 0D        	lda	<R3
 13064 09:ABE0: 65 01        	adc	<R0
 13065 09:ABE2: 85 11        	sta	<17
 13066 09:ABE4: A5 0F        	lda	<R3+2
 13067 09:ABE6: 65 03        	adc	<R0+2
 13068 09:ABE8: 85 13        	sta	<17+2
 13069 09:ABEA: A0 02 00     	ldy	#$2
 13070 09:ABED: B7 11        	lda	[<17],Y
  Sat Jul 10 2021  1:15                                                Page 241


 13071 09:ABEF: 48           	pha
 13072 09:ABF0: A7 11        	lda	[<17]
 13073 09:ABF2: 48           	pha
 13074 09:ABF3: A0 0A 00     	ldy	#$a
 13075 09:ABF6: B7 1D        	lda	[<L431+current_SuperInterseg2536_1],Y
 13076 09:ABF8: 48           	pha
 13077 09:ABF9: A0 09 00     	ldy	#$9
 13078 09:ABFC: B7 1D        	lda	[<L431+current_SuperInterseg2536_1],Y
 13079 09:ABFE: 48           	pha
 13080 09:ABFF: 22 A9 AC 09  	jsl	~~AddInterseg
 13081                        ;        }
 13082                        	.line	1783
 13083                        L10286:
 13084 09:AC03: E6 19        	inc	<L431+i_1
 13085                        L10289:
 13086 09:AC05: 38           	sec
 13087 09:AC06: A5 19        	lda	<L431+i_1
 13088 09:AC08: A0 0E 00     	ldy	#$e
 13089 09:AC0B: F7 1D        	sbc	[<L431+current_SuperInterseg2536_1],Y
 13090 09:AC0D: 70 03        	bvs	L447
 13091 09:AC0F: 49 00 80     	eor	#$8000
 13092                        L447:
 13093 09:AC12: 30 03        	bmi	L448
 13094 09:AC14: 82 96 FD     	brl	L10288
 13095                        L448:
 13096                        L10287:
 13097                        ;
 13098                        ;      /* Page suivante */
 13099                        ;      *page_rtn = *page_rtn + 1;
 13100                        	.line	1786
 13101 09:AC17: E2 20        	sep	#$20
 13102                        	longa	off
 13103 09:AC19: A7 30        	lda	[<L430+page_rtn_0]
 13104 09:AC1B: 1A           	ina
 13105 09:AC1C: C2 20        	rep	#$20
 13106                        	longa	on
 13107 09:AC1E: E2 20        	sep	#$20
 13108                        	longa	off
 13109 09:AC20: 87 30        	sta	[<L430+page_rtn_0]
 13110 09:AC22: C2 20        	rep	#$20
 13111                        	longa	on
 13112                        ;
 13113                        ;      /* Longueur du SubRecord */
 13114                        ;      *length_rtn = 1 + current_SuperInterseg2536
                    ->nb_address*sizeof(BYTE);
 13115                        	.line	1789
 13116 09:AC24: A0 0E 00     	ldy	#$e
 13117 09:AC27: B7 1D        	lda	[<L431+current_SuperInterseg2536_1],Y
 13118 09:AC29: 1A           	ina
 13119 09:AC2A: 87 34        	sta	[<L430+length_rtn_0]
 13120                        ;    }
 13121                        	.line	1790
 13122                        L10285:
 13123                        ;
 13124                        ;  /* Renvoie la structure */
 13125                        ;  return(current_SuperInterseg2536);
 13126                        	.line	1793
 13127 09:AC2C: A6 1F        	ldx	<L431+current_SuperInterseg2536_1+2
  Sat Jul 10 2021  1:15                                                Page 242


 13128 09:AC2E: A5 1D        	lda	<L431+current_SuperInterseg2536_1
 13129 09:AC30: 82 E5 FC     	brl	L434
 13130                        ;}
 13131                        	.line	1794
 13132                        	.endblock	1794
 13133             00000020   L430	equ	32
 13134             00000019   L431	equ	25
 13135 09:AC33:              	ends
 13136                        	efunc
 13137                        	.endfunc	1794,25,32
 13138                        	.line	1794
 13139                        ;
 13140                        ;
 13141                        ;/************************************************
                    *******/
 13142                        ;/*  AddReloc() :  On conserve les RELOC de ce Seg
                    ment. */
 13143                        ;/************************************************
                    *******/
 13144                        ;static void AddReloc(BYTE ByteCnt, BYTE BitShiftC
                    nt, DWORD OffsetPatch, DWORD OffsetReference, int origin)
 13145                        ;{
 13146                        	.line	1800
 13147                        	.line	1801
 13148                        	LOADER
 13149                        	func
 13150                        	.function	1801
 13151                        ~~AddReloc:
 13152                        	longa	on
 13153                        	longi	on
 13154 09:AC33: 3B           	tsc
 13155 09:AC34: 38           	sec
 13156 09:AC35: E9 04 00     	sbc	#L449
 13157 09:AC38: 1B           	tcs
 13158 09:AC39: 0B           	phd
 13159 09:AC3A: 5B           	tcd
 13160             00000004   ByteCnt_0	set	4
 13161             00000006   BitShiftCnt_0	set	6
 13162             00000008   OffsetPatch_0	set	8
 13163             0000000C   OffsetReference_0	set	12
 13164             00000010   origin_0	set	16
 13165                        	.block	1801
 13166                        ;  struct omf_reloc *current_reloc;
 13167                        ;
 13168                        ;  /* Allocation d'une structure Reloc */
 13169                        ;  current_reloc = (struct omf_reloc *) k_calloc(1
                    ,sizeof(struct omf_reloc));
 13170             00000000   current_reloc_1	set	0
 13171                        	.sym	current_reloc,0,138,1,32,121
 13172                        	.sym	ByteCnt,4,14,6,8
 13173                        	.sym	BitShiftCnt,6,14,6,8
 13174                        	.sym	OffsetPatch,8,18,6,32
 13175                        	.sym	OffsetReference,12,18,6,32
 13176                        	.sym	origin,16,5,6,16
 13177                        	.line	1805
 13178 09:AC3B: F4 10 00     	pea	#<$10
 13179 09:AC3E: F4 01 00     	pea	#<$1
 13180 09:AC41: 22 xx xx xx  	jsl	~~k_calloc
  Sat Jul 10 2021  1:15                                                Page 243


 13181 09:AC45: 85 01        	sta	<L450+current_reloc_1
 13182 09:AC47: 86 03        	stx	<L450+current_reloc_1+2
 13183                        ;  if(current_reloc == NULL)
 13184                        	.line	1806
 13185                        ;    ;
 13186 09:AC49: A5 01        	lda	<L450+current_reloc_1
 13187 09:AC4B: 05 03        	ora	<L450+current_reloc_1+2
 13188 09:AC4D: F0 03        	beq	L452
 13189 09:AC4F: 82 00 00     	brl	L10292
 13190                        L452:
 13191                        	.line	1807
 13192                        ;
 13193                        ;  /* Ajoute des valeurs */
 13194                        ;  current_reloc->ByteCnt = ByteCnt;
 13195                        L10292:
 13196                        	.line	1810
 13197 09:AC52: E2 20        	sep	#$20
 13198                        	longa	off
 13199 09:AC54: A5 08        	lda	<L449+ByteCnt_0
 13200 09:AC56: 87 01        	sta	[<L450+current_reloc_1]
 13201 09:AC58: C2 20        	rep	#$20
 13202                        	longa	on
 13203                        ;  current_reloc->BitShiftCnt = BitShiftCnt;
 13204                        	.line	1811
 13205 09:AC5A: E2 20        	sep	#$20
 13206                        	longa	off
 13207 09:AC5C: A5 0A        	lda	<L449+BitShiftCnt_0
 13208 09:AC5E: A0 01 00     	ldy	#$1
 13209 09:AC61: 97 01        	sta	[<L450+current_reloc_1],Y
 13210 09:AC63: C2 20        	rep	#$20
 13211                        	longa	on
 13212                        ;  current_reloc->OffsetPatch = OffsetPatch;
 13213                        	.line	1812
 13214 09:AC65: A5 0C        	lda	<L449+OffsetPatch_0
 13215 09:AC67: A0 02 00     	ldy	#$2
 13216 09:AC6A: 97 01        	sta	[<L450+current_reloc_1],Y
 13217 09:AC6C: A5 0E        	lda	<L449+OffsetPatch_0+2
 13218 09:AC6E: A0 04 00     	ldy	#$4
 13219 09:AC71: 97 01        	sta	[<L450+current_reloc_1],Y
 13220                        ;  current_reloc->OffsetReference = OffsetReferenc
                    e;
 13221                        	.line	1813
 13222 09:AC73: A5 10        	lda	<L449+OffsetReference_0
 13223 09:AC75: A0 06 00     	ldy	#$6
 13224 09:AC78: 97 01        	sta	[<L450+current_reloc_1],Y
 13225 09:AC7A: A5 12        	lda	<L449+OffsetReference_0+2
 13226 09:AC7C: A0 08 00     	ldy	#$8
 13227 09:AC7F: 97 01        	sta	[<L450+current_reloc_1],Y
 13228                        ;
 13229                        ;  /* Origine du Reloc */
 13230                        ;  current_reloc->origin = origin;
 13231                        	.line	1816
 13232 09:AC81: A5 14        	lda	<L449+origin_0
 13233 09:AC83: A0 0A 00     	ldy	#$a
 13234 09:AC86: 97 01        	sta	[<L450+current_reloc_1],Y
 13235                        ;
 13236                        ;  /* Conserve la structure */
 13237                        ;  my_Memory(MEMORY_ADD_RELOC,current_reloc,NULL);
  Sat Jul 10 2021  1:15                                                Page 244


 13238                        	.line	1819
 13239 09:AC88: F4 00 00     	pea	#^$0
 13240 09:AC8B: F4 00 00     	pea	#<$0
 13241 09:AC8E: D4 03        	pei	<L450+current_reloc_1+2
 13242 09:AC90: D4 01        	pei	<L450+current_reloc_1
 13243 09:AC92: F4 0A 00     	pea	#<$a
 13244 09:AC95: 22 xx xx xx  	jsl	~~my_Memory
 13245                        ;}
 13246                        	.line	1820
 13247                        L453:
 13248 09:AC99: A5 06        	lda	<L449+2
 13249 09:AC9B: 85 14        	sta	<L449+2+14
 13250 09:AC9D: A5 05        	lda	<L449+1
 13251 09:AC9F: 85 13        	sta	<L449+1+14
 13252 09:ACA1: 2B           	pld
 13253 09:ACA2: 3B           	tsc
 13254 09:ACA3: 18           	clc
 13255 09:ACA4: 69 12 00     	adc	#L449+14
 13256 09:ACA7: 1B           	tcs
 13257 09:ACA8: 6B           	rtl
 13258                        	.endblock	1820
 13259             00000004   L449	equ	4
 13260             00000001   L450	equ	1
 13261 09:ACA9:              	ends
 13262                        	efunc
 13263                        	.endfunc	1820,1,4
 13264                        	.line	1820
 13265                        ;
 13266                        ;
 13267                        ;/************************************************
                    *************/
 13268                        ;/*  AddInterseg() :  On conserve les INTERSEG de 
                    ce Segment. */
 13269                        ;/************************************************
                    *************/
 13270                        ;static void AddInterseg(BYTE ByteCnt, BYTE BitShi
                    ftCnt, DWORD OffsetPatch, DWORD OffsetReference, WORD FileNu
                    m, WORD SegNum, int origin)
 13271                        ;{
 13272                        	.line	1826
 13273                        	.line	1827
 13274                        	LOADER
 13275                        	func
 13276                        	.function	1827
 13277                        ~~AddInterseg:
 13278                        	longa	on
 13279                        	longi	on
 13280 09:ACA9: 3B           	tsc
 13281 09:ACAA: 38           	sec
 13282 09:ACAB: E9 04 00     	sbc	#L454
 13283 09:ACAE: 1B           	tcs
 13284 09:ACAF: 0B           	phd
 13285 09:ACB0: 5B           	tcd
 13286             00000004   ByteCnt_0	set	4
 13287             00000006   BitShiftCnt_0	set	6
 13288             00000008   OffsetPatch_0	set	8
 13289             0000000C   OffsetReference_0	set	12
 13290             00000010   FileNum_0	set	16
  Sat Jul 10 2021  1:15                                                Page 245


 13291             00000012   SegNum_0	set	18
 13292             00000014   origin_0	set	20
 13293                        	.block	1827
 13294                        ;  struct omf_interseg *current_interseg;
 13295                        ;
 13296                        ;  /* Allocation d'une structure Reloc */
 13297                        ;  current_interseg = (struct omf_interseg *) k_ca
                    lloc(1,sizeof(struct omf_interseg));
 13298             00000000   current_interseg_1	set	0
 13299                        	.sym	current_interseg,0,138,1,32,122
 13300                        	.sym	ByteCnt,4,14,6,8
 13301                        	.sym	BitShiftCnt,6,14,6,8
 13302                        	.sym	OffsetPatch,8,18,6,32
 13303                        	.sym	OffsetReference,12,18,6,32
 13304                        	.sym	FileNum,16,5,6,16
 13305                        	.sym	SegNum,18,5,6,16
 13306                        	.sym	origin,20,5,6,16
 13307                        	.line	1831
 13308 09:ACB1: F4 14 00     	pea	#<$14
 13309 09:ACB4: F4 01 00     	pea	#<$1
 13310 09:ACB7: 22 xx xx xx  	jsl	~~k_calloc
 13311 09:ACBB: 85 01        	sta	<L455+current_interseg_1
 13312 09:ACBD: 86 03        	stx	<L455+current_interseg_1+2
 13313                        ;  if(current_interseg == NULL)
 13314                        	.line	1832
 13315                        ;    ;
 13316 09:ACBF: A5 01        	lda	<L455+current_interseg_1
 13317 09:ACC1: 05 03        	ora	<L455+current_interseg_1+2
 13318 09:ACC3: F0 03        	beq	L457
 13319 09:ACC5: 82 00 00     	brl	L10293
 13320                        L457:
 13321                        	.line	1833
 13322                        ;
 13323                        ;  /* Ajoute des valeurs */
 13324                        ;  current_interseg->ByteCnt = ByteCnt;
 13325                        L10293:
 13326                        	.line	1836
 13327 09:ACC8: E2 20        	sep	#$20
 13328                        	longa	off
 13329 09:ACCA: A5 08        	lda	<L454+ByteCnt_0
 13330 09:ACCC: 87 01        	sta	[<L455+current_interseg_1]
 13331 09:ACCE: C2 20        	rep	#$20
 13332                        	longa	on
 13333                        ;  current_interseg->BitShiftCnt = BitShiftCnt;
 13334                        	.line	1837
 13335 09:ACD0: E2 20        	sep	#$20
 13336                        	longa	off
 13337 09:ACD2: A5 0A        	lda	<L454+BitShiftCnt_0
 13338 09:ACD4: A0 01 00     	ldy	#$1
 13339 09:ACD7: 97 01        	sta	[<L455+current_interseg_1],Y
 13340 09:ACD9: C2 20        	rep	#$20
 13341                        	longa	on
 13342                        ;  current_interseg->OffsetPatch = OffsetPatch;
 13343                        	.line	1838
 13344 09:ACDB: A5 0C        	lda	<L454+OffsetPatch_0
 13345 09:ACDD: A0 02 00     	ldy	#$2
 13346 09:ACE0: 97 01        	sta	[<L455+current_interseg_1],Y
 13347 09:ACE2: A5 0E        	lda	<L454+OffsetPatch_0+2
  Sat Jul 10 2021  1:15                                                Page 246


 13348 09:ACE4: A0 04 00     	ldy	#$4
 13349 09:ACE7: 97 01        	sta	[<L455+current_interseg_1],Y
 13350                        ;  current_interseg->OffsetReference = OffsetRefer
                    ence;
 13351                        	.line	1839
 13352 09:ACE9: A5 10        	lda	<L454+OffsetReference_0
 13353 09:ACEB: A0 06 00     	ldy	#$6
 13354 09:ACEE: 97 01        	sta	[<L455+current_interseg_1],Y
 13355 09:ACF0: A5 12        	lda	<L454+OffsetReference_0+2
 13356 09:ACF2: A0 08 00     	ldy	#$8
 13357 09:ACF5: 97 01        	sta	[<L455+current_interseg_1],Y
 13358                        ;  current_interseg->FileNum = FileNum;
 13359                        	.line	1840
 13360 09:ACF7: A5 14        	lda	<L454+FileNum_0
 13361 09:ACF9: A0 0A 00     	ldy	#$a
 13362 09:ACFC: 97 01        	sta	[<L455+current_interseg_1],Y
 13363                        ;  current_interseg->SegNum = SegNum;
 13364                        	.line	1841
 13365 09:ACFE: A5 16        	lda	<L454+SegNum_0
 13366 09:AD00: A0 0C 00     	ldy	#$c
 13367 09:AD03: 97 01        	sta	[<L455+current_interseg_1],Y
 13368                        ;
 13369                        ;  /* Origine du Reloc */
 13370                        ;  current_interseg->origin = origin;
 13371                        	.line	1844
 13372 09:AD05: A5 18        	lda	<L454+origin_0
 13373 09:AD07: A0 0E 00     	ldy	#$e
 13374 09:AD0A: 97 01        	sta	[<L455+current_interseg_1],Y
 13375                        ;
 13376                        ;  /* Conserve la structure */
 13377                        ;  my_Memory(MEMORY_ADD_INTERSEG,current_interseg,
                    NULL);
 13378                        	.line	1847
 13379 09:AD0C: F4 00 00     	pea	#^$0
 13380 09:AD0F: F4 00 00     	pea	#<$0
 13381 09:AD12: D4 03        	pei	<L455+current_interseg_1+2
 13382 09:AD14: D4 01        	pei	<L455+current_interseg_1
 13383 09:AD16: F4 14 00     	pea	#<$14
 13384 09:AD19: 22 xx xx xx  	jsl	~~my_Memory
 13385                        ;}
 13386                        	.line	1848
 13387                        L458:
 13388 09:AD1D: A5 06        	lda	<L454+2
 13389 09:AD1F: 85 18        	sta	<L454+2+18
 13390 09:AD21: A5 05        	lda	<L454+1
 13391 09:AD23: 85 17        	sta	<L454+1+18
 13392 09:AD25: 2B           	pld
 13393 09:AD26: 3B           	tsc
 13394 09:AD27: 18           	clc
 13395 09:AD28: 69 16 00     	adc	#L454+18
 13396 09:AD2B: 1B           	tcs
 13397 09:AD2C: 6B           	rtl
 13398                        	.endblock	1848
 13399             00000004   L454	equ	4
 13400             00000001   L455	equ	1
 13401 09:AD2D:              	ends
 13402                        	efunc
 13403                        	.endfunc	1848,1,4
  Sat Jul 10 2021  1:15                                                Page 247


 13404                        	.line	1848
 13405                        ;
 13406                        ;
 13407                        ;/************************************************
                    *********************/
 13408                        ;/*  mem_free_END() :  Libération mémoire de la st
                    ructure record_END. */
 13409                        ;/************************************************
                    *********************/
 13410                        ;static void mem_free_END(struct record_END *curre
                    nt_record)
 13411                        ;{
 13412                        	.line	1854
 13413                        	.line	1855
 13414                        	LOADER
 13415                        	func
 13416                        	.function	1855
 13417                        ~~mem_free_END:
 13418                        	longa	on
 13419                        	longi	on
 13420 09:AD2D: 3B           	tsc
 13421 09:AD2E: 38           	sec
 13422 09:AD2F: E9 00 00     	sbc	#L459
 13423 09:AD32: 1B           	tcs
 13424 09:AD33: 0B           	phd
 13425 09:AD34: 5B           	tcd
 13426             00000004   current_record_0	set	4
 13427                        	.block	1855
 13428                        ;  if(current_record)
 13429                        	.sym	current_record,4,138,6,32,95
 13430                        	.line	1856
 13431                        ;    {
 13432 09:AD35: A5 04        	lda	<L459+current_record_0
 13433 09:AD37: 05 06        	ora	<L459+current_record_0+2
 13434 09:AD39: D0 03        	bne	L462
 13435 09:AD3B: 82 08 00     	brl	L10294
 13436                        L462:
 13437                        	.line	1857
 13438                        ;      k_free(current_record);
 13439                        	.line	1858
 13440 09:AD3E: D4 06        	pei	<L459+current_record_0+2
 13441 09:AD40: D4 04        	pei	<L459+current_record_0
 13442 09:AD42: 22 xx xx xx  	jsl	~~k_free
 13443                        ;    }
 13444                        	.line	1859
 13445                        ;}
 13446                        L10294:
 13447                        	.line	1860
 13448                        L463:
 13449 09:AD46: A5 02        	lda	<L459+2
 13450 09:AD48: 85 06        	sta	<L459+2+4
 13451 09:AD4A: A5 01        	lda	<L459+1
 13452 09:AD4C: 85 05        	sta	<L459+1+4
 13453 09:AD4E: 2B           	pld
 13454 09:AD4F: 3B           	tsc
 13455 09:AD50: 18           	clc
 13456 09:AD51: 69 04 00     	adc	#L459+4
 13457 09:AD54: 1B           	tcs
  Sat Jul 10 2021  1:15                                                Page 248


 13458 09:AD55: 6B           	rtl
 13459                        	.endblock	1860
 13460             00000000   L459	equ	0
 13461             00000001   L460	equ	1
 13462 09:AD56:              	ends
 13463                        	efunc
 13464                        	.endfunc	1860,1,0
 13465                        	.line	1860
 13466                        ;
 13467                        ;
 13468                        ;/************************************************
                    *************************/
 13469                        ;/*  mem_free_CONST() :  Libération mémoire de la 
                    structure record_CONST. */
 13470                        ;/************************************************
                    *************************/
 13471                        ;static void mem_free_CONST(struct record_CONST *c
                    urrent_record)
 13472                        ;{
 13473                        	.line	1866
 13474                        	.line	1867
 13475                        	LOADER
 13476                        	func
 13477                        	.function	1867
 13478                        ~~mem_free_CONST:
 13479                        	longa	on
 13480                        	longi	on
 13481 09:AD56: 3B           	tsc
 13482 09:AD57: 38           	sec
 13483 09:AD58: E9 00 00     	sbc	#L464
 13484 09:AD5B: 1B           	tcs
 13485 09:AD5C: 0B           	phd
 13486 09:AD5D: 5B           	tcd
 13487             00000004   current_record_0	set	4
 13488                        	.block	1867
 13489                        ;  if(current_record)
 13490                        	.sym	current_record,4,138,6,32,96
 13491                        	.line	1868
 13492                        ;    {
 13493 09:AD5E: A5 04        	lda	<L464+current_record_0
 13494 09:AD60: 05 06        	ora	<L464+current_record_0+2
 13495 09:AD62: D0 03        	bne	L467
 13496 09:AD64: 82 27 00     	brl	L10295
 13497                        L467:
 13498                        	.line	1869
 13499                        ;      if(current_record->data)
 13500                        	.line	1870
 13501                        ;        k_free(current_record->data);
 13502 09:AD67: A0 0A 00     	ldy	#$a
 13503 09:AD6A: B7 04        	lda	[<L464+current_record_0],Y
 13504 09:AD6C: A0 0C 00     	ldy	#$c
 13505 09:AD6F: 17 04        	ora	[<L464+current_record_0],Y
 13506 09:AD71: D0 03        	bne	L468
 13507 09:AD73: 82 10 00     	brl	L10296
 13508                        L468:
 13509                        	.line	1871
 13510 09:AD76: A0 0C 00     	ldy	#$c
 13511 09:AD79: B7 04        	lda	[<L464+current_record_0],Y
  Sat Jul 10 2021  1:15                                                Page 249


 13512 09:AD7B: 48           	pha
 13513 09:AD7C: A0 0A 00     	ldy	#$a
 13514 09:AD7F: B7 04        	lda	[<L464+current_record_0],Y
 13515 09:AD81: 48           	pha
 13516 09:AD82: 22 xx xx xx  	jsl	~~k_free
 13517                        ;
 13518                        ;      k_free(current_record);
 13519                        L10296:
 13520                        	.line	1873
 13521 09:AD86: D4 06        	pei	<L464+current_record_0+2
 13522 09:AD88: D4 04        	pei	<L464+current_record_0
 13523 09:AD8A: 22 xx xx xx  	jsl	~~k_free
 13524                        ;    }
 13525                        	.line	1874
 13526                        ;}
 13527                        L10295:
 13528                        	.line	1875
 13529                        L469:
 13530 09:AD8E: A5 02        	lda	<L464+2
 13531 09:AD90: 85 06        	sta	<L464+2+4
 13532 09:AD92: A5 01        	lda	<L464+1
 13533 09:AD94: 85 05        	sta	<L464+1+4
 13534 09:AD96: 2B           	pld
 13535 09:AD97: 3B           	tsc
 13536 09:AD98: 18           	clc
 13537 09:AD99: 69 04 00     	adc	#L464+4
 13538 09:AD9C: 1B           	tcs
 13539 09:AD9D: 6B           	rtl
 13540                        	.endblock	1875
 13541             00000000   L464	equ	0
 13542             00000001   L465	equ	1
 13543 09:AD9E:              	ends
 13544                        	efunc
 13545                        	.endfunc	1875,1,0
 13546                        	.line	1875
 13547                        ;
 13548                        ;
 13549                        ;/************************************************
                    *************************/
 13550                        ;/*  mem_free_ALIGN() :  Libération mémoire de la 
                    structure record_ALIGN. */
 13551                        ;/************************************************
                    *************************/
 13552                        ;static void mem_free_ALIGN(struct record_ALIGN *c
                    urrent_record)
 13553                        ;{
 13554                        	.line	1881
 13555                        	.line	1882
 13556                        	LOADER
 13557                        	func
 13558                        	.function	1882
 13559                        ~~mem_free_ALIGN:
 13560                        	longa	on
 13561                        	longi	on
 13562 09:AD9E: 3B           	tsc
 13563 09:AD9F: 38           	sec
 13564 09:ADA0: E9 00 00     	sbc	#L470
 13565 09:ADA3: 1B           	tcs
  Sat Jul 10 2021  1:15                                                Page 250


 13566 09:ADA4: 0B           	phd
 13567 09:ADA5: 5B           	tcd
 13568             00000004   current_record_0	set	4
 13569                        	.block	1882
 13570                        ;  if(current_record)
 13571                        	.sym	current_record,4,138,6,32,97
 13572                        	.line	1883
 13573                        ;    {
 13574 09:ADA6: A5 04        	lda	<L470+current_record_0
 13575 09:ADA8: 05 06        	ora	<L470+current_record_0+2
 13576 09:ADAA: D0 03        	bne	L473
 13577 09:ADAC: 82 08 00     	brl	L10297
 13578                        L473:
 13579                        	.line	1884
 13580                        ;      k_free(current_record);
 13581                        	.line	1885
 13582 09:ADAF: D4 06        	pei	<L470+current_record_0+2
 13583 09:ADB1: D4 04        	pei	<L470+current_record_0
 13584 09:ADB3: 22 xx xx xx  	jsl	~~k_free
 13585                        ;    }
 13586                        	.line	1886
 13587                        ;}
 13588                        L10297:
 13589                        	.line	1887
 13590                        L474:
 13591 09:ADB7: A5 02        	lda	<L470+2
 13592 09:ADB9: 85 06        	sta	<L470+2+4
 13593 09:ADBB: A5 01        	lda	<L470+1
 13594 09:ADBD: 85 05        	sta	<L470+1+4
 13595 09:ADBF: 2B           	pld
 13596 09:ADC0: 3B           	tsc
 13597 09:ADC1: 18           	clc
 13598 09:ADC2: 69 04 00     	adc	#L470+4
 13599 09:ADC5: 1B           	tcs
 13600 09:ADC6: 6B           	rtl
 13601                        	.endblock	1887
 13602             00000000   L470	equ	0
 13603             00000001   L471	equ	1
 13604 09:ADC7:              	ends
 13605                        	efunc
 13606                        	.endfunc	1887,1,0
 13607                        	.line	1887
 13608                        ;
 13609                        ;
 13610                        ;/************************************************
                    *********************/
 13611                        ;/*  mem_free_ORG() :  Libération mémoire de la st
                    ructure record_ORG. */
 13612                        ;/************************************************
                    *********************/
 13613                        ;static void mem_free_ORG(struct record_ORG *curre
                    nt_record)
 13614                        ;{
 13615                        	.line	1893
 13616                        	.line	1894
 13617                        	LOADER
 13618                        	func
 13619                        	.function	1894
  Sat Jul 10 2021  1:15                                                Page 251


 13620                        ~~mem_free_ORG:
 13621                        	longa	on
 13622                        	longi	on
 13623 09:ADC7: 3B           	tsc
 13624 09:ADC8: 38           	sec
 13625 09:ADC9: E9 00 00     	sbc	#L475
 13626 09:ADCC: 1B           	tcs
 13627 09:ADCD: 0B           	phd
 13628 09:ADCE: 5B           	tcd
 13629             00000004   current_record_0	set	4
 13630                        	.block	1894
 13631                        ;  if(current_record)
 13632                        	.sym	current_record,4,138,6,32,98
 13633                        	.line	1895
 13634                        ;    {
 13635 09:ADCF: A5 04        	lda	<L475+current_record_0
 13636 09:ADD1: 05 06        	ora	<L475+current_record_0+2
 13637 09:ADD3: D0 03        	bne	L478
 13638 09:ADD5: 82 08 00     	brl	L10298
 13639                        L478:
 13640                        	.line	1896
 13641                        ;      k_free(current_record);
 13642                        	.line	1897
 13643 09:ADD8: D4 06        	pei	<L475+current_record_0+2
 13644 09:ADDA: D4 04        	pei	<L475+current_record_0
 13645 09:ADDC: 22 xx xx xx  	jsl	~~k_free
 13646                        ;    }
 13647                        	.line	1898
 13648                        ;}
 13649                        L10298:
 13650                        	.line	1899
 13651                        L479:
 13652 09:ADE0: A5 02        	lda	<L475+2
 13653 09:ADE2: 85 06        	sta	<L475+2+4
 13654 09:ADE4: A5 01        	lda	<L475+1
 13655 09:ADE6: 85 05        	sta	<L475+1+4
 13656 09:ADE8: 2B           	pld
 13657 09:ADE9: 3B           	tsc
 13658 09:ADEA: 18           	clc
 13659 09:ADEB: 69 04 00     	adc	#L475+4
 13660 09:ADEE: 1B           	tcs
 13661 09:ADEF: 6B           	rtl
 13662                        	.endblock	1899
 13663             00000000   L475	equ	0
 13664             00000001   L476	equ	1
 13665 09:ADF0:              	ends
 13666                        	efunc
 13667                        	.endfunc	1899,1,0
 13668                        	.line	1899
 13669                        ;
 13670                        ;
 13671                        ;/************************************************
                    *************************/
 13672                        ;/*  mem_free_RELOC() :  Libération mémoire de la 
                    structure record_RELOC. */
 13673                        ;/************************************************
                    *************************/
 13674                        ;static void mem_free_RELOC(struct record_RELOC *c
  Sat Jul 10 2021  1:15                                                Page 252


                    urrent_record)
 13675                        ;{
 13676                        	.line	1905
 13677                        	.line	1906
 13678                        	LOADER
 13679                        	func
 13680                        	.function	1906
 13681                        ~~mem_free_RELOC:
 13682                        	longa	on
 13683                        	longi	on
 13684 09:ADF0: 3B           	tsc
 13685 09:ADF1: 38           	sec
 13686 09:ADF2: E9 00 00     	sbc	#L480
 13687 09:ADF5: 1B           	tcs
 13688 09:ADF6: 0B           	phd
 13689 09:ADF7: 5B           	tcd
 13690             00000004   current_record_0	set	4
 13691                        	.block	1906
 13692                        ;  if(current_record)
 13693                        	.sym	current_record,4,138,6,32,99
 13694                        	.line	1907
 13695                        ;    {
 13696 09:ADF8: A5 04        	lda	<L480+current_record_0
 13697 09:ADFA: 05 06        	ora	<L480+current_record_0+2
 13698 09:ADFC: D0 03        	bne	L483
 13699 09:ADFE: 82 08 00     	brl	L10299
 13700                        L483:
 13701                        	.line	1908
 13702                        ;      k_free(current_record);
 13703                        	.line	1909
 13704 09:AE01: D4 06        	pei	<L480+current_record_0+2
 13705 09:AE03: D4 04        	pei	<L480+current_record_0
 13706 09:AE05: 22 xx xx xx  	jsl	~~k_free
 13707                        ;    }
 13708                        	.line	1910
 13709                        ;}
 13710                        L10299:
 13711                        	.line	1911
 13712                        L484:
 13713 09:AE09: A5 02        	lda	<L480+2
 13714 09:AE0B: 85 06        	sta	<L480+2+4
 13715 09:AE0D: A5 01        	lda	<L480+1
 13716 09:AE0F: 85 05        	sta	<L480+1+4
 13717 09:AE11: 2B           	pld
 13718 09:AE12: 3B           	tsc
 13719 09:AE13: 18           	clc
 13720 09:AE14: 69 04 00     	adc	#L480+4
 13721 09:AE17: 1B           	tcs
 13722 09:AE18: 6B           	rtl
 13723                        	.endblock	1911
 13724             00000000   L480	equ	0
 13725             00000001   L481	equ	1
 13726 09:AE19:              	ends
 13727                        	efunc
 13728                        	.endfunc	1911,1,0
 13729                        	.line	1911
 13730                        ;
 13731                        ;
  Sat Jul 10 2021  1:15                                                Page 253


 13732                        ;/************************************************
                    *******************************/
 13733                        ;/*  mem_free_INTERSEG() :  Libération mémoire de 
                    la structure record_INTERSEG. */
 13734                        ;/************************************************
                    *******************************/
 13735                        ;static void mem_free_INTERSEG(struct record_INTER
                    SEG *current_record)
 13736                        ;{
 13737                        	.line	1917
 13738                        	.line	1918
 13739                        	LOADER
 13740                        	func
 13741                        	.function	1918
 13742                        ~~mem_free_INTERSEG:
 13743                        	longa	on
 13744                        	longi	on
 13745 09:AE19: 3B           	tsc
 13746 09:AE1A: 38           	sec
 13747 09:AE1B: E9 00 00     	sbc	#L485
 13748 09:AE1E: 1B           	tcs
 13749 09:AE1F: 0B           	phd
 13750 09:AE20: 5B           	tcd
 13751             00000004   current_record_0	set	4
 13752                        	.block	1918
 13753                        ;  if(current_record)
 13754                        	.sym	current_record,4,138,6,32,100
 13755                        	.line	1919
 13756                        ;    {
 13757 09:AE21: A5 04        	lda	<L485+current_record_0
 13758 09:AE23: 05 06        	ora	<L485+current_record_0+2
 13759 09:AE25: D0 03        	bne	L488
 13760 09:AE27: 82 08 00     	brl	L10300
 13761                        L488:
 13762                        	.line	1920
 13763                        ;      k_free(current_record);
 13764                        	.line	1921
 13765 09:AE2A: D4 06        	pei	<L485+current_record_0+2
 13766 09:AE2C: D4 04        	pei	<L485+current_record_0
 13767 09:AE2E: 22 xx xx xx  	jsl	~~k_free
 13768                        ;    }
 13769                        	.line	1922
 13770                        ;}
 13771                        L10300:
 13772                        	.line	1923
 13773                        L489:
 13774 09:AE32: A5 02        	lda	<L485+2
 13775 09:AE34: 85 06        	sta	<L485+2+4
 13776 09:AE36: A5 01        	lda	<L485+1
 13777 09:AE38: 85 05        	sta	<L485+1+4
 13778 09:AE3A: 2B           	pld
 13779 09:AE3B: 3B           	tsc
 13780 09:AE3C: 18           	clc
 13781 09:AE3D: 69 04 00     	adc	#L485+4
 13782 09:AE40: 1B           	tcs
 13783 09:AE41: 6B           	rtl
 13784                        	.endblock	1923
 13785             00000000   L485	equ	0
  Sat Jul 10 2021  1:15                                                Page 254


 13786             00000001   L486	equ	1
 13787 09:AE42:              	ends
 13788                        	efunc
 13789                        	.endfunc	1923,1,0
 13790                        	.line	1923
 13791                        ;
 13792                        ;
 13793                        ;/************************************************
                    *************************/
 13794                        ;/*  mem_free_USING() :  Libération mémoire de la 
                    structure record_USING. */
 13795                        ;/************************************************
                    *************************/
 13796                        ;static void mem_free_USING(struct record_USING *c
                    urrent_record)
 13797                        ;{
 13798                        	.line	1929
 13799                        	.line	1930
 13800                        	LOADER
 13801                        	func
 13802                        	.function	1930
 13803                        ~~mem_free_USING:
 13804                        	longa	on
 13805                        	longi	on
 13806 09:AE42: 3B           	tsc
 13807 09:AE43: 38           	sec
 13808 09:AE44: E9 00 00     	sbc	#L490
 13809 09:AE47: 1B           	tcs
 13810 09:AE48: 0B           	phd
 13811 09:AE49: 5B           	tcd
 13812             00000004   current_record_0	set	4
 13813                        	.block	1930
 13814                        ;  if(current_record)
 13815                        	.sym	current_record,4,138,6,32,101
 13816                        	.line	1931
 13817                        ;    {
 13818 09:AE4A: A5 04        	lda	<L490+current_record_0
 13819 09:AE4C: 05 06        	ora	<L490+current_record_0+2
 13820 09:AE4E: D0 03        	bne	L493
 13821 09:AE50: 82 08 00     	brl	L10301
 13822                        L493:
 13823                        	.line	1932
 13824                        ;      k_free(current_record);
 13825                        	.line	1933
 13826 09:AE53: D4 06        	pei	<L490+current_record_0+2
 13827 09:AE55: D4 04        	pei	<L490+current_record_0
 13828 09:AE57: 22 xx xx xx  	jsl	~~k_free
 13829                        ;    }
 13830                        	.line	1934
 13831                        ;}
 13832                        L10301:
 13833                        	.line	1935
 13834                        L494:
 13835 09:AE5B: A5 02        	lda	<L490+2
 13836 09:AE5D: 85 06        	sta	<L490+2+4
 13837 09:AE5F: A5 01        	lda	<L490+1
 13838 09:AE61: 85 05        	sta	<L490+1+4
 13839 09:AE63: 2B           	pld
  Sat Jul 10 2021  1:15                                                Page 255


 13840 09:AE64: 3B           	tsc
 13841 09:AE65: 18           	clc
 13842 09:AE66: 69 04 00     	adc	#L490+4
 13843 09:AE69: 1B           	tcs
 13844 09:AE6A: 6B           	rtl
 13845                        	.endblock	1935
 13846             00000000   L490	equ	0
 13847             00000001   L491	equ	1
 13848 09:AE6B:              	ends
 13849                        	efunc
 13850                        	.endfunc	1935,1,0
 13851                        	.line	1935
 13852                        ;
 13853                        ;
 13854                        ;/************************************************
                    ***************************/
 13855                        ;/*  mem_free_STRONG() :  Libération mémoire de la
                     structure record_STRONG. */
 13856                        ;/************************************************
                    ***************************/
 13857                        ;static void mem_free_STRONG(struct record_STRONG 
                    *current_record)
 13858                        ;{
 13859                        	.line	1941
 13860                        	.line	1942
 13861                        	LOADER
 13862                        	func
 13863                        	.function	1942
 13864                        ~~mem_free_STRONG:
 13865                        	longa	on
 13866                        	longi	on
 13867 09:AE6B: 3B           	tsc
 13868 09:AE6C: 38           	sec
 13869 09:AE6D: E9 00 00     	sbc	#L495
 13870 09:AE70: 1B           	tcs
 13871 09:AE71: 0B           	phd
 13872 09:AE72: 5B           	tcd
 13873             00000004   current_record_0	set	4
 13874                        	.block	1942
 13875                        ;  if(current_record)
 13876                        	.sym	current_record,4,138,6,32,102
 13877                        	.line	1943
 13878                        ;    {
 13879 09:AE73: A5 04        	lda	<L495+current_record_0
 13880 09:AE75: 05 06        	ora	<L495+current_record_0+2
 13881 09:AE77: D0 03        	bne	L498
 13882 09:AE79: 82 08 00     	brl	L10302
 13883                        L498:
 13884                        	.line	1944
 13885                        ;      k_free(current_record);
 13886                        	.line	1945
 13887 09:AE7C: D4 06        	pei	<L495+current_record_0+2
 13888 09:AE7E: D4 04        	pei	<L495+current_record_0
 13889 09:AE80: 22 xx xx xx  	jsl	~~k_free
 13890                        ;    }
 13891                        	.line	1946
 13892                        ;}
 13893                        L10302:
  Sat Jul 10 2021  1:15                                                Page 256


 13894                        	.line	1947
 13895                        L499:
 13896 09:AE84: A5 02        	lda	<L495+2
 13897 09:AE86: 85 06        	sta	<L495+2+4
 13898 09:AE88: A5 01        	lda	<L495+1
 13899 09:AE8A: 85 05        	sta	<L495+1+4
 13900 09:AE8C: 2B           	pld
 13901 09:AE8D: 3B           	tsc
 13902 09:AE8E: 18           	clc
 13903 09:AE8F: 69 04 00     	adc	#L495+4
 13904 09:AE92: 1B           	tcs
 13905 09:AE93: 6B           	rtl
 13906                        	.endblock	1947
 13907             00000000   L495	equ	0
 13908             00000001   L496	equ	1
 13909 09:AE94:              	ends
 13910                        	efunc
 13911                        	.endfunc	1947,1,0
 13912                        	.line	1947
 13913                        ;
 13914                        ;
 13915                        ;/************************************************
                    ***************************/
 13916                        ;/*  mem_free_GLOBAL() :  Libération mémoire de la
                     structure record_GLOBAL. */
 13917                        ;/************************************************
                    ***************************/
 13918                        ;static void mem_free_GLOBAL(struct record_GLOBAL 
                    *current_record)
 13919                        ;{
 13920                        	.line	1953
 13921                        	.line	1954
 13922                        	LOADER
 13923                        	func
 13924                        	.function	1954
 13925                        ~~mem_free_GLOBAL:
 13926                        	longa	on
 13927                        	longi	on
 13928 09:AE94: 3B           	tsc
 13929 09:AE95: 38           	sec
 13930 09:AE96: E9 00 00     	sbc	#L500
 13931 09:AE99: 1B           	tcs
 13932 09:AE9A: 0B           	phd
 13933 09:AE9B: 5B           	tcd
 13934             00000004   current_record_0	set	4
 13935                        	.block	1954
 13936                        ;  if(current_record)
 13937                        	.sym	current_record,4,138,6,32,103
 13938                        	.line	1955
 13939                        ;    {
 13940 09:AE9C: A5 04        	lda	<L500+current_record_0
 13941 09:AE9E: 05 06        	ora	<L500+current_record_0+2
 13942 09:AEA0: D0 03        	bne	L503
 13943 09:AEA2: 82 08 00     	brl	L10303
 13944                        L503:
 13945                        	.line	1956
 13946                        ;      k_free(current_record);
 13947                        	.line	1957
  Sat Jul 10 2021  1:15                                                Page 257


 13948 09:AEA5: D4 06        	pei	<L500+current_record_0+2
 13949 09:AEA7: D4 04        	pei	<L500+current_record_0
 13950 09:AEA9: 22 xx xx xx  	jsl	~~k_free
 13951                        ;    }
 13952                        	.line	1958
 13953                        ;}
 13954                        L10303:
 13955                        	.line	1959
 13956                        L504:
 13957 09:AEAD: A5 02        	lda	<L500+2
 13958 09:AEAF: 85 06        	sta	<L500+2+4
 13959 09:AEB1: A5 01        	lda	<L500+1
 13960 09:AEB3: 85 05        	sta	<L500+1+4
 13961 09:AEB5: 2B           	pld
 13962 09:AEB6: 3B           	tsc
 13963 09:AEB7: 18           	clc
 13964 09:AEB8: 69 04 00     	adc	#L500+4
 13965 09:AEBB: 1B           	tcs
 13966 09:AEBC: 6B           	rtl
 13967                        	.endblock	1959
 13968             00000000   L500	equ	0
 13969             00000001   L501	equ	1
 13970 09:AEBD:              	ends
 13971                        	efunc
 13972                        	.endfunc	1959,1,0
 13973                        	.line	1959
 13974                        ;
 13975                        ;
 13976                        ;/************************************************
                    ***********************/
 13977                        ;/*  mem_free_GEQU() :  Libération mémoire de la s
                    tructure record_GEQU. */
 13978                        ;/************************************************
                    ***********************/
 13979                        ;static void mem_free_GEQU(struct record_GEQU *cur
                    rent_record)
 13980                        ;{
 13981                        	.line	1965
 13982                        	.line	1966
 13983                        	LOADER
 13984                        	func
 13985                        	.function	1966
 13986                        ~~mem_free_GEQU:
 13987                        	longa	on
 13988                        	longi	on
 13989 09:AEBD: 3B           	tsc
 13990 09:AEBE: 38           	sec
 13991 09:AEBF: E9 00 00     	sbc	#L505
 13992 09:AEC2: 1B           	tcs
 13993 09:AEC3: 0B           	phd
 13994 09:AEC4: 5B           	tcd
 13995             00000004   current_record_0	set	4
 13996                        	.block	1966
 13997                        ;  if(current_record)
 13998                        	.sym	current_record,4,138,6,32,104
 13999                        	.line	1967
 14000                        ;    {
 14001 09:AEC5: A5 04        	lda	<L505+current_record_0
  Sat Jul 10 2021  1:15                                                Page 258


 14002 09:AEC7: 05 06        	ora	<L505+current_record_0+2
 14003 09:AEC9: D0 03        	bne	L508
 14004 09:AECB: 82 08 00     	brl	L10304
 14005                        L508:
 14006                        	.line	1968
 14007                        ;      k_free(current_record);
 14008                        	.line	1969
 14009 09:AECE: D4 06        	pei	<L505+current_record_0+2
 14010 09:AED0: D4 04        	pei	<L505+current_record_0
 14011 09:AED2: 22 xx xx xx  	jsl	~~k_free
 14012                        ;    }
 14013                        	.line	1970
 14014                        ;}
 14015                        L10304:
 14016                        	.line	1971
 14017                        L509:
 14018 09:AED6: A5 02        	lda	<L505+2
 14019 09:AED8: 85 06        	sta	<L505+2+4
 14020 09:AEDA: A5 01        	lda	<L505+1
 14021 09:AEDC: 85 05        	sta	<L505+1+4
 14022 09:AEDE: 2B           	pld
 14023 09:AEDF: 3B           	tsc
 14024 09:AEE0: 18           	clc
 14025 09:AEE1: 69 04 00     	adc	#L505+4
 14026 09:AEE4: 1B           	tcs
 14027 09:AEE5: 6B           	rtl
 14028                        	.endblock	1971
 14029             00000000   L505	equ	0
 14030             00000001   L506	equ	1
 14031 09:AEE6:              	ends
 14032                        	efunc
 14033                        	.endfunc	1971,1,0
 14034                        	.line	1971
 14035                        ;
 14036                        ;
 14037                        ;/************************************************
                    *********************/
 14038                        ;/*  mem_free_MEM() :  Libération mémoire de la st
                    ructure record_MEM. */
 14039                        ;/************************************************
                    *********************/
 14040                        ;static void mem_free_MEM(struct record_MEM *curre
                    nt_record)
 14041                        ;{
 14042                        	.line	1977
 14043                        	.line	1978
 14044                        	LOADER
 14045                        	func
 14046                        	.function	1978
 14047                        ~~mem_free_MEM:
 14048                        	longa	on
 14049                        	longi	on
 14050 09:AEE6: 3B           	tsc
 14051 09:AEE7: 38           	sec
 14052 09:AEE8: E9 00 00     	sbc	#L510
 14053 09:AEEB: 1B           	tcs
 14054 09:AEEC: 0B           	phd
 14055 09:AEED: 5B           	tcd
  Sat Jul 10 2021  1:15                                                Page 259


 14056             00000004   current_record_0	set	4
 14057                        	.block	1978
 14058                        ;  if(current_record)
 14059                        	.sym	current_record,4,138,6,32,105
 14060                        	.line	1979
 14061                        ;    {
 14062 09:AEEE: A5 04        	lda	<L510+current_record_0
 14063 09:AEF0: 05 06        	ora	<L510+current_record_0+2
 14064 09:AEF2: D0 03        	bne	L513
 14065 09:AEF4: 82 08 00     	brl	L10305
 14066                        L513:
 14067                        	.line	1980
 14068                        ;      k_free(current_record);
 14069                        	.line	1981
 14070 09:AEF7: D4 06        	pei	<L510+current_record_0+2
 14071 09:AEF9: D4 04        	pei	<L510+current_record_0
 14072 09:AEFB: 22 xx xx xx  	jsl	~~k_free
 14073                        ;    }
 14074                        	.line	1982
 14075                        ;}
 14076                        L10305:
 14077                        	.line	1983
 14078                        L514:
 14079 09:AEFF: A5 02        	lda	<L510+2
 14080 09:AF01: 85 06        	sta	<L510+2+4
 14081 09:AF03: A5 01        	lda	<L510+1
 14082 09:AF05: 85 05        	sta	<L510+1+4
 14083 09:AF07: 2B           	pld
 14084 09:AF08: 3B           	tsc
 14085 09:AF09: 18           	clc
 14086 09:AF0A: 69 04 00     	adc	#L510+4
 14087 09:AF0D: 1B           	tcs
 14088 09:AF0E: 6B           	rtl
 14089                        	.endblock	1983
 14090             00000000   L510	equ	0
 14091             00000001   L511	equ	1
 14092 09:AF0F:              	ends
 14093                        	efunc
 14094                        	.endfunc	1983,1,0
 14095                        	.line	1983
 14096                        ;
 14097                        ;
 14098                        ;/************************************************
                    ***********************/
 14099                        ;/*  mem_free_EXPR() :  Libération mémoire de la s
                    tructure record_EXPR. */
 14100                        ;/************************************************
                    ***********************/
 14101                        ;static void mem_free_EXPR(struct record_EXPR *cur
                    rent_record)
 14102                        ;{
 14103                        	.line	1989
 14104                        	.line	1990
 14105                        	LOADER
 14106                        	func
 14107                        	.function	1990
 14108                        ~~mem_free_EXPR:
 14109                        	longa	on
  Sat Jul 10 2021  1:15                                                Page 260


 14110                        	longi	on
 14111 09:AF0F: 3B           	tsc
 14112 09:AF10: 38           	sec
 14113 09:AF11: E9 00 00     	sbc	#L515
 14114 09:AF14: 1B           	tcs
 14115 09:AF15: 0B           	phd
 14116 09:AF16: 5B           	tcd
 14117             00000004   current_record_0	set	4
 14118                        	.block	1990
 14119                        ;  if(current_record)
 14120                        	.sym	current_record,4,138,6,32,106
 14121                        	.line	1991
 14122                        ;    {
 14123 09:AF17: A5 04        	lda	<L515+current_record_0
 14124 09:AF19: 05 06        	ora	<L515+current_record_0+2
 14125 09:AF1B: D0 03        	bne	L518
 14126 09:AF1D: 82 08 00     	brl	L10306
 14127                        L518:
 14128                        	.line	1992
 14129                        ;      k_free(current_record);
 14130                        	.line	1993
 14131 09:AF20: D4 06        	pei	<L515+current_record_0+2
 14132 09:AF22: D4 04        	pei	<L515+current_record_0
 14133 09:AF24: 22 xx xx xx  	jsl	~~k_free
 14134                        ;    }
 14135                        	.line	1994
 14136                        ;}
 14137                        L10306:
 14138                        	.line	1995
 14139                        L519:
 14140 09:AF28: A5 02        	lda	<L515+2
 14141 09:AF2A: 85 06        	sta	<L515+2+4
 14142 09:AF2C: A5 01        	lda	<L515+1
 14143 09:AF2E: 85 05        	sta	<L515+1+4
 14144 09:AF30: 2B           	pld
 14145 09:AF31: 3B           	tsc
 14146 09:AF32: 18           	clc
 14147 09:AF33: 69 04 00     	adc	#L515+4
 14148 09:AF36: 1B           	tcs
 14149 09:AF37: 6B           	rtl
 14150                        	.endblock	1995
 14151             00000000   L515	equ	0
 14152             00000001   L516	equ	1
 14153 09:AF38:              	ends
 14154                        	efunc
 14155                        	.endfunc	1995,1,0
 14156                        	.line	1995
 14157                        ;
 14158                        ;
 14159                        ;/************************************************
                    *************************/
 14160                        ;/*  mem_free_ZEXPR() :  Libération mémoire de la 
                    structure record_ZEXPR. */
 14161                        ;/************************************************
                    *************************/
 14162                        ;static void mem_free_ZEXPR(struct record_ZEXPR *c
                    urrent_record)
 14163                        ;{
  Sat Jul 10 2021  1:15                                                Page 261


 14164                        	.line	2001
 14165                        	.line	2002
 14166                        	LOADER
 14167                        	func
 14168                        	.function	2002
 14169                        ~~mem_free_ZEXPR:
 14170                        	longa	on
 14171                        	longi	on
 14172 09:AF38: 3B           	tsc
 14173 09:AF39: 38           	sec
 14174 09:AF3A: E9 00 00     	sbc	#L520
 14175 09:AF3D: 1B           	tcs
 14176 09:AF3E: 0B           	phd
 14177 09:AF3F: 5B           	tcd
 14178             00000004   current_record_0	set	4
 14179                        	.block	2002
 14180                        ;  if(current_record)
 14181                        	.sym	current_record,4,138,6,32,107
 14182                        	.line	2003
 14183                        ;    {
 14184 09:AF40: A5 04        	lda	<L520+current_record_0
 14185 09:AF42: 05 06        	ora	<L520+current_record_0+2
 14186 09:AF44: D0 03        	bne	L523
 14187 09:AF46: 82 08 00     	brl	L10307
 14188                        L523:
 14189                        	.line	2004
 14190                        ;      k_free(current_record);
 14191                        	.line	2005
 14192 09:AF49: D4 06        	pei	<L520+current_record_0+2
 14193 09:AF4B: D4 04        	pei	<L520+current_record_0
 14194 09:AF4D: 22 xx xx xx  	jsl	~~k_free
 14195                        ;    }
 14196                        	.line	2006
 14197                        ;}
 14198                        L10307:
 14199                        	.line	2007
 14200                        L524:
 14201 09:AF51: A5 02        	lda	<L520+2
 14202 09:AF53: 85 06        	sta	<L520+2+4
 14203 09:AF55: A5 01        	lda	<L520+1
 14204 09:AF57: 85 05        	sta	<L520+1+4
 14205 09:AF59: 2B           	pld
 14206 09:AF5A: 3B           	tsc
 14207 09:AF5B: 18           	clc
 14208 09:AF5C: 69 04 00     	adc	#L520+4
 14209 09:AF5F: 1B           	tcs
 14210 09:AF60: 6B           	rtl
 14211                        	.endblock	2007
 14212             00000000   L520	equ	0
 14213             00000001   L521	equ	1
 14214 09:AF61:              	ends
 14215                        	efunc
 14216                        	.endfunc	2007,1,0
 14217                        	.line	2007
 14218                        ;
 14219                        ;
 14220                        ;/************************************************
                    *************************/
  Sat Jul 10 2021  1:15                                                Page 262


 14221                        ;/*  mem_free_BEXPR() :  Libération mémoire de la 
                    structure record_BEXPR. */
 14222                        ;/************************************************
                    *************************/
 14223                        ;static void mem_free_BEXPR(struct record_BEXPR *c
                    urrent_record)
 14224                        ;{
 14225                        	.line	2013
 14226                        	.line	2014
 14227                        	LOADER
 14228                        	func
 14229                        	.function	2014
 14230                        ~~mem_free_BEXPR:
 14231                        	longa	on
 14232                        	longi	on
 14233 09:AF61: 3B           	tsc
 14234 09:AF62: 38           	sec
 14235 09:AF63: E9 00 00     	sbc	#L525
 14236 09:AF66: 1B           	tcs
 14237 09:AF67: 0B           	phd
 14238 09:AF68: 5B           	tcd
 14239             00000004   current_record_0	set	4
 14240                        	.block	2014
 14241                        ;  if(current_record)
 14242                        	.sym	current_record,4,138,6,32,108
 14243                        	.line	2015
 14244                        ;    {
 14245 09:AF69: A5 04        	lda	<L525+current_record_0
 14246 09:AF6B: 05 06        	ora	<L525+current_record_0+2
 14247 09:AF6D: D0 03        	bne	L528
 14248 09:AF6F: 82 08 00     	brl	L10308
 14249                        L528:
 14250                        	.line	2016
 14251                        ;      k_free(current_record);
 14252                        	.line	2017
 14253 09:AF72: D4 06        	pei	<L525+current_record_0+2
 14254 09:AF74: D4 04        	pei	<L525+current_record_0
 14255 09:AF76: 22 xx xx xx  	jsl	~~k_free
 14256                        ;    }
 14257                        	.line	2018
 14258                        ;}
 14259                        L10308:
 14260                        	.line	2019
 14261                        L529:
 14262 09:AF7A: A5 02        	lda	<L525+2
 14263 09:AF7C: 85 06        	sta	<L525+2+4
 14264 09:AF7E: A5 01        	lda	<L525+1
 14265 09:AF80: 85 05        	sta	<L525+1+4
 14266 09:AF82: 2B           	pld
 14267 09:AF83: 3B           	tsc
 14268 09:AF84: 18           	clc
 14269 09:AF85: 69 04 00     	adc	#L525+4
 14270 09:AF88: 1B           	tcs
 14271 09:AF89: 6B           	rtl
 14272                        	.endblock	2019
 14273             00000000   L525	equ	0
 14274             00000001   L526	equ	1
 14275 09:AF8A:              	ends
  Sat Jul 10 2021  1:15                                                Page 263


 14276                        	efunc
 14277                        	.endfunc	2019,1,0
 14278                        	.line	2019
 14279                        ;
 14280                        ;
 14281                        ;/************************************************
                    *****************************/
 14282                        ;/*  mem_free_RELEXPR() :  Libération mémoire de l
                    a structure record_RELEXPR. */
 14283                        ;/************************************************
                    *****************************/
 14284                        ;static void mem_free_RELEXPR(struct record_RELEXP
                    R *current_record)
 14285                        ;{
 14286                        	.line	2025
 14287                        	.line	2026
 14288                        	LOADER
 14289                        	func
 14290                        	.function	2026
 14291                        ~~mem_free_RELEXPR:
 14292                        	longa	on
 14293                        	longi	on
 14294 09:AF8A: 3B           	tsc
 14295 09:AF8B: 38           	sec
 14296 09:AF8C: E9 00 00     	sbc	#L530
 14297 09:AF8F: 1B           	tcs
 14298 09:AF90: 0B           	phd
 14299 09:AF91: 5B           	tcd
 14300             00000004   current_record_0	set	4
 14301                        	.block	2026
 14302                        ;  if(current_record)
 14303                        	.sym	current_record,4,138,6,32,109
 14304                        	.line	2027
 14305                        ;    {
 14306 09:AF92: A5 04        	lda	<L530+current_record_0
 14307 09:AF94: 05 06        	ora	<L530+current_record_0+2
 14308 09:AF96: D0 03        	bne	L533
 14309 09:AF98: 82 08 00     	brl	L10309
 14310                        L533:
 14311                        	.line	2028
 14312                        ;      k_free(current_record);
 14313                        	.line	2029
 14314 09:AF9B: D4 06        	pei	<L530+current_record_0+2
 14315 09:AF9D: D4 04        	pei	<L530+current_record_0
 14316 09:AF9F: 22 xx xx xx  	jsl	~~k_free
 14317                        ;    }
 14318                        	.line	2030
 14319                        ;}
 14320                        L10309:
 14321                        	.line	2031
 14322                        L534:
 14323 09:AFA3: A5 02        	lda	<L530+2
 14324 09:AFA5: 85 06        	sta	<L530+2+4
 14325 09:AFA7: A5 01        	lda	<L530+1
 14326 09:AFA9: 85 05        	sta	<L530+1+4
 14327 09:AFAB: 2B           	pld
 14328 09:AFAC: 3B           	tsc
 14329 09:AFAD: 18           	clc
  Sat Jul 10 2021  1:15                                                Page 264


 14330 09:AFAE: 69 04 00     	adc	#L530+4
 14331 09:AFB1: 1B           	tcs
 14332 09:AFB2: 6B           	rtl
 14333                        	.endblock	2031
 14334             00000000   L530	equ	0
 14335             00000001   L531	equ	1
 14336 09:AFB3:              	ends
 14337                        	efunc
 14338                        	.endfunc	2031,1,0
 14339                        	.line	2031
 14340                        ;
 14341                        ;
 14342                        ;/************************************************
                    *************************/
 14343                        ;/*  mem_free_LOCAL() :  Libération mémoire de la 
                    structure record_LOCAL. */
 14344                        ;/************************************************
                    *************************/
 14345                        ;static void mem_free_LOCAL(struct record_LOCAL *c
                    urrent_record)
 14346                        ;{
 14347                        	.line	2037
 14348                        	.line	2038
 14349                        	LOADER
 14350                        	func
 14351                        	.function	2038
 14352                        ~~mem_free_LOCAL:
 14353                        	longa	on
 14354                        	longi	on
 14355 09:AFB3: 3B           	tsc
 14356 09:AFB4: 38           	sec
 14357 09:AFB5: E9 00 00     	sbc	#L535
 14358 09:AFB8: 1B           	tcs
 14359 09:AFB9: 0B           	phd
 14360 09:AFBA: 5B           	tcd
 14361             00000004   current_record_0	set	4
 14362                        	.block	2038
 14363                        ;  if(current_record)
 14364                        	.sym	current_record,4,138,6,32,110
 14365                        	.line	2039
 14366                        ;    {
 14367 09:AFBB: A5 04        	lda	<L535+current_record_0
 14368 09:AFBD: 05 06        	ora	<L535+current_record_0+2
 14369 09:AFBF: D0 03        	bne	L538
 14370 09:AFC1: 82 08 00     	brl	L10310
 14371                        L538:
 14372                        	.line	2040
 14373                        ;      k_free(current_record);
 14374                        	.line	2041
 14375 09:AFC4: D4 06        	pei	<L535+current_record_0+2
 14376 09:AFC6: D4 04        	pei	<L535+current_record_0
 14377 09:AFC8: 22 xx xx xx  	jsl	~~k_free
 14378                        ;    }
 14379                        	.line	2042
 14380                        ;}
 14381                        L10310:
 14382                        	.line	2043
 14383                        L539:
  Sat Jul 10 2021  1:15                                                Page 265


 14384 09:AFCC: A5 02        	lda	<L535+2
 14385 09:AFCE: 85 06        	sta	<L535+2+4
 14386 09:AFD0: A5 01        	lda	<L535+1
 14387 09:AFD2: 85 05        	sta	<L535+1+4
 14388 09:AFD4: 2B           	pld
 14389 09:AFD5: 3B           	tsc
 14390 09:AFD6: 18           	clc
 14391 09:AFD7: 69 04 00     	adc	#L535+4
 14392 09:AFDA: 1B           	tcs
 14393 09:AFDB: 6B           	rtl
 14394                        	.endblock	2043
 14395             00000000   L535	equ	0
 14396             00000001   L536	equ	1
 14397 09:AFDC:              	ends
 14398                        	efunc
 14399                        	.endfunc	2043,1,0
 14400                        	.line	2043
 14401                        ;
 14402                        ;
 14403                        ;/************************************************
                    *********************/
 14404                        ;/*  mem_free_EQU() :  Libération mémoire de la st
                    ructure record_EQU. */
 14405                        ;/************************************************
                    *********************/
 14406                        ;static void mem_free_EQU(struct record_EQU *curre
                    nt_record)
 14407                        ;{
 14408                        	.line	2049
 14409                        	.line	2050
 14410                        	LOADER
 14411                        	func
 14412                        	.function	2050
 14413                        ~~mem_free_EQU:
 14414                        	longa	on
 14415                        	longi	on
 14416 09:AFDC: 3B           	tsc
 14417 09:AFDD: 38           	sec
 14418 09:AFDE: E9 00 00     	sbc	#L540
 14419 09:AFE1: 1B           	tcs
 14420 09:AFE2: 0B           	phd
 14421 09:AFE3: 5B           	tcd
 14422             00000004   current_record_0	set	4
 14423                        	.block	2050
 14424                        ;  if(current_record)
 14425                        	.sym	current_record,4,138,6,32,111
 14426                        	.line	2051
 14427                        ;    {
 14428 09:AFE4: A5 04        	lda	<L540+current_record_0
 14429 09:AFE6: 05 06        	ora	<L540+current_record_0+2
 14430 09:AFE8: D0 03        	bne	L543
 14431 09:AFEA: 82 08 00     	brl	L10311
 14432                        L543:
 14433                        	.line	2052
 14434                        ;      k_free(current_record);
 14435                        	.line	2053
 14436 09:AFED: D4 06        	pei	<L540+current_record_0+2
 14437 09:AFEF: D4 04        	pei	<L540+current_record_0
  Sat Jul 10 2021  1:15                                                Page 266


 14438 09:AFF1: 22 xx xx xx  	jsl	~~k_free
 14439                        ;    }
 14440                        	.line	2054
 14441                        ;}
 14442                        L10311:
 14443                        	.line	2055
 14444                        L544:
 14445 09:AFF5: A5 02        	lda	<L540+2
 14446 09:AFF7: 85 06        	sta	<L540+2+4
 14447 09:AFF9: A5 01        	lda	<L540+1
 14448 09:AFFB: 85 05        	sta	<L540+1+4
 14449 09:AFFD: 2B           	pld
 14450 09:AFFE: 3B           	tsc
 14451 09:AFFF: 18           	clc
 14452 09:B000: 69 04 00     	adc	#L540+4
 14453 09:B003: 1B           	tcs
 14454 09:B004: 6B           	rtl
 14455                        	.endblock	2055
 14456             00000000   L540	equ	0
 14457             00000001   L541	equ	1
 14458 09:B005:              	ends
 14459                        	efunc
 14460                        	.endfunc	2055,1,0
 14461                        	.line	2055
 14462                        ;
 14463                        ;
 14464                        ;/************************************************
                    *******************/
 14465                        ;/*  mem_free_DS() :  Libération mémoire de la str
                    ucture record_DS. */
 14466                        ;/************************************************
                    *******************/
 14467                        ;static void mem_free_DS(struct record_DS *current
                    _record)
 14468                        ;{
 14469                        	.line	2061
 14470                        	.line	2062
 14471                        	LOADER
 14472                        	func
 14473                        	.function	2062
 14474                        ~~mem_free_DS:
 14475                        	longa	on
 14476                        	longi	on
 14477 09:B005: 3B           	tsc
 14478 09:B006: 38           	sec
 14479 09:B007: E9 00 00     	sbc	#L545
 14480 09:B00A: 1B           	tcs
 14481 09:B00B: 0B           	phd
 14482 09:B00C: 5B           	tcd
 14483             00000004   current_record_0	set	4
 14484                        	.block	2062
 14485                        ;  if(current_record)
 14486                        	.sym	current_record,4,138,6,32,112
 14487                        	.line	2063
 14488                        ;    {
 14489 09:B00D: A5 04        	lda	<L545+current_record_0
 14490 09:B00F: 05 06        	ora	<L545+current_record_0+2
 14491 09:B011: D0 03        	bne	L548
  Sat Jul 10 2021  1:15                                                Page 267


 14492 09:B013: 82 08 00     	brl	L10312
 14493                        L548:
 14494                        	.line	2064
 14495                        ;      k_free(current_record);
 14496                        	.line	2065
 14497 09:B016: D4 06        	pei	<L545+current_record_0+2
 14498 09:B018: D4 04        	pei	<L545+current_record_0
 14499 09:B01A: 22 xx xx xx  	jsl	~~k_free
 14500                        ;    }
 14501                        	.line	2066
 14502                        ;}
 14503                        L10312:
 14504                        	.line	2067
 14505                        L549:
 14506 09:B01E: A5 02        	lda	<L545+2
 14507 09:B020: 85 06        	sta	<L545+2+4
 14508 09:B022: A5 01        	lda	<L545+1
 14509 09:B024: 85 05        	sta	<L545+1+4
 14510 09:B026: 2B           	pld
 14511 09:B027: 3B           	tsc
 14512 09:B028: 18           	clc
 14513 09:B029: 69 04 00     	adc	#L545+4
 14514 09:B02C: 1B           	tcs
 14515 09:B02D: 6B           	rtl
 14516                        	.endblock	2067
 14517             00000000   L545	equ	0
 14518             00000001   L546	equ	1
 14519 09:B02E:              	ends
 14520                        	efunc
 14521                        	.endfunc	2067,1,0
 14522                        	.line	2067
 14523                        ;
 14524                        ;
 14525                        ;/************************************************
                    ***************************/
 14526                        ;/*  mem_free_LCONST() :  Libération mémoire de la
                     structure record_LCONST. */
 14527                        ;/************************************************
                    ***************************/
 14528                        ;static void mem_free_LCONST(struct record_LCONST 
                    *current_record)
 14529                        ;{
 14530                        	.line	2073
 14531                        	.line	2074
 14532                        	LOADER
 14533                        	func
 14534                        	.function	2074
 14535                        ~~mem_free_LCONST:
 14536                        	longa	on
 14537                        	longi	on
 14538 09:B02E: 3B           	tsc
 14539 09:B02F: 38           	sec
 14540 09:B030: E9 00 00     	sbc	#L550
 14541 09:B033: 1B           	tcs
 14542 09:B034: 0B           	phd
 14543 09:B035: 5B           	tcd
 14544             00000004   current_record_0	set	4
 14545                        	.block	2074
  Sat Jul 10 2021  1:15                                                Page 268


 14546                        ;  if(current_record)
 14547                        	.sym	current_record,4,138,6,32,113
 14548                        	.line	2075
 14549                        ;    {
 14550 09:B036: A5 04        	lda	<L550+current_record_0
 14551 09:B038: 05 06        	ora	<L550+current_record_0+2
 14552 09:B03A: D0 03        	bne	L553
 14553 09:B03C: 82 27 00     	brl	L10313
 14554                        L553:
 14555                        	.line	2076
 14556                        ;      if(current_record->data)
 14557                        	.line	2077
 14558                        ;        k_free(current_record->data);
 14559 09:B03F: A0 0D 00     	ldy	#$d
 14560 09:B042: B7 04        	lda	[<L550+current_record_0],Y
 14561 09:B044: A0 0F 00     	ldy	#$f
 14562 09:B047: 17 04        	ora	[<L550+current_record_0],Y
 14563 09:B049: D0 03        	bne	L554
 14564 09:B04B: 82 10 00     	brl	L10314
 14565                        L554:
 14566                        	.line	2078
 14567 09:B04E: A0 0F 00     	ldy	#$f
 14568 09:B051: B7 04        	lda	[<L550+current_record_0],Y
 14569 09:B053: 48           	pha
 14570 09:B054: A0 0D 00     	ldy	#$d
 14571 09:B057: B7 04        	lda	[<L550+current_record_0],Y
 14572 09:B059: 48           	pha
 14573 09:B05A: 22 xx xx xx  	jsl	~~k_free
 14574                        ;
 14575                        ;      k_free(current_record);
 14576                        L10314:
 14577                        	.line	2080
 14578 09:B05E: D4 06        	pei	<L550+current_record_0+2
 14579 09:B060: D4 04        	pei	<L550+current_record_0
 14580 09:B062: 22 xx xx xx  	jsl	~~k_free
 14581                        ;    }
 14582                        	.line	2081
 14583                        ;}
 14584                        L10313:
 14585                        	.line	2082
 14586                        L555:
 14587 09:B066: A5 02        	lda	<L550+2
 14588 09:B068: 85 06        	sta	<L550+2+4
 14589 09:B06A: A5 01        	lda	<L550+1
 14590 09:B06C: 85 05        	sta	<L550+1+4
 14591 09:B06E: 2B           	pld
 14592 09:B06F: 3B           	tsc
 14593 09:B070: 18           	clc
 14594 09:B071: 69 04 00     	adc	#L550+4
 14595 09:B074: 1B           	tcs
 14596 09:B075: 6B           	rtl
 14597                        	.endblock	2082
 14598             00000000   L550	equ	0
 14599             00000001   L551	equ	1
 14600 09:B076:              	ends
 14601                        	efunc
 14602                        	.endfunc	2082,1,0
 14603                        	.line	2082
  Sat Jul 10 2021  1:15                                                Page 269


 14604                        ;
 14605                        ;
 14606                        ;/************************************************
                    *************************/
 14607                        ;/*  mem_free_LEXPR() :  Libération mémoire de la 
                    structure record_LEXPR. */
 14608                        ;/************************************************
                    *************************/
 14609                        ;static void mem_free_LEXPR(struct record_LEXPR *c
                    urrent_record)
 14610                        ;{
 14611                        	.line	2088
 14612                        	.line	2089
 14613                        	LOADER
 14614                        	func
 14615                        	.function	2089
 14616                        ~~mem_free_LEXPR:
 14617                        	longa	on
 14618                        	longi	on
 14619 09:B076: 3B           	tsc
 14620 09:B077: 38           	sec
 14621 09:B078: E9 00 00     	sbc	#L556
 14622 09:B07B: 1B           	tcs
 14623 09:B07C: 0B           	phd
 14624 09:B07D: 5B           	tcd
 14625             00000004   current_record_0	set	4
 14626                        	.block	2089
 14627                        ;  if(current_record)
 14628                        	.sym	current_record,4,138,6,32,114
 14629                        	.line	2090
 14630                        ;    {
 14631 09:B07E: A5 04        	lda	<L556+current_record_0
 14632 09:B080: 05 06        	ora	<L556+current_record_0+2
 14633 09:B082: D0 03        	bne	L559
 14634 09:B084: 82 08 00     	brl	L10315
 14635                        L559:
 14636                        	.line	2091
 14637                        ;      k_free(current_record);
 14638                        	.line	2092
 14639 09:B087: D4 06        	pei	<L556+current_record_0+2
 14640 09:B089: D4 04        	pei	<L556+current_record_0
 14641 09:B08B: 22 xx xx xx  	jsl	~~k_free
 14642                        ;    }
 14643                        	.line	2093
 14644                        ;}
 14645                        L10315:
 14646                        	.line	2094
 14647                        L560:
 14648 09:B08F: A5 02        	lda	<L556+2
 14649 09:B091: 85 06        	sta	<L556+2+4
 14650 09:B093: A5 01        	lda	<L556+1
 14651 09:B095: 85 05        	sta	<L556+1+4
 14652 09:B097: 2B           	pld
 14653 09:B098: 3B           	tsc
 14654 09:B099: 18           	clc
 14655 09:B09A: 69 04 00     	adc	#L556+4
 14656 09:B09D: 1B           	tcs
 14657 09:B09E: 6B           	rtl
  Sat Jul 10 2021  1:15                                                Page 270


 14658                        	.endblock	2094
 14659             00000000   L556	equ	0
 14660             00000001   L557	equ	1
 14661 09:B09F:              	ends
 14662                        	efunc
 14663                        	.endfunc	2094,1,0
 14664                        	.line	2094
 14665                        ;
 14666                        ;
 14667                        ;/************************************************
                    *************************/
 14668                        ;/*  mem_free_ENTRY() :  Libération mémoire de la 
                    structure record_ENTRY. */
 14669                        ;/************************************************
                    *************************/
 14670                        ;static void mem_free_ENTRY(struct record_ENTRY *c
                    urrent_record)
 14671                        ;{
 14672                        	.line	2100
 14673                        	.line	2101
 14674                        	LOADER
 14675                        	func
 14676                        	.function	2101
 14677                        ~~mem_free_ENTRY:
 14678                        	longa	on
 14679                        	longi	on
 14680 09:B09F: 3B           	tsc
 14681 09:B0A0: 38           	sec
 14682 09:B0A1: E9 00 00     	sbc	#L561
 14683 09:B0A4: 1B           	tcs
 14684 09:B0A5: 0B           	phd
 14685 09:B0A6: 5B           	tcd
 14686             00000004   current_record_0	set	4
 14687                        	.block	2101
 14688                        ;  if(current_record)
 14689                        	.sym	current_record,4,138,6,32,115
 14690                        	.line	2102
 14691                        ;    {
 14692 09:B0A7: A5 04        	lda	<L561+current_record_0
 14693 09:B0A9: 05 06        	ora	<L561+current_record_0+2
 14694 09:B0AB: D0 03        	bne	L564
 14695 09:B0AD: 82 08 00     	brl	L10316
 14696                        L564:
 14697                        	.line	2103
 14698                        ;      k_free(current_record);
 14699                        	.line	2104
 14700 09:B0B0: D4 06        	pei	<L561+current_record_0+2
 14701 09:B0B2: D4 04        	pei	<L561+current_record_0
 14702 09:B0B4: 22 xx xx xx  	jsl	~~k_free
 14703                        ;    }
 14704                        	.line	2105
 14705                        ;}
 14706                        L10316:
 14707                        	.line	2106
 14708                        L565:
 14709 09:B0B8: A5 02        	lda	<L561+2
 14710 09:B0BA: 85 06        	sta	<L561+2+4
 14711 09:B0BC: A5 01        	lda	<L561+1
  Sat Jul 10 2021  1:15                                                Page 271


 14712 09:B0BE: 85 05        	sta	<L561+1+4
 14713 09:B0C0: 2B           	pld
 14714 09:B0C1: 3B           	tsc
 14715 09:B0C2: 18           	clc
 14716 09:B0C3: 69 04 00     	adc	#L561+4
 14717 09:B0C6: 1B           	tcs
 14718 09:B0C7: 6B           	rtl
 14719                        	.endblock	2106
 14720             00000000   L561	equ	0
 14721             00000001   L562	equ	1
 14722 09:B0C8:              	ends
 14723                        	efunc
 14724                        	.endfunc	2106,1,0
 14725                        	.line	2106
 14726                        ;
 14727                        ;
 14728                        ;/************************************************
                    ***************************/
 14729                        ;/*  mem_free_cRELOC() :  Libération mémoire de la
                     structure record_cRELOC. */
 14730                        ;/************************************************
                    ***************************/
 14731                        ;static void mem_free_cRELOC(struct record_cRELOC 
                    *current_record)
 14732                        ;{
 14733                        	.line	2112
 14734                        	.line	2113
 14735                        	LOADER
 14736                        	func
 14737                        	.function	2113
 14738                        ~~mem_free_cRELOC:
 14739                        	longa	on
 14740                        	longi	on
 14741 09:B0C8: 3B           	tsc
 14742 09:B0C9: 38           	sec
 14743 09:B0CA: E9 00 00     	sbc	#L566
 14744 09:B0CD: 1B           	tcs
 14745 09:B0CE: 0B           	phd
 14746 09:B0CF: 5B           	tcd
 14747             00000004   current_record_0	set	4
 14748                        	.block	2113
 14749                        ;  if(current_record)
 14750                        	.sym	current_record,4,138,6,32,116
 14751                        	.line	2114
 14752                        ;    {
 14753 09:B0D0: A5 04        	lda	<L566+current_record_0
 14754 09:B0D2: 05 06        	ora	<L566+current_record_0+2
 14755 09:B0D4: D0 03        	bne	L569
 14756 09:B0D6: 82 08 00     	brl	L10317
 14757                        L569:
 14758                        	.line	2115
 14759                        ;      k_free(current_record);
 14760                        	.line	2116
 14761 09:B0D9: D4 06        	pei	<L566+current_record_0+2
 14762 09:B0DB: D4 04        	pei	<L566+current_record_0
 14763 09:B0DD: 22 xx xx xx  	jsl	~~k_free
 14764                        ;    }
 14765                        	.line	2117
  Sat Jul 10 2021  1:15                                                Page 272


 14766                        ;}
 14767                        L10317:
 14768                        	.line	2118
 14769                        L570:
 14770 09:B0E1: A5 02        	lda	<L566+2
 14771 09:B0E3: 85 06        	sta	<L566+2+4
 14772 09:B0E5: A5 01        	lda	<L566+1
 14773 09:B0E7: 85 05        	sta	<L566+1+4
 14774 09:B0E9: 2B           	pld
 14775 09:B0EA: 3B           	tsc
 14776 09:B0EB: 18           	clc
 14777 09:B0EC: 69 04 00     	adc	#L566+4
 14778 09:B0EF: 1B           	tcs
 14779 09:B0F0: 6B           	rtl
 14780                        	.endblock	2118
 14781             00000000   L566	equ	0
 14782             00000001   L567	equ	1
 14783 09:B0F1:              	ends
 14784                        	efunc
 14785                        	.endfunc	2118,1,0
 14786                        	.line	2118
 14787                        ;
 14788                        ;
 14789                        ;/************************************************
                    *********************************/
 14790                        ;/*  mem_free_cINTERSEG() :  Libération mémoire de
                     la structure record_cINTERSEG. */
 14791                        ;/************************************************
                    *********************************/
 14792                        ;static void mem_free_cINTERSEG(struct record_cINT
                    ERSEG *current_record)
 14793                        ;{
 14794                        	.line	2124
 14795                        	.line	2125
 14796                        	LOADER
 14797                        	func
 14798                        	.function	2125
 14799                        ~~mem_free_cINTERSEG:
 14800                        	longa	on
 14801                        	longi	on
 14802 09:B0F1: 3B           	tsc
 14803 09:B0F2: 38           	sec
 14804 09:B0F3: E9 00 00     	sbc	#L571
 14805 09:B0F6: 1B           	tcs
 14806 09:B0F7: 0B           	phd
 14807 09:B0F8: 5B           	tcd
 14808             00000004   current_record_0	set	4
 14809                        	.block	2125
 14810                        ;  if(current_record)
 14811                        	.sym	current_record,4,138,6,32,117
 14812                        	.line	2126
 14813                        ;    {
 14814 09:B0F9: A5 04        	lda	<L571+current_record_0
 14815 09:B0FB: 05 06        	ora	<L571+current_record_0+2
 14816 09:B0FD: D0 03        	bne	L574
 14817 09:B0FF: 82 08 00     	brl	L10318
 14818                        L574:
 14819                        	.line	2127
  Sat Jul 10 2021  1:15                                                Page 273


 14820                        ;      k_free(current_record);
 14821                        	.line	2128
 14822 09:B102: D4 06        	pei	<L571+current_record_0+2
 14823 09:B104: D4 04        	pei	<L571+current_record_0
 14824 09:B106: 22 xx xx xx  	jsl	~~k_free
 14825                        ;    }
 14826                        	.line	2129
 14827                        ;}
 14828                        L10318:
 14829                        	.line	2130
 14830                        L575:
 14831 09:B10A: A5 02        	lda	<L571+2
 14832 09:B10C: 85 06        	sta	<L571+2+4
 14833 09:B10E: A5 01        	lda	<L571+1
 14834 09:B110: 85 05        	sta	<L571+1+4
 14835 09:B112: 2B           	pld
 14836 09:B113: 3B           	tsc
 14837 09:B114: 18           	clc
 14838 09:B115: 69 04 00     	adc	#L571+4
 14839 09:B118: 1B           	tcs
 14840 09:B119: 6B           	rtl
 14841                        	.endblock	2130
 14842             00000000   L571	equ	0
 14843             00000001   L572	equ	1
 14844 09:B11A:              	ends
 14845                        	efunc
 14846                        	.endfunc	2130,1,0
 14847                        	.line	2130
 14848                        ;
 14849                        ;
 14850                        ;/************************************************
                    *************************/
 14851                        ;/*  mem_free_SUPER() :  Libération mémoire de la 
                    structure record_SUPER. */
 14852                        ;/************************************************
                    *************************/
 14853                        ;static void mem_free_SUPER(struct record_SUPER *c
                    urrent_record)
 14854                        ;{
 14855                        	.line	2136
 14856                        	.line	2137
 14857                        	LOADER
 14858                        	func
 14859                        	.function	2137
 14860                        ~~mem_free_SUPER:
 14861                        	longa	on
 14862                        	longi	on
 14863 09:B11A: 3B           	tsc
 14864 09:B11B: 38           	sec
 14865 09:B11C: E9 08 00     	sbc	#L576
 14866 09:B11F: 1B           	tcs
 14867 09:B120: 0B           	phd
 14868 09:B121: 5B           	tcd
 14869             00000004   current_record_0	set	4
 14870                        	.block	2137
 14871                        ;  struct subrecord_SuperReloc2 *current_SuperRelo
                    c2;
 14872                        ;  struct subrecord_SuperReloc2 *next_SuperReloc2;
  Sat Jul 10 2021  1:15                                                Page 274


 14873                        ;
 14874                        ;  if(current_record)
 14875             00000000   current_SuperReloc2_1	set	0
 14876             00000004   next_SuperReloc2_1	set	4
 14877                        	.sym	current_SuperReloc2,0,138,1,32,89
 14878                        	.sym	next_SuperReloc2,4,138,1,32,89
 14879                        	.sym	current_record,4,138,6,32,118
 14880                        	.line	2141
 14881                        ;    {
 14882 09:B122: A5 0C        	lda	<L576+current_record_0
 14883 09:B124: 05 0E        	ora	<L576+current_record_0+2
 14884 09:B126: D0 03        	bne	L579
 14885 09:B128: 82 40 00     	brl	L10319
 14886                        L579:
 14887                        	.line	2142
 14888                        ;      for(current_SuperReloc2=current_record->fir
                    st_SuperReloc2; current_SuperReloc2; )
 14889                        	.line	2143
 14890 09:B12B: A0 10 00     	ldy	#$10
 14891 09:B12E: B7 0C        	lda	[<L576+current_record_0],Y
 14892 09:B130: 85 01        	sta	<L577+current_SuperReloc2_1
 14893 09:B132: A0 12 00     	ldy	#$12
 14894 09:B135: B7 0C        	lda	[<L576+current_record_0],Y
 14895 09:B137: 85 03        	sta	<L577+current_SuperReloc2_1+2
 14896 09:B139: 82 1E 00     	brl	L10323
 14897                        L10322:
 14898                        ;        {
 14899                        	.line	2144
 14900                        ;          next_SuperReloc2 = current_SuperReloc2-
                    >next;
 14901                        	.line	2145
 14902 09:B13C: A0 0D 08     	ldy	#$80d
 14903 09:B13F: B7 01        	lda	[<L577+current_SuperReloc2_1],Y
 14904 09:B141: 85 05        	sta	<L577+next_SuperReloc2_1
 14905 09:B143: A0 0F 08     	ldy	#$80f
 14906 09:B146: B7 01        	lda	[<L577+current_SuperReloc2_1],Y
 14907 09:B148: 85 07        	sta	<L577+next_SuperReloc2_1+2
 14908                        ;          k_free(current_SuperReloc2);
 14909                        	.line	2146
 14910 09:B14A: D4 03        	pei	<L577+current_SuperReloc2_1+2
 14911 09:B14C: D4 01        	pei	<L577+current_SuperReloc2_1
 14912 09:B14E: 22 xx xx xx  	jsl	~~k_free
 14913                        ;          current_SuperReloc2 = next_SuperReloc2;
 14914                        	.line	2147
 14915 09:B152: A5 05        	lda	<L577+next_SuperReloc2_1
 14916 09:B154: 85 01        	sta	<L577+current_SuperReloc2_1
 14917 09:B156: A5 07        	lda	<L577+next_SuperReloc2_1+2
 14918 09:B158: 85 03        	sta	<L577+current_SuperReloc2_1+2
 14919                        ;        }
 14920                        	.line	2148
 14921                        L10320:
 14922                        L10323:
 14923 09:B15A: A5 01        	lda	<L577+current_SuperReloc2_1
 14924 09:B15C: 05 03        	ora	<L577+current_SuperReloc2_1+2
 14925 09:B15E: F0 03        	beq	L580
 14926 09:B160: 82 D9 FF     	brl	L10322
 14927                        L580:
 14928                        L10321:
  Sat Jul 10 2021  1:15                                                Page 275


 14929                        ;
 14930                        ;      k_free(current_record);
 14931                        	.line	2150
 14932 09:B163: D4 0E        	pei	<L576+current_record_0+2
 14933 09:B165: D4 0C        	pei	<L576+current_record_0
 14934 09:B167: 22 xx xx xx  	jsl	~~k_free
 14935                        ;    }
 14936                        	.line	2151
 14937                        ;}
 14938                        L10319:
 14939                        	.line	2152
 14940                        L581:
 14941 09:B16B: A5 0A        	lda	<L576+2
 14942 09:B16D: 85 0E        	sta	<L576+2+4
 14943 09:B16F: A5 09        	lda	<L576+1
 14944 09:B171: 85 0D        	sta	<L576+1+4
 14945 09:B173: 2B           	pld
 14946 09:B174: 3B           	tsc
 14947 09:B175: 18           	clc
 14948 09:B176: 69 0C 00     	adc	#L576+4
 14949 09:B179: 1B           	tcs
 14950 09:B17A: 6B           	rtl
 14951                        	.endblock	2152
 14952             00000008   L576	equ	8
 14953             00000001   L577	equ	1
 14954 09:B17B:              	ends
 14955                        	efunc
 14956                        	.endfunc	2152,1,8
 14957                        	.line	2152
 14958                        ;
 14959                        ;
 14960                        ;/************************************************
                    *****************************/
 14961                        ;/*  mem_free_General() :  Libération mémoire de l
                    a structure record_General. */
 14962                        ;/************************************************
                    *****************************/
 14963                        ;static void mem_free_General(struct record_Genera
                    l *current_record)
 14964                        ;{
 14965                        	.line	2158
 14966                        	.line	2159
 14967                        	LOADER
 14968                        	func
 14969                        	.function	2159
 14970                        ~~mem_free_General:
 14971                        	longa	on
 14972                        	longi	on
 14973 09:B17B: 3B           	tsc
 14974 09:B17C: 38           	sec
 14975 09:B17D: E9 00 00     	sbc	#L582
 14976 09:B180: 1B           	tcs
 14977 09:B181: 0B           	phd
 14978 09:B182: 5B           	tcd
 14979             00000004   current_record_0	set	4
 14980                        	.block	2159
 14981                        ;  if(current_record)
 14982                        	.sym	current_record,4,138,6,32,119
  Sat Jul 10 2021  1:15                                                Page 276


 14983                        	.line	2160
 14984                        ;    {
 14985 09:B183: A5 04        	lda	<L582+current_record_0
 14986 09:B185: 05 06        	ora	<L582+current_record_0+2
 14987 09:B187: D0 03        	bne	L585
 14988 09:B189: 82 08 00     	brl	L10324
 14989                        L585:
 14990                        	.line	2161
 14991                        ;      k_free(current_record);
 14992                        	.line	2162
 14993 09:B18C: D4 06        	pei	<L582+current_record_0+2
 14994 09:B18E: D4 04        	pei	<L582+current_record_0
 14995 09:B190: 22 xx xx xx  	jsl	~~k_free
 14996                        ;    }
 14997                        	.line	2163
 14998                        ;}
 14999                        L10324:
 15000                        	.line	2164
 15001                        L586:
 15002 09:B194: A5 02        	lda	<L582+2
 15003 09:B196: 85 06        	sta	<L582+2+4
 15004 09:B198: A5 01        	lda	<L582+1
 15005 09:B19A: 85 05        	sta	<L582+1+4
 15006 09:B19C: 2B           	pld
 15007 09:B19D: 3B           	tsc
 15008 09:B19E: 18           	clc
 15009 09:B19F: 69 04 00     	adc	#L582+4
 15010 09:B1A2: 1B           	tcs
 15011 09:B1A3: 6B           	rtl
 15012                        	.endblock	2164
 15013             00000000   L582	equ	0
 15014             00000001   L583	equ	1
 15015 09:B1A4:              	ends
 15016                        	efunc
 15017                        	.endfunc	2164,1,0
 15018                        	.line	2164
 15019                        ;
 15020                        ;
 15021                        ;/************************************************
                    ***************************************/
 15022                        ;/*  mem_free_Experimental() :  Libération mémoire
                     de la structure record_Experimental. */
 15023                        ;/************************************************
                    ***************************************/
 15024                        ;static void mem_free_Experimental(struct record_E
                    xperimental *current_record)
 15025                        ;{
 15026                        	.line	2170
 15027                        	.line	2171
 15028                        	LOADER
 15029                        	func
 15030                        	.function	2171
 15031                        ~~mem_free_Experimental:
 15032                        	longa	on
 15033                        	longi	on
 15034 09:B1A4: 3B           	tsc
 15035 09:B1A5: 38           	sec
 15036 09:B1A6: E9 00 00     	sbc	#L587
  Sat Jul 10 2021  1:15                                                Page 277


 15037 09:B1A9: 1B           	tcs
 15038 09:B1AA: 0B           	phd
 15039 09:B1AB: 5B           	tcd
 15040             00000004   current_record_0	set	4
 15041                        	.block	2171
 15042                        ;  if(current_record)
 15043                        	.sym	current_record,4,138,6,32,120
 15044                        	.line	2172
 15045                        ;    {
 15046 09:B1AC: A5 04        	lda	<L587+current_record_0
 15047 09:B1AE: 05 06        	ora	<L587+current_record_0+2
 15048 09:B1B0: D0 03        	bne	L590
 15049 09:B1B2: 82 08 00     	brl	L10325
 15050                        L590:
 15051                        	.line	2173
 15052                        ;      k_free(current_record);
 15053                        	.line	2174
 15054 09:B1B5: D4 06        	pei	<L587+current_record_0+2
 15055 09:B1B7: D4 04        	pei	<L587+current_record_0
 15056 09:B1B9: 22 xx xx xx  	jsl	~~k_free
 15057                        ;    }
 15058                        	.line	2175
 15059                        ;}
 15060                        L10325:
 15061                        	.line	2176
 15062                        L591:
 15063 09:B1BD: A5 02        	lda	<L587+2
 15064 09:B1BF: 85 06        	sta	<L587+2+4
 15065 09:B1C1: A5 01        	lda	<L587+1
 15066 09:B1C3: 85 05        	sta	<L587+1+4
 15067 09:B1C5: 2B           	pld
 15068 09:B1C6: 3B           	tsc
 15069 09:B1C7: 18           	clc
 15070 09:B1C8: 69 04 00     	adc	#L587+4
 15071 09:B1CB: 1B           	tcs
 15072 09:B1CC: 6B           	rtl
 15073                        	.endblock	2176
 15074             00000000   L587	equ	0
 15075             00000001   L588	equ	1
 15076 09:B1CD:              	ends
 15077                        	efunc
 15078                        	.endfunc	2176,1,0
 15079                        	.line	2176
 15080                        ;
 15081                        ;/************************************************
                    ************************/
 15082                        ;
 15083                        	.line	2178
 15084                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\OMF_Record.c",2170
 15085                        	xref	~~my_Memory
 15086                        	xref	~~k_free
 15087                        	xref	~~k_calloc
 15088                        	xref	~~strcpy
 15089                        	xref	~~memcpy
 15090                        	.sym	~~mem_free_Experimental,~~mem_free_Exper
                    imental,65,3,0
 15091                        	.sym	~~mem_free_General,~~mem_free_General,65
  Sat Jul 10 2021  1:15                                                Page 278


                    ,3,0
 15092                        	.sym	~~mem_free_SUPER,~~mem_free_SUPER,65,3,0
 15093                        	.sym	~~mem_free_cINTERSEG,~~mem_free_cINTERSE
                    G,65,3,0
 15094                        	.sym	~~mem_free_cRELOC,~~mem_free_cRELOC,65,3
                    ,0
 15095                        	.sym	~~mem_free_ENTRY,~~mem_free_ENTRY,65,3,0
 15096                        	.sym	~~mem_free_LEXPR,~~mem_free_LEXPR,65,3,0
 15097                        	.sym	~~mem_free_LCONST,~~mem_free_LCONST,65,3
                    ,0
 15098                        	.sym	~~mem_free_DS,~~mem_free_DS,65,3,0
 15099                        	.sym	~~mem_free_EQU,~~mem_free_EQU,65,3,0
 15100                        	.sym	~~mem_free_LOCAL,~~mem_free_LOCAL,65,3,0
 15101                        	.sym	~~mem_free_RELEXPR,~~mem_free_RELEXPR,65
                    ,3,0
 15102                        	.sym	~~mem_free_BEXPR,~~mem_free_BEXPR,65,3,0
 15103                        	.sym	~~mem_free_ZEXPR,~~mem_free_ZEXPR,65,3,0
 15104                        	.sym	~~mem_free_EXPR,~~mem_free_EXPR,65,3,0
 15105                        	.sym	~~mem_free_MEM,~~mem_free_MEM,65,3,0
 15106                        	.sym	~~mem_free_GEQU,~~mem_free_GEQU,65,3,0
 15107                        	.sym	~~mem_free_GLOBAL,~~mem_free_GLOBAL,65,3
                    ,0
 15108                        	.sym	~~mem_free_STRONG,~~mem_free_STRONG,65,3
                    ,0
 15109                        	.sym	~~mem_free_USING,~~mem_free_USING,65,3,0
 15110                        	.sym	~~mem_free_INTERSEG,~~mem_free_INTERSEG,
                    65,3,0
 15111                        	.sym	~~mem_free_RELOC,~~mem_free_RELOC,65,3,0
 15112                        	.sym	~~mem_free_ORG,~~mem_free_ORG,65,3,0
 15113                        	.sym	~~mem_free_ALIGN,~~mem_free_ALIGN,65,3,0
 15114                        	.sym	~~mem_free_CONST,~~mem_free_CONST,65,3,0
 15115                        	.sym	~~mem_free_END,~~mem_free_END,65,3,0
 15116                        	.sym	~~AddInterseg,~~AddInterseg,65,3,0
 15117                        	.sym	~~AddReloc,~~AddReloc,65,3,0
 15118                        	.sym	~~DecodeSuperInterseg2536,~~DecodeSuperI
                    nterseg2536,1098,3,32,94
 15119                        	.sym	~~DecodeSuperInterseg1324,~~DecodeSuperI
                    nterseg1324,1098,3,32,93
 15120                        	.sym	~~DecodeSuperInterseg212,~~DecodeSuperIn
                    terseg212,1098,3,32,92
 15121                        	.sym	~~DecodeSuperInterseg1,~~DecodeSuperInte
                    rseg1,1098,3,32,91
 15122                        	.sym	~~DecodeSuperReloc3,~~DecodeSuperReloc3,
                    1098,3,32,90
 15123                        	.sym	~~DecodeSuperReloc2,~~DecodeSuperReloc2,
                    1098,3,32,89
 15124                        	.sym	~~DecodeRecordExperimental,~~DecodeRecor
                    dExperimental,1089,3,32
 15125                        	.sym	~~DecodeRecordGeneral,~~DecodeRecordGene
                    ral,1089,3,32
 15126                        	.sym	~~DecodeRecordSUPER,~~DecodeRecordSUPER,
                    1089,3,32
 15127                        	.sym	~~DecodeRecordcINTERSEG,~~DecodeRecordcI
                    NTERSEG,1089,3,32
 15128                        	.sym	~~DecodeRecordcRELOC,~~DecodeRecordcRELO
                    C,1089,3,32
 15129                        	.sym	~~DecodeRecordENTRY,~~DecodeRecordENTRY,
                    1089,3,32
  Sat Jul 10 2021  1:15                                                Page 279


 15130                        	.sym	~~DecodeRecordLEXPR,~~DecodeRecordLEXPR,
                    1089,3,32
 15131                        	.sym	~~DecodeRecordLCONST,~~DecodeRecordLCONS
                    T,1089,3,32
 15132                        	.sym	~~DecodeRecordDS,~~DecodeRecordDS,1089,3
                    ,32
 15133                        	.sym	~~DecodeRecordEQU,~~DecodeRecordEQU,1089
                    ,3,32
 15134                        	.sym	~~DecodeRecordLOCAL,~~DecodeRecordLOCAL,
                    1089,3,32
 15135                        	.sym	~~DecodeRecordRELEXPR,~~DecodeRecordRELE
                    XPR,1089,3,32
 15136                        	.sym	~~DecodeRecordBEXPR,~~DecodeRecordBEXPR,
                    1089,3,32
 15137                        	.sym	~~DecodeRecordZEXPR,~~DecodeRecordZEXPR,
                    1089,3,32
 15138                        	.sym	~~DecodeRecordEXPR,~~DecodeRecordEXPR,10
                    89,3,32
 15139                        	.sym	~~DecodeRecordMEM,~~DecodeRecordMEM,1089
                    ,3,32
 15140                        	.sym	~~DecodeRecordGEQU,~~DecodeRecordGEQU,10
                    89,3,32
 15141                        	.sym	~~DecodeRecordGLOBAL,~~DecodeRecordGLOBA
                    L,1089,3,32
 15142                        	.sym	~~DecodeRecordSTRONG,~~DecodeRecordSTRON
                    G,1089,3,32
 15143                        	.sym	~~DecodeRecordUSING,~~DecodeRecordUSING,
                    1089,3,32
 15144                        	.sym	~~DecodeRecordINTERSEG,~~DecodeRecordINT
                    ERSEG,1089,3,32
 15145                        	.sym	~~DecodeRecordRELOC,~~DecodeRecordRELOC,
                    1089,3,32
 15146                        	.sym	~~DecodeRecordORG,~~DecodeRecordORG,1089
                    ,3,32
 15147                        	.sym	~~DecodeRecordALIGN,~~DecodeRecordALIGN,
                    1089,3,32
 15148                        	.sym	~~DecodeRecordCONST,~~DecodeRecordCONST,
                    1089,3,32
 15149                        	.sym	~~DecodeRecordEND,~~DecodeRecordEND,1089
                    ,3,32
 15150                        	.sym	~~mem_free_record,~~mem_free_record,65,2
                    ,0
 15151                        	.sym	~~GetSUPERType,~~GetSUPERType,1102,2,32
 15152                        	.sym	~~GetRecordName,~~GetRecordName,1102,2,3
                    2
 15153                        	.sym	~~DecodeOneRecord,~~DecodeOneRecord,1098
                    ,2,32,88
 15154                        	.sym	~~my_Memory,~~my_Memory,65,18,0
 15155                        	.sym	FRESULT,0,5,14,16
 15156                        	.sym	MKFS_PARM,0,10,14,80,84
 15157                        	.sym	FILINFO,0,10,14,2224,83
 15158                        	.sym	DIR,0,10,14,416,82
 15159                        	.sym	FIL,0,10,14,4400,81
 15160                        	.sym	FFOBJID,0,10,14,128,80
 15161                        	.sym	FATFS,0,10,14,4504,79
 15162                        	.sym	LBA_t,0,18,14,32
 15163                        	.sym	FSIZE_t,0,18,14,32
 15164                        	.sym	TCHAR,0,14,14,8
  Sat Jul 10 2021  1:15                                                Page 280


 15165                        	.sym	PCOMMANDARGS,0,138,14,32,78
 15166                        	.sym	COMMANDARGS,0,10,14,64,78
 15167                        	.sym	PTOKENIZESTATE,0,133,14,32
 15168                        	.sym	TOKENIZESTATE,0,5,14,16
 15169                        	.sym	PTOKEN,0,138,14,32,77
 15170                        	.sym	TOKEN,0,10,14,64,77
 15171                        	.sym	PTOKENTYPE,0,133,14,32
 15172                        	.sym	TOKENTYPE,0,5,14,16
 15173                        	.sym	FXCommandHandler,0,656,14,32
 15174                        	.sym	PCONSOLECTX,0,138,14,32,76
 15175                        	.sym	CONSOLECTX,0,10,14,1144,76
 15176                        	.sym	PSPINNERCTX,0,138,14,32,75
 15177                        	.sym	SPINNERCTX,0,10,14,48,75
 15178                        	.sym	HCLIP,0,138,14,32,74
 15179                        	.sym	PCLIPBOARD_DATA,0,138,14,32,74
 15180                        	.sym	CLIPBOARD_DATA,0,10,14,168,74
 15181                        	.sym	PEVENTMANAGER,0,138,14,32,73
 15182                        	.sym	EVENTMANAGER,0,10,14,192,73
 15183                        	.sym	EV_RUN,0,656,14,32
 15184                        	.sym	EV_QUERY_METRIC,0,656,14,32
 15185                        	.sym	EV_CONFIGURE,0,656,14,32
 15186                        	.sym	EV_UNINIT,0,641,14,32
 15187                        	.sym	EV_INIT,0,8833,14,32
 15188                        	.sym	PMOUSE_MSG_STATE,0,138,14,32,72
 15189                        	.sym	MOUSE_MSG_STATE,0,10,14,184,72
 15190                        	.sym	PFXEVENTPROCESS,0,138,14,32,71
 15191                        	.sym	FXEVENTPROCESS,0,10,14,64,71
 15192                        	.sym	PMARSHALDATA,0,139,14,32,70
 15193                        	.sym	MARSHALDATA,0,11,14,32,70
 15194                        	.sym	FXIDLEPROCESS,0,641,14,32
 15195                        	.sym	FXEventProc,0,641,14,32
 15196                        	.sym	PMOUSEMSGDATA,0,138,14,32,69
 15197                        	.sym	MOUSEMSGDATA,0,10,14,64,69
 15198                        	.sym	MSGIRQ,0,5,14,16
 15199                        	.sym	MAINLOOPARGS,0,10,14,16,68
 15200                        	.sym	PEACHCHILD_MSG,0,138,14,32,67
 15201                        	.sym	EACHCHILD_MSG,0,10,14,64,67
 15202                        	.sym	PMSGBOX_DATA,0,138,14,32,66
 15203                        	.sym	MSGBOX_DATA,0,10,14,96,66
 15204                        	.sym	PDESKTOP_DATA,0,138,14,32,65
 15205                        	.sym	DESKTOP_DATA,0,10,14,64,65
 15206                        	.sym	PWINDOWMANAGER,0,138,14,32,64
 15207                        	.sym	WINDOWMANAGER,0,10,14,160,64
 15208                        	.sym	WM_DOPROCS,0,641,14,32
 15209                        	.sym	WM_QUERY_METRIC,0,656,14,32
 15210                        	.sym	WM_CONFIGURE,0,656,14,32
 15211                        	.sym	WM_HANDLE_EVENT,0,8833,14,32
 15212                        	.sym	WM_EVENTS,0,641,14,32
 15213                        	.sym	PCUR_PALETTE_MAP,0,138,14,32,63
 15214                        	.sym	CUR_PALETTE_MAP,0,10,14,400,63
 15215                        	.sym	PCLICKDETECTED,0,138,14,32,62
 15216                        	.sym	CLICKDETECTED,0,10,14,64,62
 15217                        	.sym	OBJECTCLICKED,0,641,14,32
 15218                        	.sym	PIPCPORT,0,138,14,32,61
 15219                        	.sym	IPCPORT,0,10,14,144,61
 15220                        	.sym	~~k_free,~~k_free,65,18,0
 15221                        	.sym	~~k_calloc,~~k_calloc,1089,18,32
 15222                        	.sym	MemoryCallback,0,641,14,32
  Sat Jul 10 2021  1:15                                                Page 281


 15223                        	.sym	PFXMEMORYMAP,0,138,14,32,60
 15224                        	.sym	FXMEMORYMAP,0,10,14,2072,60
 15225                        	.sym	UMM_HEAP_INFO,0,10,14,256,59
 15226                        	.sym	PEXECUTIVE,0,138,14,32,58
 15227                        	.sym	EXECUTIVE,0,10,14,128,58
 15228                        	.sym	EX_QUERY_METRIC,0,656,14,32
 15229                        	.sym	EX_CONFIGURE,0,656,14,32
 15230                        	.sym	EX_UNINIT,0,641,14,32
 15231                        	.sym	EX_INIT,0,8833,14,32
 15232                        	.sym	PFXSTRING,0,138,14,32,57
 15233                        	.sym	FXSTRING,0,10,14,64,57
 15234                        	.sym	DEVICEDRIVER_COMMAND,0,656,14,32
 15235                        	.sym	DEVICEDRIVER_UNLOAD,0,654,14,32
 15236                        	.sym	DEVICEDRIVER_WRITE,0,656,14,32
 15237                        	.sym	DEVICEDRIVER_READ,0,656,14,32
 15238                        	.sym	DEVICEDRIVER_LOAD,0,654,14,32
 15239                        	.sym	DEVICEDRIVER_IRQ,0,654,14,32
 15240                        	.sym	PFX_BLOCK_DEVICE_DRIVER,0,138,14,32,56
 15241                        	.sym	FX_BLOCK_DEVICE_DRIVER,0,10,14,808,56
 15242                        	.sym	GETDRIVERDEF,0,8842,14,32,55
 15243                        	.sym	PFX_DEVICE_DRIVER,0,138,14,32,55
 15244                        	.sym	FX_DEVICE_DRIVER,0,10,14,776,55
 15245                        	.sym	PSEGMENTHEADER,0,138,14,32,54
 15246                        	.sym	SEGMENTHEADER,0,10,14,160,54
 15247                        	.sym	PDEBUGBYTEBITS,0,138,14,32,53
 15248                        	.sym	DEBUGBYTEBITS,0,10,14,8,53
 15249                        	.sym	PFXENVIRONMENT,0,138,14,32,52
 15250                        	.sym	FXENVIRONMENT,0,10,14,96,52
 15251                        	.sym	PFXZEROPAGE,0,138,14,32,51
 15252                        	.sym	FXZEROPAGE,0,10,14,824,51
 15253                        	.sym	KERNELTRAPCALL,0,641,14,32
 15254                        	.sym	PFXKERNEL_API_CALLTABLE,0,138,14,32,50
 15255                        	.sym	FXKERNEL_API_CALLTABLE,0,10,14,8192,50
 15256                        	.sym	FOREACHNODEUNTIL,0,654,14,32
 15257                        	.sym	FOREACHNODE,0,641,14,32
 15258                        	.sym	PFXRFHEADER_FONT,0,138,14,32,49
 15259                        	.sym	FXRFHEADER_FONT,0,10,14,144,49
 15260                        	.sym	PFXRFHEADER,0,138,14,32,48
 15261                        	.sym	FXRFHEADER,0,10,14,72,48
 15262                        	.sym	PFXCOMBUFFER,0,138,14,32,47
 15263                        	.sym	FXCOMBUFFER,0,10,14,2080,47
 15264                        	.sym	PSUBMENULIST,0,138,14,32,46
 15265                        	.sym	SUBMENULIST,0,10,14,40,46
 15266                        	.sym	HSUBMENU,0,7,14,32
 15267                        	.sym	PSUBMENU,0,138,14,32,45
 15268                        	.sym	SUBMENU,0,10,14,64,45
 15269                        	.sym	MenuAction,0,641,14,32
 15270                        	.sym	PMENUANCHOR,0,138,14,32,44
 15271                        	.sym	MENUANCHOR,0,10,14,272,44
 15272                        	.sym	PMSGBOX,0,138,14,32,43
 15273                        	.sym	MSGBOX,0,10,14,144,43
 15274                        	.sym	PTEXTBOX,0,138,14,32,42
 15275                        	.sym	TEXTBOX,0,10,14,144,42
 15276                        	.sym	PLISTBOX,0,138,14,32,41
 15277                        	.sym	LISTBOX,0,10,14,240,41
 15278                        	.sym	PSCROLLBAR,0,138,14,32,40
 15279                        	.sym	SCROLLBAR,0,10,14,240,40
 15280                        	.sym	PBUTTON,0,138,14,32,39
  Sat Jul 10 2021  1:15                                                Page 282


 15281                        	.sym	BUTTON,0,10,14,96,39
 15282                        	.sym	PMENUDROPDOWNDATA,0,138,14,32,38
 15283                        	.sym	MENUDROPDOWNDATA,0,10,14,5152,38
 15284                        	.sym	PMENUTAG,0,138,14,32,37
 15285                        	.sym	MENUTAG,0,10,14,160,37
 15286                        	.sym	PMENU,0,138,14,32,36
 15287                        	.sym	MENU,0,10,14,280,36
 15288                        	.sym	HMENURESOURCE,0,129,14,32
 15289                        	.sym	FONTMETRIC,0,10,14,32,35
 15290                        	.sym	TITLE,0,142,14,32
 15291                        	.sym	PHANDLE,0,1153,14,32
 15292                        	.sym	HANDLE,0,129,14,32
 15293                        	.sym	PWINDOWEX,0,138,14,32,34
 15294                        	.sym	WINDOWEX,0,10,14,3880,34
 15295                        	.sym	PWINDOW,0,138,14,32,33
 15296                        	.sym	WINDOW,0,10,14,3904,33
 15297                        	.sym	PDRAGDATA,0,138,14,32,32
 15298                        	.sym	DRAGDATA,0,10,14,216,32
 15299                        	.sym	PNCCLICKABLE,0,138,14,32,31
 15300                        	.sym	NCCLICKABLE,0,10,14,136,31
 15301                        	.sym	HCLICKABLE,0,7,14,32
 15302                        	.sym	PCLICKABLE,0,138,14,32,30
 15303                        	.sym	CLICKABLE,0,10,14,152,30
 15304                        	.sym	PWNDCLASS,0,138,14,32,29
 15305                        	.sym	WNDCLASS,0,10,14,272,29
 15306                        	.sym	HBRUSH,0,129,14,32
 15307                        	.sym	HCURSOR,0,129,14,32
 15308                        	.sym	HICON,0,129,14,32
 15309                        	.sym	HINSTANCE,0,129,14,32
 15310                        	.sym	FXWndProc,0,654,14,32
 15311                        	.sym	PDRECT,0,138,14,32,28
 15312                        	.sym	DRECT,0,10,14,112,28
 15313                        	.sym	PRECTP,0,138,14,32,27
 15314                        	.sym	RECTP,0,10,14,96,27
 15315                        	.sym	PRECT,0,138,14,32,26
 15316                        	.sym	RECT,0,10,14,112,26
 15317                        	.sym	PPOINT,0,138,14,32,25
 15318                        	.sym	POINT,0,10,14,32,25
 15319                        	.sym	PFXPROPERTY,0,138,14,32,23
 15320                        	.sym	FXPROPERTY,0,10,14,384,23
 15321                        	.sym	PKEYSTATE,0,138,14,32,22
 15322                        	.sym	KEYSTATE,0,10,14,112,22
 15323                        	.sym	SCANCODE,0,14,14,8
 15324                        	.sym	KEYCODE,0,16,14,16
 15325                        	.sym	PFXPROCESSMESSAGE,0,138,14,32,21
 15326                        	.sym	FXPROCESSMESSAGE,0,10,14,112,21
 15327                        	.sym	PFXPROCESS,0,138,14,32,20
 15328                        	.sym	FXPROCESS,0,10,14,800,20
 15329                        	.sym	PDESKTOP_CONTROL,0,138,14,32,19
 15330                        	.sym	DESKTOP_CONTROL,0,10,14,392,19
 15331                        	.sym	PCONSOLE_CONTROL,0,138,14,32,18
 15332                        	.sym	CONSOLE_CONTROL,0,10,14,448,18
 15333                        	.sym	FXProcessProc,0,641,14,32
 15334                        	.sym	PFXCMDMESSAGE,0,138,14,32,17
 15335                        	.sym	FXCMDMESSAGE,0,10,14,304,17
 15336                        	.sym	PFXOSMESSAGE,0,138,14,32,16
 15337                        	.sym	FXOSMESSAGE,0,10,14,304,16
 15338                        	.sym	PINT_REGS,0,138,14,32,15
  Sat Jul 10 2021  1:15                                                Page 283


 15339                        	.sym	INT_REGS,0,10,14,104,15
 15340                        	.sym	TASK_STACK,0,10,14,32,14
 15341                        	.sym	TASK,0,10,14,48,13
 15342                        	.sym	PIRQDATA,0,138,14,32,12
 15343                        	.sym	IRQDATA,0,10,14,48,12
 15344                        	.sym	HMENU,0,129,14,32
 15345                        	.sym	HWND,0,129,14,32
 15346                        	.sym	MSGDATA,0,14,14,8
 15347                        	.sym	MSGDEST,0,18,14,32
 15348                        	.sym	MSGSRC,0,18,14,32
 15349                        	.sym	MSGTYPE,0,16,14,16
 15350                        	.sym	PROCESS_RESOURCE_LIST,0,138,14,32,6
 15351                        	.sym	PROCESS_TLS_LIST,0,138,14,32,6
 15352                        	.sym	SEMAPHORE_LIST,0,138,14,32,6
 15353                        	.sym	FILE_BLOCK_LIST,0,138,14,32,6
 15354                        	.sym	FILE_PATH_LIST,0,138,14,32,6
 15355                        	.sym	PROCEDURE_LIST,0,138,14,32,6
 15356                        	.sym	FILE_HANDLE,0,138,14,32,11
 15357                        	.sym	FILE_BLOCK,0,10,14,552,11
 15358                        	.sym	SEMAPHORE,0,10,14,16,10
 15359                        	.sym	PPROCESS_SIGNAL,0,138,14,32,9
 15360                        	.sym	PROCESS_SIGNAL,0,10,14,16,9
 15361                        	.sym	KRESULT,0,18,14,32
 15362                        	.sym	PKERNEL_ERROR,0,138,14,32,8
 15363                        	.sym	KERNEL_ERROR,0,10,14,32,8
 15364                        	.sym	PROCESS_STATUS,0,16,14,16
 15365                        	.sym	FILE_PATH_NAME,0,142,14,32
 15366                        	.sym	PROCESS_RESOURCE,0,129,14,32
 15367                        	.sym	PROCESS_TLS,0,129,14,32
 15368                        	.sym	PROCESS_CTX,0,129,14,32
 15369                        	.sym	USERID,0,16,14,16
 15370                        	.sym	PROCESS_ID,0,18,14,32
 15371                        	.sym	PROCESS_BANK,0,14,14,8
 15372                        	.sym	PFXQUEUE,0,138,14,32,7
 15373                        	.sym	FXQUEUE,0,10,14,80,7
 15374                        	.sym	PFXNODELIST,0,138,14,32,6
 15375                        	.sym	FXNODELIST,0,10,14,96,6
 15376                        	.sym	NodeListDeallocator,0,641,14,32
 15377                        	.sym	PFXNODE,0,138,14,32,5
 15378                        	.sym	FXNODE,0,10,14,384,5
 15379                        	.sym	PBYTEBITS,0,138,14,32,4
 15380                        	.sym	BYTEBITS,0,10,14,8,4
 15381                        	.sym	HRESULT,0,18,14,32
 15382                        	.sym	LPWCHAR,0,144,14,32
 15383                        	.sym	WCHAR,0,16,14,16
 15384                        	.sym	HCOLOR,0,129,14,32
 15385                        	.sym	HFONT,0,129,14,32
 15386                        	.sym	HDC,0,129,14,32
 15387                        	.sym	HPOINTER,0,129,14,32
 15388                        	.sym	uint32_t,0,18,14,32
 15389                        	.sym	uint8_t,0,14,14,8
 15390                        	.sym	LPBOOL,0,142,14,32
 15391                        	.sym	BOOL,0,14,14,8
 15392                        	.sym	DWORD,0,18,14,32
 15393                        	.sym	ULONG,0,18,14,32
 15394                        	.sym	LPLONG,0,135,14,32
 15395                        	.sym	LONG,0,7,14,32
 15396                        	.sym	PUINT,0,144,14,32
  Sat Jul 10 2021  1:15                                                Page 284


 15397                        	.sym	USHORT,0,16,14,16
 15398                        	.sym	UINT,0,16,14,16
 15399                        	.sym	INT,0,5,14,16
 15400                        	.sym	WORD,0,5,14,16
 15401                        	.sym	PBYTE,0,142,14,32
 15402                        	.sym	BYTE,0,14,14,8
 15403                        	.sym	IOPORT,0,142,14,32
 15404                        	.sym	PUCHAR,0,142,14,32
 15405                        	.sym	UCHAR,0,14,14,8
 15406                        	.sym	LPWCSTR,0,142,14,32
 15407                        	.sym	LPCSTR,0,142,14,32
 15408                        	.sym	LPSTR,0,142,14,32
 15409                        	.sym	LPCHAR,0,142,14,32
 15410                        	.sym	CHAR,0,14,14,8
 15411                        	.sym	LPVOID,0,129,14,32
 15412                        	.sym	VOID,0,1,14,32
 15413                        	.sym	~~strcpy,~~strcpy,1102,18,32
 15414                        	.sym	~~memcpy,~~memcpy,1089,18,32
 15415                        	.sym	Boolean_T,0,5,14,16
 15416                        	.sym	ldiv_t,0,10,14,64,2
 15417                        	.sym	div_t,0,10,14,32,1
 15418                        	.sym	wctype_t,0,16,14,16
 15419                        	.sym	wint_t,0,16,14,16
 15420                        	.sym	wchar_t,0,14,14,8
 15421                        	.sym	ptrdiff_t,0,7,14,32
 15422                        	.sym	size_t,0,16,14,16
 15423                        	end


      Lines assembled: 15423
      Errors: 0
