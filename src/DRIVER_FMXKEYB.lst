  Mon Aug  9 2021 16:52                                                Page 1


                     ***************************************
                     **      WDC 65C816 Macro Assembler   **
                     **                                   **
                     **     Version 3.49.1- Feb  6 2006    **
                     ***************************************

     1                        ;:ts=8
     2             00000001   R0	equ	1
     3             00000005   R1	equ	5
     4             00000009   R2	equ	9
     5             0000000D   R3	equ	13
     6                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\drivers/DRIVER_FMXKEYB.c",0
     7                        ;#include "fxtypes.h"
     8                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxtypes.h",0
     9                        	.stag	_fx_bytebits,8,1
    10                        	.member	b7,0,14,17,1
    11                        	.member	b6,1,14,17,1
    12                        	.member	b5,2,14,17,1
    13                        	.member	b4,3,14,17,1
    14                        	.member	b3,4,14,17,1
    15                        	.member	b2,5,14,17,1
    16                        	.member	b1,6,14,17,1
    17                        	.member	b0,7,14,17,1
    18                        	.eos
    19                        	.stag	_fx_node,384,2
    20                        	.member	type,0,14,8,8
    21                        	.member	Reserved0,8,14,8,8
    22                        	.member	data,16,129,8,32
    23                        	.member	last,48,138,8,32,2
    24                        	.member	next,80,138,8,32,2
    25                        	.member	name,112,110,8,0,32
    26                        	.member	Reserved1,368,16,8,16
    27                        	.eos
    28                        	.stag	_fx_nodelist,96,3
    29                        	.member	listhead,0,138,8,32,2
    30                        	.member	listData,32,129,8,32
    31                        	.member	deallocator,64,641,8,32
    32                        	.eos
    33                        	.stag	_fx_queue,80,4
    34                        	.member	count,0,5,8,16
    35                        	.member	front,16,138,8,32,2
    36                        	.member	rear,48,138,8,32,2
    37                        	.eos
    38                        	.stag	fake5_,32,5
    39                        	.member	subsystem,0,14,8,8
    40                        	.member	level,8,14,8,8
    41                        	.member	error,16,16,8,16
    42                        	.eos
    43                        	.stag	_fx_process_signal,16,6
    44                        	.member	cbSize,0,16,8,16
    45                        	.eos
    46                        	.stag	_fx_semaphore,16,7
    47                        	.member	reserved,0,5,8,16
    48                        	.eos
    49                        	.stag	_fx_fileBlock,552,8
    50                        	.member	openCount,0,16,8,16
  Mon Aug  9 2021 16:52                                                Page 2


    51                        	.member	lockCount,16,16,8,16
    52                        	.member	dirty,32,14,8,8
    53                        	.member	fileBuffer,40,110,8,0,64
    54                        	.eos
    55                        	.stag	_fx_irq_data,48,9
    56                        	.member	line,0,5,8,16
    57                        	.member	keycode,16,142,8,32
    58                        	.eos
    59                        	.stag	_task,48,10
    60                        	.member	SPL,0,14,8,8
    61                        	.member	SPH,8,14,8,8
    62                        	.member	pstack,16,142,8,32
    63                        	.eos
    64                        	.stag	_task_stack,32,11
    65                        	.member	SS,0,142,8,32
    66                        	.eos
    67                        	.stag	int_regs,104,12
    68                        	.member	PB,0,14,8,8
    69                        	.member	PH,8,14,8,8
    70                        	.member	PL,16,14,8,8
    71                        	.member	PP,24,14,8,8
    72                        	.member	DB,32,14,8,8
    73                        	.member	DH,40,14,8,8
    74                        	.member	DL,48,14,8,8
    75                        	.member	AH,56,14,8,8
    76                        	.member	AL,64,14,8,8
    77                        	.member	XH,72,14,8,8
    78                        	.member	XL,80,14,8,8
    79                        	.member	YH,88,14,8,8
    80                        	.member	YL,96,14,8,8
    81                        	.eos
    82                        	.stag	_fx_eventMessage,312,13
    83                        	.member	src,0,18,8,32
    84                        	.member	dest,32,18,8,32
    85                        	.member	type,64,16,8,16
    86                        	.member	hwnd,80,129,8,32
    87                        	.member	pheap,112,129,8,32
    88                        	.member	msgTime,144,18,8,32
    89                        	.member	data,176,110,8,0,16
    90                        	.member	attr,304,14,8,8
    91                        	.eos
    92                        	.stag	_fx_cmdMessage,312,14
    93                        	.member	src,0,18,8,32
    94                        	.member	dest,32,18,8,32
    95                        	.member	type,64,16,8,16
    96                        	.member	hwnd,80,129,8,32
    97                        	.member	pheap,112,129,8,32
    98                        	.member	msgTime,144,18,8,32
    99                        	.member	cmdCId,176,16,8,16
   100                        	.member	cmdMId,192,16,8,16
   101                        	.member	parameter1,208,18,8,32
   102                        	.member	parameter2,240,18,8,32
   103                        	.member	parameter3,272,18,8,32
   104                        	.member	attr,304,14,8,8
   105                        	.eos
   106                        	.stag	_fx_console_ctl,448,15
   107                        	.member	maxCols,0,5,8,16
   108                        	.member	maxRows,16,5,8,16
  Mon Aug  9 2021 16:52                                                Page 3


   109                        	.member	curX,32,5,8,16
   110                        	.member	curY,48,5,8,16
   111                        	.member	fgColor,64,5,8,16
   112                        	.member	bgColor,80,5,8,16
   113                        	.member	mode,96,14,8,8
   114                        	.member	kbBuffer,104,101,8,0,16
   115                        	.member	screenBuffer,360,142,8,32
   116                        	.member	desktopMode,392,14,8,8
   117                        	.member	lastMouseButton,400,5,8,16
   118                        	.member	lastMouseX,416,5,8,16
   119                        	.member	lastMouseY,432,5,8,16
   120                        	.eos
   121                        	.stag	_fx_desktop_ctl,392,16
   122                        	.member	desktopMode,0,14,8,8
   123                        	.member	cursorCtl,8,5,8,16
   124                        	.member	cursorState,24,5,8,16
   125                        	.member	backgroundColor,40,5,8,16
   126                        	.member	foregroundColor,56,5,8,16
   127                        	.member	menuMode,72,5,8,16
   128                        	.member	lastMouseButton,88,5,8,16
   129                        	.member	lastMouseX,104,5,8,16
   130                        	.member	lastMouseY,120,5,8,16
   131                        	.member	currentDiskName,136,142,8,32
   132                        	.member	diskNodes,168,129,8,32
   133                        	.member	titleNodes,200,129,8,32
   134                        	.member	menuNodes,232,129,8,32
   135                        	.member	iconNodes,264,129,8,32
   136                        	.member	windowNodes,296,129,8,32
   137                        	.member	fontNodes,328,129,8,32
   138                        	.member	wndProc,360,138,8,32,3
   139                        	.eos
   140                        	.stag	_fx_process,800,17
   141                        	.member	cbSize,0,5,8,16
   142                        	.member	procId,16,18,8,32
   143                        	.member	parentId,48,18,8,32
   144                        	.member	ctx,80,129,8,32
   145                        	.member	userId,112,16,8,16
   146                        	.member	status,128,16,8,16
   147                        	.member	foregroundActive,144,14,8,8
   148                        	.member	tls,152,1121,8,32,8
   149                        	.member	commandLine,408,142,8,32
   150                        	.member	semaphores,440,138,8,32,3
   151                        	.member	fileHandles,472,138,8,32,3
   152                        	.member	pathList,504,138,8,32,3
   153                        	.member	resources,536,138,8,32,3
   154                        	.member	timerAware,568,14,8,8
   155                        	.member	timerTicks,576,112,8,0,2
   156                        	.member	timerTickCount,608,112,8,0,2
   157                        	.member	kernelError,640,10,8,32,5
   158                        	.member	consoleCtl,672,138,8,32,15
   159                        	.member	desktopCtl,704,138,8,32,16
   160                        	.member	execProc,736,641,8,32
   161                        	.member	startupArgs,768,129,8,32
   162                        	.eos
   163                        	.stag	_fxProcessMessage,112,18
   164                        	.member	src,0,18,8,32
   165                        	.member	dest,32,18,8,32
   166                        	.member	type,64,16,8,16
  Mon Aug  9 2021 16:52                                                Page 4


   167                        	.member	processInfo,80,138,8,32,17
   168                        	.eos
   169                        	.stag	_k_key_state,112,19
   170                        	.member	scanCode,0,14,8,8
   171                        	.member	isShifted,8,14,8,8
   172                        	.member	isAlt,16,14,8,8
   173                        	.member	isExtended,24,14,8,8
   174                        	.member	isCapsLock,32,14,8,8
   175                        	.member	isNumLock,40,14,8,8
   176                        	.member	isScrollLock,48,14,8,8
   177                        	.member	keyChar,56,16,8,16
   178                        	.member	scanTime,72,18,8,32
   179                        	.member	ledStatus,104,14,8,8
   180                        	.eos
   181                        	.stag	_fx_property,384,20
   182                        	.member	name,0,110,8,0,16
   183                        	.member	value,128,110,8,0,32
   184                        	.eos
   185                        	.utag	_24bitPointer,32,21
   186                        	.member	address,0,142,11,32
   187                        	.member	bytes,0,110,11,0,4
   188                        	.eos
   189                        	.stag	_PointStruct,32,22
   190                        	.member	x,0,5,8,16
   191                        	.member	y,16,5,8,16
   192                        	.eos
   193                        	.stag	_RectStruct,112,23
   194                        	.member	x,0,5,8,16
   195                        	.member	y,16,5,8,16
   196                        	.member	z,32,18,8,32
   197                        	.member	width,64,5,8,16
   198                        	.member	height,80,5,8,16
   199                        	.member	attr,96,5,8,16
   200                        	.eos
   201                        	.stag	fake24_,96,24
   202                        	.member	name,0,142,8,32
   203                        	.member	topLeft,32,10,8,32,22
   204                        	.member	bottomRight,64,10,8,32,22
   205                        	.eos
   206                        	.stag	fake25_,112,25
   207                        	.member	x,0,5,8,16
   208                        	.member	y,16,5,8,16
   209                        	.member	z,32,5,8,16
   210                        	.member	width,48,5,8,16
   211                        	.member	height,64,5,8,16
   212                        	.member	data,80,18,8,32
   213                        	.eos
   214                        	.stag	_k_WindowClass,272,26
   215                        	.member	cbSize,0,16,8,16
   216                        	.member	style,16,16,8,16
   217                        	.member	styleEx,32,16,8,16
   218                        	.member	pWndProc,48,654,8,32
   219                        	.member	hInstance,80,129,8,32
   220                        	.member	hIcon,112,129,8,32
   221                        	.member	hCursor,144,129,8,32
   222                        	.member	hbrBackground,176,129,8,32
   223                        	.member	lpszMenuName,208,142,8,32
   224                        	.member	lpszClassName,240,142,8,32
  Mon Aug  9 2021 16:52                                                Page 5


   225                        	.eos
   226                        	.stag	_ClickableRect,152,27
   227                        	.member	area,0,10,8,112,23
   228                        	.member	z,112,18,8,32
   229                        	.member	enabled,144,14,8,8
   230                        	.eos
   231                        	.stag	_NCClickableRect,136,28
   232                        	.member	area,0,10,8,112,23
   233                        	.member	msgType,112,16,8,16
   234                        	.member	enabled,128,14,8,8
   235                        	.eos
   236                        	.stag	_DragData,216,29
   237                        	.member	area,0,10,8,112,23
   238                        	.member	xoffset,112,5,8,16
   239                        	.member	yoffset,128,5,8,16
   240                        	.member	msgType,144,16,8,16
   241                        	.member	ncAction,160,16,8,16
   242                        	.member	isDrag,176,14,8,8
   243                        	.member	isResize,184,14,8,8
   244                        	.member	canDrag,192,14,8,8
   245                        	.member	canDrop,200,14,8,8
   246                        	.member	didDrag,208,14,8,8
   247                        	.eos
   248                        	.stag	_k_WindowStruct,3904,30
   249                        	.member	cbSize,0,16,8,16
   250                        	.member	style,16,18,8,32
   251                        	.member	styleEx,48,18,8,32
   252                        	.member	win_id,80,5,8,16
   253                        	.member	win_x,96,5,8,16
   254                        	.member	win_y,112,5,8,16
   255                        	.member	win_width,128,5,8,16
   256                        	.member	win_height,144,5,8,16
   257                        	.member	win_xoffset,160,5,8,16
   258                        	.member	win_yoffset,176,5,8,16
   259                        	.member	win_cxoffset,192,5,8,16
   260                        	.member	win_cyoffset,208,5,8,16
   261                        	.member	wndRect,224,10,8,112,23
   262                        	.member	clientRect,336,10,8,112,23
   263                        	.member	nonclientGadgets,448,106,8,0,28,16
   264                        	.member	clickable,2624,129,8,32
   265                        	.member	win_title,2656,110,8,0,32
   266                        	.member	Reserved0,2912,16,8,16
   267                        	.member	win_class,2928,110,8,0,16
   268                        	.member	win_class_name,3056,110,8,0,32
   269                        	.member	nBitmapLayer,3312,16,8,16
   270                        	.member	bgRegion,3328,129,8,32
   271                        	.member	procid,3360,18,8,32
   272                        	.member	pWndClass,3392,138,8,32,26
   273                        	.member	pParentWindow,3424,129,8,32
   274                        	.member	hMenu,3456,129,8,32
   275                        	.member	hPointer,3488,129,8,32
   276                        	.member	hBackground,3520,129,8,32
   277                        	.member	pChildWindows,3552,138,8,32,3
   278                        	.member	pChildHitList,3584,138,8,32,3
   279                        	.member	isVisible,3616,14,8,8
   280                        	.member	windowData,3624,129,8,32
   281                        	.member	clientData,3656,1121,8,32,6
   282                        	.member	isClosed,3848,14,8,8
  Mon Aug  9 2021 16:52                                                Page 6


   283                        	.member	isClosing,3856,14,8,8
   284                        	.member	isDesktop,3864,14,8,8
   285                        	.member	clickableNode,3872,138,8,32,2
   286                        	.eos
   287                        	.stag	_k_WindowStructEx,3880,31
   288                        	.member	cbSize,0,16,8,16
   289                        	.member	style,16,18,8,32
   290                        	.member	styleEx,48,18,8,32
   291                        	.member	win_id,80,5,8,16
   292                        	.member	win_x,96,5,8,16
   293                        	.member	win_y,112,5,8,16
   294                        	.member	win_width,128,5,8,16
   295                        	.member	win_height,144,5,8,16
   296                        	.member	win_xoffset,160,5,8,16
   297                        	.member	win_yoffset,176,5,8,16
   298                        	.member	win_cxoffset,192,5,8,16
   299                        	.member	win_cyoffset,208,5,8,16
   300                        	.member	wndRect,224,10,8,112,23
   301                        	.member	clientRect,336,10,8,112,23
   302                        	.member	nonclientGadgets,448,106,8,0,28,16
   303                        	.member	clickable,2624,129,8,32
   304                        	.member	win_title,2656,110,8,0,32
   305                        	.member	Reserved0,2912,16,8,16
   306                        	.member	win_class,2928,110,8,0,16
   307                        	.member	nBitmapLayer,3056,16,8,16
   308                        	.member	procid,3072,18,8,32
   309                        	.member	pWndClass,3104,138,8,32,26
   310                        	.member	pParentWindow,3136,129,8,32
   311                        	.member	hMenu,3168,129,8,32
   312                        	.member	hPointer,3200,129,8,32
   313                        	.member	hBackground,3232,129,8,32
   314                        	.member	pChildWindows,3264,138,8,32,3
   315                        	.member	pChildHitList,3296,138,8,32,3
   316                        	.member	isVisible,3328,14,8,8
   317                        	.member	windowData,3336,129,8,32
   318                        	.member	clientData,3368,1121,8,32,4
   319                        	.member	isClosed,3496,14,8,8
   320                        	.member	hWnd,3504,129,8,32
   321                        	.member	localRect,3536,10,8,112,23
   322                        	.member	globalRect,3648,10,8,112,23
   323                        	.member	clientOffsetRect,3760,10,8,112,23
   324                        	.member	isDesktop,3872,14,8,8
   325                        	.eos
   326                        	.stag	_FontMetric,32,32
   327                        	.member	width,0,5,8,16
   328                        	.member	height,16,5,8,16
   329                        	.eos
   330                        	.stag	_MenuStruct,280,33
   331                        	.member	cx,0,5,8,16
   332                        	.member	cy,16,5,8,16
   333                        	.member	width,32,5,8,16
   334                        	.member	height,48,5,8,16
   335                        	.member	fcolor,64,14,8,8
   336                        	.member	bcolor,72,14,8,8
   337                        	.member	chromeLeft,80,14,8,8
   338                        	.member	chromeRight1,88,14,8,8
   339                        	.member	chromeRight2,96,14,8,8
   340                        	.member	hFont,104,129,8,32
  Mon Aug  9 2021 16:52                                                Page 7


   341                        	.member	itemId,136,16,8,16
   342                        	.member	pCaption,152,142,8,32
   343                        	.member	subMenus,184,138,8,32,3
   344                        	.member	pBackground,216,129,8,32
   345                        	.member	hWndOwner,248,129,8,32
   346                        	.eos
   347                        	.stag	fake34_,160,34
   348                        	.member	menuId,0,16,8,16
   349                        	.member	caption,16,142,8,32
   350                        	.member	rect,48,10,8,112,23
   351                        	.eos
   352                        	.stag	fake35_,5152,35
   353                        	.member	pParent,0,138,8,32,30
   354                        	.member	rect,32,10,8,112,23
   355                        	.member	captions,144,1134,8,32,24
   356                        	.member	chrome,912,110,8,0,24
   357                        	.member	ids,1104,112,8,0,24
   358                        	.member	clickable,1488,106,8,0,27,24
   359                        	.member	selected,5136,16,8,16
   360                        	.eos
   361                        	.stag	_fx_button_t,96,36
   362                        	.member	pCaption,0,142,8,32
   363                        	.member	cCaption,32,16,8,16
   364                        	.member	data,48,129,8,32
   365                        	.member	captionPixelWidth,80,16,8,16
   366                        	.eos
   367                        	.stag	_fx_scrollbar_t,240,37
   368                        	.member	min,0,16,8,16
   369                        	.member	max,16,16,8,16
   370                        	.member	increment,32,16,8,16
   371                        	.member	stopsize,48,16,8,16
   372                        	.member	location,64,5,8,16
   373                        	.member	state,80,5,8,16
   374                        	.member	rectThumb,96,10,8,112,23
   375                        	.member	data,208,129,8,32
   376                        	.eos
   377                        	.stag	_fx_listbox_t,240,38
   378                        	.member	pos,0,5,8,16
   379                        	.member	selected,16,16,8,16
   380                        	.member	offsetX,32,5,8,16
   381                        	.member	offsetY,48,5,8,16
   382                        	.member	inc,64,5,8,16
   383                        	.member	direction,80,5,8,16
   384                        	.member	top,96,5,8,16
   385                        	.member	bottom,112,5,8,16
   386                        	.member	indexTop,128,5,8,16
   387                        	.member	indexBottom,144,5,8,16
   388                        	.member	maxItems,160,16,8,16
   389                        	.member	fontSet,176,142,8,32
   390                        	.member	data,208,129,8,32
   391                        	.eos
   392                        	.stag	_fx_textbox_t,144,39
   393                        	.member	pos,0,5,8,16
   394                        	.member	selected,16,16,8,16
   395                        	.member	offsetX,32,5,8,16
   396                        	.member	offsetY,48,5,8,16
   397                        	.member	isShifted,64,14,8,8
   398                        	.member	cursorState,72,14,8,8
  Mon Aug  9 2021 16:52                                                Page 8


   399                        	.member	fontSet,80,142,8,32
   400                        	.member	data,112,129,8,32
   401                        	.eos
   402                        	.stag	_fx_msgbox_t,144,40
   403                        	.member	pos,0,5,8,16
   404                        	.member	selected,16,16,8,16
   405                        	.member	offsetX,32,5,8,16
   406                        	.member	offsetY,48,5,8,16
   407                        	.member	isShifted,64,14,8,8
   408                        	.member	cursorState,72,14,8,8
   409                        	.member	fontSet,80,142,8,32
   410                        	.member	data,112,129,8,32
   411                        	.eos
   412                        	.stag	_fx_menuAnchor_t,272,41
   413                        	.member	pCaption,0,142,8,32
   414                        	.member	renderLayoutX,32,16,8,16
   415                        	.member	renderLayoutY,48,16,8,16
   416                        	.member	captionPixelWidth,64,16,8,16
   417                        	.member	data,80,129,8,32
   418                        	.member	droppedWindow,112,138,8,32,30
   419                        	.member	bytes,144,110,8,0,16
   420                        	.eos
   421                        	.stag	_SubMenuStruct,64,42
   422                        	.member	caption,0,142,8,32
   423                        	.member	action,32,641,8,32
   424                        	.eos
   425                        	.stag	_SubMenuListStruct,40,43
   426                        	.member	cMenus,0,14,8,8
   427                        	.member	psubmenus,8,9354,8,32,42
   428                        	.eos
   429                        	.stag	_fx_ComBuffer,2080,44
   430                        	.member	cbSize,0,16,8,16
   431                        	.member	cbBuffer,16,16,8,16
   432                        	.member	buffer,32,110,8,0,256
   433                        	.eos
   434                        	.stag	_fx_resource_header,72,45
   435                        	.member	magic,0,110,8,0,4
   436                        	.member	major,32,14,8,8
   437                        	.member	minor,40,14,8,8
   438                        	.member	type,48,14,8,8
   439                        	.member	reserved,56,14,8,8
   440                        	.member	resheaderSize,64,14,8,8
   441                        	.eos
   442                        	.stag	_fx_resource_header_font,144,46
   443                        	.member	title,0,110,8,0,16
   444                        	.member	height,128,14,8,8
   445                        	.member	width,136,14,8,8
   446                        	.eos
   447                        	.stag	_fx_resource_string,32,47
   448                        	.member	locale,0,110,8,0,2
   449                        	.member	entries,16,16,8,16
   450                        	.eos
   451                        	.stag	_fx_resource_string_entry,40,48
   452                        	.member	index,0,16,8,16
   453                        	.member	length,16,16,8,16
   454                        	.member	data,32,14,8,8
   455                        	.eos
   456                        	.line	1064
  Mon Aug  9 2021 16:52                                                Page 9


   457                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\drivers/DRIVER_FMXKEYB.c",1
   458                        ;#include "fxkernel.h"
   459                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxkernel.h",0
   460                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxos.h",0
   461                        	.file	"G:\devtools\WDCTools\wdc\Tools\include\
                    stdlib.h",0
   462                        	.file	"G:\devtools\WDCTools\wdc\Tools\include\
                    stddef.h",0
   463                        	.line	88
   464                        	.file	"G:\devtools\WDCTools\wdc\Tools\include\
                    stdlib.h",43
   465                        	.stag	fake49_,32,49
   466                        	.member	quot,0,5,8,16
   467                        	.member	rem,16,5,8,16
   468                        	.eos
   469                        	.stag	fake50_,64,50
   470                        	.member	quot,0,7,8,32
   471                        	.member	rem,32,7,8,32
   472                        	.eos
   473                        	.stag	int_sqrt,32,51
   474                        	.member	sqrt,0,16,8,16
   475                        	.member	frac,16,16,8,16
   476                        	.eos
   477                        	.line	205
   478                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxos.h",4
   479                        	.file	"G:\devtools\WDCTools\wdc\Tools\include\
                    string.h",0
   480                        	.line	134
   481                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxos.h",5
   482                        	.file	"G:\devtools\WDCTools\wdc\Tools\include\
                    ctype.h",0
   483                        	.line	103
   484                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxos.h",6
   485                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxtypes.h",0
   486                        	.line	1064
   487                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxos.h",8
   488                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxstringtable.h",0
   489                        	.line	90
   490                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxos.h",9
   491                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxc256u.h",0
   492                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxtypes.h",0
   493                        	.line	1064
   494                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxc256u.h",5
   495                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fmx_vicky.h",0
  Mon Aug  9 2021 16:52                                                Page 10


   496                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxtypes.h",0
   497                        	.line	1064
   498                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fmx_vicky.h",11
   499                        	.line	72
   500                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxc256u.h",6
   501                        	.line	1960
   502                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxos.h",16
   503                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxkernel.h",0
   504                        	.line	490
   505                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxos.h",22
   506                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxconsole.h",0
   507                        	.file	"G:\devtools\WDCTools\wdc\Tools\include\
                    string.h",0
   508                        	.line	134
   509                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxconsole.h",5
   510                        	.file	"G:\devtools\WDCTools\wdc\Tools\include\
                    stdlib.h",0
   511                        	.line	205
   512                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxconsole.h",6
   513                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxtypes.h",0
   514                        	.line	1064
   515                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxconsole.h",7
   516                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxc256u.h",0
   517                        	.line	1960
   518                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxconsole.h",12
   519                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxstring.h",0
   520                        	.file	"G:\devtools\WDCTools\wdc\Tools\include\
                    stdlib.h",0
   521                        	.line	205
   522                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxstring.h",5
   523                        	.file	"G:\devtools\WDCTools\wdc\Tools\include\
                    string.h",0
   524                        	.line	134
   525                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxstring.h",6
   526                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxtypes.h",0
   527                        	.line	1064
   528                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxstring.h",7
   529                        	.stag	_fx_string,64,52
   530                        	.member	size,0,16,8,16
   531                        	.member	pos,16,5,8,16
  Mon Aug  9 2021 16:52                                                Page 11


   532                        	.member	buffer,32,142,8,32
   533                        	.eos
   534                        	.line	141
   535                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxconsole.h",17
   536                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxeventmanager.h",0
   537                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxos.h",0
   538                        	.line	30
   539                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxeventmanager.h",5
   540                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxexec.h",0
   541                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxtypes.h",0
   542                        	.line	1064
   543                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxexec.h",5
   544                        	.stag	_fxos_executive_vtable,128,53
   545                        	.member	Init,0,8833,8,32
   546                        	.member	Configure,32,656,8,32
   547                        	.member	Query,64,656,8,32
   548                        	.member	Uninit,96,641,8,32
   549                        	.eos
   550                        	.line	86
   551                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxeventmanager.h",6
   552                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxnode.h",0
   553                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxtypes.h",0
   554                        	.line	1064
   555                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxnode.h",11
   556                        	.line	118
   557                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxeventmanager.h",7
   558                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxconsole.h",0
   559                        	.line	208
   560                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxeventmanager.h",8
   561                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxwindowmanager.h",0
   562                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxos.h",0
   563                        	.line	30
   564                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxwindowmanager.h",5
   565                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxmemorymanager.h",0
   566                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxos.h",0
   567                        	.line	30
   568                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxmemorymanager.h",5
   569                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
  Mon Aug  9 2021 16:52                                                Page 12


                    space\FXOS-Beta\src\umm_malloc_cfg.h",0
   570                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxos_build_parameters.h",0
   571                        	.line	35
   572                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\umm_malloc_cfg.h",8
   573                        	.stag	UMM_HEAP_INFO_t,256,54
   574                        	.member	totalEntries,0,18,8,32
   575                        	.member	usedEntries,32,18,8,32
   576                        	.member	freeEntries,64,18,8,32
   577                        	.member	totalBlocks,96,18,8,32
   578                        	.member	usedBlocks,128,18,8,32
   579                        	.member	freeBlocks,160,18,8,32
   580                        	.member	maxFreeContiguousBlocks,192,18,8,32
   581                        	.member	blockSize,224,18,8,32
   582                        	.eos
   583                        	.line	199
   584                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxmemorymanager.h",6
   585                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\umm_malloc.h",0
   586                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxtypes.h",0
   587                        	.line	1064
   588                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\umm_malloc.h",11
   589                        	.line	24
   590                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxmemorymanager.h",7
   591                        	.stag	_fx_memory_map,2072,55
   592                        	.member	availableMemory,0,18,8,32
   593                        	.member	valid_segments,32,110,8,0,255
   594                        	.eos
   595                        	.stag	_fx_ipc_port,144,56
   596                        	.member	id,0,18,8,32
   597                        	.member	type,32,14,8,8
   598                        	.member	name,40,138,8,32,52
   599                        	.member	time,72,18,8,32
   600                        	.member	queue,104,138,8,32,4
   601                        	.member	reserved_1,136,14,8,8
   602                        	.eos
   603                        	.stag	_k_mem_alloc_header,80,57
   604                        	.member	user,0,14,8,8
   605                        	.member	attr,8,14,8,8
   606                        	.member	size,16,18,8,32
   607                        	.member	virtual,48,129,8,32
   608                        	.eos
   609                        	.line	129
   610                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxwindowmanager.h",6
   611                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxeventmanager.h",0
   612                        	.line	568
   613                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxwindowmanager.h",7
   614                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxgfx.h",0
   615                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
  Mon Aug  9 2021 16:52                                                Page 13


                    space\FXOS-Beta\src\fxfont.h",0
   616                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxtypes.h",0
   617                        	.line	1064
   618                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxfont.h",6
   619                        	.line	74
   620                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxgfx.h",5
   621                        	.stag	_click_detected,64,58
   622                        	.member	window,0,138,8,32,30
   623                        	.member	handler,32,641,8,32
   624                        	.eos
   625                        	.stag	_current_palette_map,400,59
   626                        	.member	CUR_DESKTOP,0,5,8,16
   627                        	.member	CUR_BACKGROUND,16,5,8,16
   628                        	.member	CUR_FONT,32,5,8,16
   629                        	.member	CUR_SELECTED_FONT,48,5,8,16
   630                        	.member	CUR_HIGHLIGHT_COLOR,64,5,8,16
   631                        	.member	CUR_WINDOWFRAME,80,5,8,16
   632                        	.member	CUR_WINDOWBORDER,96,5,8,16
   633                        	.member	CUR_WINDOWSHADOW,112,5,8,16
   634                        	.member	CUR_MENU,128,5,8,16
   635                        	.member	CUR_GADGET,144,5,8,16
   636                        	.member	CUR_COLOR,160,101,8,0,15
   637                        	.eos
   638                        	.line	359
   639                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxwindowmanager.h",8
   640                        	.stag	_fxos_winman_vtable,160,60
   641                        	.member	Events,0,641,8,32
   642                        	.member	ConfigureWindowManager,32,656,8,32
   643                        	.member	ProcessWindowEvent,64,8833,8,32
   644                        	.member	QueryWindowManager,96,656,8,32
   645                        	.member	DoWndProcs,128,641,8,32
   646                        	.eos
   647                        	.stag	fake61_,64,61
   648                        	.member	type,0,16,8,16
   649                        	.member	size,16,16,8,16
   650                        	.member	desktopAction,32,129,8,32
   651                        	.eos
   652                        	.stag	fake62_,96,62
   653                        	.member	type,0,16,8,16
   654                        	.member	caption,16,138,8,32,52
   655                        	.member	buttonType,48,16,8,16
   656                        	.member	x,64,5,8,16
   657                        	.member	y,80,5,8,16
   658                        	.eos
   659                        	.stag	_childMessage_t,64,63
   660                        	.member	msgType,0,16,8,16
   661                        	.member	msgData,16,129,8,32
   662                        	.member	dataSize,48,16,8,16
   663                        	.eos
   664                        	.line	594
   665                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxeventmanager.h",9
   666                        	.stag	_fx_main_loopvars,16,64
   667                        	.member	dummy,0,5,8,16
  Mon Aug  9 2021 16:52                                                Page 14


   668                        	.eos
   669                        	.stag	_fxMouseMessageData,64,65
   670                        	.member	button1,0,14,8,8
   671                        	.member	button2,8,14,8,8
   672                        	.member	button3,16,14,8,8
   673                        	.member	button4,24,14,8,8
   674                        	.member	x,32,16,8,16
   675                        	.member	y,48,16,8,16
   676                        	.eos
   677                        	.utag	marshalled_data,32,66
   678                        	.member	byteValue,0,14,11,8
   679                        	.member	verbValue,0,110,11,0,2
   680                        	.member	intValue,0,16,11,16
   681                        	.member	longValue,0,18,11,32
   682                        	.member	pointerValue,0,129,11,32
   683                        	.eos
   684                        	.stag	_fx_eventProcess,64,67
   685                        	.member	process,0,138,8,32,17
   686                        	.member	eventProc,32,641,8,32
   687                        	.eos
   688                        	.stag	_mouse_msg_state,184,68
   689                        	.member	lastEvent,0,18,8,32
   690                        	.member	buttonLeftDown,32,14,8,8
   691                        	.member	lastLeftDown,40,18,8,32
   692                        	.member	buttonRightDown,72,14,8,8
   693                        	.member	lastRightDown,80,18,8,32
   694                        	.member	buttonMiddleDown,112,14,8,8
   695                        	.member	lastMiddleDown,120,18,8,32
   696                        	.member	lastX,152,16,8,16
   697                        	.member	lastY,168,16,8,16
   698                        	.eos
   699                        	.stag	_fxos_eventmanager_vtable,192,69
   700                        	.member	EventQueue,0,138,8,32,4
   701                        	.member	Init,32,8833,8,32
   702                        	.member	Run,64,656,8,32
   703                        	.member	Configure,96,656,8,32
   704                        	.member	Query,128,656,8,32
   705                        	.member	Uninit,160,641,8,32
   706                        	.eos
   707                        	.stag	_k_clipboard_data,168,70
   708                        	.member	type,0,14,8,8
   709                        	.member	readable,8,110,8,0,16
   710                        	.member	data,136,129,8,32
   711                        	.eos
   712                        	.line	568
   713                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxconsole.h",18
   714                        	.stag	_fx_spinner_ctx,48,71
   715                        	.member	index,0,5,8,16
   716                        	.member	spinner,16,142,8,32
   717                        	.eos
   718                        	.stag	_fx_console_ctx,1144,72
   719                        	.member	lineBufferIndex,0,5,8,16
   720                        	.member	lineBuffer,16,110,8,0,128
   721                        	.member	isShifted,1040,14,8,8
   722                        	.member	userData,1048,129,8,32
   723                        	.member	screenBuffer,1080,129,8,32
   724                        	.member	Reserved1,1112,129,8,32
  Mon Aug  9 2021 16:52                                                Page 15


   725                        	.eos
   726                        	.stag	_token,64,73
   727                        	.member	type,0,5,8,16
   728                        	.member	depth,16,16,8,16
   729                        	.member	text,32,142,8,32
   730                        	.eos
   731                        	.stag	_command_args,64,74
   732                        	.member	proc,0,656,8,32
   733                        	.member	tokens,32,138,8,32,2
   734                        	.eos
   735                        	.line	208
   736                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxos.h",23
   737                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxstring.h",0
   738                        	.line	141
   739                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxos.h",24
   740                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxnode.h",0
   741                        	.line	118
   742                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxos.h",25
   743                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\ff/ff.h",0
   744                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\ff/ffconf.h",0
   745                        	.line	298
   746                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\ff/ff.h",29
   747                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxtypes.h",0
   748                        	.line	1064
   749                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\ff/ff.h",30
   750                        	.stag	fake75_,4504,75
   751                        	.member	fs_type,0,14,8,8
   752                        	.member	pdrv,8,14,8,8
   753                        	.member	n_fats,16,14,8,8
   754                        	.member	wflag,24,14,8,8
   755                        	.member	fsi_flag,32,14,8,8
   756                        	.member	id,40,5,8,16
   757                        	.member	n_rootdir,56,5,8,16
   758                        	.member	csize,72,5,8,16
   759                        	.member	lfnbuf,88,144,8,32
   760                        	.member	last_clst,120,18,8,32
   761                        	.member	free_clst,152,18,8,32
   762                        	.member	n_fatent,184,18,8,32
   763                        	.member	fsize,216,18,8,32
   764                        	.member	volbase,248,18,8,32
   765                        	.member	fatbase,280,18,8,32
   766                        	.member	dirbase,312,18,8,32
   767                        	.member	database,344,18,8,32
   768                        	.member	winsect,376,18,8,32
   769                        	.member	win,408,110,8,0,512
   770                        	.eos
   771                        	.stag	fake76_,128,76
   772                        	.member	fs,0,138,8,32,75
  Mon Aug  9 2021 16:52                                                Page 16


   773                        	.member	id,32,5,8,16
   774                        	.member	attr,48,14,8,8
   775                        	.member	stat,56,14,8,8
   776                        	.member	sclust,64,18,8,32
   777                        	.member	objsize,96,18,8,32
   778                        	.eos
   779                        	.stag	fake77_,4400,77
   780                        	.member	obj,0,10,8,128,76
   781                        	.member	flag,128,14,8,8
   782                        	.member	err,136,14,8,8
   783                        	.member	fptr,144,18,8,32
   784                        	.member	clust,176,18,8,32
   785                        	.member	sect,208,18,8,32
   786                        	.member	dir_sect,240,18,8,32
   787                        	.member	dir_ptr,272,142,8,32
   788                        	.member	buf,304,110,8,0,512
   789                        	.eos
   790                        	.stag	fake78_,416,78
   791                        	.member	obj,0,10,8,128,76
   792                        	.member	dptr,128,18,8,32
   793                        	.member	clust,160,18,8,32
   794                        	.member	sect,192,18,8,32
   795                        	.member	dir,224,142,8,32
   796                        	.member	fn,256,110,8,0,12
   797                        	.member	blk_ofs,352,18,8,32
   798                        	.member	pat,384,142,8,32
   799                        	.eos
   800                        	.stag	fake79_,2224,79
   801                        	.member	fsize,0,18,8,32
   802                        	.member	fdate,32,5,8,16
   803                        	.member	ftime,48,5,8,16
   804                        	.member	fattrib,64,14,8,8
   805                        	.member	altname,72,110,8,0,13
   806                        	.member	fname,176,110,8,0,256
   807                        	.eos
   808                        	.stag	fake80_,80,80
   809                        	.member	fmt,0,14,8,8
   810                        	.member	n_fat,8,14,8,8
   811                        	.member	align,16,16,8,16
   812                        	.member	n_root,32,16,8,16
   813                        	.member	au_size,48,18,8,32
   814                        	.eos
   815                        	.line	429
   816                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxos.h",26
   817                        	.line	30
   818                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxkernel.h",5
   819                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxnode.h",0
   820                        	.line	118
   821                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxkernel.h",6
   822                        	.stag	_fx_api_call_table,8192,81
   823                        	.member	call_table,0,1121,8,32,256
   824                        	.eos
   825                        	.stag	_fx_zero_page_irq_data,32,82
   826                        	.member	data,0,110,8,0,4
  Mon Aug  9 2021 16:52                                                Page 17


   827                        	.eos
   828                        	.stag	_fx_zero_page,720,83
   829                        	.member	fxos_mouse_byte_0,0,14,8,8
   830                        	.member	fxos_mouse_byte_1,8,14,8,8
   831                        	.member	fxos_mouse_byte_2,16,14,8,8
   832                        	.member	fxos_mouse_byte_t,24,14,8,8
   833                        	.member	fxos_mouse_byte_x_l,32,14,8,8
   834                        	.member	fxos_mouse_byte_x_h,40,14,8,8
   835                        	.member	fxos_mouse_byte_y_l,48,14,8,8
   836                        	.member	fxos_mouse_byte_y_h,56,14,8,8
   837                        	.member	fxos_key_byte_0,64,14,8,8
   838                        	.member	fxos_key_byte_1,72,14,8,8
   839                        	.member	fxos_key_byte_2,80,14,8,8
   840                        	.member	fxos_mouse_ctl,88,14,8,8
   841                        	.member	fxos_mouse_index,96,14,8,8
   842                        	.member	fxos_mouse_status,104,14,8,8
   843                        	.member	Endianness,112,16,8,16
   844                        	.member	VersionMajor,128,16,8,16
   845                        	.member	VersionMinor,144,16,8,16
   846                        	.member	VersionRelease,160,16,8,16
   847                        	.member	topMemory,176,18,8,32
   848                        	.member	bottomMemory,208,18,8,32
   849                        	.member	availableMemory,240,18,8,32
   850                        	.member	availableMemoryK,272,18,8,32
   851                        	.member	availableHeapMemory,304,18,8,32
   852                        	.member	availableHeapMemoryK,336,18,8,32
   853                        	.member	fxos_console_row,368,16,8,16
   854                        	.member	fxos_console_col,384,16,8,16
   855                        	.member	executive,400,129,8,32
   856                        	.member	eventmanager,432,129,8,32
   857                        	.member	devicemanager,464,129,8,32
   858                        	.member	windowmanager,496,129,8,32
   859                        	.member	fxos_kernel_api,528,138,8,32,81
   860                        	.member	fxos_dos_api,560,138,8,32,81
   861                        	.member	fxos_gfx_api,592,138,8,32,81
   862                        	.member	fxos_gui_api,624,138,8,32,81
   863                        	.member	fxos_con_api,656,138,8,32,81
   864                        	.member	fxos_reserved_2_api,688,138,8,32,81
   865                        	.eos
   866                        	.stag	_fx_environment,96,84
   867                        	.member	variables,0,142,8,32
   868                        	.member	reserved1,32,5,8,16
   869                        	.member	reserved2,48,5,8,16
   870                        	.member	reserved3,64,5,8,16
   871                        	.member	reserved4,80,5,8,16
   872                        	.eos
   873                        	.stag	_debug_byte_bits,8,85
   874                        	.member	bit7,0,14,17,1
   875                        	.member	bit6,1,14,17,1
   876                        	.member	bit5,2,14,17,1
   877                        	.member	bit4,3,14,17,1
   878                        	.member	bit3,4,14,17,1
   879                        	.member	bit2,5,14,17,1
   880                        	.member	bit1,6,14,17,1
   881                        	.member	bit0,7,14,17,1
   882                        	.eos
   883                        	.stag	_k_segmentheader,160,86
   884                        	.member	version_major,0,14,8,8
  Mon Aug  9 2021 16:52                                                Page 18


   885                        	.member	version_minor,8,14,8,8
   886                        	.member	length,16,5,8,16
   887                        	.member	segment_start_addr,32,7,8,32
   888                        	.member	segment_end_addr,64,7,8,32
   889                        	.member	segment_size,96,7,8,32
   890                        	.member	main_entry_addr,128,7,8,32
   891                        	.eos
   892                        	.stag	_fx_device_driver,776,87
   893                        	.member	name,0,110,8,0,32
   894                        	.member	version,256,110,8,0,16
   895                        	.member	hmajor,384,110,8,0,8
   896                        	.member	hminor,448,110,8,0,8
   897                        	.member	type,512,14,8,8
   898                        	.member	designation,520,110,8,0,6
   899                        	.member	irq_ctl,568,16,8,16
   900                        	.member	f_driver_irq,584,129,8,32
   901                        	.member	driver_context,616,129,8,32
   902                        	.member	f_driver_load,648,129,8,32
   903                        	.member	f_driver_read,680,129,8,32
   904                        	.member	f_driver_write,712,129,8,32
   905                        	.member	f_driver_unload,744,129,8,32
   906                        	.eos
   907                        	.stag	_fx_block_device_driver,808,88
   908                        	.member	name,0,110,8,0,32
   909                        	.member	version,256,110,8,0,16
   910                        	.member	hmajor,384,110,8,0,8
   911                        	.member	hminor,448,110,8,0,8
   912                        	.member	type,512,14,8,8
   913                        	.member	designation,520,110,8,0,6
   914                        	.member	irq_ctl,568,16,8,16
   915                        	.member	f_driver_irq,584,129,8,32
   916                        	.member	driver_context,616,129,8,32
   917                        	.member	f_driver_load,648,129,8,32
   918                        	.member	f_driver_read,680,129,8,32
   919                        	.member	f_driver_write,712,129,8,32
   920                        	.member	f_driver_unload,744,129,8,32
   921                        	.member	f_driver_command,776,129,8,32
   922                        	.eos
   923                        	.stag	_k_irq_chain,128,89
   924                        	.member	handlers,0,5217,8,32,4
   925                        	.eos
   926                        	.line	490
   927                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\drivers/DRIVER_FMXKEYB.c",2
   928                        ;#include "drivers/DRIVER.h"
   929                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\drivers/DRIVER.h",0
   930                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxos.h",0
   931                        	.line	30
   932                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\drivers/DRIVER.h",5
   933                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxmemorymanager.h",0
   934                        	.line	129
   935                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\drivers/DRIVER.h",6
   936                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
  Mon Aug  9 2021 16:52                                                Page 19


                    space\FXOS-Beta\src\fxc256u.h",0
   937                        	.line	1960
   938                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\drivers/DRIVER.h",104
   939                        	.line	113
   940                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\drivers/DRIVER_FMXKEYB.c",3
   941                        ;#include "drivers/ps2ctl.h"
   942                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\drivers/ps2ctl.h",0
   943                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxtypes.h",0
   944                        	.line	1064
   945                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\drivers/ps2ctl.h",4
   946                        	.stag	fake90_,88,90
   947                        	.member	present,0,14,8,8
   948                        	.member	num,8,18,8,32
   949                        	.member	type,40,18,8,32
   950                        	.member	first_id_byte,72,14,8,8
   951                        	.member	second_id_byte,80,14,8,8
   952                        	.eos
   953                        	.line	84
   954                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\drivers/DRIVER_FMXKEYB.c",4
   955                        ;#include "drivers/DRIVER_KEYBOARD.h"
   956                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\drivers/DRIVER_KEYBOARD.h",0
   957                        KEYBS00	section	offset $04:0BE0
   958 04:0BE0:              	ends
   959                        	data
   960                        ~~_k_driver_base:
   961 00:0000: E0 0B 04 00  	dl	$40BE0
   962 00:0004:              	ends
   963                        	.stag	fake91_,40,91
   964                        	.member	key_code,0,18,8,32
   965                        	.member	pressed,32,14,8,8
   966                        	.eos
   967                        	.stag	fake92_,72,92
   968                        	.member	state,0,18,8,32
   969                        	.member	alt,32,14,8,8
   970                        	.member	alt_gr,40,14,8,8
   971                        	.member	shift,48,14,8,8
   972                        	.member	super,56,14,8,8
   973                        	.member	control,64,14,8,8
   974                        	.eos
   975                        	.line	82
   976                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\drivers/DRIVER_FMXKEYB.c",5
   977                        ;
   978                        ;
   979                        ;/*
   980                        ;.if TARGET_SYS == SYS_C256_FMX
   981                        ;    STATUS_PORT 	= $AF1064
   982                        ;    KBD_STATUS      = $AF1064
   983                        ;    KBD_CMD_BUF		= $AF1064
   984                        ;    KBD_OUT_BUF 	= $AF1060
   985                        ;    KBD_INPT_BUF	= $AF1060
  Mon Aug  9 2021 16:52                                                Page 20


   986                        ;    KBD_DATA_BUF	= $AF1060
   987                        ;    PORT_A		    = $AF1060
   988                        ;    PORT_B			= $AF1061
   989                        ;.else
   990                        ;    STATUS_PORT 	= $AF1807
   991                        ;    KBD_STATUS      = $AF1807
   992                        ;    KBD_CMD_BUF		= $AF1807
   993                        ;    KBD_OUT_BUF 	= $AF1803
   994                        ;    KBD_INPT_BUF	= $AF1803
   995                        ;    KBD_DATA_BUF	= $AF1803
   996                        ;    PORT_A		    = $AF180A   ;This is
                     a Timing Register, the value is hard coded, so there is no 
                    need to use those
   997                        ;    PORT_B			= $AF180B   ;Thi
                    s is a Timing Register, the value is hard coded, so there is
                     no need to use those
   998                        ;.endif
   999                        ;*/
  1000                        ;
  1001                        ;#define KBD_INBUF_SIZE 		 	(16)
  1002                        ;
  1003                        ;#define KBD_STATE_IDLE 		 	(0)
  1004                        ;#define KBD_STATE_E0   		 	(1)
  1005                        ;#define KBD_STATE_E02A   	 	(2)
  1006                        ;#define KBD_STATE_E02AE0 	 	(3)
  1007                        ;#define KBD_STATE_E1 		 	(4)
  1008                        ;#define KBD_STATE_E11D 		 	(5)
  1009                        ;#define KBD_STATE_E11D45 	 	(6)
  1010                        ;#define KBD_STATE_E11D45E1 	 	(7)
  1011                        ;#define KBD_STATE_E11D45E19D 	(8)
  1012                        ;#define KBD_STATE_E0B7 		 	(9)
  1013                        ;#define KBD_STATE_E0B7E0 	 	(10)
  1014                        ;
  1015                        ;#define KBD_ACTION_IGNORE 		(0)
  1016                        ;#define KBD_ACTION_EMIT_BASE 	(1)
  1017                        ;#define KBD_ACTION_EMIT_E0 		(2)
  1018                        ;
  1019                        ;#define KBD_STAT_OBF 			(0x01)
  1020                        ;#define KBD_STAT_IBF 			(0x02)
  1021                        ;
  1022                        ;#define KBD_CTRL_CMD_DISABLE2 	(0xA7)
  1023                        ;#define KBD_CTRL_CMD_ENABLE2 	(0xA9)
  1024                        ;#define KBD_CTRL_CMD_SELFTEST 	(0xAA)
  1025                        ;#define KBD_CTRL_CMD_KBDTEST 	(0xAB)
  1026                        ;#define KBD_CTRL_CMD_DISABLE1 	(0xAD)
  1027                        ;#define KBD_CTRL_CMD_ENABLE1 	(0xAE)
  1028                        ;#define KBD_CTRL_CMD_WRITECMD 	(0x60)
  1029                        ;
  1030                        ;#define KBD_CMD_RESET 			(0xFF)
  1031                        ;#define KBD_CMD_ENABLE 			(0xF4)
  1032                        ;#define KBD_CMD_SET_LED 		(0xED)
  1033                        ;
  1034                        ;#define KBD_RESP_OK 			(0x55)
  1035                        ;#define KBD_RESP_ACK 			(0xFA)
  1036                        ;
  1037                        ;#define KBD_LOCK_SCROLL 		(0x01)
  1038                        ;#define KBD_LOCK_NUMBER 		(0x02)
  1039                        ;#define KBD_LOCK_CAPS 			(0x04)
  Mon Aug  9 2021 16:52                                                Page 21


  1040                        ;
  1041                        ;#define KBD_MOD_LSHIFT  		( 0x01  )
  1042                        ;#define KBD_MOD_RSHIFT  		( 0x02  )
  1043                        ;#define KBD_MOD_LCTRL   		( 0x04  )
  1044                        ;#define KBD_MOD_RCTRL   		( 0x08  )
  1045                        ;#define KBD_MOD_LALT    		( 0x10  )
  1046                        ;#define KBD_MOD_RALT    		( 0x20  )
  1047                        ;#define KBD_MOD_OS      		( 0x40  )
  1048                        ;#define KBD_MOD_MENU    		( 0x80  )
  1049                        ;
  1050                        ;#define KBD_CTRL_BREAK      	( 0x80 )
  1051                        ;#define KBD_CTRL_MONITOR    	( 0x40 )
  1052                        ;
  1053                        ;
  1054                        ;
  1055                        ;#define KBD_STAT_BREAK  		( 0x80     )
  1056                        ;#define KBD_STAT_SCAN   		( 0x01     )
  1057                        ;#define KBD_STAT_CHAR   		( 0x02     )
  1058                        ;
  1059                        ;
  1060                        ;#define KBD_SC_BREAK 			(0x61   
                               )
  1061                        ;#define KBD_SC_CAPSLOCK 		(0x3A           
                    )
  1062                        ;#define KBD_SC_NUMLOCK 			(0x45   
                             )
  1063                        ;#define KBD_SC_SCROLL 			(0x46   
                              )
  1064                        ;#define KBD_SC_LSHIFT 			(0x2A   
                              )
  1065                        ;#define KBD_SC_LCTRL 			(0x1D   
                               )
  1066                        ;#define KBD_SC_LALT 			(0x38   
                                )
  1067                        ;#define KBD_SC_RSHIFT			(0x36   
                              )
  1068                        ;#define KBD_SC_RCTRL			(0x5E   
                               )
  1069                        ;#define KBD_SC_RALT 			(0x5C   
                                )
  1070                        ;
  1071                        ;#define KBD_SC_PIVOT 			(0x38 )
  1072                        ;
  1073                        ;/*
  1074                        ;static BOOL f_driver_load(void);
  1075                        ;static UINT f_driver_read(LPVOID buffer);
  1076                        ;static UINT f_driver_write(UINT size,LPVOID buffe
                    r);
  1077                        ;static BOOL f_driver_unload(void);
  1078                        ;*/
  1079                        ;static BOOL f_driver_load_u(void);
  1080                        ;static UCHAR f_driver_read_u(unsigned long offset
                    ,LPCHAR buffer);
  1081                        ;static UCHAR f_driver_write_u(UINT size,LPVOID bu
                    ffer);
  1082                        ;static BOOL f_driver_unload_u(void);
  1083                        ;
  1084                        ;static VOID f_driver_irq(VOID);
  Mon Aug  9 2021 16:52                                                Page 22


  1085                        ;
  1086                        ;static BYTE keyboard_send_cmd(BYTE cmd);
  1087                        ;static BYTE keyboard_send_cmd_data(BYTE cmd,BYTE 
                    data);
  1088                        ;
  1089                        ;
  1090                        ;static void set_led(UCHAR ledstatus);
  1091                        ;static void kbd_wait(BYTE a_type);
  1092                        ;
  1093                        ;
  1094                        ;extern int _irq_keyboardTimeout;
  1095                        ;extern ULONG _pseudo_timer;
  1096                        ;
  1097                        ;
  1098                        ;static KEYSTATE _irq_key_state_machine = {0,0,0,0
                    ,0,0,0,0,0,0};
  1099                        	data
  1100                        ~~_irq_key_state_machine:
  1101 00:0004: 00 00 00 00  	db	$0,$0,$0,$0,$0,$0,$0
       00:0008: 00 00 00 
  1102 00:000B: 00 00        	dw	$0
  1103 00:000D: 00 00 00 00  	dl	$0
  1104 00:0011: 00           	db	$0
  1105 00:0012:              	ends
  1106                        ;
  1107                        ;//static PIPCPORT debugport =  NULL;
  1108                        ;static PIPCPORT kbport =  NULL;
  1109                        	data
  1110                        ~~kbport:
  1111 00:0012: 00 00 00 00  	dl	$0
  1112 00:0016:              	ends
  1113                        ;//static PIPCPORT mouseport =  NULL;
  1114                        ;
  1115                        ;
  1116                        ;#define DRV_STATUS_PORT	 	  ((volatile LPS
                    TR)0xAF1807)
  1117                        ;#define DRV_KBD_STATUS        ((volatile LPSTR)0x
                    AF1807)
  1118                        ;#define DRV_KBD_CMD_BUF	 	  ((volatile LPS
                    TR)0xAF1807)
  1119                        ;#define DRV_KBD_OUT_BUF 	  ((volatile LPSTR)0xAF1
                    803)
  1120                        ;#define DRV_KBD_INPT_BUF	  ((volatile LPSTR)0xAF1
                    803)
  1121                        ;#define DRV_KBD_DATA_BUF	  ((volatile LPSTR)0xAF1
                    803)
  1122                        ;#define DRV_PORT_A		      ((volatile
                     LPSTR)0xAF180A)
  1123                        ;#define DRV_PORT_B			  ((vola
                    tile LPSTR)0xAF180B)
  1124                        ;
  1125                        ;
  1126                        ;/*
  1127                        ;static FX_DEVICE_DRIVER DRIVER_FMXKEYBOARD = {
  1128                        ;							
                    			"DRIVER_FMXUKB_DUAL\0",
  1129                        ;							
                    			"v1.0.0\0",
  Mon Aug  9 2021 16:52                                                Page 23


  1130                        ;							
                    			"C\0",
  1131                        ;							
                    			"4\0",
  1132                        ;							
                    			DRIVER_TYPE_KEYBOARD,
  1133                        ;							
                    			"KEY:\0",
  1134                        ;							
                    			MAKEIRQ(1,0),
  1135                        ;							
                    			f_driver_irq,
  1136                        ;							
                    			NULL,
  1137                        ;							
                    			f_driver_load,
  1138                        ;							
                    			f_driver_read,
  1139                        ;							
                    			f_driver_write,
  1140                        ;							
                    			f_driver_unload
  1141                        ;							
                    	    };
  1142                        ;*/
  1143                        ;static FX_DEVICE_DRIVER DRIVER_FMXKEYBOARD_U = {
  1144                        	data
  1145                        ~~DRIVER_FMXKEYBOARD_U:
  1146                        ;							
                    			"DRIVER_FMXUKB_DUAL\0",
  1147 00:0016: 44 52 49 56  	db	$44,$52,$49,$56,$45,$52,$5F,$46,$4D,$58
       00:001A: 45 52 5F 46 
       00:001E: 4D 58 
  1148 00:0020: 55 4B 42 5F  	db	$55,$4B,$42,$5F,$44,$55,$41,$4C,$0,$0
       00:0024: 44 55 41 4C 
       00:0028: 00 00 
  1149 00:002A:              	ds	12
  1150                        ;							
                    			"v1.0.0\0",
  1151 00:0036: 76 31 2E 30  	db	$76,$31,$2E,$30,$2E,$30,$0,$0
       00:003A: 2E 30 00 00 
  1152 00:003E:              	ds	8
  1153                        ;							
                    			"A\0",
  1154 00:0046: 41 00 00     	db	$41,$0,$0
  1155 00:0049:              	ds	5
  1156                        ;							
                    			"1\0",
  1157 00:004E: 31 00 00     	db	$31,$0,$0
  1158 00:0051:              	ds	5
  1159                        ;							
                    			DRIVER_TYPE_KEYBOARD,
  1160 00:0056: 05           	db	$5
  1161                        ;							
                    			"KEY:\0",
  1162 00:0057: 4B 45 59 3A  	db	$4B,$45,$59,$3A,$0,$0
       00:005B: 00 00 
  1163                        ;							
  Mon Aug  9 2021 16:52                                                Page 24


                    			MAKEIRQ(1,0),
  1164 00:005D: 00 01        	dw	$100
  1165                        ;							
                    			f_driver_irq,
  1166 00:005F: 44 0E 04 00  	dl	~~f_driver_irq
  1167                        ;							
                    			NULL,
  1168 00:0063: 00 00 00 00  	dl	$0
  1169                        ;							
                    			f_driver_load_u,
  1170 00:0067: 08 0C 04 00  	dl	~~f_driver_load_u
  1171                        ;							
                    			f_driver_read_u,
  1172 00:006B: 34 0C 04 00  	dl	~~f_driver_read_u
  1173                        ;							
                    			f_driver_write_u,
  1174 00:006F: 7E 0C 04 00  	dl	~~f_driver_write_u
  1175                        ;							
                    			f_driver_unload_u
  1176                        ;							
                    	    };
  1177 00:0073: 9B 0C 04 00  	dl	~~f_driver_unload_u
  1178 00:0077:              	ends
  1179                        ;
  1180                        ;
  1181                        ;
  1182                        ;
  1183                        ;static PFX_DEVICE_DRIVER f_get_driver(LPCSTR majo
                    r,LPCSTR minor)
  1184                        ;{
  1185                        	.line	180
  1186                        	.line	181
  1187                        	KEYBS00
  1188                        	func
  1189                        	.function	181
  1190                        ~~f_get_driver:
  1191                        	longa	on
  1192                        	longi	on
  1193 04:0BE0: 3B           	tsc
  1194 04:0BE1: 38           	sec
  1195 04:0BE2: E9 04 00     	sbc	#L2
  1196 04:0BE5: 1B           	tcs
  1197 04:0BE6: 0B           	phd
  1198 04:0BE7: 5B           	tcd
  1199             00000004   major_0	set	4
  1200             00000008   minor_0	set	8
  1201                        	.block	181
  1202                        ;	return &DRIVER_FMXKEYBOARD_U;
  1203                        	.sym	major,4,142,6,32
  1204                        	.sym	minor,8,142,6,32
  1205                        	.line	182
  1206 04:0BE8: A9 xx xx     	lda	#<~~DRIVER_FMXKEYBOARD_U
  1207 04:0BEB: 85 01        	sta	<R0
  1208                        	xref	_BEG_DATA
  1209 04:0BED: A9 xx xx     	lda	#_BEG_DATA>>16
  1210 04:0BF0: 85 03        	sta	<R0+2
  1211 04:0BF2: A6 03        	ldx	<R0+2
  1212 04:0BF4: A5 01        	lda	<R0
  Mon Aug  9 2021 16:52                                                Page 25


  1213                        L5:
  1214 04:0BF6: A8           	tay
  1215 04:0BF7: A5 06        	lda	<L2+2
  1216 04:0BF9: 85 0E        	sta	<L2+2+8
  1217 04:0BFB: A5 05        	lda	<L2+1
  1218 04:0BFD: 85 0D        	sta	<L2+1+8
  1219 04:0BFF: 2B           	pld
  1220 04:0C00: 3B           	tsc
  1221 04:0C01: 18           	clc
  1222 04:0C02: 69 0C 00     	adc	#L2+8
  1223 04:0C05: 1B           	tcs
  1224 04:0C06: 98           	tya
  1225 04:0C07: 6B           	rtl
  1226                        ;	/*
  1227                        ;	if(major[0] == DRIVER_FMXKEYBOARD_U.hmajor[0])
  1228                        ;	{
  1229                        ;		//UARTBASE = ((LPSTR)(0xAF18F8));
  1230                        ;		return &DRIVER_FMXKEYBOARD_U;
  1231                        ;	}
  1232                        ;	return &DRIVER_FMXKEYBOARD;
  1233                        ;	*/
  1234                        ;}
  1235                        	.line	191
  1236                        	.endblock	191
  1237             00000004   L2	equ	4
  1238             00000005   L3	equ	5
  1239 04:0C08:              	ends
  1240                        	efunc
  1241                        	.endfunc	191,5,4
  1242                        	.line	191
  1243                        ;
  1244                        ;/*
  1245                        ;static BOOL f_driver_load(void)
  1246                        ;{
  1247                        ;	//k_init_keyboard();
  1248                        ;	//k_debug_string("DRIVER_FMXKEYBOARD::f_driver_l
                    oad\r\n");
  1249                        ;	return TRUE;
  1250                        ;}
  1251                        ;
  1252                        ;static UINT f_driver_read(LPVOID buffer)
  1253                        ;{
  1254                        ;	return 0;
  1255                        ;}
  1256                        ;
  1257                        ;static UINT f_driver_write(UINT size,LPVOID buffe
                    r)
  1258                        ;{
  1259                        ;	return 0;
  1260                        ;}
  1261                        ;
  1262                        ;static BOOL f_driver_unload(void)
  1263                        ;{
  1264                        ;	return FALSE;
  1265                        ;}
  1266                        ;*/
  1267                        ;static BOOL f_driver_load_u(void)
  1268                        ;{
  Mon Aug  9 2021 16:52                                                Page 26


  1269                        	.line	216
  1270                        	.line	217
  1271                        	KEYBS00
  1272                        	func
  1273                        	.function	217
  1274                        ~~f_driver_load_u:
  1275                        	longa	on
  1276                        	longi	on
  1277 04:0C08: 3B           	tsc
  1278 04:0C09: 38           	sec
  1279 04:0C0A: E9 01 00     	sbc	#L6
  1280 04:0C0D: 1B           	tcs
  1281 04:0C0E: 0B           	phd
  1282 04:0C0F: 5B           	tcd
  1283                        	.block	217
  1284                        ;	//BOOL bRet = FALSE;
  1285                        ;
  1286                        ;	BYTE data = 0;
  1287                        ;
  1288                        ;	ps2_write_device(0, PS2_DEV_ENABLE_SCAN);
  1289             00000000   data_1	set	0
  1290                        	.sym	data,0,14,1,8
  1291 04:0C10: E2 20        	sep	#$20
  1292                        	longa	off
  1293 04:0C12: 64 01        	stz	<L7+data_1
  1294 04:0C14: C2 20        	rep	#$20
  1295                        	longa	on
  1296                        	.line	222
  1297 04:0C16: F4 F4 00     	pea	#<$f4
  1298 04:0C19: F4 00 00     	pea	#^$0
  1299 04:0C1C: F4 00 00     	pea	#<$0
  1300 04:0C1F: 22 xx xx xx  	jsl	~~ps2_write_device
  1301                        ;	ps2_expect_ack();
  1302                        	.line	223
  1303 04:0C23: 22 xx xx xx  	jsl	~~ps2_expect_ack
  1304                        ;
  1305                        ;	//int y = 0;
  1306                        ;	//ULONG marker = 10;
  1307                        ;
  1308                        ;	//k_debug_char_com1('K');
  1309                        ;
  1310                        ;
  1311                        ;	//if(debugport == NULL)
  1312                        ;	//	debugport =  k_get_ipc_port("@debug");
  1313                        ;	//if(kbport == NULL)
  1314                        ;//		kbport =  k_get_ipc_port("@keybo
                    ard");
  1315                        ;
  1316                        ;
  1317                        ;	//k_init_keyboard();
  1318                        ;
  1319                        ;
  1320                        ;
  1321                        ;	//((LPSTR)0xAFA000)[marker] = 'A';
  1322                        ;
  1323                        ;	//k_init_keyboard();
  1324                        ;
  1325                        ;	//((LPSTR)0xAFA000)[marker++] = 'X';
  Mon Aug  9 2021 16:52                                                Page 27


  1326                        ;
  1327                        ;	//return TRUE;
  1328                        ;
  1329                        ;
  1330                        ;	//k_debug_char_com1('B');
  1331                        ;
  1332                        ;
  1333                        ;
  1334                        ;
  1335                        ;
  1336                        ;	//k_debug_char_com1( 'X');
  1337                        ;
  1338                        ;
  1339                        ;
  1340                        ;	//INT_MASK_REG1[0] = (INT_MASK_REG1[0] |  FNX1_I
                    NT00_KBD);
  1341                        ;
  1342                        ;
  1343                        ;	/*
  1344                        ;
  1345                        ;
  1346                        ;
  1347                        ;
  1348                        ;	kbd_wait(1);
  1349                        ;	DRV_KBD_CMD_BUF[0] = KBD_CTRL_CMD_DISABLE1;
  1350                        ;
  1351                        ;	//k_debug_char_com1(  '7');
  1352                        ;
  1353                        ;
  1354                        ;	// flush output
  1355                        ;    data = DRV_KBD_DATA_BUF[0];
  1356                        ;
  1357                        ;
  1358                        ;    //data = keyboard_send_cmd(KBD_CTRL_CMD_SELFT
                    EST);
  1359                        ;    data = keyboard_send_cmd(0xFF);
  1360                        ;    //if(data == KBD_RESP_OK)
  1361                        ;    if(data == 0xAA)
  1362                        ;    {
  1363                        ;    	k_debug_char_com1('C');
  1364                        ;
  1365                        ;    	if(keyboard_send_cmd(KBD_CTRL_CMD_KBDTES
                    T) == 0)
  1366                        ;    	{
  1367                        ;    		k_debug_char_com1(  'D');
  1368                        ;        	if(keyboard_send_cmd(KBD_CTRL_CMD_WRITEC
                    MD) == 0)
  1369                        ;        	{
  1370                        ;        		k_debug_char_com1(  'E');
  1371                        ;        		keyboard_send_cmd_data(KBD_CTRL_
                    CMD_WRITECMD,0x43);
  1372                        ;
  1373                        ;        		k_debug_char_com1( 'F');
  1374                        ;
  1375                        ;
  1376                        ;        		kbd_wait(0);
  1377                        ;        		DRV_KBD_CMD_BUF[0] = KBD_CTRL_CM
                    D_ENABLE1;
  Mon Aug  9 2021 16:52                                                Page 28


  1378                        ;
  1379                        ;        		keyboard_send_cmd_data(KBD_CMD_R
                    ESET,0xFFFF);
  1380                        ;
  1381                        ;        		k_debug_char_com1('G');
  1382                        ;
  1383                        ;        		for(y=0;y<128;y++)
  1384                        ;        		{
  1385                        ;        			keyboard_send_cmd_data(K
                    BD_CMD_ENABLE,0x00);
  1386                        ;        		}
  1387                        ;
  1388                        ;
  1389                        ;        		k_debug_char_com1( 'H');
  1390                        ;
  1391                        ;        		bRet = TRUE;
  1392                        ;
  1393                        ;        	}
  1394                        ;    	}
  1395                        ;    	bRet = FALSE;
  1396                        ;
  1397                        ;    }
  1398                        ;    else
  1399                        ;    {
  1400                        ;    	k_debug_char_com1('8');
  1401                        ;    	k_debug_char_com1(data);
  1402                        ;    	k_debug_char_com1('9');
  1403                        ;    }
  1404                        ;
  1405                        ;    k_debug_char_com1( 'I');
  1406                        ;
  1407                        ;    data = (INT_PENDING_REG1[0] & FNX1_INT00_KBD)
                    ;
  1408                        ;    INT_PENDING_REG1[0] = data;
  1409                        ;   // INT_MASK_REG1[0]    = (INT_MASK_REG1[0] & ~
                    FNX1_INT00_KBD);
  1410                        ;
  1411                        ;
  1412                        ;
  1413                        ;    //return bRet;
  1414                        ;
  1415                        ;
  1416                        ;	//k_debug_char_com1('8');
  1417                        ;	*/
  1418                        ;	return TRUE;
  1419                        	.line	338
  1420 04:0C27: A9 01 00     	lda	#$1
  1421                        L9:
  1422 04:0C2A: A8           	tay
  1423 04:0C2B: 2B           	pld
  1424 04:0C2C: 3B           	tsc
  1425 04:0C2D: 18           	clc
  1426 04:0C2E: 69 01 00     	adc	#L6
  1427 04:0C31: 1B           	tcs
  1428 04:0C32: 98           	tya
  1429 04:0C33: 6B           	rtl
  1430                        ;}
  1431                        	.line	339
  Mon Aug  9 2021 16:52                                                Page 29


  1432                        	.endblock	339
  1433             00000001   L6	equ	1
  1434             00000001   L7	equ	1
  1435 04:0C34:              	ends
  1436                        	efunc
  1437                        	.endfunc	339,1,1
  1438                        	.line	339
  1439                        ;
  1440                        ;static UCHAR f_driver_read_u(unsigned long offset
                    ,LPCHAR buffer)
  1441                        ;{
  1442                        	.line	341
  1443                        	.line	342
  1444                        	KEYBS00
  1445                        	func
  1446                        	.function	342
  1447                        ~~f_driver_read_u:
  1448                        	longa	on
  1449                        	longi	on
  1450 04:0C34: 3B           	tsc
  1451 04:0C35: 38           	sec
  1452 04:0C36: E9 04 00     	sbc	#L10
  1453 04:0C39: 1B           	tcs
  1454 04:0C3A: 0B           	phd
  1455 04:0C3B: 5B           	tcd
  1456             00000004   offset_0	set	4
  1457             00000008   buffer_0	set	8
  1458                        	.block	342
  1459                        ;	if((STATUS_PORT[0] & 1) == 1)
  1460                        	.sym	offset,4,18,6,32
  1461                        	.sym	buffer,8,142,6,32
  1462                        	.line	343
  1463                        ;	{
  1464 04:0C3C: AF 07 18 AF  	lda	>11474951
  1465 04:0C40: 29 01 00     	and	#<$1
  1466 04:0C43: 85 01        	sta	<R0
  1467 04:0C45: A5 01        	lda	<R0
  1468 04:0C47: C9 01 00     	cmp	#<$1
  1469 04:0C4A: F0 03        	beq	L13
  1470 04:0C4C: 82 29 00     	brl	L10001
  1471                        L13:
  1472                        	.line	344
  1473                        ;		((LPSTR)buffer)[0] = KBD_INPT_BUF[0];
  1474                        	.line	345
  1475 04:0C4F: E2 20        	sep	#$20
  1476                        	longa	off
  1477 04:0C51: AF 03 18 AF  	lda	>11474947
  1478 04:0C55: 87 0C        	sta	[<L10+buffer_0]
  1479 04:0C57: C2 20        	rep	#$20
  1480                        	longa	on
  1481                        ;		if(((LPSTR)buffer)[0]!=0)
  1482                        	.line	346
  1483                        ;			return 1;
  1484 04:0C59: A7 0C        	lda	[<L10+buffer_0]
  1485 04:0C5B: 29 FF 00     	and	#$ff
  1486 04:0C5E: D0 03        	bne	L14
  1487 04:0C60: 82 15 00     	brl	L10002
  1488                        L14:
  Mon Aug  9 2021 16:52                                                Page 30


  1489                        	.line	347
  1490 04:0C63: A9 01 00     	lda	#$1
  1491                        L15:
  1492 04:0C66: A8           	tay
  1493 04:0C67: A5 06        	lda	<L10+2
  1494 04:0C69: 85 0E        	sta	<L10+2+8
  1495 04:0C6B: A5 05        	lda	<L10+1
  1496 04:0C6D: 85 0D        	sta	<L10+1+8
  1497 04:0C6F: 2B           	pld
  1498 04:0C70: 3B           	tsc
  1499 04:0C71: 18           	clc
  1500 04:0C72: 69 0C 00     	adc	#L10+8
  1501 04:0C75: 1B           	tcs
  1502 04:0C76: 98           	tya
  1503 04:0C77: 6B           	rtl
  1504                        ;	}
  1505                        L10002:
  1506                        	.line	348
  1507                        ;	return 0;
  1508                        L10001:
  1509                        	.line	349
  1510 04:0C78: A9 00 00     	lda	#$0
  1511 04:0C7B: 82 E8 FF     	brl	L15
  1512                        ;}
  1513                        	.line	350
  1514                        	.endblock	350
  1515             00000004   L10	equ	4
  1516             00000005   L11	equ	5
  1517 04:0C7E:              	ends
  1518                        	efunc
  1519                        	.endfunc	350,5,4
  1520                        	.line	350
  1521                        ;
  1522                        ;static UCHAR f_driver_write_u(UINT size,LPVOID bu
                    ffer)
  1523                        ;{
  1524                        	.line	352
  1525                        	.line	353
  1526                        	KEYBS00
  1527                        	func
  1528                        	.function	353
  1529                        ~~f_driver_write_u:
  1530                        	longa	on
  1531                        	longi	on
  1532 04:0C7E: 3B           	tsc
  1533 04:0C7F: 38           	sec
  1534 04:0C80: E9 00 00     	sbc	#L16
  1535 04:0C83: 1B           	tcs
  1536 04:0C84: 0B           	phd
  1537 04:0C85: 5B           	tcd
  1538             00000004   size_0	set	4
  1539             00000006   buffer_0	set	6
  1540                        	.block	353
  1541                        ;	return 0;
  1542                        	.sym	size,4,16,6,16
  1543                        	.sym	buffer,6,129,6,32
  1544                        	.line	354
  1545 04:0C86: A9 00 00     	lda	#$0
  Mon Aug  9 2021 16:52                                                Page 31


  1546                        L19:
  1547 04:0C89: A8           	tay
  1548 04:0C8A: A5 02        	lda	<L16+2
  1549 04:0C8C: 85 08        	sta	<L16+2+6
  1550 04:0C8E: A5 01        	lda	<L16+1
  1551 04:0C90: 85 07        	sta	<L16+1+6
  1552 04:0C92: 2B           	pld
  1553 04:0C93: 3B           	tsc
  1554 04:0C94: 18           	clc
  1555 04:0C95: 69 06 00     	adc	#L16+6
  1556 04:0C98: 1B           	tcs
  1557 04:0C99: 98           	tya
  1558 04:0C9A: 6B           	rtl
  1559                        ;}
  1560                        	.line	355
  1561                        	.endblock	355
  1562             00000000   L16	equ	0
  1563             00000001   L17	equ	1
  1564 04:0C9B:              	ends
  1565                        	efunc
  1566                        	.endfunc	355,1,0
  1567                        	.line	355
  1568                        ;
  1569                        ;static BOOL f_driver_unload_u(void)
  1570                        ;{
  1571                        	.line	357
  1572                        	.line	358
  1573                        	KEYBS00
  1574                        	func
  1575                        	.function	358
  1576                        ~~f_driver_unload_u:
  1577                        	longa	on
  1578                        	longi	on
  1579 04:0C9B: 3B           	tsc
  1580 04:0C9C: 38           	sec
  1581 04:0C9D: E9 00 00     	sbc	#L20
  1582 04:0CA0: 1B           	tcs
  1583 04:0CA1: 0B           	phd
  1584 04:0CA2: 5B           	tcd
  1585                        	.block	358
  1586                        ;	return FALSE;
  1587                        	.line	359
  1588 04:0CA3: A9 00 00     	lda	#$0
  1589                        L23:
  1590 04:0CA6: A8           	tay
  1591 04:0CA7: 2B           	pld
  1592 04:0CA8: 3B           	tsc
  1593 04:0CA9: 18           	clc
  1594 04:0CAA: 69 00 00     	adc	#L20
  1595 04:0CAD: 1B           	tcs
  1596 04:0CAE: 98           	tya
  1597 04:0CAF: 6B           	rtl
  1598                        ;}
  1599                        	.line	360
  1600                        	.endblock	360
  1601             00000000   L20	equ	0
  1602             00000001   L21	equ	1
  1603 04:0CB0:              	ends
  Mon Aug  9 2021 16:52                                                Page 32


  1604                        	efunc
  1605                        	.endfunc	360,1,0
  1606                        	.line	360
  1607                        ;
  1608                        ;
  1609                        ;#define inportb60(a)	(KBD_INPT_BUF[0])
  1610                        ;#define inportb64(a)	(STATUS_PORT[0])
  1611                        ;#define outportb60(b)	(KBD_OUT_BUF[0] = b)
  1612                        ;#define outportb64(b)	(KBD_CMD_BUF[0] = b)
  1613                        ;
  1614                        ;static void kbd_wait(BYTE a_type) //unsigned char
  1615                        ;{
  1616                        	.line	368
  1617                        	.line	369
  1618                        	KEYBS00
  1619                        	func
  1620                        	.function	369
  1621                        ~~kbd_wait:
  1622                        	longa	on
  1623                        	longi	on
  1624 04:0CB0: 3B           	tsc
  1625 04:0CB1: 38           	sec
  1626 04:0CB2: E9 08 00     	sbc	#L24
  1627 04:0CB5: 1B           	tcs
  1628 04:0CB6: 0B           	phd
  1629 04:0CB7: 5B           	tcd
  1630             00000004   a_type_0	set	4
  1631                        	.block	369
  1632                        ;  DWORD _time_out=100000; //unsigned int
  1633                        ;  if(a_type==0)
  1634             00000000   _time_out_1	set	0
  1635                        	.sym	_time_out,0,18,1,32
  1636                        	.sym	a_type,4,14,6,8
  1637 04:0CB8: A9 A0 86     	lda	#$86a0
  1638 04:0CBB: 85 05        	sta	<L25+_time_out_1
  1639 04:0CBD: A9 01 00     	lda	#$1
  1640 04:0CC0: 85 07        	sta	<L25+_time_out_1+2
  1641                        	.line	371
  1642                        ;  {
  1643 04:0CC2: A5 0C        	lda	<L24+a_type_0
  1644 04:0CC4: 29 FF 00     	and	#$ff
  1645 04:0CC7: F0 03        	beq	L27
  1646 04:0CC9: 82 42 00     	brl	L10003
  1647                        L27:
  1648                        	.line	372
  1649                        ;    while(_time_out--) //Data
  1650                        	.line	373
  1651                        L10004:
  1652 04:0CCC: A5 05        	lda	<L25+_time_out_1
  1653 04:0CCE: 85 01        	sta	<R0
  1654 04:0CD0: A5 07        	lda	<L25+_time_out_1+2
  1655 04:0CD2: 85 03        	sta	<R0+2
  1656 04:0CD4: A5 05        	lda	<L25+_time_out_1
  1657 04:0CD6: D0 02        	bne	L28
  1658 04:0CD8: C6 07        	dec	<L25+_time_out_1+2
  1659                        L28:
  1660 04:0CDA: C6 05        	dec	<L25+_time_out_1
  1661 04:0CDC: A5 01        	lda	<R0
  Mon Aug  9 2021 16:52                                                Page 33


  1662 04:0CDE: 05 03        	ora	<R0+2
  1663 04:0CE0: D0 03        	bne	L29
  1664 04:0CE2: 82 26 00     	brl	L10005
  1665                        L29:
  1666                        ;    {
  1667                        	.line	374
  1668                        ;      if((inportb64(0x64) & 1)==1)
  1669                        	.line	375
  1670                        ;      {
  1671 04:0CE5: AF 07 18 AF  	lda	>11474951
  1672 04:0CE9: 29 01 00     	and	#<$1
  1673 04:0CEC: 85 01        	sta	<R0
  1674 04:0CEE: A5 01        	lda	<R0
  1675 04:0CF0: C9 01 00     	cmp	#<$1
  1676 04:0CF3: F0 03        	beq	L30
  1677 04:0CF5: 82 10 00     	brl	L10006
  1678                        L30:
  1679                        	.line	376
  1680                        ;        return;
  1681                        	.line	377
  1682                        L31:
  1683 04:0CF8: A5 0A        	lda	<L24+2
  1684 04:0CFA: 85 0C        	sta	<L24+2+2
  1685 04:0CFC: A5 09        	lda	<L24+1
  1686 04:0CFE: 85 0B        	sta	<L24+1+2
  1687 04:0D00: 2B           	pld
  1688 04:0D01: 3B           	tsc
  1689 04:0D02: 18           	clc
  1690 04:0D03: 69 0A 00     	adc	#L24+2
  1691 04:0D06: 1B           	tcs
  1692 04:0D07: 6B           	rtl
  1693                        ;      }
  1694                        	.line	378
  1695                        ;    }
  1696                        L10006:
  1697                        	.line	379
  1698 04:0D08: 82 C1 FF     	brl	L10004
  1699                        L10005:
  1700                        ;    return;
  1701                        	.line	380
  1702 04:0D0B: 82 EA FF     	brl	L31
  1703                        ;  }
  1704                        	.line	381
  1705                        ;  else
  1706                        L10003:
  1707                        ;  {
  1708                        	.line	383
  1709                        ;    while(_time_out--) //Signal
  1710                        	.line	384
  1711                        L10007:
  1712 04:0D0E: A5 05        	lda	<L25+_time_out_1
  1713 04:0D10: 85 01        	sta	<R0
  1714 04:0D12: A5 07        	lda	<L25+_time_out_1+2
  1715 04:0D14: 85 03        	sta	<R0+2
  1716 04:0D16: A5 05        	lda	<L25+_time_out_1
  1717 04:0D18: D0 02        	bne	L32
  1718 04:0D1A: C6 07        	dec	<L25+_time_out_1+2
  1719                        L32:
  Mon Aug  9 2021 16:52                                                Page 34


  1720 04:0D1C: C6 05        	dec	<L25+_time_out_1
  1721 04:0D1E: A5 01        	lda	<R0
  1722 04:0D20: 05 03        	ora	<R0+2
  1723 04:0D22: D0 03        	bne	L33
  1724 04:0D24: 82 15 00     	brl	L10008
  1725                        L33:
  1726                        ;    {
  1727                        	.line	385
  1728                        ;      if((inportb64(0x64) & 2)==0)
  1729                        	.line	386
  1730                        ;      {
  1731 04:0D27: E2 20        	sep	#$20
  1732                        	longa	off
  1733 04:0D29: AF 07 18 AF  	lda	>11474951
  1734 04:0D2D: 29 02        	and	#<$2
  1735 04:0D2F: C2 20        	rep	#$20
  1736                        	longa	on
  1737 04:0D31: F0 03        	beq	L34
  1738 04:0D33: 82 03 00     	brl	L10009
  1739                        L34:
  1740                        	.line	387
  1741                        ;        return;
  1742                        	.line	388
  1743 04:0D36: 82 BF FF     	brl	L31
  1744                        ;      }
  1745                        	.line	389
  1746                        ;    }
  1747                        L10009:
  1748                        	.line	390
  1749 04:0D39: 82 D2 FF     	brl	L10007
  1750                        L10008:
  1751                        ;    return;
  1752                        	.line	391
  1753 04:0D3C: 82 B9 FF     	brl	L31
  1754                        ;  }
  1755                        	.line	392
  1756                        ;}
  1757                        	.line	393
  1758                        	.endblock	393
  1759             00000008   L24	equ	8
  1760             00000005   L25	equ	5
  1761 04:0D3F:              	ends
  1762                        	efunc
  1763                        	.endfunc	393,5,8
  1764                        	.line	393
  1765                        ;
  1766                        ;static BYTE kbd_read(VOID)
  1767                        ;{
  1768                        	.line	395
  1769                        	.line	396
  1770                        	KEYBS00
  1771                        	func
  1772                        	.function	396
  1773                        ~~kbd_read:
  1774                        	longa	on
  1775                        	longi	on
  1776 04:0D3F: 3B           	tsc
  1777 04:0D40: 38           	sec
  Mon Aug  9 2021 16:52                                                Page 35


  1778 04:0D41: E9 00 00     	sbc	#L35
  1779 04:0D44: 1B           	tcs
  1780 04:0D45: 0B           	phd
  1781 04:0D46: 5B           	tcd
  1782                        	.block	396
  1783                        ;  //Get's response from mouse
  1784                        ;  kbd_wait(0);
  1785                        	.line	398
  1786 04:0D47: F4 00 00     	pea	#<$0
  1787 04:0D4A: 22 B0 0C 04  	jsl	~~kbd_wait
  1788                        ;  return inportb60(0x60);
  1789                        	.line	399
  1790 04:0D4E: AF 03 18 AF  	lda	>11474947
  1791 04:0D52: 29 FF 00     	and	#$ff
  1792                        L38:
  1793 04:0D55: A8           	tay
  1794 04:0D56: 2B           	pld
  1795 04:0D57: 3B           	tsc
  1796 04:0D58: 18           	clc
  1797 04:0D59: 69 00 00     	adc	#L35
  1798 04:0D5C: 1B           	tcs
  1799 04:0D5D: 98           	tya
  1800 04:0D5E: 6B           	rtl
  1801                        ;}
  1802                        	.line	400
  1803                        	.endblock	400
  1804             00000000   L35	equ	0
  1805             00000001   L36	equ	1
  1806 04:0D5F:              	ends
  1807                        	efunc
  1808                        	.endfunc	400,1,0
  1809                        	.line	400
  1810                        ;
  1811                        ;/*
  1812                        ;#define keyboard_send_cmd(a) keyboard_send_cmd_da
                    ta(a,0xFF)
  1813                        ;
  1814                        ;static int keyboard_send_cmd_data(UCHAR cmd,BYTE 
                    data)
  1815                        ;{
  1816                        ;	PMARSHALDATA pm = NULL;
  1817                        ;
  1818                        ;	pm = k_mem_allocate_heap(sizeof(MARSHALDATA));
  1819                        ;	pm->verbValue[0] = cmd;
  1820                        ;	pm->verbValue[1] = data;
  1821                        ;	k_write_ipc_port(kbport,pm,0);
  1822                        ;
  1823                        ;	return 0;
  1824                        ;}
  1825                        ;*/
  1826                        ;
  1827                        ;static BYTE keyboard_send_cmd(BYTE cmd)
  1828                        ;{
  1829                        	.line	418
  1830                        	.line	419
  1831                        	KEYBS00
  1832                        	func
  1833                        	.function	419
  Mon Aug  9 2021 16:52                                                Page 36


  1834                        ~~keyboard_send_cmd:
  1835                        	longa	on
  1836                        	longi	on
  1837 04:0D5F: 3B           	tsc
  1838 04:0D60: 38           	sec
  1839 04:0D61: E9 00 00     	sbc	#L39
  1840 04:0D64: 1B           	tcs
  1841 04:0D65: 0B           	phd
  1842 04:0D66: 5B           	tcd
  1843             00000004   cmd_0	set	4
  1844                        	.block	419
  1845                        ;	//k_debug_char_com1('S');
  1846                        ;	kbd_wait(1);
  1847                        	.sym	cmd,4,14,6,8
  1848                        	.line	421
  1849 04:0D67: F4 01 00     	pea	#<$1
  1850 04:0D6A: 22 B0 0C 04  	jsl	~~kbd_wait
  1851                        ;	DRV_KBD_CMD_BUF[0] = cmd;
  1852                        	.line	422
  1853 04:0D6E: E2 20        	sep	#$20
  1854                        	longa	off
  1855 04:0D70: A5 04        	lda	<L39+cmd_0
  1856 04:0D72: 8F 07 18 AF  	sta	>11474951
  1857 04:0D76: C2 20        	rep	#$20
  1858                        	longa	on
  1859                        ;	kbd_wait(0);
  1860                        	.line	423
  1861 04:0D78: F4 00 00     	pea	#<$0
  1862 04:0D7B: 22 B0 0C 04  	jsl	~~kbd_wait
  1863                        ;	//k_debug_char_com1('V');
  1864                        ;	return DRV_KBD_DATA_BUF[0];
  1865                        	.line	425
  1866 04:0D7F: AF 03 18 AF  	lda	>11474947
  1867 04:0D83: 29 FF 00     	and	#$ff
  1868                        L42:
  1869 04:0D86: A8           	tay
  1870 04:0D87: A5 02        	lda	<L39+2
  1871 04:0D89: 85 04        	sta	<L39+2+2
  1872 04:0D8B: A5 01        	lda	<L39+1
  1873 04:0D8D: 85 03        	sta	<L39+1+2
  1874 04:0D8F: 2B           	pld
  1875 04:0D90: 3B           	tsc
  1876 04:0D91: 18           	clc
  1877 04:0D92: 69 02 00     	adc	#L39+2
  1878 04:0D95: 1B           	tcs
  1879 04:0D96: 98           	tya
  1880 04:0D97: 6B           	rtl
  1881                        ;}
  1882                        	.line	426
  1883                        	.endblock	426
  1884             00000000   L39	equ	0
  1885             00000001   L40	equ	1
  1886 04:0D98:              	ends
  1887                        	efunc
  1888                        	.endfunc	426,1,0
  1889                        	.line	426
  1890                        ;
  1891                        ;
  Mon Aug  9 2021 16:52                                                Page 37


  1892                        ;static BYTE keyboard_send_cmd_data(BYTE cmd, BYTE
                     data)
  1893                        ;{
  1894                        	.line	429
  1895                        	.line	430
  1896                        	KEYBS00
  1897                        	func
  1898                        	.function	430
  1899                        ~~keyboard_send_cmd_data:
  1900                        	longa	on
  1901                        	longi	on
  1902 04:0D98: 3B           	tsc
  1903 04:0D99: 38           	sec
  1904 04:0D9A: E9 00 00     	sbc	#L43
  1905 04:0D9D: 1B           	tcs
  1906 04:0D9E: 0B           	phd
  1907 04:0D9F: 5B           	tcd
  1908             00000004   cmd_0	set	4
  1909             00000006   data_0	set	6
  1910                        	.block	430
  1911                        ;	kbd_wait(0);
  1912                        	.sym	cmd,4,14,6,8
  1913                        	.sym	data,6,14,6,8
  1914                        	.line	431
  1915 04:0DA0: F4 00 00     	pea	#<$0
  1916 04:0DA3: 22 B0 0C 04  	jsl	~~kbd_wait
  1917                        ;	DRV_KBD_CMD_BUF[0] = cmd;
  1918                        	.line	432
  1919 04:0DA7: E2 20        	sep	#$20
  1920                        	longa	off
  1921 04:0DA9: A5 04        	lda	<L43+cmd_0
  1922 04:0DAB: 8F 07 18 AF  	sta	>11474951
  1923 04:0DAF: C2 20        	rep	#$20
  1924                        	longa	on
  1925                        ;	kbd_wait(0);
  1926                        	.line	433
  1927 04:0DB1: F4 00 00     	pea	#<$0
  1928 04:0DB4: 22 B0 0C 04  	jsl	~~kbd_wait
  1929                        ;	DRV_KBD_DATA_BUF[0] = data;
  1930                        	.line	434
  1931 04:0DB8: E2 20        	sep	#$20
  1932                        	longa	off
  1933 04:0DBA: A5 06        	lda	<L43+data_0
  1934 04:0DBC: 8F 03 18 AF  	sta	>11474947
  1935 04:0DC0: C2 20        	rep	#$20
  1936                        	longa	on
  1937                        ;	kbd_wait(1);
  1938                        	.line	435
  1939 04:0DC2: F4 01 00     	pea	#<$1
  1940 04:0DC5: 22 B0 0C 04  	jsl	~~kbd_wait
  1941                        ;	return DRV_KBD_DATA_BUF[0];
  1942                        	.line	436
  1943 04:0DC9: AF 03 18 AF  	lda	>11474947
  1944 04:0DCD: 29 FF 00     	and	#$ff
  1945                        L46:
  1946 04:0DD0: A8           	tay
  1947 04:0DD1: A5 02        	lda	<L43+2
  1948 04:0DD3: 85 06        	sta	<L43+2+4
  Mon Aug  9 2021 16:52                                                Page 38


  1949 04:0DD5: A5 01        	lda	<L43+1
  1950 04:0DD7: 85 05        	sta	<L43+1+4
  1951 04:0DD9: 2B           	pld
  1952 04:0DDA: 3B           	tsc
  1953 04:0DDB: 18           	clc
  1954 04:0DDC: 69 04 00     	adc	#L43+4
  1955 04:0DDF: 1B           	tcs
  1956 04:0DE0: 98           	tya
  1957 04:0DE1: 6B           	rtl
  1958                        ;}
  1959                        	.line	437
  1960                        	.endblock	437
  1961             00000000   L43	equ	0
  1962             00000001   L44	equ	1
  1963 04:0DE2:              	ends
  1964                        	efunc
  1965                        	.endfunc	437,1,0
  1966                        	.line	437
  1967                        ;
  1968                        ;
  1969                        ;static void set_led(UCHAR ledstatus)
  1970                        ;{
  1971                        	.line	440
  1972                        	.line	441
  1973                        	KEYBS00
  1974                        	func
  1975                        	.function	441
  1976                        ~~set_led:
  1977                        	longa	on
  1978                        	longi	on
  1979 04:0DE2: 3B           	tsc
  1980 04:0DE3: 38           	sec
  1981 04:0DE4: E9 04 00     	sbc	#L47
  1982 04:0DE7: 1B           	tcs
  1983 04:0DE8: 0B           	phd
  1984 04:0DE9: 5B           	tcd
  1985             00000004   ledstatus_0	set	4
  1986                        	.block	441
  1987                        ;	PMARSHALDATA pm = NULL;
  1988                        ;
  1989                        ;	if(kbport)
  1990             00000000   pm_1	set	0
  1991                        	.sym	pm,0,139,1,32,66
  1992                        	.sym	ledstatus,4,14,6,8
  1993 04:0DEA: 64 01        	stz	<L48+pm_1
  1994 04:0DEC: 64 03        	stz	<L48+pm_1+2
  1995                        	.line	444
  1996                        ;	{
  1997 04:0DEE: AD xx xx     	lda	|~~kbport
  1998 04:0DF1: 0D xx xx     	ora	|~~kbport+2
  1999 04:0DF4: D0 03        	bne	L50
  2000 04:0DF6: 82 3B 00     	brl	L10010
  2001                        L50:
  2002                        	.line	445
  2003                        ;		k_debug_char_com1('P');
  2004                        	.line	446
  2005 04:0DF9: F4 50 00     	pea	#<$50
  2006 04:0DFC: 22 xx xx xx  	jsl	~~k_debug_char_com1
  Mon Aug  9 2021 16:52                                                Page 39


  2007                        ;
  2008                        ;		pm = k_mem_allocate_heap(sizeof(MARSHALD
                    ATA));
  2009                        	.line	448
  2010 04:0E00: F4 00 00     	pea	#^$4
  2011 04:0E03: F4 04 00     	pea	#<$4
  2012 04:0E06: 22 xx xx xx  	jsl	~~k_mem_allocate_heap
  2013 04:0E0A: 85 01        	sta	<L48+pm_1
  2014 04:0E0C: 86 03        	stx	<L48+pm_1+2
  2015                        ;		pm->verbValue[0] = 0xED;
  2016                        	.line	449
  2017 04:0E0E: E2 20        	sep	#$20
  2018                        	longa	off
  2019 04:0E10: A9 ED        	lda	#$ed
  2020 04:0E12: 87 01        	sta	[<L48+pm_1]
  2021 04:0E14: C2 20        	rep	#$20
  2022                        	longa	on
  2023                        ;		pm->verbValue[1] = ledstatus;
  2024                        	.line	450
  2025 04:0E16: E2 20        	sep	#$20
  2026                        	longa	off
  2027 04:0E18: A5 08        	lda	<L47+ledstatus_0
  2028 04:0E1A: A0 01 00     	ldy	#$1
  2029 04:0E1D: 97 01        	sta	[<L48+pm_1],Y
  2030 04:0E1F: C2 20        	rep	#$20
  2031                        	longa	on
  2032                        ;		k_write_ipc_port(kbport,pm,0);
  2033                        	.line	451
  2034 04:0E21: F4 00 00     	pea	#<$0
  2035 04:0E24: D4 03        	pei	<L48+pm_1+2
  2036 04:0E26: D4 01        	pei	<L48+pm_1
  2037 04:0E28: AD xx xx     	lda	|~~kbport+2
  2038 04:0E2B: 48           	pha
  2039 04:0E2C: AD xx xx     	lda	|~~kbport
  2040 04:0E2F: 48           	pha
  2041 04:0E30: 22 xx xx xx  	jsl	~~k_write_ipc_port
  2042                        ;	}
  2043                        	.line	452
  2044                        ;}
  2045                        L10010:
  2046                        	.line	453
  2047                        L51:
  2048 04:0E34: A5 06        	lda	<L47+2
  2049 04:0E36: 85 08        	sta	<L47+2+2
  2050 04:0E38: A5 05        	lda	<L47+1
  2051 04:0E3A: 85 07        	sta	<L47+1+2
  2052 04:0E3C: 2B           	pld
  2053 04:0E3D: 3B           	tsc
  2054 04:0E3E: 18           	clc
  2055 04:0E3F: 69 06 00     	adc	#L47+2
  2056 04:0E42: 1B           	tcs
  2057 04:0E43: 6B           	rtl
  2058                        	.endblock	453
  2059             00000004   L47	equ	4
  2060             00000001   L48	equ	1
  2061 04:0E44:              	ends
  2062                        	efunc
  2063                        	.endfunc	453,1,4
  Mon Aug  9 2021 16:52                                                Page 40


  2064                        	.line	453
  2065                        ;
  2066                        ;static void f_driver_irq(void)
  2067                        ;{
  2068                        	.line	455
  2069                        	.line	456
  2070                        	KEYBS00
  2071                        	func
  2072                        	.function	456
  2073                        ~~f_driver_irq:
  2074                        	longa	on
  2075                        	longi	on
  2076 04:0E44: 3B           	tsc
  2077 04:0E45: 38           	sec
  2078 04:0E46: E9 13 00     	sbc	#L52
  2079 04:0E49: 1B           	tcs
  2080 04:0E4A: 0B           	phd
  2081 04:0E4B: 5B           	tcd
  2082                        	.block	456
  2083                        ;	PMARSHALDATA pm = NULL;
  2084                        ;
  2085                        ;	int i = 0;
  2086                        ;	char none = 0;
  2087                        ;	unsigned char data = 0;
  2088                        ;	int dp = 20;
  2089                        ;	BYTE raw = 0;
  2090                        ;
  2091                        ;	//k_debug_char_com1( 'J');
  2092                        ;
  2093                        ;	//if(debugport == NULL)
  2094                        ;	//	debugport =  k__port("@debug");
  2095                        ;	if(kbport == NULL)
  2096             00000000   pm_1	set	0
  2097             00000004   i_1	set	4
  2098             00000006   none_1	set	6
  2099             00000007   data_1	set	7
  2100             00000008   dp_1	set	8
  2101             0000000A   raw_1	set	10
  2102                        	.sym	pm,0,139,1,32,66
  2103                        	.sym	i,4,5,1,16
  2104                        	.sym	none,6,14,1,8
  2105                        	.sym	data,7,14,1,8
  2106                        	.sym	dp,8,5,1,16
  2107                        	.sym	raw,10,14,1,8
  2108 04:0E4C: 64 09        	stz	<L53+pm_1
  2109 04:0E4E: 64 0B        	stz	<L53+pm_1+2
  2110 04:0E50: 64 0D        	stz	<L53+i_1
  2111 04:0E52: E2 20        	sep	#$20
  2112                        	longa	off
  2113 04:0E54: 64 0F        	stz	<L53+none_1
  2114 04:0E56: C2 20        	rep	#$20
  2115                        	longa	on
  2116 04:0E58: E2 20        	sep	#$20
  2117                        	longa	off
  2118 04:0E5A: 64 10        	stz	<L53+data_1
  2119 04:0E5C: C2 20        	rep	#$20
  2120                        	longa	on
  2121 04:0E5E: A9 14 00     	lda	#$14
  Mon Aug  9 2021 16:52                                                Page 41


  2122 04:0E61: 85 11        	sta	<L53+dp_1
  2123 04:0E63: E2 20        	sep	#$20
  2124                        	longa	off
  2125 04:0E65: 64 13        	stz	<L53+raw_1
  2126 04:0E67: C2 20        	rep	#$20
  2127                        	longa	on
  2128                        	.line	469
  2129                        ;		kbport =  k_get_ipc_port(IPC_SYS_KEYBOAR
                    D);
  2130 04:0E69: AD xx xx     	lda	|~~kbport
  2131 04:0E6C: 0D xx xx     	ora	|~~kbport+2
  2132 04:0E6F: F0 03        	beq	L55
  2133 04:0E71: 82 10 00     	brl	L10011
  2134                        L55:
  2135                        	.line	470
  2136 04:0E74: F4 xx xx     	pea	#^L1
  2137 04:0E77: F4 xx xx     	pea	#<L1
  2138 04:0E7A: 22 xx xx xx  	jsl	~~k_get_ipc_port
  2139 04:0E7E: 8D xx xx     	sta	|~~kbport
  2140 04:0E81: 8E xx xx     	stx	|~~kbport+2
  2141                        ;
  2142                        ;	_irq_keyboardTimeout = 0;
  2143                        L10011:
  2144                        	.line	472
  2145 04:0E84: 9C xx xx     	stz	|~~_irq_keyboardTimeout
  2146                        ;
  2147                        ;	_irq_key_state_machine.scanTime+=1;
  2148                        	.line	474
  2149 04:0E87: EE xx xx     	inc	|~~_irq_key_state_machine+9
  2150 04:0E8A: D0 03        	bne	L56
  2151 04:0E8C: EE xx xx     	inc	|~~_irq_key_state_machine+9+2
  2152                        L56:
  2153                        ;
  2154                        ;	//k_write_ipc_port(debugport,k_fxstring_new("H_I
                    N",16),0);
  2155                        ;
  2156                        ;	k_debug_char_com1('D');
  2157                        	.line	478
  2158 04:0E8F: F4 44 00     	pea	#<$44
  2159 04:0E92: 22 xx xx xx  	jsl	~~k_debug_char_com1
  2160                        ;
  2161                        ;
  2162                        ;	/*
  2163                        ;	asm NOP;
  2164                        ;	asm NOP;
  2165                        ;	asm NOP;
  2166                        ;	asm NOP;
  2167                        ;	asm NOP;
  2168                        ;	asm NOP;
  2169                        ;	asm NOP;
  2170                        ;	asm NOP;
  2171                        ;	asm NOP;
  2172                        ;	*/
  2173                        ;
  2174                        ;	raw = KBD_INPT_BUF[0];
  2175                        	.line	493
  2176 04:0E96: E2 20        	sep	#$20
  2177                        	longa	off
  Mon Aug  9 2021 16:52                                                Page 42


  2178 04:0E98: AF 03 18 AF  	lda	>11474947
  2179 04:0E9C: 85 13        	sta	<L53+raw_1
  2180 04:0E9E: C2 20        	rep	#$20
  2181                        	longa	on
  2182                        ;
  2183                        ;
  2184                        ;
  2185                        ;	if((raw!=0xE0) && (_irq_key_state_machine.scanCo
                    de == raw)  && ( _irq_key_state_machine.scanTime < (_pseudo_
                    timer + 5) ))
  2186                        	.line	497
  2187                        ;	{
  2188 04:0EA0: E2 20        	sep	#$20
  2189                        	longa	off
  2190 04:0EA2: A5 13        	lda	<L53+raw_1
  2191 04:0EA4: C9 E0        	cmp	#<$e0
  2192 04:0EA6: C2 20        	rep	#$20
  2193                        	longa	on
  2194 04:0EA8: D0 03        	bne	L57
  2195 04:0EAA: 82 36 00     	brl	L10012
  2196                        L57:
  2197 04:0EAD: E2 20        	sep	#$20
  2198                        	longa	off
  2199 04:0EAF: AD xx xx     	lda	|~~_irq_key_state_machine
  2200 04:0EB2: C5 13        	cmp	<L53+raw_1
  2201 04:0EB4: C2 20        	rep	#$20
  2202                        	longa	on
  2203 04:0EB6: F0 03        	beq	L58
  2204 04:0EB8: 82 28 00     	brl	L10012
  2205                        L58:
  2206 04:0EBB: 18           	clc
  2207 04:0EBC: A9 05 00     	lda	#$5
  2208 04:0EBF: 6D xx xx     	adc	|~~_pseudo_timer
  2209 04:0EC2: 85 01        	sta	<R0
  2210 04:0EC4: A9 00 00     	lda	#$0
  2211 04:0EC7: 6D xx xx     	adc	|~~_pseudo_timer+2
  2212 04:0ECA: 85 03        	sta	<R0+2
  2213 04:0ECC: AD xx xx     	lda	|~~_irq_key_state_machine+9
  2214 04:0ECF: C5 01        	cmp	<R0
  2215 04:0ED1: AD xx xx     	lda	|~~_irq_key_state_machine+9+2
  2216 04:0ED4: E5 03        	sbc	<R0+2
  2217 04:0ED6: 90 03        	bcc	L59
  2218 04:0ED8: 82 08 00     	brl	L10012
  2219                        L59:
  2220                        	.line	498
  2221                        ;		return;
  2222                        	.line	499
  2223                        L60:
  2224 04:0EDB: 2B           	pld
  2225 04:0EDC: 3B           	tsc
  2226 04:0EDD: 18           	clc
  2227 04:0EDE: 69 13 00     	adc	#L52
  2228 04:0EE1: 1B           	tcs
  2229 04:0EE2: 6B           	rtl
  2230                        ;	}
  2231                        	.line	500
  2232                        ;
  2233                        ;
  Mon Aug  9 2021 16:52                                                Page 43


  2234                        ;	//k_debug_hex("CODE:",raw);
  2235                        ;
  2236                        ;	if(raw == 0xFA)
  2237                        L10012:
  2238                        	.line	505
  2239                        ;	{
  2240 04:0EE3: E2 20        	sep	#$20
  2241                        	longa	off
  2242 04:0EE5: A5 13        	lda	<L53+raw_1
  2243 04:0EE7: C9 FA        	cmp	#<$fa
  2244 04:0EE9: C2 20        	rep	#$20
  2245                        	longa	on
  2246 04:0EEB: F0 03        	beq	L61
  2247 04:0EED: 82 03 00     	brl	L10013
  2248                        L61:
  2249                        	.line	506
  2250                        ;		//k_write_ipc_port(debugport,k_fxstring_
                    new("EAT 0xFA",16),0);
  2251                        ;		return;
  2252                        	.line	508
  2253 04:0EF0: 82 E8 FF     	brl	L60
  2254                        ;	}
  2255                        	.line	509
  2256                        ;
  2257                        ;	if(raw > 0xE1 && raw < 0xF0)
  2258                        L10013:
  2259                        	.line	511
  2260                        ;	{
  2261 04:0EF3: E2 20        	sep	#$20
  2262                        	longa	off
  2263 04:0EF5: A9 E1        	lda	#$e1
  2264 04:0EF7: C5 13        	cmp	<L53+raw_1
  2265 04:0EF9: C2 20        	rep	#$20
  2266                        	longa	on
  2267 04:0EFB: 90 03        	bcc	L62
  2268 04:0EFD: 82 10 00     	brl	L10014
  2269                        L62:
  2270 04:0F00: E2 20        	sep	#$20
  2271                        	longa	off
  2272 04:0F02: A5 13        	lda	<L53+raw_1
  2273 04:0F04: C9 F0        	cmp	#<$f0
  2274 04:0F06: C2 20        	rep	#$20
  2275                        	longa	on
  2276 04:0F08: 90 03        	bcc	L63
  2277 04:0F0A: 82 03 00     	brl	L10014
  2278                        L63:
  2279                        	.line	512
  2280                        ;		//k_write_ipc_port(debugport,k_fxstring_
                    new("EAT 0xEX",16),0);
  2281                        ;		return;
  2282                        	.line	514
  2283 04:0F0D: 82 CB FF     	brl	L60
  2284                        ;	}
  2285                        	.line	515
  2286                        ;
  2287                        ;	if((_irq_key_state_machine.isExtended == TRUE) &
                    & (raw == 0xE0))
  2288                        L10014:
  Mon Aug  9 2021 16:52                                                Page 44


  2289                        	.line	517
  2290                        ;	{
  2291 04:0F10: E2 20        	sep	#$20
  2292                        	longa	off
  2293 04:0F12: AD xx xx     	lda	|~~_irq_key_state_machine+3
  2294 04:0F15: C9 01        	cmp	#<$1
  2295 04:0F17: C2 20        	rep	#$20
  2296                        	longa	on
  2297 04:0F19: F0 03        	beq	L64
  2298 04:0F1B: 82 10 00     	brl	L10015
  2299                        L64:
  2300 04:0F1E: E2 20        	sep	#$20
  2301                        	longa	off
  2302 04:0F20: A5 13        	lda	<L53+raw_1
  2303 04:0F22: C9 E0        	cmp	#<$e0
  2304 04:0F24: C2 20        	rep	#$20
  2305                        	longa	on
  2306 04:0F26: F0 03        	beq	L65
  2307 04:0F28: 82 03 00     	brl	L10015
  2308                        L65:
  2309                        	.line	518
  2310                        ;		//k_write_ipc_port(debugport,k_fxstring_
                    new("EXTRA 0xE0",16),0);
  2311                        ;		return;
  2312                        	.line	520
  2313 04:0F2B: 82 AD FF     	brl	L60
  2314                        ;	}
  2315                        	.line	521
  2316                        ;
  2317                        ;	_irq_key_state_machine.scanCode = raw;
  2318                        L10015:
  2319                        	.line	523
  2320 04:0F2E: E2 20        	sep	#$20
  2321                        	longa	off
  2322 04:0F30: A5 13        	lda	<L53+raw_1
  2323 04:0F32: 8D xx xx     	sta	|~~_irq_key_state_machine
  2324 04:0F35: C2 20        	rep	#$20
  2325                        	longa	on
  2326                        ;
  2327                        ;	switch(_irq_key_state_machine.scanCode)
  2328                        	.line	525
  2329 04:0F37: AD xx xx     	lda	|~~_irq_key_state_machine
  2330 04:0F3A: 29 FF 00     	and	#$ff
  2331 04:0F3D: 82 36 01     	brl	L10016
  2332                        ;	{
  2333                        	.line	526
  2334                        ;	case 0x36:
  2335                        	.line	527
  2336                        L10018:
  2337                        ;	case 0x2A:
  2338                        	.line	528
  2339                        L10019:
  2340                        ;		_irq_key_state_machine.isShifted = TRUE;
  2341                        	.line	529
  2342 04:0F40: E2 20        	sep	#$20
  2343                        	longa	off
  2344 04:0F42: A9 01        	lda	#$1
  2345 04:0F44: 8D xx xx     	sta	|~~_irq_key_state_machine+1
  Mon Aug  9 2021 16:52                                                Page 45


  2346 04:0F47: C2 20        	rep	#$20
  2347                        	longa	on
  2348                        ;		break;
  2349                        	.line	530
  2350 04:0F49: 82 62 01     	brl	L10017
  2351                        ;	case 0xB6:
  2352                        	.line	531
  2353                        L10020:
  2354                        ;	case 0xAA:
  2355                        	.line	532
  2356                        L10021:
  2357                        ;		_irq_key_state_machine.isShifted = FALSE
                    ;
  2358                        	.line	533
  2359 04:0F4C: E2 20        	sep	#$20
  2360                        	longa	off
  2361 04:0F4E: 9C xx xx     	stz	|~~_irq_key_state_machine+1
  2362 04:0F51: C2 20        	rep	#$20
  2363                        	longa	on
  2364                        ;		break;
  2365                        	.line	534
  2366 04:0F53: 82 58 01     	brl	L10017
  2367                        ;	case 0x38:
  2368                        	.line	535
  2369                        L10022:
  2370                        ;		_irq_key_state_machine.isAlt = TRUE;
  2371                        	.line	536
  2372 04:0F56: E2 20        	sep	#$20
  2373                        	longa	off
  2374 04:0F58: A9 01        	lda	#$1
  2375 04:0F5A: 8D xx xx     	sta	|~~_irq_key_state_machine+2
  2376 04:0F5D: C2 20        	rep	#$20
  2377                        	longa	on
  2378                        ;		break;
  2379                        	.line	537
  2380 04:0F5F: 82 4C 01     	brl	L10017
  2381                        ;	case 0xB8:
  2382                        	.line	538
  2383                        L10023:
  2384                        ;		_irq_key_state_machine.isAlt = FALSE;
  2385                        	.line	539
  2386 04:0F62: E2 20        	sep	#$20
  2387                        	longa	off
  2388 04:0F64: 9C xx xx     	stz	|~~_irq_key_state_machine+2
  2389 04:0F67: C2 20        	rep	#$20
  2390                        	longa	on
  2391                        ;		break;
  2392                        	.line	540
  2393 04:0F69: 82 42 01     	brl	L10017
  2394                        ;	case 0xE0:
  2395                        	.line	541
  2396                        L10024:
  2397                        ;	case 0xE1:
  2398                        	.line	542
  2399                        L10025:
  2400                        ;		_irq_key_state_machine.isExtended = TRUE
                    ;
  2401                        	.line	543
  Mon Aug  9 2021 16:52                                                Page 46


  2402 04:0F6C: E2 20        	sep	#$20
  2403                        	longa	off
  2404 04:0F6E: A9 01        	lda	#$1
  2405 04:0F70: 8D xx xx     	sta	|~~_irq_key_state_machine+3
  2406 04:0F73: C2 20        	rep	#$20
  2407                        	longa	on
  2408                        ;
  2409                        ;		//k_write_ipc_port(debugport,k_fxstring_
                    new("isExtended1",16),0);
  2410                        ;		while(STATUS_PORT[0] & 1)
  2411                        	.line	546
  2412                        L10026:
  2413 04:0F75: E2 20        	sep	#$20
  2414                        	longa	off
  2415 04:0F77: AF 07 18 AF  	lda	>11474951
  2416 04:0F7B: 29 01        	and	#<$1
  2417 04:0F7D: C2 20        	rep	#$20
  2418                        	longa	on
  2419 04:0F7F: D0 03        	bne	L66
  2420 04:0F81: 82 1C 00     	brl	L10027
  2421                        L66:
  2422                        ;		{
  2423                        	.line	547
  2424                        ;			//k_write_ipc_port(debugport,k_f
                    xstring_new("AFTER 0xE0",16),0);
  2425                        ;			_irq_key_state_machine.scanCode 
                    = kbd_read();
  2426                        	.line	549
  2427 04:0F84: 22 3F 0D 04  	jsl	~~kbd_read
  2428 04:0F88: E2 20        	sep	#$20
  2429                        	longa	off
  2430 04:0F8A: 8D xx xx     	sta	|~~_irq_key_state_machine
  2431 04:0F8D: C2 20        	rep	#$20
  2432                        	longa	on
  2433                        ;			if(_irq_key_state_machine.scanCo
                    de!=0xE0)
  2434                        	.line	550
  2435                        ;				break;
  2436 04:0F8F: E2 20        	sep	#$20
  2437                        	longa	off
  2438 04:0F91: AD xx xx     	lda	|~~_irq_key_state_machine
  2439 04:0F94: C9 E0        	cmp	#<$e0
  2440 04:0F96: C2 20        	rep	#$20
  2441                        	longa	on
  2442 04:0F98: F0 03        	beq	L67
  2443 04:0F9A: 82 03 00     	brl	L10027
  2444                        L67:
  2445                        ;		}
  2446                        	.line	552
  2447 04:0F9D: 82 D5 FF     	brl	L10026
  2448                        L10027:
  2449                        ;
  2450                        ;		//k_write_ipc_port(debugport,k_fxstring_
                    new("isExtended2",16),0);
  2451                        ;		//return;
  2452                        ;		break;
  2453                        	.line	556
  2454 04:0FA0: 82 0B 01     	brl	L10017
  Mon Aug  9 2021 16:52                                                Page 47


  2455                        ;	case 0x3A:
  2456                        	.line	557
  2457                        L10028:
  2458                        ;
  2459                        ;		k_debug_char_com1('^');
  2460                        	.line	559
  2461 04:0FA3: F4 5E 00     	pea	#<$5e
  2462 04:0FA6: 22 xx xx xx  	jsl	~~k_debug_char_com1
  2463                        ;
  2464                        ;		_irq_key_state_machine.isCapsLock = !_ir
                    q_key_state_machine.isCapsLock;
  2465                        	.line	561
  2466 04:0FAA: 64 01        	stz	<R0
  2467 04:0FAC: AD xx xx     	lda	|~~_irq_key_state_machine+4
  2468 04:0FAF: 29 FF 00     	and	#$ff
  2469 04:0FB2: F0 03        	beq	L69
  2470 04:0FB4: 82 02 00     	brl	L68
  2471                        L69:
  2472 04:0FB7: E6 01        	inc	<R0
  2473                        L68:
  2474 04:0FB9: E2 20        	sep	#$20
  2475                        	longa	off
  2476 04:0FBB: A5 01        	lda	<R0
  2477 04:0FBD: 8D xx xx     	sta	|~~_irq_key_state_machine+4
  2478 04:0FC0: C2 20        	rep	#$20
  2479                        	longa	on
  2480                        ;
  2481                        ;		if(_irq_key_state_machine.isCapsLock)
  2482                        	.line	563
  2483                        ;			_irq_key_state_machine.ledStatus
                    |=0x04;
  2484 04:0FC2: AD xx xx     	lda	|~~_irq_key_state_machine+4
  2485 04:0FC5: 29 FF 00     	and	#$ff
  2486 04:0FC8: D0 03        	bne	L70
  2487 04:0FCA: 82 0C 00     	brl	L10029
  2488                        L70:
  2489                        	.line	564
  2490 04:0FCD: E2 20        	sep	#$20
  2491                        	longa	off
  2492 04:0FCF: A9 04        	lda	#$4
  2493 04:0FD1: 0C xx xx     	tsb	|~~_irq_key_state_machine+13
  2494 04:0FD4: C2 20        	rep	#$20
  2495                        	longa	on
  2496                        ;		else
  2497 04:0FD6: 82 09 00     	brl	L10030
  2498                        L10029:
  2499                        ;			_irq_key_state_machine.ledStatus
                    &=(~0x04);
  2500                        	.line	566
  2501 04:0FD9: E2 20        	sep	#$20
  2502                        	longa	off
  2503 04:0FDB: A9 04        	lda	#$4
  2504 04:0FDD: 1C xx xx     	trb	|~~_irq_key_state_machine+13
  2505 04:0FE0: C2 20        	rep	#$20
  2506                        	longa	on
  2507                        L10030:
  2508                        ;
  2509                        ;		set_led(_irq_key_state_machine.ledStatus
  Mon Aug  9 2021 16:52                                                Page 48


                    );
  2510                        	.line	568
  2511 04:0FE2: AD xx xx     	lda	|~~_irq_key_state_machine+13
  2512 04:0FE5: 48           	pha
  2513 04:0FE6: 22 E2 0D 04  	jsl	~~set_led
  2514                        ;
  2515                        ;		break;
  2516                        	.line	570
  2517 04:0FEA: 82 C1 00     	brl	L10017
  2518                        ;	case 0xBA:
  2519                        	.line	571
  2520                        L10031:
  2521                        ;		//_irq_key_state_machine.isCapsLock = FA
                    LSE;
  2522                        ;		break;
  2523                        	.line	573
  2524 04:0FED: 82 BE 00     	brl	L10017
  2525                        ;	case 0x45:
  2526                        	.line	574
  2527                        L10032:
  2528                        ;		_irq_key_state_machine.isNumLock = !_irq
                    _key_state_machine.isNumLock;
  2529                        	.line	575
  2530 04:0FF0: 64 01        	stz	<R0
  2531 04:0FF2: AD xx xx     	lda	|~~_irq_key_state_machine+5
  2532 04:0FF5: 29 FF 00     	and	#$ff
  2533 04:0FF8: F0 03        	beq	L72
  2534 04:0FFA: 82 02 00     	brl	L71
  2535                        L72:
  2536 04:0FFD: E6 01        	inc	<R0
  2537                        L71:
  2538 04:0FFF: E2 20        	sep	#$20
  2539                        	longa	off
  2540 04:1001: A5 01        	lda	<R0
  2541 04:1003: 8D xx xx     	sta	|~~_irq_key_state_machine+5
  2542 04:1006: C2 20        	rep	#$20
  2543                        	longa	on
  2544                        ;		if(_irq_key_state_machine.isNumLock)
  2545                        	.line	576
  2546                        ;			_irq_key_state_machine.ledStatus
                    |=0x02;
  2547 04:1008: AD xx xx     	lda	|~~_irq_key_state_machine+5
  2548 04:100B: 29 FF 00     	and	#$ff
  2549 04:100E: D0 03        	bne	L73
  2550 04:1010: 82 0C 00     	brl	L10033
  2551                        L73:
  2552                        	.line	577
  2553 04:1013: E2 20        	sep	#$20
  2554                        	longa	off
  2555 04:1015: A9 02        	lda	#$2
  2556 04:1017: 0C xx xx     	tsb	|~~_irq_key_state_machine+13
  2557 04:101A: C2 20        	rep	#$20
  2558                        	longa	on
  2559                        ;		else
  2560 04:101C: 82 09 00     	brl	L10034
  2561                        L10033:
  2562                        ;			_irq_key_state_machine.ledStatus
                    &=(~0x02);
  Mon Aug  9 2021 16:52                                                Page 49


  2563                        	.line	579
  2564 04:101F: E2 20        	sep	#$20
  2565                        	longa	off
  2566 04:1021: A9 02        	lda	#$2
  2567 04:1023: 1C xx xx     	trb	|~~_irq_key_state_machine+13
  2568 04:1026: C2 20        	rep	#$20
  2569                        	longa	on
  2570                        L10034:
  2571                        ;
  2572                        ;		set_led(_irq_key_state_machine.ledStatus
                    );
  2573                        	.line	581
  2574 04:1028: AD xx xx     	lda	|~~_irq_key_state_machine+13
  2575 04:102B: 48           	pha
  2576 04:102C: 22 E2 0D 04  	jsl	~~set_led
  2577                        ;
  2578                        ;		break;
  2579                        	.line	583
  2580 04:1030: 82 7B 00     	brl	L10017
  2581                        ;	case 0x46:
  2582                        	.line	584
  2583                        L10035:
  2584                        ;		_irq_key_state_machine.isScrollLock = !_
                    irq_key_state_machine.isScrollLock;
  2585                        	.line	585
  2586 04:1033: 64 01        	stz	<R0
  2587 04:1035: AD xx xx     	lda	|~~_irq_key_state_machine+6
  2588 04:1038: 29 FF 00     	and	#$ff
  2589 04:103B: F0 03        	beq	L75
  2590 04:103D: 82 02 00     	brl	L74
  2591                        L75:
  2592 04:1040: E6 01        	inc	<R0
  2593                        L74:
  2594 04:1042: E2 20        	sep	#$20
  2595                        	longa	off
  2596 04:1044: A5 01        	lda	<R0
  2597 04:1046: 8D xx xx     	sta	|~~_irq_key_state_machine+6
  2598 04:1049: C2 20        	rep	#$20
  2599                        	longa	on
  2600                        ;		if(_irq_key_state_machine.isScrollLock)
  2601                        	.line	586
  2602                        ;			_irq_key_state_machine.ledStatus
                    |=0x01;
  2603 04:104B: AD xx xx     	lda	|~~_irq_key_state_machine+6
  2604 04:104E: 29 FF 00     	and	#$ff
  2605 04:1051: D0 03        	bne	L76
  2606 04:1053: 82 0C 00     	brl	L10036
  2607                        L76:
  2608                        	.line	587
  2609 04:1056: E2 20        	sep	#$20
  2610                        	longa	off
  2611 04:1058: A9 01        	lda	#$1
  2612 04:105A: 0C xx xx     	tsb	|~~_irq_key_state_machine+13
  2613 04:105D: C2 20        	rep	#$20
  2614                        	longa	on
  2615                        ;		else
  2616 04:105F: 82 09 00     	brl	L10037
  2617                        L10036:
  Mon Aug  9 2021 16:52                                                Page 50


  2618                        ;			_irq_key_state_machine.ledStatus
                    &=(~0x01);
  2619                        	.line	589
  2620 04:1062: E2 20        	sep	#$20
  2621                        	longa	off
  2622 04:1064: A9 01        	lda	#$1
  2623 04:1066: 1C xx xx     	trb	|~~_irq_key_state_machine+13
  2624 04:1069: C2 20        	rep	#$20
  2625                        	longa	on
  2626                        L10037:
  2627                        ;
  2628                        ;		set_led(_irq_key_state_machine.ledStatus
                    );
  2629                        	.line	591
  2630 04:106B: AD xx xx     	lda	|~~_irq_key_state_machine+13
  2631 04:106E: 48           	pha
  2632 04:106F: 22 E2 0D 04  	jsl	~~set_led
  2633                        ;
  2634                        ;		break;
  2635                        	.line	593
  2636 04:1073: 82 38 00     	brl	L10017
  2637                        ;	}
  2638                        	.line	594
  2639                        L10016:
  2640                        	xref	~~~swt
  2641 04:1076: 22 xx xx xx  	jsl	~~~swt
  2642 04:107A: 0C 00        	dw	12
  2643 04:107C: 2A 00        	dw	42
  2644 04:107E: 3F 0F        	dw	L10019-1
  2645 04:1080: 36 00        	dw	54
  2646 04:1082: 3F 0F        	dw	L10018-1
  2647 04:1084: 38 00        	dw	56
  2648 04:1086: 55 0F        	dw	L10022-1
  2649 04:1088: 3A 00        	dw	58
  2650 04:108A: A2 0F        	dw	L10028-1
  2651 04:108C: 45 00        	dw	69
  2652 04:108E: EF 0F        	dw	L10032-1
  2653 04:1090: 46 00        	dw	70
  2654 04:1092: 32 10        	dw	L10035-1
  2655 04:1094: AA 00        	dw	170
  2656 04:1096: 4B 0F        	dw	L10021-1
  2657 04:1098: B6 00        	dw	182
  2658 04:109A: 4B 0F        	dw	L10020-1
  2659 04:109C: B8 00        	dw	184
  2660 04:109E: 61 0F        	dw	L10023-1
  2661 04:10A0: BA 00        	dw	186
  2662 04:10A2: EC 0F        	dw	L10031-1
  2663 04:10A4: E0 00        	dw	224
  2664 04:10A6: 6B 0F        	dw	L10024-1
  2665 04:10A8: E1 00        	dw	225
  2666 04:10AA: 6B 0F        	dw	L10025-1
  2667 04:10AC: AD 10        	dw	L10017-1
  2668                        L10017:
  2669                        ;
  2670                        ;
  2671                        ;
  2672                        ;	_irq_key_state_machine.scanTime = _pseudo_timer;
  2673                        	.line	598
  Mon Aug  9 2021 16:52                                                Page 51


  2674 04:10AE: AD xx xx     	lda	|~~_pseudo_timer
  2675 04:10B1: 8D xx xx     	sta	|~~_irq_key_state_machine+9
  2676 04:10B4: AD xx xx     	lda	|~~_pseudo_timer+2
  2677 04:10B7: 8D xx xx     	sta	|~~_irq_key_state_machine+9+2
  2678                        ;	_irq_key_state_machine.keyChar = k_getKeyboardCh
                    ar(_irq_key_state_machine.scanCode,
  2679                        	.line	599
  2680                        ;							
                    						   _irq_key_stat
                    e_machine.isExtended,
  2681                        ;							
                    						   _irq_key_stat
                    e_machine.isShifted^ _irq_key_state_machine.isCapsLock,
  2682                        ;							
                    						   _irq_key_stat
                    e_machine.isAlt);
  2683 04:10BA: AD xx xx     	lda	|~~_irq_key_state_machine+2
  2684 04:10BD: 29 FF 00     	and	#$ff
  2685 04:10C0: 48           	pha
  2686 04:10C1: AD xx xx     	lda	|~~_irq_key_state_machine+1
  2687 04:10C4: 29 FF 00     	and	#$ff
  2688 04:10C7: 85 01        	sta	<R0
  2689 04:10C9: AD xx xx     	lda	|~~_irq_key_state_machine+4
  2690 04:10CC: 29 FF 00     	and	#$ff
  2691 04:10CF: 85 05        	sta	<R1
  2692 04:10D1: A5 05        	lda	<R1
  2693 04:10D3: 45 01        	eor	<R0
  2694 04:10D5: 48           	pha
  2695 04:10D6: AD xx xx     	lda	|~~_irq_key_state_machine+3
  2696 04:10D9: 29 FF 00     	and	#$ff
  2697 04:10DC: 48           	pha
  2698 04:10DD: AD xx xx     	lda	|~~_irq_key_state_machine
  2699 04:10E0: 48           	pha
  2700 04:10E1: 22 xx xx xx  	jsl	~~k_getKeyboardChar
  2701 04:10E5: 8D xx xx     	sta	|~~_irq_key_state_machine+7
  2702                        ;
  2703                        ;
  2704                        ;	//k_debug_char_com1((BYTE)(_irq_key_state_machin
                    e.keyChar & 0x00FF));
  2705                        ;	//reset extended after char
  2706                        ;
  2707                        ;	if(_irq_key_state_machine.keyChar == -1)
  2708                        	.line	608
  2709                        ;	{
  2710 04:10E8: AD xx xx     	lda	|~~_irq_key_state_machine+7
  2711 04:10EB: C9 FF FF     	cmp	#<$ffffffff
  2712 04:10EE: F0 03        	beq	L77
  2713 04:10F0: 82 03 00     	brl	L10038
  2714                        L77:
  2715                        	.line	609
  2716                        ;		_irq_key_state_machine.keyChar = 0;
  2717                        	.line	610
  2718 04:10F3: 9C xx xx     	stz	|~~_irq_key_state_machine+7
  2719                        ;		//k_write_ipc_port(debugport,k_fxstring_
                    new("OVERFLOW",16),0);
  2720                        ;	}
  2721                        	.line	612
  2722                        ;
  Mon Aug  9 2021 16:52                                                Page 52


  2723                        ;	k_irq_device_event(IRQE_KEYBOARD_RAW,_pseudo_tim
                    er,&_irq_key_state_machine);
  2724                        L10038:
  2725                        	.line	614
  2726 04:10F6: A9 xx xx     	lda	#<~~_irq_key_state_machine
  2727 04:10F9: 85 01        	sta	<R0
  2728                        	xref	_BEG_DATA
  2729 04:10FB: A9 xx xx     	lda	#_BEG_DATA>>16
  2730 04:10FE: 85 03        	sta	<R0+2
  2731 04:1100: D4 03        	pei	<R0+2
  2732 04:1102: D4 01        	pei	<R0
  2733 04:1104: AD xx xx     	lda	|~~_pseudo_timer+2
  2734 04:1107: 48           	pha
  2735 04:1108: AD xx xx     	lda	|~~_pseudo_timer
  2736 04:110B: 48           	pha
  2737 04:110C: F4 11 00     	pea	#<$11
  2738 04:110F: 22 xx xx xx  	jsl	~~k_irq_device_event
  2739                        ;
  2740                        ;
  2741                        ;	//if(_irq_key_state_machine.scanCode == 0x01)
  2742                        ;	//	k_write_ipc_port(debugport,k_fxstring_ne
                    w("ESCAPE",16),0);
  2743                        ;
  2744                        ;	if(raw != 0xE0)
  2745                        	.line	620
  2746                        ;		_irq_key_state_machine.isExtended = FALS
                    E;
  2747 04:1113: E2 20        	sep	#$20
  2748                        	longa	off
  2749 04:1115: A5 13        	lda	<L53+raw_1
  2750 04:1117: C9 E0        	cmp	#<$e0
  2751 04:1119: C2 20        	rep	#$20
  2752                        	longa	on
  2753 04:111B: D0 03        	bne	L78
  2754 04:111D: 82 07 00     	brl	L10039
  2755                        L78:
  2756                        	.line	621
  2757 04:1120: E2 20        	sep	#$20
  2758                        	longa	off
  2759 04:1122: 9C xx xx     	stz	|~~_irq_key_state_machine+3
  2760 04:1125: C2 20        	rep	#$20
  2761                        	longa	on
  2762                        ;
  2763                        ;
  2764                        ;
  2765                        ;
  2766                        ;	return;
  2767                        L10039:
  2768                        	.line	626
  2769 04:1127: 82 B1 FD     	brl	L60
  2770                        ;}
  2771                        	.line	627
  2772                        	.endblock	627
  2773             00000013   L52	equ	19
  2774             00000009   L53	equ	9
  2775 04:112A:              	ends
  2776                        	efunc
  2777                        	.endfunc	627,9,19
  Mon Aug  9 2021 16:52                                                Page 53


  2778                        	.line	627
  2779                        	data
  2780                        L1:
  2781 00:0077: 40 6B 65 79  	db	$40,$6B,$65,$79,$62,$6F,$61,$72,$64,$00
       00:007B: 62 6F 61 72 
       00:007F: 64 00 
  2782 00:0081:              	ends
  2783                        ;
  2784                        ;
  2785                        ;
  2786                        	.line	629
  2787                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\drivers/DRIVER_FMXKEYB.c",455
  2788                        	xref	~~ps2_expect_ack
  2789                        	xref	~~ps2_write_device
  2790                        	xref	~~k_debug_char_com1
  2791                        	xref	~~k_irq_device_event
  2792                        	xref	~~k_getKeyboardChar
  2793                        	xref	~~k_write_ipc_port
  2794                        	xref	~~k_get_ipc_port
  2795                        	xref	~~k_mem_allocate_heap
  2796                        	xref	~~_pseudo_timer
  2797                        	xref	~~_irq_keyboardTimeout
  2798                        	.sym	~~kbd_read,~~kbd_read,78,3,0
  2799                        	.sym	~~f_get_driver,~~f_get_driver,1098,3,32,
                    87
  2800                        	.sym	~~DRIVER_FMXKEYBOARD_U,~~DRIVER_FMXKEYBO
                    ARD_U,10,3,776,87
  2801                        	.sym	~~kbport,~~kbport,138,3,32,56
  2802                        	.sym	~~_irq_key_state_machine,~~_irq_key_stat
                    e_machine,10,3,112,19
  2803                        	.sym	~~_pseudo_timer,~~_pseudo_timer,18,18,32
  2804                        	.sym	~~_irq_keyboardTimeout,~~_irq_keyboardTi
                    meout,5,18,16
  2805                        	.sym	~~kbd_wait,~~kbd_wait,65,3,0
  2806                        	.sym	~~set_led,~~set_led,65,3,0
  2807                        	.sym	~~keyboard_send_cmd_data,~~keyboard_send
                    _cmd_data,78,3,0
  2808                        	.sym	~~keyboard_send_cmd,~~keyboard_send_cmd,
                    78,3,0
  2809                        	.sym	~~f_driver_irq,~~f_driver_irq,65,3,0
  2810                        	.sym	~~f_driver_unload_u,~~f_driver_unload_u,
                    78,3,0
  2811                        	.sym	~~f_driver_write_u,~~f_driver_write_u,78
                    ,3,0
  2812                        	.sym	~~f_driver_read_u,~~f_driver_read_u,78,3
                    ,0
  2813                        	.sym	~~f_driver_load_u,~~f_driver_load_u,78,3
                    ,0
  2814                        	.sym	kbd_context_t,0,10,14,72,92
  2815                        	.sym	kbd_event_t,0,10,14,40,91
  2816                        	.sym	~~_k_driver_base,~~_k_driver_base,129,3,
                    32
  2817                        	.sym	~~ps2_expect_ack,~~ps2_expect_ack,78,18,
                    0
  2818                        	.sym	~~ps2_write_device,~~ps2_write_device,78
                    ,18,0
  2819                        	.sym	ps2_device_t,0,10,14,88,90
  Mon Aug  9 2021 16:52                                                Page 54


  2820                        	.sym	PIRQCHAIN,0,138,14,32,89
  2821                        	.sym	IRQCHAIN,0,10,14,128,89
  2822                        	.sym	DEVICEDRIVER_COMMAND,0,654,14,32
  2823                        	.sym	DEVICEDRIVER_UNLOAD,0,654,14,32
  2824                        	.sym	DEVICEDRIVER_WRITE,0,654,14,32
  2825                        	.sym	DEVICEDRIVER_READ,0,654,14,32
  2826                        	.sym	DEVICEDRIVER_LOAD,0,654,14,32
  2827                        	.sym	DEVICEDRIVER_IRQ,0,641,14,32
  2828                        	.sym	PFX_BLOCK_DEVICE_DRIVER,0,138,14,32,88
  2829                        	.sym	FX_BLOCK_DEVICE_DRIVER,0,10,14,808,88
  2830                        	.sym	GETDRIVERDEF,0,8842,14,32,87
  2831                        	.sym	PFX_DEVICE_DRIVER,0,138,14,32,87
  2832                        	.sym	FX_DEVICE_DRIVER,0,10,14,776,87
  2833                        	.sym	~~k_debug_char_com1,~~k_debug_char_com1,
                    65,18,0
  2834                        	.sym	PSEGMENTHEADER,0,138,14,32,86
  2835                        	.sym	SEGMENTHEADER,0,10,14,160,86
  2836                        	.sym	PDEBUGBYTEBITS,0,138,14,32,85
  2837                        	.sym	DEBUGBYTEBITS,0,10,14,8,85
  2838                        	.sym	PFXENVIRONMENT,0,138,14,32,84
  2839                        	.sym	FXENVIRONMENT,0,10,14,96,84
  2840                        	.sym	PFXZEROPAGE,0,138,14,32,83
  2841                        	.sym	FXZEROPAGE,0,10,14,720,83
  2842                        	.sym	IRQBUFFER,0,10,14,32,82
  2843                        	.sym	KERNELTRAPCALL,0,641,14,32
  2844                        	.sym	PFXKERNEL_API_CALLTABLE,0,138,14,32,81
  2845                        	.sym	FXKERNEL_API_CALLTABLE,0,10,14,8192,81
  2846                        	.sym	FRESULT,0,5,14,16
  2847                        	.sym	MKFS_PARM,0,10,14,80,80
  2848                        	.sym	FILINFO,0,10,14,2224,79
  2849                        	.sym	DIR,0,10,14,416,78
  2850                        	.sym	FIL,0,10,14,4400,77
  2851                        	.sym	FFOBJID,0,10,14,128,76
  2852                        	.sym	FATFS,0,10,14,4504,75
  2853                        	.sym	LBA_t,0,18,14,32
  2854                        	.sym	FSIZE_t,0,18,14,32
  2855                        	.sym	TCHAR,0,14,14,8
  2856                        	.sym	PCOMMANDARGS,0,138,14,32,74
  2857                        	.sym	COMMANDARGS,0,10,14,64,74
  2858                        	.sym	PTOKENIZESTATE,0,133,14,32
  2859                        	.sym	TOKENIZESTATE,0,5,14,16
  2860                        	.sym	PTOKEN,0,138,14,32,73
  2861                        	.sym	TOKEN,0,10,14,64,73
  2862                        	.sym	PTOKENTYPE,0,133,14,32
  2863                        	.sym	TOKENTYPE,0,5,14,16
  2864                        	.sym	FXCommandHandler,0,656,14,32
  2865                        	.sym	PCONSOLECTX,0,138,14,32,72
  2866                        	.sym	CONSOLECTX,0,10,14,1144,72
  2867                        	.sym	PSPINNERCTX,0,138,14,32,71
  2868                        	.sym	SPINNERCTX,0,10,14,48,71
  2869                        	.sym	HCLIP,0,138,14,32,70
  2870                        	.sym	PCLIPBOARD_DATA,0,138,14,32,70
  2871                        	.sym	CLIPBOARD_DATA,0,10,14,168,70
  2872                        	.sym	~~k_irq_device_event,~~k_irq_device_even
                    t,65,18,0
  2873                        	.sym	~~k_getKeyboardChar,~~k_getKeyboardChar,
                    80,18,0
  2874                        	.sym	PEVENTMANAGER,0,138,14,32,69
  Mon Aug  9 2021 16:52                                                Page 55


  2875                        	.sym	EVENTMANAGER,0,10,14,192,69
  2876                        	.sym	EV_RUN,0,656,14,32
  2877                        	.sym	EV_QUERY_METRIC,0,656,14,32
  2878                        	.sym	EV_CONFIGURE,0,656,14,32
  2879                        	.sym	EV_UNINIT,0,641,14,32
  2880                        	.sym	EV_INIT,0,8833,14,32
  2881                        	.sym	PMOUSE_MSG_STATE,0,138,14,32,68
  2882                        	.sym	MOUSE_MSG_STATE,0,10,14,184,68
  2883                        	.sym	PFXEVENTPROCESS,0,138,14,32,67
  2884                        	.sym	FXEVENTPROCESS,0,10,14,64,67
  2885                        	.sym	FXASYNCPROCESS,0,641,14,32
  2886                        	.sym	PMARSHALDATA,0,139,14,32,66
  2887                        	.sym	MARSHALDATA,0,11,14,32,66
  2888                        	.sym	FXIDLEPROCESS,0,641,14,32
  2889                        	.sym	FXEventProc,0,641,14,32
  2890                        	.sym	PMOUSEMSGDATA,0,138,14,32,65
  2891                        	.sym	MOUSEMSGDATA,0,10,14,64,65
  2892                        	.sym	MSGIRQ,0,5,14,16
  2893                        	.sym	MAINLOOPARGS,0,10,14,16,64
  2894                        	.sym	PEACHCHILD_MSG,0,138,14,32,63
  2895                        	.sym	EACHCHILD_MSG,0,10,14,64,63
  2896                        	.sym	PMSGBOX_DATA,0,138,14,32,62
  2897                        	.sym	MSGBOX_DATA,0,10,14,96,62
  2898                        	.sym	PDESKTOP_DATA,0,138,14,32,61
  2899                        	.sym	DESKTOP_DATA,0,10,14,64,61
  2900                        	.sym	PWINDOWMANAGER,0,138,14,32,60
  2901                        	.sym	WINDOWMANAGER,0,10,14,160,60
  2902                        	.sym	WM_DOPROCS,0,641,14,32
  2903                        	.sym	WM_QUERY_METRIC,0,656,14,32
  2904                        	.sym	WM_CONFIGURE,0,656,14,32
  2905                        	.sym	WM_HANDLE_EVENT,0,8833,14,32
  2906                        	.sym	WM_EVENTS,0,641,14,32
  2907                        	.sym	PCUR_PALETTE_MAP,0,138,14,32,59
  2908                        	.sym	CUR_PALETTE_MAP,0,10,14,400,59
  2909                        	.sym	PCLICKDETECTED,0,138,14,32,58
  2910                        	.sym	CLICKDETECTED,0,10,14,64,58
  2911                        	.sym	OBJECTCLICKED,0,641,14,32
  2912                        	.sym	PALLOCATIONHEADER,0,138,14,32,57
  2913                        	.sym	ALLOCATIONHEADER,0,10,14,80,57
  2914                        	.sym	~~k_write_ipc_port,~~k_write_ipc_port,80
                    ,18,0
  2915                        	.sym	~~k_get_ipc_port,~~k_get_ipc_port,1098,1
                    8,32,56
  2916                        	.sym	PIPCPORT,0,138,14,32,56
  2917                        	.sym	IPCPORT,0,10,14,144,56
  2918                        	.sym	~~k_mem_allocate_heap,~~k_mem_allocate_h
                    eap,1089,18,32
  2919                        	.sym	MemoryCallback,0,641,14,32
  2920                        	.sym	PFXMEMORYMAP,0,138,14,32,55
  2921                        	.sym	FXMEMORYMAP,0,10,14,2072,55
  2922                        	.sym	UMM_HEAP_INFO,0,10,14,256,54
  2923                        	.sym	FOREACHNODEUNTIL,0,654,14,32
  2924                        	.sym	FOREACHNODE,0,641,14,32
  2925                        	.sym	PEXECUTIVE,0,138,14,32,53
  2926                        	.sym	EXECUTIVE,0,10,14,128,53
  2927                        	.sym	EX_QUERY_METRIC,0,656,14,32
  2928                        	.sym	EX_CONFIGURE,0,656,14,32
  2929                        	.sym	EX_UNINIT,0,641,14,32
  Mon Aug  9 2021 16:52                                                Page 56


  2930                        	.sym	EX_INIT,0,8833,14,32
  2931                        	.sym	PFXSTRING,0,138,14,32,52
  2932                        	.sym	FXSTRING,0,10,14,64,52
  2933                        	.sym	Boolean_T,0,5,14,16
  2934                        	.sym	ldiv_t,0,10,14,64,50
  2935                        	.sym	div_t,0,10,14,32,49
  2936                        	.sym	wctype_t,0,16,14,16
  2937                        	.sym	wint_t,0,16,14,16
  2938                        	.sym	wchar_t,0,14,14,8
  2939                        	.sym	ptrdiff_t,0,7,14,32
  2940                        	.sym	size_t,0,16,14,16
  2941                        	.sym	PFXRFHEADER_STRING_ENTRY,0,138,14,32,48
  2942                        	.sym	FXRFHEADER_STRING_ENTRY,0,10,14,40,48
  2943                        	.sym	PFXRFHEADER_STRING,0,138,14,32,47
  2944                        	.sym	FXRFHEADER_STRING,0,10,14,32,47
  2945                        	.sym	PFXRFHEADER_FONT,0,138,14,32,46
  2946                        	.sym	FXRFHEADER_FONT,0,10,14,144,46
  2947                        	.sym	PFXRFHEADER,0,138,14,32,45
  2948                        	.sym	FXRFHEADER,0,10,14,72,45
  2949                        	.sym	PFXCOMBUFFER,0,138,14,32,44
  2950                        	.sym	FXCOMBUFFER,0,10,14,2080,44
  2951                        	.sym	PSUBMENULIST,0,138,14,32,43
  2952                        	.sym	SUBMENULIST,0,10,14,40,43
  2953                        	.sym	HSUBMENU,0,7,14,32
  2954                        	.sym	PSUBMENU,0,138,14,32,42
  2955                        	.sym	SUBMENU,0,10,14,64,42
  2956                        	.sym	MenuAction,0,641,14,32
  2957                        	.sym	PMENUANCHOR,0,138,14,32,41
  2958                        	.sym	MENUANCHOR,0,10,14,272,41
  2959                        	.sym	PMSGBOX,0,138,14,32,40
  2960                        	.sym	MSGBOX,0,10,14,144,40
  2961                        	.sym	PTEXTBOX,0,138,14,32,39
  2962                        	.sym	TEXTBOX,0,10,14,144,39
  2963                        	.sym	PLISTBOX,0,138,14,32,38
  2964                        	.sym	LISTBOX,0,10,14,240,38
  2965                        	.sym	PSCROLLBAR,0,138,14,32,37
  2966                        	.sym	SCROLLBAR,0,10,14,240,37
  2967                        	.sym	PBUTTON,0,138,14,32,36
  2968                        	.sym	BUTTON,0,10,14,96,36
  2969                        	.sym	PMENUDROPDOWNDATA,0,138,14,32,35
  2970                        	.sym	MENUDROPDOWNDATA,0,10,14,5152,35
  2971                        	.sym	PMENUTAG,0,138,14,32,34
  2972                        	.sym	MENUTAG,0,10,14,160,34
  2973                        	.sym	PMENU,0,138,14,32,33
  2974                        	.sym	MENU,0,10,14,280,33
  2975                        	.sym	HMENURESOURCE,0,129,14,32
  2976                        	.sym	FONTMETRIC,0,10,14,32,32
  2977                        	.sym	TITLE,0,142,14,32
  2978                        	.sym	PHANDLE,0,1153,14,32
  2979                        	.sym	HANDLE,0,129,14,32
  2980                        	.sym	PWINDOWEX,0,138,14,32,31
  2981                        	.sym	WINDOWEX,0,10,14,3880,31
  2982                        	.sym	PWINDOW,0,138,14,32,30
  2983                        	.sym	WINDOW,0,10,14,3904,30
  2984                        	.sym	PDRAGDATA,0,138,14,32,29
  2985                        	.sym	DRAGDATA,0,10,14,216,29
  2986                        	.sym	PNCCLICKABLE,0,138,14,32,28
  2987                        	.sym	NCCLICKABLE,0,10,14,136,28
  Mon Aug  9 2021 16:52                                                Page 57


  2988                        	.sym	HCLICKABLE,0,7,14,32
  2989                        	.sym	PCLICKABLE,0,138,14,32,27
  2990                        	.sym	CLICKABLE,0,10,14,152,27
  2991                        	.sym	PWNDCLASS,0,138,14,32,26
  2992                        	.sym	WNDCLASS,0,10,14,272,26
  2993                        	.sym	HBRUSH,0,129,14,32
  2994                        	.sym	HCURSOR,0,129,14,32
  2995                        	.sym	HICON,0,129,14,32
  2996                        	.sym	HINSTANCE,0,129,14,32
  2997                        	.sym	FXWndProc,0,654,14,32
  2998                        	.sym	PDRECT,0,138,14,32,25
  2999                        	.sym	DRECT,0,10,14,112,25
  3000                        	.sym	PRECTP,0,138,14,32,24
  3001                        	.sym	RECTP,0,10,14,96,24
  3002                        	.sym	PRECT,0,138,14,32,23
  3003                        	.sym	RECT,0,10,14,112,23
  3004                        	.sym	PPOINT,0,138,14,32,22
  3005                        	.sym	POINT,0,10,14,32,22
  3006                        	.sym	PFXPROPERTY,0,138,14,32,20
  3007                        	.sym	FXPROPERTY,0,10,14,384,20
  3008                        	.sym	PKEYSTATE,0,138,14,32,19
  3009                        	.sym	KEYSTATE,0,10,14,112,19
  3010                        	.sym	SCANCODE,0,14,14,8
  3011                        	.sym	KEYCODE,0,16,14,16
  3012                        	.sym	PFXPROCESSMESSAGE,0,138,14,32,18
  3013                        	.sym	FXPROCESSMESSAGE,0,10,14,112,18
  3014                        	.sym	PFXPROCESS,0,138,14,32,17
  3015                        	.sym	FXPROCESS,0,10,14,800,17
  3016                        	.sym	PDESKTOP_CONTROL,0,138,14,32,16
  3017                        	.sym	DESKTOP_CONTROL,0,10,14,392,16
  3018                        	.sym	PCONSOLE_CONTROL,0,138,14,32,15
  3019                        	.sym	CONSOLE_CONTROL,0,10,14,448,15
  3020                        	.sym	FXProcessProc,0,641,14,32
  3021                        	.sym	PFXCMDMESSAGE,0,138,14,32,14
  3022                        	.sym	FXCMDMESSAGE,0,10,14,312,14
  3023                        	.sym	PFXOSMESSAGE,0,138,14,32,13
  3024                        	.sym	FXOSMESSAGE,0,10,14,312,13
  3025                        	.sym	PINT_REGS,0,138,14,32,12
  3026                        	.sym	INT_REGS,0,10,14,104,12
  3027                        	.sym	TASK_STACK,0,10,14,32,11
  3028                        	.sym	TASK,0,10,14,48,10
  3029                        	.sym	PIRQDATA,0,138,14,32,9
  3030                        	.sym	IRQDATA,0,10,14,48,9
  3031                        	.sym	HMENU,0,129,14,32
  3032                        	.sym	HWND,0,129,14,32
  3033                        	.sym	MSGDATA,0,14,14,8
  3034                        	.sym	MSGDEST,0,18,14,32
  3035                        	.sym	MSGSRC,0,18,14,32
  3036                        	.sym	MSGTYPE,0,16,14,16
  3037                        	.sym	PROCESS_RESOURCE_LIST,0,138,14,32,3
  3038                        	.sym	PROCESS_TLS_LIST,0,138,14,32,3
  3039                        	.sym	SEMAPHORE_LIST,0,138,14,32,3
  3040                        	.sym	FILE_BLOCK_LIST,0,138,14,32,3
  3041                        	.sym	FILE_PATH_LIST,0,138,14,32,3
  3042                        	.sym	PROCEDURE_LIST,0,138,14,32,3
  3043                        	.sym	FILE_HANDLE,0,138,14,32,8
  3044                        	.sym	FILE_BLOCK,0,10,14,552,8
  3045                        	.sym	SEMAPHORE,0,10,14,16,7
  Mon Aug  9 2021 16:52                                                Page 58


  3046                        	.sym	PPROCESS_SIGNAL,0,138,14,32,6
  3047                        	.sym	PROCESS_SIGNAL,0,10,14,16,6
  3048                        	.sym	KRESULT,0,18,14,32
  3049                        	.sym	PKERNEL_ERROR,0,138,14,32,5
  3050                        	.sym	KERNEL_ERROR,0,10,14,32,5
  3051                        	.sym	PROCESS_STATUS,0,16,14,16
  3052                        	.sym	FILE_PATH_NAME,0,142,14,32
  3053                        	.sym	PROCESS_RESOURCE,0,129,14,32
  3054                        	.sym	PROCESS_TLS,0,129,14,32
  3055                        	.sym	PROCESS_CTX,0,129,14,32
  3056                        	.sym	USERID,0,16,14,16
  3057                        	.sym	PROCESS_ID,0,18,14,32
  3058                        	.sym	PROCESS_BANK,0,14,14,8
  3059                        	.sym	PFXQUEUE,0,138,14,32,4
  3060                        	.sym	FXQUEUE,0,10,14,80,4
  3061                        	.sym	PFXNODELIST,0,138,14,32,3
  3062                        	.sym	FXNODELIST,0,10,14,96,3
  3063                        	.sym	NodeListDeallocator,0,641,14,32
  3064                        	.sym	PFXNODE,0,138,14,32,2
  3065                        	.sym	FXNODE,0,10,14,384,2
  3066                        	.sym	PBYTEBITS,0,138,14,32,1
  3067                        	.sym	BYTEBITS,0,10,14,8,1
  3068                        	.sym	HRESULT,0,18,14,32
  3069                        	.sym	LPWCHAR,0,144,14,32
  3070                        	.sym	WCHAR,0,16,14,16
  3071                        	.sym	HSTRINGTABLE,0,129,14,32
  3072                        	.sym	HCOLOR,0,129,14,32
  3073                        	.sym	HFONT,0,129,14,32
  3074                        	.sym	HDC,0,129,14,32
  3075                        	.sym	HPOINTER,0,129,14,32
  3076                        	.sym	uint32_t,0,18,14,32
  3077                        	.sym	uint8_t,0,14,14,8
  3078                        	.sym	LPBOOL,0,142,14,32
  3079                        	.sym	BOOL,0,14,14,8
  3080                        	.sym	DWORD,0,18,14,32
  3081                        	.sym	ULONG,0,18,14,32
  3082                        	.sym	LPLONG,0,135,14,32
  3083                        	.sym	LONG,0,7,14,32
  3084                        	.sym	PUINT,0,144,14,32
  3085                        	.sym	USHORT,0,16,14,16
  3086                        	.sym	UINT,0,16,14,16
  3087                        	.sym	INT,0,5,14,16
  3088                        	.sym	WORD,0,5,14,16
  3089                        	.sym	PBYTE,0,142,14,32
  3090                        	.sym	BYTE,0,14,14,8
  3091                        	.sym	IOPORT,0,142,14,32
  3092                        	.sym	PUCHAR,0,142,14,32
  3093                        	.sym	UCHAR,0,14,14,8
  3094                        	.sym	LPWCSTR,0,142,14,32
  3095                        	.sym	LPCSTR,0,142,14,32
  3096                        	.sym	LPSTR,0,142,14,32
  3097                        	.sym	LPCHAR,0,142,14,32
  3098                        	.sym	CHAR,0,14,14,8
  3099                        	.sym	PUINT_32,0,146,14,32
  3100                        	.sym	UINT_32,0,18,14,32
  3101                        	.sym	PUINT_16,0,144,14,32
  3102                        	.sym	UINT_16,0,16,14,16
  3103                        	.sym	PUINT_8,0,142,14,32
  Mon Aug  9 2021 16:52                                                Page 59


  3104                        	.sym	UINT_8,0,14,14,8
  3105                        	.sym	LPVOID,0,129,14,32
  3106                        	.sym	VOID,0,1,14,32
  3107                        	end


      Lines assembled: 3107
      Errors: 0
