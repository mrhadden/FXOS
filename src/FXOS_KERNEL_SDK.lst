  Thu Jul 29 2021 22:56                                                Page 1


                     ***************************************
                     **      WDC 65C816 Macro Assembler   **
                     **                                   **
                     **     Version 3.49.1- Feb  6 2006    **
                     ***************************************

     1                        ;:ts=8
     2             00000001   R0	equ	1
     3             00000005   R1	equ	5
     4             00000009   R2	equ	9
     5             0000000D   R3	equ	13
     6                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\FXOS_KERNEL_SDK.c",0
     7                        ;/*
     8                        ; * FXOS_KERNEL_SDK.c
     9                        ; * Jul 29, 2021 10:56:51 PM
    10                        ; */
    11                        ;
    12                        ;#include "fxos.h"
    13                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxos.h",0
    14                        	.file	"G:\devtools\WDCTools\wdc\Tools\include\
                    stdlib.h",0
    15                        	.file	"G:\devtools\WDCTools\wdc\Tools\include\
                    stddef.h",0
    16                        	.line	88
    17                        	.file	"G:\devtools\WDCTools\wdc\Tools\include\
                    stdlib.h",43
    18                        	.stag	fake1_,32,1
    19                        	.member	quot,0,5,8,16
    20                        	.member	rem,16,5,8,16
    21                        	.eos
    22                        	.stag	fake2_,64,2
    23                        	.member	quot,0,7,8,32
    24                        	.member	rem,32,7,8,32
    25                        	.eos
    26                        	.stag	int_sqrt,32,3
    27                        	.member	sqrt,0,16,8,16
    28                        	.member	frac,16,16,8,16
    29                        	.eos
    30                        	.line	205
    31                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxos.h",4
    32                        	.file	"G:\devtools\WDCTools\wdc\Tools\include\
                    string.h",0
    33                        	.line	134
    34                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxos.h",5
    35                        	.file	"G:\devtools\WDCTools\wdc\Tools\include\
                    ctype.h",0
    36                        	.line	103
    37                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxos.h",6
    38                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxtypes.h",0
    39                        	.stag	_fx_bytebits,8,4
    40                        	.member	b7,0,14,17,1
    41                        	.member	b6,1,14,17,1
  Thu Jul 29 2021 22:56                                                Page 2


    42                        	.member	b5,2,14,17,1
    43                        	.member	b4,3,14,17,1
    44                        	.member	b3,4,14,17,1
    45                        	.member	b2,5,14,17,1
    46                        	.member	b1,6,14,17,1
    47                        	.member	b0,7,14,17,1
    48                        	.eos
    49                        	.stag	_fx_node,384,5
    50                        	.member	type,0,14,8,8
    51                        	.member	Reserved0,8,14,8,8
    52                        	.member	data,16,129,8,32
    53                        	.member	last,48,138,8,32,5
    54                        	.member	next,80,138,8,32,5
    55                        	.member	name,112,110,8,0,32
    56                        	.member	Reserved1,368,16,8,16
    57                        	.eos
    58                        	.stag	_fx_nodelist,96,6
    59                        	.member	listhead,0,138,8,32,5
    60                        	.member	listData,32,129,8,32
    61                        	.member	deallocator,64,641,8,32
    62                        	.eos
    63                        	.stag	_fx_queue,80,7
    64                        	.member	count,0,5,8,16
    65                        	.member	front,16,138,8,32,5
    66                        	.member	rear,48,138,8,32,5
    67                        	.eos
    68                        	.stag	fake8_,32,8
    69                        	.member	subsystem,0,14,8,8
    70                        	.member	level,8,14,8,8
    71                        	.member	error,16,16,8,16
    72                        	.eos
    73                        	.stag	_fx_process_signal,16,9
    74                        	.member	cbSize,0,16,8,16
    75                        	.eos
    76                        	.stag	_fx_semaphore,16,10
    77                        	.member	reserved,0,5,8,16
    78                        	.eos
    79                        	.stag	_fx_fileBlock,552,11
    80                        	.member	openCount,0,16,8,16
    81                        	.member	lockCount,16,16,8,16
    82                        	.member	dirty,32,14,8,8
    83                        	.member	fileBuffer,40,110,8,0,64
    84                        	.eos
    85                        	.stag	_fx_irq_data,48,12
    86                        	.member	line,0,5,8,16
    87                        	.member	keycode,16,142,8,32
    88                        	.eos
    89                        	.stag	_task,48,13
    90                        	.member	SPL,0,14,8,8
    91                        	.member	SPH,8,14,8,8
    92                        	.member	pstack,16,142,8,32
    93                        	.eos
    94                        	.stag	_task_stack,32,14
    95                        	.member	SS,0,142,8,32
    96                        	.eos
    97                        	.stag	int_regs,104,15
    98                        	.member	PB,0,14,8,8
    99                        	.member	PH,8,14,8,8
  Thu Jul 29 2021 22:56                                                Page 3


   100                        	.member	PL,16,14,8,8
   101                        	.member	PP,24,14,8,8
   102                        	.member	DB,32,14,8,8
   103                        	.member	DH,40,14,8,8
   104                        	.member	DL,48,14,8,8
   105                        	.member	AH,56,14,8,8
   106                        	.member	AL,64,14,8,8
   107                        	.member	XH,72,14,8,8
   108                        	.member	XL,80,14,8,8
   109                        	.member	YH,88,14,8,8
   110                        	.member	YL,96,14,8,8
   111                        	.eos
   112                        	.stag	_fx_eventMessage,312,16
   113                        	.member	src,0,18,8,32
   114                        	.member	dest,32,18,8,32
   115                        	.member	type,64,16,8,16
   116                        	.member	hwnd,80,129,8,32
   117                        	.member	pheap,112,129,8,32
   118                        	.member	msgTime,144,18,8,32
   119                        	.member	data,176,110,8,0,16
   120                        	.member	attr,304,14,8,8
   121                        	.eos
   122                        	.stag	_fx_cmdMessage,312,17
   123                        	.member	src,0,18,8,32
   124                        	.member	dest,32,18,8,32
   125                        	.member	type,64,16,8,16
   126                        	.member	hwnd,80,129,8,32
   127                        	.member	pheap,112,129,8,32
   128                        	.member	msgTime,144,18,8,32
   129                        	.member	cmdCId,176,16,8,16
   130                        	.member	cmdMId,192,16,8,16
   131                        	.member	parameter1,208,18,8,32
   132                        	.member	parameter2,240,18,8,32
   133                        	.member	parameter3,272,18,8,32
   134                        	.member	attr,304,14,8,8
   135                        	.eos
   136                        	.stag	_fx_console_ctl,448,18
   137                        	.member	maxCols,0,5,8,16
   138                        	.member	maxRows,16,5,8,16
   139                        	.member	curX,32,5,8,16
   140                        	.member	curY,48,5,8,16
   141                        	.member	fgColor,64,5,8,16
   142                        	.member	bgColor,80,5,8,16
   143                        	.member	mode,96,14,8,8
   144                        	.member	kbBuffer,104,101,8,0,16
   145                        	.member	screenBuffer,360,142,8,32
   146                        	.member	desktopMode,392,14,8,8
   147                        	.member	lastMouseButton,400,5,8,16
   148                        	.member	lastMouseX,416,5,8,16
   149                        	.member	lastMouseY,432,5,8,16
   150                        	.eos
   151                        	.stag	_fx_desktop_ctl,392,19
   152                        	.member	desktopMode,0,14,8,8
   153                        	.member	cursorCtl,8,5,8,16
   154                        	.member	cursorState,24,5,8,16
   155                        	.member	backgroundColor,40,5,8,16
   156                        	.member	foregroundColor,56,5,8,16
   157                        	.member	menuMode,72,5,8,16
  Thu Jul 29 2021 22:56                                                Page 4


   158                        	.member	lastMouseButton,88,5,8,16
   159                        	.member	lastMouseX,104,5,8,16
   160                        	.member	lastMouseY,120,5,8,16
   161                        	.member	currentDiskName,136,142,8,32
   162                        	.member	diskNodes,168,129,8,32
   163                        	.member	titleNodes,200,129,8,32
   164                        	.member	menuNodes,232,129,8,32
   165                        	.member	iconNodes,264,129,8,32
   166                        	.member	windowNodes,296,129,8,32
   167                        	.member	fontNodes,328,129,8,32
   168                        	.member	wndProc,360,138,8,32,6
   169                        	.eos
   170                        	.stag	_fx_process,800,20
   171                        	.member	cbSize,0,5,8,16
   172                        	.member	procId,16,18,8,32
   173                        	.member	parentId,48,18,8,32
   174                        	.member	ctx,80,129,8,32
   175                        	.member	userId,112,16,8,16
   176                        	.member	status,128,16,8,16
   177                        	.member	foregroundActive,144,14,8,8
   178                        	.member	tls,152,1121,8,32,8
   179                        	.member	commandLine,408,142,8,32
   180                        	.member	semaphores,440,138,8,32,6
   181                        	.member	fileHandles,472,138,8,32,6
   182                        	.member	pathList,504,138,8,32,6
   183                        	.member	resources,536,138,8,32,6
   184                        	.member	timerAware,568,14,8,8
   185                        	.member	timerTicks,576,112,8,0,2
   186                        	.member	timerTickCount,608,112,8,0,2
   187                        	.member	kernelError,640,10,8,32,8
   188                        	.member	consoleCtl,672,138,8,32,18
   189                        	.member	desktopCtl,704,138,8,32,19
   190                        	.member	execProc,736,641,8,32
   191                        	.member	startupArgs,768,129,8,32
   192                        	.eos
   193                        	.stag	_fxProcessMessage,112,21
   194                        	.member	src,0,18,8,32
   195                        	.member	dest,32,18,8,32
   196                        	.member	type,64,16,8,16
   197                        	.member	processInfo,80,138,8,32,20
   198                        	.eos
   199                        	.stag	_k_key_state,112,22
   200                        	.member	scanCode,0,14,8,8
   201                        	.member	isShifted,8,14,8,8
   202                        	.member	isAlt,16,14,8,8
   203                        	.member	isExtended,24,14,8,8
   204                        	.member	isCapsLock,32,14,8,8
   205                        	.member	isNumLock,40,14,8,8
   206                        	.member	isScrollLock,48,14,8,8
   207                        	.member	keyChar,56,16,8,16
   208                        	.member	scanTime,72,18,8,32
   209                        	.member	ledStatus,104,14,8,8
   210                        	.eos
   211                        	.stag	_fx_property,384,23
   212                        	.member	name,0,110,8,0,16
   213                        	.member	value,128,110,8,0,32
   214                        	.eos
   215                        	.utag	_24bitPointer,32,24
  Thu Jul 29 2021 22:56                                                Page 5


   216                        	.member	address,0,142,11,32
   217                        	.member	bytes,0,110,11,0,4
   218                        	.eos
   219                        	.stag	_PointStruct,32,25
   220                        	.member	x,0,5,8,16
   221                        	.member	y,16,5,8,16
   222                        	.eos
   223                        	.stag	_RectStruct,112,26
   224                        	.member	x,0,5,8,16
   225                        	.member	y,16,5,8,16
   226                        	.member	z,32,18,8,32
   227                        	.member	width,64,5,8,16
   228                        	.member	height,80,5,8,16
   229                        	.member	attr,96,5,8,16
   230                        	.eos
   231                        	.stag	fake27_,96,27
   232                        	.member	name,0,142,8,32
   233                        	.member	topLeft,32,10,8,32,25
   234                        	.member	bottomRight,64,10,8,32,25
   235                        	.eos
   236                        	.stag	fake28_,112,28
   237                        	.member	x,0,5,8,16
   238                        	.member	y,16,5,8,16
   239                        	.member	z,32,5,8,16
   240                        	.member	width,48,5,8,16
   241                        	.member	height,64,5,8,16
   242                        	.member	data,80,18,8,32
   243                        	.eos
   244                        	.stag	_k_WindowClass,272,29
   245                        	.member	cbSize,0,16,8,16
   246                        	.member	style,16,16,8,16
   247                        	.member	styleEx,32,16,8,16
   248                        	.member	pWndProc,48,654,8,32
   249                        	.member	hInstance,80,129,8,32
   250                        	.member	hIcon,112,129,8,32
   251                        	.member	hCursor,144,129,8,32
   252                        	.member	hbrBackground,176,129,8,32
   253                        	.member	lpszMenuName,208,142,8,32
   254                        	.member	lpszClassName,240,142,8,32
   255                        	.eos
   256                        	.stag	_ClickableRect,152,30
   257                        	.member	area,0,10,8,112,26
   258                        	.member	z,112,18,8,32
   259                        	.member	enabled,144,14,8,8
   260                        	.eos
   261                        	.stag	_NCClickableRect,136,31
   262                        	.member	area,0,10,8,112,26
   263                        	.member	msgType,112,16,8,16
   264                        	.member	enabled,128,14,8,8
   265                        	.eos
   266                        	.stag	_DragData,216,32
   267                        	.member	area,0,10,8,112,26
   268                        	.member	xoffset,112,5,8,16
   269                        	.member	yoffset,128,5,8,16
   270                        	.member	msgType,144,16,8,16
   271                        	.member	ncAction,160,16,8,16
   272                        	.member	isDrag,176,14,8,8
   273                        	.member	isResize,184,14,8,8
  Thu Jul 29 2021 22:56                                                Page 6


   274                        	.member	canDrag,192,14,8,8
   275                        	.member	canDrop,200,14,8,8
   276                        	.member	didDrag,208,14,8,8
   277                        	.eos
   278                        	.stag	_k_WindowStruct,3904,33
   279                        	.member	cbSize,0,16,8,16
   280                        	.member	style,16,18,8,32
   281                        	.member	styleEx,48,18,8,32
   282                        	.member	win_id,80,5,8,16
   283                        	.member	win_x,96,5,8,16
   284                        	.member	win_y,112,5,8,16
   285                        	.member	win_width,128,5,8,16
   286                        	.member	win_height,144,5,8,16
   287                        	.member	win_xoffset,160,5,8,16
   288                        	.member	win_yoffset,176,5,8,16
   289                        	.member	win_cxoffset,192,5,8,16
   290                        	.member	win_cyoffset,208,5,8,16
   291                        	.member	wndRect,224,10,8,112,26
   292                        	.member	clientRect,336,10,8,112,26
   293                        	.member	nonclientGadgets,448,106,8,0,31,16
   294                        	.member	clickable,2624,129,8,32
   295                        	.member	win_title,2656,110,8,0,32
   296                        	.member	Reserved0,2912,16,8,16
   297                        	.member	win_class,2928,110,8,0,16
   298                        	.member	win_class_name,3056,110,8,0,32
   299                        	.member	nBitmapLayer,3312,16,8,16
   300                        	.member	bgRegion,3328,129,8,32
   301                        	.member	procid,3360,18,8,32
   302                        	.member	pWndClass,3392,138,8,32,29
   303                        	.member	pParentWindow,3424,129,8,32
   304                        	.member	hMenu,3456,129,8,32
   305                        	.member	hPointer,3488,129,8,32
   306                        	.member	hBackground,3520,129,8,32
   307                        	.member	pChildWindows,3552,138,8,32,6
   308                        	.member	pChildHitList,3584,138,8,32,6
   309                        	.member	isVisible,3616,14,8,8
   310                        	.member	windowData,3624,129,8,32
   311                        	.member	clientData,3656,1121,8,32,6
   312                        	.member	isClosed,3848,14,8,8
   313                        	.member	isClosing,3856,14,8,8
   314                        	.member	isDesktop,3864,14,8,8
   315                        	.member	clickableNode,3872,138,8,32,5
   316                        	.eos
   317                        	.stag	_k_WindowStructEx,3880,34
   318                        	.member	cbSize,0,16,8,16
   319                        	.member	style,16,18,8,32
   320                        	.member	styleEx,48,18,8,32
   321                        	.member	win_id,80,5,8,16
   322                        	.member	win_x,96,5,8,16
   323                        	.member	win_y,112,5,8,16
   324                        	.member	win_width,128,5,8,16
   325                        	.member	win_height,144,5,8,16
   326                        	.member	win_xoffset,160,5,8,16
   327                        	.member	win_yoffset,176,5,8,16
   328                        	.member	win_cxoffset,192,5,8,16
   329                        	.member	win_cyoffset,208,5,8,16
   330                        	.member	wndRect,224,10,8,112,26
   331                        	.member	clientRect,336,10,8,112,26
  Thu Jul 29 2021 22:56                                                Page 7


   332                        	.member	nonclientGadgets,448,106,8,0,31,16
   333                        	.member	clickable,2624,129,8,32
   334                        	.member	win_title,2656,110,8,0,32
   335                        	.member	Reserved0,2912,16,8,16
   336                        	.member	win_class,2928,110,8,0,16
   337                        	.member	nBitmapLayer,3056,16,8,16
   338                        	.member	procid,3072,18,8,32
   339                        	.member	pWndClass,3104,138,8,32,29
   340                        	.member	pParentWindow,3136,129,8,32
   341                        	.member	hMenu,3168,129,8,32
   342                        	.member	hPointer,3200,129,8,32
   343                        	.member	hBackground,3232,129,8,32
   344                        	.member	pChildWindows,3264,138,8,32,6
   345                        	.member	pChildHitList,3296,138,8,32,6
   346                        	.member	isVisible,3328,14,8,8
   347                        	.member	windowData,3336,129,8,32
   348                        	.member	clientData,3368,1121,8,32,4
   349                        	.member	isClosed,3496,14,8,8
   350                        	.member	hWnd,3504,129,8,32
   351                        	.member	localRect,3536,10,8,112,26
   352                        	.member	globalRect,3648,10,8,112,26
   353                        	.member	clientOffsetRect,3760,10,8,112,26
   354                        	.member	isDesktop,3872,14,8,8
   355                        	.eos
   356                        	.stag	_FontMetric,32,35
   357                        	.member	width,0,5,8,16
   358                        	.member	height,16,5,8,16
   359                        	.eos
   360                        	.stag	_MenuStruct,280,36
   361                        	.member	cx,0,5,8,16
   362                        	.member	cy,16,5,8,16
   363                        	.member	width,32,5,8,16
   364                        	.member	height,48,5,8,16
   365                        	.member	fcolor,64,14,8,8
   366                        	.member	bcolor,72,14,8,8
   367                        	.member	chromeLeft,80,14,8,8
   368                        	.member	chromeRight1,88,14,8,8
   369                        	.member	chromeRight2,96,14,8,8
   370                        	.member	hFont,104,129,8,32
   371                        	.member	itemId,136,16,8,16
   372                        	.member	pCaption,152,142,8,32
   373                        	.member	subMenus,184,138,8,32,6
   374                        	.member	pBackground,216,129,8,32
   375                        	.member	hWndOwner,248,129,8,32
   376                        	.eos
   377                        	.stag	fake37_,160,37
   378                        	.member	menuId,0,16,8,16
   379                        	.member	caption,16,142,8,32
   380                        	.member	rect,48,10,8,112,26
   381                        	.eos
   382                        	.stag	fake38_,5152,38
   383                        	.member	pParent,0,138,8,32,33
   384                        	.member	rect,32,10,8,112,26
   385                        	.member	captions,144,1134,8,32,24
   386                        	.member	chrome,912,110,8,0,24
   387                        	.member	ids,1104,112,8,0,24
   388                        	.member	clickable,1488,106,8,0,30,24
   389                        	.member	selected,5136,16,8,16
  Thu Jul 29 2021 22:56                                                Page 8


   390                        	.eos
   391                        	.stag	_fx_button_t,96,39
   392                        	.member	pCaption,0,142,8,32
   393                        	.member	cCaption,32,16,8,16
   394                        	.member	data,48,129,8,32
   395                        	.member	captionPixelWidth,80,16,8,16
   396                        	.eos
   397                        	.stag	_fx_scrollbar_t,240,40
   398                        	.member	min,0,16,8,16
   399                        	.member	max,16,16,8,16
   400                        	.member	increment,32,16,8,16
   401                        	.member	stopsize,48,16,8,16
   402                        	.member	location,64,5,8,16
   403                        	.member	state,80,5,8,16
   404                        	.member	rectThumb,96,10,8,112,26
   405                        	.member	data,208,129,8,32
   406                        	.eos
   407                        	.stag	_fx_listbox_t,240,41
   408                        	.member	pos,0,5,8,16
   409                        	.member	selected,16,16,8,16
   410                        	.member	offsetX,32,5,8,16
   411                        	.member	offsetY,48,5,8,16
   412                        	.member	inc,64,5,8,16
   413                        	.member	direction,80,5,8,16
   414                        	.member	top,96,5,8,16
   415                        	.member	bottom,112,5,8,16
   416                        	.member	indexTop,128,5,8,16
   417                        	.member	indexBottom,144,5,8,16
   418                        	.member	maxItems,160,16,8,16
   419                        	.member	fontSet,176,142,8,32
   420                        	.member	data,208,129,8,32
   421                        	.eos
   422                        	.stag	_fx_textbox_t,144,42
   423                        	.member	pos,0,5,8,16
   424                        	.member	selected,16,16,8,16
   425                        	.member	offsetX,32,5,8,16
   426                        	.member	offsetY,48,5,8,16
   427                        	.member	isShifted,64,14,8,8
   428                        	.member	cursorState,72,14,8,8
   429                        	.member	fontSet,80,142,8,32
   430                        	.member	data,112,129,8,32
   431                        	.eos
   432                        	.stag	_fx_msgbox_t,144,43
   433                        	.member	pos,0,5,8,16
   434                        	.member	selected,16,16,8,16
   435                        	.member	offsetX,32,5,8,16
   436                        	.member	offsetY,48,5,8,16
   437                        	.member	isShifted,64,14,8,8
   438                        	.member	cursorState,72,14,8,8
   439                        	.member	fontSet,80,142,8,32
   440                        	.member	data,112,129,8,32
   441                        	.eos
   442                        	.stag	_fx_menuAnchor_t,272,44
   443                        	.member	pCaption,0,142,8,32
   444                        	.member	renderLayoutX,32,16,8,16
   445                        	.member	renderLayoutY,48,16,8,16
   446                        	.member	captionPixelWidth,64,16,8,16
   447                        	.member	data,80,129,8,32
  Thu Jul 29 2021 22:56                                                Page 9


   448                        	.member	droppedWindow,112,138,8,32,33
   449                        	.member	bytes,144,110,8,0,16
   450                        	.eos
   451                        	.stag	_SubMenuStruct,64,45
   452                        	.member	caption,0,142,8,32
   453                        	.member	action,32,641,8,32
   454                        	.eos
   455                        	.stag	_SubMenuListStruct,40,46
   456                        	.member	cMenus,0,14,8,8
   457                        	.member	psubmenus,8,9354,8,32,45
   458                        	.eos
   459                        	.stag	_fx_ComBuffer,2080,47
   460                        	.member	cbSize,0,16,8,16
   461                        	.member	cbBuffer,16,16,8,16
   462                        	.member	buffer,32,110,8,0,256
   463                        	.eos
   464                        	.stag	_fx_resource_header,72,48
   465                        	.member	magic,0,110,8,0,4
   466                        	.member	major,32,14,8,8
   467                        	.member	minor,40,14,8,8
   468                        	.member	type,48,14,8,8
   469                        	.member	reserved,56,14,8,8
   470                        	.member	resheaderSize,64,14,8,8
   471                        	.eos
   472                        	.stag	_fx_resource_header_font,144,49
   473                        	.member	title,0,110,8,0,16
   474                        	.member	height,128,14,8,8
   475                        	.member	width,136,14,8,8
   476                        	.eos
   477                        	.stag	_fx_resource_string,32,50
   478                        	.member	locale,0,110,8,0,2
   479                        	.member	entries,16,16,8,16
   480                        	.eos
   481                        	.stag	_fx_resource_string_entry,40,51
   482                        	.member	index,0,16,8,16
   483                        	.member	length,16,16,8,16
   484                        	.member	data,32,14,8,8
   485                        	.eos
   486                        	.line	1064
   487                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxos.h",8
   488                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxstringtable.h",0
   489                        	.line	90
   490                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxos.h",9
   491                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxc256u.h",0
   492                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxtypes.h",0
   493                        	.line	1064
   494                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxc256u.h",5
   495                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fmx_vicky.h",0
   496                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxtypes.h",0
   497                        	.line	1064
  Thu Jul 29 2021 22:56                                                Page 10


   498                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fmx_vicky.h",11
   499                        	.line	72
   500                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxc256u.h",6
   501                        	.line	1960
   502                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxos.h",16
   503                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxkernel.h",0
   504                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxos.h",0
   505                        	.line	30
   506                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxkernel.h",5
   507                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxnode.h",0
   508                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxtypes.h",0
   509                        	.line	1064
   510                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxnode.h",11
   511                        	.line	118
   512                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxkernel.h",6
   513                        	.stag	_fx_api_call_table,8192,52
   514                        	.member	call_table,0,1121,8,32,256
   515                        	.eos
   516                        	.stag	_fx_zero_page_irq_data,32,53
   517                        	.member	data,0,110,8,0,4
   518                        	.eos
   519                        	.stag	_fx_zero_page,720,54
   520                        	.member	fxos_mouse_byte_0,0,14,8,8
   521                        	.member	fxos_mouse_byte_1,8,14,8,8
   522                        	.member	fxos_mouse_byte_2,16,14,8,8
   523                        	.member	fxos_mouse_byte_t,24,14,8,8
   524                        	.member	fxos_mouse_byte_x_l,32,14,8,8
   525                        	.member	fxos_mouse_byte_x_h,40,14,8,8
   526                        	.member	fxos_mouse_byte_y_l,48,14,8,8
   527                        	.member	fxos_mouse_byte_y_h,56,14,8,8
   528                        	.member	fxos_key_byte_0,64,14,8,8
   529                        	.member	fxos_key_byte_1,72,14,8,8
   530                        	.member	fxos_key_byte_2,80,14,8,8
   531                        	.member	fxos_mouse_ctl,88,14,8,8
   532                        	.member	fxos_mouse_index,96,14,8,8
   533                        	.member	fxos_mouse_status,104,14,8,8
   534                        	.member	Endianness,112,16,8,16
   535                        	.member	VersionMajor,128,16,8,16
   536                        	.member	VersionMinor,144,16,8,16
   537                        	.member	VersionRelease,160,16,8,16
   538                        	.member	topMemory,176,18,8,32
   539                        	.member	bottomMemory,208,18,8,32
   540                        	.member	availableMemory,240,18,8,32
   541                        	.member	availableMemoryK,272,18,8,32
   542                        	.member	availableHeapMemory,304,18,8,32
   543                        	.member	availableHeapMemoryK,336,18,8,32
   544                        	.member	fxos_console_row,368,16,8,16
   545                        	.member	fxos_console_col,384,16,8,16
  Thu Jul 29 2021 22:56                                                Page 11


   546                        	.member	executive,400,129,8,32
   547                        	.member	eventmanager,432,129,8,32
   548                        	.member	devicemanager,464,129,8,32
   549                        	.member	windowmanager,496,129,8,32
   550                        	.member	fxos_kernel_api,528,138,8,32,52
   551                        	.member	fxos_dos_api,560,138,8,32,52
   552                        	.member	fxos_gfx_api,592,138,8,32,52
   553                        	.member	fxos_gui_api,624,138,8,32,52
   554                        	.member	fxos_con_api,656,138,8,32,52
   555                        	.member	fxos_reserved_2_api,688,138,8,32,52
   556                        	.eos
   557                        	.stag	_fx_environment,96,55
   558                        	.member	variables,0,142,8,32
   559                        	.member	reserved1,32,5,8,16
   560                        	.member	reserved2,48,5,8,16
   561                        	.member	reserved3,64,5,8,16
   562                        	.member	reserved4,80,5,8,16
   563                        	.eos
   564                        	.stag	_debug_byte_bits,8,56
   565                        	.member	bit7,0,14,17,1
   566                        	.member	bit6,1,14,17,1
   567                        	.member	bit5,2,14,17,1
   568                        	.member	bit4,3,14,17,1
   569                        	.member	bit3,4,14,17,1
   570                        	.member	bit2,5,14,17,1
   571                        	.member	bit1,6,14,17,1
   572                        	.member	bit0,7,14,17,1
   573                        	.eos
   574                        	.stag	_k_segmentheader,160,57
   575                        	.member	version_major,0,14,8,8
   576                        	.member	version_minor,8,14,8,8
   577                        	.member	length,16,5,8,16
   578                        	.member	segment_start_addr,32,7,8,32
   579                        	.member	segment_end_addr,64,7,8,32
   580                        	.member	segment_size,96,7,8,32
   581                        	.member	main_entry_addr,128,7,8,32
   582                        	.eos
   583                        	.stag	_fx_device_driver,776,58
   584                        	.member	name,0,110,8,0,32
   585                        	.member	version,256,110,8,0,16
   586                        	.member	hmajor,384,110,8,0,8
   587                        	.member	hminor,448,110,8,0,8
   588                        	.member	type,512,14,8,8
   589                        	.member	designation,520,110,8,0,6
   590                        	.member	irq_ctl,568,16,8,16
   591                        	.member	f_driver_irq,584,129,8,32
   592                        	.member	driver_context,616,129,8,32
   593                        	.member	f_driver_load,648,129,8,32
   594                        	.member	f_driver_read,680,129,8,32
   595                        	.member	f_driver_write,712,129,8,32
   596                        	.member	f_driver_unload,744,129,8,32
   597                        	.eos
   598                        	.stag	_fx_block_device_driver,808,59
   599                        	.member	name,0,110,8,0,32
   600                        	.member	version,256,110,8,0,16
   601                        	.member	hmajor,384,110,8,0,8
   602                        	.member	hminor,448,110,8,0,8
   603                        	.member	type,512,14,8,8
  Thu Jul 29 2021 22:56                                                Page 12


   604                        	.member	designation,520,110,8,0,6
   605                        	.member	irq_ctl,568,16,8,16
   606                        	.member	f_driver_irq,584,129,8,32
   607                        	.member	driver_context,616,129,8,32
   608                        	.member	f_driver_load,648,129,8,32
   609                        	.member	f_driver_read,680,129,8,32
   610                        	.member	f_driver_write,712,129,8,32
   611                        	.member	f_driver_unload,744,129,8,32
   612                        	.member	f_driver_command,776,129,8,32
   613                        	.eos
   614                        	.stag	_k_irq_chain,128,60
   615                        	.member	handlers,0,5217,8,32,4
   616                        	.eos
   617                        	.line	473
   618                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxos.h",22
   619                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxconsole.h",0
   620                        	.file	"G:\devtools\WDCTools\wdc\Tools\include\
                    string.h",0
   621                        	.line	134
   622                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxconsole.h",5
   623                        	.file	"G:\devtools\WDCTools\wdc\Tools\include\
                    stdlib.h",0
   624                        	.line	205
   625                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxconsole.h",6
   626                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxtypes.h",0
   627                        	.line	1064
   628                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxconsole.h",7
   629                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxc256u.h",0
   630                        	.line	1960
   631                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxconsole.h",12
   632                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxstring.h",0
   633                        	.file	"G:\devtools\WDCTools\wdc\Tools\include\
                    stdlib.h",0
   634                        	.line	205
   635                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxstring.h",5
   636                        	.file	"G:\devtools\WDCTools\wdc\Tools\include\
                    string.h",0
   637                        	.line	134
   638                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxstring.h",6
   639                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxtypes.h",0
   640                        	.line	1064
   641                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxstring.h",7
   642                        	.stag	_fx_string,64,61
   643                        	.member	size,0,16,8,16
   644                        	.member	pos,16,5,8,16
  Thu Jul 29 2021 22:56                                                Page 13


   645                        	.member	buffer,32,142,8,32
   646                        	.eos
   647                        	.line	139
   648                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxconsole.h",17
   649                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxeventmanager.h",0
   650                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxos.h",0
   651                        	.line	30
   652                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxeventmanager.h",5
   653                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxexec.h",0
   654                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxtypes.h",0
   655                        	.line	1064
   656                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxexec.h",5
   657                        	.stag	_fxos_executive_vtable,128,62
   658                        	.member	Init,0,8833,8,32
   659                        	.member	Configure,32,656,8,32
   660                        	.member	Query,64,656,8,32
   661                        	.member	Uninit,96,641,8,32
   662                        	.eos
   663                        	.line	86
   664                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxeventmanager.h",6
   665                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxnode.h",0
   666                        	.line	118
   667                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxeventmanager.h",7
   668                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxconsole.h",0
   669                        	.line	208
   670                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxeventmanager.h",8
   671                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxwindowmanager.h",0
   672                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxos.h",0
   673                        	.line	30
   674                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxwindowmanager.h",5
   675                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxmemorymanager.h",0
   676                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxos.h",0
   677                        	.line	30
   678                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxmemorymanager.h",5
   679                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\umm_malloc_cfg.h",0
   680                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxos_build_parameters.h",0
   681                        	.line	35
   682                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
  Thu Jul 29 2021 22:56                                                Page 14


                    space\FXOS-Beta\src\umm_malloc_cfg.h",8
   683                        	.stag	UMM_HEAP_INFO_t,256,63
   684                        	.member	totalEntries,0,18,8,32
   685                        	.member	usedEntries,32,18,8,32
   686                        	.member	freeEntries,64,18,8,32
   687                        	.member	totalBlocks,96,18,8,32
   688                        	.member	usedBlocks,128,18,8,32
   689                        	.member	freeBlocks,160,18,8,32
   690                        	.member	maxFreeContiguousBlocks,192,18,8,32
   691                        	.member	blockSize,224,18,8,32
   692                        	.eos
   693                        	.line	199
   694                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxmemorymanager.h",6
   695                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\umm_malloc.h",0
   696                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxtypes.h",0
   697                        	.line	1064
   698                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\umm_malloc.h",11
   699                        	.line	24
   700                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxmemorymanager.h",7
   701                        	.stag	_fx_memory_map,2072,64
   702                        	.member	availableMemory,0,18,8,32
   703                        	.member	valid_segments,32,110,8,0,255
   704                        	.eos
   705                        	.stag	_fx_ipc_port,144,65
   706                        	.member	id,0,18,8,32
   707                        	.member	type,32,14,8,8
   708                        	.member	name,40,138,8,32,61
   709                        	.member	time,72,18,8,32
   710                        	.member	queue,104,138,8,32,7
   711                        	.member	reserved_1,136,14,8,8
   712                        	.eos
   713                        	.stag	_k_mem_alloc_header,80,66
   714                        	.member	user,0,14,8,8
   715                        	.member	attr,8,14,8,8
   716                        	.member	size,16,18,8,32
   717                        	.member	virtual,48,129,8,32
   718                        	.eos
   719                        	.line	129
   720                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxwindowmanager.h",6
   721                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxeventmanager.h",0
   722                        	.line	565
   723                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxwindowmanager.h",7
   724                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxgfx.h",0
   725                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxfont.h",0
   726                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxtypes.h",0
   727                        	.line	1064
   728                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
  Thu Jul 29 2021 22:56                                                Page 15


                    space\FXOS-Beta\src\fxfont.h",6
   729                        	.line	74
   730                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxgfx.h",5
   731                        	.stag	_click_detected,64,67
   732                        	.member	window,0,138,8,32,33
   733                        	.member	handler,32,641,8,32
   734                        	.eos
   735                        	.stag	_current_palette_map,400,68
   736                        	.member	CUR_DESKTOP,0,5,8,16
   737                        	.member	CUR_BACKGROUND,16,5,8,16
   738                        	.member	CUR_FONT,32,5,8,16
   739                        	.member	CUR_SELECTED_FONT,48,5,8,16
   740                        	.member	CUR_HIGHLIGHT_COLOR,64,5,8,16
   741                        	.member	CUR_WINDOWFRAME,80,5,8,16
   742                        	.member	CUR_WINDOWBORDER,96,5,8,16
   743                        	.member	CUR_WINDOWSHADOW,112,5,8,16
   744                        	.member	CUR_MENU,128,5,8,16
   745                        	.member	CUR_GADGET,144,5,8,16
   746                        	.member	CUR_COLOR,160,101,8,0,15
   747                        	.eos
   748                        	.line	359
   749                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxwindowmanager.h",8
   750                        	.stag	_fxos_winman_vtable,160,69
   751                        	.member	Events,0,641,8,32
   752                        	.member	ConfigureWindowManager,32,656,8,32
   753                        	.member	ProcessWindowEvent,64,8833,8,32
   754                        	.member	QueryWindowManager,96,656,8,32
   755                        	.member	DoWndProcs,128,641,8,32
   756                        	.eos
   757                        	.stag	fake70_,64,70
   758                        	.member	type,0,16,8,16
   759                        	.member	size,16,16,8,16
   760                        	.member	desktopAction,32,129,8,32
   761                        	.eos
   762                        	.stag	fake71_,96,71
   763                        	.member	type,0,16,8,16
   764                        	.member	caption,16,138,8,32,61
   765                        	.member	buttonType,48,16,8,16
   766                        	.member	x,64,5,8,16
   767                        	.member	y,80,5,8,16
   768                        	.eos
   769                        	.stag	_childMessage_t,64,72
   770                        	.member	msgType,0,16,8,16
   771                        	.member	msgData,16,129,8,32
   772                        	.member	dataSize,48,16,8,16
   773                        	.eos
   774                        	.line	594
   775                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxeventmanager.h",9
   776                        	.stag	_fx_main_loopvars,16,73
   777                        	.member	dummy,0,5,8,16
   778                        	.eos
   779                        	.stag	_fxMouseMessageData,64,74
   780                        	.member	button1,0,14,8,8
   781                        	.member	button2,8,14,8,8
   782                        	.member	button3,16,14,8,8
  Thu Jul 29 2021 22:56                                                Page 16


   783                        	.member	button4,24,14,8,8
   784                        	.member	x,32,16,8,16
   785                        	.member	y,48,16,8,16
   786                        	.eos
   787                        	.utag	marshalled_data,32,75
   788                        	.member	byteValue,0,14,11,8
   789                        	.member	verbValue,0,110,11,0,2
   790                        	.member	intValue,0,16,11,16
   791                        	.member	longValue,0,18,11,32
   792                        	.member	pointerValue,0,129,11,32
   793                        	.eos
   794                        	.stag	_fx_eventProcess,64,76
   795                        	.member	process,0,138,8,32,20
   796                        	.member	eventProc,32,641,8,32
   797                        	.eos
   798                        	.stag	_mouse_msg_state,184,77
   799                        	.member	lastEvent,0,18,8,32
   800                        	.member	buttonLeftDown,32,14,8,8
   801                        	.member	lastLeftDown,40,18,8,32
   802                        	.member	buttonRightDown,72,14,8,8
   803                        	.member	lastRightDown,80,18,8,32
   804                        	.member	buttonMiddleDown,112,14,8,8
   805                        	.member	lastMiddleDown,120,18,8,32
   806                        	.member	lastX,152,16,8,16
   807                        	.member	lastY,168,16,8,16
   808                        	.eos
   809                        	.stag	_fxos_eventmanager_vtable,192,78
   810                        	.member	EventQueue,0,138,8,32,7
   811                        	.member	Init,32,8833,8,32
   812                        	.member	Run,64,656,8,32
   813                        	.member	Configure,96,656,8,32
   814                        	.member	Query,128,656,8,32
   815                        	.member	Uninit,160,641,8,32
   816                        	.eos
   817                        	.stag	_k_clipboard_data,168,79
   818                        	.member	type,0,14,8,8
   819                        	.member	readable,8,110,8,0,16
   820                        	.member	data,136,129,8,32
   821                        	.eos
   822                        	.line	565
   823                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxconsole.h",18
   824                        	.stag	_fx_spinner_ctx,48,80
   825                        	.member	index,0,5,8,16
   826                        	.member	spinner,16,142,8,32
   827                        	.eos
   828                        	.stag	_fx_console_ctx,1144,81
   829                        	.member	lineBufferIndex,0,5,8,16
   830                        	.member	lineBuffer,16,110,8,0,128
   831                        	.member	isShifted,1040,14,8,8
   832                        	.member	userData,1048,129,8,32
   833                        	.member	screenBuffer,1080,129,8,32
   834                        	.member	Reserved1,1112,129,8,32
   835                        	.eos
   836                        	.stag	_token,64,82
   837                        	.member	type,0,5,8,16
   838                        	.member	depth,16,16,8,16
   839                        	.member	text,32,142,8,32
  Thu Jul 29 2021 22:56                                                Page 17


   840                        	.eos
   841                        	.stag	_command_args,64,83
   842                        	.member	proc,0,656,8,32
   843                        	.member	tokens,32,138,8,32,5
   844                        	.eos
   845                        	.line	208
   846                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxos.h",23
   847                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxstring.h",0
   848                        	.line	139
   849                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxos.h",24
   850                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxnode.h",0
   851                        	.line	118
   852                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxos.h",25
   853                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\ff/ff.h",0
   854                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\ff/ffconf.h",0
   855                        	.line	298
   856                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\ff/ff.h",29
   857                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxtypes.h",0
   858                        	.line	1064
   859                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\ff/ff.h",30
   860                        	.stag	fake84_,4504,84
   861                        	.member	fs_type,0,14,8,8
   862                        	.member	pdrv,8,14,8,8
   863                        	.member	n_fats,16,14,8,8
   864                        	.member	wflag,24,14,8,8
   865                        	.member	fsi_flag,32,14,8,8
   866                        	.member	id,40,5,8,16
   867                        	.member	n_rootdir,56,5,8,16
   868                        	.member	csize,72,5,8,16
   869                        	.member	lfnbuf,88,144,8,32
   870                        	.member	last_clst,120,18,8,32
   871                        	.member	free_clst,152,18,8,32
   872                        	.member	n_fatent,184,18,8,32
   873                        	.member	fsize,216,18,8,32
   874                        	.member	volbase,248,18,8,32
   875                        	.member	fatbase,280,18,8,32
   876                        	.member	dirbase,312,18,8,32
   877                        	.member	database,344,18,8,32
   878                        	.member	winsect,376,18,8,32
   879                        	.member	win,408,110,8,0,512
   880                        	.eos
   881                        	.stag	fake85_,128,85
   882                        	.member	fs,0,138,8,32,84
   883                        	.member	id,32,5,8,16
   884                        	.member	attr,48,14,8,8
   885                        	.member	stat,56,14,8,8
   886                        	.member	sclust,64,18,8,32
   887                        	.member	objsize,96,18,8,32
  Thu Jul 29 2021 22:56                                                Page 18


   888                        	.eos
   889                        	.stag	fake86_,4400,86
   890                        	.member	obj,0,10,8,128,85
   891                        	.member	flag,128,14,8,8
   892                        	.member	err,136,14,8,8
   893                        	.member	fptr,144,18,8,32
   894                        	.member	clust,176,18,8,32
   895                        	.member	sect,208,18,8,32
   896                        	.member	dir_sect,240,18,8,32
   897                        	.member	dir_ptr,272,142,8,32
   898                        	.member	buf,304,110,8,0,512
   899                        	.eos
   900                        	.stag	fake87_,416,87
   901                        	.member	obj,0,10,8,128,85
   902                        	.member	dptr,128,18,8,32
   903                        	.member	clust,160,18,8,32
   904                        	.member	sect,192,18,8,32
   905                        	.member	dir,224,142,8,32
   906                        	.member	fn,256,110,8,0,12
   907                        	.member	blk_ofs,352,18,8,32
   908                        	.member	pat,384,142,8,32
   909                        	.eos
   910                        	.stag	fake88_,2224,88
   911                        	.member	fsize,0,18,8,32
   912                        	.member	fdate,32,5,8,16
   913                        	.member	ftime,48,5,8,16
   914                        	.member	fattrib,64,14,8,8
   915                        	.member	altname,72,110,8,0,13
   916                        	.member	fname,176,110,8,0,256
   917                        	.eos
   918                        	.stag	fake89_,80,89
   919                        	.member	fmt,0,14,8,8
   920                        	.member	n_fat,8,14,8,8
   921                        	.member	align,16,16,8,16
   922                        	.member	n_root,32,16,8,16
   923                        	.member	au_size,48,18,8,32
   924                        	.eos
   925                        	.line	429
   926                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxos.h",26
   927                        	.line	30
   928                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\FXOS_KERNEL_SDK.c",6
   929                        ;#include "FXOS_KERNEL_SDK.h"
   930                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\FXOS_KERNEL_SDK.h",0
   931                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\fxtypes.h",0
   932                        	.line	1064
   933                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\FXOS_KERNEL_SDK.h",10
   934                        	.line	1895
   935                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\FXOS_KERNEL_SDK.c",7
   936                        ;#include "KERNEL_IDX_SDK.h"
   937                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\KERNEL_IDX_SDK.h",0
   938                        	.line	177
  Thu Jul 29 2021 22:56                                                Page 19


   939                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\FXOS_KERNEL_SDK.c",8
   940                        ;
   941                        ;/*
   942                        ;*
   943                        ;* Name:SendMessage
   944                        ;* Subsystem:KERNEL
   945                        ;*
   946                        ;*/
   947                        ;BOOL SendMessage(LPVOID queueName,MSGTYPE msgType
                    ,LPVOID pmsgData,UINT size)
   948                        ;{
   949                        	.line	16
   950                        	.line	17
   951                        	code
   952                        	xdef	~~SendMessage
   953                        	func
   954                        	.function	17
   955                        ~~SendMessage:
   956                        	longa	on
   957                        	longi	on
   958 00:0000: 3B           	tsc
   959 00:0001: 38           	sec
   960 00:0002: E9 04 00     	sbc	#L2
   961 00:0005: 1B           	tcs
   962 00:0006: 0B           	phd
   963 00:0007: 5B           	tcd
   964             00000004   queueName_0	set	4
   965             00000008   msgType_0	set	8
   966             0000000A   pmsgData_0	set	10
   967             0000000E   size_0	set	14
   968                        	.block	17
   969                        ;    return ((SENDMESSAGE)CALL_KERNEL_API(EXPORT_K
                    ERNEL_SENDMESSAGE))(queueName,msgType,pmsgData,size);
   970                        	.sym	queueName,4,129,6,32
   971                        	.sym	msgType,8,16,6,16
   972                        	.sym	pmsgData,10,129,6,32
   973                        	.sym	size,14,16,6,16
   974                        	.line	18
   975 00:0008: D4 12        	pei	<L2+size_0
   976 00:000A: D4 10        	pei	<L2+pmsgData_0+2
   977 00:000C: D4 0E        	pei	<L2+pmsgData_0
   978 00:000E: D4 0C        	pei	<L2+msgType_0
   979 00:0010: D4 0A        	pei	<L2+queueName_0+2
   980 00:0012: D4 08        	pei	<L2+queueName_0
   981 00:0014: AF 42 15 00  	lda	>5442
   982 00:0018: 85 01        	sta	<R0
   983 00:001A: AF 44 15 00  	lda	>5442+2
   984 00:001E: 85 03        	sta	<R0+2
   985 00:0020: A0 02 00     	ldy	#$2
   986 00:0023: B7 01        	lda	[<R0],Y
   987 00:0025: AA           	tax
   988 00:0026: A7 01        	lda	[<R0]
   989                        	xref	~~~lcal
   990 00:0028: 22 xx xx xx  	jsl	~~~lcal
   991 00:002C: E2 20        	sep	#$20
   992                        	longa	off
   993 00:002E: 85 01        	sta	<R0
  Thu Jul 29 2021 22:56                                                Page 20


   994 00:0030: C2 20        	rep	#$20
   995                        	longa	on
   996 00:0032: A5 01        	lda	<R0
   997 00:0034: 29 FF 00     	and	#$ff
   998                        L5:
   999 00:0037: A8           	tay
  1000 00:0038: A5 06        	lda	<L2+2
  1001 00:003A: 85 12        	sta	<L2+2+12
  1002 00:003C: A5 05        	lda	<L2+1
  1003 00:003E: 85 11        	sta	<L2+1+12
  1004 00:0040: 2B           	pld
  1005 00:0041: 3B           	tsc
  1006 00:0042: 18           	clc
  1007 00:0043: 69 10 00     	adc	#L2+12
  1008 00:0046: 1B           	tcs
  1009 00:0047: 98           	tya
  1010 00:0048: 6B           	rtl
  1011                        ;}
  1012                        	.line	19
  1013                        	.endblock	19
  1014             00000004   L2	equ	4
  1015             00000005   L3	equ	5
  1016                        	ends
  1017                        	efunc
  1018                        	.endfunc	19,5,4
  1019                        	.line	19
  1020                        ;
  1021                        ;/*
  1022                        ;*
  1023                        ;* Name:SendWindowMessage
  1024                        ;* Subsystem:KERNEL
  1025                        ;*
  1026                        ;*/
  1027                        ;BOOL SendWindowMessage(HWND hWnd,MSGTYPE msgType,
                    LPVOID pmsgData,UINT size)
  1028                        ;{
  1029                        	.line	27
  1030                        	.line	28
  1031                        	code
  1032                        	xdef	~~SendWindowMessage
  1033                        	func
  1034                        	.function	28
  1035                        ~~SendWindowMessage:
  1036                        	longa	on
  1037                        	longi	on
  1038 00:0049: 3B           	tsc
  1039 00:004A: 38           	sec
  1040 00:004B: E9 04 00     	sbc	#L6
  1041 00:004E: 1B           	tcs
  1042 00:004F: 0B           	phd
  1043 00:0050: 5B           	tcd
  1044             00000004   hWnd_0	set	4
  1045             00000008   msgType_0	set	8
  1046             0000000A   pmsgData_0	set	10
  1047             0000000E   size_0	set	14
  1048                        	.block	28
  1049                        ;    return ((SENDWINDOWMESSAGE)CALL_KERNEL_API(EX
                    PORT_KERNEL_SENDWINDOWMESSAGE))(hWnd,msgType,pmsgData,size);
  Thu Jul 29 2021 22:56                                                Page 21


  1050                        	.sym	hWnd,4,129,6,32
  1051                        	.sym	msgType,8,16,6,16
  1052                        	.sym	pmsgData,10,129,6,32
  1053                        	.sym	size,14,16,6,16
  1054                        	.line	29
  1055 00:0051: D4 12        	pei	<L6+size_0
  1056 00:0053: D4 10        	pei	<L6+pmsgData_0+2
  1057 00:0055: D4 0E        	pei	<L6+pmsgData_0
  1058 00:0057: D4 0C        	pei	<L6+msgType_0
  1059 00:0059: D4 0A        	pei	<L6+hWnd_0+2
  1060 00:005B: D4 08        	pei	<L6+hWnd_0
  1061 00:005D: AF 42 15 00  	lda	>5442
  1062 00:0061: 85 01        	sta	<R0
  1063 00:0063: AF 44 15 00  	lda	>5442+2
  1064 00:0067: 85 03        	sta	<R0+2
  1065 00:0069: A0 06 00     	ldy	#$6
  1066 00:006C: B7 01        	lda	[<R0],Y
  1067 00:006E: AA           	tax
  1068 00:006F: A0 04 00     	ldy	#$4
  1069 00:0072: B7 01        	lda	[<R0],Y
  1070                        	xref	~~~lcal
  1071 00:0074: 22 xx xx xx  	jsl	~~~lcal
  1072 00:0078: E2 20        	sep	#$20
  1073                        	longa	off
  1074 00:007A: 85 01        	sta	<R0
  1075 00:007C: C2 20        	rep	#$20
  1076                        	longa	on
  1077 00:007E: A5 01        	lda	<R0
  1078 00:0080: 29 FF 00     	and	#$ff
  1079                        L9:
  1080 00:0083: A8           	tay
  1081 00:0084: A5 06        	lda	<L6+2
  1082 00:0086: 85 12        	sta	<L6+2+12
  1083 00:0088: A5 05        	lda	<L6+1
  1084 00:008A: 85 11        	sta	<L6+1+12
  1085 00:008C: 2B           	pld
  1086 00:008D: 3B           	tsc
  1087 00:008E: 18           	clc
  1088 00:008F: 69 10 00     	adc	#L6+12
  1089 00:0092: 1B           	tcs
  1090 00:0093: 98           	tya
  1091 00:0094: 6B           	rtl
  1092                        ;}
  1093                        	.line	30
  1094                        	.endblock	30
  1095             00000004   L6	equ	4
  1096             00000005   L7	equ	5
  1097                        	ends
  1098                        	efunc
  1099                        	.endfunc	30,5,4
  1100                        	.line	30
  1101                        ;
  1102                        ;/*
  1103                        ;*
  1104                        ;* Name:SendCommandMessage
  1105                        ;* Subsystem:KERNEL
  1106                        ;*
  1107                        ;*/
  Thu Jul 29 2021 22:56                                                Page 22


  1108                        ;BOOL SendCommandMessage(HWND hWnd,MSGTYPE msgType
                    ,UINT cmdCId,UINT cmdMId,ULONG pData1,ULONG pData2)
  1109                        ;{
  1110                        	.line	38
  1111                        	.line	39
  1112                        	code
  1113                        	xdef	~~SendCommandMessage
  1114                        	func
  1115                        	.function	39
  1116                        ~~SendCommandMessage:
  1117                        	longa	on
  1118                        	longi	on
  1119 00:0095: 3B           	tsc
  1120 00:0096: 38           	sec
  1121 00:0097: E9 04 00     	sbc	#L10
  1122 00:009A: 1B           	tcs
  1123 00:009B: 0B           	phd
  1124 00:009C: 5B           	tcd
  1125             00000004   hWnd_0	set	4
  1126             00000008   msgType_0	set	8
  1127             0000000A   cmdCId_0	set	10
  1128             0000000C   cmdMId_0	set	12
  1129             0000000E   pData1_0	set	14
  1130             00000012   pData2_0	set	18
  1131                        	.block	39
  1132                        ;    return ((SENDCOMMANDMESSAGE)CALL_KERNEL_API(E
                    XPORT_KERNEL_SENDCOMMANDMESSAGE))(hWnd,msgType,cmdCId,cmdMId
                    ,pData1,pData2);
  1133                        	.sym	hWnd,4,129,6,32
  1134                        	.sym	msgType,8,16,6,16
  1135                        	.sym	cmdCId,10,16,6,16
  1136                        	.sym	cmdMId,12,16,6,16
  1137                        	.sym	pData1,14,18,6,32
  1138                        	.sym	pData2,18,18,6,32
  1139                        	.line	40
  1140 00:009D: D4 18        	pei	<L10+pData2_0+2
  1141 00:009F: D4 16        	pei	<L10+pData2_0
  1142 00:00A1: D4 14        	pei	<L10+pData1_0+2
  1143 00:00A3: D4 12        	pei	<L10+pData1_0
  1144 00:00A5: D4 10        	pei	<L10+cmdMId_0
  1145 00:00A7: D4 0E        	pei	<L10+cmdCId_0
  1146 00:00A9: D4 0C        	pei	<L10+msgType_0
  1147 00:00AB: D4 0A        	pei	<L10+hWnd_0+2
  1148 00:00AD: D4 08        	pei	<L10+hWnd_0
  1149 00:00AF: AF 42 15 00  	lda	>5442
  1150 00:00B3: 85 01        	sta	<R0
  1151 00:00B5: AF 44 15 00  	lda	>5442+2
  1152 00:00B9: 85 03        	sta	<R0+2
  1153 00:00BB: A0 0A 00     	ldy	#$a
  1154 00:00BE: B7 01        	lda	[<R0],Y
  1155 00:00C0: AA           	tax
  1156 00:00C1: A0 08 00     	ldy	#$8
  1157 00:00C4: B7 01        	lda	[<R0],Y
  1158                        	xref	~~~lcal
  1159 00:00C6: 22 xx xx xx  	jsl	~~~lcal
  1160 00:00CA: E2 20        	sep	#$20
  1161                        	longa	off
  1162 00:00CC: 85 01        	sta	<R0
  Thu Jul 29 2021 22:56                                                Page 23


  1163 00:00CE: C2 20        	rep	#$20
  1164                        	longa	on
  1165 00:00D0: A5 01        	lda	<R0
  1166 00:00D2: 29 FF 00     	and	#$ff
  1167                        L13:
  1168 00:00D5: A8           	tay
  1169 00:00D6: A5 06        	lda	<L10+2
  1170 00:00D8: 85 18        	sta	<L10+2+18
  1171 00:00DA: A5 05        	lda	<L10+1
  1172 00:00DC: 85 17        	sta	<L10+1+18
  1173 00:00DE: 2B           	pld
  1174 00:00DF: 3B           	tsc
  1175 00:00E0: 18           	clc
  1176 00:00E1: 69 16 00     	adc	#L10+18
  1177 00:00E4: 1B           	tcs
  1178 00:00E5: 98           	tya
  1179 00:00E6: 6B           	rtl
  1180                        ;}
  1181                        	.line	41
  1182                        	.endblock	41
  1183             00000004   L10	equ	4
  1184             00000005   L11	equ	5
  1185                        	ends
  1186                        	efunc
  1187                        	.endfunc	41,5,4
  1188                        	.line	41
  1189                        ;
  1190                        ;/*
  1191                        ;*
  1192                        ;* Name:SendProcessMessage
  1193                        ;* Subsystem:KERNEL
  1194                        ;*
  1195                        ;*/
  1196                        ;BOOL SendProcessMessage(PFXPROCESS process,MSGTYP
                    E msgType,UINT cmdCId,UINT cmdMId,ULONG pData1,ULONG pData2)
  1197                        ;{
  1198                        	.line	49
  1199                        	.line	50
  1200                        	code
  1201                        	xdef	~~SendProcessMessage
  1202                        	func
  1203                        	.function	50
  1204                        ~~SendProcessMessage:
  1205                        	longa	on
  1206                        	longi	on
  1207 00:00E7: 3B           	tsc
  1208 00:00E8: 38           	sec
  1209 00:00E9: E9 04 00     	sbc	#L14
  1210 00:00EC: 1B           	tcs
  1211 00:00ED: 0B           	phd
  1212 00:00EE: 5B           	tcd
  1213             00000004   process_0	set	4
  1214             00000008   msgType_0	set	8
  1215             0000000A   cmdCId_0	set	10
  1216             0000000C   cmdMId_0	set	12
  1217             0000000E   pData1_0	set	14
  1218             00000012   pData2_0	set	18
  1219                        	.block	50
  Thu Jul 29 2021 22:56                                                Page 24


  1220                        ;    return ((SENDPROCESSMESSAGE)CALL_KERNEL_API(E
                    XPORT_KERNEL_SENDPROCESSMESSAGE))(process,msgType,cmdCId,cmd
                    MId,pData1,pData2);
  1221                        	.sym	process,4,138,6,32,20
  1222                        	.sym	msgType,8,16,6,16
  1223                        	.sym	cmdCId,10,16,6,16
  1224                        	.sym	cmdMId,12,16,6,16
  1225                        	.sym	pData1,14,18,6,32
  1226                        	.sym	pData2,18,18,6,32
  1227                        	.line	51
  1228 00:00EF: D4 18        	pei	<L14+pData2_0+2
  1229 00:00F1: D4 16        	pei	<L14+pData2_0
  1230 00:00F3: D4 14        	pei	<L14+pData1_0+2
  1231 00:00F5: D4 12        	pei	<L14+pData1_0
  1232 00:00F7: D4 10        	pei	<L14+cmdMId_0
  1233 00:00F9: D4 0E        	pei	<L14+cmdCId_0
  1234 00:00FB: D4 0C        	pei	<L14+msgType_0
  1235 00:00FD: D4 0A        	pei	<L14+process_0+2
  1236 00:00FF: D4 08        	pei	<L14+process_0
  1237 00:0101: AF 42 15 00  	lda	>5442
  1238 00:0105: 85 01        	sta	<R0
  1239 00:0107: AF 44 15 00  	lda	>5442+2
  1240 00:010B: 85 03        	sta	<R0+2
  1241 00:010D: A0 0E 00     	ldy	#$e
  1242 00:0110: B7 01        	lda	[<R0],Y
  1243 00:0112: AA           	tax
  1244 00:0113: A0 0C 00     	ldy	#$c
  1245 00:0116: B7 01        	lda	[<R0],Y
  1246                        	xref	~~~lcal
  1247 00:0118: 22 xx xx xx  	jsl	~~~lcal
  1248 00:011C: E2 20        	sep	#$20
  1249                        	longa	off
  1250 00:011E: 85 01        	sta	<R0
  1251 00:0120: C2 20        	rep	#$20
  1252                        	longa	on
  1253 00:0122: A5 01        	lda	<R0
  1254 00:0124: 29 FF 00     	and	#$ff
  1255                        L17:
  1256 00:0127: A8           	tay
  1257 00:0128: A5 06        	lda	<L14+2
  1258 00:012A: 85 18        	sta	<L14+2+18
  1259 00:012C: A5 05        	lda	<L14+1
  1260 00:012E: 85 17        	sta	<L14+1+18
  1261 00:0130: 2B           	pld
  1262 00:0131: 3B           	tsc
  1263 00:0132: 18           	clc
  1264 00:0133: 69 16 00     	adc	#L14+18
  1265 00:0136: 1B           	tcs
  1266 00:0137: 98           	tya
  1267 00:0138: 6B           	rtl
  1268                        ;}
  1269                        	.line	52
  1270                        	.endblock	52
  1271             00000004   L14	equ	4
  1272             00000005   L15	equ	5
  1273                        	ends
  1274                        	efunc
  1275                        	.endfunc	52,5,4
  Thu Jul 29 2021 22:56                                                Page 25


  1276                        	.line	52
  1277                        ;
  1278                        ;/*
  1279                        ;*
  1280                        ;* Name:RegisterIdleProc
  1281                        ;* Subsystem:KERNEL
  1282                        ;*
  1283                        ;*/
  1284                        ;HANDLE RegisterIdleProc(FXIDLEPROCESS idleProc,UI
                    NT resolution)
  1285                        ;{
  1286                        	.line	60
  1287                        	.line	61
  1288                        	code
  1289                        	xdef	~~RegisterIdleProc
  1290                        	func
  1291                        	.function	61
  1292                        ~~RegisterIdleProc:
  1293                        	longa	on
  1294                        	longi	on
  1295 00:0139: 3B           	tsc
  1296 00:013A: 38           	sec
  1297 00:013B: E9 04 00     	sbc	#L18
  1298 00:013E: 1B           	tcs
  1299 00:013F: 0B           	phd
  1300 00:0140: 5B           	tcd
  1301             00000004   idleProc_0	set	4
  1302             00000008   resolution_0	set	8
  1303                        	.block	61
  1304                        ;    return ((REGISTERIDLEPROC)CALL_KERNEL_API(EXP
                    ORT_KERNEL_REGISTERIDLEPROC))(idleProc,resolution);
  1305                        	.sym	idleProc,4,641,6,32
  1306                        	.sym	resolution,8,16,6,16
  1307                        	.line	62
  1308 00:0141: D4 0C        	pei	<L18+resolution_0
  1309 00:0143: D4 0A        	pei	<L18+idleProc_0+2
  1310 00:0145: D4 08        	pei	<L18+idleProc_0
  1311 00:0147: AF 42 15 00  	lda	>5442
  1312 00:014B: 85 01        	sta	<R0
  1313 00:014D: AF 44 15 00  	lda	>5442+2
  1314 00:0151: 85 03        	sta	<R0+2
  1315 00:0153: A0 12 00     	ldy	#$12
  1316 00:0156: B7 01        	lda	[<R0],Y
  1317 00:0158: AA           	tax
  1318 00:0159: A0 10 00     	ldy	#$10
  1319 00:015C: B7 01        	lda	[<R0],Y
  1320                        	xref	~~~lcal
  1321 00:015E: 22 xx xx xx  	jsl	~~~lcal
  1322 00:0162: 85 01        	sta	<R0
  1323 00:0164: 86 03        	stx	<R0+2
  1324 00:0166: A6 03        	ldx	<R0+2
  1325 00:0168: A5 01        	lda	<R0
  1326                        L21:
  1327 00:016A: A8           	tay
  1328 00:016B: A5 06        	lda	<L18+2
  1329 00:016D: 85 0C        	sta	<L18+2+6
  1330 00:016F: A5 05        	lda	<L18+1
  1331 00:0171: 85 0B        	sta	<L18+1+6
  Thu Jul 29 2021 22:56                                                Page 26


  1332 00:0173: 2B           	pld
  1333 00:0174: 3B           	tsc
  1334 00:0175: 18           	clc
  1335 00:0176: 69 0A 00     	adc	#L18+6
  1336 00:0179: 1B           	tcs
  1337 00:017A: 98           	tya
  1338 00:017B: 6B           	rtl
  1339                        ;}
  1340                        	.line	63
  1341                        	.endblock	63
  1342             00000004   L18	equ	4
  1343             00000005   L19	equ	5
  1344                        	ends
  1345                        	efunc
  1346                        	.endfunc	63,5,4
  1347                        	.line	63
  1348                        ;
  1349                        ;/*
  1350                        ;*
  1351                        ;* Name:UnregisterIdleProc
  1352                        ;* Subsystem:KERNEL
  1353                        ;*
  1354                        ;*/
  1355                        ;BOOL UnregisterIdleProc(HANDLE hIdleProc)
  1356                        ;{
  1357                        	.line	71
  1358                        	.line	72
  1359                        	code
  1360                        	xdef	~~UnregisterIdleProc
  1361                        	func
  1362                        	.function	72
  1363                        ~~UnregisterIdleProc:
  1364                        	longa	on
  1365                        	longi	on
  1366 00:017C: 3B           	tsc
  1367 00:017D: 38           	sec
  1368 00:017E: E9 04 00     	sbc	#L22
  1369 00:0181: 1B           	tcs
  1370 00:0182: 0B           	phd
  1371 00:0183: 5B           	tcd
  1372             00000004   hIdleProc_0	set	4
  1373                        	.block	72
  1374                        ;    return ((UNREGISTERIDLEPROC)CALL_KERNEL_API(E
                    XPORT_KERNEL_UNREGISTERIDLEPROC))(hIdleProc);
  1375                        	.sym	hIdleProc,4,129,6,32
  1376                        	.line	73
  1377 00:0184: D4 0A        	pei	<L22+hIdleProc_0+2
  1378 00:0186: D4 08        	pei	<L22+hIdleProc_0
  1379 00:0188: AF 42 15 00  	lda	>5442
  1380 00:018C: 85 01        	sta	<R0
  1381 00:018E: AF 44 15 00  	lda	>5442+2
  1382 00:0192: 85 03        	sta	<R0+2
  1383 00:0194: A0 16 00     	ldy	#$16
  1384 00:0197: B7 01        	lda	[<R0],Y
  1385 00:0199: AA           	tax
  1386 00:019A: A0 14 00     	ldy	#$14
  1387 00:019D: B7 01        	lda	[<R0],Y
  1388                        	xref	~~~lcal
  Thu Jul 29 2021 22:56                                                Page 27


  1389 00:019F: 22 xx xx xx  	jsl	~~~lcal
  1390 00:01A3: E2 20        	sep	#$20
  1391                        	longa	off
  1392 00:01A5: 85 01        	sta	<R0
  1393 00:01A7: C2 20        	rep	#$20
  1394                        	longa	on
  1395 00:01A9: A5 01        	lda	<R0
  1396 00:01AB: 29 FF 00     	and	#$ff
  1397                        L25:
  1398 00:01AE: A8           	tay
  1399 00:01AF: A5 06        	lda	<L22+2
  1400 00:01B1: 85 0A        	sta	<L22+2+4
  1401 00:01B3: A5 05        	lda	<L22+1
  1402 00:01B5: 85 09        	sta	<L22+1+4
  1403 00:01B7: 2B           	pld
  1404 00:01B8: 3B           	tsc
  1405 00:01B9: 18           	clc
  1406 00:01BA: 69 08 00     	adc	#L22+4
  1407 00:01BD: 1B           	tcs
  1408 00:01BE: 98           	tya
  1409 00:01BF: 6B           	rtl
  1410                        ;}
  1411                        	.line	74
  1412                        	.endblock	74
  1413             00000004   L22	equ	4
  1414             00000005   L23	equ	5
  1415                        	ends
  1416                        	efunc
  1417                        	.endfunc	74,5,4
  1418                        	.line	74
  1419                        ;
  1420                        ;/*
  1421                        ;*
  1422                        ;* Name:RaiseException
  1423                        ;* Subsystem:KERNEL
  1424                        ;*
  1425                        ;*/
  1426                        ;VOID RaiseException(LPVOID ctxId,ULONG errorId,LP
                    VOID exceptionMessage,UINT exMsgSize)
  1427                        ;{
  1428                        	.line	82
  1429                        	.line	83
  1430                        	code
  1431                        	xdef	~~RaiseException
  1432                        	func
  1433                        	.function	83
  1434                        ~~RaiseException:
  1435                        	longa	on
  1436                        	longi	on
  1437 00:01C0: 3B           	tsc
  1438 00:01C1: 38           	sec
  1439 00:01C2: E9 04 00     	sbc	#L26
  1440 00:01C5: 1B           	tcs
  1441 00:01C6: 0B           	phd
  1442 00:01C7: 5B           	tcd
  1443             00000004   ctxId_0	set	4
  1444             00000008   errorId_0	set	8
  1445             0000000C   exceptionMessage_0	set	12
  Thu Jul 29 2021 22:56                                                Page 28


  1446             00000010   exMsgSize_0	set	16
  1447                        	.block	83
  1448                        ;    ((RAISEEXCEPTION)CALL_KERNEL_API(EXPORT_KERNE
                    L_RAISEEXCEPTION))(ctxId,errorId,exceptionMessage,exMsgSize)
                    ;
  1449                        	.sym	ctxId,4,129,6,32
  1450                        	.sym	errorId,8,18,6,32
  1451                        	.sym	exceptionMessage,12,129,6,32
  1452                        	.sym	exMsgSize,16,16,6,16
  1453                        	.line	84
  1454 00:01C8: D4 14        	pei	<L26+exMsgSize_0
  1455 00:01CA: D4 12        	pei	<L26+exceptionMessage_0+2
  1456 00:01CC: D4 10        	pei	<L26+exceptionMessage_0
  1457 00:01CE: D4 0E        	pei	<L26+errorId_0+2
  1458 00:01D0: D4 0C        	pei	<L26+errorId_0
  1459 00:01D2: D4 0A        	pei	<L26+ctxId_0+2
  1460 00:01D4: D4 08        	pei	<L26+ctxId_0
  1461 00:01D6: AF 42 15 00  	lda	>5442
  1462 00:01DA: 85 01        	sta	<R0
  1463 00:01DC: AF 44 15 00  	lda	>5442+2
  1464 00:01E0: 85 03        	sta	<R0+2
  1465 00:01E2: A0 1A 00     	ldy	#$1a
  1466 00:01E5: B7 01        	lda	[<R0],Y
  1467 00:01E7: AA           	tax
  1468 00:01E8: A0 18 00     	ldy	#$18
  1469 00:01EB: B7 01        	lda	[<R0],Y
  1470                        	xref	~~~lcal
  1471 00:01ED: 22 xx xx xx  	jsl	~~~lcal
  1472                        ;}
  1473                        	.line	85
  1474                        L29:
  1475 00:01F1: A5 06        	lda	<L26+2
  1476 00:01F3: 85 14        	sta	<L26+2+14
  1477 00:01F5: A5 05        	lda	<L26+1
  1478 00:01F7: 85 13        	sta	<L26+1+14
  1479 00:01F9: 2B           	pld
  1480 00:01FA: 3B           	tsc
  1481 00:01FB: 18           	clc
  1482 00:01FC: 69 12 00     	adc	#L26+14
  1483 00:01FF: 1B           	tcs
  1484 00:0200: 6B           	rtl
  1485                        	.endblock	85
  1486             00000004   L26	equ	4
  1487             00000005   L27	equ	5
  1488                        	ends
  1489                        	efunc
  1490                        	.endfunc	85,5,4
  1491                        	.line	85
  1492                        ;
  1493                        ;/*
  1494                        ;*
  1495                        ;* Name:GetProcess
  1496                        ;* Subsystem:KERNEL
  1497                        ;*
  1498                        ;*/
  1499                        ;PFXPROCESS GetProcess(PROCESS_ID procId)
  1500                        ;{
  1501                        	.line	93
  Thu Jul 29 2021 22:56                                                Page 29


  1502                        	.line	94
  1503                        	code
  1504                        	xdef	~~GetProcess
  1505                        	func
  1506                        	.function	94
  1507                        ~~GetProcess:
  1508                        	longa	on
  1509                        	longi	on
  1510 00:0201: 3B           	tsc
  1511 00:0202: 38           	sec
  1512 00:0203: E9 04 00     	sbc	#L30
  1513 00:0206: 1B           	tcs
  1514 00:0207: 0B           	phd
  1515 00:0208: 5B           	tcd
  1516             00000004   procId_0	set	4
  1517                        	.block	94
  1518                        ;    return ((GETPROCESS)CALL_KERNEL_API(EXPORT_KE
                    RNEL_GETPROCESS))(procId);
  1519                        	.sym	procId,4,18,6,32
  1520                        	.line	95
  1521 00:0209: D4 0A        	pei	<L30+procId_0+2
  1522 00:020B: D4 08        	pei	<L30+procId_0
  1523 00:020D: AF 42 15 00  	lda	>5442
  1524 00:0211: 85 01        	sta	<R0
  1525 00:0213: AF 44 15 00  	lda	>5442+2
  1526 00:0217: 85 03        	sta	<R0+2
  1527 00:0219: A0 1E 00     	ldy	#$1e
  1528 00:021C: B7 01        	lda	[<R0],Y
  1529 00:021E: AA           	tax
  1530 00:021F: A0 1C 00     	ldy	#$1c
  1531 00:0222: B7 01        	lda	[<R0],Y
  1532                        	xref	~~~lcal
  1533 00:0224: 22 xx xx xx  	jsl	~~~lcal
  1534 00:0228: 85 01        	sta	<R0
  1535 00:022A: 86 03        	stx	<R0+2
  1536 00:022C: A6 03        	ldx	<R0+2
  1537 00:022E: A5 01        	lda	<R0
  1538                        L33:
  1539 00:0230: A8           	tay
  1540 00:0231: A5 06        	lda	<L30+2
  1541 00:0233: 85 0A        	sta	<L30+2+4
  1542 00:0235: A5 05        	lda	<L30+1
  1543 00:0237: 85 09        	sta	<L30+1+4
  1544 00:0239: 2B           	pld
  1545 00:023A: 3B           	tsc
  1546 00:023B: 18           	clc
  1547 00:023C: 69 08 00     	adc	#L30+4
  1548 00:023F: 1B           	tcs
  1549 00:0240: 98           	tya
  1550 00:0241: 6B           	rtl
  1551                        ;}
  1552                        	.line	96
  1553                        	.endblock	96
  1554             00000004   L30	equ	4
  1555             00000005   L31	equ	5
  1556                        	ends
  1557                        	efunc
  1558                        	.endfunc	96,5,4
  Thu Jul 29 2021 22:56                                                Page 30


  1559                        	.line	96
  1560                        ;
  1561                        ;/*
  1562                        ;*
  1563                        ;* Name:GetProcessByName
  1564                        ;* Subsystem:KERNEL
  1565                        ;*
  1566                        ;*/
  1567                        ;PFXPROCESS GetProcessByName(LPCSTR processName)
  1568                        ;{
  1569                        	.line	104
  1570                        	.line	105
  1571                        	code
  1572                        	xdef	~~GetProcessByName
  1573                        	func
  1574                        	.function	105
  1575                        ~~GetProcessByName:
  1576                        	longa	on
  1577                        	longi	on
  1578 00:0242: 3B           	tsc
  1579 00:0243: 38           	sec
  1580 00:0244: E9 04 00     	sbc	#L34
  1581 00:0247: 1B           	tcs
  1582 00:0248: 0B           	phd
  1583 00:0249: 5B           	tcd
  1584             00000004   processName_0	set	4
  1585                        	.block	105
  1586                        ;    return ((GETPROCESSBYNAME)CALL_KERNEL_API(EXP
                    ORT_KERNEL_GETPROCESSBYNAME))(processName);
  1587                        	.sym	processName,4,142,6,32
  1588                        	.line	106
  1589 00:024A: D4 0A        	pei	<L34+processName_0+2
  1590 00:024C: D4 08        	pei	<L34+processName_0
  1591 00:024E: AF 42 15 00  	lda	>5442
  1592 00:0252: 85 01        	sta	<R0
  1593 00:0254: AF 44 15 00  	lda	>5442+2
  1594 00:0258: 85 03        	sta	<R0+2
  1595 00:025A: A0 22 00     	ldy	#$22
  1596 00:025D: B7 01        	lda	[<R0],Y
  1597 00:025F: AA           	tax
  1598 00:0260: A0 20 00     	ldy	#$20
  1599 00:0263: B7 01        	lda	[<R0],Y
  1600                        	xref	~~~lcal
  1601 00:0265: 22 xx xx xx  	jsl	~~~lcal
  1602 00:0269: 85 01        	sta	<R0
  1603 00:026B: 86 03        	stx	<R0+2
  1604 00:026D: A6 03        	ldx	<R0+2
  1605 00:026F: A5 01        	lda	<R0
  1606                        L37:
  1607 00:0271: A8           	tay
  1608 00:0272: A5 06        	lda	<L34+2
  1609 00:0274: 85 0A        	sta	<L34+2+4
  1610 00:0276: A5 05        	lda	<L34+1
  1611 00:0278: 85 09        	sta	<L34+1+4
  1612 00:027A: 2B           	pld
  1613 00:027B: 3B           	tsc
  1614 00:027C: 18           	clc
  1615 00:027D: 69 08 00     	adc	#L34+4
  Thu Jul 29 2021 22:56                                                Page 31


  1616 00:0280: 1B           	tcs
  1617 00:0281: 98           	tya
  1618 00:0282: 6B           	rtl
  1619                        ;}
  1620                        	.line	107
  1621                        	.endblock	107
  1622             00000004   L34	equ	4
  1623             00000005   L35	equ	5
  1624                        	ends
  1625                        	efunc
  1626                        	.endfunc	107,5,4
  1627                        	.line	107
  1628                        ;
  1629                        ;/*
  1630                        ;*
  1631                        ;* Name:GetProcessList
  1632                        ;* Subsystem:KERNEL
  1633                        ;*
  1634                        ;*/
  1635                        ;PFXPROCESS* GetProcessList(VOID)
  1636                        ;{
  1637                        	.line	115
  1638                        	.line	116
  1639                        	code
  1640                        	xdef	~~GetProcessList
  1641                        	func
  1642                        	.function	116
  1643                        ~~GetProcessList:
  1644                        	longa	on
  1645                        	longi	on
  1646 00:0283: 3B           	tsc
  1647 00:0284: 38           	sec
  1648 00:0285: E9 04 00     	sbc	#L38
  1649 00:0288: 1B           	tcs
  1650 00:0289: 0B           	phd
  1651 00:028A: 5B           	tcd
  1652                        	.block	116
  1653                        ;    return ((GETPROCESSLIST)CALL_KERNEL_API(EXPOR
                    T_KERNEL_GETPROCESSLIST))();
  1654                        	.line	117
  1655 00:028B: AF 42 15 00  	lda	>5442
  1656 00:028F: 85 01        	sta	<R0
  1657 00:0291: AF 44 15 00  	lda	>5442+2
  1658 00:0295: 85 03        	sta	<R0+2
  1659 00:0297: A0 26 00     	ldy	#$26
  1660 00:029A: B7 01        	lda	[<R0],Y
  1661 00:029C: AA           	tax
  1662 00:029D: A0 24 00     	ldy	#$24
  1663 00:02A0: B7 01        	lda	[<R0],Y
  1664                        	xref	~~~lcal
  1665 00:02A2: 22 xx xx xx  	jsl	~~~lcal
  1666 00:02A6: 85 01        	sta	<R0
  1667 00:02A8: 86 03        	stx	<R0+2
  1668 00:02AA: A6 03        	ldx	<R0+2
  1669 00:02AC: A5 01        	lda	<R0
  1670                        L41:
  1671 00:02AE: A8           	tay
  1672 00:02AF: 2B           	pld
  Thu Jul 29 2021 22:56                                                Page 32


  1673 00:02B0: 3B           	tsc
  1674 00:02B1: 18           	clc
  1675 00:02B2: 69 04 00     	adc	#L38
  1676 00:02B5: 1B           	tcs
  1677 00:02B6: 98           	tya
  1678 00:02B7: 6B           	rtl
  1679                        ;}
  1680                        	.line	118
  1681                        	.endblock	118
  1682             00000004   L38	equ	4
  1683             00000005   L39	equ	5
  1684                        	ends
  1685                        	efunc
  1686                        	.endfunc	118,5,4
  1687                        	.line	118
  1688                        ;
  1689                        ;/*
  1690                        ;*
  1691                        ;* Name:LaunchProcess
  1692                        ;* Subsystem:KERNEL
  1693                        ;*
  1694                        ;*/
  1695                        ;PFXPROCESS LaunchProcess(LPCHAR commandLine)
  1696                        ;{
  1697                        	.line	126
  1698                        	.line	127
  1699                        	code
  1700                        	xdef	~~LaunchProcess
  1701                        	func
  1702                        	.function	127
  1703                        ~~LaunchProcess:
  1704                        	longa	on
  1705                        	longi	on
  1706 00:02B8: 3B           	tsc
  1707 00:02B9: 38           	sec
  1708 00:02BA: E9 04 00     	sbc	#L42
  1709 00:02BD: 1B           	tcs
  1710 00:02BE: 0B           	phd
  1711 00:02BF: 5B           	tcd
  1712             00000004   commandLine_0	set	4
  1713                        	.block	127
  1714                        ;    return ((LAUNCHPROCESS)CALL_KERNEL_API(EXPORT
                    _KERNEL_LAUNCHPROCESS))(commandLine);
  1715                        	.sym	commandLine,4,142,6,32
  1716                        	.line	128
  1717 00:02C0: D4 0A        	pei	<L42+commandLine_0+2
  1718 00:02C2: D4 08        	pei	<L42+commandLine_0
  1719 00:02C4: AF 42 15 00  	lda	>5442
  1720 00:02C8: 85 01        	sta	<R0
  1721 00:02CA: AF 44 15 00  	lda	>5442+2
  1722 00:02CE: 85 03        	sta	<R0+2
  1723 00:02D0: A0 2A 00     	ldy	#$2a
  1724 00:02D3: B7 01        	lda	[<R0],Y
  1725 00:02D5: AA           	tax
  1726 00:02D6: A0 28 00     	ldy	#$28
  1727 00:02D9: B7 01        	lda	[<R0],Y
  1728                        	xref	~~~lcal
  1729 00:02DB: 22 xx xx xx  	jsl	~~~lcal
  Thu Jul 29 2021 22:56                                                Page 33


  1730 00:02DF: 85 01        	sta	<R0
  1731 00:02E1: 86 03        	stx	<R0+2
  1732 00:02E3: A6 03        	ldx	<R0+2
  1733 00:02E5: A5 01        	lda	<R0
  1734                        L45:
  1735 00:02E7: A8           	tay
  1736 00:02E8: A5 06        	lda	<L42+2
  1737 00:02EA: 85 0A        	sta	<L42+2+4
  1738 00:02EC: A5 05        	lda	<L42+1
  1739 00:02EE: 85 09        	sta	<L42+1+4
  1740 00:02F0: 2B           	pld
  1741 00:02F1: 3B           	tsc
  1742 00:02F2: 18           	clc
  1743 00:02F3: 69 08 00     	adc	#L42+4
  1744 00:02F6: 1B           	tcs
  1745 00:02F7: 98           	tya
  1746 00:02F8: 6B           	rtl
  1747                        ;}
  1748                        	.line	129
  1749                        	.endblock	129
  1750             00000004   L42	equ	4
  1751             00000005   L43	equ	5
  1752                        	ends
  1753                        	efunc
  1754                        	.endfunc	129,5,4
  1755                        	.line	129
  1756                        ;
  1757                        ;/*
  1758                        ;*
  1759                        ;* Name:CreateProcess
  1760                        ;* Subsystem:KERNEL
  1761                        ;*
  1762                        ;*/
  1763                        ;PFXPROCESS CreateProcess(LPCHAR commandLine)
  1764                        ;{
  1765                        	.line	137
  1766                        	.line	138
  1767                        	code
  1768                        	xdef	~~CreateProcess
  1769                        	func
  1770                        	.function	138
  1771                        ~~CreateProcess:
  1772                        	longa	on
  1773                        	longi	on
  1774 00:02F9: 3B           	tsc
  1775 00:02FA: 38           	sec
  1776 00:02FB: E9 04 00     	sbc	#L46
  1777 00:02FE: 1B           	tcs
  1778 00:02FF: 0B           	phd
  1779 00:0300: 5B           	tcd
  1780             00000004   commandLine_0	set	4
  1781                        	.block	138
  1782                        ;    return ((CREATEPROCESS)CALL_KERNEL_API(EXPORT
                    _KERNEL_CREATEPROCESS))(commandLine);
  1783                        	.sym	commandLine,4,142,6,32
  1784                        	.line	139
  1785 00:0301: D4 0A        	pei	<L46+commandLine_0+2
  1786 00:0303: D4 08        	pei	<L46+commandLine_0
  Thu Jul 29 2021 22:56                                                Page 34


  1787 00:0305: AF 42 15 00  	lda	>5442
  1788 00:0309: 85 01        	sta	<R0
  1789 00:030B: AF 44 15 00  	lda	>5442+2
  1790 00:030F: 85 03        	sta	<R0+2
  1791 00:0311: A0 2E 00     	ldy	#$2e
  1792 00:0314: B7 01        	lda	[<R0],Y
  1793 00:0316: AA           	tax
  1794 00:0317: A0 2C 00     	ldy	#$2c
  1795 00:031A: B7 01        	lda	[<R0],Y
  1796                        	xref	~~~lcal
  1797 00:031C: 22 xx xx xx  	jsl	~~~lcal
  1798 00:0320: 85 01        	sta	<R0
  1799 00:0322: 86 03        	stx	<R0+2
  1800 00:0324: A6 03        	ldx	<R0+2
  1801 00:0326: A5 01        	lda	<R0
  1802                        L49:
  1803 00:0328: A8           	tay
  1804 00:0329: A5 06        	lda	<L46+2
  1805 00:032B: 85 0A        	sta	<L46+2+4
  1806 00:032D: A5 05        	lda	<L46+1
  1807 00:032F: 85 09        	sta	<L46+1+4
  1808 00:0331: 2B           	pld
  1809 00:0332: 3B           	tsc
  1810 00:0333: 18           	clc
  1811 00:0334: 69 08 00     	adc	#L46+4
  1812 00:0337: 1B           	tcs
  1813 00:0338: 98           	tya
  1814 00:0339: 6B           	rtl
  1815                        ;}
  1816                        	.line	140
  1817                        	.endblock	140
  1818             00000004   L46	equ	4
  1819             00000005   L47	equ	5
  1820                        	ends
  1821                        	efunc
  1822                        	.endfunc	140,5,4
  1823                        	.line	140
  1824                        ;
  1825                        ;/*
  1826                        ;*
  1827                        ;* Name:GetCurrentProcess
  1828                        ;* Subsystem:KERNEL
  1829                        ;*
  1830                        ;*/
  1831                        ;PFXPROCESS GetCurrentProcess(VOID)
  1832                        ;{
  1833                        	.line	148
  1834                        	.line	149
  1835                        	code
  1836                        	xdef	~~GetCurrentProcess
  1837                        	func
  1838                        	.function	149
  1839                        ~~GetCurrentProcess:
  1840                        	longa	on
  1841                        	longi	on
  1842 00:033A: 3B           	tsc
  1843 00:033B: 38           	sec
  1844 00:033C: E9 04 00     	sbc	#L50
  Thu Jul 29 2021 22:56                                                Page 35


  1845 00:033F: 1B           	tcs
  1846 00:0340: 0B           	phd
  1847 00:0341: 5B           	tcd
  1848                        	.block	149
  1849                        ;    return ((GETCURRENTPROCESS)CALL_KERNEL_API(EX
                    PORT_KERNEL_GETCURRENTPROCESS))();
  1850                        	.line	150
  1851 00:0342: AF 42 15 00  	lda	>5442
  1852 00:0346: 85 01        	sta	<R0
  1853 00:0348: AF 44 15 00  	lda	>5442+2
  1854 00:034C: 85 03        	sta	<R0+2
  1855 00:034E: A0 32 00     	ldy	#$32
  1856 00:0351: B7 01        	lda	[<R0],Y
  1857 00:0353: AA           	tax
  1858 00:0354: A0 30 00     	ldy	#$30
  1859 00:0357: B7 01        	lda	[<R0],Y
  1860                        	xref	~~~lcal
  1861 00:0359: 22 xx xx xx  	jsl	~~~lcal
  1862 00:035D: 85 01        	sta	<R0
  1863 00:035F: 86 03        	stx	<R0+2
  1864 00:0361: A6 03        	ldx	<R0+2
  1865 00:0363: A5 01        	lda	<R0
  1866                        L53:
  1867 00:0365: A8           	tay
  1868 00:0366: 2B           	pld
  1869 00:0367: 3B           	tsc
  1870 00:0368: 18           	clc
  1871 00:0369: 69 04 00     	adc	#L50
  1872 00:036C: 1B           	tcs
  1873 00:036D: 98           	tya
  1874 00:036E: 6B           	rtl
  1875                        ;}
  1876                        	.line	151
  1877                        	.endblock	151
  1878             00000004   L50	equ	4
  1879             00000005   L51	equ	5
  1880                        	ends
  1881                        	efunc
  1882                        	.endfunc	151,5,4
  1883                        	.line	151
  1884                        ;
  1885                        ;/*
  1886                        ;*
  1887                        ;* Name:ProcessSleep
  1888                        ;* Subsystem:KERNEL
  1889                        ;*
  1890                        ;*/
  1891                        ;BOOL ProcessSleep(PROCESS_ID processId)
  1892                        ;{
  1893                        	.line	159
  1894                        	.line	160
  1895                        	code
  1896                        	xdef	~~ProcessSleep
  1897                        	func
  1898                        	.function	160
  1899                        ~~ProcessSleep:
  1900                        	longa	on
  1901                        	longi	on
  Thu Jul 29 2021 22:56                                                Page 36


  1902 00:036F: 3B           	tsc
  1903 00:0370: 38           	sec
  1904 00:0371: E9 04 00     	sbc	#L54
  1905 00:0374: 1B           	tcs
  1906 00:0375: 0B           	phd
  1907 00:0376: 5B           	tcd
  1908             00000004   processId_0	set	4
  1909                        	.block	160
  1910                        ;    return ((PROCESSSLEEP)CALL_KERNEL_API(EXPORT_
                    KERNEL_PROCESSSLEEP))(processId);
  1911                        	.sym	processId,4,18,6,32
  1912                        	.line	161
  1913 00:0377: D4 0A        	pei	<L54+processId_0+2
  1914 00:0379: D4 08        	pei	<L54+processId_0
  1915 00:037B: AF 42 15 00  	lda	>5442
  1916 00:037F: 85 01        	sta	<R0
  1917 00:0381: AF 44 15 00  	lda	>5442+2
  1918 00:0385: 85 03        	sta	<R0+2
  1919 00:0387: A0 36 00     	ldy	#$36
  1920 00:038A: B7 01        	lda	[<R0],Y
  1921 00:038C: AA           	tax
  1922 00:038D: A0 34 00     	ldy	#$34
  1923 00:0390: B7 01        	lda	[<R0],Y
  1924                        	xref	~~~lcal
  1925 00:0392: 22 xx xx xx  	jsl	~~~lcal
  1926 00:0396: E2 20        	sep	#$20
  1927                        	longa	off
  1928 00:0398: 85 01        	sta	<R0
  1929 00:039A: C2 20        	rep	#$20
  1930                        	longa	on
  1931 00:039C: A5 01        	lda	<R0
  1932 00:039E: 29 FF 00     	and	#$ff
  1933                        L57:
  1934 00:03A1: A8           	tay
  1935 00:03A2: A5 06        	lda	<L54+2
  1936 00:03A4: 85 0A        	sta	<L54+2+4
  1937 00:03A6: A5 05        	lda	<L54+1
  1938 00:03A8: 85 09        	sta	<L54+1+4
  1939 00:03AA: 2B           	pld
  1940 00:03AB: 3B           	tsc
  1941 00:03AC: 18           	clc
  1942 00:03AD: 69 08 00     	adc	#L54+4
  1943 00:03B0: 1B           	tcs
  1944 00:03B1: 98           	tya
  1945 00:03B2: 6B           	rtl
  1946                        ;}
  1947                        	.line	162
  1948                        	.endblock	162
  1949             00000004   L54	equ	4
  1950             00000005   L55	equ	5
  1951                        	ends
  1952                        	efunc
  1953                        	.endfunc	162,5,4
  1954                        	.line	162
  1955                        ;
  1956                        ;/*
  1957                        ;*
  1958                        ;* Name:ProcessTerminate
  Thu Jul 29 2021 22:56                                                Page 37


  1959                        ;* Subsystem:KERNEL
  1960                        ;*
  1961                        ;*/
  1962                        ;BOOL ProcessTerminate(PROCESS_ID processId)
  1963                        ;{
  1964                        	.line	170
  1965                        	.line	171
  1966                        	code
  1967                        	xdef	~~ProcessTerminate
  1968                        	func
  1969                        	.function	171
  1970                        ~~ProcessTerminate:
  1971                        	longa	on
  1972                        	longi	on
  1973 00:03B3: 3B           	tsc
  1974 00:03B4: 38           	sec
  1975 00:03B5: E9 04 00     	sbc	#L58
  1976 00:03B8: 1B           	tcs
  1977 00:03B9: 0B           	phd
  1978 00:03BA: 5B           	tcd
  1979             00000004   processId_0	set	4
  1980                        	.block	171
  1981                        ;    return ((PROCESSTERMINATE)CALL_KERNEL_API(EXP
                    ORT_KERNEL_PROCESSTERMINATE))(processId);
  1982                        	.sym	processId,4,18,6,32
  1983                        	.line	172
  1984 00:03BB: D4 0A        	pei	<L58+processId_0+2
  1985 00:03BD: D4 08        	pei	<L58+processId_0
  1986 00:03BF: AF 42 15 00  	lda	>5442
  1987 00:03C3: 85 01        	sta	<R0
  1988 00:03C5: AF 44 15 00  	lda	>5442+2
  1989 00:03C9: 85 03        	sta	<R0+2
  1990 00:03CB: A0 3A 00     	ldy	#$3a
  1991 00:03CE: B7 01        	lda	[<R0],Y
  1992 00:03D0: AA           	tax
  1993 00:03D1: A0 38 00     	ldy	#$38
  1994 00:03D4: B7 01        	lda	[<R0],Y
  1995                        	xref	~~~lcal
  1996 00:03D6: 22 xx xx xx  	jsl	~~~lcal
  1997 00:03DA: E2 20        	sep	#$20
  1998                        	longa	off
  1999 00:03DC: 85 01        	sta	<R0
  2000 00:03DE: C2 20        	rep	#$20
  2001                        	longa	on
  2002 00:03E0: A5 01        	lda	<R0
  2003 00:03E2: 29 FF 00     	and	#$ff
  2004                        L61:
  2005 00:03E5: A8           	tay
  2006 00:03E6: A5 06        	lda	<L58+2
  2007 00:03E8: 85 0A        	sta	<L58+2+4
  2008 00:03EA: A5 05        	lda	<L58+1
  2009 00:03EC: 85 09        	sta	<L58+1+4
  2010 00:03EE: 2B           	pld
  2011 00:03EF: 3B           	tsc
  2012 00:03F0: 18           	clc
  2013 00:03F1: 69 08 00     	adc	#L58+4
  2014 00:03F4: 1B           	tcs
  2015 00:03F5: 98           	tya
  Thu Jul 29 2021 22:56                                                Page 38


  2016 00:03F6: 6B           	rtl
  2017                        ;}
  2018                        	.line	173
  2019                        	.endblock	173
  2020             00000004   L58	equ	4
  2021             00000005   L59	equ	5
  2022                        	ends
  2023                        	efunc
  2024                        	.endfunc	173,5,4
  2025                        	.line	173
  2026                        ;
  2027                        ;/*
  2028                        ;*
  2029                        ;* Name:ProcessStart
  2030                        ;* Subsystem:KERNEL
  2031                        ;*
  2032                        ;*/
  2033                        ;BOOL ProcessStart(PROCESS_ID processId)
  2034                        ;{
  2035                        	.line	181
  2036                        	.line	182
  2037                        	code
  2038                        	xdef	~~ProcessStart
  2039                        	func
  2040                        	.function	182
  2041                        ~~ProcessStart:
  2042                        	longa	on
  2043                        	longi	on
  2044 00:03F7: 3B           	tsc
  2045 00:03F8: 38           	sec
  2046 00:03F9: E9 04 00     	sbc	#L62
  2047 00:03FC: 1B           	tcs
  2048 00:03FD: 0B           	phd
  2049 00:03FE: 5B           	tcd
  2050             00000004   processId_0	set	4
  2051                        	.block	182
  2052                        ;    return ((PROCESSSTART)CALL_KERNEL_API(EXPORT_
                    KERNEL_PROCESSSTART))(processId);
  2053                        	.sym	processId,4,18,6,32
  2054                        	.line	183
  2055 00:03FF: D4 0A        	pei	<L62+processId_0+2
  2056 00:0401: D4 08        	pei	<L62+processId_0
  2057 00:0403: AF 42 15 00  	lda	>5442
  2058 00:0407: 85 01        	sta	<R0
  2059 00:0409: AF 44 15 00  	lda	>5442+2
  2060 00:040D: 85 03        	sta	<R0+2
  2061 00:040F: A0 3E 00     	ldy	#$3e
  2062 00:0412: B7 01        	lda	[<R0],Y
  2063 00:0414: AA           	tax
  2064 00:0415: A0 3C 00     	ldy	#$3c
  2065 00:0418: B7 01        	lda	[<R0],Y
  2066                        	xref	~~~lcal
  2067 00:041A: 22 xx xx xx  	jsl	~~~lcal
  2068 00:041E: E2 20        	sep	#$20
  2069                        	longa	off
  2070 00:0420: 85 01        	sta	<R0
  2071 00:0422: C2 20        	rep	#$20
  2072                        	longa	on
  Thu Jul 29 2021 22:56                                                Page 39


  2073 00:0424: A5 01        	lda	<R0
  2074 00:0426: 29 FF 00     	and	#$ff
  2075                        L65:
  2076 00:0429: A8           	tay
  2077 00:042A: A5 06        	lda	<L62+2
  2078 00:042C: 85 0A        	sta	<L62+2+4
  2079 00:042E: A5 05        	lda	<L62+1
  2080 00:0430: 85 09        	sta	<L62+1+4
  2081 00:0432: 2B           	pld
  2082 00:0433: 3B           	tsc
  2083 00:0434: 18           	clc
  2084 00:0435: 69 08 00     	adc	#L62+4
  2085 00:0438: 1B           	tcs
  2086 00:0439: 98           	tya
  2087 00:043A: 6B           	rtl
  2088                        ;}
  2089                        	.line	184
  2090                        	.endblock	184
  2091             00000004   L62	equ	4
  2092             00000005   L63	equ	5
  2093                        	ends
  2094                        	efunc
  2095                        	.endfunc	184,5,4
  2096                        	.line	184
  2097                        ;
  2098                        ;/*
  2099                        ;*
  2100                        ;* Name:ProcessWait
  2101                        ;* Subsystem:KERNEL
  2102                        ;*
  2103                        ;*/
  2104                        ;BOOL ProcessWait(PROCESS_ID processId,PPROCESS_SI
                    GNAL signal)
  2105                        ;{
  2106                        	.line	192
  2107                        	.line	193
  2108                        	code
  2109                        	xdef	~~ProcessWait
  2110                        	func
  2111                        	.function	193
  2112                        ~~ProcessWait:
  2113                        	longa	on
  2114                        	longi	on
  2115 00:043B: 3B           	tsc
  2116 00:043C: 38           	sec
  2117 00:043D: E9 04 00     	sbc	#L66
  2118 00:0440: 1B           	tcs
  2119 00:0441: 0B           	phd
  2120 00:0442: 5B           	tcd
  2121             00000004   processId_0	set	4
  2122             00000008   signal_0	set	8
  2123                        	.block	193
  2124                        ;    return ((PROCESSWAIT)CALL_KERNEL_API(EXPORT_K
                    ERNEL_PROCESSWAIT))(processId,signal);
  2125                        	.sym	processId,4,18,6,32
  2126                        	.sym	signal,8,138,6,32,9
  2127                        	.line	194
  2128 00:0443: D4 0E        	pei	<L66+signal_0+2
  Thu Jul 29 2021 22:56                                                Page 40


  2129 00:0445: D4 0C        	pei	<L66+signal_0
  2130 00:0447: D4 0A        	pei	<L66+processId_0+2
  2131 00:0449: D4 08        	pei	<L66+processId_0
  2132 00:044B: AF 42 15 00  	lda	>5442
  2133 00:044F: 85 01        	sta	<R0
  2134 00:0451: AF 44 15 00  	lda	>5442+2
  2135 00:0455: 85 03        	sta	<R0+2
  2136 00:0457: A0 42 00     	ldy	#$42
  2137 00:045A: B7 01        	lda	[<R0],Y
  2138 00:045C: AA           	tax
  2139 00:045D: A0 40 00     	ldy	#$40
  2140 00:0460: B7 01        	lda	[<R0],Y
  2141                        	xref	~~~lcal
  2142 00:0462: 22 xx xx xx  	jsl	~~~lcal
  2143 00:0466: E2 20        	sep	#$20
  2144                        	longa	off
  2145 00:0468: 85 01        	sta	<R0
  2146 00:046A: C2 20        	rep	#$20
  2147                        	longa	on
  2148 00:046C: A5 01        	lda	<R0
  2149 00:046E: 29 FF 00     	and	#$ff
  2150                        L69:
  2151 00:0471: A8           	tay
  2152 00:0472: A5 06        	lda	<L66+2
  2153 00:0474: 85 0E        	sta	<L66+2+8
  2154 00:0476: A5 05        	lda	<L66+1
  2155 00:0478: 85 0D        	sta	<L66+1+8
  2156 00:047A: 2B           	pld
  2157 00:047B: 3B           	tsc
  2158 00:047C: 18           	clc
  2159 00:047D: 69 0C 00     	adc	#L66+8
  2160 00:0480: 1B           	tcs
  2161 00:0481: 98           	tya
  2162 00:0482: 6B           	rtl
  2163                        ;}
  2164                        	.line	195
  2165                        	.endblock	195
  2166             00000004   L66	equ	4
  2167             00000005   L67	equ	5
  2168                        	ends
  2169                        	efunc
  2170                        	.endfunc	195,5,4
  2171                        	.line	195
  2172                        ;
  2173                        ;/*
  2174                        ;*
  2175                        ;* Name:ProcessSignal
  2176                        ;* Subsystem:KERNEL
  2177                        ;*
  2178                        ;*/
  2179                        ;BOOL ProcessSignal(PROCESS_ID processId,UINT sign
                    al)
  2180                        ;{
  2181                        	.line	203
  2182                        	.line	204
  2183                        	code
  2184                        	xdef	~~ProcessSignal
  2185                        	func
  Thu Jul 29 2021 22:56                                                Page 41


  2186                        	.function	204
  2187                        ~~ProcessSignal:
  2188                        	longa	on
  2189                        	longi	on
  2190 00:0483: 3B           	tsc
  2191 00:0484: 38           	sec
  2192 00:0485: E9 04 00     	sbc	#L70
  2193 00:0488: 1B           	tcs
  2194 00:0489: 0B           	phd
  2195 00:048A: 5B           	tcd
  2196             00000004   processId_0	set	4
  2197             00000008   signal_0	set	8
  2198                        	.block	204
  2199                        ;    return ((PROCESSSIGNAL)CALL_KERNEL_API(EXPORT
                    _KERNEL_PROCESSSIGNAL))(processId,signal);
  2200                        	.sym	processId,4,18,6,32
  2201                        	.sym	signal,8,16,6,16
  2202                        	.line	205
  2203 00:048B: D4 0C        	pei	<L70+signal_0
  2204 00:048D: D4 0A        	pei	<L70+processId_0+2
  2205 00:048F: D4 08        	pei	<L70+processId_0
  2206 00:0491: AF 42 15 00  	lda	>5442
  2207 00:0495: 85 01        	sta	<R0
  2208 00:0497: AF 44 15 00  	lda	>5442+2
  2209 00:049B: 85 03        	sta	<R0+2
  2210 00:049D: A0 46 00     	ldy	#$46
  2211 00:04A0: B7 01        	lda	[<R0],Y
  2212 00:04A2: AA           	tax
  2213 00:04A3: A0 44 00     	ldy	#$44
  2214 00:04A6: B7 01        	lda	[<R0],Y
  2215                        	xref	~~~lcal
  2216 00:04A8: 22 xx xx xx  	jsl	~~~lcal
  2217 00:04AC: E2 20        	sep	#$20
  2218                        	longa	off
  2219 00:04AE: 85 01        	sta	<R0
  2220 00:04B0: C2 20        	rep	#$20
  2221                        	longa	on
  2222 00:04B2: A5 01        	lda	<R0
  2223 00:04B4: 29 FF 00     	and	#$ff
  2224                        L73:
  2225 00:04B7: A8           	tay
  2226 00:04B8: A5 06        	lda	<L70+2
  2227 00:04BA: 85 0C        	sta	<L70+2+6
  2228 00:04BC: A5 05        	lda	<L70+1
  2229 00:04BE: 85 0B        	sta	<L70+1+6
  2230 00:04C0: 2B           	pld
  2231 00:04C1: 3B           	tsc
  2232 00:04C2: 18           	clc
  2233 00:04C3: 69 0A 00     	adc	#L70+6
  2234 00:04C6: 1B           	tcs
  2235 00:04C7: 98           	tya
  2236 00:04C8: 6B           	rtl
  2237                        ;}
  2238                        	.line	206
  2239                        	.endblock	206
  2240             00000004   L70	equ	4
  2241             00000005   L71	equ	5
  2242                        	ends
  Thu Jul 29 2021 22:56                                                Page 42


  2243                        	efunc
  2244                        	.endfunc	206,5,4
  2245                        	.line	206
  2246                        ;
  2247                        ;/*
  2248                        ;*
  2249                        ;* Name:DebugOut
  2250                        ;* Subsystem:KERNEL
  2251                        ;*
  2252                        ;*/
  2253                        ;void DebugOut(char* debugString)
  2254                        ;{
  2255                        	.line	214
  2256                        	.line	215
  2257                        	code
  2258                        	xdef	~~DebugOut
  2259                        	func
  2260                        	.function	215
  2261                        ~~DebugOut:
  2262                        	longa	on
  2263                        	longi	on
  2264 00:04C9: 3B           	tsc
  2265 00:04CA: 38           	sec
  2266 00:04CB: E9 04 00     	sbc	#L74
  2267 00:04CE: 1B           	tcs
  2268 00:04CF: 0B           	phd
  2269 00:04D0: 5B           	tcd
  2270             00000004   debugString_0	set	4
  2271                        	.block	215
  2272                        ;    ((DEBUGOUT)CALL_KERNEL_API(EXPORT_KERNEL_DEBU
                    GOUT))(debugString);
  2273                        	.sym	debugString,4,142,6,32
  2274                        	.line	216
  2275 00:04D1: D4 0A        	pei	<L74+debugString_0+2
  2276 00:04D3: D4 08        	pei	<L74+debugString_0
  2277 00:04D5: AF 42 15 00  	lda	>5442
  2278 00:04D9: 85 01        	sta	<R0
  2279 00:04DB: AF 44 15 00  	lda	>5442+2
  2280 00:04DF: 85 03        	sta	<R0+2
  2281 00:04E1: A0 4A 00     	ldy	#$4a
  2282 00:04E4: B7 01        	lda	[<R0],Y
  2283 00:04E6: AA           	tax
  2284 00:04E7: A0 48 00     	ldy	#$48
  2285 00:04EA: B7 01        	lda	[<R0],Y
  2286                        	xref	~~~lcal
  2287 00:04EC: 22 xx xx xx  	jsl	~~~lcal
  2288                        ;}
  2289                        	.line	217
  2290                        L77:
  2291 00:04F0: A5 06        	lda	<L74+2
  2292 00:04F2: 85 0A        	sta	<L74+2+4
  2293 00:04F4: A5 05        	lda	<L74+1
  2294 00:04F6: 85 09        	sta	<L74+1+4
  2295 00:04F8: 2B           	pld
  2296 00:04F9: 3B           	tsc
  2297 00:04FA: 18           	clc
  2298 00:04FB: 69 08 00     	adc	#L74+4
  2299 00:04FE: 1B           	tcs
  Thu Jul 29 2021 22:56                                                Page 43


  2300 00:04FF: 6B           	rtl
  2301                        	.endblock	217
  2302             00000004   L74	equ	4
  2303             00000005   L75	equ	5
  2304                        	ends
  2305                        	efunc
  2306                        	.endfunc	217,5,4
  2307                        	.line	217
  2308                        ;
  2309                        ;/*
  2310                        ;*
  2311                        ;* Name:DebugNString
  2312                        ;* Subsystem:KERNEL
  2313                        ;*
  2314                        ;*/
  2315                        ;void DebugNString(char* debugString,int nsize)
  2316                        ;{
  2317                        	.line	225
  2318                        	.line	226
  2319                        	code
  2320                        	xdef	~~DebugNString
  2321                        	func
  2322                        	.function	226
  2323                        ~~DebugNString:
  2324                        	longa	on
  2325                        	longi	on
  2326 00:0500: 3B           	tsc
  2327 00:0501: 38           	sec
  2328 00:0502: E9 04 00     	sbc	#L78
  2329 00:0505: 1B           	tcs
  2330 00:0506: 0B           	phd
  2331 00:0507: 5B           	tcd
  2332             00000004   debugString_0	set	4
  2333             00000008   nsize_0	set	8
  2334                        	.block	226
  2335                        ;    ((DEBUGNSTRING)CALL_KERNEL_API(EXPORT_KERNEL_
                    DEBUGNSTRING))(debugString,nsize);
  2336                        	.sym	debugString,4,142,6,32
  2337                        	.sym	nsize,8,5,6,16
  2338                        	.line	227
  2339 00:0508: D4 0C        	pei	<L78+nsize_0
  2340 00:050A: D4 0A        	pei	<L78+debugString_0+2
  2341 00:050C: D4 08        	pei	<L78+debugString_0
  2342 00:050E: AF 42 15 00  	lda	>5442
  2343 00:0512: 85 01        	sta	<R0
  2344 00:0514: AF 44 15 00  	lda	>5442+2
  2345 00:0518: 85 03        	sta	<R0+2
  2346 00:051A: A0 4E 00     	ldy	#$4e
  2347 00:051D: B7 01        	lda	[<R0],Y
  2348 00:051F: AA           	tax
  2349 00:0520: A0 4C 00     	ldy	#$4c
  2350 00:0523: B7 01        	lda	[<R0],Y
  2351                        	xref	~~~lcal
  2352 00:0525: 22 xx xx xx  	jsl	~~~lcal
  2353                        ;}
  2354                        	.line	228
  2355                        L81:
  2356 00:0529: A5 06        	lda	<L78+2
  Thu Jul 29 2021 22:56                                                Page 44


  2357 00:052B: 85 0C        	sta	<L78+2+6
  2358 00:052D: A5 05        	lda	<L78+1
  2359 00:052F: 85 0B        	sta	<L78+1+6
  2360 00:0531: 2B           	pld
  2361 00:0532: 3B           	tsc
  2362 00:0533: 18           	clc
  2363 00:0534: 69 0A 00     	adc	#L78+6
  2364 00:0537: 1B           	tcs
  2365 00:0538: 6B           	rtl
  2366                        	.endblock	228
  2367             00000004   L78	equ	4
  2368             00000005   L79	equ	5
  2369                        	ends
  2370                        	efunc
  2371                        	.endfunc	228,5,4
  2372                        	.line	228
  2373                        ;
  2374                        ;/*
  2375                        ;*
  2376                        ;* Name:DebugChar
  2377                        ;* Subsystem:KERNEL
  2378                        ;*
  2379                        ;*/
  2380                        ;void DebugChar(char* debugString,UCHAR n)
  2381                        ;{
  2382                        	.line	236
  2383                        	.line	237
  2384                        	code
  2385                        	xdef	~~DebugChar
  2386                        	func
  2387                        	.function	237
  2388                        ~~DebugChar:
  2389                        	longa	on
  2390                        	longi	on
  2391 00:0539: 3B           	tsc
  2392 00:053A: 38           	sec
  2393 00:053B: E9 04 00     	sbc	#L82
  2394 00:053E: 1B           	tcs
  2395 00:053F: 0B           	phd
  2396 00:0540: 5B           	tcd
  2397             00000004   debugString_0	set	4
  2398             00000008   n_0	set	8
  2399                        	.block	237
  2400                        ;    ((DEBUGCHAR)CALL_KERNEL_API(EXPORT_KERNEL_DEB
                    UGCHAR))(debugString,n);
  2401                        	.sym	debugString,4,142,6,32
  2402                        	.sym	n,8,14,6,8
  2403                        	.line	238
  2404 00:0541: D4 0C        	pei	<L82+n_0
  2405 00:0543: D4 0A        	pei	<L82+debugString_0+2
  2406 00:0545: D4 08        	pei	<L82+debugString_0
  2407 00:0547: AF 42 15 00  	lda	>5442
  2408 00:054B: 85 01        	sta	<R0
  2409 00:054D: AF 44 15 00  	lda	>5442+2
  2410 00:0551: 85 03        	sta	<R0+2
  2411 00:0553: A0 52 00     	ldy	#$52
  2412 00:0556: B7 01        	lda	[<R0],Y
  2413 00:0558: AA           	tax
  Thu Jul 29 2021 22:56                                                Page 45


  2414 00:0559: A0 50 00     	ldy	#$50
  2415 00:055C: B7 01        	lda	[<R0],Y
  2416                        	xref	~~~lcal
  2417 00:055E: 22 xx xx xx  	jsl	~~~lcal
  2418                        ;}
  2419                        	.line	239
  2420                        L85:
  2421 00:0562: A5 06        	lda	<L82+2
  2422 00:0564: 85 0C        	sta	<L82+2+6
  2423 00:0566: A5 05        	lda	<L82+1
  2424 00:0568: 85 0B        	sta	<L82+1+6
  2425 00:056A: 2B           	pld
  2426 00:056B: 3B           	tsc
  2427 00:056C: 18           	clc
  2428 00:056D: 69 0A 00     	adc	#L82+6
  2429 00:0570: 1B           	tcs
  2430 00:0571: 6B           	rtl
  2431                        	.endblock	239
  2432             00000004   L82	equ	4
  2433             00000005   L83	equ	5
  2434                        	ends
  2435                        	efunc
  2436                        	.endfunc	239,5,4
  2437                        	.line	239
  2438                        ;
  2439                        ;/*
  2440                        ;*
  2441                        ;* Name:DebugPointer
  2442                        ;* Subsystem:KERNEL
  2443                        ;*
  2444                        ;*/
  2445                        ;void DebugPointer(char* debugString,void* p)
  2446                        ;{
  2447                        	.line	247
  2448                        	.line	248
  2449                        	code
  2450                        	xdef	~~DebugPointer
  2451                        	func
  2452                        	.function	248
  2453                        ~~DebugPointer:
  2454                        	longa	on
  2455                        	longi	on
  2456 00:0572: 3B           	tsc
  2457 00:0573: 38           	sec
  2458 00:0574: E9 04 00     	sbc	#L86
  2459 00:0577: 1B           	tcs
  2460 00:0578: 0B           	phd
  2461 00:0579: 5B           	tcd
  2462             00000004   debugString_0	set	4
  2463             00000008   p_0	set	8
  2464                        	.block	248
  2465                        ;    ((DEBUGPOINTER)CALL_KERNEL_API(EXPORT_KERNEL_
                    DEBUGPOINTER))(debugString,p);
  2466                        	.sym	debugString,4,142,6,32
  2467                        	.sym	p,8,129,6,32
  2468                        	.line	249
  2469 00:057A: D4 0E        	pei	<L86+p_0+2
  2470 00:057C: D4 0C        	pei	<L86+p_0
  Thu Jul 29 2021 22:56                                                Page 46


  2471 00:057E: D4 0A        	pei	<L86+debugString_0+2
  2472 00:0580: D4 08        	pei	<L86+debugString_0
  2473 00:0582: AF 42 15 00  	lda	>5442
  2474 00:0586: 85 01        	sta	<R0
  2475 00:0588: AF 44 15 00  	lda	>5442+2
  2476 00:058C: 85 03        	sta	<R0+2
  2477 00:058E: A0 56 00     	ldy	#$56
  2478 00:0591: B7 01        	lda	[<R0],Y
  2479 00:0593: AA           	tax
  2480 00:0594: A0 54 00     	ldy	#$54
  2481 00:0597: B7 01        	lda	[<R0],Y
  2482                        	xref	~~~lcal
  2483 00:0599: 22 xx xx xx  	jsl	~~~lcal
  2484                        ;}
  2485                        	.line	250
  2486                        L89:
  2487 00:059D: A5 06        	lda	<L86+2
  2488 00:059F: 85 0E        	sta	<L86+2+8
  2489 00:05A1: A5 05        	lda	<L86+1
  2490 00:05A3: 85 0D        	sta	<L86+1+8
  2491 00:05A5: 2B           	pld
  2492 00:05A6: 3B           	tsc
  2493 00:05A7: 18           	clc
  2494 00:05A8: 69 0C 00     	adc	#L86+8
  2495 00:05AB: 1B           	tcs
  2496 00:05AC: 6B           	rtl
  2497                        	.endblock	250
  2498             00000004   L86	equ	4
  2499             00000005   L87	equ	5
  2500                        	ends
  2501                        	efunc
  2502                        	.endfunc	250,5,4
  2503                        	.line	250
  2504                        ;
  2505                        ;/*
  2506                        ;*
  2507                        ;* Name:DebugInteger
  2508                        ;* Subsystem:KERNEL
  2509                        ;*
  2510                        ;*/
  2511                        ;void DebugInteger(char* debugString,UINT n)
  2512                        ;{
  2513                        	.line	258
  2514                        	.line	259
  2515                        	code
  2516                        	xdef	~~DebugInteger
  2517                        	func
  2518                        	.function	259
  2519                        ~~DebugInteger:
  2520                        	longa	on
  2521                        	longi	on
  2522 00:05AD: 3B           	tsc
  2523 00:05AE: 38           	sec
  2524 00:05AF: E9 04 00     	sbc	#L90
  2525 00:05B2: 1B           	tcs
  2526 00:05B3: 0B           	phd
  2527 00:05B4: 5B           	tcd
  2528             00000004   debugString_0	set	4
  Thu Jul 29 2021 22:56                                                Page 47


  2529             00000008   n_0	set	8
  2530                        	.block	259
  2531                        ;    ((DEBUGINTEGER)CALL_KERNEL_API(EXPORT_KERNEL_
                    DEBUGINTEGER))(debugString,n);
  2532                        	.sym	debugString,4,142,6,32
  2533                        	.sym	n,8,16,6,16
  2534                        	.line	260
  2535 00:05B5: D4 0C        	pei	<L90+n_0
  2536 00:05B7: D4 0A        	pei	<L90+debugString_0+2
  2537 00:05B9: D4 08        	pei	<L90+debugString_0
  2538 00:05BB: AF 42 15 00  	lda	>5442
  2539 00:05BF: 85 01        	sta	<R0
  2540 00:05C1: AF 44 15 00  	lda	>5442+2
  2541 00:05C5: 85 03        	sta	<R0+2
  2542 00:05C7: A0 5A 00     	ldy	#$5a
  2543 00:05CA: B7 01        	lda	[<R0],Y
  2544 00:05CC: AA           	tax
  2545 00:05CD: A0 58 00     	ldy	#$58
  2546 00:05D0: B7 01        	lda	[<R0],Y
  2547                        	xref	~~~lcal
  2548 00:05D2: 22 xx xx xx  	jsl	~~~lcal
  2549                        ;}
  2550                        	.line	261
  2551                        L93:
  2552 00:05D6: A5 06        	lda	<L90+2
  2553 00:05D8: 85 0C        	sta	<L90+2+6
  2554 00:05DA: A5 05        	lda	<L90+1
  2555 00:05DC: 85 0B        	sta	<L90+1+6
  2556 00:05DE: 2B           	pld
  2557 00:05DF: 3B           	tsc
  2558 00:05E0: 18           	clc
  2559 00:05E1: 69 0A 00     	adc	#L90+6
  2560 00:05E4: 1B           	tcs
  2561 00:05E5: 6B           	rtl
  2562                        	.endblock	261
  2563             00000004   L90	equ	4
  2564             00000005   L91	equ	5
  2565                        	ends
  2566                        	efunc
  2567                        	.endfunc	261,5,4
  2568                        	.line	261
  2569                        ;
  2570                        ;/*
  2571                        ;*
  2572                        ;* Name:DebugHexInteger
  2573                        ;* Subsystem:KERNEL
  2574                        ;*
  2575                        ;*/
  2576                        ;void DebugHexInteger(char* debugString,UINT n)
  2577                        ;{
  2578                        	.line	269
  2579                        	.line	270
  2580                        	code
  2581                        	xdef	~~DebugHexInteger
  2582                        	func
  2583                        	.function	270
  2584                        ~~DebugHexInteger:
  2585                        	longa	on
  Thu Jul 29 2021 22:56                                                Page 48


  2586                        	longi	on
  2587 00:05E6: 3B           	tsc
  2588 00:05E7: 38           	sec
  2589 00:05E8: E9 04 00     	sbc	#L94
  2590 00:05EB: 1B           	tcs
  2591 00:05EC: 0B           	phd
  2592 00:05ED: 5B           	tcd
  2593             00000004   debugString_0	set	4
  2594             00000008   n_0	set	8
  2595                        	.block	270
  2596                        ;    ((DEBUGHEXINTEGER)CALL_KERNEL_API(EXPORT_KERN
                    EL_DEBUGHEXINTEGER))(debugString,n);
  2597                        	.sym	debugString,4,142,6,32
  2598                        	.sym	n,8,16,6,16
  2599                        	.line	271
  2600 00:05EE: D4 0C        	pei	<L94+n_0
  2601 00:05F0: D4 0A        	pei	<L94+debugString_0+2
  2602 00:05F2: D4 08        	pei	<L94+debugString_0
  2603 00:05F4: AF 42 15 00  	lda	>5442
  2604 00:05F8: 85 01        	sta	<R0
  2605 00:05FA: AF 44 15 00  	lda	>5442+2
  2606 00:05FE: 85 03        	sta	<R0+2
  2607 00:0600: A0 5E 00     	ldy	#$5e
  2608 00:0603: B7 01        	lda	[<R0],Y
  2609 00:0605: AA           	tax
  2610 00:0606: A0 5C 00     	ldy	#$5c
  2611 00:0609: B7 01        	lda	[<R0],Y
  2612                        	xref	~~~lcal
  2613 00:060B: 22 xx xx xx  	jsl	~~~lcal
  2614                        ;}
  2615                        	.line	272
  2616                        L97:
  2617 00:060F: A5 06        	lda	<L94+2
  2618 00:0611: 85 0C        	sta	<L94+2+6
  2619 00:0613: A5 05        	lda	<L94+1
  2620 00:0615: 85 0B        	sta	<L94+1+6
  2621 00:0617: 2B           	pld
  2622 00:0618: 3B           	tsc
  2623 00:0619: 18           	clc
  2624 00:061A: 69 0A 00     	adc	#L94+6
  2625 00:061D: 1B           	tcs
  2626 00:061E: 6B           	rtl
  2627                        	.endblock	272
  2628             00000004   L94	equ	4
  2629             00000005   L95	equ	5
  2630                        	ends
  2631                        	efunc
  2632                        	.endfunc	272,5,4
  2633                        	.line	272
  2634                        ;
  2635                        ;/*
  2636                        ;*
  2637                        ;* Name:DebugIntegerArray
  2638                        ;* Subsystem:KERNEL
  2639                        ;*
  2640                        ;*/
  2641                        ;void DebugIntegerArray(char* debugString,UINT* n,
                    UINT size)
  Thu Jul 29 2021 22:56                                                Page 49


  2642                        ;{
  2643                        	.line	280
  2644                        	.line	281
  2645                        	code
  2646                        	xdef	~~DebugIntegerArray
  2647                        	func
  2648                        	.function	281
  2649                        ~~DebugIntegerArray:
  2650                        	longa	on
  2651                        	longi	on
  2652 00:061F: 3B           	tsc
  2653 00:0620: 38           	sec
  2654 00:0621: E9 04 00     	sbc	#L98
  2655 00:0624: 1B           	tcs
  2656 00:0625: 0B           	phd
  2657 00:0626: 5B           	tcd
  2658             00000004   debugString_0	set	4
  2659             00000008   n_0	set	8
  2660             0000000C   size_0	set	12
  2661                        	.block	281
  2662                        ;    ((DEBUGINTEGERARRAY)CALL_KERNEL_API(EXPORT_KE
                    RNEL_DEBUGINTEGERARRAY))(debugString,n,size);
  2663                        	.sym	debugString,4,142,6,32
  2664                        	.sym	n,8,144,6,32
  2665                        	.sym	size,12,16,6,16
  2666                        	.line	282
  2667 00:0627: D4 10        	pei	<L98+size_0
  2668 00:0629: D4 0E        	pei	<L98+n_0+2
  2669 00:062B: D4 0C        	pei	<L98+n_0
  2670 00:062D: D4 0A        	pei	<L98+debugString_0+2
  2671 00:062F: D4 08        	pei	<L98+debugString_0
  2672 00:0631: AF 42 15 00  	lda	>5442
  2673 00:0635: 85 01        	sta	<R0
  2674 00:0637: AF 44 15 00  	lda	>5442+2
  2675 00:063B: 85 03        	sta	<R0+2
  2676 00:063D: A0 62 00     	ldy	#$62
  2677 00:0640: B7 01        	lda	[<R0],Y
  2678 00:0642: AA           	tax
  2679 00:0643: A0 60 00     	ldy	#$60
  2680 00:0646: B7 01        	lda	[<R0],Y
  2681                        	xref	~~~lcal
  2682 00:0648: 22 xx xx xx  	jsl	~~~lcal
  2683                        ;}
  2684                        	.line	283
  2685                        L101:
  2686 00:064C: A5 06        	lda	<L98+2
  2687 00:064E: 85 10        	sta	<L98+2+10
  2688 00:0650: A5 05        	lda	<L98+1
  2689 00:0652: 85 0F        	sta	<L98+1+10
  2690 00:0654: 2B           	pld
  2691 00:0655: 3B           	tsc
  2692 00:0656: 18           	clc
  2693 00:0657: 69 0E 00     	adc	#L98+10
  2694 00:065A: 1B           	tcs
  2695 00:065B: 6B           	rtl
  2696                        	.endblock	283
  2697             00000004   L98	equ	4
  2698             00000005   L99	equ	5
  Thu Jul 29 2021 22:56                                                Page 50


  2699                        	ends
  2700                        	efunc
  2701                        	.endfunc	283,5,4
  2702                        	.line	283
  2703                        ;
  2704                        ;/*
  2705                        ;*
  2706                        ;* Name:DebugLong
  2707                        ;* Subsystem:KERNEL
  2708                        ;*
  2709                        ;*/
  2710                        ;void DebugLong(char* debugString,ULONG n)
  2711                        ;{
  2712                        	.line	291
  2713                        	.line	292
  2714                        	code
  2715                        	xdef	~~DebugLong
  2716                        	func
  2717                        	.function	292
  2718                        ~~DebugLong:
  2719                        	longa	on
  2720                        	longi	on
  2721 00:065C: 3B           	tsc
  2722 00:065D: 38           	sec
  2723 00:065E: E9 04 00     	sbc	#L102
  2724 00:0661: 1B           	tcs
  2725 00:0662: 0B           	phd
  2726 00:0663: 5B           	tcd
  2727             00000004   debugString_0	set	4
  2728             00000008   n_0	set	8
  2729                        	.block	292
  2730                        ;    ((DEBUGLONG)CALL_KERNEL_API(EXPORT_KERNEL_DEB
                    UGLONG))(debugString,n);
  2731                        	.sym	debugString,4,142,6,32
  2732                        	.sym	n,8,18,6,32
  2733                        	.line	293
  2734 00:0664: D4 0E        	pei	<L102+n_0+2
  2735 00:0666: D4 0C        	pei	<L102+n_0
  2736 00:0668: D4 0A        	pei	<L102+debugString_0+2
  2737 00:066A: D4 08        	pei	<L102+debugString_0
  2738 00:066C: AF 42 15 00  	lda	>5442
  2739 00:0670: 85 01        	sta	<R0
  2740 00:0672: AF 44 15 00  	lda	>5442+2
  2741 00:0676: 85 03        	sta	<R0+2
  2742 00:0678: A0 66 00     	ldy	#$66
  2743 00:067B: B7 01        	lda	[<R0],Y
  2744 00:067D: AA           	tax
  2745 00:067E: A0 64 00     	ldy	#$64
  2746 00:0681: B7 01        	lda	[<R0],Y
  2747                        	xref	~~~lcal
  2748 00:0683: 22 xx xx xx  	jsl	~~~lcal
  2749                        ;}
  2750                        	.line	294
  2751                        L105:
  2752 00:0687: A5 06        	lda	<L102+2
  2753 00:0689: 85 0E        	sta	<L102+2+8
  2754 00:068B: A5 05        	lda	<L102+1
  2755 00:068D: 85 0D        	sta	<L102+1+8
  Thu Jul 29 2021 22:56                                                Page 51


  2756 00:068F: 2B           	pld
  2757 00:0690: 3B           	tsc
  2758 00:0691: 18           	clc
  2759 00:0692: 69 0C 00     	adc	#L102+8
  2760 00:0695: 1B           	tcs
  2761 00:0696: 6B           	rtl
  2762                        	.endblock	294
  2763             00000004   L102	equ	4
  2764             00000005   L103	equ	5
  2765                        	ends
  2766                        	efunc
  2767                        	.endfunc	294,5,4
  2768                        	.line	294
  2769                        ;
  2770                        ;/*
  2771                        ;*
  2772                        ;* Name:DebugHex
  2773                        ;* Subsystem:KERNEL
  2774                        ;*
  2775                        ;*/
  2776                        ;void DebugHex(LPSTR debugString,UCHAR n)
  2777                        ;{
  2778                        	.line	302
  2779                        	.line	303
  2780                        	code
  2781                        	xdef	~~DebugHex
  2782                        	func
  2783                        	.function	303
  2784                        ~~DebugHex:
  2785                        	longa	on
  2786                        	longi	on
  2787 00:0697: 3B           	tsc
  2788 00:0698: 38           	sec
  2789 00:0699: E9 04 00     	sbc	#L106
  2790 00:069C: 1B           	tcs
  2791 00:069D: 0B           	phd
  2792 00:069E: 5B           	tcd
  2793             00000004   debugString_0	set	4
  2794             00000008   n_0	set	8
  2795                        	.block	303
  2796                        ;    ((DEBUGHEX)CALL_KERNEL_API(EXPORT_KERNEL_DEBU
                    GHEX))(debugString,n);
  2797                        	.sym	debugString,4,142,6,32
  2798                        	.sym	n,8,14,6,8
  2799                        	.line	304
  2800 00:069F: D4 0C        	pei	<L106+n_0
  2801 00:06A1: D4 0A        	pei	<L106+debugString_0+2
  2802 00:06A3: D4 08        	pei	<L106+debugString_0
  2803 00:06A5: AF 42 15 00  	lda	>5442
  2804 00:06A9: 85 01        	sta	<R0
  2805 00:06AB: AF 44 15 00  	lda	>5442+2
  2806 00:06AF: 85 03        	sta	<R0+2
  2807 00:06B1: A0 6A 00     	ldy	#$6a
  2808 00:06B4: B7 01        	lda	[<R0],Y
  2809 00:06B6: AA           	tax
  2810 00:06B7: A0 68 00     	ldy	#$68
  2811 00:06BA: B7 01        	lda	[<R0],Y
  2812                        	xref	~~~lcal
  Thu Jul 29 2021 22:56                                                Page 52


  2813 00:06BC: 22 xx xx xx  	jsl	~~~lcal
  2814                        ;}
  2815                        	.line	305
  2816                        L109:
  2817 00:06C0: A5 06        	lda	<L106+2
  2818 00:06C2: 85 0C        	sta	<L106+2+6
  2819 00:06C4: A5 05        	lda	<L106+1
  2820 00:06C6: 85 0B        	sta	<L106+1+6
  2821 00:06C8: 2B           	pld
  2822 00:06C9: 3B           	tsc
  2823 00:06CA: 18           	clc
  2824 00:06CB: 69 0A 00     	adc	#L106+6
  2825 00:06CE: 1B           	tcs
  2826 00:06CF: 6B           	rtl
  2827                        	.endblock	305
  2828             00000004   L106	equ	4
  2829             00000005   L107	equ	5
  2830                        	ends
  2831                        	efunc
  2832                        	.endfunc	305,5,4
  2833                        	.line	305
  2834                        ;
  2835                        ;/*
  2836                        ;*
  2837                        ;* Name:DebugHexChar
  2838                        ;* Subsystem:KERNEL
  2839                        ;*
  2840                        ;*/
  2841                        ;void DebugHexChar(LPSTR debugString,UCHAR n)
  2842                        ;{
  2843                        	.line	313
  2844                        	.line	314
  2845                        	code
  2846                        	xdef	~~DebugHexChar
  2847                        	func
  2848                        	.function	314
  2849                        ~~DebugHexChar:
  2850                        	longa	on
  2851                        	longi	on
  2852 00:06D0: 3B           	tsc
  2853 00:06D1: 38           	sec
  2854 00:06D2: E9 04 00     	sbc	#L110
  2855 00:06D5: 1B           	tcs
  2856 00:06D6: 0B           	phd
  2857 00:06D7: 5B           	tcd
  2858             00000004   debugString_0	set	4
  2859             00000008   n_0	set	8
  2860                        	.block	314
  2861                        ;    ((DEBUGHEXCHAR)CALL_KERNEL_API(EXPORT_KERNEL_
                    DEBUGHEXCHAR))(debugString,n);
  2862                        	.sym	debugString,4,142,6,32
  2863                        	.sym	n,8,14,6,8
  2864                        	.line	315
  2865 00:06D8: D4 0C        	pei	<L110+n_0
  2866 00:06DA: D4 0A        	pei	<L110+debugString_0+2
  2867 00:06DC: D4 08        	pei	<L110+debugString_0
  2868 00:06DE: AF 42 15 00  	lda	>5442
  2869 00:06E2: 85 01        	sta	<R0
  Thu Jul 29 2021 22:56                                                Page 53


  2870 00:06E4: AF 44 15 00  	lda	>5442+2
  2871 00:06E8: 85 03        	sta	<R0+2
  2872 00:06EA: A0 6E 00     	ldy	#$6e
  2873 00:06ED: B7 01        	lda	[<R0],Y
  2874 00:06EF: AA           	tax
  2875 00:06F0: A0 6C 00     	ldy	#$6c
  2876 00:06F3: B7 01        	lda	[<R0],Y
  2877                        	xref	~~~lcal
  2878 00:06F5: 22 xx xx xx  	jsl	~~~lcal
  2879                        ;}
  2880                        	.line	316
  2881                        L113:
  2882 00:06F9: A5 06        	lda	<L110+2
  2883 00:06FB: 85 0C        	sta	<L110+2+6
  2884 00:06FD: A5 05        	lda	<L110+1
  2885 00:06FF: 85 0B        	sta	<L110+1+6
  2886 00:0701: 2B           	pld
  2887 00:0702: 3B           	tsc
  2888 00:0703: 18           	clc
  2889 00:0704: 69 0A 00     	adc	#L110+6
  2890 00:0707: 1B           	tcs
  2891 00:0708: 6B           	rtl
  2892                        	.endblock	316
  2893             00000004   L110	equ	4
  2894             00000005   L111	equ	5
  2895                        	ends
  2896                        	efunc
  2897                        	.endfunc	316,5,4
  2898                        	.line	316
  2899                        ;
  2900                        ;/*
  2901                        ;*
  2902                        ;* Name:DebugBits
  2903                        ;* Subsystem:KERNEL
  2904                        ;*
  2905                        ;*/
  2906                        ;void DebugBits(LPSTR debugString,UCHAR n)
  2907                        ;{
  2908                        	.line	324
  2909                        	.line	325
  2910                        	code
  2911                        	xdef	~~DebugBits
  2912                        	func
  2913                        	.function	325
  2914                        ~~DebugBits:
  2915                        	longa	on
  2916                        	longi	on
  2917 00:0709: 3B           	tsc
  2918 00:070A: 38           	sec
  2919 00:070B: E9 04 00     	sbc	#L114
  2920 00:070E: 1B           	tcs
  2921 00:070F: 0B           	phd
  2922 00:0710: 5B           	tcd
  2923             00000004   debugString_0	set	4
  2924             00000008   n_0	set	8
  2925                        	.block	325
  2926                        ;    ((DEBUGBITS)CALL_KERNEL_API(EXPORT_KERNEL_DEB
                    UGBITS))(debugString,n);
  Thu Jul 29 2021 22:56                                                Page 54


  2927                        	.sym	debugString,4,142,6,32
  2928                        	.sym	n,8,14,6,8
  2929                        	.line	326
  2930 00:0711: D4 0C        	pei	<L114+n_0
  2931 00:0713: D4 0A        	pei	<L114+debugString_0+2
  2932 00:0715: D4 08        	pei	<L114+debugString_0
  2933 00:0717: AF 42 15 00  	lda	>5442
  2934 00:071B: 85 01        	sta	<R0
  2935 00:071D: AF 44 15 00  	lda	>5442+2
  2936 00:0721: 85 03        	sta	<R0+2
  2937 00:0723: A0 72 00     	ldy	#$72
  2938 00:0726: B7 01        	lda	[<R0],Y
  2939 00:0728: AA           	tax
  2940 00:0729: A0 70 00     	ldy	#$70
  2941 00:072C: B7 01        	lda	[<R0],Y
  2942                        	xref	~~~lcal
  2943 00:072E: 22 xx xx xx  	jsl	~~~lcal
  2944                        ;}
  2945                        	.line	327
  2946                        L117:
  2947 00:0732: A5 06        	lda	<L114+2
  2948 00:0734: 85 0C        	sta	<L114+2+6
  2949 00:0736: A5 05        	lda	<L114+1
  2950 00:0738: 85 0B        	sta	<L114+1+6
  2951 00:073A: 2B           	pld
  2952 00:073B: 3B           	tsc
  2953 00:073C: 18           	clc
  2954 00:073D: 69 0A 00     	adc	#L114+6
  2955 00:0740: 1B           	tcs
  2956 00:0741: 6B           	rtl
  2957                        	.endblock	327
  2958             00000004   L114	equ	4
  2959             00000005   L115	equ	5
  2960                        	ends
  2961                        	efunc
  2962                        	.endfunc	327,5,4
  2963                        	.line	327
  2964                        ;
  2965                        ;/*
  2966                        ;*
  2967                        ;* Name:DebugByteArray
  2968                        ;* Subsystem:KERNEL
  2969                        ;*
  2970                        ;*/
  2971                        ;void DebugByteArray(char* debugString,BYTE* n,ULO
                    NG size)
  2972                        ;{
  2973                        	.line	335
  2974                        	.line	336
  2975                        	code
  2976                        	xdef	~~DebugByteArray
  2977                        	func
  2978                        	.function	336
  2979                        ~~DebugByteArray:
  2980                        	longa	on
  2981                        	longi	on
  2982 00:0742: 3B           	tsc
  2983 00:0743: 38           	sec
  Thu Jul 29 2021 22:56                                                Page 55


  2984 00:0744: E9 04 00     	sbc	#L118
  2985 00:0747: 1B           	tcs
  2986 00:0748: 0B           	phd
  2987 00:0749: 5B           	tcd
  2988             00000004   debugString_0	set	4
  2989             00000008   n_0	set	8
  2990             0000000C   size_0	set	12
  2991                        	.block	336
  2992                        ;    ((DEBUGBYTEARRAY)CALL_KERNEL_API(EXPORT_KERNE
                    L_DEBUGBYTEARRAY))(debugString,n,size);
  2993                        	.sym	debugString,4,142,6,32
  2994                        	.sym	n,8,142,6,32
  2995                        	.sym	size,12,18,6,32
  2996                        	.line	337
  2997 00:074A: D4 12        	pei	<L118+size_0+2
  2998 00:074C: D4 10        	pei	<L118+size_0
  2999 00:074E: D4 0E        	pei	<L118+n_0+2
  3000 00:0750: D4 0C        	pei	<L118+n_0
  3001 00:0752: D4 0A        	pei	<L118+debugString_0+2
  3002 00:0754: D4 08        	pei	<L118+debugString_0
  3003 00:0756: AF 42 15 00  	lda	>5442
  3004 00:075A: 85 01        	sta	<R0
  3005 00:075C: AF 44 15 00  	lda	>5442+2
  3006 00:0760: 85 03        	sta	<R0+2
  3007 00:0762: A0 76 00     	ldy	#$76
  3008 00:0765: B7 01        	lda	[<R0],Y
  3009 00:0767: AA           	tax
  3010 00:0768: A0 74 00     	ldy	#$74
  3011 00:076B: B7 01        	lda	[<R0],Y
  3012                        	xref	~~~lcal
  3013 00:076D: 22 xx xx xx  	jsl	~~~lcal
  3014                        ;}
  3015                        	.line	338
  3016                        L121:
  3017 00:0771: A5 06        	lda	<L118+2
  3018 00:0773: 85 12        	sta	<L118+2+12
  3019 00:0775: A5 05        	lda	<L118+1
  3020 00:0777: 85 11        	sta	<L118+1+12
  3021 00:0779: 2B           	pld
  3022 00:077A: 3B           	tsc
  3023 00:077B: 18           	clc
  3024 00:077C: 69 10 00     	adc	#L118+12
  3025 00:077F: 1B           	tcs
  3026 00:0780: 6B           	rtl
  3027                        	.endblock	338
  3028             00000004   L118	equ	4
  3029             00000005   L119	equ	5
  3030                        	ends
  3031                        	efunc
  3032                        	.endfunc	338,5,4
  3033                        	.line	338
  3034                        ;
  3035                        ;/*
  3036                        ;*
  3037                        ;* Name:DebugMessage
  3038                        ;* Subsystem:KERNEL
  3039                        ;*
  3040                        ;*/
  Thu Jul 29 2021 22:56                                                Page 56


  3041                        ;void DebugMessage(char* debugString,char* message
                    )
  3042                        ;{
  3043                        	.line	346
  3044                        	.line	347
  3045                        	code
  3046                        	xdef	~~DebugMessage
  3047                        	func
  3048                        	.function	347
  3049                        ~~DebugMessage:
  3050                        	longa	on
  3051                        	longi	on
  3052 00:0781: 3B           	tsc
  3053 00:0782: 38           	sec
  3054 00:0783: E9 04 00     	sbc	#L122
  3055 00:0786: 1B           	tcs
  3056 00:0787: 0B           	phd
  3057 00:0788: 5B           	tcd
  3058             00000004   debugString_0	set	4
  3059             00000008   message_0	set	8
  3060                        	.block	347
  3061                        ;    ((DEBUGMESSAGE)CALL_KERNEL_API(EXPORT_KERNEL_
                    DEBUGMESSAGE))(debugString,message);
  3062                        	.sym	debugString,4,142,6,32
  3063                        	.sym	message,8,142,6,32
  3064                        	.line	348
  3065 00:0789: D4 0E        	pei	<L122+message_0+2
  3066 00:078B: D4 0C        	pei	<L122+message_0
  3067 00:078D: D4 0A        	pei	<L122+debugString_0+2
  3068 00:078F: D4 08        	pei	<L122+debugString_0
  3069 00:0791: AF 42 15 00  	lda	>5442
  3070 00:0795: 85 01        	sta	<R0
  3071 00:0797: AF 44 15 00  	lda	>5442+2
  3072 00:079B: 85 03        	sta	<R0+2
  3073 00:079D: A0 7A 00     	ldy	#$7a
  3074 00:07A0: B7 01        	lda	[<R0],Y
  3075 00:07A2: AA           	tax
  3076 00:07A3: A0 78 00     	ldy	#$78
  3077 00:07A6: B7 01        	lda	[<R0],Y
  3078                        	xref	~~~lcal
  3079 00:07A8: 22 xx xx xx  	jsl	~~~lcal
  3080                        ;}
  3081                        	.line	349
  3082                        L125:
  3083 00:07AC: A5 06        	lda	<L122+2
  3084 00:07AE: 85 0E        	sta	<L122+2+8
  3085 00:07B0: A5 05        	lda	<L122+1
  3086 00:07B2: 85 0D        	sta	<L122+1+8
  3087 00:07B4: 2B           	pld
  3088 00:07B5: 3B           	tsc
  3089 00:07B6: 18           	clc
  3090 00:07B7: 69 0C 00     	adc	#L122+8
  3091 00:07BA: 1B           	tcs
  3092 00:07BB: 6B           	rtl
  3093                        	.endblock	349
  3094             00000004   L122	equ	4
  3095             00000005   L123	equ	5
  3096                        	ends
  Thu Jul 29 2021 22:56                                                Page 57


  3097                        	efunc
  3098                        	.endfunc	349,5,4
  3099                        	.line	349
  3100                        ;
  3101                        ;/*
  3102                        ;*
  3103                        ;* Name:DebugStrings
  3104                        ;* Subsystem:KERNEL
  3105                        ;*
  3106                        ;*/
  3107                        ;void DebugStrings(char* debugString,char* message
                    )
  3108                        ;{
  3109                        	.line	357
  3110                        	.line	358
  3111                        	code
  3112                        	xdef	~~DebugStrings
  3113                        	func
  3114                        	.function	358
  3115                        ~~DebugStrings:
  3116                        	longa	on
  3117                        	longi	on
  3118 00:07BC: 3B           	tsc
  3119 00:07BD: 38           	sec
  3120 00:07BE: E9 04 00     	sbc	#L126
  3121 00:07C1: 1B           	tcs
  3122 00:07C2: 0B           	phd
  3123 00:07C3: 5B           	tcd
  3124             00000004   debugString_0	set	4
  3125             00000008   message_0	set	8
  3126                        	.block	358
  3127                        ;    ((DEBUGSTRINGS)CALL_KERNEL_API(EXPORT_KERNEL_
                    DEBUGSTRINGS))(debugString,message);
  3128                        	.sym	debugString,4,142,6,32
  3129                        	.sym	message,8,142,6,32
  3130                        	.line	359
  3131 00:07C4: D4 0E        	pei	<L126+message_0+2
  3132 00:07C6: D4 0C        	pei	<L126+message_0
  3133 00:07C8: D4 0A        	pei	<L126+debugString_0+2
  3134 00:07CA: D4 08        	pei	<L126+debugString_0
  3135 00:07CC: AF 42 15 00  	lda	>5442
  3136 00:07D0: 85 01        	sta	<R0
  3137 00:07D2: AF 44 15 00  	lda	>5442+2
  3138 00:07D6: 85 03        	sta	<R0+2
  3139 00:07D8: A0 7E 00     	ldy	#$7e
  3140 00:07DB: B7 01        	lda	[<R0],Y
  3141 00:07DD: AA           	tax
  3142 00:07DE: A0 7C 00     	ldy	#$7c
  3143 00:07E1: B7 01        	lda	[<R0],Y
  3144                        	xref	~~~lcal
  3145 00:07E3: 22 xx xx xx  	jsl	~~~lcal
  3146                        ;}
  3147                        	.line	360
  3148                        L129:
  3149 00:07E7: A5 06        	lda	<L126+2
  3150 00:07E9: 85 0E        	sta	<L126+2+8
  3151 00:07EB: A5 05        	lda	<L126+1
  3152 00:07ED: 85 0D        	sta	<L126+1+8
  Thu Jul 29 2021 22:56                                                Page 58


  3153 00:07EF: 2B           	pld
  3154 00:07F0: 3B           	tsc
  3155 00:07F1: 18           	clc
  3156 00:07F2: 69 0C 00     	adc	#L126+8
  3157 00:07F5: 1B           	tcs
  3158 00:07F6: 6B           	rtl
  3159                        	.endblock	360
  3160             00000004   L126	equ	4
  3161             00000005   L127	equ	5
  3162                        	ends
  3163                        	efunc
  3164                        	.endfunc	360,5,4
  3165                        	.line	360
  3166                        ;
  3167                        ;/*
  3168                        ;*
  3169                        ;* Name:DebugNMessage
  3170                        ;* Subsystem:KERNEL
  3171                        ;*
  3172                        ;*/
  3173                        ;void DebugNMessage(char* debugString,char* messag
                    e,UINT size)
  3174                        ;{
  3175                        	.line	368
  3176                        	.line	369
  3177                        	code
  3178                        	xdef	~~DebugNMessage
  3179                        	func
  3180                        	.function	369
  3181                        ~~DebugNMessage:
  3182                        	longa	on
  3183                        	longi	on
  3184 00:07F7: 3B           	tsc
  3185 00:07F8: 38           	sec
  3186 00:07F9: E9 04 00     	sbc	#L130
  3187 00:07FC: 1B           	tcs
  3188 00:07FD: 0B           	phd
  3189 00:07FE: 5B           	tcd
  3190             00000004   debugString_0	set	4
  3191             00000008   message_0	set	8
  3192             0000000C   size_0	set	12
  3193                        	.block	369
  3194                        ;    ((DEBUGNMESSAGE)CALL_KERNEL_API(EXPORT_KERNEL
                    _DEBUGNMESSAGE))(debugString,message,size);
  3195                        	.sym	debugString,4,142,6,32
  3196                        	.sym	message,8,142,6,32
  3197                        	.sym	size,12,16,6,16
  3198                        	.line	370
  3199 00:07FF: D4 10        	pei	<L130+size_0
  3200 00:0801: D4 0E        	pei	<L130+message_0+2
  3201 00:0803: D4 0C        	pei	<L130+message_0
  3202 00:0805: D4 0A        	pei	<L130+debugString_0+2
  3203 00:0807: D4 08        	pei	<L130+debugString_0
  3204 00:0809: AF 42 15 00  	lda	>5442
  3205 00:080D: 85 01        	sta	<R0
  3206 00:080F: AF 44 15 00  	lda	>5442+2
  3207 00:0813: 85 03        	sta	<R0+2
  3208 00:0815: A0 82 00     	ldy	#$82
  Thu Jul 29 2021 22:56                                                Page 59


  3209 00:0818: B7 01        	lda	[<R0],Y
  3210 00:081A: AA           	tax
  3211 00:081B: A0 80 00     	ldy	#$80
  3212 00:081E: B7 01        	lda	[<R0],Y
  3213                        	xref	~~~lcal
  3214 00:0820: 22 xx xx xx  	jsl	~~~lcal
  3215                        ;}
  3216                        	.line	371
  3217                        L133:
  3218 00:0824: A5 06        	lda	<L130+2
  3219 00:0826: 85 10        	sta	<L130+2+10
  3220 00:0828: A5 05        	lda	<L130+1
  3221 00:082A: 85 0F        	sta	<L130+1+10
  3222 00:082C: 2B           	pld
  3223 00:082D: 3B           	tsc
  3224 00:082E: 18           	clc
  3225 00:082F: 69 0E 00     	adc	#L130+10
  3226 00:0832: 1B           	tcs
  3227 00:0833: 6B           	rtl
  3228                        	.endblock	371
  3229             00000004   L130	equ	4
  3230             00000005   L131	equ	5
  3231                        	ends
  3232                        	efunc
  3233                        	.endfunc	371,5,4
  3234                        	.line	371
  3235                        ;
  3236                        ;/*
  3237                        ;*
  3238                        ;* Name:DebugNStrings
  3239                        ;* Subsystem:KERNEL
  3240                        ;*
  3241                        ;*/
  3242                        ;void DebugNStrings(char* debugString,char* messag
                    e,UINT size)
  3243                        ;{
  3244                        	.line	379
  3245                        	.line	380
  3246                        	code
  3247                        	xdef	~~DebugNStrings
  3248                        	func
  3249                        	.function	380
  3250                        ~~DebugNStrings:
  3251                        	longa	on
  3252                        	longi	on
  3253 00:0834: 3B           	tsc
  3254 00:0835: 38           	sec
  3255 00:0836: E9 04 00     	sbc	#L134
  3256 00:0839: 1B           	tcs
  3257 00:083A: 0B           	phd
  3258 00:083B: 5B           	tcd
  3259             00000004   debugString_0	set	4
  3260             00000008   message_0	set	8
  3261             0000000C   size_0	set	12
  3262                        	.block	380
  3263                        ;    ((DEBUGNSTRINGS)CALL_KERNEL_API(EXPORT_KERNEL
                    _DEBUGNSTRINGS))(debugString,message,size);
  3264                        	.sym	debugString,4,142,6,32
  Thu Jul 29 2021 22:56                                                Page 60


  3265                        	.sym	message,8,142,6,32
  3266                        	.sym	size,12,16,6,16
  3267                        	.line	381
  3268 00:083C: D4 10        	pei	<L134+size_0
  3269 00:083E: D4 0E        	pei	<L134+message_0+2
  3270 00:0840: D4 0C        	pei	<L134+message_0
  3271 00:0842: D4 0A        	pei	<L134+debugString_0+2
  3272 00:0844: D4 08        	pei	<L134+debugString_0
  3273 00:0846: AF 42 15 00  	lda	>5442
  3274 00:084A: 85 01        	sta	<R0
  3275 00:084C: AF 44 15 00  	lda	>5442+2
  3276 00:0850: 85 03        	sta	<R0+2
  3277 00:0852: A0 86 00     	ldy	#$86
  3278 00:0855: B7 01        	lda	[<R0],Y
  3279 00:0857: AA           	tax
  3280 00:0858: A0 84 00     	ldy	#$84
  3281 00:085B: B7 01        	lda	[<R0],Y
  3282                        	xref	~~~lcal
  3283 00:085D: 22 xx xx xx  	jsl	~~~lcal
  3284                        ;}
  3285                        	.line	382
  3286                        L137:
  3287 00:0861: A5 06        	lda	<L134+2
  3288 00:0863: 85 10        	sta	<L134+2+10
  3289 00:0865: A5 05        	lda	<L134+1
  3290 00:0867: 85 0F        	sta	<L134+1+10
  3291 00:0869: 2B           	pld
  3292 00:086A: 3B           	tsc
  3293 00:086B: 18           	clc
  3294 00:086C: 69 0E 00     	adc	#L134+10
  3295 00:086F: 1B           	tcs
  3296 00:0870: 6B           	rtl
  3297                        	.endblock	382
  3298             00000004   L134	equ	4
  3299             00000005   L135	equ	5
  3300                        	ends
  3301                        	efunc
  3302                        	.endfunc	382,5,4
  3303                        	.line	382
  3304                        ;
  3305                        ;/*
  3306                        ;*
  3307                        ;* Name:DebugRect
  3308                        ;* Subsystem:KERNEL
  3309                        ;*
  3310                        ;*/
  3311                        ;void DebugRect(LPCSTR message,PRECT prect)
  3312                        ;{
  3313                        	.line	390
  3314                        	.line	391
  3315                        	code
  3316                        	xdef	~~DebugRect
  3317                        	func
  3318                        	.function	391
  3319                        ~~DebugRect:
  3320                        	longa	on
  3321                        	longi	on
  3322 00:0871: 3B           	tsc
  Thu Jul 29 2021 22:56                                                Page 61


  3323 00:0872: 38           	sec
  3324 00:0873: E9 04 00     	sbc	#L138
  3325 00:0876: 1B           	tcs
  3326 00:0877: 0B           	phd
  3327 00:0878: 5B           	tcd
  3328             00000004   message_0	set	4
  3329             00000008   prect_0	set	8
  3330                        	.block	391
  3331                        ;    ((DEBUGRECT)CALL_KERNEL_API(EXPORT_KERNEL_DEB
                    UGRECT))(message,prect);
  3332                        	.sym	message,4,142,6,32
  3333                        	.sym	prect,8,138,6,32,26
  3334                        	.line	392
  3335 00:0879: D4 0E        	pei	<L138+prect_0+2
  3336 00:087B: D4 0C        	pei	<L138+prect_0
  3337 00:087D: D4 0A        	pei	<L138+message_0+2
  3338 00:087F: D4 08        	pei	<L138+message_0
  3339 00:0881: AF 42 15 00  	lda	>5442
  3340 00:0885: 85 01        	sta	<R0
  3341 00:0887: AF 44 15 00  	lda	>5442+2
  3342 00:088B: 85 03        	sta	<R0+2
  3343 00:088D: A0 8A 00     	ldy	#$8a
  3344 00:0890: B7 01        	lda	[<R0],Y
  3345 00:0892: AA           	tax
  3346 00:0893: A0 88 00     	ldy	#$88
  3347 00:0896: B7 01        	lda	[<R0],Y
  3348                        	xref	~~~lcal
  3349 00:0898: 22 xx xx xx  	jsl	~~~lcal
  3350                        ;}
  3351                        	.line	393
  3352                        L141:
  3353 00:089C: A5 06        	lda	<L138+2
  3354 00:089E: 85 0E        	sta	<L138+2+8
  3355 00:08A0: A5 05        	lda	<L138+1
  3356 00:08A2: 85 0D        	sta	<L138+1+8
  3357 00:08A4: 2B           	pld
  3358 00:08A5: 3B           	tsc
  3359 00:08A6: 18           	clc
  3360 00:08A7: 69 0C 00     	adc	#L138+8
  3361 00:08AA: 1B           	tcs
  3362 00:08AB: 6B           	rtl
  3363                        	.endblock	393
  3364             00000004   L138	equ	4
  3365             00000005   L139	equ	5
  3366                        	ends
  3367                        	efunc
  3368                        	.endfunc	393,5,4
  3369                        	.line	393
  3370                        ;
  3371                        ;/*
  3372                        ;*
  3373                        ;* Name:DebugCrLf
  3374                        ;* Subsystem:KERNEL
  3375                        ;*
  3376                        ;*/
  3377                        ;VOID DebugCrLf(VOID)
  3378                        ;{
  3379                        	.line	401
  Thu Jul 29 2021 22:56                                                Page 62


  3380                        	.line	402
  3381                        	code
  3382                        	xdef	~~DebugCrLf
  3383                        	func
  3384                        	.function	402
  3385                        ~~DebugCrLf:
  3386                        	longa	on
  3387                        	longi	on
  3388 00:08AC: 3B           	tsc
  3389 00:08AD: 38           	sec
  3390 00:08AE: E9 04 00     	sbc	#L142
  3391 00:08B1: 1B           	tcs
  3392 00:08B2: 0B           	phd
  3393 00:08B3: 5B           	tcd
  3394                        	.block	402
  3395                        ;    ((DEBUGCRLF)CALL_KERNEL_API(EXPORT_KERNEL_DEB
                    UGCRLF))();
  3396                        	.line	403
  3397 00:08B4: AF 42 15 00  	lda	>5442
  3398 00:08B8: 85 01        	sta	<R0
  3399 00:08BA: AF 44 15 00  	lda	>5442+2
  3400 00:08BE: 85 03        	sta	<R0+2
  3401 00:08C0: A0 8E 00     	ldy	#$8e
  3402 00:08C3: B7 01        	lda	[<R0],Y
  3403 00:08C5: AA           	tax
  3404 00:08C6: A0 8C 00     	ldy	#$8c
  3405 00:08C9: B7 01        	lda	[<R0],Y
  3406                        	xref	~~~lcal
  3407 00:08CB: 22 xx xx xx  	jsl	~~~lcal
  3408                        ;}
  3409                        	.line	404
  3410                        L145:
  3411 00:08CF: 2B           	pld
  3412 00:08D0: 3B           	tsc
  3413 00:08D1: 18           	clc
  3414 00:08D2: 69 04 00     	adc	#L142
  3415 00:08D5: 1B           	tcs
  3416 00:08D6: 6B           	rtl
  3417                        	.endblock	404
  3418             00000004   L142	equ	4
  3419             00000005   L143	equ	5
  3420                        	ends
  3421                        	efunc
  3422                        	.endfunc	404,5,4
  3423                        	.line	404
  3424                        ;
  3425                        ;/*
  3426                        ;*
  3427                        ;* Name:DebugNode
  3428                        ;* Subsystem:KERNEL
  3429                        ;*
  3430                        ;*/
  3431                        ;void DebugNode(PFXNODE node)
  3432                        ;{
  3433                        	.line	412
  3434                        	.line	413
  3435                        	code
  3436                        	xdef	~~DebugNode
  Thu Jul 29 2021 22:56                                                Page 63


  3437                        	func
  3438                        	.function	413
  3439                        ~~DebugNode:
  3440                        	longa	on
  3441                        	longi	on
  3442 00:08D7: 3B           	tsc
  3443 00:08D8: 38           	sec
  3444 00:08D9: E9 04 00     	sbc	#L146
  3445 00:08DC: 1B           	tcs
  3446 00:08DD: 0B           	phd
  3447 00:08DE: 5B           	tcd
  3448             00000004   node_0	set	4
  3449                        	.block	413
  3450                        ;    ((DEBUGNODE)CALL_KERNEL_API(EXPORT_KERNEL_DEB
                    UGNODE))(node);
  3451                        	.sym	node,4,138,6,32,5
  3452                        	.line	414
  3453 00:08DF: D4 0A        	pei	<L146+node_0+2
  3454 00:08E1: D4 08        	pei	<L146+node_0
  3455 00:08E3: AF 42 15 00  	lda	>5442
  3456 00:08E7: 85 01        	sta	<R0
  3457 00:08E9: AF 44 15 00  	lda	>5442+2
  3458 00:08ED: 85 03        	sta	<R0+2
  3459 00:08EF: A0 92 00     	ldy	#$92
  3460 00:08F2: B7 01        	lda	[<R0],Y
  3461 00:08F4: AA           	tax
  3462 00:08F5: A0 90 00     	ldy	#$90
  3463 00:08F8: B7 01        	lda	[<R0],Y
  3464                        	xref	~~~lcal
  3465 00:08FA: 22 xx xx xx  	jsl	~~~lcal
  3466                        ;}
  3467                        	.line	415
  3468                        L149:
  3469 00:08FE: A5 06        	lda	<L146+2
  3470 00:0900: 85 0A        	sta	<L146+2+4
  3471 00:0902: A5 05        	lda	<L146+1
  3472 00:0904: 85 09        	sta	<L146+1+4
  3473 00:0906: 2B           	pld
  3474 00:0907: 3B           	tsc
  3475 00:0908: 18           	clc
  3476 00:0909: 69 08 00     	adc	#L146+4
  3477 00:090C: 1B           	tcs
  3478 00:090D: 6B           	rtl
  3479                        	.endblock	415
  3480             00000004   L146	equ	4
  3481             00000005   L147	equ	5
  3482                        	ends
  3483                        	efunc
  3484                        	.endfunc	415,5,4
  3485                        	.line	415
  3486                        ;
  3487                        ;/*
  3488                        ;*
  3489                        ;* Name:DebugNodes
  3490                        ;* Subsystem:KERNEL
  3491                        ;*
  3492                        ;*/
  3493                        ;void DebugNodes(PFXNODE head)
  Thu Jul 29 2021 22:56                                                Page 64


  3494                        ;{
  3495                        	.line	423
  3496                        	.line	424
  3497                        	code
  3498                        	xdef	~~DebugNodes
  3499                        	func
  3500                        	.function	424
  3501                        ~~DebugNodes:
  3502                        	longa	on
  3503                        	longi	on
  3504 00:090E: 3B           	tsc
  3505 00:090F: 38           	sec
  3506 00:0910: E9 04 00     	sbc	#L150
  3507 00:0913: 1B           	tcs
  3508 00:0914: 0B           	phd
  3509 00:0915: 5B           	tcd
  3510             00000004   head_0	set	4
  3511                        	.block	424
  3512                        ;    ((DEBUGNODES)CALL_KERNEL_API(EXPORT_KERNEL_DE
                    BUGNODES))(head);
  3513                        	.sym	head,4,138,6,32,5
  3514                        	.line	425
  3515 00:0916: D4 0A        	pei	<L150+head_0+2
  3516 00:0918: D4 08        	pei	<L150+head_0
  3517 00:091A: AF 42 15 00  	lda	>5442
  3518 00:091E: 85 01        	sta	<R0
  3519 00:0920: AF 44 15 00  	lda	>5442+2
  3520 00:0924: 85 03        	sta	<R0+2
  3521 00:0926: A0 96 00     	ldy	#$96
  3522 00:0929: B7 01        	lda	[<R0],Y
  3523 00:092B: AA           	tax
  3524 00:092C: A0 94 00     	ldy	#$94
  3525 00:092F: B7 01        	lda	[<R0],Y
  3526                        	xref	~~~lcal
  3527 00:0931: 22 xx xx xx  	jsl	~~~lcal
  3528                        ;}
  3529                        	.line	426
  3530                        L153:
  3531 00:0935: A5 06        	lda	<L150+2
  3532 00:0937: 85 0A        	sta	<L150+2+4
  3533 00:0939: A5 05        	lda	<L150+1
  3534 00:093B: 85 09        	sta	<L150+1+4
  3535 00:093D: 2B           	pld
  3536 00:093E: 3B           	tsc
  3537 00:093F: 18           	clc
  3538 00:0940: 69 08 00     	adc	#L150+4
  3539 00:0943: 1B           	tcs
  3540 00:0944: 6B           	rtl
  3541                        	.endblock	426
  3542             00000004   L150	equ	4
  3543             00000005   L151	equ	5
  3544                        	ends
  3545                        	efunc
  3546                        	.endfunc	426,5,4
  3547                        	.line	426
  3548                        ;
  3549                        ;/*
  3550                        ;*
  Thu Jul 29 2021 22:56                                                Page 65


  3551                        ;* Name:DebugNodeList
  3552                        ;* Subsystem:KERNEL
  3553                        ;*
  3554                        ;*/
  3555                        ;void DebugNodeList(PFXNODELIST list,FOREACHNODE h
                    andler)
  3556                        ;{
  3557                        	.line	434
  3558                        	.line	435
  3559                        	code
  3560                        	xdef	~~DebugNodeList
  3561                        	func
  3562                        	.function	435
  3563                        ~~DebugNodeList:
  3564                        	longa	on
  3565                        	longi	on
  3566 00:0945: 3B           	tsc
  3567 00:0946: 38           	sec
  3568 00:0947: E9 04 00     	sbc	#L154
  3569 00:094A: 1B           	tcs
  3570 00:094B: 0B           	phd
  3571 00:094C: 5B           	tcd
  3572             00000004   list_0	set	4
  3573             00000008   handler_0	set	8
  3574                        	.block	435
  3575                        ;    ((DEBUGNODELIST)CALL_KERNEL_API(EXPORT_KERNEL
                    _DEBUGNODELIST))(list,handler);
  3576                        	.sym	list,4,138,6,32,6
  3577                        	.sym	handler,8,641,6,32
  3578                        	.line	436
  3579 00:094D: D4 0E        	pei	<L154+handler_0+2
  3580 00:094F: D4 0C        	pei	<L154+handler_0
  3581 00:0951: D4 0A        	pei	<L154+list_0+2
  3582 00:0953: D4 08        	pei	<L154+list_0
  3583 00:0955: AF 42 15 00  	lda	>5442
  3584 00:0959: 85 01        	sta	<R0
  3585 00:095B: AF 44 15 00  	lda	>5442+2
  3586 00:095F: 85 03        	sta	<R0+2
  3587 00:0961: A0 9A 00     	ldy	#$9a
  3588 00:0964: B7 01        	lda	[<R0],Y
  3589 00:0966: AA           	tax
  3590 00:0967: A0 98 00     	ldy	#$98
  3591 00:096A: B7 01        	lda	[<R0],Y
  3592                        	xref	~~~lcal
  3593 00:096C: 22 xx xx xx  	jsl	~~~lcal
  3594                        ;}
  3595                        	.line	437
  3596                        L157:
  3597 00:0970: A5 06        	lda	<L154+2
  3598 00:0972: 85 0E        	sta	<L154+2+8
  3599 00:0974: A5 05        	lda	<L154+1
  3600 00:0976: 85 0D        	sta	<L154+1+8
  3601 00:0978: 2B           	pld
  3602 00:0979: 3B           	tsc
  3603 00:097A: 18           	clc
  3604 00:097B: 69 0C 00     	adc	#L154+8
  3605 00:097E: 1B           	tcs
  3606 00:097F: 6B           	rtl
  Thu Jul 29 2021 22:56                                                Page 66


  3607                        	.endblock	437
  3608             00000004   L154	equ	4
  3609             00000005   L155	equ	5
  3610                        	ends
  3611                        	efunc
  3612                        	.endfunc	437,5,4
  3613                        	.line	437
  3614                        ;
  3615                        ;/*
  3616                        ;*
  3617                        ;* Name:DebugNodesData
  3618                        ;* Subsystem:KERNEL
  3619                        ;*
  3620                        ;*/
  3621                        ;void DebugNodesData(PFXNODE head,FOREACHNODE hand
                    ler)
  3622                        ;{
  3623                        	.line	445
  3624                        	.line	446
  3625                        	code
  3626                        	xdef	~~DebugNodesData
  3627                        	func
  3628                        	.function	446
  3629                        ~~DebugNodesData:
  3630                        	longa	on
  3631                        	longi	on
  3632 00:0980: 3B           	tsc
  3633 00:0981: 38           	sec
  3634 00:0982: E9 04 00     	sbc	#L158
  3635 00:0985: 1B           	tcs
  3636 00:0986: 0B           	phd
  3637 00:0987: 5B           	tcd
  3638             00000004   head_0	set	4
  3639             00000008   handler_0	set	8
  3640                        	.block	446
  3641                        ;    ((DEBUGNODESDATA)CALL_KERNEL_API(EXPORT_KERNE
                    L_DEBUGNODESDATA))(head,handler);
  3642                        	.sym	head,4,138,6,32,5
  3643                        	.sym	handler,8,641,6,32
  3644                        	.line	447
  3645 00:0988: D4 0E        	pei	<L158+handler_0+2
  3646 00:098A: D4 0C        	pei	<L158+handler_0
  3647 00:098C: D4 0A        	pei	<L158+head_0+2
  3648 00:098E: D4 08        	pei	<L158+head_0
  3649 00:0990: AF 42 15 00  	lda	>5442
  3650 00:0994: 85 01        	sta	<R0
  3651 00:0996: AF 44 15 00  	lda	>5442+2
  3652 00:099A: 85 03        	sta	<R0+2
  3653 00:099C: A0 9E 00     	ldy	#$9e
  3654 00:099F: B7 01        	lda	[<R0],Y
  3655 00:09A1: AA           	tax
  3656 00:09A2: A0 9C 00     	ldy	#$9c
  3657 00:09A5: B7 01        	lda	[<R0],Y
  3658                        	xref	~~~lcal
  3659 00:09A7: 22 xx xx xx  	jsl	~~~lcal
  3660                        ;}
  3661                        	.line	448
  3662                        L161:
  Thu Jul 29 2021 22:56                                                Page 67


  3663 00:09AB: A5 06        	lda	<L158+2
  3664 00:09AD: 85 0E        	sta	<L158+2+8
  3665 00:09AF: A5 05        	lda	<L158+1
  3666 00:09B1: 85 0D        	sta	<L158+1+8
  3667 00:09B3: 2B           	pld
  3668 00:09B4: 3B           	tsc
  3669 00:09B5: 18           	clc
  3670 00:09B6: 69 0C 00     	adc	#L158+8
  3671 00:09B9: 1B           	tcs
  3672 00:09BA: 6B           	rtl
  3673                        	.endblock	448
  3674             00000004   L158	equ	4
  3675             00000005   L159	equ	5
  3676                        	ends
  3677                        	efunc
  3678                        	.endfunc	448,5,4
  3679                        	.line	448
  3680                        ;
  3681                        ;/*
  3682                        ;*
  3683                        ;* Name:DebugStatus
  3684                        ;* Subsystem:KERNEL
  3685                        ;*
  3686                        ;*/
  3687                        ;BOOL DebugStatus(VOID)
  3688                        ;{
  3689                        	.line	456
  3690                        	.line	457
  3691                        	code
  3692                        	xdef	~~DebugStatus
  3693                        	func
  3694                        	.function	457
  3695                        ~~DebugStatus:
  3696                        	longa	on
  3697                        	longi	on
  3698 00:09BB: 3B           	tsc
  3699 00:09BC: 38           	sec
  3700 00:09BD: E9 04 00     	sbc	#L162
  3701 00:09C0: 1B           	tcs
  3702 00:09C1: 0B           	phd
  3703 00:09C2: 5B           	tcd
  3704                        	.block	457
  3705                        ;    return ((DEBUGSTATUS)CALL_KERNEL_API(EXPORT_K
                    ERNEL_DEBUGSTATUS))();
  3706                        	.line	458
  3707 00:09C3: AF 42 15 00  	lda	>5442
  3708 00:09C7: 85 01        	sta	<R0
  3709 00:09C9: AF 44 15 00  	lda	>5442+2
  3710 00:09CD: 85 03        	sta	<R0+2
  3711 00:09CF: A0 A2 00     	ldy	#$a2
  3712 00:09D2: B7 01        	lda	[<R0],Y
  3713 00:09D4: AA           	tax
  3714 00:09D5: A0 A0 00     	ldy	#$a0
  3715 00:09D8: B7 01        	lda	[<R0],Y
  3716                        	xref	~~~lcal
  3717 00:09DA: 22 xx xx xx  	jsl	~~~lcal
  3718 00:09DE: E2 20        	sep	#$20
  3719                        	longa	off
  Thu Jul 29 2021 22:56                                                Page 68


  3720 00:09E0: 85 01        	sta	<R0
  3721 00:09E2: C2 20        	rep	#$20
  3722                        	longa	on
  3723 00:09E4: A5 01        	lda	<R0
  3724 00:09E6: 29 FF 00     	and	#$ff
  3725                        L165:
  3726 00:09E9: A8           	tay
  3727 00:09EA: 2B           	pld
  3728 00:09EB: 3B           	tsc
  3729 00:09EC: 18           	clc
  3730 00:09ED: 69 04 00     	adc	#L162
  3731 00:09F0: 1B           	tcs
  3732 00:09F1: 98           	tya
  3733 00:09F2: 6B           	rtl
  3734                        ;}
  3735                        	.line	459
  3736                        	.endblock	459
  3737             00000004   L162	equ	4
  3738             00000005   L163	equ	5
  3739                        	ends
  3740                        	efunc
  3741                        	.endfunc	459,5,4
  3742                        	.line	459
  3743                        ;
  3744                        ;/*
  3745                        ;*
  3746                        ;* Name:DebugOn
  3747                        ;* Subsystem:KERNEL
  3748                        ;*
  3749                        ;*/
  3750                        ;VOID DebugOn(VOID)
  3751                        ;{
  3752                        	.line	467
  3753                        	.line	468
  3754                        	code
  3755                        	xdef	~~DebugOn
  3756                        	func
  3757                        	.function	468
  3758                        ~~DebugOn:
  3759                        	longa	on
  3760                        	longi	on
  3761 00:09F3: 3B           	tsc
  3762 00:09F4: 38           	sec
  3763 00:09F5: E9 04 00     	sbc	#L166
  3764 00:09F8: 1B           	tcs
  3765 00:09F9: 0B           	phd
  3766 00:09FA: 5B           	tcd
  3767                        	.block	468
  3768                        ;    ((DEBUGON)CALL_KERNEL_API(EXPORT_KERNEL_DEBUG
                    ON))();
  3769                        	.line	469
  3770 00:09FB: AF 42 15 00  	lda	>5442
  3771 00:09FF: 85 01        	sta	<R0
  3772 00:0A01: AF 44 15 00  	lda	>5442+2
  3773 00:0A05: 85 03        	sta	<R0+2
  3774 00:0A07: A0 A6 00     	ldy	#$a6
  3775 00:0A0A: B7 01        	lda	[<R0],Y
  3776 00:0A0C: AA           	tax
  Thu Jul 29 2021 22:56                                                Page 69


  3777 00:0A0D: A0 A4 00     	ldy	#$a4
  3778 00:0A10: B7 01        	lda	[<R0],Y
  3779                        	xref	~~~lcal
  3780 00:0A12: 22 xx xx xx  	jsl	~~~lcal
  3781                        ;}
  3782                        	.line	470
  3783                        L169:
  3784 00:0A16: 2B           	pld
  3785 00:0A17: 3B           	tsc
  3786 00:0A18: 18           	clc
  3787 00:0A19: 69 04 00     	adc	#L166
  3788 00:0A1C: 1B           	tcs
  3789 00:0A1D: 6B           	rtl
  3790                        	.endblock	470
  3791             00000004   L166	equ	4
  3792             00000005   L167	equ	5
  3793                        	ends
  3794                        	efunc
  3795                        	.endfunc	470,5,4
  3796                        	.line	470
  3797                        ;
  3798                        ;/*
  3799                        ;*
  3800                        ;* Name:DebugOff
  3801                        ;* Subsystem:KERNEL
  3802                        ;*
  3803                        ;*/
  3804                        ;VOID DebugOff(VOID)
  3805                        ;{
  3806                        	.line	478
  3807                        	.line	479
  3808                        	code
  3809                        	xdef	~~DebugOff
  3810                        	func
  3811                        	.function	479
  3812                        ~~DebugOff:
  3813                        	longa	on
  3814                        	longi	on
  3815 00:0A1E: 3B           	tsc
  3816 00:0A1F: 38           	sec
  3817 00:0A20: E9 04 00     	sbc	#L170
  3818 00:0A23: 1B           	tcs
  3819 00:0A24: 0B           	phd
  3820 00:0A25: 5B           	tcd
  3821                        	.block	479
  3822                        ;    ((DEBUGOFF)CALL_KERNEL_API(EXPORT_KERNEL_DEBU
                    GOFF))();
  3823                        	.line	480
  3824 00:0A26: AF 42 15 00  	lda	>5442
  3825 00:0A2A: 85 01        	sta	<R0
  3826 00:0A2C: AF 44 15 00  	lda	>5442+2
  3827 00:0A30: 85 03        	sta	<R0+2
  3828 00:0A32: A0 AA 00     	ldy	#$aa
  3829 00:0A35: B7 01        	lda	[<R0],Y
  3830 00:0A37: AA           	tax
  3831 00:0A38: A0 A8 00     	ldy	#$a8
  3832 00:0A3B: B7 01        	lda	[<R0],Y
  3833                        	xref	~~~lcal
  Thu Jul 29 2021 22:56                                                Page 70


  3834 00:0A3D: 22 xx xx xx  	jsl	~~~lcal
  3835                        ;}
  3836                        	.line	481
  3837                        L173:
  3838 00:0A41: 2B           	pld
  3839 00:0A42: 3B           	tsc
  3840 00:0A43: 18           	clc
  3841 00:0A44: 69 04 00     	adc	#L170
  3842 00:0A47: 1B           	tcs
  3843 00:0A48: 6B           	rtl
  3844                        	.endblock	481
  3845             00000004   L170	equ	4
  3846             00000005   L171	equ	5
  3847                        	ends
  3848                        	efunc
  3849                        	.endfunc	481,5,4
  3850                        	.line	481
  3851                        ;
  3852                        ;/*
  3853                        ;*
  3854                        ;* Name:GetMilliseconds
  3855                        ;* Subsystem:KERNEL
  3856                        ;*
  3857                        ;*/
  3858                        ;ULONG GetMilliseconds(VOID)
  3859                        ;{
  3860                        	.line	489
  3861                        	.line	490
  3862                        	code
  3863                        	xdef	~~GetMilliseconds
  3864                        	func
  3865                        	.function	490
  3866                        ~~GetMilliseconds:
  3867                        	longa	on
  3868                        	longi	on
  3869 00:0A49: 3B           	tsc
  3870 00:0A4A: 38           	sec
  3871 00:0A4B: E9 04 00     	sbc	#L174
  3872 00:0A4E: 1B           	tcs
  3873 00:0A4F: 0B           	phd
  3874 00:0A50: 5B           	tcd
  3875                        	.block	490
  3876                        ;    return ((GETMILLISECONDS)CALL_KERNEL_API(EXPO
                    RT_KERNEL_GETMILLISECONDS))();
  3877                        	.line	491
  3878 00:0A51: AF 42 15 00  	lda	>5442
  3879 00:0A55: 85 01        	sta	<R0
  3880 00:0A57: AF 44 15 00  	lda	>5442+2
  3881 00:0A5B: 85 03        	sta	<R0+2
  3882 00:0A5D: A0 AE 00     	ldy	#$ae
  3883 00:0A60: B7 01        	lda	[<R0],Y
  3884 00:0A62: AA           	tax
  3885 00:0A63: A0 AC 00     	ldy	#$ac
  3886 00:0A66: B7 01        	lda	[<R0],Y
  3887                        	xref	~~~lcal
  3888 00:0A68: 22 xx xx xx  	jsl	~~~lcal
  3889 00:0A6C: 85 01        	sta	<R0
  3890 00:0A6E: 86 03        	stx	<R0+2
  Thu Jul 29 2021 22:56                                                Page 71


  3891 00:0A70: A6 03        	ldx	<R0+2
  3892 00:0A72: A5 01        	lda	<R0
  3893                        L177:
  3894 00:0A74: A8           	tay
  3895 00:0A75: 2B           	pld
  3896 00:0A76: 3B           	tsc
  3897 00:0A77: 18           	clc
  3898 00:0A78: 69 04 00     	adc	#L174
  3899 00:0A7B: 1B           	tcs
  3900 00:0A7C: 98           	tya
  3901 00:0A7D: 6B           	rtl
  3902                        ;}
  3903                        	.line	492
  3904                        	.endblock	492
  3905             00000004   L174	equ	4
  3906             00000005   L175	equ	5
  3907                        	ends
  3908                        	efunc
  3909                        	.endfunc	492,5,4
  3910                        	.line	492
  3911                        ;
  3912                        ;/*
  3913                        ;*
  3914                        ;* Name:GetRTCHour
  3915                        ;* Subsystem:KERNEL
  3916                        ;*
  3917                        ;*/
  3918                        ;UINT GetRTCHour(VOID)
  3919                        ;{
  3920                        	.line	500
  3921                        	.line	501
  3922                        	code
  3923                        	xdef	~~GetRTCHour
  3924                        	func
  3925                        	.function	501
  3926                        ~~GetRTCHour:
  3927                        	longa	on
  3928                        	longi	on
  3929 00:0A7E: 3B           	tsc
  3930 00:0A7F: 38           	sec
  3931 00:0A80: E9 04 00     	sbc	#L178
  3932 00:0A83: 1B           	tcs
  3933 00:0A84: 0B           	phd
  3934 00:0A85: 5B           	tcd
  3935                        	.block	501
  3936                        ;    return ((GETRTCHOUR)CALL_KERNEL_API(EXPORT_KE
                    RNEL_GETRTCHOUR))();
  3937                        	.line	502
  3938 00:0A86: AF 42 15 00  	lda	>5442
  3939 00:0A8A: 85 01        	sta	<R0
  3940 00:0A8C: AF 44 15 00  	lda	>5442+2
  3941 00:0A90: 85 03        	sta	<R0+2
  3942 00:0A92: A0 B2 00     	ldy	#$b2
  3943 00:0A95: B7 01        	lda	[<R0],Y
  3944 00:0A97: AA           	tax
  3945 00:0A98: A0 B0 00     	ldy	#$b0
  3946 00:0A9B: B7 01        	lda	[<R0],Y
  3947                        	xref	~~~lcal
  Thu Jul 29 2021 22:56                                                Page 72


  3948 00:0A9D: 22 xx xx xx  	jsl	~~~lcal
  3949                        L181:
  3950 00:0AA1: A8           	tay
  3951 00:0AA2: 2B           	pld
  3952 00:0AA3: 3B           	tsc
  3953 00:0AA4: 18           	clc
  3954 00:0AA5: 69 04 00     	adc	#L178
  3955 00:0AA8: 1B           	tcs
  3956 00:0AA9: 98           	tya
  3957 00:0AAA: 6B           	rtl
  3958                        ;}
  3959                        	.line	503
  3960                        	.endblock	503
  3961             00000004   L178	equ	4
  3962             00000005   L179	equ	5
  3963                        	ends
  3964                        	efunc
  3965                        	.endfunc	503,5,4
  3966                        	.line	503
  3967                        ;
  3968                        ;/*
  3969                        ;*
  3970                        ;* Name:GetRTCMinute
  3971                        ;* Subsystem:KERNEL
  3972                        ;*
  3973                        ;*/
  3974                        ;UINT GetRTCMinute(VOID)
  3975                        ;{
  3976                        	.line	511
  3977                        	.line	512
  3978                        	code
  3979                        	xdef	~~GetRTCMinute
  3980                        	func
  3981                        	.function	512
  3982                        ~~GetRTCMinute:
  3983                        	longa	on
  3984                        	longi	on
  3985 00:0AAB: 3B           	tsc
  3986 00:0AAC: 38           	sec
  3987 00:0AAD: E9 04 00     	sbc	#L182
  3988 00:0AB0: 1B           	tcs
  3989 00:0AB1: 0B           	phd
  3990 00:0AB2: 5B           	tcd
  3991                        	.block	512
  3992                        ;    return ((GETRTCMINUTE)CALL_KERNEL_API(EXPORT_
                    KERNEL_GETRTCMINUTE))();
  3993                        	.line	513
  3994 00:0AB3: AF 42 15 00  	lda	>5442
  3995 00:0AB7: 85 01        	sta	<R0
  3996 00:0AB9: AF 44 15 00  	lda	>5442+2
  3997 00:0ABD: 85 03        	sta	<R0+2
  3998 00:0ABF: A0 B6 00     	ldy	#$b6
  3999 00:0AC2: B7 01        	lda	[<R0],Y
  4000 00:0AC4: AA           	tax
  4001 00:0AC5: A0 B4 00     	ldy	#$b4
  4002 00:0AC8: B7 01        	lda	[<R0],Y
  4003                        	xref	~~~lcal
  4004 00:0ACA: 22 xx xx xx  	jsl	~~~lcal
  Thu Jul 29 2021 22:56                                                Page 73


  4005                        L185:
  4006 00:0ACE: A8           	tay
  4007 00:0ACF: 2B           	pld
  4008 00:0AD0: 3B           	tsc
  4009 00:0AD1: 18           	clc
  4010 00:0AD2: 69 04 00     	adc	#L182
  4011 00:0AD5: 1B           	tcs
  4012 00:0AD6: 98           	tya
  4013 00:0AD7: 6B           	rtl
  4014                        ;}
  4015                        	.line	514
  4016                        	.endblock	514
  4017             00000004   L182	equ	4
  4018             00000005   L183	equ	5
  4019                        	ends
  4020                        	efunc
  4021                        	.endfunc	514,5,4
  4022                        	.line	514
  4023                        ;
  4024                        ;/*
  4025                        ;*
  4026                        ;* Name:GetRTCSecond
  4027                        ;* Subsystem:KERNEL
  4028                        ;*
  4029                        ;*/
  4030                        ;UINT GetRTCSecond(VOID)
  4031                        ;{
  4032                        	.line	522
  4033                        	.line	523
  4034                        	code
  4035                        	xdef	~~GetRTCSecond
  4036                        	func
  4037                        	.function	523
  4038                        ~~GetRTCSecond:
  4039                        	longa	on
  4040                        	longi	on
  4041 00:0AD8: 3B           	tsc
  4042 00:0AD9: 38           	sec
  4043 00:0ADA: E9 04 00     	sbc	#L186
  4044 00:0ADD: 1B           	tcs
  4045 00:0ADE: 0B           	phd
  4046 00:0ADF: 5B           	tcd
  4047                        	.block	523
  4048                        ;    return ((GETRTCSECOND)CALL_KERNEL_API(EXPORT_
                    KERNEL_GETRTCSECOND))();
  4049                        	.line	524
  4050 00:0AE0: AF 42 15 00  	lda	>5442
  4051 00:0AE4: 85 01        	sta	<R0
  4052 00:0AE6: AF 44 15 00  	lda	>5442+2
  4053 00:0AEA: 85 03        	sta	<R0+2
  4054 00:0AEC: A0 BA 00     	ldy	#$ba
  4055 00:0AEF: B7 01        	lda	[<R0],Y
  4056 00:0AF1: AA           	tax
  4057 00:0AF2: A0 B8 00     	ldy	#$b8
  4058 00:0AF5: B7 01        	lda	[<R0],Y
  4059                        	xref	~~~lcal
  4060 00:0AF7: 22 xx xx xx  	jsl	~~~lcal
  4061                        L189:
  Thu Jul 29 2021 22:56                                                Page 74


  4062 00:0AFB: A8           	tay
  4063 00:0AFC: 2B           	pld
  4064 00:0AFD: 3B           	tsc
  4065 00:0AFE: 18           	clc
  4066 00:0AFF: 69 04 00     	adc	#L186
  4067 00:0B02: 1B           	tcs
  4068 00:0B03: 98           	tya
  4069 00:0B04: 6B           	rtl
  4070                        ;}
  4071                        	.line	525
  4072                        	.endblock	525
  4073             00000004   L186	equ	4
  4074             00000005   L187	equ	5
  4075                        	ends
  4076                        	efunc
  4077                        	.endfunc	525,5,4
  4078                        	.line	525
  4079                        ;
  4080                        ;/*
  4081                        ;*
  4082                        ;* Name:GetRTCMonth
  4083                        ;* Subsystem:KERNEL
  4084                        ;*
  4085                        ;*/
  4086                        ;UINT GetRTCMonth(VOID)
  4087                        ;{
  4088                        	.line	533
  4089                        	.line	534
  4090                        	code
  4091                        	xdef	~~GetRTCMonth
  4092                        	func
  4093                        	.function	534
  4094                        ~~GetRTCMonth:
  4095                        	longa	on
  4096                        	longi	on
  4097 00:0B05: 3B           	tsc
  4098 00:0B06: 38           	sec
  4099 00:0B07: E9 04 00     	sbc	#L190
  4100 00:0B0A: 1B           	tcs
  4101 00:0B0B: 0B           	phd
  4102 00:0B0C: 5B           	tcd
  4103                        	.block	534
  4104                        ;    return ((GETRTCMONTH)CALL_KERNEL_API(EXPORT_K
                    ERNEL_GETRTCMONTH))();
  4105                        	.line	535
  4106 00:0B0D: AF 42 15 00  	lda	>5442
  4107 00:0B11: 85 01        	sta	<R0
  4108 00:0B13: AF 44 15 00  	lda	>5442+2
  4109 00:0B17: 85 03        	sta	<R0+2
  4110 00:0B19: A0 BE 00     	ldy	#$be
  4111 00:0B1C: B7 01        	lda	[<R0],Y
  4112 00:0B1E: AA           	tax
  4113 00:0B1F: A0 BC 00     	ldy	#$bc
  4114 00:0B22: B7 01        	lda	[<R0],Y
  4115                        	xref	~~~lcal
  4116 00:0B24: 22 xx xx xx  	jsl	~~~lcal
  4117                        L193:
  4118 00:0B28: A8           	tay
  Thu Jul 29 2021 22:56                                                Page 75


  4119 00:0B29: 2B           	pld
  4120 00:0B2A: 3B           	tsc
  4121 00:0B2B: 18           	clc
  4122 00:0B2C: 69 04 00     	adc	#L190
  4123 00:0B2F: 1B           	tcs
  4124 00:0B30: 98           	tya
  4125 00:0B31: 6B           	rtl
  4126                        ;}
  4127                        	.line	536
  4128                        	.endblock	536
  4129             00000004   L190	equ	4
  4130             00000005   L191	equ	5
  4131                        	ends
  4132                        	efunc
  4133                        	.endfunc	536,5,4
  4134                        	.line	536
  4135                        ;
  4136                        ;/*
  4137                        ;*
  4138                        ;* Name:GetRTCDay
  4139                        ;* Subsystem:KERNEL
  4140                        ;*
  4141                        ;*/
  4142                        ;UINT GetRTCDay(VOID)
  4143                        ;{
  4144                        	.line	544
  4145                        	.line	545
  4146                        	code
  4147                        	xdef	~~GetRTCDay
  4148                        	func
  4149                        	.function	545
  4150                        ~~GetRTCDay:
  4151                        	longa	on
  4152                        	longi	on
  4153 00:0B32: 3B           	tsc
  4154 00:0B33: 38           	sec
  4155 00:0B34: E9 04 00     	sbc	#L194
  4156 00:0B37: 1B           	tcs
  4157 00:0B38: 0B           	phd
  4158 00:0B39: 5B           	tcd
  4159                        	.block	545
  4160                        ;    return ((GETRTCDAY)CALL_KERNEL_API(EXPORT_KER
                    NEL_GETRTCDAY))();
  4161                        	.line	546
  4162 00:0B3A: AF 42 15 00  	lda	>5442
  4163 00:0B3E: 85 01        	sta	<R0
  4164 00:0B40: AF 44 15 00  	lda	>5442+2
  4165 00:0B44: 85 03        	sta	<R0+2
  4166 00:0B46: A0 C2 00     	ldy	#$c2
  4167 00:0B49: B7 01        	lda	[<R0],Y
  4168 00:0B4B: AA           	tax
  4169 00:0B4C: A0 C0 00     	ldy	#$c0
  4170 00:0B4F: B7 01        	lda	[<R0],Y
  4171                        	xref	~~~lcal
  4172 00:0B51: 22 xx xx xx  	jsl	~~~lcal
  4173                        L197:
  4174 00:0B55: A8           	tay
  4175 00:0B56: 2B           	pld
  Thu Jul 29 2021 22:56                                                Page 76


  4176 00:0B57: 3B           	tsc
  4177 00:0B58: 18           	clc
  4178 00:0B59: 69 04 00     	adc	#L194
  4179 00:0B5C: 1B           	tcs
  4180 00:0B5D: 98           	tya
  4181 00:0B5E: 6B           	rtl
  4182                        ;}
  4183                        	.line	547
  4184                        	.endblock	547
  4185             00000004   L194	equ	4
  4186             00000005   L195	equ	5
  4187                        	ends
  4188                        	efunc
  4189                        	.endfunc	547,5,4
  4190                        	.line	547
  4191                        ;
  4192                        ;/*
  4193                        ;*
  4194                        ;* Name:GetRTCYear
  4195                        ;* Subsystem:KERNEL
  4196                        ;*
  4197                        ;*/
  4198                        ;UINT GetRTCYear(VOID)
  4199                        ;{
  4200                        	.line	555
  4201                        	.line	556
  4202                        	code
  4203                        	xdef	~~GetRTCYear
  4204                        	func
  4205                        	.function	556
  4206                        ~~GetRTCYear:
  4207                        	longa	on
  4208                        	longi	on
  4209 00:0B5F: 3B           	tsc
  4210 00:0B60: 38           	sec
  4211 00:0B61: E9 04 00     	sbc	#L198
  4212 00:0B64: 1B           	tcs
  4213 00:0B65: 0B           	phd
  4214 00:0B66: 5B           	tcd
  4215                        	.block	556
  4216                        ;    return ((GETRTCYEAR)CALL_KERNEL_API(EXPORT_KE
                    RNEL_GETRTCYEAR))();
  4217                        	.line	557
  4218 00:0B67: AF 42 15 00  	lda	>5442
  4219 00:0B6B: 85 01        	sta	<R0
  4220 00:0B6D: AF 44 15 00  	lda	>5442+2
  4221 00:0B71: 85 03        	sta	<R0+2
  4222 00:0B73: A0 C6 00     	ldy	#$c6
  4223 00:0B76: B7 01        	lda	[<R0],Y
  4224 00:0B78: AA           	tax
  4225 00:0B79: A0 C4 00     	ldy	#$c4
  4226 00:0B7C: B7 01        	lda	[<R0],Y
  4227                        	xref	~~~lcal
  4228 00:0B7E: 22 xx xx xx  	jsl	~~~lcal
  4229                        L201:
  4230 00:0B82: A8           	tay
  4231 00:0B83: 2B           	pld
  4232 00:0B84: 3B           	tsc
  Thu Jul 29 2021 22:56                                                Page 77


  4233 00:0B85: 18           	clc
  4234 00:0B86: 69 04 00     	adc	#L198
  4235 00:0B89: 1B           	tcs
  4236 00:0B8A: 98           	tya
  4237 00:0B8B: 6B           	rtl
  4238                        ;}
  4239                        	.line	558
  4240                        	.endblock	558
  4241             00000004   L198	equ	4
  4242             00000005   L199	equ	5
  4243                        	ends
  4244                        	efunc
  4245                        	.endfunc	558,5,4
  4246                        	.line	558
  4247                        ;
  4248                        ;/*
  4249                        ;*
  4250                        ;* Name:GetRTCCentury
  4251                        ;* Subsystem:KERNEL
  4252                        ;*
  4253                        ;*/
  4254                        ;UINT GetRTCCentury(VOID)
  4255                        ;{
  4256                        	.line	566
  4257                        	.line	567
  4258                        	code
  4259                        	xdef	~~GetRTCCentury
  4260                        	func
  4261                        	.function	567
  4262                        ~~GetRTCCentury:
  4263                        	longa	on
  4264                        	longi	on
  4265 00:0B8C: 3B           	tsc
  4266 00:0B8D: 38           	sec
  4267 00:0B8E: E9 04 00     	sbc	#L202
  4268 00:0B91: 1B           	tcs
  4269 00:0B92: 0B           	phd
  4270 00:0B93: 5B           	tcd
  4271                        	.block	567
  4272                        ;    return ((GETRTCCENTURY)CALL_KERNEL_API(EXPORT
                    _KERNEL_GETRTCCENTURY))();
  4273                        	.line	568
  4274 00:0B94: AF 42 15 00  	lda	>5442
  4275 00:0B98: 85 01        	sta	<R0
  4276 00:0B9A: AF 44 15 00  	lda	>5442+2
  4277 00:0B9E: 85 03        	sta	<R0+2
  4278 00:0BA0: A0 CA 00     	ldy	#$ca
  4279 00:0BA3: B7 01        	lda	[<R0],Y
  4280 00:0BA5: AA           	tax
  4281 00:0BA6: A0 C8 00     	ldy	#$c8
  4282 00:0BA9: B7 01        	lda	[<R0],Y
  4283                        	xref	~~~lcal
  4284 00:0BAB: 22 xx xx xx  	jsl	~~~lcal
  4285                        L205:
  4286 00:0BAF: A8           	tay
  4287 00:0BB0: 2B           	pld
  4288 00:0BB1: 3B           	tsc
  4289 00:0BB2: 18           	clc
  Thu Jul 29 2021 22:56                                                Page 78


  4290 00:0BB3: 69 04 00     	adc	#L202
  4291 00:0BB6: 1B           	tcs
  4292 00:0BB7: 98           	tya
  4293 00:0BB8: 6B           	rtl
  4294                        ;}
  4295                        	.line	569
  4296                        	.endblock	569
  4297             00000004   L202	equ	4
  4298             00000005   L203	equ	5
  4299                        	ends
  4300                        	efunc
  4301                        	.endfunc	569,5,4
  4302                        	.line	569
  4303                        ;
  4304                        ;/*
  4305                        ;*
  4306                        ;* Name:GetFirmwareDateDay
  4307                        ;* Subsystem:KERNEL
  4308                        ;*
  4309                        ;*/
  4310                        ;void GetFirmwareDateDay(char* buffer)
  4311                        ;{
  4312                        	.line	577
  4313                        	.line	578
  4314                        	code
  4315                        	xdef	~~GetFirmwareDateDay
  4316                        	func
  4317                        	.function	578
  4318                        ~~GetFirmwareDateDay:
  4319                        	longa	on
  4320                        	longi	on
  4321 00:0BB9: 3B           	tsc
  4322 00:0BBA: 38           	sec
  4323 00:0BBB: E9 04 00     	sbc	#L206
  4324 00:0BBE: 1B           	tcs
  4325 00:0BBF: 0B           	phd
  4326 00:0BC0: 5B           	tcd
  4327             00000004   buffer_0	set	4
  4328                        	.block	578
  4329                        ;    ((GETFIRMWAREDATEDAY)CALL_KERNEL_API(EXPORT_K
                    ERNEL_GETFIRMWAREDATEDAY))(buffer);
  4330                        	.sym	buffer,4,142,6,32
  4331                        	.line	579
  4332 00:0BC1: D4 0A        	pei	<L206+buffer_0+2
  4333 00:0BC3: D4 08        	pei	<L206+buffer_0
  4334 00:0BC5: AF 42 15 00  	lda	>5442
  4335 00:0BC9: 85 01        	sta	<R0
  4336 00:0BCB: AF 44 15 00  	lda	>5442+2
  4337 00:0BCF: 85 03        	sta	<R0+2
  4338 00:0BD1: A0 CE 00     	ldy	#$ce
  4339 00:0BD4: B7 01        	lda	[<R0],Y
  4340 00:0BD6: AA           	tax
  4341 00:0BD7: A0 CC 00     	ldy	#$cc
  4342 00:0BDA: B7 01        	lda	[<R0],Y
  4343                        	xref	~~~lcal
  4344 00:0BDC: 22 xx xx xx  	jsl	~~~lcal
  4345                        ;}
  4346                        	.line	580
  Thu Jul 29 2021 22:56                                                Page 79


  4347                        L209:
  4348 00:0BE0: A5 06        	lda	<L206+2
  4349 00:0BE2: 85 0A        	sta	<L206+2+4
  4350 00:0BE4: A5 05        	lda	<L206+1
  4351 00:0BE6: 85 09        	sta	<L206+1+4
  4352 00:0BE8: 2B           	pld
  4353 00:0BE9: 3B           	tsc
  4354 00:0BEA: 18           	clc
  4355 00:0BEB: 69 08 00     	adc	#L206+4
  4356 00:0BEE: 1B           	tcs
  4357 00:0BEF: 6B           	rtl
  4358                        	.endblock	580
  4359             00000004   L206	equ	4
  4360             00000005   L207	equ	5
  4361                        	ends
  4362                        	efunc
  4363                        	.endfunc	580,5,4
  4364                        	.line	580
  4365                        ;
  4366                        ;/*
  4367                        ;*
  4368                        ;* Name:GetFirmwareDateMonth
  4369                        ;* Subsystem:KERNEL
  4370                        ;*
  4371                        ;*/
  4372                        ;void GetFirmwareDateMonth(char* buffer)
  4373                        ;{
  4374                        	.line	588
  4375                        	.line	589
  4376                        	code
  4377                        	xdef	~~GetFirmwareDateMonth
  4378                        	func
  4379                        	.function	589
  4380                        ~~GetFirmwareDateMonth:
  4381                        	longa	on
  4382                        	longi	on
  4383 00:0BF0: 3B           	tsc
  4384 00:0BF1: 38           	sec
  4385 00:0BF2: E9 04 00     	sbc	#L210
  4386 00:0BF5: 1B           	tcs
  4387 00:0BF6: 0B           	phd
  4388 00:0BF7: 5B           	tcd
  4389             00000004   buffer_0	set	4
  4390                        	.block	589
  4391                        ;    ((GETFIRMWAREDATEMONTH)CALL_KERNEL_API(EXPORT
                    _KERNEL_GETFIRMWAREDATEMONTH))(buffer);
  4392                        	.sym	buffer,4,142,6,32
  4393                        	.line	590
  4394 00:0BF8: D4 0A        	pei	<L210+buffer_0+2
  4395 00:0BFA: D4 08        	pei	<L210+buffer_0
  4396 00:0BFC: AF 42 15 00  	lda	>5442
  4397 00:0C00: 85 01        	sta	<R0
  4398 00:0C02: AF 44 15 00  	lda	>5442+2
  4399 00:0C06: 85 03        	sta	<R0+2
  4400 00:0C08: A0 D2 00     	ldy	#$d2
  4401 00:0C0B: B7 01        	lda	[<R0],Y
  4402 00:0C0D: AA           	tax
  4403 00:0C0E: A0 D0 00     	ldy	#$d0
  Thu Jul 29 2021 22:56                                                Page 80


  4404 00:0C11: B7 01        	lda	[<R0],Y
  4405                        	xref	~~~lcal
  4406 00:0C13: 22 xx xx xx  	jsl	~~~lcal
  4407                        ;}
  4408                        	.line	591
  4409                        L213:
  4410 00:0C17: A5 06        	lda	<L210+2
  4411 00:0C19: 85 0A        	sta	<L210+2+4
  4412 00:0C1B: A5 05        	lda	<L210+1
  4413 00:0C1D: 85 09        	sta	<L210+1+4
  4414 00:0C1F: 2B           	pld
  4415 00:0C20: 3B           	tsc
  4416 00:0C21: 18           	clc
  4417 00:0C22: 69 08 00     	adc	#L210+4
  4418 00:0C25: 1B           	tcs
  4419 00:0C26: 6B           	rtl
  4420                        	.endblock	591
  4421             00000004   L210	equ	4
  4422             00000005   L211	equ	5
  4423                        	ends
  4424                        	efunc
  4425                        	.endfunc	591,5,4
  4426                        	.line	591
  4427                        ;
  4428                        ;/*
  4429                        ;*
  4430                        ;* Name:GetFirmwareDateYear
  4431                        ;* Subsystem:KERNEL
  4432                        ;*
  4433                        ;*/
  4434                        ;void GetFirmwareDateYear(char* buffer)
  4435                        ;{
  4436                        	.line	599
  4437                        	.line	600
  4438                        	code
  4439                        	xdef	~~GetFirmwareDateYear
  4440                        	func
  4441                        	.function	600
  4442                        ~~GetFirmwareDateYear:
  4443                        	longa	on
  4444                        	longi	on
  4445 00:0C27: 3B           	tsc
  4446 00:0C28: 38           	sec
  4447 00:0C29: E9 04 00     	sbc	#L214
  4448 00:0C2C: 1B           	tcs
  4449 00:0C2D: 0B           	phd
  4450 00:0C2E: 5B           	tcd
  4451             00000004   buffer_0	set	4
  4452                        	.block	600
  4453                        ;    ((GETFIRMWAREDATEYEAR)CALL_KERNEL_API(EXPORT_
                    KERNEL_GETFIRMWAREDATEYEAR))(buffer);
  4454                        	.sym	buffer,4,142,6,32
  4455                        	.line	601
  4456 00:0C2F: D4 0A        	pei	<L214+buffer_0+2
  4457 00:0C31: D4 08        	pei	<L214+buffer_0
  4458 00:0C33: AF 42 15 00  	lda	>5442
  4459 00:0C37: 85 01        	sta	<R0
  4460 00:0C39: AF 44 15 00  	lda	>5442+2
  Thu Jul 29 2021 22:56                                                Page 81


  4461 00:0C3D: 85 03        	sta	<R0+2
  4462 00:0C3F: A0 D6 00     	ldy	#$d6
  4463 00:0C42: B7 01        	lda	[<R0],Y
  4464 00:0C44: AA           	tax
  4465 00:0C45: A0 D4 00     	ldy	#$d4
  4466 00:0C48: B7 01        	lda	[<R0],Y
  4467                        	xref	~~~lcal
  4468 00:0C4A: 22 xx xx xx  	jsl	~~~lcal
  4469                        ;}
  4470                        	.line	602
  4471                        L217:
  4472 00:0C4E: A5 06        	lda	<L214+2
  4473 00:0C50: 85 0A        	sta	<L214+2+4
  4474 00:0C52: A5 05        	lda	<L214+1
  4475 00:0C54: 85 09        	sta	<L214+1+4
  4476 00:0C56: 2B           	pld
  4477 00:0C57: 3B           	tsc
  4478 00:0C58: 18           	clc
  4479 00:0C59: 69 08 00     	adc	#L214+4
  4480 00:0C5C: 1B           	tcs
  4481 00:0C5D: 6B           	rtl
  4482                        	.endblock	602
  4483             00000004   L214	equ	4
  4484             00000005   L215	equ	5
  4485                        	ends
  4486                        	efunc
  4487                        	.endfunc	602,5,4
  4488                        	.line	602
  4489                        ;
  4490                        ;/*
  4491                        ;*
  4492                        ;* Name:GetHardwareVersionMajor
  4493                        ;* Subsystem:KERNEL
  4494                        ;*
  4495                        ;*/
  4496                        ;void GetHardwareVersionMajor(char* buffer)
  4497                        ;{
  4498                        	.line	610
  4499                        	.line	611
  4500                        	code
  4501                        	xdef	~~GetHardwareVersionMajor
  4502                        	func
  4503                        	.function	611
  4504                        ~~GetHardwareVersionMajor:
  4505                        	longa	on
  4506                        	longi	on
  4507 00:0C5E: 3B           	tsc
  4508 00:0C5F: 38           	sec
  4509 00:0C60: E9 04 00     	sbc	#L218
  4510 00:0C63: 1B           	tcs
  4511 00:0C64: 0B           	phd
  4512 00:0C65: 5B           	tcd
  4513             00000004   buffer_0	set	4
  4514                        	.block	611
  4515                        ;    ((GETHARDWAREVERSIONMAJOR)CALL_KERNEL_API(EXP
                    ORT_KERNEL_GETHARDWAREVERSIONMAJOR))(buffer);
  4516                        	.sym	buffer,4,142,6,32
  4517                        	.line	612
  Thu Jul 29 2021 22:56                                                Page 82


  4518 00:0C66: D4 0A        	pei	<L218+buffer_0+2
  4519 00:0C68: D4 08        	pei	<L218+buffer_0
  4520 00:0C6A: AF 42 15 00  	lda	>5442
  4521 00:0C6E: 85 01        	sta	<R0
  4522 00:0C70: AF 44 15 00  	lda	>5442+2
  4523 00:0C74: 85 03        	sta	<R0+2
  4524 00:0C76: A0 DA 00     	ldy	#$da
  4525 00:0C79: B7 01        	lda	[<R0],Y
  4526 00:0C7B: AA           	tax
  4527 00:0C7C: A0 D8 00     	ldy	#$d8
  4528 00:0C7F: B7 01        	lda	[<R0],Y
  4529                        	xref	~~~lcal
  4530 00:0C81: 22 xx xx xx  	jsl	~~~lcal
  4531                        ;}
  4532                        	.line	613
  4533                        L221:
  4534 00:0C85: A5 06        	lda	<L218+2
  4535 00:0C87: 85 0A        	sta	<L218+2+4
  4536 00:0C89: A5 05        	lda	<L218+1
  4537 00:0C8B: 85 09        	sta	<L218+1+4
  4538 00:0C8D: 2B           	pld
  4539 00:0C8E: 3B           	tsc
  4540 00:0C8F: 18           	clc
  4541 00:0C90: 69 08 00     	adc	#L218+4
  4542 00:0C93: 1B           	tcs
  4543 00:0C94: 6B           	rtl
  4544                        	.endblock	613
  4545             00000004   L218	equ	4
  4546             00000005   L219	equ	5
  4547                        	ends
  4548                        	efunc
  4549                        	.endfunc	613,5,4
  4550                        	.line	613
  4551                        ;
  4552                        ;/*
  4553                        ;*
  4554                        ;* Name:GetHardwareVersionMinor
  4555                        ;* Subsystem:KERNEL
  4556                        ;*
  4557                        ;*/
  4558                        ;void GetHardwareVersionMinor(char* buffer)
  4559                        ;{
  4560                        	.line	621
  4561                        	.line	622
  4562                        	code
  4563                        	xdef	~~GetHardwareVersionMinor
  4564                        	func
  4565                        	.function	622
  4566                        ~~GetHardwareVersionMinor:
  4567                        	longa	on
  4568                        	longi	on
  4569 00:0C95: 3B           	tsc
  4570 00:0C96: 38           	sec
  4571 00:0C97: E9 04 00     	sbc	#L222
  4572 00:0C9A: 1B           	tcs
  4573 00:0C9B: 0B           	phd
  4574 00:0C9C: 5B           	tcd
  4575             00000004   buffer_0	set	4
  Thu Jul 29 2021 22:56                                                Page 83


  4576                        	.block	622
  4577                        ;    ((GETHARDWAREVERSIONMINOR)CALL_KERNEL_API(EXP
                    ORT_KERNEL_GETHARDWAREVERSIONMINOR))(buffer);
  4578                        	.sym	buffer,4,142,6,32
  4579                        	.line	623
  4580 00:0C9D: D4 0A        	pei	<L222+buffer_0+2
  4581 00:0C9F: D4 08        	pei	<L222+buffer_0
  4582 00:0CA1: AF 42 15 00  	lda	>5442
  4583 00:0CA5: 85 01        	sta	<R0
  4584 00:0CA7: AF 44 15 00  	lda	>5442+2
  4585 00:0CAB: 85 03        	sta	<R0+2
  4586 00:0CAD: A0 DE 00     	ldy	#$de
  4587 00:0CB0: B7 01        	lda	[<R0],Y
  4588 00:0CB2: AA           	tax
  4589 00:0CB3: A0 DC 00     	ldy	#$dc
  4590 00:0CB6: B7 01        	lda	[<R0],Y
  4591                        	xref	~~~lcal
  4592 00:0CB8: 22 xx xx xx  	jsl	~~~lcal
  4593                        ;}
  4594                        	.line	624
  4595                        L225:
  4596 00:0CBC: A5 06        	lda	<L222+2
  4597 00:0CBE: 85 0A        	sta	<L222+2+4
  4598 00:0CC0: A5 05        	lda	<L222+1
  4599 00:0CC2: 85 09        	sta	<L222+1+4
  4600 00:0CC4: 2B           	pld
  4601 00:0CC5: 3B           	tsc
  4602 00:0CC6: 18           	clc
  4603 00:0CC7: 69 08 00     	adc	#L222+4
  4604 00:0CCA: 1B           	tcs
  4605 00:0CCB: 6B           	rtl
  4606                        	.endblock	624
  4607             00000004   L222	equ	4
  4608             00000005   L223	equ	5
  4609                        	ends
  4610                        	efunc
  4611                        	.endfunc	624,5,4
  4612                        	.line	624
  4613                        ;
  4614                        ;/*
  4615                        ;*
  4616                        ;* Name:GetHardwareRelease
  4617                        ;* Subsystem:KERNEL
  4618                        ;*
  4619                        ;*/
  4620                        ;void GetHardwareRelease(char* buffer)
  4621                        ;{
  4622                        	.line	632
  4623                        	.line	633
  4624                        	code
  4625                        	xdef	~~GetHardwareRelease
  4626                        	func
  4627                        	.function	633
  4628                        ~~GetHardwareRelease:
  4629                        	longa	on
  4630                        	longi	on
  4631 00:0CCC: 3B           	tsc
  4632 00:0CCD: 38           	sec
  Thu Jul 29 2021 22:56                                                Page 84


  4633 00:0CCE: E9 04 00     	sbc	#L226
  4634 00:0CD1: 1B           	tcs
  4635 00:0CD2: 0B           	phd
  4636 00:0CD3: 5B           	tcd
  4637             00000004   buffer_0	set	4
  4638                        	.block	633
  4639                        ;    ((GETHARDWARERELEASE)CALL_KERNEL_API(EXPORT_K
                    ERNEL_GETHARDWARERELEASE))(buffer);
  4640                        	.sym	buffer,4,142,6,32
  4641                        	.line	634
  4642 00:0CD4: D4 0A        	pei	<L226+buffer_0+2
  4643 00:0CD6: D4 08        	pei	<L226+buffer_0
  4644 00:0CD8: AF 42 15 00  	lda	>5442
  4645 00:0CDC: 85 01        	sta	<R0
  4646 00:0CDE: AF 44 15 00  	lda	>5442+2
  4647 00:0CE2: 85 03        	sta	<R0+2
  4648 00:0CE4: A0 E2 00     	ldy	#$e2
  4649 00:0CE7: B7 01        	lda	[<R0],Y
  4650 00:0CE9: AA           	tax
  4651 00:0CEA: A0 E0 00     	ldy	#$e0
  4652 00:0CED: B7 01        	lda	[<R0],Y
  4653                        	xref	~~~lcal
  4654 00:0CEF: 22 xx xx xx  	jsl	~~~lcal
  4655                        ;}
  4656                        	.line	635
  4657                        L229:
  4658 00:0CF3: A5 06        	lda	<L226+2
  4659 00:0CF5: 85 0A        	sta	<L226+2+4
  4660 00:0CF7: A5 05        	lda	<L226+1
  4661 00:0CF9: 85 09        	sta	<L226+1+4
  4662 00:0CFB: 2B           	pld
  4663 00:0CFC: 3B           	tsc
  4664 00:0CFD: 18           	clc
  4665 00:0CFE: 69 08 00     	adc	#L226+4
  4666 00:0D01: 1B           	tcs
  4667 00:0D02: 6B           	rtl
  4668                        	.endblock	635
  4669             00000004   L226	equ	4
  4670             00000005   L227	equ	5
  4671                        	ends
  4672                        	efunc
  4673                        	.endfunc	635,5,4
  4674                        	.line	635
  4675                        ;
  4676                        ;/*
  4677                        ;*
  4678                        ;* Name:MemoryCopy
  4679                        ;* Subsystem:KERNEL
  4680                        ;*
  4681                        ;*/
  4682                        ;LPVOID MemoryCopy(LPVOID object,UINT size)
  4683                        ;{
  4684                        	.line	643
  4685                        	.line	644
  4686                        	code
  4687                        	xdef	~~MemoryCopy
  4688                        	func
  4689                        	.function	644
  Thu Jul 29 2021 22:56                                                Page 85


  4690                        ~~MemoryCopy:
  4691                        	longa	on
  4692                        	longi	on
  4693 00:0D03: 3B           	tsc
  4694 00:0D04: 38           	sec
  4695 00:0D05: E9 04 00     	sbc	#L230
  4696 00:0D08: 1B           	tcs
  4697 00:0D09: 0B           	phd
  4698 00:0D0A: 5B           	tcd
  4699             00000004   object_0	set	4
  4700             00000008   size_0	set	8
  4701                        	.block	644
  4702                        ;    return ((MEMORYCOPY)CALL_KERNEL_API(EXPORT_KE
                    RNEL_MEMORYCOPY))(object,size);
  4703                        	.sym	object,4,129,6,32
  4704                        	.sym	size,8,16,6,16
  4705                        	.line	645
  4706 00:0D0B: D4 0C        	pei	<L230+size_0
  4707 00:0D0D: D4 0A        	pei	<L230+object_0+2
  4708 00:0D0F: D4 08        	pei	<L230+object_0
  4709 00:0D11: AF 42 15 00  	lda	>5442
  4710 00:0D15: 85 01        	sta	<R0
  4711 00:0D17: AF 44 15 00  	lda	>5442+2
  4712 00:0D1B: 85 03        	sta	<R0+2
  4713 00:0D1D: A0 E6 00     	ldy	#$e6
  4714 00:0D20: B7 01        	lda	[<R0],Y
  4715 00:0D22: AA           	tax
  4716 00:0D23: A0 E4 00     	ldy	#$e4
  4717 00:0D26: B7 01        	lda	[<R0],Y
  4718                        	xref	~~~lcal
  4719 00:0D28: 22 xx xx xx  	jsl	~~~lcal
  4720 00:0D2C: 85 01        	sta	<R0
  4721 00:0D2E: 86 03        	stx	<R0+2
  4722 00:0D30: A6 03        	ldx	<R0+2
  4723 00:0D32: A5 01        	lda	<R0
  4724                        L233:
  4725 00:0D34: A8           	tay
  4726 00:0D35: A5 06        	lda	<L230+2
  4727 00:0D37: 85 0C        	sta	<L230+2+6
  4728 00:0D39: A5 05        	lda	<L230+1
  4729 00:0D3B: 85 0B        	sta	<L230+1+6
  4730 00:0D3D: 2B           	pld
  4731 00:0D3E: 3B           	tsc
  4732 00:0D3F: 18           	clc
  4733 00:0D40: 69 0A 00     	adc	#L230+6
  4734 00:0D43: 1B           	tcs
  4735 00:0D44: 98           	tya
  4736 00:0D45: 6B           	rtl
  4737                        ;}
  4738                        	.line	646
  4739                        	.endblock	646
  4740             00000004   L230	equ	4
  4741             00000005   L231	equ	5
  4742                        	ends
  4743                        	efunc
  4744                        	.endfunc	646,5,4
  4745                        	.line	646
  4746                        ;
  Thu Jul 29 2021 22:56                                                Page 86


  4747                        ;/*
  4748                        ;*
  4749                        ;* Name:MemoryAlloc
  4750                        ;* Subsystem:KERNEL
  4751                        ;*
  4752                        ;*/
  4753                        ;HANDLE MemoryAlloc(UINT size)
  4754                        ;{
  4755                        	.line	654
  4756                        	.line	655
  4757                        	code
  4758                        	xdef	~~MemoryAlloc
  4759                        	func
  4760                        	.function	655
  4761                        ~~MemoryAlloc:
  4762                        	longa	on
  4763                        	longi	on
  4764 00:0D46: 3B           	tsc
  4765 00:0D47: 38           	sec
  4766 00:0D48: E9 04 00     	sbc	#L234
  4767 00:0D4B: 1B           	tcs
  4768 00:0D4C: 0B           	phd
  4769 00:0D4D: 5B           	tcd
  4770             00000004   size_0	set	4
  4771                        	.block	655
  4772                        ;    return ((MEMORYALLOC)CALL_KERNEL_API(EXPORT_K
                    ERNEL_MEMORYALLOC))(size);
  4773                        	.sym	size,4,16,6,16
  4774                        	.line	656
  4775 00:0D4E: D4 08        	pei	<L234+size_0
  4776 00:0D50: AF 42 15 00  	lda	>5442
  4777 00:0D54: 85 01        	sta	<R0
  4778 00:0D56: AF 44 15 00  	lda	>5442+2
  4779 00:0D5A: 85 03        	sta	<R0+2
  4780 00:0D5C: A0 EA 00     	ldy	#$ea
  4781 00:0D5F: B7 01        	lda	[<R0],Y
  4782 00:0D61: AA           	tax
  4783 00:0D62: A0 E8 00     	ldy	#$e8
  4784 00:0D65: B7 01        	lda	[<R0],Y
  4785                        	xref	~~~lcal
  4786 00:0D67: 22 xx xx xx  	jsl	~~~lcal
  4787 00:0D6B: 85 01        	sta	<R0
  4788 00:0D6D: 86 03        	stx	<R0+2
  4789 00:0D6F: A6 03        	ldx	<R0+2
  4790 00:0D71: A5 01        	lda	<R0
  4791                        L237:
  4792 00:0D73: A8           	tay
  4793 00:0D74: A5 06        	lda	<L234+2
  4794 00:0D76: 85 08        	sta	<L234+2+2
  4795 00:0D78: A5 05        	lda	<L234+1
  4796 00:0D7A: 85 07        	sta	<L234+1+2
  4797 00:0D7C: 2B           	pld
  4798 00:0D7D: 3B           	tsc
  4799 00:0D7E: 18           	clc
  4800 00:0D7F: 69 06 00     	adc	#L234+2
  4801 00:0D82: 1B           	tcs
  4802 00:0D83: 98           	tya
  4803 00:0D84: 6B           	rtl
  Thu Jul 29 2021 22:56                                                Page 87


  4804                        ;}
  4805                        	.line	657
  4806                        	.endblock	657
  4807             00000004   L234	equ	4
  4808             00000005   L235	equ	5
  4809                        	ends
  4810                        	efunc
  4811                        	.endfunc	657,5,4
  4812                        	.line	657
  4813                        ;
  4814                        ;/*
  4815                        ;*
  4816                        ;* Name:MemoryDealloc
  4817                        ;* Subsystem:KERNEL
  4818                        ;*
  4819                        ;*/
  4820                        ;VOID MemoryDealloc(HANDLE handle)
  4821                        ;{
  4822                        	.line	665
  4823                        	.line	666
  4824                        	code
  4825                        	xdef	~~MemoryDealloc
  4826                        	func
  4827                        	.function	666
  4828                        ~~MemoryDealloc:
  4829                        	longa	on
  4830                        	longi	on
  4831 00:0D85: 3B           	tsc
  4832 00:0D86: 38           	sec
  4833 00:0D87: E9 04 00     	sbc	#L238
  4834 00:0D8A: 1B           	tcs
  4835 00:0D8B: 0B           	phd
  4836 00:0D8C: 5B           	tcd
  4837             00000004   handle_0	set	4
  4838                        	.block	666
  4839                        ;    ((MEMORYDEALLOC)CALL_KERNEL_API(EXPORT_KERNEL
                    _MEMORYDEALLOC))(handle);
  4840                        	.sym	handle,4,129,6,32
  4841                        	.line	667
  4842 00:0D8D: D4 0A        	pei	<L238+handle_0+2
  4843 00:0D8F: D4 08        	pei	<L238+handle_0
  4844 00:0D91: AF 42 15 00  	lda	>5442
  4845 00:0D95: 85 01        	sta	<R0
  4846 00:0D97: AF 44 15 00  	lda	>5442+2
  4847 00:0D9B: 85 03        	sta	<R0+2
  4848 00:0D9D: A0 EE 00     	ldy	#$ee
  4849 00:0DA0: B7 01        	lda	[<R0],Y
  4850 00:0DA2: AA           	tax
  4851 00:0DA3: A0 EC 00     	ldy	#$ec
  4852 00:0DA6: B7 01        	lda	[<R0],Y
  4853                        	xref	~~~lcal
  4854 00:0DA8: 22 xx xx xx  	jsl	~~~lcal
  4855                        ;}
  4856                        	.line	668
  4857                        L241:
  4858 00:0DAC: A5 06        	lda	<L238+2
  4859 00:0DAE: 85 0A        	sta	<L238+2+4
  4860 00:0DB0: A5 05        	lda	<L238+1
  Thu Jul 29 2021 22:56                                                Page 88


  4861 00:0DB2: 85 09        	sta	<L238+1+4
  4862 00:0DB4: 2B           	pld
  4863 00:0DB5: 3B           	tsc
  4864 00:0DB6: 18           	clc
  4865 00:0DB7: 69 08 00     	adc	#L238+4
  4866 00:0DBA: 1B           	tcs
  4867 00:0DBB: 6B           	rtl
  4868                        	.endblock	668
  4869             00000004   L238	equ	4
  4870             00000005   L239	equ	5
  4871                        	ends
  4872                        	efunc
  4873                        	.endfunc	668,5,4
  4874                        	.line	668
  4875                        ;
  4876                        ;/*
  4877                        ;*
  4878                        ;* Name:MemoryLock
  4879                        ;* Subsystem:KERNEL
  4880                        ;*
  4881                        ;*/
  4882                        ;LPVOID MemoryLock(HANDLE handle)
  4883                        ;{
  4884                        	.line	676
  4885                        	.line	677
  4886                        	code
  4887                        	xdef	~~MemoryLock
  4888                        	func
  4889                        	.function	677
  4890                        ~~MemoryLock:
  4891                        	longa	on
  4892                        	longi	on
  4893 00:0DBC: 3B           	tsc
  4894 00:0DBD: 38           	sec
  4895 00:0DBE: E9 04 00     	sbc	#L242
  4896 00:0DC1: 1B           	tcs
  4897 00:0DC2: 0B           	phd
  4898 00:0DC3: 5B           	tcd
  4899             00000004   handle_0	set	4
  4900                        	.block	677
  4901                        ;    return ((MEMORYLOCK)CALL_KERNEL_API(EXPORT_KE
                    RNEL_MEMORYLOCK))(handle);
  4902                        	.sym	handle,4,129,6,32
  4903                        	.line	678
  4904 00:0DC4: D4 0A        	pei	<L242+handle_0+2
  4905 00:0DC6: D4 08        	pei	<L242+handle_0
  4906 00:0DC8: AF 42 15 00  	lda	>5442
  4907 00:0DCC: 85 01        	sta	<R0
  4908 00:0DCE: AF 44 15 00  	lda	>5442+2
  4909 00:0DD2: 85 03        	sta	<R0+2
  4910 00:0DD4: A0 F2 00     	ldy	#$f2
  4911 00:0DD7: B7 01        	lda	[<R0],Y
  4912 00:0DD9: AA           	tax
  4913 00:0DDA: A0 F0 00     	ldy	#$f0
  4914 00:0DDD: B7 01        	lda	[<R0],Y
  4915                        	xref	~~~lcal
  4916 00:0DDF: 22 xx xx xx  	jsl	~~~lcal
  4917 00:0DE3: 85 01        	sta	<R0
  Thu Jul 29 2021 22:56                                                Page 89


  4918 00:0DE5: 86 03        	stx	<R0+2
  4919 00:0DE7: A6 03        	ldx	<R0+2
  4920 00:0DE9: A5 01        	lda	<R0
  4921                        L245:
  4922 00:0DEB: A8           	tay
  4923 00:0DEC: A5 06        	lda	<L242+2
  4924 00:0DEE: 85 0A        	sta	<L242+2+4
  4925 00:0DF0: A5 05        	lda	<L242+1
  4926 00:0DF2: 85 09        	sta	<L242+1+4
  4927 00:0DF4: 2B           	pld
  4928 00:0DF5: 3B           	tsc
  4929 00:0DF6: 18           	clc
  4930 00:0DF7: 69 08 00     	adc	#L242+4
  4931 00:0DFA: 1B           	tcs
  4932 00:0DFB: 98           	tya
  4933 00:0DFC: 6B           	rtl
  4934                        ;}
  4935                        	.line	679
  4936                        	.endblock	679
  4937             00000004   L242	equ	4
  4938             00000005   L243	equ	5
  4939                        	ends
  4940                        	efunc
  4941                        	.endfunc	679,5,4
  4942                        	.line	679
  4943                        ;
  4944                        ;/*
  4945                        ;*
  4946                        ;* Name:MemoryUnlock
  4947                        ;* Subsystem:KERNEL
  4948                        ;*
  4949                        ;*/
  4950                        ;VOID MemoryUnlock(HANDLE handle)
  4951                        ;{
  4952                        	.line	687
  4953                        	.line	688
  4954                        	code
  4955                        	xdef	~~MemoryUnlock
  4956                        	func
  4957                        	.function	688
  4958                        ~~MemoryUnlock:
  4959                        	longa	on
  4960                        	longi	on
  4961 00:0DFD: 3B           	tsc
  4962 00:0DFE: 38           	sec
  4963 00:0DFF: E9 04 00     	sbc	#L246
  4964 00:0E02: 1B           	tcs
  4965 00:0E03: 0B           	phd
  4966 00:0E04: 5B           	tcd
  4967             00000004   handle_0	set	4
  4968                        	.block	688
  4969                        ;    ((MEMORYUNLOCK)CALL_KERNEL_API(EXPORT_KERNEL_
                    MEMORYUNLOCK))(handle);
  4970                        	.sym	handle,4,129,6,32
  4971                        	.line	689
  4972 00:0E05: D4 0A        	pei	<L246+handle_0+2
  4973 00:0E07: D4 08        	pei	<L246+handle_0
  4974 00:0E09: AF 42 15 00  	lda	>5442
  Thu Jul 29 2021 22:56                                                Page 90


  4975 00:0E0D: 85 01        	sta	<R0
  4976 00:0E0F: AF 44 15 00  	lda	>5442+2
  4977 00:0E13: 85 03        	sta	<R0+2
  4978 00:0E15: A0 F6 00     	ldy	#$f6
  4979 00:0E18: B7 01        	lda	[<R0],Y
  4980 00:0E1A: AA           	tax
  4981 00:0E1B: A0 F4 00     	ldy	#$f4
  4982 00:0E1E: B7 01        	lda	[<R0],Y
  4983                        	xref	~~~lcal
  4984 00:0E20: 22 xx xx xx  	jsl	~~~lcal
  4985                        ;}
  4986                        	.line	690
  4987                        L249:
  4988 00:0E24: A5 06        	lda	<L246+2
  4989 00:0E26: 85 0A        	sta	<L246+2+4
  4990 00:0E28: A5 05        	lda	<L246+1
  4991 00:0E2A: 85 09        	sta	<L246+1+4
  4992 00:0E2C: 2B           	pld
  4993 00:0E2D: 3B           	tsc
  4994 00:0E2E: 18           	clc
  4995 00:0E2F: 69 08 00     	adc	#L246+4
  4996 00:0E32: 1B           	tcs
  4997 00:0E33: 6B           	rtl
  4998                        	.endblock	690
  4999             00000004   L246	equ	4
  5000             00000005   L247	equ	5
  5001                        	ends
  5002                        	efunc
  5003                        	.endfunc	690,5,4
  5004                        	.line	690
  5005                        ;
  5006                        ;/*
  5007                        ;*
  5008                        ;* Name:HeapAlloc
  5009                        ;* Subsystem:KERNEL
  5010                        ;*
  5011                        ;*/
  5012                        ;LPVOID HeapAlloc(UINT size)
  5013                        ;{
  5014                        	.line	698
  5015                        	.line	699
  5016                        	code
  5017                        	xdef	~~HeapAlloc
  5018                        	func
  5019                        	.function	699
  5020                        ~~HeapAlloc:
  5021                        	longa	on
  5022                        	longi	on
  5023 00:0E34: 3B           	tsc
  5024 00:0E35: 38           	sec
  5025 00:0E36: E9 04 00     	sbc	#L250
  5026 00:0E39: 1B           	tcs
  5027 00:0E3A: 0B           	phd
  5028 00:0E3B: 5B           	tcd
  5029             00000004   size_0	set	4
  5030                        	.block	699
  5031                        ;    return ((HEAPALLOC)CALL_KERNEL_API(EXPORT_KER
                    NEL_HEAPALLOC))(size);
  Thu Jul 29 2021 22:56                                                Page 91


  5032                        	.sym	size,4,16,6,16
  5033                        	.line	700
  5034 00:0E3C: D4 08        	pei	<L250+size_0
  5035 00:0E3E: AF 42 15 00  	lda	>5442
  5036 00:0E42: 85 01        	sta	<R0
  5037 00:0E44: AF 44 15 00  	lda	>5442+2
  5038 00:0E48: 85 03        	sta	<R0+2
  5039 00:0E4A: A0 FA 00     	ldy	#$fa
  5040 00:0E4D: B7 01        	lda	[<R0],Y
  5041 00:0E4F: AA           	tax
  5042 00:0E50: A0 F8 00     	ldy	#$f8
  5043 00:0E53: B7 01        	lda	[<R0],Y
  5044                        	xref	~~~lcal
  5045 00:0E55: 22 xx xx xx  	jsl	~~~lcal
  5046 00:0E59: 85 01        	sta	<R0
  5047 00:0E5B: 86 03        	stx	<R0+2
  5048 00:0E5D: A6 03        	ldx	<R0+2
  5049 00:0E5F: A5 01        	lda	<R0
  5050                        L253:
  5051 00:0E61: A8           	tay
  5052 00:0E62: A5 06        	lda	<L250+2
  5053 00:0E64: 85 08        	sta	<L250+2+2
  5054 00:0E66: A5 05        	lda	<L250+1
  5055 00:0E68: 85 07        	sta	<L250+1+2
  5056 00:0E6A: 2B           	pld
  5057 00:0E6B: 3B           	tsc
  5058 00:0E6C: 18           	clc
  5059 00:0E6D: 69 06 00     	adc	#L250+2
  5060 00:0E70: 1B           	tcs
  5061 00:0E71: 98           	tya
  5062 00:0E72: 6B           	rtl
  5063                        ;}
  5064                        	.line	701
  5065                        	.endblock	701
  5066             00000004   L250	equ	4
  5067             00000005   L251	equ	5
  5068                        	ends
  5069                        	efunc
  5070                        	.endfunc	701,5,4
  5071                        	.line	701
  5072                        ;
  5073                        ;/*
  5074                        ;*
  5075                        ;* Name:HeapDealloc
  5076                        ;* Subsystem:KERNEL
  5077                        ;*
  5078                        ;*/
  5079                        ;VOID HeapDealloc(LPVOID LPVOID1)
  5080                        ;{
  5081                        	.line	709
  5082                        	.line	710
  5083                        	code
  5084                        	xdef	~~HeapDealloc
  5085                        	func
  5086                        	.function	710
  5087                        ~~HeapDealloc:
  5088                        	longa	on
  5089                        	longi	on
  Thu Jul 29 2021 22:56                                                Page 92


  5090 00:0E73: 3B           	tsc
  5091 00:0E74: 38           	sec
  5092 00:0E75: E9 04 00     	sbc	#L254
  5093 00:0E78: 1B           	tcs
  5094 00:0E79: 0B           	phd
  5095 00:0E7A: 5B           	tcd
  5096             00000004   LPVOID1_0	set	4
  5097                        	.block	710
  5098                        ;    ((HEAPDEALLOC)CALL_KERNEL_API(EXPORT_KERNEL_H
                    EAPDEALLOC))(LPVOID1);
  5099                        	.sym	LPVOID1,4,129,6,32
  5100                        	.line	711
  5101 00:0E7B: D4 0A        	pei	<L254+LPVOID1_0+2
  5102 00:0E7D: D4 08        	pei	<L254+LPVOID1_0
  5103 00:0E7F: AF 42 15 00  	lda	>5442
  5104 00:0E83: 85 01        	sta	<R0
  5105 00:0E85: AF 44 15 00  	lda	>5442+2
  5106 00:0E89: 85 03        	sta	<R0+2
  5107 00:0E8B: A0 FE 00     	ldy	#$fe
  5108 00:0E8E: B7 01        	lda	[<R0],Y
  5109 00:0E90: AA           	tax
  5110 00:0E91: A0 FC 00     	ldy	#$fc
  5111 00:0E94: B7 01        	lda	[<R0],Y
  5112                        	xref	~~~lcal
  5113 00:0E96: 22 xx xx xx  	jsl	~~~lcal
  5114                        ;}
  5115                        	.line	712
  5116                        L257:
  5117 00:0E9A: A5 06        	lda	<L254+2
  5118 00:0E9C: 85 0A        	sta	<L254+2+4
  5119 00:0E9E: A5 05        	lda	<L254+1
  5120 00:0EA0: 85 09        	sta	<L254+1+4
  5121 00:0EA2: 2B           	pld
  5122 00:0EA3: 3B           	tsc
  5123 00:0EA4: 18           	clc
  5124 00:0EA5: 69 08 00     	adc	#L254+4
  5125 00:0EA8: 1B           	tcs
  5126 00:0EA9: 6B           	rtl
  5127                        	.endblock	712
  5128             00000004   L254	equ	4
  5129             00000005   L255	equ	5
  5130                        	ends
  5131                        	efunc
  5132                        	.endfunc	712,5,4
  5133                        	.line	712
  5134                        ;
  5135                        ;/*
  5136                        ;*
  5137                        ;* Name:SegmentLoad
  5138                        ;* Subsystem:KERNEL
  5139                        ;*
  5140                        ;*/
  5141                        ;HANDLE SegmentLoad(HANDLE handle)
  5142                        ;{
  5143                        	.line	720
  5144                        	.line	721
  5145                        	code
  5146                        	xdef	~~SegmentLoad
  Thu Jul 29 2021 22:56                                                Page 93


  5147                        	func
  5148                        	.function	721
  5149                        ~~SegmentLoad:
  5150                        	longa	on
  5151                        	longi	on
  5152 00:0EAA: 3B           	tsc
  5153 00:0EAB: 38           	sec
  5154 00:0EAC: E9 04 00     	sbc	#L258
  5155 00:0EAF: 1B           	tcs
  5156 00:0EB0: 0B           	phd
  5157 00:0EB1: 5B           	tcd
  5158             00000004   handle_0	set	4
  5159                        	.block	721
  5160                        ;    return ((SEGMENTLOAD)CALL_KERNEL_API(EXPORT_K
                    ERNEL_SEGMENTLOAD))(handle);
  5161                        	.sym	handle,4,129,6,32
  5162                        	.line	722
  5163 00:0EB2: D4 0A        	pei	<L258+handle_0+2
  5164 00:0EB4: D4 08        	pei	<L258+handle_0
  5165 00:0EB6: AF 42 15 00  	lda	>5442
  5166 00:0EBA: 85 01        	sta	<R0
  5167 00:0EBC: AF 44 15 00  	lda	>5442+2
  5168 00:0EC0: 85 03        	sta	<R0+2
  5169 00:0EC2: A0 02 01     	ldy	#$102
  5170 00:0EC5: B7 01        	lda	[<R0],Y
  5171 00:0EC7: AA           	tax
  5172 00:0EC8: A0 00 01     	ldy	#$100
  5173 00:0ECB: B7 01        	lda	[<R0],Y
  5174                        	xref	~~~lcal
  5175 00:0ECD: 22 xx xx xx  	jsl	~~~lcal
  5176 00:0ED1: 85 01        	sta	<R0
  5177 00:0ED3: 86 03        	stx	<R0+2
  5178 00:0ED5: A6 03        	ldx	<R0+2
  5179 00:0ED7: A5 01        	lda	<R0
  5180                        L261:
  5181 00:0ED9: A8           	tay
  5182 00:0EDA: A5 06        	lda	<L258+2
  5183 00:0EDC: 85 0A        	sta	<L258+2+4
  5184 00:0EDE: A5 05        	lda	<L258+1
  5185 00:0EE0: 85 09        	sta	<L258+1+4
  5186 00:0EE2: 2B           	pld
  5187 00:0EE3: 3B           	tsc
  5188 00:0EE4: 18           	clc
  5189 00:0EE5: 69 08 00     	adc	#L258+4
  5190 00:0EE8: 1B           	tcs
  5191 00:0EE9: 98           	tya
  5192 00:0EEA: 6B           	rtl
  5193                        ;}
  5194                        	.line	723
  5195                        	.endblock	723
  5196             00000004   L258	equ	4
  5197             00000005   L259	equ	5
  5198                        	ends
  5199                        	efunc
  5200                        	.endfunc	723,5,4
  5201                        	.line	723
  5202                        ;
  5203                        ;/*
  Thu Jul 29 2021 22:56                                                Page 94


  5204                        ;*
  5205                        ;* Name:SegmentLock
  5206                        ;* Subsystem:KERNEL
  5207                        ;*
  5208                        ;*/
  5209                        ;LPVOID SegmentLock(HANDLE handle)
  5210                        ;{
  5211                        	.line	731
  5212                        	.line	732
  5213                        	code
  5214                        	xdef	~~SegmentLock
  5215                        	func
  5216                        	.function	732
  5217                        ~~SegmentLock:
  5218                        	longa	on
  5219                        	longi	on
  5220 00:0EEB: 3B           	tsc
  5221 00:0EEC: 38           	sec
  5222 00:0EED: E9 04 00     	sbc	#L262
  5223 00:0EF0: 1B           	tcs
  5224 00:0EF1: 0B           	phd
  5225 00:0EF2: 5B           	tcd
  5226             00000004   handle_0	set	4
  5227                        	.block	732
  5228                        ;    return ((SEGMENTLOCK)CALL_KERNEL_API(EXPORT_K
                    ERNEL_SEGMENTLOCK))(handle);
  5229                        	.sym	handle,4,129,6,32
  5230                        	.line	733
  5231 00:0EF3: D4 0A        	pei	<L262+handle_0+2
  5232 00:0EF5: D4 08        	pei	<L262+handle_0
  5233 00:0EF7: AF 42 15 00  	lda	>5442
  5234 00:0EFB: 85 01        	sta	<R0
  5235 00:0EFD: AF 44 15 00  	lda	>5442+2
  5236 00:0F01: 85 03        	sta	<R0+2
  5237 00:0F03: A0 06 01     	ldy	#$106
  5238 00:0F06: B7 01        	lda	[<R0],Y
  5239 00:0F08: AA           	tax
  5240 00:0F09: A0 04 01     	ldy	#$104
  5241 00:0F0C: B7 01        	lda	[<R0],Y
  5242                        	xref	~~~lcal
  5243 00:0F0E: 22 xx xx xx  	jsl	~~~lcal
  5244 00:0F12: 85 01        	sta	<R0
  5245 00:0F14: 86 03        	stx	<R0+2
  5246 00:0F16: A6 03        	ldx	<R0+2
  5247 00:0F18: A5 01        	lda	<R0
  5248                        L265:
  5249 00:0F1A: A8           	tay
  5250 00:0F1B: A5 06        	lda	<L262+2
  5251 00:0F1D: 85 0A        	sta	<L262+2+4
  5252 00:0F1F: A5 05        	lda	<L262+1
  5253 00:0F21: 85 09        	sta	<L262+1+4
  5254 00:0F23: 2B           	pld
  5255 00:0F24: 3B           	tsc
  5256 00:0F25: 18           	clc
  5257 00:0F26: 69 08 00     	adc	#L262+4
  5258 00:0F29: 1B           	tcs
  5259 00:0F2A: 98           	tya
  5260 00:0F2B: 6B           	rtl
  Thu Jul 29 2021 22:56                                                Page 95


  5261                        ;}
  5262                        	.line	734
  5263                        	.endblock	734
  5264             00000004   L262	equ	4
  5265             00000005   L263	equ	5
  5266                        	ends
  5267                        	efunc
  5268                        	.endfunc	734,5,4
  5269                        	.line	734
  5270                        ;
  5271                        ;/*
  5272                        ;*
  5273                        ;* Name:SegmentUnlock
  5274                        ;* Subsystem:KERNEL
  5275                        ;*
  5276                        ;*/
  5277                        ;BOOL SegmentUnlock(HANDLE handle)
  5278                        ;{
  5279                        	.line	742
  5280                        	.line	743
  5281                        	code
  5282                        	xdef	~~SegmentUnlock
  5283                        	func
  5284                        	.function	743
  5285                        ~~SegmentUnlock:
  5286                        	longa	on
  5287                        	longi	on
  5288 00:0F2C: 3B           	tsc
  5289 00:0F2D: 38           	sec
  5290 00:0F2E: E9 04 00     	sbc	#L266
  5291 00:0F31: 1B           	tcs
  5292 00:0F32: 0B           	phd
  5293 00:0F33: 5B           	tcd
  5294             00000004   handle_0	set	4
  5295                        	.block	743
  5296                        ;    return ((SEGMENTUNLOCK)CALL_KERNEL_API(EXPORT
                    _KERNEL_SEGMENTUNLOCK))(handle);
  5297                        	.sym	handle,4,129,6,32
  5298                        	.line	744
  5299 00:0F34: D4 0A        	pei	<L266+handle_0+2
  5300 00:0F36: D4 08        	pei	<L266+handle_0
  5301 00:0F38: AF 42 15 00  	lda	>5442
  5302 00:0F3C: 85 01        	sta	<R0
  5303 00:0F3E: AF 44 15 00  	lda	>5442+2
  5304 00:0F42: 85 03        	sta	<R0+2
  5305 00:0F44: A0 0A 01     	ldy	#$10a
  5306 00:0F47: B7 01        	lda	[<R0],Y
  5307 00:0F49: AA           	tax
  5308 00:0F4A: A0 08 01     	ldy	#$108
  5309 00:0F4D: B7 01        	lda	[<R0],Y
  5310                        	xref	~~~lcal
  5311 00:0F4F: 22 xx xx xx  	jsl	~~~lcal
  5312 00:0F53: E2 20        	sep	#$20
  5313                        	longa	off
  5314 00:0F55: 85 01        	sta	<R0
  5315 00:0F57: C2 20        	rep	#$20
  5316                        	longa	on
  5317 00:0F59: A5 01        	lda	<R0
  Thu Jul 29 2021 22:56                                                Page 96


  5318 00:0F5B: 29 FF 00     	and	#$ff
  5319                        L269:
  5320 00:0F5E: A8           	tay
  5321 00:0F5F: A5 06        	lda	<L266+2
  5322 00:0F61: 85 0A        	sta	<L266+2+4
  5323 00:0F63: A5 05        	lda	<L266+1
  5324 00:0F65: 85 09        	sta	<L266+1+4
  5325 00:0F67: 2B           	pld
  5326 00:0F68: 3B           	tsc
  5327 00:0F69: 18           	clc
  5328 00:0F6A: 69 08 00     	adc	#L266+4
  5329 00:0F6D: 1B           	tcs
  5330 00:0F6E: 98           	tya
  5331 00:0F6F: 6B           	rtl
  5332                        ;}
  5333                        	.line	745
  5334                        	.endblock	745
  5335             00000004   L266	equ	4
  5336             00000005   L267	equ	5
  5337                        	ends
  5338                        	efunc
  5339                        	.endfunc	745,5,4
  5340                        	.line	745
  5341                        ;
  5342                        ;/*
  5343                        ;*
  5344                        ;* Name:SegmentUnload
  5345                        ;* Subsystem:KERNEL
  5346                        ;*
  5347                        ;*/
  5348                        ;VOID SegmentUnload(LPVOID segment)
  5349                        ;{
  5350                        	.line	753
  5351                        	.line	754
  5352                        	code
  5353                        	xdef	~~SegmentUnload
  5354                        	func
  5355                        	.function	754
  5356                        ~~SegmentUnload:
  5357                        	longa	on
  5358                        	longi	on
  5359 00:0F70: 3B           	tsc
  5360 00:0F71: 38           	sec
  5361 00:0F72: E9 04 00     	sbc	#L270
  5362 00:0F75: 1B           	tcs
  5363 00:0F76: 0B           	phd
  5364 00:0F77: 5B           	tcd
  5365             00000004   segment_0	set	4
  5366                        	.block	754
  5367                        ;    ((SEGMENTUNLOAD)CALL_KERNEL_API(EXPORT_KERNEL
                    _SEGMENTUNLOAD))(segment);
  5368                        	.sym	segment,4,129,6,32
  5369                        	.line	755
  5370 00:0F78: D4 0A        	pei	<L270+segment_0+2
  5371 00:0F7A: D4 08        	pei	<L270+segment_0
  5372 00:0F7C: AF 42 15 00  	lda	>5442
  5373 00:0F80: 85 01        	sta	<R0
  5374 00:0F82: AF 44 15 00  	lda	>5442+2
  Thu Jul 29 2021 22:56                                                Page 97


  5375 00:0F86: 85 03        	sta	<R0+2
  5376 00:0F88: A0 0E 01     	ldy	#$10e
  5377 00:0F8B: B7 01        	lda	[<R0],Y
  5378 00:0F8D: AA           	tax
  5379 00:0F8E: A0 0C 01     	ldy	#$10c
  5380 00:0F91: B7 01        	lda	[<R0],Y
  5381                        	xref	~~~lcal
  5382 00:0F93: 22 xx xx xx  	jsl	~~~lcal
  5383                        ;}
  5384                        	.line	756
  5385                        L273:
  5386 00:0F97: A5 06        	lda	<L270+2
  5387 00:0F99: 85 0A        	sta	<L270+2+4
  5388 00:0F9B: A5 05        	lda	<L270+1
  5389 00:0F9D: 85 09        	sta	<L270+1+4
  5390 00:0F9F: 2B           	pld
  5391 00:0FA0: 3B           	tsc
  5392 00:0FA1: 18           	clc
  5393 00:0FA2: 69 08 00     	adc	#L270+4
  5394 00:0FA5: 1B           	tcs
  5395 00:0FA6: 6B           	rtl
  5396                        	.endblock	756
  5397             00000004   L270	equ	4
  5398             00000005   L271	equ	5
  5399                        	ends
  5400                        	efunc
  5401                        	.endfunc	756,5,4
  5402                        	.line	756
  5403                        ;
  5404                        ;/*
  5405                        ;*
  5406                        ;* Name:GetSegmentInfo
  5407                        ;* Subsystem:KERNEL
  5408                        ;*
  5409                        ;*/
  5410                        ;LPVOID GetSegmentInfo(HANDLE handle)
  5411                        ;{
  5412                        	.line	764
  5413                        	.line	765
  5414                        	code
  5415                        	xdef	~~GetSegmentInfo
  5416                        	func
  5417                        	.function	765
  5418                        ~~GetSegmentInfo:
  5419                        	longa	on
  5420                        	longi	on
  5421 00:0FA7: 3B           	tsc
  5422 00:0FA8: 38           	sec
  5423 00:0FA9: E9 04 00     	sbc	#L274
  5424 00:0FAC: 1B           	tcs
  5425 00:0FAD: 0B           	phd
  5426 00:0FAE: 5B           	tcd
  5427             00000004   handle_0	set	4
  5428                        	.block	765
  5429                        ;    return ((GETSEGMENTINFO)CALL_KERNEL_API(EXPOR
                    T_KERNEL_GETSEGMENTINFO))(handle);
  5430                        	.sym	handle,4,129,6,32
  5431                        	.line	766
  Thu Jul 29 2021 22:56                                                Page 98


  5432 00:0FAF: D4 0A        	pei	<L274+handle_0+2
  5433 00:0FB1: D4 08        	pei	<L274+handle_0
  5434 00:0FB3: AF 42 15 00  	lda	>5442
  5435 00:0FB7: 85 01        	sta	<R0
  5436 00:0FB9: AF 44 15 00  	lda	>5442+2
  5437 00:0FBD: 85 03        	sta	<R0+2
  5438 00:0FBF: A0 12 01     	ldy	#$112
  5439 00:0FC2: B7 01        	lda	[<R0],Y
  5440 00:0FC4: AA           	tax
  5441 00:0FC5: A0 10 01     	ldy	#$110
  5442 00:0FC8: B7 01        	lda	[<R0],Y
  5443                        	xref	~~~lcal
  5444 00:0FCA: 22 xx xx xx  	jsl	~~~lcal
  5445 00:0FCE: 85 01        	sta	<R0
  5446 00:0FD0: 86 03        	stx	<R0+2
  5447 00:0FD2: A6 03        	ldx	<R0+2
  5448 00:0FD4: A5 01        	lda	<R0
  5449                        L277:
  5450 00:0FD6: A8           	tay
  5451 00:0FD7: A5 06        	lda	<L274+2
  5452 00:0FD9: 85 0A        	sta	<L274+2+4
  5453 00:0FDB: A5 05        	lda	<L274+1
  5454 00:0FDD: 85 09        	sta	<L274+1+4
  5455 00:0FDF: 2B           	pld
  5456 00:0FE0: 3B           	tsc
  5457 00:0FE1: 18           	clc
  5458 00:0FE2: 69 08 00     	adc	#L274+4
  5459 00:0FE5: 1B           	tcs
  5460 00:0FE6: 98           	tya
  5461 00:0FE7: 6B           	rtl
  5462                        ;}
  5463                        	.line	767
  5464                        	.endblock	767
  5465             00000004   L274	equ	4
  5466             00000005   L275	equ	5
  5467                        	ends
  5468                        	efunc
  5469                        	.endfunc	767,5,4
  5470                        	.line	767
  5471                        ;
  5472                        ;/*
  5473                        ;*
  5474                        ;* Name:IPCOpenPort
  5475                        ;* Subsystem:KERNEL
  5476                        ;*
  5477                        ;*/
  5478                        ;PIPCPORT IPCOpenPort(LPCSTR portName,BYTE type)
  5479                        ;{
  5480                        	.line	775
  5481                        	.line	776
  5482                        	code
  5483                        	xdef	~~IPCOpenPort
  5484                        	func
  5485                        	.function	776
  5486                        ~~IPCOpenPort:
  5487                        	longa	on
  5488                        	longi	on
  5489 00:0FE8: 3B           	tsc
  Thu Jul 29 2021 22:56                                                Page 99


  5490 00:0FE9: 38           	sec
  5491 00:0FEA: E9 04 00     	sbc	#L278
  5492 00:0FED: 1B           	tcs
  5493 00:0FEE: 0B           	phd
  5494 00:0FEF: 5B           	tcd
  5495             00000004   portName_0	set	4
  5496             00000008   type_0	set	8
  5497                        	.block	776
  5498                        ;    return ((IPCOPENPORT)CALL_KERNEL_API(EXPORT_K
                    ERNEL_IPCOPENPORT))(portName,type);
  5499                        	.sym	portName,4,142,6,32
  5500                        	.sym	type,8,14,6,8
  5501                        	.line	777
  5502 00:0FF0: D4 0C        	pei	<L278+type_0
  5503 00:0FF2: D4 0A        	pei	<L278+portName_0+2
  5504 00:0FF4: D4 08        	pei	<L278+portName_0
  5505 00:0FF6: AF 42 15 00  	lda	>5442
  5506 00:0FFA: 85 01        	sta	<R0
  5507 00:0FFC: AF 44 15 00  	lda	>5442+2
  5508 00:1000: 85 03        	sta	<R0+2
  5509 00:1002: A0 16 01     	ldy	#$116
  5510 00:1005: B7 01        	lda	[<R0],Y
  5511 00:1007: AA           	tax
  5512 00:1008: A0 14 01     	ldy	#$114
  5513 00:100B: B7 01        	lda	[<R0],Y
  5514                        	xref	~~~lcal
  5515 00:100D: 22 xx xx xx  	jsl	~~~lcal
  5516 00:1011: 85 01        	sta	<R0
  5517 00:1013: 86 03        	stx	<R0+2
  5518 00:1015: A6 03        	ldx	<R0+2
  5519 00:1017: A5 01        	lda	<R0
  5520                        L281:
  5521 00:1019: A8           	tay
  5522 00:101A: A5 06        	lda	<L278+2
  5523 00:101C: 85 0C        	sta	<L278+2+6
  5524 00:101E: A5 05        	lda	<L278+1
  5525 00:1020: 85 0B        	sta	<L278+1+6
  5526 00:1022: 2B           	pld
  5527 00:1023: 3B           	tsc
  5528 00:1024: 18           	clc
  5529 00:1025: 69 0A 00     	adc	#L278+6
  5530 00:1028: 1B           	tcs
  5531 00:1029: 98           	tya
  5532 00:102A: 6B           	rtl
  5533                        ;}
  5534                        	.line	778
  5535                        	.endblock	778
  5536             00000004   L278	equ	4
  5537             00000005   L279	equ	5
  5538                        	ends
  5539                        	efunc
  5540                        	.endfunc	778,5,4
  5541                        	.line	778
  5542                        ;
  5543                        ;/*
  5544                        ;*
  5545                        ;* Name:IPCGetPort
  5546                        ;* Subsystem:KERNEL
  Thu Jul 29 2021 22:56                                                Page 100


  5547                        ;*
  5548                        ;*/
  5549                        ;PIPCPORT IPCGetPort(LPCSTR portName)
  5550                        ;{
  5551                        	.line	786
  5552                        	.line	787
  5553                        	code
  5554                        	xdef	~~IPCGetPort
  5555                        	func
  5556                        	.function	787
  5557                        ~~IPCGetPort:
  5558                        	longa	on
  5559                        	longi	on
  5560 00:102B: 3B           	tsc
  5561 00:102C: 38           	sec
  5562 00:102D: E9 04 00     	sbc	#L282
  5563 00:1030: 1B           	tcs
  5564 00:1031: 0B           	phd
  5565 00:1032: 5B           	tcd
  5566             00000004   portName_0	set	4
  5567                        	.block	787
  5568                        ;    return ((IPCGETPORT)CALL_KERNEL_API(EXPORT_KE
                    RNEL_IPCGETPORT))(portName);
  5569                        	.sym	portName,4,142,6,32
  5570                        	.line	788
  5571 00:1033: D4 0A        	pei	<L282+portName_0+2
  5572 00:1035: D4 08        	pei	<L282+portName_0
  5573 00:1037: AF 42 15 00  	lda	>5442
  5574 00:103B: 85 01        	sta	<R0
  5575 00:103D: AF 44 15 00  	lda	>5442+2
  5576 00:1041: 85 03        	sta	<R0+2
  5577 00:1043: A0 1A 01     	ldy	#$11a
  5578 00:1046: B7 01        	lda	[<R0],Y
  5579 00:1048: AA           	tax
  5580 00:1049: A0 18 01     	ldy	#$118
  5581 00:104C: B7 01        	lda	[<R0],Y
  5582                        	xref	~~~lcal
  5583 00:104E: 22 xx xx xx  	jsl	~~~lcal
  5584 00:1052: 85 01        	sta	<R0
  5585 00:1054: 86 03        	stx	<R0+2
  5586 00:1056: A6 03        	ldx	<R0+2
  5587 00:1058: A5 01        	lda	<R0
  5588                        L285:
  5589 00:105A: A8           	tay
  5590 00:105B: A5 06        	lda	<L282+2
  5591 00:105D: 85 0A        	sta	<L282+2+4
  5592 00:105F: A5 05        	lda	<L282+1
  5593 00:1061: 85 09        	sta	<L282+1+4
  5594 00:1063: 2B           	pld
  5595 00:1064: 3B           	tsc
  5596 00:1065: 18           	clc
  5597 00:1066: 69 08 00     	adc	#L282+4
  5598 00:1069: 1B           	tcs
  5599 00:106A: 98           	tya
  5600 00:106B: 6B           	rtl
  5601                        ;}
  5602                        	.line	789
  5603                        	.endblock	789
  Thu Jul 29 2021 22:56                                                Page 101


  5604             00000004   L282	equ	4
  5605             00000005   L283	equ	5
  5606                        	ends
  5607                        	efunc
  5608                        	.endfunc	789,5,4
  5609                        	.line	789
  5610                        ;
  5611                        ;/*
  5612                        ;*
  5613                        ;* Name:IPCClosePort
  5614                        ;* Subsystem:KERNEL
  5615                        ;*
  5616                        ;*/
  5617                        ;VOID IPCClosePort(PIPCPORT port)
  5618                        ;{
  5619                        	.line	797
  5620                        	.line	798
  5621                        	code
  5622                        	xdef	~~IPCClosePort
  5623                        	func
  5624                        	.function	798
  5625                        ~~IPCClosePort:
  5626                        	longa	on
  5627                        	longi	on
  5628 00:106C: 3B           	tsc
  5629 00:106D: 38           	sec
  5630 00:106E: E9 04 00     	sbc	#L286
  5631 00:1071: 1B           	tcs
  5632 00:1072: 0B           	phd
  5633 00:1073: 5B           	tcd
  5634             00000004   port_0	set	4
  5635                        	.block	798
  5636                        ;    ((IPCCLOSEPORT)CALL_KERNEL_API(EXPORT_KERNEL_
                    IPCCLOSEPORT))(port);
  5637                        	.sym	port,4,138,6,32,65
  5638                        	.line	799
  5639 00:1074: D4 0A        	pei	<L286+port_0+2
  5640 00:1076: D4 08        	pei	<L286+port_0
  5641 00:1078: AF 42 15 00  	lda	>5442
  5642 00:107C: 85 01        	sta	<R0
  5643 00:107E: AF 44 15 00  	lda	>5442+2
  5644 00:1082: 85 03        	sta	<R0+2
  5645 00:1084: A0 1E 01     	ldy	#$11e
  5646 00:1087: B7 01        	lda	[<R0],Y
  5647 00:1089: AA           	tax
  5648 00:108A: A0 1C 01     	ldy	#$11c
  5649 00:108D: B7 01        	lda	[<R0],Y
  5650                        	xref	~~~lcal
  5651 00:108F: 22 xx xx xx  	jsl	~~~lcal
  5652                        ;}
  5653                        	.line	800
  5654                        L289:
  5655 00:1093: A5 06        	lda	<L286+2
  5656 00:1095: 85 0A        	sta	<L286+2+4
  5657 00:1097: A5 05        	lda	<L286+1
  5658 00:1099: 85 09        	sta	<L286+1+4
  5659 00:109B: 2B           	pld
  5660 00:109C: 3B           	tsc
  Thu Jul 29 2021 22:56                                                Page 102


  5661 00:109D: 18           	clc
  5662 00:109E: 69 08 00     	adc	#L286+4
  5663 00:10A1: 1B           	tcs
  5664 00:10A2: 6B           	rtl
  5665                        	.endblock	800
  5666             00000004   L286	equ	4
  5667             00000005   L287	equ	5
  5668                        	ends
  5669                        	efunc
  5670                        	.endfunc	800,5,4
  5671                        	.line	800
  5672                        ;
  5673                        ;/*
  5674                        ;*
  5675                        ;* Name:IPCReadPort
  5676                        ;* Subsystem:KERNEL
  5677                        ;*
  5678                        ;*/
  5679                        ;LPVOID IPCReadPort(PIPCPORT port)
  5680                        ;{
  5681                        	.line	808
  5682                        	.line	809
  5683                        	code
  5684                        	xdef	~~IPCReadPort
  5685                        	func
  5686                        	.function	809
  5687                        ~~IPCReadPort:
  5688                        	longa	on
  5689                        	longi	on
  5690 00:10A3: 3B           	tsc
  5691 00:10A4: 38           	sec
  5692 00:10A5: E9 04 00     	sbc	#L290
  5693 00:10A8: 1B           	tcs
  5694 00:10A9: 0B           	phd
  5695 00:10AA: 5B           	tcd
  5696             00000004   port_0	set	4
  5697                        	.block	809
  5698                        ;    return ((IPCREADPORT)CALL_KERNEL_API(EXPORT_K
                    ERNEL_IPCREADPORT))(port);
  5699                        	.sym	port,4,138,6,32,65
  5700                        	.line	810
  5701 00:10AB: D4 0A        	pei	<L290+port_0+2
  5702 00:10AD: D4 08        	pei	<L290+port_0
  5703 00:10AF: AF 42 15 00  	lda	>5442
  5704 00:10B3: 85 01        	sta	<R0
  5705 00:10B5: AF 44 15 00  	lda	>5442+2
  5706 00:10B9: 85 03        	sta	<R0+2
  5707 00:10BB: A0 22 01     	ldy	#$122
  5708 00:10BE: B7 01        	lda	[<R0],Y
  5709 00:10C0: AA           	tax
  5710 00:10C1: A0 20 01     	ldy	#$120
  5711 00:10C4: B7 01        	lda	[<R0],Y
  5712                        	xref	~~~lcal
  5713 00:10C6: 22 xx xx xx  	jsl	~~~lcal
  5714 00:10CA: 85 01        	sta	<R0
  5715 00:10CC: 86 03        	stx	<R0+2
  5716 00:10CE: A6 03        	ldx	<R0+2
  5717 00:10D0: A5 01        	lda	<R0
  Thu Jul 29 2021 22:56                                                Page 103


  5718                        L293:
  5719 00:10D2: A8           	tay
  5720 00:10D3: A5 06        	lda	<L290+2
  5721 00:10D5: 85 0A        	sta	<L290+2+4
  5722 00:10D7: A5 05        	lda	<L290+1
  5723 00:10D9: 85 09        	sta	<L290+1+4
  5724 00:10DB: 2B           	pld
  5725 00:10DC: 3B           	tsc
  5726 00:10DD: 18           	clc
  5727 00:10DE: 69 08 00     	adc	#L290+4
  5728 00:10E1: 1B           	tcs
  5729 00:10E2: 98           	tya
  5730 00:10E3: 6B           	rtl
  5731                        ;}
  5732                        	.line	811
  5733                        	.endblock	811
  5734             00000004   L290	equ	4
  5735             00000005   L291	equ	5
  5736                        	ends
  5737                        	efunc
  5738                        	.endfunc	811,5,4
  5739                        	.line	811
  5740                        ;
  5741                        ;/*
  5742                        ;*
  5743                        ;* Name:IPCPeekPort
  5744                        ;* Subsystem:KERNEL
  5745                        ;*
  5746                        ;*/
  5747                        ;LPVOID IPCPeekPort(PIPCPORT port)
  5748                        ;{
  5749                        	.line	819
  5750                        	.line	820
  5751                        	code
  5752                        	xdef	~~IPCPeekPort
  5753                        	func
  5754                        	.function	820
  5755                        ~~IPCPeekPort:
  5756                        	longa	on
  5757                        	longi	on
  5758 00:10E4: 3B           	tsc
  5759 00:10E5: 38           	sec
  5760 00:10E6: E9 04 00     	sbc	#L294
  5761 00:10E9: 1B           	tcs
  5762 00:10EA: 0B           	phd
  5763 00:10EB: 5B           	tcd
  5764             00000004   port_0	set	4
  5765                        	.block	820
  5766                        ;    return ((IPCPEEKPORT)CALL_KERNEL_API(EXPORT_K
                    ERNEL_IPCPEEKPORT))(port);
  5767                        	.sym	port,4,138,6,32,65
  5768                        	.line	821
  5769 00:10EC: D4 0A        	pei	<L294+port_0+2
  5770 00:10EE: D4 08        	pei	<L294+port_0
  5771 00:10F0: AF 42 15 00  	lda	>5442
  5772 00:10F4: 85 01        	sta	<R0
  5773 00:10F6: AF 44 15 00  	lda	>5442+2
  5774 00:10FA: 85 03        	sta	<R0+2
  Thu Jul 29 2021 22:56                                                Page 104


  5775 00:10FC: A0 26 01     	ldy	#$126
  5776 00:10FF: B7 01        	lda	[<R0],Y
  5777 00:1101: AA           	tax
  5778 00:1102: A0 24 01     	ldy	#$124
  5779 00:1105: B7 01        	lda	[<R0],Y
  5780                        	xref	~~~lcal
  5781 00:1107: 22 xx xx xx  	jsl	~~~lcal
  5782 00:110B: 85 01        	sta	<R0
  5783 00:110D: 86 03        	stx	<R0+2
  5784 00:110F: A6 03        	ldx	<R0+2
  5785 00:1111: A5 01        	lda	<R0
  5786                        L297:
  5787 00:1113: A8           	tay
  5788 00:1114: A5 06        	lda	<L294+2
  5789 00:1116: 85 0A        	sta	<L294+2+4
  5790 00:1118: A5 05        	lda	<L294+1
  5791 00:111A: 85 09        	sta	<L294+1+4
  5792 00:111C: 2B           	pld
  5793 00:111D: 3B           	tsc
  5794 00:111E: 18           	clc
  5795 00:111F: 69 08 00     	adc	#L294+4
  5796 00:1122: 1B           	tcs
  5797 00:1123: 98           	tya
  5798 00:1124: 6B           	rtl
  5799                        ;}
  5800                        	.line	822
  5801                        	.endblock	822
  5802             00000004   L294	equ	4
  5803             00000005   L295	equ	5
  5804                        	ends
  5805                        	efunc
  5806                        	.endfunc	822,5,4
  5807                        	.line	822
  5808                        ;
  5809                        ;/*
  5810                        ;*
  5811                        ;* Name:IPCWritePort
  5812                        ;* Subsystem:KERNEL
  5813                        ;*
  5814                        ;*/
  5815                        ;UINT IPCWritePort(PIPCPORT port,LPVOID data,UINT 
                    size)
  5816                        ;{
  5817                        	.line	830
  5818                        	.line	831
  5819                        	code
  5820                        	xdef	~~IPCWritePort
  5821                        	func
  5822                        	.function	831
  5823                        ~~IPCWritePort:
  5824                        	longa	on
  5825                        	longi	on
  5826 00:1125: 3B           	tsc
  5827 00:1126: 38           	sec
  5828 00:1127: E9 04 00     	sbc	#L298
  5829 00:112A: 1B           	tcs
  5830 00:112B: 0B           	phd
  5831 00:112C: 5B           	tcd
  Thu Jul 29 2021 22:56                                                Page 105


  5832             00000004   port_0	set	4
  5833             00000008   data_0	set	8
  5834             0000000C   size_0	set	12
  5835                        	.block	831
  5836                        ;    return ((IPCWRITEPORT)CALL_KERNEL_API(EXPORT_
                    KERNEL_IPCWRITEPORT))(port,data,size);
  5837                        	.sym	port,4,138,6,32,65
  5838                        	.sym	data,8,129,6,32
  5839                        	.sym	size,12,16,6,16
  5840                        	.line	832
  5841 00:112D: D4 10        	pei	<L298+size_0
  5842 00:112F: D4 0E        	pei	<L298+data_0+2
  5843 00:1131: D4 0C        	pei	<L298+data_0
  5844 00:1133: D4 0A        	pei	<L298+port_0+2
  5845 00:1135: D4 08        	pei	<L298+port_0
  5846 00:1137: AF 42 15 00  	lda	>5442
  5847 00:113B: 85 01        	sta	<R0
  5848 00:113D: AF 44 15 00  	lda	>5442+2
  5849 00:1141: 85 03        	sta	<R0+2
  5850 00:1143: A0 2A 01     	ldy	#$12a
  5851 00:1146: B7 01        	lda	[<R0],Y
  5852 00:1148: AA           	tax
  5853 00:1149: A0 28 01     	ldy	#$128
  5854 00:114C: B7 01        	lda	[<R0],Y
  5855                        	xref	~~~lcal
  5856 00:114E: 22 xx xx xx  	jsl	~~~lcal
  5857                        L301:
  5858 00:1152: A8           	tay
  5859 00:1153: A5 06        	lda	<L298+2
  5860 00:1155: 85 10        	sta	<L298+2+10
  5861 00:1157: A5 05        	lda	<L298+1
  5862 00:1159: 85 0F        	sta	<L298+1+10
  5863 00:115B: 2B           	pld
  5864 00:115C: 3B           	tsc
  5865 00:115D: 18           	clc
  5866 00:115E: 69 0E 00     	adc	#L298+10
  5867 00:1161: 1B           	tcs
  5868 00:1162: 98           	tya
  5869 00:1163: 6B           	rtl
  5870                        ;}
  5871                        	.line	833
  5872                        	.endblock	833
  5873             00000004   L298	equ	4
  5874             00000005   L299	equ	5
  5875                        	ends
  5876                        	efunc
  5877                        	.endfunc	833,5,4
  5878                        	.line	833
  5879                        ;
  5880                        ;/*
  5881                        ;*
  5882                        ;* Name:IPCWriteBytePort
  5883                        ;* Subsystem:KERNEL
  5884                        ;*
  5885                        ;*/
  5886                        ;VOID IPCWriteBytePort(PIPCPORT port,BYTE data)
  5887                        ;{
  5888                        	.line	841
  Thu Jul 29 2021 22:56                                                Page 106


  5889                        	.line	842
  5890                        	code
  5891                        	xdef	~~IPCWriteBytePort
  5892                        	func
  5893                        	.function	842
  5894                        ~~IPCWriteBytePort:
  5895                        	longa	on
  5896                        	longi	on
  5897 00:1164: 3B           	tsc
  5898 00:1165: 38           	sec
  5899 00:1166: E9 04 00     	sbc	#L302
  5900 00:1169: 1B           	tcs
  5901 00:116A: 0B           	phd
  5902 00:116B: 5B           	tcd
  5903             00000004   port_0	set	4
  5904             00000008   data_0	set	8
  5905                        	.block	842
  5906                        ;    ((IPCWRITEBYTEPORT)CALL_KERNEL_API(EXPORT_KER
                    NEL_IPCWRITEBYTEPORT))(port,data);
  5907                        	.sym	port,4,138,6,32,65
  5908                        	.sym	data,8,14,6,8
  5909                        	.line	843
  5910 00:116C: D4 0C        	pei	<L302+data_0
  5911 00:116E: D4 0A        	pei	<L302+port_0+2
  5912 00:1170: D4 08        	pei	<L302+port_0
  5913 00:1172: AF 42 15 00  	lda	>5442
  5914 00:1176: 85 01        	sta	<R0
  5915 00:1178: AF 44 15 00  	lda	>5442+2
  5916 00:117C: 85 03        	sta	<R0+2
  5917 00:117E: A0 2E 01     	ldy	#$12e
  5918 00:1181: B7 01        	lda	[<R0],Y
  5919 00:1183: AA           	tax
  5920 00:1184: A0 2C 01     	ldy	#$12c
  5921 00:1187: B7 01        	lda	[<R0],Y
  5922                        	xref	~~~lcal
  5923 00:1189: 22 xx xx xx  	jsl	~~~lcal
  5924                        ;}
  5925                        	.line	844
  5926                        L305:
  5927 00:118D: A5 06        	lda	<L302+2
  5928 00:118F: 85 0C        	sta	<L302+2+6
  5929 00:1191: A5 05        	lda	<L302+1
  5930 00:1193: 85 0B        	sta	<L302+1+6
  5931 00:1195: 2B           	pld
  5932 00:1196: 3B           	tsc
  5933 00:1197: 18           	clc
  5934 00:1198: 69 0A 00     	adc	#L302+6
  5935 00:119B: 1B           	tcs
  5936 00:119C: 6B           	rtl
  5937                        	.endblock	844
  5938             00000004   L302	equ	4
  5939             00000005   L303	equ	5
  5940                        	ends
  5941                        	efunc
  5942                        	.endfunc	844,5,4
  5943                        	.line	844
  5944                        ;
  5945                        ;/*
  Thu Jul 29 2021 22:56                                                Page 107


  5946                        ;*
  5947                        ;* Name:IPCWriteVerbPort
  5948                        ;* Subsystem:KERNEL
  5949                        ;*
  5950                        ;*/
  5951                        ;VOID IPCWriteVerbPort(PIPCPORT port,BYTE data1,BY
                    TE data2)
  5952                        ;{
  5953                        	.line	852
  5954                        	.line	853
  5955                        	code
  5956                        	xdef	~~IPCWriteVerbPort
  5957                        	func
  5958                        	.function	853
  5959                        ~~IPCWriteVerbPort:
  5960                        	longa	on
  5961                        	longi	on
  5962 00:119D: 3B           	tsc
  5963 00:119E: 38           	sec
  5964 00:119F: E9 04 00     	sbc	#L306
  5965 00:11A2: 1B           	tcs
  5966 00:11A3: 0B           	phd
  5967 00:11A4: 5B           	tcd
  5968             00000004   port_0	set	4
  5969             00000008   data1_0	set	8
  5970             0000000A   data2_0	set	10
  5971                        	.block	853
  5972                        ;    ((IPCWRITEVERBPORT)CALL_KERNEL_API(EXPORT_KER
                    NEL_IPCWRITEVERBPORT))(port,data1,data2);
  5973                        	.sym	port,4,138,6,32,65
  5974                        	.sym	data1,8,14,6,8
  5975                        	.sym	data2,10,14,6,8
  5976                        	.line	854
  5977 00:11A5: D4 0E        	pei	<L306+data2_0
  5978 00:11A7: D4 0C        	pei	<L306+data1_0
  5979 00:11A9: D4 0A        	pei	<L306+port_0+2
  5980 00:11AB: D4 08        	pei	<L306+port_0
  5981 00:11AD: AF 42 15 00  	lda	>5442
  5982 00:11B1: 85 01        	sta	<R0
  5983 00:11B3: AF 44 15 00  	lda	>5442+2
  5984 00:11B7: 85 03        	sta	<R0+2
  5985 00:11B9: A0 32 01     	ldy	#$132
  5986 00:11BC: B7 01        	lda	[<R0],Y
  5987 00:11BE: AA           	tax
  5988 00:11BF: A0 30 01     	ldy	#$130
  5989 00:11C2: B7 01        	lda	[<R0],Y
  5990                        	xref	~~~lcal
  5991 00:11C4: 22 xx xx xx  	jsl	~~~lcal
  5992                        ;}
  5993                        	.line	855
  5994                        L309:
  5995 00:11C8: A5 06        	lda	<L306+2
  5996 00:11CA: 85 0E        	sta	<L306+2+8
  5997 00:11CC: A5 05        	lda	<L306+1
  5998 00:11CE: 85 0D        	sta	<L306+1+8
  5999 00:11D0: 2B           	pld
  6000 00:11D1: 3B           	tsc
  6001 00:11D2: 18           	clc
  Thu Jul 29 2021 22:56                                                Page 108


  6002 00:11D3: 69 0C 00     	adc	#L306+8
  6003 00:11D6: 1B           	tcs
  6004 00:11D7: 6B           	rtl
  6005                        	.endblock	855
  6006             00000004   L306	equ	4
  6007             00000005   L307	equ	5
  6008                        	ends
  6009                        	efunc
  6010                        	.endfunc	855,5,4
  6011                        	.line	855
  6012                        ;
  6013                        ;/*
  6014                        ;*
  6015                        ;* Name:IPCWriteIntegerPort
  6016                        ;* Subsystem:KERNEL
  6017                        ;*
  6018                        ;*/
  6019                        ;VOID IPCWriteIntegerPort(PIPCPORT port,UINT data)
  6020                        ;{
  6021                        	.line	863
  6022                        	.line	864
  6023                        	code
  6024                        	xdef	~~IPCWriteIntegerPort
  6025                        	func
  6026                        	.function	864
  6027                        ~~IPCWriteIntegerPort:
  6028                        	longa	on
  6029                        	longi	on
  6030 00:11D8: 3B           	tsc
  6031 00:11D9: 38           	sec
  6032 00:11DA: E9 04 00     	sbc	#L310
  6033 00:11DD: 1B           	tcs
  6034 00:11DE: 0B           	phd
  6035 00:11DF: 5B           	tcd
  6036             00000004   port_0	set	4
  6037             00000008   data_0	set	8
  6038                        	.block	864
  6039                        ;    ((IPCWRITEINTEGERPORT)CALL_KERNEL_API(EXPORT_
                    KERNEL_IPCWRITEINTEGERPORT))(port,data);
  6040                        	.sym	port,4,138,6,32,65
  6041                        	.sym	data,8,16,6,16
  6042                        	.line	865
  6043 00:11E0: D4 0C        	pei	<L310+data_0
  6044 00:11E2: D4 0A        	pei	<L310+port_0+2
  6045 00:11E4: D4 08        	pei	<L310+port_0
  6046 00:11E6: AF 42 15 00  	lda	>5442
  6047 00:11EA: 85 01        	sta	<R0
  6048 00:11EC: AF 44 15 00  	lda	>5442+2
  6049 00:11F0: 85 03        	sta	<R0+2
  6050 00:11F2: A0 36 01     	ldy	#$136
  6051 00:11F5: B7 01        	lda	[<R0],Y
  6052 00:11F7: AA           	tax
  6053 00:11F8: A0 34 01     	ldy	#$134
  6054 00:11FB: B7 01        	lda	[<R0],Y
  6055                        	xref	~~~lcal
  6056 00:11FD: 22 xx xx xx  	jsl	~~~lcal
  6057                        ;}
  6058                        	.line	866
  Thu Jul 29 2021 22:56                                                Page 109


  6059                        L313:
  6060 00:1201: A5 06        	lda	<L310+2
  6061 00:1203: 85 0C        	sta	<L310+2+6
  6062 00:1205: A5 05        	lda	<L310+1
  6063 00:1207: 85 0B        	sta	<L310+1+6
  6064 00:1209: 2B           	pld
  6065 00:120A: 3B           	tsc
  6066 00:120B: 18           	clc
  6067 00:120C: 69 0A 00     	adc	#L310+6
  6068 00:120F: 1B           	tcs
  6069 00:1210: 6B           	rtl
  6070                        	.endblock	866
  6071             00000004   L310	equ	4
  6072             00000005   L311	equ	5
  6073                        	ends
  6074                        	efunc
  6075                        	.endfunc	866,5,4
  6076                        	.line	866
  6077                        ;
  6078                        ;/*
  6079                        ;*
  6080                        ;* Name:IPCWriteLongPort
  6081                        ;* Subsystem:KERNEL
  6082                        ;*
  6083                        ;*/
  6084                        ;VOID IPCWriteLongPort(PIPCPORT port,ULONG data)
  6085                        ;{
  6086                        	.line	874
  6087                        	.line	875
  6088                        	code
  6089                        	xdef	~~IPCWriteLongPort
  6090                        	func
  6091                        	.function	875
  6092                        ~~IPCWriteLongPort:
  6093                        	longa	on
  6094                        	longi	on
  6095 00:1211: 3B           	tsc
  6096 00:1212: 38           	sec
  6097 00:1213: E9 04 00     	sbc	#L314
  6098 00:1216: 1B           	tcs
  6099 00:1217: 0B           	phd
  6100 00:1218: 5B           	tcd
  6101             00000004   port_0	set	4
  6102             00000008   data_0	set	8
  6103                        	.block	875
  6104                        ;    ((IPCWRITELONGPORT)CALL_KERNEL_API(EXPORT_KER
                    NEL_IPCWRITELONGPORT))(port,data);
  6105                        	.sym	port,4,138,6,32,65
  6106                        	.sym	data,8,18,6,32
  6107                        	.line	876
  6108 00:1219: D4 0E        	pei	<L314+data_0+2
  6109 00:121B: D4 0C        	pei	<L314+data_0
  6110 00:121D: D4 0A        	pei	<L314+port_0+2
  6111 00:121F: D4 08        	pei	<L314+port_0
  6112 00:1221: AF 42 15 00  	lda	>5442
  6113 00:1225: 85 01        	sta	<R0
  6114 00:1227: AF 44 15 00  	lda	>5442+2
  6115 00:122B: 85 03        	sta	<R0+2
  Thu Jul 29 2021 22:56                                                Page 110


  6116 00:122D: A0 3A 01     	ldy	#$13a
  6117 00:1230: B7 01        	lda	[<R0],Y
  6118 00:1232: AA           	tax
  6119 00:1233: A0 38 01     	ldy	#$138
  6120 00:1236: B7 01        	lda	[<R0],Y
  6121                        	xref	~~~lcal
  6122 00:1238: 22 xx xx xx  	jsl	~~~lcal
  6123                        ;}
  6124                        	.line	877
  6125                        L317:
  6126 00:123C: A5 06        	lda	<L314+2
  6127 00:123E: 85 0E        	sta	<L314+2+8
  6128 00:1240: A5 05        	lda	<L314+1
  6129 00:1242: 85 0D        	sta	<L314+1+8
  6130 00:1244: 2B           	pld
  6131 00:1245: 3B           	tsc
  6132 00:1246: 18           	clc
  6133 00:1247: 69 0C 00     	adc	#L314+8
  6134 00:124A: 1B           	tcs
  6135 00:124B: 6B           	rtl
  6136                        	.endblock	877
  6137             00000004   L314	equ	4
  6138             00000005   L315	equ	5
  6139                        	ends
  6140                        	efunc
  6141                        	.endfunc	877,5,4
  6142                        	.line	877
  6143                        ;
  6144                        ;/*
  6145                        ;*
  6146                        ;* Name:SetMemoryBlockVirtual
  6147                        ;* Subsystem:KERNEL
  6148                        ;*
  6149                        ;*/
  6150                        ;HANDLE SetMemoryBlockVirtual(LPVOID memBlock,UINT
                     attr)
  6151                        ;{
  6152                        	.line	885
  6153                        	.line	886
  6154                        	code
  6155                        	xdef	~~SetMemoryBlockVirtual
  6156                        	func
  6157                        	.function	886
  6158                        ~~SetMemoryBlockVirtual:
  6159                        	longa	on
  6160                        	longi	on
  6161 00:124C: 3B           	tsc
  6162 00:124D: 38           	sec
  6163 00:124E: E9 04 00     	sbc	#L318
  6164 00:1251: 1B           	tcs
  6165 00:1252: 0B           	phd
  6166 00:1253: 5B           	tcd
  6167             00000004   memBlock_0	set	4
  6168             00000008   attr_0	set	8
  6169                        	.block	886
  6170                        ;    return ((SETMEMORYBLOCKVIRTUAL)CALL_KERNEL_AP
                    I(EXPORT_KERNEL_SETMEMORYBLOCKVIRTUAL))(memBlock,attr);
  6171                        	.sym	memBlock,4,129,6,32
  Thu Jul 29 2021 22:56                                                Page 111


  6172                        	.sym	attr,8,16,6,16
  6173                        	.line	887
  6174 00:1254: D4 0C        	pei	<L318+attr_0
  6175 00:1256: D4 0A        	pei	<L318+memBlock_0+2
  6176 00:1258: D4 08        	pei	<L318+memBlock_0
  6177 00:125A: AF 42 15 00  	lda	>5442
  6178 00:125E: 85 01        	sta	<R0
  6179 00:1260: AF 44 15 00  	lda	>5442+2
  6180 00:1264: 85 03        	sta	<R0+2
  6181 00:1266: A0 3E 01     	ldy	#$13e
  6182 00:1269: B7 01        	lda	[<R0],Y
  6183 00:126B: AA           	tax
  6184 00:126C: A0 3C 01     	ldy	#$13c
  6185 00:126F: B7 01        	lda	[<R0],Y
  6186                        	xref	~~~lcal
  6187 00:1271: 22 xx xx xx  	jsl	~~~lcal
  6188 00:1275: 85 01        	sta	<R0
  6189 00:1277: 86 03        	stx	<R0+2
  6190 00:1279: A6 03        	ldx	<R0+2
  6191 00:127B: A5 01        	lda	<R0
  6192                        L321:
  6193 00:127D: A8           	tay
  6194 00:127E: A5 06        	lda	<L318+2
  6195 00:1280: 85 0C        	sta	<L318+2+6
  6196 00:1282: A5 05        	lda	<L318+1
  6197 00:1284: 85 0B        	sta	<L318+1+6
  6198 00:1286: 2B           	pld
  6199 00:1287: 3B           	tsc
  6200 00:1288: 18           	clc
  6201 00:1289: 69 0A 00     	adc	#L318+6
  6202 00:128C: 1B           	tcs
  6203 00:128D: 98           	tya
  6204 00:128E: 6B           	rtl
  6205                        ;}
  6206                        	.line	888
  6207                        	.endblock	888
  6208             00000004   L318	equ	4
  6209             00000005   L319	equ	5
  6210                        	ends
  6211                        	efunc
  6212                        	.endfunc	888,5,4
  6213                        	.line	888
  6214                        ;
  6215                        ;/*
  6216                        ;*
  6217                        ;* Name:SetMemoryBlockUser
  6218                        ;* Subsystem:KERNEL
  6219                        ;*
  6220                        ;*/
  6221                        ;BOOL SetMemoryBlockUser(LPVOID memBlock,UINT user
                    Id)
  6222                        ;{
  6223                        	.line	896
  6224                        	.line	897
  6225                        	code
  6226                        	xdef	~~SetMemoryBlockUser
  6227                        	func
  6228                        	.function	897
  Thu Jul 29 2021 22:56                                                Page 112


  6229                        ~~SetMemoryBlockUser:
  6230                        	longa	on
  6231                        	longi	on
  6232 00:128F: 3B           	tsc
  6233 00:1290: 38           	sec
  6234 00:1291: E9 04 00     	sbc	#L322
  6235 00:1294: 1B           	tcs
  6236 00:1295: 0B           	phd
  6237 00:1296: 5B           	tcd
  6238             00000004   memBlock_0	set	4
  6239             00000008   userId_0	set	8
  6240                        	.block	897
  6241                        ;    return ((SETMEMORYBLOCKUSER)CALL_KERNEL_API(E
                    XPORT_KERNEL_SETMEMORYBLOCKUSER))(memBlock,userId);
  6242                        	.sym	memBlock,4,129,6,32
  6243                        	.sym	userId,8,16,6,16
  6244                        	.line	898
  6245 00:1297: D4 0C        	pei	<L322+userId_0
  6246 00:1299: D4 0A        	pei	<L322+memBlock_0+2
  6247 00:129B: D4 08        	pei	<L322+memBlock_0
  6248 00:129D: AF 42 15 00  	lda	>5442
  6249 00:12A1: 85 01        	sta	<R0
  6250 00:12A3: AF 44 15 00  	lda	>5442+2
  6251 00:12A7: 85 03        	sta	<R0+2
  6252 00:12A9: A0 42 01     	ldy	#$142
  6253 00:12AC: B7 01        	lda	[<R0],Y
  6254 00:12AE: AA           	tax
  6255 00:12AF: A0 40 01     	ldy	#$140
  6256 00:12B2: B7 01        	lda	[<R0],Y
  6257                        	xref	~~~lcal
  6258 00:12B4: 22 xx xx xx  	jsl	~~~lcal
  6259 00:12B8: E2 20        	sep	#$20
  6260                        	longa	off
  6261 00:12BA: 85 01        	sta	<R0
  6262 00:12BC: C2 20        	rep	#$20
  6263                        	longa	on
  6264 00:12BE: A5 01        	lda	<R0
  6265 00:12C0: 29 FF 00     	and	#$ff
  6266                        L325:
  6267 00:12C3: A8           	tay
  6268 00:12C4: A5 06        	lda	<L322+2
  6269 00:12C6: 85 0C        	sta	<L322+2+6
  6270 00:12C8: A5 05        	lda	<L322+1
  6271 00:12CA: 85 0B        	sta	<L322+1+6
  6272 00:12CC: 2B           	pld
  6273 00:12CD: 3B           	tsc
  6274 00:12CE: 18           	clc
  6275 00:12CF: 69 0A 00     	adc	#L322+6
  6276 00:12D2: 1B           	tcs
  6277 00:12D3: 98           	tya
  6278 00:12D4: 6B           	rtl
  6279                        ;}
  6280                        	.line	899
  6281                        	.endblock	899
  6282             00000004   L322	equ	4
  6283             00000005   L323	equ	5
  6284                        	ends
  6285                        	efunc
  Thu Jul 29 2021 22:56                                                Page 113


  6286                        	.endfunc	899,5,4
  6287                        	.line	899
  6288                        ;
  6289                        ;/*
  6290                        ;*
  6291                        ;* Name:QueueInitialize
  6292                        ;* Subsystem:KERNEL
  6293                        ;*
  6294                        ;*/
  6295                        ;VOID QueueInitialize(PFXQUEUE q)
  6296                        ;{
  6297                        	.line	907
  6298                        	.line	908
  6299                        	code
  6300                        	xdef	~~QueueInitialize
  6301                        	func
  6302                        	.function	908
  6303                        ~~QueueInitialize:
  6304                        	longa	on
  6305                        	longi	on
  6306 00:12D5: 3B           	tsc
  6307 00:12D6: 38           	sec
  6308 00:12D7: E9 04 00     	sbc	#L326
  6309 00:12DA: 1B           	tcs
  6310 00:12DB: 0B           	phd
  6311 00:12DC: 5B           	tcd
  6312             00000004   q_0	set	4
  6313                        	.block	908
  6314                        ;    ((QUEUEINITIALIZE)CALL_KERNEL_API(EXPORT_KERN
                    EL_QUEUEINITIALIZE))(q);
  6315                        	.sym	q,4,138,6,32,7
  6316                        	.line	909
  6317 00:12DD: D4 0A        	pei	<L326+q_0+2
  6318 00:12DF: D4 08        	pei	<L326+q_0
  6319 00:12E1: AF 42 15 00  	lda	>5442
  6320 00:12E5: 85 01        	sta	<R0
  6321 00:12E7: AF 44 15 00  	lda	>5442+2
  6322 00:12EB: 85 03        	sta	<R0+2
  6323 00:12ED: A0 46 01     	ldy	#$146
  6324 00:12F0: B7 01        	lda	[<R0],Y
  6325 00:12F2: AA           	tax
  6326 00:12F3: A0 44 01     	ldy	#$144
  6327 00:12F6: B7 01        	lda	[<R0],Y
  6328                        	xref	~~~lcal
  6329 00:12F8: 22 xx xx xx  	jsl	~~~lcal
  6330                        ;}
  6331                        	.line	910
  6332                        L329:
  6333 00:12FC: A5 06        	lda	<L326+2
  6334 00:12FE: 85 0A        	sta	<L326+2+4
  6335 00:1300: A5 05        	lda	<L326+1
  6336 00:1302: 85 09        	sta	<L326+1+4
  6337 00:1304: 2B           	pld
  6338 00:1305: 3B           	tsc
  6339 00:1306: 18           	clc
  6340 00:1307: 69 08 00     	adc	#L326+4
  6341 00:130A: 1B           	tcs
  6342 00:130B: 6B           	rtl
  Thu Jul 29 2021 22:56                                                Page 114


  6343                        	.endblock	910
  6344             00000004   L326	equ	4
  6345             00000005   L327	equ	5
  6346                        	ends
  6347                        	efunc
  6348                        	.endfunc	910,5,4
  6349                        	.line	910
  6350                        ;
  6351                        ;/*
  6352                        ;*
  6353                        ;* Name:QueueIsEmpty
  6354                        ;* Subsystem:KERNEL
  6355                        ;*
  6356                        ;*/
  6357                        ;INT QueueIsEmpty(PFXQUEUE q)
  6358                        ;{
  6359                        	.line	918
  6360                        	.line	919
  6361                        	code
  6362                        	xdef	~~QueueIsEmpty
  6363                        	func
  6364                        	.function	919
  6365                        ~~QueueIsEmpty:
  6366                        	longa	on
  6367                        	longi	on
  6368 00:130C: 3B           	tsc
  6369 00:130D: 38           	sec
  6370 00:130E: E9 04 00     	sbc	#L330
  6371 00:1311: 1B           	tcs
  6372 00:1312: 0B           	phd
  6373 00:1313: 5B           	tcd
  6374             00000004   q_0	set	4
  6375                        	.block	919
  6376                        ;    return ((QUEUEISEMPTY)CALL_KERNEL_API(EXPORT_
                    KERNEL_QUEUEISEMPTY))(q);
  6377                        	.sym	q,4,138,6,32,7
  6378                        	.line	920
  6379 00:1314: D4 0A        	pei	<L330+q_0+2
  6380 00:1316: D4 08        	pei	<L330+q_0
  6381 00:1318: AF 42 15 00  	lda	>5442
  6382 00:131C: 85 01        	sta	<R0
  6383 00:131E: AF 44 15 00  	lda	>5442+2
  6384 00:1322: 85 03        	sta	<R0+2
  6385 00:1324: A0 4A 01     	ldy	#$14a
  6386 00:1327: B7 01        	lda	[<R0],Y
  6387 00:1329: AA           	tax
  6388 00:132A: A0 48 01     	ldy	#$148
  6389 00:132D: B7 01        	lda	[<R0],Y
  6390                        	xref	~~~lcal
  6391 00:132F: 22 xx xx xx  	jsl	~~~lcal
  6392                        L333:
  6393 00:1333: A8           	tay
  6394 00:1334: A5 06        	lda	<L330+2
  6395 00:1336: 85 0A        	sta	<L330+2+4
  6396 00:1338: A5 05        	lda	<L330+1
  6397 00:133A: 85 09        	sta	<L330+1+4
  6398 00:133C: 2B           	pld
  6399 00:133D: 3B           	tsc
  Thu Jul 29 2021 22:56                                                Page 115


  6400 00:133E: 18           	clc
  6401 00:133F: 69 08 00     	adc	#L330+4
  6402 00:1342: 1B           	tcs
  6403 00:1343: 98           	tya
  6404 00:1344: 6B           	rtl
  6405                        ;}
  6406                        	.line	921
  6407                        	.endblock	921
  6408             00000004   L330	equ	4
  6409             00000005   L331	equ	5
  6410                        	ends
  6411                        	efunc
  6412                        	.endfunc	921,5,4
  6413                        	.line	921
  6414                        ;
  6415                        ;/*
  6416                        ;*
  6417                        ;* Name:QueueAdd
  6418                        ;* Subsystem:KERNEL
  6419                        ;*
  6420                        ;*/
  6421                        ;BOOL QueueAdd(PFXQUEUE q,LPVOID value)
  6422                        ;{
  6423                        	.line	929
  6424                        	.line	930
  6425                        	code
  6426                        	xdef	~~QueueAdd
  6427                        	func
  6428                        	.function	930
  6429                        ~~QueueAdd:
  6430                        	longa	on
  6431                        	longi	on
  6432 00:1345: 3B           	tsc
  6433 00:1346: 38           	sec
  6434 00:1347: E9 04 00     	sbc	#L334
  6435 00:134A: 1B           	tcs
  6436 00:134B: 0B           	phd
  6437 00:134C: 5B           	tcd
  6438             00000004   q_0	set	4
  6439             00000008   value_0	set	8
  6440                        	.block	930
  6441                        ;    return ((QUEUEADD)CALL_KERNEL_API(EXPORT_KERN
                    EL_QUEUEADD))(q,value);
  6442                        	.sym	q,4,138,6,32,7
  6443                        	.sym	value,8,129,6,32
  6444                        	.line	931
  6445 00:134D: D4 0E        	pei	<L334+value_0+2
  6446 00:134F: D4 0C        	pei	<L334+value_0
  6447 00:1351: D4 0A        	pei	<L334+q_0+2
  6448 00:1353: D4 08        	pei	<L334+q_0
  6449 00:1355: AF 42 15 00  	lda	>5442
  6450 00:1359: 85 01        	sta	<R0
  6451 00:135B: AF 44 15 00  	lda	>5442+2
  6452 00:135F: 85 03        	sta	<R0+2
  6453 00:1361: A0 4E 01     	ldy	#$14e
  6454 00:1364: B7 01        	lda	[<R0],Y
  6455 00:1366: AA           	tax
  6456 00:1367: A0 4C 01     	ldy	#$14c
  Thu Jul 29 2021 22:56                                                Page 116


  6457 00:136A: B7 01        	lda	[<R0],Y
  6458                        	xref	~~~lcal
  6459 00:136C: 22 xx xx xx  	jsl	~~~lcal
  6460 00:1370: E2 20        	sep	#$20
  6461                        	longa	off
  6462 00:1372: 85 01        	sta	<R0
  6463 00:1374: C2 20        	rep	#$20
  6464                        	longa	on
  6465 00:1376: A5 01        	lda	<R0
  6466 00:1378: 29 FF 00     	and	#$ff
  6467                        L337:
  6468 00:137B: A8           	tay
  6469 00:137C: A5 06        	lda	<L334+2
  6470 00:137E: 85 0E        	sta	<L334+2+8
  6471 00:1380: A5 05        	lda	<L334+1
  6472 00:1382: 85 0D        	sta	<L334+1+8
  6473 00:1384: 2B           	pld
  6474 00:1385: 3B           	tsc
  6475 00:1386: 18           	clc
  6476 00:1387: 69 0C 00     	adc	#L334+8
  6477 00:138A: 1B           	tcs
  6478 00:138B: 98           	tya
  6479 00:138C: 6B           	rtl
  6480                        ;}
  6481                        	.line	932
  6482                        	.endblock	932
  6483             00000004   L334	equ	4
  6484             00000005   L335	equ	5
  6485                        	ends
  6486                        	efunc
  6487                        	.endfunc	932,5,4
  6488                        	.line	932
  6489                        ;
  6490                        ;/*
  6491                        ;*
  6492                        ;* Name:QueueRemove
  6493                        ;* Subsystem:KERNEL
  6494                        ;*
  6495                        ;*/
  6496                        ;LPVOID QueueRemove(PFXQUEUE q)
  6497                        ;{
  6498                        	.line	940
  6499                        	.line	941
  6500                        	code
  6501                        	xdef	~~QueueRemove
  6502                        	func
  6503                        	.function	941
  6504                        ~~QueueRemove:
  6505                        	longa	on
  6506                        	longi	on
  6507 00:138D: 3B           	tsc
  6508 00:138E: 38           	sec
  6509 00:138F: E9 04 00     	sbc	#L338
  6510 00:1392: 1B           	tcs
  6511 00:1393: 0B           	phd
  6512 00:1394: 5B           	tcd
  6513             00000004   q_0	set	4
  6514                        	.block	941
  Thu Jul 29 2021 22:56                                                Page 117


  6515                        ;    return ((QUEUEREMOVE)CALL_KERNEL_API(EXPORT_K
                    ERNEL_QUEUEREMOVE))(q);
  6516                        	.sym	q,4,138,6,32,7
  6517                        	.line	942
  6518 00:1395: D4 0A        	pei	<L338+q_0+2
  6519 00:1397: D4 08        	pei	<L338+q_0
  6520 00:1399: AF 42 15 00  	lda	>5442
  6521 00:139D: 85 01        	sta	<R0
  6522 00:139F: AF 44 15 00  	lda	>5442+2
  6523 00:13A3: 85 03        	sta	<R0+2
  6524 00:13A5: A0 52 01     	ldy	#$152
  6525 00:13A8: B7 01        	lda	[<R0],Y
  6526 00:13AA: AA           	tax
  6527 00:13AB: A0 50 01     	ldy	#$150
  6528 00:13AE: B7 01        	lda	[<R0],Y
  6529                        	xref	~~~lcal
  6530 00:13B0: 22 xx xx xx  	jsl	~~~lcal
  6531 00:13B4: 85 01        	sta	<R0
  6532 00:13B6: 86 03        	stx	<R0+2
  6533 00:13B8: A6 03        	ldx	<R0+2
  6534 00:13BA: A5 01        	lda	<R0
  6535                        L341:
  6536 00:13BC: A8           	tay
  6537 00:13BD: A5 06        	lda	<L338+2
  6538 00:13BF: 85 0A        	sta	<L338+2+4
  6539 00:13C1: A5 05        	lda	<L338+1
  6540 00:13C3: 85 09        	sta	<L338+1+4
  6541 00:13C5: 2B           	pld
  6542 00:13C6: 3B           	tsc
  6543 00:13C7: 18           	clc
  6544 00:13C8: 69 08 00     	adc	#L338+4
  6545 00:13CB: 1B           	tcs
  6546 00:13CC: 98           	tya
  6547 00:13CD: 6B           	rtl
  6548                        ;}
  6549                        	.line	943
  6550                        	.endblock	943
  6551             00000004   L338	equ	4
  6552             00000005   L339	equ	5
  6553                        	ends
  6554                        	efunc
  6555                        	.endfunc	943,5,4
  6556                        	.line	943
  6557                        ;
  6558                        ;/*
  6559                        ;*
  6560                        ;* Name:QueueAddWithLock
  6561                        ;* Subsystem:KERNEL
  6562                        ;*
  6563                        ;*/
  6564                        ;VOID QueueAddWithLock(PFXQUEUE q,LPVOID value)
  6565                        ;{
  6566                        	.line	951
  6567                        	.line	952
  6568                        	code
  6569                        	xdef	~~QueueAddWithLock
  6570                        	func
  6571                        	.function	952
  Thu Jul 29 2021 22:56                                                Page 118


  6572                        ~~QueueAddWithLock:
  6573                        	longa	on
  6574                        	longi	on
  6575 00:13CE: 3B           	tsc
  6576 00:13CF: 38           	sec
  6577 00:13D0: E9 04 00     	sbc	#L342
  6578 00:13D3: 1B           	tcs
  6579 00:13D4: 0B           	phd
  6580 00:13D5: 5B           	tcd
  6581             00000004   q_0	set	4
  6582             00000008   value_0	set	8
  6583                        	.block	952
  6584                        ;    ((QUEUEADDWITHLOCK)CALL_KERNEL_API(EXPORT_KER
                    NEL_QUEUEADDWITHLOCK))(q,value);
  6585                        	.sym	q,4,138,6,32,7
  6586                        	.sym	value,8,129,6,32
  6587                        	.line	953
  6588 00:13D6: D4 0E        	pei	<L342+value_0+2
  6589 00:13D8: D4 0C        	pei	<L342+value_0
  6590 00:13DA: D4 0A        	pei	<L342+q_0+2
  6591 00:13DC: D4 08        	pei	<L342+q_0
  6592 00:13DE: AF 42 15 00  	lda	>5442
  6593 00:13E2: 85 01        	sta	<R0
  6594 00:13E4: AF 44 15 00  	lda	>5442+2
  6595 00:13E8: 85 03        	sta	<R0+2
  6596 00:13EA: A0 56 01     	ldy	#$156
  6597 00:13ED: B7 01        	lda	[<R0],Y
  6598 00:13EF: AA           	tax
  6599 00:13F0: A0 54 01     	ldy	#$154
  6600 00:13F3: B7 01        	lda	[<R0],Y
  6601                        	xref	~~~lcal
  6602 00:13F5: 22 xx xx xx  	jsl	~~~lcal
  6603                        ;}
  6604                        	.line	954
  6605                        L345:
  6606 00:13F9: A5 06        	lda	<L342+2
  6607 00:13FB: 85 0E        	sta	<L342+2+8
  6608 00:13FD: A5 05        	lda	<L342+1
  6609 00:13FF: 85 0D        	sta	<L342+1+8
  6610 00:1401: 2B           	pld
  6611 00:1402: 3B           	tsc
  6612 00:1403: 18           	clc
  6613 00:1404: 69 0C 00     	adc	#L342+8
  6614 00:1407: 1B           	tcs
  6615 00:1408: 6B           	rtl
  6616                        	.endblock	954
  6617             00000004   L342	equ	4
  6618             00000005   L343	equ	5
  6619                        	ends
  6620                        	efunc
  6621                        	.endfunc	954,5,4
  6622                        	.line	954
  6623                        ;
  6624                        ;/*
  6625                        ;*
  6626                        ;* Name:QueueRemoveWithLock
  6627                        ;* Subsystem:KERNEL
  6628                        ;*
  Thu Jul 29 2021 22:56                                                Page 119


  6629                        ;*/
  6630                        ;LPVOID QueueRemoveWithLock(PFXQUEUE q)
  6631                        ;{
  6632                        	.line	962
  6633                        	.line	963
  6634                        	code
  6635                        	xdef	~~QueueRemoveWithLock
  6636                        	func
  6637                        	.function	963
  6638                        ~~QueueRemoveWithLock:
  6639                        	longa	on
  6640                        	longi	on
  6641 00:1409: 3B           	tsc
  6642 00:140A: 38           	sec
  6643 00:140B: E9 04 00     	sbc	#L346
  6644 00:140E: 1B           	tcs
  6645 00:140F: 0B           	phd
  6646 00:1410: 5B           	tcd
  6647             00000004   q_0	set	4
  6648                        	.block	963
  6649                        ;    return ((QUEUEREMOVEWITHLOCK)CALL_KERNEL_API(
                    EXPORT_KERNEL_QUEUEREMOVEWITHLOCK))(q);
  6650                        	.sym	q,4,138,6,32,7
  6651                        	.line	964
  6652 00:1411: D4 0A        	pei	<L346+q_0+2
  6653 00:1413: D4 08        	pei	<L346+q_0
  6654 00:1415: AF 42 15 00  	lda	>5442
  6655 00:1419: 85 01        	sta	<R0
  6656 00:141B: AF 44 15 00  	lda	>5442+2
  6657 00:141F: 85 03        	sta	<R0+2
  6658 00:1421: A0 5A 01     	ldy	#$15a
  6659 00:1424: B7 01        	lda	[<R0],Y
  6660 00:1426: AA           	tax
  6661 00:1427: A0 58 01     	ldy	#$158
  6662 00:142A: B7 01        	lda	[<R0],Y
  6663                        	xref	~~~lcal
  6664 00:142C: 22 xx xx xx  	jsl	~~~lcal
  6665 00:1430: 85 01        	sta	<R0
  6666 00:1432: 86 03        	stx	<R0+2
  6667 00:1434: A6 03        	ldx	<R0+2
  6668 00:1436: A5 01        	lda	<R0
  6669                        L349:
  6670 00:1438: A8           	tay
  6671 00:1439: A5 06        	lda	<L346+2
  6672 00:143B: 85 0A        	sta	<L346+2+4
  6673 00:143D: A5 05        	lda	<L346+1
  6674 00:143F: 85 09        	sta	<L346+1+4
  6675 00:1441: 2B           	pld
  6676 00:1442: 3B           	tsc
  6677 00:1443: 18           	clc
  6678 00:1444: 69 08 00     	adc	#L346+4
  6679 00:1447: 1B           	tcs
  6680 00:1448: 98           	tya
  6681 00:1449: 6B           	rtl
  6682                        ;}
  6683                        	.line	965
  6684                        	.endblock	965
  6685             00000004   L346	equ	4
  Thu Jul 29 2021 22:56                                                Page 120


  6686             00000005   L347	equ	5
  6687                        	ends
  6688                        	efunc
  6689                        	.endfunc	965,5,4
  6690                        	.line	965
  6691                        ;
  6692                        ;/*
  6693                        ;*
  6694                        ;* Name:NodesInit
  6695                        ;* Subsystem:KERNEL
  6696                        ;*
  6697                        ;*/
  6698                        ;PFXNODE NodesInit(BYTE type,LPCSTR name,LPVOID da
                    ta)
  6699                        ;{
  6700                        	.line	973
  6701                        	.line	974
  6702                        	code
  6703                        	xdef	~~NodesInit
  6704                        	func
  6705                        	.function	974
  6706                        ~~NodesInit:
  6707                        	longa	on
  6708                        	longi	on
  6709 00:144A: 3B           	tsc
  6710 00:144B: 38           	sec
  6711 00:144C: E9 04 00     	sbc	#L350
  6712 00:144F: 1B           	tcs
  6713 00:1450: 0B           	phd
  6714 00:1451: 5B           	tcd
  6715             00000004   type_0	set	4
  6716             00000006   name_0	set	6
  6717             0000000A   data_0	set	10
  6718                        	.block	974
  6719                        ;    return ((NODESINIT)CALL_KERNEL_API(EXPORT_KER
                    NEL_NODESINIT))(type,name,data);
  6720                        	.sym	type,4,14,6,8
  6721                        	.sym	name,6,142,6,32
  6722                        	.sym	data,10,129,6,32
  6723                        	.line	975
  6724 00:1452: D4 10        	pei	<L350+data_0+2
  6725 00:1454: D4 0E        	pei	<L350+data_0
  6726 00:1456: D4 0C        	pei	<L350+name_0+2
  6727 00:1458: D4 0A        	pei	<L350+name_0
  6728 00:145A: D4 08        	pei	<L350+type_0
  6729 00:145C: AF 42 15 00  	lda	>5442
  6730 00:1460: 85 01        	sta	<R0
  6731 00:1462: AF 44 15 00  	lda	>5442+2
  6732 00:1466: 85 03        	sta	<R0+2
  6733 00:1468: A0 5E 01     	ldy	#$15e
  6734 00:146B: B7 01        	lda	[<R0],Y
  6735 00:146D: AA           	tax
  6736 00:146E: A0 5C 01     	ldy	#$15c
  6737 00:1471: B7 01        	lda	[<R0],Y
  6738                        	xref	~~~lcal
  6739 00:1473: 22 xx xx xx  	jsl	~~~lcal
  6740 00:1477: 85 01        	sta	<R0
  6741 00:1479: 86 03        	stx	<R0+2
  Thu Jul 29 2021 22:56                                                Page 121


  6742 00:147B: A6 03        	ldx	<R0+2
  6743 00:147D: A5 01        	lda	<R0
  6744                        L353:
  6745 00:147F: A8           	tay
  6746 00:1480: A5 06        	lda	<L350+2
  6747 00:1482: 85 10        	sta	<L350+2+10
  6748 00:1484: A5 05        	lda	<L350+1
  6749 00:1486: 85 0F        	sta	<L350+1+10
  6750 00:1488: 2B           	pld
  6751 00:1489: 3B           	tsc
  6752 00:148A: 18           	clc
  6753 00:148B: 69 0E 00     	adc	#L350+10
  6754 00:148E: 1B           	tcs
  6755 00:148F: 98           	tya
  6756 00:1490: 6B           	rtl
  6757                        ;}
  6758                        	.line	976
  6759                        	.endblock	976
  6760             00000004   L350	equ	4
  6761             00000005   L351	equ	5
  6762                        	ends
  6763                        	efunc
  6764                        	.endfunc	976,5,4
  6765                        	.line	976
  6766                        ;
  6767                        ;/*
  6768                        ;*
  6769                        ;* Name:NodesCreateByName
  6770                        ;* Subsystem:KERNEL
  6771                        ;*
  6772                        ;*/
  6773                        ;PFXNODE NodesCreateByName(BYTE type,LPCSTR name,L
                    PVOID data,PFXNODE next,PFXNODE last)
  6774                        ;{
  6775                        	.line	984
  6776                        	.line	985
  6777                        	code
  6778                        	xdef	~~NodesCreateByName
  6779                        	func
  6780                        	.function	985
  6781                        ~~NodesCreateByName:
  6782                        	longa	on
  6783                        	longi	on
  6784 00:1491: 3B           	tsc
  6785 00:1492: 38           	sec
  6786 00:1493: E9 04 00     	sbc	#L354
  6787 00:1496: 1B           	tcs
  6788 00:1497: 0B           	phd
  6789 00:1498: 5B           	tcd
  6790             00000004   type_0	set	4
  6791             00000006   name_0	set	6
  6792             0000000A   data_0	set	10
  6793             0000000E   next_0	set	14
  6794             00000012   last_0	set	18
  6795                        	.block	985
  6796                        ;    return ((NODESCREATEBYNAME)CALL_KERNEL_API(EX
                    PORT_KERNEL_NODESCREATEBYNAME))(type,name,data,next,last);
  6797                        	.sym	type,4,14,6,8
  Thu Jul 29 2021 22:56                                                Page 122


  6798                        	.sym	name,6,142,6,32
  6799                        	.sym	data,10,129,6,32
  6800                        	.sym	next,14,138,6,32,5
  6801                        	.sym	last,18,138,6,32,5
  6802                        	.line	986
  6803 00:1499: D4 18        	pei	<L354+last_0+2
  6804 00:149B: D4 16        	pei	<L354+last_0
  6805 00:149D: D4 14        	pei	<L354+next_0+2
  6806 00:149F: D4 12        	pei	<L354+next_0
  6807 00:14A1: D4 10        	pei	<L354+data_0+2
  6808 00:14A3: D4 0E        	pei	<L354+data_0
  6809 00:14A5: D4 0C        	pei	<L354+name_0+2
  6810 00:14A7: D4 0A        	pei	<L354+name_0
  6811 00:14A9: D4 08        	pei	<L354+type_0
  6812 00:14AB: AF 42 15 00  	lda	>5442
  6813 00:14AF: 85 01        	sta	<R0
  6814 00:14B1: AF 44 15 00  	lda	>5442+2
  6815 00:14B5: 85 03        	sta	<R0+2
  6816 00:14B7: A0 62 01     	ldy	#$162
  6817 00:14BA: B7 01        	lda	[<R0],Y
  6818 00:14BC: AA           	tax
  6819 00:14BD: A0 60 01     	ldy	#$160
  6820 00:14C0: B7 01        	lda	[<R0],Y
  6821                        	xref	~~~lcal
  6822 00:14C2: 22 xx xx xx  	jsl	~~~lcal
  6823 00:14C6: 85 01        	sta	<R0
  6824 00:14C8: 86 03        	stx	<R0+2
  6825 00:14CA: A6 03        	ldx	<R0+2
  6826 00:14CC: A5 01        	lda	<R0
  6827                        L357:
  6828 00:14CE: A8           	tay
  6829 00:14CF: A5 06        	lda	<L354+2
  6830 00:14D1: 85 18        	sta	<L354+2+18
  6831 00:14D3: A5 05        	lda	<L354+1
  6832 00:14D5: 85 17        	sta	<L354+1+18
  6833 00:14D7: 2B           	pld
  6834 00:14D8: 3B           	tsc
  6835 00:14D9: 18           	clc
  6836 00:14DA: 69 16 00     	adc	#L354+18
  6837 00:14DD: 1B           	tcs
  6838 00:14DE: 98           	tya
  6839 00:14DF: 6B           	rtl
  6840                        ;}
  6841                        	.line	987
  6842                        	.endblock	987
  6843             00000004   L354	equ	4
  6844             00000005   L355	equ	5
  6845                        	ends
  6846                        	efunc
  6847                        	.endfunc	987,5,4
  6848                        	.line	987
  6849                        ;
  6850                        ;/*
  6851                        ;*
  6852                        ;* Name:NodesCreateById
  6853                        ;* Subsystem:KERNEL
  6854                        ;*
  6855                        ;*/
  Thu Jul 29 2021 22:56                                                Page 123


  6856                        ;PFXNODE NodesCreateById(BYTE type,ULONG objId,LPV
                    OID data,PFXNODE last,PFXNODE next)
  6857                        ;{
  6858                        	.line	995
  6859                        	.line	996
  6860                        	code
  6861                        	xdef	~~NodesCreateById
  6862                        	func
  6863                        	.function	996
  6864                        ~~NodesCreateById:
  6865                        	longa	on
  6866                        	longi	on
  6867 00:14E0: 3B           	tsc
  6868 00:14E1: 38           	sec
  6869 00:14E2: E9 04 00     	sbc	#L358
  6870 00:14E5: 1B           	tcs
  6871 00:14E6: 0B           	phd
  6872 00:14E7: 5B           	tcd
  6873             00000004   type_0	set	4
  6874             00000006   objId_0	set	6
  6875             0000000A   data_0	set	10
  6876             0000000E   last_0	set	14
  6877             00000012   next_0	set	18
  6878                        	.block	996
  6879                        ;    return ((NODESCREATEBYID)CALL_KERNEL_API(EXPO
                    RT_KERNEL_NODESCREATEBYID))(type,objId,data,last,next);
  6880                        	.sym	type,4,14,6,8
  6881                        	.sym	objId,6,18,6,32
  6882                        	.sym	data,10,129,6,32
  6883                        	.sym	last,14,138,6,32,5
  6884                        	.sym	next,18,138,6,32,5
  6885                        	.line	997
  6886 00:14E8: D4 18        	pei	<L358+next_0+2
  6887 00:14EA: D4 16        	pei	<L358+next_0
  6888 00:14EC: D4 14        	pei	<L358+last_0+2
  6889 00:14EE: D4 12        	pei	<L358+last_0
  6890 00:14F0: D4 10        	pei	<L358+data_0+2
  6891 00:14F2: D4 0E        	pei	<L358+data_0
  6892 00:14F4: D4 0C        	pei	<L358+objId_0+2
  6893 00:14F6: D4 0A        	pei	<L358+objId_0
  6894 00:14F8: D4 08        	pei	<L358+type_0
  6895 00:14FA: AF 42 15 00  	lda	>5442
  6896 00:14FE: 85 01        	sta	<R0
  6897 00:1500: AF 44 15 00  	lda	>5442+2
  6898 00:1504: 85 03        	sta	<R0+2
  6899 00:1506: A0 66 01     	ldy	#$166
  6900 00:1509: B7 01        	lda	[<R0],Y
  6901 00:150B: AA           	tax
  6902 00:150C: A0 64 01     	ldy	#$164
  6903 00:150F: B7 01        	lda	[<R0],Y
  6904                        	xref	~~~lcal
  6905 00:1511: 22 xx xx xx  	jsl	~~~lcal
  6906 00:1515: 85 01        	sta	<R0
  6907 00:1517: 86 03        	stx	<R0+2
  6908 00:1519: A6 03        	ldx	<R0+2
  6909 00:151B: A5 01        	lda	<R0
  6910                        L361:
  6911 00:151D: A8           	tay
  Thu Jul 29 2021 22:56                                                Page 124


  6912 00:151E: A5 06        	lda	<L358+2
  6913 00:1520: 85 18        	sta	<L358+2+18
  6914 00:1522: A5 05        	lda	<L358+1
  6915 00:1524: 85 17        	sta	<L358+1+18
  6916 00:1526: 2B           	pld
  6917 00:1527: 3B           	tsc
  6918 00:1528: 18           	clc
  6919 00:1529: 69 16 00     	adc	#L358+18
  6920 00:152C: 1B           	tcs
  6921 00:152D: 98           	tya
  6922 00:152E: 6B           	rtl
  6923                        ;}
  6924                        	.line	998
  6925                        	.endblock	998
  6926             00000004   L358	equ	4
  6927             00000005   L359	equ	5
  6928                        	ends
  6929                        	efunc
  6930                        	.endfunc	998,5,4
  6931                        	.line	998
  6932                        ;
  6933                        ;/*
  6934                        ;*
  6935                        ;* Name:NodesCopyNode
  6936                        ;* Subsystem:KERNEL
  6937                        ;*
  6938                        ;*/
  6939                        ;PFXNODE NodesCopyNode(PFXNODE node)
  6940                        ;{
  6941                        	.line	1006
  6942                        	.line	1007
  6943                        	code
  6944                        	xdef	~~NodesCopyNode
  6945                        	func
  6946                        	.function	1007
  6947                        ~~NodesCopyNode:
  6948                        	longa	on
  6949                        	longi	on
  6950 00:152F: 3B           	tsc
  6951 00:1530: 38           	sec
  6952 00:1531: E9 04 00     	sbc	#L362
  6953 00:1534: 1B           	tcs
  6954 00:1535: 0B           	phd
  6955 00:1536: 5B           	tcd
  6956             00000004   node_0	set	4
  6957                        	.block	1007
  6958                        ;    return ((NODESCOPYNODE)CALL_KERNEL_API(EXPORT
                    _KERNEL_NODESCOPYNODE))(node);
  6959                        	.sym	node,4,138,6,32,5
  6960                        	.line	1008
  6961 00:1537: D4 0A        	pei	<L362+node_0+2
  6962 00:1539: D4 08        	pei	<L362+node_0
  6963 00:153B: AF 42 15 00  	lda	>5442
  6964 00:153F: 85 01        	sta	<R0
  6965 00:1541: AF 44 15 00  	lda	>5442+2
  6966 00:1545: 85 03        	sta	<R0+2
  6967 00:1547: A0 6A 01     	ldy	#$16a
  6968 00:154A: B7 01        	lda	[<R0],Y
  Thu Jul 29 2021 22:56                                                Page 125


  6969 00:154C: AA           	tax
  6970 00:154D: A0 68 01     	ldy	#$168
  6971 00:1550: B7 01        	lda	[<R0],Y
  6972                        	xref	~~~lcal
  6973 00:1552: 22 xx xx xx  	jsl	~~~lcal
  6974 00:1556: 85 01        	sta	<R0
  6975 00:1558: 86 03        	stx	<R0+2
  6976 00:155A: A6 03        	ldx	<R0+2
  6977 00:155C: A5 01        	lda	<R0
  6978                        L365:
  6979 00:155E: A8           	tay
  6980 00:155F: A5 06        	lda	<L362+2
  6981 00:1561: 85 0A        	sta	<L362+2+4
  6982 00:1563: A5 05        	lda	<L362+1
  6983 00:1565: 85 09        	sta	<L362+1+4
  6984 00:1567: 2B           	pld
  6985 00:1568: 3B           	tsc
  6986 00:1569: 18           	clc
  6987 00:156A: 69 08 00     	adc	#L362+4
  6988 00:156D: 1B           	tcs
  6989 00:156E: 98           	tya
  6990 00:156F: 6B           	rtl
  6991                        ;}
  6992                        	.line	1009
  6993                        	.endblock	1009
  6994             00000004   L362	equ	4
  6995             00000005   L363	equ	5
  6996                        	ends
  6997                        	efunc
  6998                        	.endfunc	1009,5,4
  6999                        	.line	1009
  7000                        ;
  7001                        ;/*
  7002                        ;*
  7003                        ;* Name:NodesAddNode
  7004                        ;* Subsystem:KERNEL
  7005                        ;*
  7006                        ;*/
  7007                        ;VOID NodesAddNode(PFXNODE head,PFXNODE new)
  7008                        ;{
  7009                        	.line	1017
  7010                        	.line	1018
  7011                        	code
  7012                        	xdef	~~NodesAddNode
  7013                        	func
  7014                        	.function	1018
  7015                        ~~NodesAddNode:
  7016                        	longa	on
  7017                        	longi	on
  7018 00:1570: 3B           	tsc
  7019 00:1571: 38           	sec
  7020 00:1572: E9 04 00     	sbc	#L366
  7021 00:1575: 1B           	tcs
  7022 00:1576: 0B           	phd
  7023 00:1577: 5B           	tcd
  7024             00000004   head_0	set	4
  7025             00000008   new_0	set	8
  7026                        	.block	1018
  Thu Jul 29 2021 22:56                                                Page 126


  7027                        ;    ((NODESADDNODE)CALL_KERNEL_API(EXPORT_KERNEL_
                    NODESADDNODE))(head,new);
  7028                        	.sym	head,4,138,6,32,5
  7029                        	.sym	new,8,138,6,32,5
  7030                        	.line	1019
  7031 00:1578: D4 0E        	pei	<L366+new_0+2
  7032 00:157A: D4 0C        	pei	<L366+new_0
  7033 00:157C: D4 0A        	pei	<L366+head_0+2
  7034 00:157E: D4 08        	pei	<L366+head_0
  7035 00:1580: AF 42 15 00  	lda	>5442
  7036 00:1584: 85 01        	sta	<R0
  7037 00:1586: AF 44 15 00  	lda	>5442+2
  7038 00:158A: 85 03        	sta	<R0+2
  7039 00:158C: A0 6E 01     	ldy	#$16e
  7040 00:158F: B7 01        	lda	[<R0],Y
  7041 00:1591: AA           	tax
  7042 00:1592: A0 6C 01     	ldy	#$16c
  7043 00:1595: B7 01        	lda	[<R0],Y
  7044                        	xref	~~~lcal
  7045 00:1597: 22 xx xx xx  	jsl	~~~lcal
  7046                        ;}
  7047                        	.line	1020
  7048                        L369:
  7049 00:159B: A5 06        	lda	<L366+2
  7050 00:159D: 85 0E        	sta	<L366+2+8
  7051 00:159F: A5 05        	lda	<L366+1
  7052 00:15A1: 85 0D        	sta	<L366+1+8
  7053 00:15A3: 2B           	pld
  7054 00:15A4: 3B           	tsc
  7055 00:15A5: 18           	clc
  7056 00:15A6: 69 0C 00     	adc	#L366+8
  7057 00:15A9: 1B           	tcs
  7058 00:15AA: 6B           	rtl
  7059                        	.endblock	1020
  7060             00000004   L366	equ	4
  7061             00000005   L367	equ	5
  7062                        	ends
  7063                        	efunc
  7064                        	.endfunc	1020,5,4
  7065                        	.line	1020
  7066                        ;
  7067                        ;/*
  7068                        ;*
  7069                        ;* Name:NodesAddToHead
  7070                        ;* Subsystem:KERNEL
  7071                        ;*
  7072                        ;*/
  7073                        ;VOID NodesAddToHead(PFXNODE head,PFXNODE new)
  7074                        ;{
  7075                        	.line	1028
  7076                        	.line	1029
  7077                        	code
  7078                        	xdef	~~NodesAddToHead
  7079                        	func
  7080                        	.function	1029
  7081                        ~~NodesAddToHead:
  7082                        	longa	on
  7083                        	longi	on
  Thu Jul 29 2021 22:56                                                Page 127


  7084 00:15AB: 3B           	tsc
  7085 00:15AC: 38           	sec
  7086 00:15AD: E9 04 00     	sbc	#L370
  7087 00:15B0: 1B           	tcs
  7088 00:15B1: 0B           	phd
  7089 00:15B2: 5B           	tcd
  7090             00000004   head_0	set	4
  7091             00000008   new_0	set	8
  7092                        	.block	1029
  7093                        ;    ((NODESADDTOHEAD)CALL_KERNEL_API(EXPORT_KERNE
                    L_NODESADDTOHEAD))(head,new);
  7094                        	.sym	head,4,138,6,32,5
  7095                        	.sym	new,8,138,6,32,5
  7096                        	.line	1030
  7097 00:15B3: D4 0E        	pei	<L370+new_0+2
  7098 00:15B5: D4 0C        	pei	<L370+new_0
  7099 00:15B7: D4 0A        	pei	<L370+head_0+2
  7100 00:15B9: D4 08        	pei	<L370+head_0
  7101 00:15BB: AF 42 15 00  	lda	>5442
  7102 00:15BF: 85 01        	sta	<R0
  7103 00:15C1: AF 44 15 00  	lda	>5442+2
  7104 00:15C5: 85 03        	sta	<R0+2
  7105 00:15C7: A0 72 01     	ldy	#$172
  7106 00:15CA: B7 01        	lda	[<R0],Y
  7107 00:15CC: AA           	tax
  7108 00:15CD: A0 70 01     	ldy	#$170
  7109 00:15D0: B7 01        	lda	[<R0],Y
  7110                        	xref	~~~lcal
  7111 00:15D2: 22 xx xx xx  	jsl	~~~lcal
  7112                        ;}
  7113                        	.line	1031
  7114                        L373:
  7115 00:15D6: A5 06        	lda	<L370+2
  7116 00:15D8: 85 0E        	sta	<L370+2+8
  7117 00:15DA: A5 05        	lda	<L370+1
  7118 00:15DC: 85 0D        	sta	<L370+1+8
  7119 00:15DE: 2B           	pld
  7120 00:15DF: 3B           	tsc
  7121 00:15E0: 18           	clc
  7122 00:15E1: 69 0C 00     	adc	#L370+8
  7123 00:15E4: 1B           	tcs
  7124 00:15E5: 6B           	rtl
  7125                        	.endblock	1031
  7126             00000004   L370	equ	4
  7127             00000005   L371	equ	5
  7128                        	ends
  7129                        	efunc
  7130                        	.endfunc	1031,5,4
  7131                        	.line	1031
  7132                        ;
  7133                        ;/*
  7134                        ;*
  7135                        ;* Name:NodesGetType
  7136                        ;* Subsystem:KERNEL
  7137                        ;*
  7138                        ;*/
  7139                        ;PFXNODE NodesGetType(PFXNODE head,BYTE type)
  7140                        ;{
  Thu Jul 29 2021 22:56                                                Page 128


  7141                        	.line	1039
  7142                        	.line	1040
  7143                        	code
  7144                        	xdef	~~NodesGetType
  7145                        	func
  7146                        	.function	1040
  7147                        ~~NodesGetType:
  7148                        	longa	on
  7149                        	longi	on
  7150 00:15E6: 3B           	tsc
  7151 00:15E7: 38           	sec
  7152 00:15E8: E9 04 00     	sbc	#L374
  7153 00:15EB: 1B           	tcs
  7154 00:15EC: 0B           	phd
  7155 00:15ED: 5B           	tcd
  7156             00000004   head_0	set	4
  7157             00000008   type_0	set	8
  7158                        	.block	1040
  7159                        ;    return ((NODESGETTYPE)CALL_KERNEL_API(EXPORT_
                    KERNEL_NODESGETTYPE))(head,type);
  7160                        	.sym	head,4,138,6,32,5
  7161                        	.sym	type,8,14,6,8
  7162                        	.line	1041
  7163 00:15EE: D4 0C        	pei	<L374+type_0
  7164 00:15F0: D4 0A        	pei	<L374+head_0+2
  7165 00:15F2: D4 08        	pei	<L374+head_0
  7166 00:15F4: AF 42 15 00  	lda	>5442
  7167 00:15F8: 85 01        	sta	<R0
  7168 00:15FA: AF 44 15 00  	lda	>5442+2
  7169 00:15FE: 85 03        	sta	<R0+2
  7170 00:1600: A0 76 01     	ldy	#$176
  7171 00:1603: B7 01        	lda	[<R0],Y
  7172 00:1605: AA           	tax
  7173 00:1606: A0 74 01     	ldy	#$174
  7174 00:1609: B7 01        	lda	[<R0],Y
  7175                        	xref	~~~lcal
  7176 00:160B: 22 xx xx xx  	jsl	~~~lcal
  7177 00:160F: 85 01        	sta	<R0
  7178 00:1611: 86 03        	stx	<R0+2
  7179 00:1613: A6 03        	ldx	<R0+2
  7180 00:1615: A5 01        	lda	<R0
  7181                        L377:
  7182 00:1617: A8           	tay
  7183 00:1618: A5 06        	lda	<L374+2
  7184 00:161A: 85 0C        	sta	<L374+2+6
  7185 00:161C: A5 05        	lda	<L374+1
  7186 00:161E: 85 0B        	sta	<L374+1+6
  7187 00:1620: 2B           	pld
  7188 00:1621: 3B           	tsc
  7189 00:1622: 18           	clc
  7190 00:1623: 69 0A 00     	adc	#L374+6
  7191 00:1626: 1B           	tcs
  7192 00:1627: 98           	tya
  7193 00:1628: 6B           	rtl
  7194                        ;}
  7195                        	.line	1042
  7196                        	.endblock	1042
  7197             00000004   L374	equ	4
  Thu Jul 29 2021 22:56                                                Page 129


  7198             00000005   L375	equ	5
  7199                        	ends
  7200                        	efunc
  7201                        	.endfunc	1042,5,4
  7202                        	.line	1042
  7203                        ;
  7204                        ;/*
  7205                        ;*
  7206                        ;* Name:NodesGet
  7207                        ;* Subsystem:KERNEL
  7208                        ;*
  7209                        ;*/
  7210                        ;PFXNODE NodesGet(PFXNODE head,INT index)
  7211                        ;{
  7212                        	.line	1050
  7213                        	.line	1051
  7214                        	code
  7215                        	xdef	~~NodesGet
  7216                        	func
  7217                        	.function	1051
  7218                        ~~NodesGet:
  7219                        	longa	on
  7220                        	longi	on
  7221 00:1629: 3B           	tsc
  7222 00:162A: 38           	sec
  7223 00:162B: E9 04 00     	sbc	#L378
  7224 00:162E: 1B           	tcs
  7225 00:162F: 0B           	phd
  7226 00:1630: 5B           	tcd
  7227             00000004   head_0	set	4
  7228             00000008   index_0	set	8
  7229                        	.block	1051
  7230                        ;    return ((NODESGET)CALL_KERNEL_API(EXPORT_KERN
                    EL_NODESGET))(head,index);
  7231                        	.sym	head,4,138,6,32,5
  7232                        	.sym	index,8,5,6,16
  7233                        	.line	1052
  7234 00:1631: D4 0C        	pei	<L378+index_0
  7235 00:1633: D4 0A        	pei	<L378+head_0+2
  7236 00:1635: D4 08        	pei	<L378+head_0
  7237 00:1637: AF 42 15 00  	lda	>5442
  7238 00:163B: 85 01        	sta	<R0
  7239 00:163D: AF 44 15 00  	lda	>5442+2
  7240 00:1641: 85 03        	sta	<R0+2
  7241 00:1643: A0 7A 01     	ldy	#$17a
  7242 00:1646: B7 01        	lda	[<R0],Y
  7243 00:1648: AA           	tax
  7244 00:1649: A0 78 01     	ldy	#$178
  7245 00:164C: B7 01        	lda	[<R0],Y
  7246                        	xref	~~~lcal
  7247 00:164E: 22 xx xx xx  	jsl	~~~lcal
  7248 00:1652: 85 01        	sta	<R0
  7249 00:1654: 86 03        	stx	<R0+2
  7250 00:1656: A6 03        	ldx	<R0+2
  7251 00:1658: A5 01        	lda	<R0
  7252                        L381:
  7253 00:165A: A8           	tay
  7254 00:165B: A5 06        	lda	<L378+2
  Thu Jul 29 2021 22:56                                                Page 130


  7255 00:165D: 85 0C        	sta	<L378+2+6
  7256 00:165F: A5 05        	lda	<L378+1
  7257 00:1661: 85 0B        	sta	<L378+1+6
  7258 00:1663: 2B           	pld
  7259 00:1664: 3B           	tsc
  7260 00:1665: 18           	clc
  7261 00:1666: 69 0A 00     	adc	#L378+6
  7262 00:1669: 1B           	tcs
  7263 00:166A: 98           	tya
  7264 00:166B: 6B           	rtl
  7265                        ;}
  7266                        	.line	1053
  7267                        	.endblock	1053
  7268             00000004   L378	equ	4
  7269             00000005   L379	equ	5
  7270                        	ends
  7271                        	efunc
  7272                        	.endfunc	1053,5,4
  7273                        	.line	1053
  7274                        ;
  7275                        ;/*
  7276                        ;*
  7277                        ;* Name:NodesGetName
  7278                        ;* Subsystem:KERNEL
  7279                        ;*
  7280                        ;*/
  7281                        ;PFXNODE NodesGetName(PFXNODE head,LPCSTR name)
  7282                        ;{
  7283                        	.line	1061
  7284                        	.line	1062
  7285                        	code
  7286                        	xdef	~~NodesGetName
  7287                        	func
  7288                        	.function	1062
  7289                        ~~NodesGetName:
  7290                        	longa	on
  7291                        	longi	on
  7292 00:166C: 3B           	tsc
  7293 00:166D: 38           	sec
  7294 00:166E: E9 04 00     	sbc	#L382
  7295 00:1671: 1B           	tcs
  7296 00:1672: 0B           	phd
  7297 00:1673: 5B           	tcd
  7298             00000004   head_0	set	4
  7299             00000008   name_0	set	8
  7300                        	.block	1062
  7301                        ;    return ((NODESGETNAME)CALL_KERNEL_API(EXPORT_
                    KERNEL_NODESGETNAME))(head,name);
  7302                        	.sym	head,4,138,6,32,5
  7303                        	.sym	name,8,142,6,32
  7304                        	.line	1063
  7305 00:1674: D4 0E        	pei	<L382+name_0+2
  7306 00:1676: D4 0C        	pei	<L382+name_0
  7307 00:1678: D4 0A        	pei	<L382+head_0+2
  7308 00:167A: D4 08        	pei	<L382+head_0
  7309 00:167C: AF 42 15 00  	lda	>5442
  7310 00:1680: 85 01        	sta	<R0
  7311 00:1682: AF 44 15 00  	lda	>5442+2
  Thu Jul 29 2021 22:56                                                Page 131


  7312 00:1686: 85 03        	sta	<R0+2
  7313 00:1688: A0 7E 01     	ldy	#$17e
  7314 00:168B: B7 01        	lda	[<R0],Y
  7315 00:168D: AA           	tax
  7316 00:168E: A0 7C 01     	ldy	#$17c
  7317 00:1691: B7 01        	lda	[<R0],Y
  7318                        	xref	~~~lcal
  7319 00:1693: 22 xx xx xx  	jsl	~~~lcal
  7320 00:1697: 85 01        	sta	<R0
  7321 00:1699: 86 03        	stx	<R0+2
  7322 00:169B: A6 03        	ldx	<R0+2
  7323 00:169D: A5 01        	lda	<R0
  7324                        L385:
  7325 00:169F: A8           	tay
  7326 00:16A0: A5 06        	lda	<L382+2
  7327 00:16A2: 85 0E        	sta	<L382+2+8
  7328 00:16A4: A5 05        	lda	<L382+1
  7329 00:16A6: 85 0D        	sta	<L382+1+8
  7330 00:16A8: 2B           	pld
  7331 00:16A9: 3B           	tsc
  7332 00:16AA: 18           	clc
  7333 00:16AB: 69 0C 00     	adc	#L382+8
  7334 00:16AE: 1B           	tcs
  7335 00:16AF: 98           	tya
  7336 00:16B0: 6B           	rtl
  7337                        ;}
  7338                        	.line	1064
  7339                        	.endblock	1064
  7340             00000004   L382	equ	4
  7341             00000005   L383	equ	5
  7342                        	ends
  7343                        	efunc
  7344                        	.endfunc	1064,5,4
  7345                        	.line	1064
  7346                        ;
  7347                        ;/*
  7348                        ;*
  7349                        ;* Name:NodesGetNameAndType
  7350                        ;* Subsystem:KERNEL
  7351                        ;*
  7352                        ;*/
  7353                        ;PFXNODE NodesGetNameAndType(PFXNODE head,LPCSTR n
                    ame,BYTE type)
  7354                        ;{
  7355                        	.line	1072
  7356                        	.line	1073
  7357                        	code
  7358                        	xdef	~~NodesGetNameAndType
  7359                        	func
  7360                        	.function	1073
  7361                        ~~NodesGetNameAndType:
  7362                        	longa	on
  7363                        	longi	on
  7364 00:16B1: 3B           	tsc
  7365 00:16B2: 38           	sec
  7366 00:16B3: E9 04 00     	sbc	#L386
  7367 00:16B6: 1B           	tcs
  7368 00:16B7: 0B           	phd
  Thu Jul 29 2021 22:56                                                Page 132


  7369 00:16B8: 5B           	tcd
  7370             00000004   head_0	set	4
  7371             00000008   name_0	set	8
  7372             0000000C   type_0	set	12
  7373                        	.block	1073
  7374                        ;    return ((NODESGETNAMEANDTYPE)CALL_KERNEL_API(
                    EXPORT_KERNEL_NODESGETNAMEANDTYPE))(head,name,type);
  7375                        	.sym	head,4,138,6,32,5
  7376                        	.sym	name,8,142,6,32
  7377                        	.sym	type,12,14,6,8
  7378                        	.line	1074
  7379 00:16B9: D4 10        	pei	<L386+type_0
  7380 00:16BB: D4 0E        	pei	<L386+name_0+2
  7381 00:16BD: D4 0C        	pei	<L386+name_0
  7382 00:16BF: D4 0A        	pei	<L386+head_0+2
  7383 00:16C1: D4 08        	pei	<L386+head_0
  7384 00:16C3: AF 42 15 00  	lda	>5442
  7385 00:16C7: 85 01        	sta	<R0
  7386 00:16C9: AF 44 15 00  	lda	>5442+2
  7387 00:16CD: 85 03        	sta	<R0+2
  7388 00:16CF: A0 82 01     	ldy	#$182
  7389 00:16D2: B7 01        	lda	[<R0],Y
  7390 00:16D4: AA           	tax
  7391 00:16D5: A0 80 01     	ldy	#$180
  7392 00:16D8: B7 01        	lda	[<R0],Y
  7393                        	xref	~~~lcal
  7394 00:16DA: 22 xx xx xx  	jsl	~~~lcal
  7395 00:16DE: 85 01        	sta	<R0
  7396 00:16E0: 86 03        	stx	<R0+2
  7397 00:16E2: A6 03        	ldx	<R0+2
  7398 00:16E4: A5 01        	lda	<R0
  7399                        L389:
  7400 00:16E6: A8           	tay
  7401 00:16E7: A5 06        	lda	<L386+2
  7402 00:16E9: 85 10        	sta	<L386+2+10
  7403 00:16EB: A5 05        	lda	<L386+1
  7404 00:16ED: 85 0F        	sta	<L386+1+10
  7405 00:16EF: 2B           	pld
  7406 00:16F0: 3B           	tsc
  7407 00:16F1: 18           	clc
  7408 00:16F2: 69 0E 00     	adc	#L386+10
  7409 00:16F5: 1B           	tcs
  7410 00:16F6: 98           	tya
  7411 00:16F7: 6B           	rtl
  7412                        ;}
  7413                        	.line	1075
  7414                        	.endblock	1075
  7415             00000004   L386	equ	4
  7416             00000005   L387	equ	5
  7417                        	ends
  7418                        	efunc
  7419                        	.endfunc	1075,5,4
  7420                        	.line	1075
  7421                        ;
  7422                        ;/*
  7423                        ;*
  7424                        ;* Name:NodesRemoveByName
  7425                        ;* Subsystem:KERNEL
  Thu Jul 29 2021 22:56                                                Page 133


  7426                        ;*
  7427                        ;*/
  7428                        ;PFXNODE NodesRemoveByName(PFXNODE head,LPCSTR nam
                    e)
  7429                        ;{
  7430                        	.line	1083
  7431                        	.line	1084
  7432                        	code
  7433                        	xdef	~~NodesRemoveByName
  7434                        	func
  7435                        	.function	1084
  7436                        ~~NodesRemoveByName:
  7437                        	longa	on
  7438                        	longi	on
  7439 00:16F8: 3B           	tsc
  7440 00:16F9: 38           	sec
  7441 00:16FA: E9 04 00     	sbc	#L390
  7442 00:16FD: 1B           	tcs
  7443 00:16FE: 0B           	phd
  7444 00:16FF: 5B           	tcd
  7445             00000004   head_0	set	4
  7446             00000008   name_0	set	8
  7447                        	.block	1084
  7448                        ;    return ((NODESREMOVEBYNAME)CALL_KERNEL_API(EX
                    PORT_KERNEL_NODESREMOVEBYNAME))(head,name);
  7449                        	.sym	head,4,138,6,32,5
  7450                        	.sym	name,8,142,6,32
  7451                        	.line	1085
  7452 00:1700: D4 0E        	pei	<L390+name_0+2
  7453 00:1702: D4 0C        	pei	<L390+name_0
  7454 00:1704: D4 0A        	pei	<L390+head_0+2
  7455 00:1706: D4 08        	pei	<L390+head_0
  7456 00:1708: AF 42 15 00  	lda	>5442
  7457 00:170C: 85 01        	sta	<R0
  7458 00:170E: AF 44 15 00  	lda	>5442+2
  7459 00:1712: 85 03        	sta	<R0+2
  7460 00:1714: A0 86 01     	ldy	#$186
  7461 00:1717: B7 01        	lda	[<R0],Y
  7462 00:1719: AA           	tax
  7463 00:171A: A0 84 01     	ldy	#$184
  7464 00:171D: B7 01        	lda	[<R0],Y
  7465                        	xref	~~~lcal
  7466 00:171F: 22 xx xx xx  	jsl	~~~lcal
  7467 00:1723: 85 01        	sta	<R0
  7468 00:1725: 86 03        	stx	<R0+2
  7469 00:1727: A6 03        	ldx	<R0+2
  7470 00:1729: A5 01        	lda	<R0
  7471                        L393:
  7472 00:172B: A8           	tay
  7473 00:172C: A5 06        	lda	<L390+2
  7474 00:172E: 85 0E        	sta	<L390+2+8
  7475 00:1730: A5 05        	lda	<L390+1
  7476 00:1732: 85 0D        	sta	<L390+1+8
  7477 00:1734: 2B           	pld
  7478 00:1735: 3B           	tsc
  7479 00:1736: 18           	clc
  7480 00:1737: 69 0C 00     	adc	#L390+8
  7481 00:173A: 1B           	tcs
  Thu Jul 29 2021 22:56                                                Page 134


  7482 00:173B: 98           	tya
  7483 00:173C: 6B           	rtl
  7484                        ;}
  7485                        	.line	1086
  7486                        	.endblock	1086
  7487             00000004   L390	equ	4
  7488             00000005   L391	equ	5
  7489                        	ends
  7490                        	efunc
  7491                        	.endfunc	1086,5,4
  7492                        	.line	1086
  7493                        ;
  7494                        ;/*
  7495                        ;*
  7496                        ;* Name:NodesRemoveNode
  7497                        ;* Subsystem:KERNEL
  7498                        ;*
  7499                        ;*/
  7500                        ;PFXNODE NodesRemoveNode(PFXNODE head,PFXNODE targ
                    etNode)
  7501                        ;{
  7502                        	.line	1094
  7503                        	.line	1095
  7504                        	code
  7505                        	xdef	~~NodesRemoveNode
  7506                        	func
  7507                        	.function	1095
  7508                        ~~NodesRemoveNode:
  7509                        	longa	on
  7510                        	longi	on
  7511 00:173D: 3B           	tsc
  7512 00:173E: 38           	sec
  7513 00:173F: E9 04 00     	sbc	#L394
  7514 00:1742: 1B           	tcs
  7515 00:1743: 0B           	phd
  7516 00:1744: 5B           	tcd
  7517             00000004   head_0	set	4
  7518             00000008   targetNode_0	set	8
  7519                        	.block	1095
  7520                        ;    return ((NODESREMOVENODE)CALL_KERNEL_API(EXPO
                    RT_KERNEL_NODESREMOVENODE))(head,targetNode);
  7521                        	.sym	head,4,138,6,32,5
  7522                        	.sym	targetNode,8,138,6,32,5
  7523                        	.line	1096
  7524 00:1745: D4 0E        	pei	<L394+targetNode_0+2
  7525 00:1747: D4 0C        	pei	<L394+targetNode_0
  7526 00:1749: D4 0A        	pei	<L394+head_0+2
  7527 00:174B: D4 08        	pei	<L394+head_0
  7528 00:174D: AF 42 15 00  	lda	>5442
  7529 00:1751: 85 01        	sta	<R0
  7530 00:1753: AF 44 15 00  	lda	>5442+2
  7531 00:1757: 85 03        	sta	<R0+2
  7532 00:1759: A0 8A 01     	ldy	#$18a
  7533 00:175C: B7 01        	lda	[<R0],Y
  7534 00:175E: AA           	tax
  7535 00:175F: A0 88 01     	ldy	#$188
  7536 00:1762: B7 01        	lda	[<R0],Y
  7537                        	xref	~~~lcal
  Thu Jul 29 2021 22:56                                                Page 135


  7538 00:1764: 22 xx xx xx  	jsl	~~~lcal
  7539 00:1768: 85 01        	sta	<R0
  7540 00:176A: 86 03        	stx	<R0+2
  7541 00:176C: A6 03        	ldx	<R0+2
  7542 00:176E: A5 01        	lda	<R0
  7543                        L397:
  7544 00:1770: A8           	tay
  7545 00:1771: A5 06        	lda	<L394+2
  7546 00:1773: 85 0E        	sta	<L394+2+8
  7547 00:1775: A5 05        	lda	<L394+1
  7548 00:1777: 85 0D        	sta	<L394+1+8
  7549 00:1779: 2B           	pld
  7550 00:177A: 3B           	tsc
  7551 00:177B: 18           	clc
  7552 00:177C: 69 0C 00     	adc	#L394+8
  7553 00:177F: 1B           	tcs
  7554 00:1780: 98           	tya
  7555 00:1781: 6B           	rtl
  7556                        ;}
  7557                        	.line	1097
  7558                        	.endblock	1097
  7559             00000004   L394	equ	4
  7560             00000005   L395	equ	5
  7561                        	ends
  7562                        	efunc
  7563                        	.endfunc	1097,5,4
  7564                        	.line	1097
  7565                        ;
  7566                        ;/*
  7567                        ;*
  7568                        ;* Name:NodesRemoveById
  7569                        ;* Subsystem:KERNEL
  7570                        ;*
  7571                        ;*/
  7572                        ;PFXNODE NodesRemoveById(PFXNODE head,ULONG objId)
  7573                        ;{
  7574                        	.line	1105
  7575                        	.line	1106
  7576                        	code
  7577                        	xdef	~~NodesRemoveById
  7578                        	func
  7579                        	.function	1106
  7580                        ~~NodesRemoveById:
  7581                        	longa	on
  7582                        	longi	on
  7583 00:1782: 3B           	tsc
  7584 00:1783: 38           	sec
  7585 00:1784: E9 04 00     	sbc	#L398
  7586 00:1787: 1B           	tcs
  7587 00:1788: 0B           	phd
  7588 00:1789: 5B           	tcd
  7589             00000004   head_0	set	4
  7590             00000008   objId_0	set	8
  7591                        	.block	1106
  7592                        ;    return ((NODESREMOVEBYID)CALL_KERNEL_API(EXPO
                    RT_KERNEL_NODESREMOVEBYID))(head,objId);
  7593                        	.sym	head,4,138,6,32,5
  7594                        	.sym	objId,8,18,6,32
  Thu Jul 29 2021 22:56                                                Page 136


  7595                        	.line	1107
  7596 00:178A: D4 0E        	pei	<L398+objId_0+2
  7597 00:178C: D4 0C        	pei	<L398+objId_0
  7598 00:178E: D4 0A        	pei	<L398+head_0+2
  7599 00:1790: D4 08        	pei	<L398+head_0
  7600 00:1792: AF 42 15 00  	lda	>5442
  7601 00:1796: 85 01        	sta	<R0
  7602 00:1798: AF 44 15 00  	lda	>5442+2
  7603 00:179C: 85 03        	sta	<R0+2
  7604 00:179E: A0 8E 01     	ldy	#$18e
  7605 00:17A1: B7 01        	lda	[<R0],Y
  7606 00:17A3: AA           	tax
  7607 00:17A4: A0 8C 01     	ldy	#$18c
  7608 00:17A7: B7 01        	lda	[<R0],Y
  7609                        	xref	~~~lcal
  7610 00:17A9: 22 xx xx xx  	jsl	~~~lcal
  7611 00:17AD: 85 01        	sta	<R0
  7612 00:17AF: 86 03        	stx	<R0+2
  7613 00:17B1: A6 03        	ldx	<R0+2
  7614 00:17B3: A5 01        	lda	<R0
  7615                        L401:
  7616 00:17B5: A8           	tay
  7617 00:17B6: A5 06        	lda	<L398+2
  7618 00:17B8: 85 0E        	sta	<L398+2+8
  7619 00:17BA: A5 05        	lda	<L398+1
  7620 00:17BC: 85 0D        	sta	<L398+1+8
  7621 00:17BE: 2B           	pld
  7622 00:17BF: 3B           	tsc
  7623 00:17C0: 18           	clc
  7624 00:17C1: 69 0C 00     	adc	#L398+8
  7625 00:17C4: 1B           	tcs
  7626 00:17C5: 98           	tya
  7627 00:17C6: 6B           	rtl
  7628                        ;}
  7629                        	.line	1108
  7630                        	.endblock	1108
  7631             00000004   L398	equ	4
  7632             00000005   L399	equ	5
  7633                        	ends
  7634                        	efunc
  7635                        	.endfunc	1108,5,4
  7636                        	.line	1108
  7637                        ;
  7638                        ;/*
  7639                        ;*
  7640                        ;* Name:NodesGetLast
  7641                        ;* Subsystem:KERNEL
  7642                        ;*
  7643                        ;*/
  7644                        ;PFXNODE NodesGetLast(PFXNODE head)
  7645                        ;{
  7646                        	.line	1116
  7647                        	.line	1117
  7648                        	code
  7649                        	xdef	~~NodesGetLast
  7650                        	func
  7651                        	.function	1117
  7652                        ~~NodesGetLast:
  Thu Jul 29 2021 22:56                                                Page 137


  7653                        	longa	on
  7654                        	longi	on
  7655 00:17C7: 3B           	tsc
  7656 00:17C8: 38           	sec
  7657 00:17C9: E9 04 00     	sbc	#L402
  7658 00:17CC: 1B           	tcs
  7659 00:17CD: 0B           	phd
  7660 00:17CE: 5B           	tcd
  7661             00000004   head_0	set	4
  7662                        	.block	1117
  7663                        ;    return ((NODESGETLAST)CALL_KERNEL_API(EXPORT_
                    KERNEL_NODESGETLAST))(head);
  7664                        	.sym	head,4,138,6,32,5
  7665                        	.line	1118
  7666 00:17CF: D4 0A        	pei	<L402+head_0+2
  7667 00:17D1: D4 08        	pei	<L402+head_0
  7668 00:17D3: AF 42 15 00  	lda	>5442
  7669 00:17D7: 85 01        	sta	<R0
  7670 00:17D9: AF 44 15 00  	lda	>5442+2
  7671 00:17DD: 85 03        	sta	<R0+2
  7672 00:17DF: A0 92 01     	ldy	#$192
  7673 00:17E2: B7 01        	lda	[<R0],Y
  7674 00:17E4: AA           	tax
  7675 00:17E5: A0 90 01     	ldy	#$190
  7676 00:17E8: B7 01        	lda	[<R0],Y
  7677                        	xref	~~~lcal
  7678 00:17EA: 22 xx xx xx  	jsl	~~~lcal
  7679 00:17EE: 85 01        	sta	<R0
  7680 00:17F0: 86 03        	stx	<R0+2
  7681 00:17F2: A6 03        	ldx	<R0+2
  7682 00:17F4: A5 01        	lda	<R0
  7683                        L405:
  7684 00:17F6: A8           	tay
  7685 00:17F7: A5 06        	lda	<L402+2
  7686 00:17F9: 85 0A        	sta	<L402+2+4
  7687 00:17FB: A5 05        	lda	<L402+1
  7688 00:17FD: 85 09        	sta	<L402+1+4
  7689 00:17FF: 2B           	pld
  7690 00:1800: 3B           	tsc
  7691 00:1801: 18           	clc
  7692 00:1802: 69 08 00     	adc	#L402+4
  7693 00:1805: 1B           	tcs
  7694 00:1806: 98           	tya
  7695 00:1807: 6B           	rtl
  7696                        ;}
  7697                        	.line	1119
  7698                        	.endblock	1119
  7699             00000004   L402	equ	4
  7700             00000005   L403	equ	5
  7701                        	ends
  7702                        	efunc
  7703                        	.endfunc	1119,5,4
  7704                        	.line	1119
  7705                        ;
  7706                        ;/*
  7707                        ;*
  7708                        ;* Name:NodeListAlloc
  7709                        ;* Subsystem:KERNEL
  Thu Jul 29 2021 22:56                                                Page 138


  7710                        ;*
  7711                        ;*/
  7712                        ;PFXNODELIST NodeListAlloc(LPCSTR listName,NodeLis
                    tDeallocator deallocator)
  7713                        ;{
  7714                        	.line	1127
  7715                        	.line	1128
  7716                        	code
  7717                        	xdef	~~NodeListAlloc
  7718                        	func
  7719                        	.function	1128
  7720                        ~~NodeListAlloc:
  7721                        	longa	on
  7722                        	longi	on
  7723 00:1808: 3B           	tsc
  7724 00:1809: 38           	sec
  7725 00:180A: E9 04 00     	sbc	#L406
  7726 00:180D: 1B           	tcs
  7727 00:180E: 0B           	phd
  7728 00:180F: 5B           	tcd
  7729             00000004   listName_0	set	4
  7730             00000008   deallocator_0	set	8
  7731                        	.block	1128
  7732                        ;    return ((NODELISTALLOC)CALL_KERNEL_API(EXPORT
                    _KERNEL_NODELISTALLOC))(listName,deallocator);
  7733                        	.sym	listName,4,142,6,32
  7734                        	.sym	deallocator,8,641,6,32
  7735                        	.line	1129
  7736 00:1810: D4 0E        	pei	<L406+deallocator_0+2
  7737 00:1812: D4 0C        	pei	<L406+deallocator_0
  7738 00:1814: D4 0A        	pei	<L406+listName_0+2
  7739 00:1816: D4 08        	pei	<L406+listName_0
  7740 00:1818: AF 42 15 00  	lda	>5442
  7741 00:181C: 85 01        	sta	<R0
  7742 00:181E: AF 44 15 00  	lda	>5442+2
  7743 00:1822: 85 03        	sta	<R0+2
  7744 00:1824: A0 96 01     	ldy	#$196
  7745 00:1827: B7 01        	lda	[<R0],Y
  7746 00:1829: AA           	tax
  7747 00:182A: A0 94 01     	ldy	#$194
  7748 00:182D: B7 01        	lda	[<R0],Y
  7749                        	xref	~~~lcal
  7750 00:182F: 22 xx xx xx  	jsl	~~~lcal
  7751 00:1833: 85 01        	sta	<R0
  7752 00:1835: 86 03        	stx	<R0+2
  7753 00:1837: A6 03        	ldx	<R0+2
  7754 00:1839: A5 01        	lda	<R0
  7755                        L409:
  7756 00:183B: A8           	tay
  7757 00:183C: A5 06        	lda	<L406+2
  7758 00:183E: 85 0E        	sta	<L406+2+8
  7759 00:1840: A5 05        	lda	<L406+1
  7760 00:1842: 85 0D        	sta	<L406+1+8
  7761 00:1844: 2B           	pld
  7762 00:1845: 3B           	tsc
  7763 00:1846: 18           	clc
  7764 00:1847: 69 0C 00     	adc	#L406+8
  7765 00:184A: 1B           	tcs
  Thu Jul 29 2021 22:56                                                Page 139


  7766 00:184B: 98           	tya
  7767 00:184C: 6B           	rtl
  7768                        ;}
  7769                        	.line	1130
  7770                        	.endblock	1130
  7771             00000004   L406	equ	4
  7772             00000005   L407	equ	5
  7773                        	ends
  7774                        	efunc
  7775                        	.endfunc	1130,5,4
  7776                        	.line	1130
  7777                        ;
  7778                        ;/*
  7779                        ;*
  7780                        ;* Name:NodeListDealloc
  7781                        ;* Subsystem:KERNEL
  7782                        ;*
  7783                        ;*/
  7784                        ;VOID NodeListDealloc(PFXNODELIST nodelist)
  7785                        ;{
  7786                        	.line	1138
  7787                        	.line	1139
  7788                        	code
  7789                        	xdef	~~NodeListDealloc
  7790                        	func
  7791                        	.function	1139
  7792                        ~~NodeListDealloc:
  7793                        	longa	on
  7794                        	longi	on
  7795 00:184D: 3B           	tsc
  7796 00:184E: 38           	sec
  7797 00:184F: E9 04 00     	sbc	#L410
  7798 00:1852: 1B           	tcs
  7799 00:1853: 0B           	phd
  7800 00:1854: 5B           	tcd
  7801             00000004   nodelist_0	set	4
  7802                        	.block	1139
  7803                        ;    ((NODELISTDEALLOC)CALL_KERNEL_API(EXPORT_KERN
                    EL_NODELISTDEALLOC))(nodelist);
  7804                        	.sym	nodelist,4,138,6,32,6
  7805                        	.line	1140
  7806 00:1855: D4 0A        	pei	<L410+nodelist_0+2
  7807 00:1857: D4 08        	pei	<L410+nodelist_0
  7808 00:1859: AF 42 15 00  	lda	>5442
  7809 00:185D: 85 01        	sta	<R0
  7810 00:185F: AF 44 15 00  	lda	>5442+2
  7811 00:1863: 85 03        	sta	<R0+2
  7812 00:1865: A0 9A 01     	ldy	#$19a
  7813 00:1868: B7 01        	lda	[<R0],Y
  7814 00:186A: AA           	tax
  7815 00:186B: A0 98 01     	ldy	#$198
  7816 00:186E: B7 01        	lda	[<R0],Y
  7817                        	xref	~~~lcal
  7818 00:1870: 22 xx xx xx  	jsl	~~~lcal
  7819                        ;}
  7820                        	.line	1141
  7821                        L413:
  7822 00:1874: A5 06        	lda	<L410+2
  Thu Jul 29 2021 22:56                                                Page 140


  7823 00:1876: 85 0A        	sta	<L410+2+4
  7824 00:1878: A5 05        	lda	<L410+1
  7825 00:187A: 85 09        	sta	<L410+1+4
  7826 00:187C: 2B           	pld
  7827 00:187D: 3B           	tsc
  7828 00:187E: 18           	clc
  7829 00:187F: 69 08 00     	adc	#L410+4
  7830 00:1882: 1B           	tcs
  7831 00:1883: 6B           	rtl
  7832                        	.endblock	1141
  7833             00000004   L410	equ	4
  7834             00000005   L411	equ	5
  7835                        	ends
  7836                        	efunc
  7837                        	.endfunc	1141,5,4
  7838                        	.line	1141
  7839                        ;
  7840                        ;/*
  7841                        ;*
  7842                        ;* Name:NodeListAddByName
  7843                        ;* Subsystem:KERNEL
  7844                        ;*
  7845                        ;*/
  7846                        ;PFXNODE NodeListAddByName(PFXNODELIST nodelist,BY
                    TE type,LPCSTR name,LPVOID data)
  7847                        ;{
  7848                        	.line	1149
  7849                        	.line	1150
  7850                        	code
  7851                        	xdef	~~NodeListAddByName
  7852                        	func
  7853                        	.function	1150
  7854                        ~~NodeListAddByName:
  7855                        	longa	on
  7856                        	longi	on
  7857 00:1884: 3B           	tsc
  7858 00:1885: 38           	sec
  7859 00:1886: E9 04 00     	sbc	#L414
  7860 00:1889: 1B           	tcs
  7861 00:188A: 0B           	phd
  7862 00:188B: 5B           	tcd
  7863             00000004   nodelist_0	set	4
  7864             00000008   type_0	set	8
  7865             0000000A   name_0	set	10
  7866             0000000E   data_0	set	14
  7867                        	.block	1150
  7868                        ;    return ((NODELISTADDBYNAME)CALL_KERNEL_API(EX
                    PORT_KERNEL_NODELISTADDBYNAME))(nodelist,type,name,data);
  7869                        	.sym	nodelist,4,138,6,32,6
  7870                        	.sym	type,8,14,6,8
  7871                        	.sym	name,10,142,6,32
  7872                        	.sym	data,14,129,6,32
  7873                        	.line	1151
  7874 00:188C: D4 14        	pei	<L414+data_0+2
  7875 00:188E: D4 12        	pei	<L414+data_0
  7876 00:1890: D4 10        	pei	<L414+name_0+2
  7877 00:1892: D4 0E        	pei	<L414+name_0
  7878 00:1894: D4 0C        	pei	<L414+type_0
  Thu Jul 29 2021 22:56                                                Page 141


  7879 00:1896: D4 0A        	pei	<L414+nodelist_0+2
  7880 00:1898: D4 08        	pei	<L414+nodelist_0
  7881 00:189A: AF 42 15 00  	lda	>5442
  7882 00:189E: 85 01        	sta	<R0
  7883 00:18A0: AF 44 15 00  	lda	>5442+2
  7884 00:18A4: 85 03        	sta	<R0+2
  7885 00:18A6: A0 9E 01     	ldy	#$19e
  7886 00:18A9: B7 01        	lda	[<R0],Y
  7887 00:18AB: AA           	tax
  7888 00:18AC: A0 9C 01     	ldy	#$19c
  7889 00:18AF: B7 01        	lda	[<R0],Y
  7890                        	xref	~~~lcal
  7891 00:18B1: 22 xx xx xx  	jsl	~~~lcal
  7892 00:18B5: 85 01        	sta	<R0
  7893 00:18B7: 86 03        	stx	<R0+2
  7894 00:18B9: A6 03        	ldx	<R0+2
  7895 00:18BB: A5 01        	lda	<R0
  7896                        L417:
  7897 00:18BD: A8           	tay
  7898 00:18BE: A5 06        	lda	<L414+2
  7899 00:18C0: 85 14        	sta	<L414+2+14
  7900 00:18C2: A5 05        	lda	<L414+1
  7901 00:18C4: 85 13        	sta	<L414+1+14
  7902 00:18C6: 2B           	pld
  7903 00:18C7: 3B           	tsc
  7904 00:18C8: 18           	clc
  7905 00:18C9: 69 12 00     	adc	#L414+14
  7906 00:18CC: 1B           	tcs
  7907 00:18CD: 98           	tya
  7908 00:18CE: 6B           	rtl
  7909                        ;}
  7910                        	.line	1152
  7911                        	.endblock	1152
  7912             00000004   L414	equ	4
  7913             00000005   L415	equ	5
  7914                        	ends
  7915                        	efunc
  7916                        	.endfunc	1152,5,4
  7917                        	.line	1152
  7918                        ;
  7919                        ;/*
  7920                        ;*
  7921                        ;* Name:NodeListAddFirstById
  7922                        ;* Subsystem:KERNEL
  7923                        ;*
  7924                        ;*/
  7925                        ;PFXNODE NodeListAddFirstById(PFXNODELIST list,BYT
                    E type,ULONG objId,LPVOID data)
  7926                        ;{
  7927                        	.line	1160
  7928                        	.line	1161
  7929                        	code
  7930                        	xdef	~~NodeListAddFirstById
  7931                        	func
  7932                        	.function	1161
  7933                        ~~NodeListAddFirstById:
  7934                        	longa	on
  7935                        	longi	on
  Thu Jul 29 2021 22:56                                                Page 142


  7936 00:18CF: 3B           	tsc
  7937 00:18D0: 38           	sec
  7938 00:18D1: E9 04 00     	sbc	#L418
  7939 00:18D4: 1B           	tcs
  7940 00:18D5: 0B           	phd
  7941 00:18D6: 5B           	tcd
  7942             00000004   list_0	set	4
  7943             00000008   type_0	set	8
  7944             0000000A   objId_0	set	10
  7945             0000000E   data_0	set	14
  7946                        	.block	1161
  7947                        ;    return ((NODELISTADDFIRSTBYID)CALL_KERNEL_API
                    (EXPORT_KERNEL_NODELISTADDFIRSTBYID))(list,type,objId,data);
  7948                        	.sym	list,4,138,6,32,6
  7949                        	.sym	type,8,14,6,8
  7950                        	.sym	objId,10,18,6,32
  7951                        	.sym	data,14,129,6,32
  7952                        	.line	1162
  7953 00:18D7: D4 14        	pei	<L418+data_0+2
  7954 00:18D9: D4 12        	pei	<L418+data_0
  7955 00:18DB: D4 10        	pei	<L418+objId_0+2
  7956 00:18DD: D4 0E        	pei	<L418+objId_0
  7957 00:18DF: D4 0C        	pei	<L418+type_0
  7958 00:18E1: D4 0A        	pei	<L418+list_0+2
  7959 00:18E3: D4 08        	pei	<L418+list_0
  7960 00:18E5: AF 42 15 00  	lda	>5442
  7961 00:18E9: 85 01        	sta	<R0
  7962 00:18EB: AF 44 15 00  	lda	>5442+2
  7963 00:18EF: 85 03        	sta	<R0+2
  7964 00:18F1: A0 A2 01     	ldy	#$1a2
  7965 00:18F4: B7 01        	lda	[<R0],Y
  7966 00:18F6: AA           	tax
  7967 00:18F7: A0 A0 01     	ldy	#$1a0
  7968 00:18FA: B7 01        	lda	[<R0],Y
  7969                        	xref	~~~lcal
  7970 00:18FC: 22 xx xx xx  	jsl	~~~lcal
  7971 00:1900: 85 01        	sta	<R0
  7972 00:1902: 86 03        	stx	<R0+2
  7973 00:1904: A6 03        	ldx	<R0+2
  7974 00:1906: A5 01        	lda	<R0
  7975                        L421:
  7976 00:1908: A8           	tay
  7977 00:1909: A5 06        	lda	<L418+2
  7978 00:190B: 85 14        	sta	<L418+2+14
  7979 00:190D: A5 05        	lda	<L418+1
  7980 00:190F: 85 13        	sta	<L418+1+14
  7981 00:1911: 2B           	pld
  7982 00:1912: 3B           	tsc
  7983 00:1913: 18           	clc
  7984 00:1914: 69 12 00     	adc	#L418+14
  7985 00:1917: 1B           	tcs
  7986 00:1918: 98           	tya
  7987 00:1919: 6B           	rtl
  7988                        ;}
  7989                        	.line	1163
  7990                        	.endblock	1163
  7991             00000004   L418	equ	4
  7992             00000005   L419	equ	5
  Thu Jul 29 2021 22:56                                                Page 143


  7993                        	ends
  7994                        	efunc
  7995                        	.endfunc	1163,5,4
  7996                        	.line	1163
  7997                        ;
  7998                        ;/*
  7999                        ;*
  8000                        ;* Name:NodeListAddFirstByName
  8001                        ;* Subsystem:KERNEL
  8002                        ;*
  8003                        ;*/
  8004                        ;PFXNODE NodeListAddFirstByName(PFXNODELIST list,B
                    YTE type,LPCSTR name,LPVOID data)
  8005                        ;{
  8006                        	.line	1171
  8007                        	.line	1172
  8008                        	code
  8009                        	xdef	~~NodeListAddFirstByName
  8010                        	func
  8011                        	.function	1172
  8012                        ~~NodeListAddFirstByName:
  8013                        	longa	on
  8014                        	longi	on
  8015 00:191A: 3B           	tsc
  8016 00:191B: 38           	sec
  8017 00:191C: E9 04 00     	sbc	#L422
  8018 00:191F: 1B           	tcs
  8019 00:1920: 0B           	phd
  8020 00:1921: 5B           	tcd
  8021             00000004   list_0	set	4
  8022             00000008   type_0	set	8
  8023             0000000A   name_0	set	10
  8024             0000000E   data_0	set	14
  8025                        	.block	1172
  8026                        ;    return ((NODELISTADDFIRSTBYNAME)CALL_KERNEL_A
                    PI(EXPORT_KERNEL_NODELISTADDFIRSTBYNAME))(list,type,name,dat
                    a);
  8027                        	.sym	list,4,138,6,32,6
  8028                        	.sym	type,8,14,6,8
  8029                        	.sym	name,10,142,6,32
  8030                        	.sym	data,14,129,6,32
  8031                        	.line	1173
  8032 00:1922: D4 14        	pei	<L422+data_0+2
  8033 00:1924: D4 12        	pei	<L422+data_0
  8034 00:1926: D4 10        	pei	<L422+name_0+2
  8035 00:1928: D4 0E        	pei	<L422+name_0
  8036 00:192A: D4 0C        	pei	<L422+type_0
  8037 00:192C: D4 0A        	pei	<L422+list_0+2
  8038 00:192E: D4 08        	pei	<L422+list_0
  8039 00:1930: AF 42 15 00  	lda	>5442
  8040 00:1934: 85 01        	sta	<R0
  8041 00:1936: AF 44 15 00  	lda	>5442+2
  8042 00:193A: 85 03        	sta	<R0+2
  8043 00:193C: A0 A6 01     	ldy	#$1a6
  8044 00:193F: B7 01        	lda	[<R0],Y
  8045 00:1941: AA           	tax
  8046 00:1942: A0 A4 01     	ldy	#$1a4
  8047 00:1945: B7 01        	lda	[<R0],Y
  Thu Jul 29 2021 22:56                                                Page 144


  8048                        	xref	~~~lcal
  8049 00:1947: 22 xx xx xx  	jsl	~~~lcal
  8050 00:194B: 85 01        	sta	<R0
  8051 00:194D: 86 03        	stx	<R0+2
  8052 00:194F: A6 03        	ldx	<R0+2
  8053 00:1951: A5 01        	lda	<R0
  8054                        L425:
  8055 00:1953: A8           	tay
  8056 00:1954: A5 06        	lda	<L422+2
  8057 00:1956: 85 14        	sta	<L422+2+14
  8058 00:1958: A5 05        	lda	<L422+1
  8059 00:195A: 85 13        	sta	<L422+1+14
  8060 00:195C: 2B           	pld
  8061 00:195D: 3B           	tsc
  8062 00:195E: 18           	clc
  8063 00:195F: 69 12 00     	adc	#L422+14
  8064 00:1962: 1B           	tcs
  8065 00:1963: 98           	tya
  8066 00:1964: 6B           	rtl
  8067                        ;}
  8068                        	.line	1174
  8069                        	.endblock	1174
  8070             00000004   L422	equ	4
  8071             00000005   L423	equ	5
  8072                        	ends
  8073                        	efunc
  8074                        	.endfunc	1174,5,4
  8075                        	.line	1174
  8076                        ;
  8077                        ;/*
  8078                        ;*
  8079                        ;* Name:NodeListAddById
  8080                        ;* Subsystem:KERNEL
  8081                        ;*
  8082                        ;*/
  8083                        ;PFXNODE NodeListAddById(PFXNODELIST list,BYTE typ
                    e,ULONG objId,LPVOID data)
  8084                        ;{
  8085                        	.line	1182
  8086                        	.line	1183
  8087                        	code
  8088                        	xdef	~~NodeListAddById
  8089                        	func
  8090                        	.function	1183
  8091                        ~~NodeListAddById:
  8092                        	longa	on
  8093                        	longi	on
  8094 00:1965: 3B           	tsc
  8095 00:1966: 38           	sec
  8096 00:1967: E9 04 00     	sbc	#L426
  8097 00:196A: 1B           	tcs
  8098 00:196B: 0B           	phd
  8099 00:196C: 5B           	tcd
  8100             00000004   list_0	set	4
  8101             00000008   type_0	set	8
  8102             0000000A   objId_0	set	10
  8103             0000000E   data_0	set	14
  8104                        	.block	1183
  Thu Jul 29 2021 22:56                                                Page 145


  8105                        ;    return ((NODELISTADDBYID)CALL_KERNEL_API(EXPO
                    RT_KERNEL_NODELISTADDBYID))(list,type,objId,data);
  8106                        	.sym	list,4,138,6,32,6
  8107                        	.sym	type,8,14,6,8
  8108                        	.sym	objId,10,18,6,32
  8109                        	.sym	data,14,129,6,32
  8110                        	.line	1184
  8111 00:196D: D4 14        	pei	<L426+data_0+2
  8112 00:196F: D4 12        	pei	<L426+data_0
  8113 00:1971: D4 10        	pei	<L426+objId_0+2
  8114 00:1973: D4 0E        	pei	<L426+objId_0
  8115 00:1975: D4 0C        	pei	<L426+type_0
  8116 00:1977: D4 0A        	pei	<L426+list_0+2
  8117 00:1979: D4 08        	pei	<L426+list_0
  8118 00:197B: AF 42 15 00  	lda	>5442
  8119 00:197F: 85 01        	sta	<R0
  8120 00:1981: AF 44 15 00  	lda	>5442+2
  8121 00:1985: 85 03        	sta	<R0+2
  8122 00:1987: A0 AA 01     	ldy	#$1aa
  8123 00:198A: B7 01        	lda	[<R0],Y
  8124 00:198C: AA           	tax
  8125 00:198D: A0 A8 01     	ldy	#$1a8
  8126 00:1990: B7 01        	lda	[<R0],Y
  8127                        	xref	~~~lcal
  8128 00:1992: 22 xx xx xx  	jsl	~~~lcal
  8129 00:1996: 85 01        	sta	<R0
  8130 00:1998: 86 03        	stx	<R0+2
  8131 00:199A: A6 03        	ldx	<R0+2
  8132 00:199C: A5 01        	lda	<R0
  8133                        L429:
  8134 00:199E: A8           	tay
  8135 00:199F: A5 06        	lda	<L426+2
  8136 00:19A1: 85 14        	sta	<L426+2+14
  8137 00:19A3: A5 05        	lda	<L426+1
  8138 00:19A5: 85 13        	sta	<L426+1+14
  8139 00:19A7: 2B           	pld
  8140 00:19A8: 3B           	tsc
  8141 00:19A9: 18           	clc
  8142 00:19AA: 69 12 00     	adc	#L426+14
  8143 00:19AD: 1B           	tcs
  8144 00:19AE: 98           	tya
  8145 00:19AF: 6B           	rtl
  8146                        ;}
  8147                        	.line	1185
  8148                        	.endblock	1185
  8149             00000004   L426	equ	4
  8150             00000005   L427	equ	5
  8151                        	ends
  8152                        	efunc
  8153                        	.endfunc	1185,5,4
  8154                        	.line	1185
  8155                        ;
  8156                        ;/*
  8157                        ;*
  8158                        ;* Name:NodeListAddNode
  8159                        ;* Subsystem:KERNEL
  8160                        ;*
  8161                        ;*/
  Thu Jul 29 2021 22:56                                                Page 146


  8162                        ;PFXNODE NodeListAddNode(PFXNODELIST list,PFXNODE 
                    new)
  8163                        ;{
  8164                        	.line	1193
  8165                        	.line	1194
  8166                        	code
  8167                        	xdef	~~NodeListAddNode
  8168                        	func
  8169                        	.function	1194
  8170                        ~~NodeListAddNode:
  8171                        	longa	on
  8172                        	longi	on
  8173 00:19B0: 3B           	tsc
  8174 00:19B1: 38           	sec
  8175 00:19B2: E9 04 00     	sbc	#L430
  8176 00:19B5: 1B           	tcs
  8177 00:19B6: 0B           	phd
  8178 00:19B7: 5B           	tcd
  8179             00000004   list_0	set	4
  8180             00000008   new_0	set	8
  8181                        	.block	1194
  8182                        ;    return ((NODELISTADDNODE)CALL_KERNEL_API(EXPO
                    RT_KERNEL_NODELISTADDNODE))(list,new);
  8183                        	.sym	list,4,138,6,32,6
  8184                        	.sym	new,8,138,6,32,5
  8185                        	.line	1195
  8186 00:19B8: D4 0E        	pei	<L430+new_0+2
  8187 00:19BA: D4 0C        	pei	<L430+new_0
  8188 00:19BC: D4 0A        	pei	<L430+list_0+2
  8189 00:19BE: D4 08        	pei	<L430+list_0
  8190 00:19C0: AF 42 15 00  	lda	>5442
  8191 00:19C4: 85 01        	sta	<R0
  8192 00:19C6: AF 44 15 00  	lda	>5442+2
  8193 00:19CA: 85 03        	sta	<R0+2
  8194 00:19CC: A0 AE 01     	ldy	#$1ae
  8195 00:19CF: B7 01        	lda	[<R0],Y
  8196 00:19D1: AA           	tax
  8197 00:19D2: A0 AC 01     	ldy	#$1ac
  8198 00:19D5: B7 01        	lda	[<R0],Y
  8199                        	xref	~~~lcal
  8200 00:19D7: 22 xx xx xx  	jsl	~~~lcal
  8201 00:19DB: 85 01        	sta	<R0
  8202 00:19DD: 86 03        	stx	<R0+2
  8203 00:19DF: A6 03        	ldx	<R0+2
  8204 00:19E1: A5 01        	lda	<R0
  8205                        L433:
  8206 00:19E3: A8           	tay
  8207 00:19E4: A5 06        	lda	<L430+2
  8208 00:19E6: 85 0E        	sta	<L430+2+8
  8209 00:19E8: A5 05        	lda	<L430+1
  8210 00:19EA: 85 0D        	sta	<L430+1+8
  8211 00:19EC: 2B           	pld
  8212 00:19ED: 3B           	tsc
  8213 00:19EE: 18           	clc
  8214 00:19EF: 69 0C 00     	adc	#L430+8
  8215 00:19F2: 1B           	tcs
  8216 00:19F3: 98           	tya
  8217 00:19F4: 6B           	rtl
  Thu Jul 29 2021 22:56                                                Page 147


  8218                        ;}
  8219                        	.line	1196
  8220                        	.endblock	1196
  8221             00000004   L430	equ	4
  8222             00000005   L431	equ	5
  8223                        	ends
  8224                        	efunc
  8225                        	.endfunc	1196,5,4
  8226                        	.line	1196
  8227                        ;
  8228                        ;/*
  8229                        ;*
  8230                        ;* Name:NodeListClear
  8231                        ;* Subsystem:KERNEL
  8232                        ;*
  8233                        ;*/
  8234                        ;PFXNODELIST NodeListClear(PFXNODELIST nodelist)
  8235                        ;{
  8236                        	.line	1204
  8237                        	.line	1205
  8238                        	code
  8239                        	xdef	~~NodeListClear
  8240                        	func
  8241                        	.function	1205
  8242                        ~~NodeListClear:
  8243                        	longa	on
  8244                        	longi	on
  8245 00:19F5: 3B           	tsc
  8246 00:19F6: 38           	sec
  8247 00:19F7: E9 04 00     	sbc	#L434
  8248 00:19FA: 1B           	tcs
  8249 00:19FB: 0B           	phd
  8250 00:19FC: 5B           	tcd
  8251             00000004   nodelist_0	set	4
  8252                        	.block	1205
  8253                        ;    return ((NODELISTCLEAR)CALL_KERNEL_API(EXPORT
                    _KERNEL_NODELISTCLEAR))(nodelist);
  8254                        	.sym	nodelist,4,138,6,32,6
  8255                        	.line	1206
  8256 00:19FD: D4 0A        	pei	<L434+nodelist_0+2
  8257 00:19FF: D4 08        	pei	<L434+nodelist_0
  8258 00:1A01: AF 42 15 00  	lda	>5442
  8259 00:1A05: 85 01        	sta	<R0
  8260 00:1A07: AF 44 15 00  	lda	>5442+2
  8261 00:1A0B: 85 03        	sta	<R0+2
  8262 00:1A0D: A0 B2 01     	ldy	#$1b2
  8263 00:1A10: B7 01        	lda	[<R0],Y
  8264 00:1A12: AA           	tax
  8265 00:1A13: A0 B0 01     	ldy	#$1b0
  8266 00:1A16: B7 01        	lda	[<R0],Y
  8267                        	xref	~~~lcal
  8268 00:1A18: 22 xx xx xx  	jsl	~~~lcal
  8269 00:1A1C: 85 01        	sta	<R0
  8270 00:1A1E: 86 03        	stx	<R0+2
  8271 00:1A20: A6 03        	ldx	<R0+2
  8272 00:1A22: A5 01        	lda	<R0
  8273                        L437:
  8274 00:1A24: A8           	tay
  Thu Jul 29 2021 22:56                                                Page 148


  8275 00:1A25: A5 06        	lda	<L434+2
  8276 00:1A27: 85 0A        	sta	<L434+2+4
  8277 00:1A29: A5 05        	lda	<L434+1
  8278 00:1A2B: 85 09        	sta	<L434+1+4
  8279 00:1A2D: 2B           	pld
  8280 00:1A2E: 3B           	tsc
  8281 00:1A2F: 18           	clc
  8282 00:1A30: 69 08 00     	adc	#L434+4
  8283 00:1A33: 1B           	tcs
  8284 00:1A34: 98           	tya
  8285 00:1A35: 6B           	rtl
  8286                        ;}
  8287                        	.line	1207
  8288                        	.endblock	1207
  8289             00000004   L434	equ	4
  8290             00000005   L435	equ	5
  8291                        	ends
  8292                        	efunc
  8293                        	.endfunc	1207,5,4
  8294                        	.line	1207
  8295                        ;
  8296                        ;/*
  8297                        ;*
  8298                        ;* Name:NodeListFindByName
  8299                        ;* Subsystem:KERNEL
  8300                        ;*
  8301                        ;*/
  8302                        ;PFXNODE NodeListFindByName(PFXNODELIST list,LPCST
                    R name)
  8303                        ;{
  8304                        	.line	1215
  8305                        	.line	1216
  8306                        	code
  8307                        	xdef	~~NodeListFindByName
  8308                        	func
  8309                        	.function	1216
  8310                        ~~NodeListFindByName:
  8311                        	longa	on
  8312                        	longi	on
  8313 00:1A36: 3B           	tsc
  8314 00:1A37: 38           	sec
  8315 00:1A38: E9 04 00     	sbc	#L438
  8316 00:1A3B: 1B           	tcs
  8317 00:1A3C: 0B           	phd
  8318 00:1A3D: 5B           	tcd
  8319             00000004   list_0	set	4
  8320             00000008   name_0	set	8
  8321                        	.block	1216
  8322                        ;    return ((NODELISTFINDBYNAME)CALL_KERNEL_API(E
                    XPORT_KERNEL_NODELISTFINDBYNAME))(list,name);
  8323                        	.sym	list,4,138,6,32,6
  8324                        	.sym	name,8,142,6,32
  8325                        	.line	1217
  8326 00:1A3E: D4 0E        	pei	<L438+name_0+2
  8327 00:1A40: D4 0C        	pei	<L438+name_0
  8328 00:1A42: D4 0A        	pei	<L438+list_0+2
  8329 00:1A44: D4 08        	pei	<L438+list_0
  8330 00:1A46: AF 42 15 00  	lda	>5442
  Thu Jul 29 2021 22:56                                                Page 149


  8331 00:1A4A: 85 01        	sta	<R0
  8332 00:1A4C: AF 44 15 00  	lda	>5442+2
  8333 00:1A50: 85 03        	sta	<R0+2
  8334 00:1A52: A0 B6 01     	ldy	#$1b6
  8335 00:1A55: B7 01        	lda	[<R0],Y
  8336 00:1A57: AA           	tax
  8337 00:1A58: A0 B4 01     	ldy	#$1b4
  8338 00:1A5B: B7 01        	lda	[<R0],Y
  8339                        	xref	~~~lcal
  8340 00:1A5D: 22 xx xx xx  	jsl	~~~lcal
  8341 00:1A61: 85 01        	sta	<R0
  8342 00:1A63: 86 03        	stx	<R0+2
  8343 00:1A65: A6 03        	ldx	<R0+2
  8344 00:1A67: A5 01        	lda	<R0
  8345                        L441:
  8346 00:1A69: A8           	tay
  8347 00:1A6A: A5 06        	lda	<L438+2
  8348 00:1A6C: 85 0E        	sta	<L438+2+8
  8349 00:1A6E: A5 05        	lda	<L438+1
  8350 00:1A70: 85 0D        	sta	<L438+1+8
  8351 00:1A72: 2B           	pld
  8352 00:1A73: 3B           	tsc
  8353 00:1A74: 18           	clc
  8354 00:1A75: 69 0C 00     	adc	#L438+8
  8355 00:1A78: 1B           	tcs
  8356 00:1A79: 98           	tya
  8357 00:1A7A: 6B           	rtl
  8358                        ;}
  8359                        	.line	1218
  8360                        	.endblock	1218
  8361             00000004   L438	equ	4
  8362             00000005   L439	equ	5
  8363                        	ends
  8364                        	efunc
  8365                        	.endfunc	1218,5,4
  8366                        	.line	1218
  8367                        ;
  8368                        ;/*
  8369                        ;*
  8370                        ;* Name:NodeListFindById
  8371                        ;* Subsystem:KERNEL
  8372                        ;*
  8373                        ;*/
  8374                        ;PFXNODE NodeListFindById(PFXNODELIST list,ULONG o
                    bjId)
  8375                        ;{
  8376                        	.line	1226
  8377                        	.line	1227
  8378                        	code
  8379                        	xdef	~~NodeListFindById
  8380                        	func
  8381                        	.function	1227
  8382                        ~~NodeListFindById:
  8383                        	longa	on
  8384                        	longi	on
  8385 00:1A7B: 3B           	tsc
  8386 00:1A7C: 38           	sec
  8387 00:1A7D: E9 04 00     	sbc	#L442
  Thu Jul 29 2021 22:56                                                Page 150


  8388 00:1A80: 1B           	tcs
  8389 00:1A81: 0B           	phd
  8390 00:1A82: 5B           	tcd
  8391             00000004   list_0	set	4
  8392             00000008   objId_0	set	8
  8393                        	.block	1227
  8394                        ;    return ((NODELISTFINDBYID)CALL_KERNEL_API(EXP
                    ORT_KERNEL_NODELISTFINDBYID))(list,objId);
  8395                        	.sym	list,4,138,6,32,6
  8396                        	.sym	objId,8,18,6,32
  8397                        	.line	1228
  8398 00:1A83: D4 0E        	pei	<L442+objId_0+2
  8399 00:1A85: D4 0C        	pei	<L442+objId_0
  8400 00:1A87: D4 0A        	pei	<L442+list_0+2
  8401 00:1A89: D4 08        	pei	<L442+list_0
  8402 00:1A8B: AF 42 15 00  	lda	>5442
  8403 00:1A8F: 85 01        	sta	<R0
  8404 00:1A91: AF 44 15 00  	lda	>5442+2
  8405 00:1A95: 85 03        	sta	<R0+2
  8406 00:1A97: A0 BA 01     	ldy	#$1ba
  8407 00:1A9A: B7 01        	lda	[<R0],Y
  8408 00:1A9C: AA           	tax
  8409 00:1A9D: A0 B8 01     	ldy	#$1b8
  8410 00:1AA0: B7 01        	lda	[<R0],Y
  8411                        	xref	~~~lcal
  8412 00:1AA2: 22 xx xx xx  	jsl	~~~lcal
  8413 00:1AA6: 85 01        	sta	<R0
  8414 00:1AA8: 86 03        	stx	<R0+2
  8415 00:1AAA: A6 03        	ldx	<R0+2
  8416 00:1AAC: A5 01        	lda	<R0
  8417                        L445:
  8418 00:1AAE: A8           	tay
  8419 00:1AAF: A5 06        	lda	<L442+2
  8420 00:1AB1: 85 0E        	sta	<L442+2+8
  8421 00:1AB3: A5 05        	lda	<L442+1
  8422 00:1AB5: 85 0D        	sta	<L442+1+8
  8423 00:1AB7: 2B           	pld
  8424 00:1AB8: 3B           	tsc
  8425 00:1AB9: 18           	clc
  8426 00:1ABA: 69 0C 00     	adc	#L442+8
  8427 00:1ABD: 1B           	tcs
  8428 00:1ABE: 98           	tya
  8429 00:1ABF: 6B           	rtl
  8430                        ;}
  8431                        	.line	1229
  8432                        	.endblock	1229
  8433             00000004   L442	equ	4
  8434             00000005   L443	equ	5
  8435                        	ends
  8436                        	efunc
  8437                        	.endfunc	1229,5,4
  8438                        	.line	1229
  8439                        ;
  8440                        ;/*
  8441                        ;*
  8442                        ;* Name:NodeListFindByType
  8443                        ;* Subsystem:KERNEL
  8444                        ;*
  Thu Jul 29 2021 22:56                                                Page 151


  8445                        ;*/
  8446                        ;PFXNODE NodeListFindByType(PFXNODELIST list,BYTE 
                    type)
  8447                        ;{
  8448                        	.line	1237
  8449                        	.line	1238
  8450                        	code
  8451                        	xdef	~~NodeListFindByType
  8452                        	func
  8453                        	.function	1238
  8454                        ~~NodeListFindByType:
  8455                        	longa	on
  8456                        	longi	on
  8457 00:1AC0: 3B           	tsc
  8458 00:1AC1: 38           	sec
  8459 00:1AC2: E9 04 00     	sbc	#L446
  8460 00:1AC5: 1B           	tcs
  8461 00:1AC6: 0B           	phd
  8462 00:1AC7: 5B           	tcd
  8463             00000004   list_0	set	4
  8464             00000008   type_0	set	8
  8465                        	.block	1238
  8466                        ;    return ((NODELISTFINDBYTYPE)CALL_KERNEL_API(E
                    XPORT_KERNEL_NODELISTFINDBYTYPE))(list,type);
  8467                        	.sym	list,4,138,6,32,6
  8468                        	.sym	type,8,14,6,8
  8469                        	.line	1239
  8470 00:1AC8: D4 0C        	pei	<L446+type_0
  8471 00:1ACA: D4 0A        	pei	<L446+list_0+2
  8472 00:1ACC: D4 08        	pei	<L446+list_0
  8473 00:1ACE: AF 42 15 00  	lda	>5442
  8474 00:1AD2: 85 01        	sta	<R0
  8475 00:1AD4: AF 44 15 00  	lda	>5442+2
  8476 00:1AD8: 85 03        	sta	<R0+2
  8477 00:1ADA: A0 BE 01     	ldy	#$1be
  8478 00:1ADD: B7 01        	lda	[<R0],Y
  8479 00:1ADF: AA           	tax
  8480 00:1AE0: A0 BC 01     	ldy	#$1bc
  8481 00:1AE3: B7 01        	lda	[<R0],Y
  8482                        	xref	~~~lcal
  8483 00:1AE5: 22 xx xx xx  	jsl	~~~lcal
  8484 00:1AE9: 85 01        	sta	<R0
  8485 00:1AEB: 86 03        	stx	<R0+2
  8486 00:1AED: A6 03        	ldx	<R0+2
  8487 00:1AEF: A5 01        	lda	<R0
  8488                        L449:
  8489 00:1AF1: A8           	tay
  8490 00:1AF2: A5 06        	lda	<L446+2
  8491 00:1AF4: 85 0C        	sta	<L446+2+6
  8492 00:1AF6: A5 05        	lda	<L446+1
  8493 00:1AF8: 85 0B        	sta	<L446+1+6
  8494 00:1AFA: 2B           	pld
  8495 00:1AFB: 3B           	tsc
  8496 00:1AFC: 18           	clc
  8497 00:1AFD: 69 0A 00     	adc	#L446+6
  8498 00:1B00: 1B           	tcs
  8499 00:1B01: 98           	tya
  8500 00:1B02: 6B           	rtl
  Thu Jul 29 2021 22:56                                                Page 152


  8501                        ;}
  8502                        	.line	1240
  8503                        	.endblock	1240
  8504             00000004   L446	equ	4
  8505             00000005   L447	equ	5
  8506                        	ends
  8507                        	efunc
  8508                        	.endfunc	1240,5,4
  8509                        	.line	1240
  8510                        ;
  8511                        ;/*
  8512                        ;*
  8513                        ;* Name:NodeListGetName
  8514                        ;* Subsystem:KERNEL
  8515                        ;*
  8516                        ;*/
  8517                        ;LPCSTR NodeListGetName(PFXNODELIST list)
  8518                        ;{
  8519                        	.line	1248
  8520                        	.line	1249
  8521                        	code
  8522                        	xdef	~~NodeListGetName
  8523                        	func
  8524                        	.function	1249
  8525                        ~~NodeListGetName:
  8526                        	longa	on
  8527                        	longi	on
  8528 00:1B03: 3B           	tsc
  8529 00:1B04: 38           	sec
  8530 00:1B05: E9 04 00     	sbc	#L450
  8531 00:1B08: 1B           	tcs
  8532 00:1B09: 0B           	phd
  8533 00:1B0A: 5B           	tcd
  8534             00000004   list_0	set	4
  8535                        	.block	1249
  8536                        ;    return ((NODELISTGETNAME)CALL_KERNEL_API(EXPO
                    RT_KERNEL_NODELISTGETNAME))(list);
  8537                        	.sym	list,4,138,6,32,6
  8538                        	.line	1250
  8539 00:1B0B: D4 0A        	pei	<L450+list_0+2
  8540 00:1B0D: D4 08        	pei	<L450+list_0
  8541 00:1B0F: AF 42 15 00  	lda	>5442
  8542 00:1B13: 85 01        	sta	<R0
  8543 00:1B15: AF 44 15 00  	lda	>5442+2
  8544 00:1B19: 85 03        	sta	<R0+2
  8545 00:1B1B: A0 C2 01     	ldy	#$1c2
  8546 00:1B1E: B7 01        	lda	[<R0],Y
  8547 00:1B20: AA           	tax
  8548 00:1B21: A0 C0 01     	ldy	#$1c0
  8549 00:1B24: B7 01        	lda	[<R0],Y
  8550                        	xref	~~~lcal
  8551 00:1B26: 22 xx xx xx  	jsl	~~~lcal
  8552 00:1B2A: 85 01        	sta	<R0
  8553 00:1B2C: 86 03        	stx	<R0+2
  8554 00:1B2E: A6 03        	ldx	<R0+2
  8555 00:1B30: A5 01        	lda	<R0
  8556                        L453:
  8557 00:1B32: A8           	tay
  Thu Jul 29 2021 22:56                                                Page 153


  8558 00:1B33: A5 06        	lda	<L450+2
  8559 00:1B35: 85 0A        	sta	<L450+2+4
  8560 00:1B37: A5 05        	lda	<L450+1
  8561 00:1B39: 85 09        	sta	<L450+1+4
  8562 00:1B3B: 2B           	pld
  8563 00:1B3C: 3B           	tsc
  8564 00:1B3D: 18           	clc
  8565 00:1B3E: 69 08 00     	adc	#L450+4
  8566 00:1B41: 1B           	tcs
  8567 00:1B42: 98           	tya
  8568 00:1B43: 6B           	rtl
  8569                        ;}
  8570                        	.line	1251
  8571                        	.endblock	1251
  8572             00000004   L450	equ	4
  8573             00000005   L451	equ	5
  8574                        	ends
  8575                        	efunc
  8576                        	.endfunc	1251,5,4
  8577                        	.line	1251
  8578                        ;
  8579                        ;/*
  8580                        ;*
  8581                        ;* Name:NodeListGetFirst
  8582                        ;* Subsystem:KERNEL
  8583                        ;*
  8584                        ;*/
  8585                        ;PFXNODE NodeListGetFirst(PFXNODELIST list)
  8586                        ;{
  8587                        	.line	1259
  8588                        	.line	1260
  8589                        	code
  8590                        	xdef	~~NodeListGetFirst
  8591                        	func
  8592                        	.function	1260
  8593                        ~~NodeListGetFirst:
  8594                        	longa	on
  8595                        	longi	on
  8596 00:1B44: 3B           	tsc
  8597 00:1B45: 38           	sec
  8598 00:1B46: E9 04 00     	sbc	#L454
  8599 00:1B49: 1B           	tcs
  8600 00:1B4A: 0B           	phd
  8601 00:1B4B: 5B           	tcd
  8602             00000004   list_0	set	4
  8603                        	.block	1260
  8604                        ;    return ((NODELISTGETFIRST)CALL_KERNEL_API(EXP
                    ORT_KERNEL_NODELISTGETFIRST))(list);
  8605                        	.sym	list,4,138,6,32,6
  8606                        	.line	1261
  8607 00:1B4C: D4 0A        	pei	<L454+list_0+2
  8608 00:1B4E: D4 08        	pei	<L454+list_0
  8609 00:1B50: AF 42 15 00  	lda	>5442
  8610 00:1B54: 85 01        	sta	<R0
  8611 00:1B56: AF 44 15 00  	lda	>5442+2
  8612 00:1B5A: 85 03        	sta	<R0+2
  8613 00:1B5C: A0 C6 01     	ldy	#$1c6
  8614 00:1B5F: B7 01        	lda	[<R0],Y
  Thu Jul 29 2021 22:56                                                Page 154


  8615 00:1B61: AA           	tax
  8616 00:1B62: A0 C4 01     	ldy	#$1c4
  8617 00:1B65: B7 01        	lda	[<R0],Y
  8618                        	xref	~~~lcal
  8619 00:1B67: 22 xx xx xx  	jsl	~~~lcal
  8620 00:1B6B: 85 01        	sta	<R0
  8621 00:1B6D: 86 03        	stx	<R0+2
  8622 00:1B6F: A6 03        	ldx	<R0+2
  8623 00:1B71: A5 01        	lda	<R0
  8624                        L457:
  8625 00:1B73: A8           	tay
  8626 00:1B74: A5 06        	lda	<L454+2
  8627 00:1B76: 85 0A        	sta	<L454+2+4
  8628 00:1B78: A5 05        	lda	<L454+1
  8629 00:1B7A: 85 09        	sta	<L454+1+4
  8630 00:1B7C: 2B           	pld
  8631 00:1B7D: 3B           	tsc
  8632 00:1B7E: 18           	clc
  8633 00:1B7F: 69 08 00     	adc	#L454+4
  8634 00:1B82: 1B           	tcs
  8635 00:1B83: 98           	tya
  8636 00:1B84: 6B           	rtl
  8637                        ;}
  8638                        	.line	1262
  8639                        	.endblock	1262
  8640             00000004   L454	equ	4
  8641             00000005   L455	equ	5
  8642                        	ends
  8643                        	efunc
  8644                        	.endfunc	1262,5,4
  8645                        	.line	1262
  8646                        ;
  8647                        ;/*
  8648                        ;*
  8649                        ;* Name:NodeListIsEmpty
  8650                        ;* Subsystem:KERNEL
  8651                        ;*
  8652                        ;*/
  8653                        ;BOOL NodeListIsEmpty(PFXNODELIST list)
  8654                        ;{
  8655                        	.line	1270
  8656                        	.line	1271
  8657                        	code
  8658                        	xdef	~~NodeListIsEmpty
  8659                        	func
  8660                        	.function	1271
  8661                        ~~NodeListIsEmpty:
  8662                        	longa	on
  8663                        	longi	on
  8664 00:1B85: 3B           	tsc
  8665 00:1B86: 38           	sec
  8666 00:1B87: E9 04 00     	sbc	#L458
  8667 00:1B8A: 1B           	tcs
  8668 00:1B8B: 0B           	phd
  8669 00:1B8C: 5B           	tcd
  8670             00000004   list_0	set	4
  8671                        	.block	1271
  8672                        ;    return ((NODELISTISEMPTY)CALL_KERNEL_API(EXPO
  Thu Jul 29 2021 22:56                                                Page 155


                    RT_KERNEL_NODELISTISEMPTY))(list);
  8673                        	.sym	list,4,138,6,32,6
  8674                        	.line	1272
  8675 00:1B8D: D4 0A        	pei	<L458+list_0+2
  8676 00:1B8F: D4 08        	pei	<L458+list_0
  8677 00:1B91: AF 42 15 00  	lda	>5442
  8678 00:1B95: 85 01        	sta	<R0
  8679 00:1B97: AF 44 15 00  	lda	>5442+2
  8680 00:1B9B: 85 03        	sta	<R0+2
  8681 00:1B9D: A0 CA 01     	ldy	#$1ca
  8682 00:1BA0: B7 01        	lda	[<R0],Y
  8683 00:1BA2: AA           	tax
  8684 00:1BA3: A0 C8 01     	ldy	#$1c8
  8685 00:1BA6: B7 01        	lda	[<R0],Y
  8686                        	xref	~~~lcal
  8687 00:1BA8: 22 xx xx xx  	jsl	~~~lcal
  8688 00:1BAC: E2 20        	sep	#$20
  8689                        	longa	off
  8690 00:1BAE: 85 01        	sta	<R0
  8691 00:1BB0: C2 20        	rep	#$20
  8692                        	longa	on
  8693 00:1BB2: A5 01        	lda	<R0
  8694 00:1BB4: 29 FF 00     	and	#$ff
  8695                        L461:
  8696 00:1BB7: A8           	tay
  8697 00:1BB8: A5 06        	lda	<L458+2
  8698 00:1BBA: 85 0A        	sta	<L458+2+4
  8699 00:1BBC: A5 05        	lda	<L458+1
  8700 00:1BBE: 85 09        	sta	<L458+1+4
  8701 00:1BC0: 2B           	pld
  8702 00:1BC1: 3B           	tsc
  8703 00:1BC2: 18           	clc
  8704 00:1BC3: 69 08 00     	adc	#L458+4
  8705 00:1BC6: 1B           	tcs
  8706 00:1BC7: 98           	tya
  8707 00:1BC8: 6B           	rtl
  8708                        ;}
  8709                        	.line	1273
  8710                        	.endblock	1273
  8711             00000004   L458	equ	4
  8712             00000005   L459	equ	5
  8713                        	ends
  8714                        	efunc
  8715                        	.endfunc	1273,5,4
  8716                        	.line	1273
  8717                        ;
  8718                        ;/*
  8719                        ;*
  8720                        ;* Name:NodeListRemoveNode
  8721                        ;* Subsystem:KERNEL
  8722                        ;*
  8723                        ;*/
  8724                        ;PFXNODE NodeListRemoveNode(PFXNODELIST list,PFXNO
                    DE targetNode)
  8725                        ;{
  8726                        	.line	1281
  8727                        	.line	1282
  8728                        	code
  Thu Jul 29 2021 22:56                                                Page 156


  8729                        	xdef	~~NodeListRemoveNode
  8730                        	func
  8731                        	.function	1282
  8732                        ~~NodeListRemoveNode:
  8733                        	longa	on
  8734                        	longi	on
  8735 00:1BC9: 3B           	tsc
  8736 00:1BCA: 38           	sec
  8737 00:1BCB: E9 04 00     	sbc	#L462
  8738 00:1BCE: 1B           	tcs
  8739 00:1BCF: 0B           	phd
  8740 00:1BD0: 5B           	tcd
  8741             00000004   list_0	set	4
  8742             00000008   targetNode_0	set	8
  8743                        	.block	1282
  8744                        ;    return ((NODELISTREMOVENODE)CALL_KERNEL_API(E
                    XPORT_KERNEL_NODELISTREMOVENODE))(list,targetNode);
  8745                        	.sym	list,4,138,6,32,6
  8746                        	.sym	targetNode,8,138,6,32,5
  8747                        	.line	1283
  8748 00:1BD1: D4 0E        	pei	<L462+targetNode_0+2
  8749 00:1BD3: D4 0C        	pei	<L462+targetNode_0
  8750 00:1BD5: D4 0A        	pei	<L462+list_0+2
  8751 00:1BD7: D4 08        	pei	<L462+list_0
  8752 00:1BD9: AF 42 15 00  	lda	>5442
  8753 00:1BDD: 85 01        	sta	<R0
  8754 00:1BDF: AF 44 15 00  	lda	>5442+2
  8755 00:1BE3: 85 03        	sta	<R0+2
  8756 00:1BE5: A0 CE 01     	ldy	#$1ce
  8757 00:1BE8: B7 01        	lda	[<R0],Y
  8758 00:1BEA: AA           	tax
  8759 00:1BEB: A0 CC 01     	ldy	#$1cc
  8760 00:1BEE: B7 01        	lda	[<R0],Y
  8761                        	xref	~~~lcal
  8762 00:1BF0: 22 xx xx xx  	jsl	~~~lcal
  8763 00:1BF4: 85 01        	sta	<R0
  8764 00:1BF6: 86 03        	stx	<R0+2
  8765 00:1BF8: A6 03        	ldx	<R0+2
  8766 00:1BFA: A5 01        	lda	<R0
  8767                        L465:
  8768 00:1BFC: A8           	tay
  8769 00:1BFD: A5 06        	lda	<L462+2
  8770 00:1BFF: 85 0E        	sta	<L462+2+8
  8771 00:1C01: A5 05        	lda	<L462+1
  8772 00:1C03: 85 0D        	sta	<L462+1+8
  8773 00:1C05: 2B           	pld
  8774 00:1C06: 3B           	tsc
  8775 00:1C07: 18           	clc
  8776 00:1C08: 69 0C 00     	adc	#L462+8
  8777 00:1C0B: 1B           	tcs
  8778 00:1C0C: 98           	tya
  8779 00:1C0D: 6B           	rtl
  8780                        ;}
  8781                        	.line	1284
  8782                        	.endblock	1284
  8783             00000004   L462	equ	4
  8784             00000005   L463	equ	5
  8785                        	ends
  Thu Jul 29 2021 22:56                                                Page 157


  8786                        	efunc
  8787                        	.endfunc	1284,5,4
  8788                        	.line	1284
  8789                        ;
  8790                        ;/*
  8791                        ;*
  8792                        ;* Name:NodeListForEach
  8793                        ;* Subsystem:KERNEL
  8794                        ;*
  8795                        ;*/
  8796                        ;VOID NodeListForEach(PFXNODE head,LPVOID ctx,FORE
                    ACHNODE each)
  8797                        ;{
  8798                        	.line	1292
  8799                        	.line	1293
  8800                        	code
  8801                        	xdef	~~NodeListForEach
  8802                        	func
  8803                        	.function	1293
  8804                        ~~NodeListForEach:
  8805                        	longa	on
  8806                        	longi	on
  8807 00:1C0E: 3B           	tsc
  8808 00:1C0F: 38           	sec
  8809 00:1C10: E9 04 00     	sbc	#L466
  8810 00:1C13: 1B           	tcs
  8811 00:1C14: 0B           	phd
  8812 00:1C15: 5B           	tcd
  8813             00000004   head_0	set	4
  8814             00000008   ctx_0	set	8
  8815             0000000C   each_0	set	12
  8816                        	.block	1293
  8817                        ;    ((NODELISTFOREACH)CALL_KERNEL_API(EXPORT_KERN
                    EL_NODELISTFOREACH))(head,ctx,each);
  8818                        	.sym	head,4,138,6,32,5
  8819                        	.sym	ctx,8,129,6,32
  8820                        	.sym	each,12,641,6,32
  8821                        	.line	1294
  8822 00:1C16: D4 12        	pei	<L466+each_0+2
  8823 00:1C18: D4 10        	pei	<L466+each_0
  8824 00:1C1A: D4 0E        	pei	<L466+ctx_0+2
  8825 00:1C1C: D4 0C        	pei	<L466+ctx_0
  8826 00:1C1E: D4 0A        	pei	<L466+head_0+2
  8827 00:1C20: D4 08        	pei	<L466+head_0
  8828 00:1C22: AF 42 15 00  	lda	>5442
  8829 00:1C26: 85 01        	sta	<R0
  8830 00:1C28: AF 44 15 00  	lda	>5442+2
  8831 00:1C2C: 85 03        	sta	<R0+2
  8832 00:1C2E: A0 D2 01     	ldy	#$1d2
  8833 00:1C31: B7 01        	lda	[<R0],Y
  8834 00:1C33: AA           	tax
  8835 00:1C34: A0 D0 01     	ldy	#$1d0
  8836 00:1C37: B7 01        	lda	[<R0],Y
  8837                        	xref	~~~lcal
  8838 00:1C39: 22 xx xx xx  	jsl	~~~lcal
  8839                        ;}
  8840                        	.line	1295
  8841                        L469:
  Thu Jul 29 2021 22:56                                                Page 158


  8842 00:1C3D: A5 06        	lda	<L466+2
  8843 00:1C3F: 85 12        	sta	<L466+2+12
  8844 00:1C41: A5 05        	lda	<L466+1
  8845 00:1C43: 85 11        	sta	<L466+1+12
  8846 00:1C45: 2B           	pld
  8847 00:1C46: 3B           	tsc
  8848 00:1C47: 18           	clc
  8849 00:1C48: 69 10 00     	adc	#L466+12
  8850 00:1C4B: 1B           	tcs
  8851 00:1C4C: 6B           	rtl
  8852                        	.endblock	1295
  8853             00000004   L466	equ	4
  8854             00000005   L467	equ	5
  8855                        	ends
  8856                        	efunc
  8857                        	.endfunc	1295,5,4
  8858                        	.line	1295
  8859                        ;
  8860                        ;/*
  8861                        ;*
  8862                        ;* Name:NodeListForEachUntil
  8863                        ;* Subsystem:KERNEL
  8864                        ;*
  8865                        ;*/
  8866                        ;PFXNODE NodeListForEachUntil(PFXNODE head,LPVOID 
                    context,FOREACHNODEUNTIL each)
  8867                        ;{
  8868                        	.line	1303
  8869                        	.line	1304
  8870                        	code
  8871                        	xdef	~~NodeListForEachUntil
  8872                        	func
  8873                        	.function	1304
  8874                        ~~NodeListForEachUntil:
  8875                        	longa	on
  8876                        	longi	on
  8877 00:1C4D: 3B           	tsc
  8878 00:1C4E: 38           	sec
  8879 00:1C4F: E9 04 00     	sbc	#L470
  8880 00:1C52: 1B           	tcs
  8881 00:1C53: 0B           	phd
  8882 00:1C54: 5B           	tcd
  8883             00000004   head_0	set	4
  8884             00000008   context_0	set	8
  8885             0000000C   each_0	set	12
  8886                        	.block	1304
  8887                        ;    return ((NODELISTFOREACHUNTIL)CALL_KERNEL_API
                    (EXPORT_KERNEL_NODELISTFOREACHUNTIL))(head,context,each);
  8888                        	.sym	head,4,138,6,32,5
  8889                        	.sym	context,8,129,6,32
  8890                        	.sym	each,12,654,6,32
  8891                        	.line	1305
  8892 00:1C55: D4 12        	pei	<L470+each_0+2
  8893 00:1C57: D4 10        	pei	<L470+each_0
  8894 00:1C59: D4 0E        	pei	<L470+context_0+2
  8895 00:1C5B: D4 0C        	pei	<L470+context_0
  8896 00:1C5D: D4 0A        	pei	<L470+head_0+2
  8897 00:1C5F: D4 08        	pei	<L470+head_0
  Thu Jul 29 2021 22:56                                                Page 159


  8898 00:1C61: AF 42 15 00  	lda	>5442
  8899 00:1C65: 85 01        	sta	<R0
  8900 00:1C67: AF 44 15 00  	lda	>5442+2
  8901 00:1C6B: 85 03        	sta	<R0+2
  8902 00:1C6D: A0 D6 01     	ldy	#$1d6
  8903 00:1C70: B7 01        	lda	[<R0],Y
  8904 00:1C72: AA           	tax
  8905 00:1C73: A0 D4 01     	ldy	#$1d4
  8906 00:1C76: B7 01        	lda	[<R0],Y
  8907                        	xref	~~~lcal
  8908 00:1C78: 22 xx xx xx  	jsl	~~~lcal
  8909 00:1C7C: 85 01        	sta	<R0
  8910 00:1C7E: 86 03        	stx	<R0+2
  8911 00:1C80: A6 03        	ldx	<R0+2
  8912 00:1C82: A5 01        	lda	<R0
  8913                        L473:
  8914 00:1C84: A8           	tay
  8915 00:1C85: A5 06        	lda	<L470+2
  8916 00:1C87: 85 12        	sta	<L470+2+12
  8917 00:1C89: A5 05        	lda	<L470+1
  8918 00:1C8B: 85 11        	sta	<L470+1+12
  8919 00:1C8D: 2B           	pld
  8920 00:1C8E: 3B           	tsc
  8921 00:1C8F: 18           	clc
  8922 00:1C90: 69 10 00     	adc	#L470+12
  8923 00:1C93: 1B           	tcs
  8924 00:1C94: 98           	tya
  8925 00:1C95: 6B           	rtl
  8926                        ;}
  8927                        	.line	1306
  8928                        	.endblock	1306
  8929             00000004   L470	equ	4
  8930             00000005   L471	equ	5
  8931                        	ends
  8932                        	efunc
  8933                        	.endfunc	1306,5,4
  8934                        	.line	1306
  8935                        ;
  8936                        ;/*
  8937                        ;*
  8938                        ;* Name:NodeListForEachType
  8939                        ;* Subsystem:KERNEL
  8940                        ;*
  8941                        ;*/
  8942                        ;VOID NodeListForEachType(PFXNODELIST list,BYTE ty
                    pe,LPVOID context,FOREACHNODE each)
  8943                        ;{
  8944                        	.line	1314
  8945                        	.line	1315
  8946                        	code
  8947                        	xdef	~~NodeListForEachType
  8948                        	func
  8949                        	.function	1315
  8950                        ~~NodeListForEachType:
  8951                        	longa	on
  8952                        	longi	on
  8953 00:1C96: 3B           	tsc
  8954 00:1C97: 38           	sec
  Thu Jul 29 2021 22:56                                                Page 160


  8955 00:1C98: E9 04 00     	sbc	#L474
  8956 00:1C9B: 1B           	tcs
  8957 00:1C9C: 0B           	phd
  8958 00:1C9D: 5B           	tcd
  8959             00000004   list_0	set	4
  8960             00000008   type_0	set	8
  8961             0000000A   context_0	set	10
  8962             0000000E   each_0	set	14
  8963                        	.block	1315
  8964                        ;    ((NODELISTFOREACHTYPE)CALL_KERNEL_API(EXPORT_
                    KERNEL_NODELISTFOREACHTYPE))(list,type,context,each);
  8965                        	.sym	list,4,138,6,32,6
  8966                        	.sym	type,8,14,6,8
  8967                        	.sym	context,10,129,6,32
  8968                        	.sym	each,14,641,6,32
  8969                        	.line	1316
  8970 00:1C9E: D4 14        	pei	<L474+each_0+2
  8971 00:1CA0: D4 12        	pei	<L474+each_0
  8972 00:1CA2: D4 10        	pei	<L474+context_0+2
  8973 00:1CA4: D4 0E        	pei	<L474+context_0
  8974 00:1CA6: D4 0C        	pei	<L474+type_0
  8975 00:1CA8: D4 0A        	pei	<L474+list_0+2
  8976 00:1CAA: D4 08        	pei	<L474+list_0
  8977 00:1CAC: AF 42 15 00  	lda	>5442
  8978 00:1CB0: 85 01        	sta	<R0
  8979 00:1CB2: AF 44 15 00  	lda	>5442+2
  8980 00:1CB6: 85 03        	sta	<R0+2
  8981 00:1CB8: A0 DA 01     	ldy	#$1da
  8982 00:1CBB: B7 01        	lda	[<R0],Y
  8983 00:1CBD: AA           	tax
  8984 00:1CBE: A0 D8 01     	ldy	#$1d8
  8985 00:1CC1: B7 01        	lda	[<R0],Y
  8986                        	xref	~~~lcal
  8987 00:1CC3: 22 xx xx xx  	jsl	~~~lcal
  8988                        ;}
  8989                        	.line	1317
  8990                        L477:
  8991 00:1CC7: A5 06        	lda	<L474+2
  8992 00:1CC9: 85 14        	sta	<L474+2+14
  8993 00:1CCB: A5 05        	lda	<L474+1
  8994 00:1CCD: 85 13        	sta	<L474+1+14
  8995 00:1CCF: 2B           	pld
  8996 00:1CD0: 3B           	tsc
  8997 00:1CD1: 18           	clc
  8998 00:1CD2: 69 12 00     	adc	#L474+14
  8999 00:1CD5: 1B           	tcs
  9000 00:1CD6: 6B           	rtl
  9001                        	.endblock	1317
  9002             00000004   L474	equ	4
  9003             00000005   L475	equ	5
  9004                        	ends
  9005                        	efunc
  9006                        	.endfunc	1317,5,4
  9007                        	.line	1317
  9008                        ;
  9009                        ;/*
  9010                        ;*
  9011                        ;* Name:NodeListForeachListData
  Thu Jul 29 2021 22:56                                                Page 161


  9012                        ;* Subsystem:KERNEL
  9013                        ;*
  9014                        ;*/
  9015                        ;VOID NodeListForeachListData(PFXNODELIST list,LPV
                    OID context,FOREACHNODE each)
  9016                        ;{
  9017                        	.line	1325
  9018                        	.line	1326
  9019                        	code
  9020                        	xdef	~~NodeListForeachListData
  9021                        	func
  9022                        	.function	1326
  9023                        ~~NodeListForeachListData:
  9024                        	longa	on
  9025                        	longi	on
  9026 00:1CD7: 3B           	tsc
  9027 00:1CD8: 38           	sec
  9028 00:1CD9: E9 04 00     	sbc	#L478
  9029 00:1CDC: 1B           	tcs
  9030 00:1CDD: 0B           	phd
  9031 00:1CDE: 5B           	tcd
  9032             00000004   list_0	set	4
  9033             00000008   context_0	set	8
  9034             0000000C   each_0	set	12
  9035                        	.block	1326
  9036                        ;    ((NODELISTFOREACHLISTDATA)CALL_KERNEL_API(EXP
                    ORT_KERNEL_NODELISTFOREACHLISTDATA))(list,context,each);
  9037                        	.sym	list,4,138,6,32,6
  9038                        	.sym	context,8,129,6,32
  9039                        	.sym	each,12,641,6,32
  9040                        	.line	1327
  9041 00:1CDF: D4 12        	pei	<L478+each_0+2
  9042 00:1CE1: D4 10        	pei	<L478+each_0
  9043 00:1CE3: D4 0E        	pei	<L478+context_0+2
  9044 00:1CE5: D4 0C        	pei	<L478+context_0
  9045 00:1CE7: D4 0A        	pei	<L478+list_0+2
  9046 00:1CE9: D4 08        	pei	<L478+list_0
  9047 00:1CEB: AF 42 15 00  	lda	>5442
  9048 00:1CEF: 85 01        	sta	<R0
  9049 00:1CF1: AF 44 15 00  	lda	>5442+2
  9050 00:1CF5: 85 03        	sta	<R0+2
  9051 00:1CF7: A0 DE 01     	ldy	#$1de
  9052 00:1CFA: B7 01        	lda	[<R0],Y
  9053 00:1CFC: AA           	tax
  9054 00:1CFD: A0 DC 01     	ldy	#$1dc
  9055 00:1D00: B7 01        	lda	[<R0],Y
  9056                        	xref	~~~lcal
  9057 00:1D02: 22 xx xx xx  	jsl	~~~lcal
  9058                        ;}
  9059                        	.line	1328
  9060                        L481:
  9061 00:1D06: A5 06        	lda	<L478+2
  9062 00:1D08: 85 12        	sta	<L478+2+12
  9063 00:1D0A: A5 05        	lda	<L478+1
  9064 00:1D0C: 85 11        	sta	<L478+1+12
  9065 00:1D0E: 2B           	pld
  9066 00:1D0F: 3B           	tsc
  9067 00:1D10: 18           	clc
  Thu Jul 29 2021 22:56                                                Page 162


  9068 00:1D11: 69 10 00     	adc	#L478+12
  9069 00:1D14: 1B           	tcs
  9070 00:1D15: 6B           	rtl
  9071                        	.endblock	1328
  9072             00000004   L478	equ	4
  9073             00000005   L479	equ	5
  9074                        	ends
  9075                        	efunc
  9076                        	.endfunc	1328,5,4
  9077                        	.line	1328
  9078                        ;
  9079                        ;/*
  9080                        ;*
  9081                        ;* Name:NodeListForeachUntilListData
  9082                        ;* Subsystem:KERNEL
  9083                        ;*
  9084                        ;*/
  9085                        ;PFXNODE NodeListForeachUntilListData(PFXNODELIST 
                    list,LPVOID context,FOREACHNODEUNTIL each)
  9086                        ;{
  9087                        	.line	1336
  9088                        	.line	1337
  9089                        	code
  9090                        	xdef	~~NodeListForeachUntilListData
  9091                        	func
  9092                        	.function	1337
  9093                        ~~NodeListForeachUntilListData:
  9094                        	longa	on
  9095                        	longi	on
  9096 00:1D16: 3B           	tsc
  9097 00:1D17: 38           	sec
  9098 00:1D18: E9 04 00     	sbc	#L482
  9099 00:1D1B: 1B           	tcs
  9100 00:1D1C: 0B           	phd
  9101 00:1D1D: 5B           	tcd
  9102             00000004   list_0	set	4
  9103             00000008   context_0	set	8
  9104             0000000C   each_0	set	12
  9105                        	.block	1337
  9106                        ;    return ((NODELISTFOREACHUNTILLISTDATA)CALL_KE
                    RNEL_API(EXPORT_KERNEL_NODELISTFOREACHUNTILLISTDATA))(list,c
                    ontext,each);
  9107                        	.sym	list,4,138,6,32,6
  9108                        	.sym	context,8,129,6,32
  9109                        	.sym	each,12,654,6,32
  9110                        	.line	1338
  9111 00:1D1E: D4 12        	pei	<L482+each_0+2
  9112 00:1D20: D4 10        	pei	<L482+each_0
  9113 00:1D22: D4 0E        	pei	<L482+context_0+2
  9114 00:1D24: D4 0C        	pei	<L482+context_0
  9115 00:1D26: D4 0A        	pei	<L482+list_0+2
  9116 00:1D28: D4 08        	pei	<L482+list_0
  9117 00:1D2A: AF 42 15 00  	lda	>5442
  9118 00:1D2E: 85 01        	sta	<R0
  9119 00:1D30: AF 44 15 00  	lda	>5442+2
  9120 00:1D34: 85 03        	sta	<R0+2
  9121 00:1D36: A0 E2 01     	ldy	#$1e2
  9122 00:1D39: B7 01        	lda	[<R0],Y
  Thu Jul 29 2021 22:56                                                Page 163


  9123 00:1D3B: AA           	tax
  9124 00:1D3C: A0 E0 01     	ldy	#$1e0
  9125 00:1D3F: B7 01        	lda	[<R0],Y
  9126                        	xref	~~~lcal
  9127 00:1D41: 22 xx xx xx  	jsl	~~~lcal
  9128 00:1D45: 85 01        	sta	<R0
  9129 00:1D47: 86 03        	stx	<R0+2
  9130 00:1D49: A6 03        	ldx	<R0+2
  9131 00:1D4B: A5 01        	lda	<R0
  9132                        L485:
  9133 00:1D4D: A8           	tay
  9134 00:1D4E: A5 06        	lda	<L482+2
  9135 00:1D50: 85 12        	sta	<L482+2+12
  9136 00:1D52: A5 05        	lda	<L482+1
  9137 00:1D54: 85 11        	sta	<L482+1+12
  9138 00:1D56: 2B           	pld
  9139 00:1D57: 3B           	tsc
  9140 00:1D58: 18           	clc
  9141 00:1D59: 69 10 00     	adc	#L482+12
  9142 00:1D5C: 1B           	tcs
  9143 00:1D5D: 98           	tya
  9144 00:1D5E: 6B           	rtl
  9145                        ;}
  9146                        	.line	1339
  9147                        	.endblock	1339
  9148             00000004   L482	equ	4
  9149             00000005   L483	equ	5
  9150                        	ends
  9151                        	efunc
  9152                        	.endfunc	1339,5,4
  9153                        	.line	1339
  9154                        ;
  9155                        ;/*
  9156                        ;*
  9157                        ;* Name:NodeListForeachRemove
  9158                        ;* Subsystem:KERNEL
  9159                        ;*
  9160                        ;*/
  9161                        ;VOID NodeListForeachRemove(PFXNODELIST list,LPVOI
                    D context,FOREACHNODEUNTIL checkStatus)
  9162                        ;{
  9163                        	.line	1347
  9164                        	.line	1348
  9165                        	code
  9166                        	xdef	~~NodeListForeachRemove
  9167                        	func
  9168                        	.function	1348
  9169                        ~~NodeListForeachRemove:
  9170                        	longa	on
  9171                        	longi	on
  9172 00:1D5F: 3B           	tsc
  9173 00:1D60: 38           	sec
  9174 00:1D61: E9 04 00     	sbc	#L486
  9175 00:1D64: 1B           	tcs
  9176 00:1D65: 0B           	phd
  9177 00:1D66: 5B           	tcd
  9178             00000004   list_0	set	4
  9179             00000008   context_0	set	8
  Thu Jul 29 2021 22:56                                                Page 164


  9180             0000000C   checkStatus_0	set	12
  9181                        	.block	1348
  9182                        ;    ((NODELISTFOREACHREMOVE)CALL_KERNEL_API(EXPOR
                    T_KERNEL_NODELISTFOREACHREMOVE))(list,context,checkStatus);
  9183                        	.sym	list,4,138,6,32,6
  9184                        	.sym	context,8,129,6,32
  9185                        	.sym	checkStatus,12,654,6,32
  9186                        	.line	1349
  9187 00:1D67: D4 12        	pei	<L486+checkStatus_0+2
  9188 00:1D69: D4 10        	pei	<L486+checkStatus_0
  9189 00:1D6B: D4 0E        	pei	<L486+context_0+2
  9190 00:1D6D: D4 0C        	pei	<L486+context_0
  9191 00:1D6F: D4 0A        	pei	<L486+list_0+2
  9192 00:1D71: D4 08        	pei	<L486+list_0
  9193 00:1D73: AF 42 15 00  	lda	>5442
  9194 00:1D77: 85 01        	sta	<R0
  9195 00:1D79: AF 44 15 00  	lda	>5442+2
  9196 00:1D7D: 85 03        	sta	<R0+2
  9197 00:1D7F: A0 E6 01     	ldy	#$1e6
  9198 00:1D82: B7 01        	lda	[<R0],Y
  9199 00:1D84: AA           	tax
  9200 00:1D85: A0 E4 01     	ldy	#$1e4
  9201 00:1D88: B7 01        	lda	[<R0],Y
  9202                        	xref	~~~lcal
  9203 00:1D8A: 22 xx xx xx  	jsl	~~~lcal
  9204                        ;}
  9205                        	.line	1350
  9206                        L489:
  9207 00:1D8E: A5 06        	lda	<L486+2
  9208 00:1D90: 85 12        	sta	<L486+2+12
  9209 00:1D92: A5 05        	lda	<L486+1
  9210 00:1D94: 85 11        	sta	<L486+1+12
  9211 00:1D96: 2B           	pld
  9212 00:1D97: 3B           	tsc
  9213 00:1D98: 18           	clc
  9214 00:1D99: 69 10 00     	adc	#L486+12
  9215 00:1D9C: 1B           	tcs
  9216 00:1D9D: 6B           	rtl
  9217                        	.endblock	1350
  9218             00000004   L486	equ	4
  9219             00000005   L487	equ	5
  9220                        	ends
  9221                        	efunc
  9222                        	.endfunc	1350,5,4
  9223                        	.line	1350
  9224                        ;
  9225                        ;/*
  9226                        ;*
  9227                        ;* Name:FXStringInit
  9228                        ;* Subsystem:KERNEL
  9229                        ;*
  9230                        ;*/
  9231                        ;PFXSTRING FXStringInit(UINT size)
  9232                        ;{
  9233                        	.line	1358
  9234                        	.line	1359
  9235                        	code
  9236                        	xdef	~~FXStringInit
  Thu Jul 29 2021 22:56                                                Page 165


  9237                        	func
  9238                        	.function	1359
  9239                        ~~FXStringInit:
  9240                        	longa	on
  9241                        	longi	on
  9242 00:1D9E: 3B           	tsc
  9243 00:1D9F: 38           	sec
  9244 00:1DA0: E9 04 00     	sbc	#L490
  9245 00:1DA3: 1B           	tcs
  9246 00:1DA4: 0B           	phd
  9247 00:1DA5: 5B           	tcd
  9248             00000004   size_0	set	4
  9249                        	.block	1359
  9250                        ;    return ((FXSTRINGINIT)CALL_KERNEL_API(EXPORT_
                    KERNEL_FXSTRINGINIT))(size);
  9251                        	.sym	size,4,16,6,16
  9252                        	.line	1360
  9253 00:1DA6: D4 08        	pei	<L490+size_0
  9254 00:1DA8: AF 42 15 00  	lda	>5442
  9255 00:1DAC: 85 01        	sta	<R0
  9256 00:1DAE: AF 44 15 00  	lda	>5442+2
  9257 00:1DB2: 85 03        	sta	<R0+2
  9258 00:1DB4: A0 EA 01     	ldy	#$1ea
  9259 00:1DB7: B7 01        	lda	[<R0],Y
  9260 00:1DB9: AA           	tax
  9261 00:1DBA: A0 E8 01     	ldy	#$1e8
  9262 00:1DBD: B7 01        	lda	[<R0],Y
  9263                        	xref	~~~lcal
  9264 00:1DBF: 22 xx xx xx  	jsl	~~~lcal
  9265 00:1DC3: 85 01        	sta	<R0
  9266 00:1DC5: 86 03        	stx	<R0+2
  9267 00:1DC7: A6 03        	ldx	<R0+2
  9268 00:1DC9: A5 01        	lda	<R0
  9269                        L493:
  9270 00:1DCB: A8           	tay
  9271 00:1DCC: A5 06        	lda	<L490+2
  9272 00:1DCE: 85 08        	sta	<L490+2+2
  9273 00:1DD0: A5 05        	lda	<L490+1
  9274 00:1DD2: 85 07        	sta	<L490+1+2
  9275 00:1DD4: 2B           	pld
  9276 00:1DD5: 3B           	tsc
  9277 00:1DD6: 18           	clc
  9278 00:1DD7: 69 06 00     	adc	#L490+2
  9279 00:1DDA: 1B           	tcs
  9280 00:1DDB: 98           	tya
  9281 00:1DDC: 6B           	rtl
  9282                        ;}
  9283                        	.line	1361
  9284                        	.endblock	1361
  9285             00000004   L490	equ	4
  9286             00000005   L491	equ	5
  9287                        	ends
  9288                        	efunc
  9289                        	.endfunc	1361,5,4
  9290                        	.line	1361
  9291                        ;
  9292                        ;/*
  9293                        ;*
  Thu Jul 29 2021 22:56                                                Page 166


  9294                        ;* Name:FXStringNew
  9295                        ;* Subsystem:KERNEL
  9296                        ;*
  9297                        ;*/
  9298                        ;PFXSTRING FXStringNew(LPCHAR initial,UINT size)
  9299                        ;{
  9300                        	.line	1369
  9301                        	.line	1370
  9302                        	code
  9303                        	xdef	~~FXStringNew
  9304                        	func
  9305                        	.function	1370
  9306                        ~~FXStringNew:
  9307                        	longa	on
  9308                        	longi	on
  9309 00:1DDD: 3B           	tsc
  9310 00:1DDE: 38           	sec
  9311 00:1DDF: E9 04 00     	sbc	#L494
  9312 00:1DE2: 1B           	tcs
  9313 00:1DE3: 0B           	phd
  9314 00:1DE4: 5B           	tcd
  9315             00000004   initial_0	set	4
  9316             00000008   size_0	set	8
  9317                        	.block	1370
  9318                        ;    return ((FXSTRINGNEW)CALL_KERNEL_API(EXPORT_K
                    ERNEL_FXSTRINGNEW))(initial,size);
  9319                        	.sym	initial,4,142,6,32
  9320                        	.sym	size,8,16,6,16
  9321                        	.line	1371
  9322 00:1DE5: D4 0C        	pei	<L494+size_0
  9323 00:1DE7: D4 0A        	pei	<L494+initial_0+2
  9324 00:1DE9: D4 08        	pei	<L494+initial_0
  9325 00:1DEB: AF 42 15 00  	lda	>5442
  9326 00:1DEF: 85 01        	sta	<R0
  9327 00:1DF1: AF 44 15 00  	lda	>5442+2
  9328 00:1DF5: 85 03        	sta	<R0+2
  9329 00:1DF7: A0 EE 01     	ldy	#$1ee
  9330 00:1DFA: B7 01        	lda	[<R0],Y
  9331 00:1DFC: AA           	tax
  9332 00:1DFD: A0 EC 01     	ldy	#$1ec
  9333 00:1E00: B7 01        	lda	[<R0],Y
  9334                        	xref	~~~lcal
  9335 00:1E02: 22 xx xx xx  	jsl	~~~lcal
  9336 00:1E06: 85 01        	sta	<R0
  9337 00:1E08: 86 03        	stx	<R0+2
  9338 00:1E0A: A6 03        	ldx	<R0+2
  9339 00:1E0C: A5 01        	lda	<R0
  9340                        L497:
  9341 00:1E0E: A8           	tay
  9342 00:1E0F: A5 06        	lda	<L494+2
  9343 00:1E11: 85 0C        	sta	<L494+2+6
  9344 00:1E13: A5 05        	lda	<L494+1
  9345 00:1E15: 85 0B        	sta	<L494+1+6
  9346 00:1E17: 2B           	pld
  9347 00:1E18: 3B           	tsc
  9348 00:1E19: 18           	clc
  9349 00:1E1A: 69 0A 00     	adc	#L494+6
  9350 00:1E1D: 1B           	tcs
  Thu Jul 29 2021 22:56                                                Page 167


  9351 00:1E1E: 98           	tya
  9352 00:1E1F: 6B           	rtl
  9353                        ;}
  9354                        	.line	1372
  9355                        	.endblock	1372
  9356             00000004   L494	equ	4
  9357             00000005   L495	equ	5
  9358                        	ends
  9359                        	efunc
  9360                        	.endfunc	1372,5,4
  9361                        	.line	1372
  9362                        ;
  9363                        ;/*
  9364                        ;*
  9365                        ;* Name:FXStringReinit
  9366                        ;* Subsystem:KERNEL
  9367                        ;*
  9368                        ;*/
  9369                        ;PFXSTRING FXStringReinit(PFXSTRING fxstring)
  9370                        ;{
  9371                        	.line	1380
  9372                        	.line	1381
  9373                        	code
  9374                        	xdef	~~FXStringReinit
  9375                        	func
  9376                        	.function	1381
  9377                        ~~FXStringReinit:
  9378                        	longa	on
  9379                        	longi	on
  9380 00:1E20: 3B           	tsc
  9381 00:1E21: 38           	sec
  9382 00:1E22: E9 04 00     	sbc	#L498
  9383 00:1E25: 1B           	tcs
  9384 00:1E26: 0B           	phd
  9385 00:1E27: 5B           	tcd
  9386             00000004   fxstring_0	set	4
  9387                        	.block	1381
  9388                        ;    return ((FXSTRINGREINIT)CALL_KERNEL_API(EXPOR
                    T_KERNEL_FXSTRINGREINIT))(fxstring);
  9389                        	.sym	fxstring,4,138,6,32,61
  9390                        	.line	1382
  9391 00:1E28: D4 0A        	pei	<L498+fxstring_0+2
  9392 00:1E2A: D4 08        	pei	<L498+fxstring_0
  9393 00:1E2C: AF 42 15 00  	lda	>5442
  9394 00:1E30: 85 01        	sta	<R0
  9395 00:1E32: AF 44 15 00  	lda	>5442+2
  9396 00:1E36: 85 03        	sta	<R0+2
  9397 00:1E38: A0 F2 01     	ldy	#$1f2
  9398 00:1E3B: B7 01        	lda	[<R0],Y
  9399 00:1E3D: AA           	tax
  9400 00:1E3E: A0 F0 01     	ldy	#$1f0
  9401 00:1E41: B7 01        	lda	[<R0],Y
  9402                        	xref	~~~lcal
  9403 00:1E43: 22 xx xx xx  	jsl	~~~lcal
  9404 00:1E47: 85 01        	sta	<R0
  9405 00:1E49: 86 03        	stx	<R0+2
  9406 00:1E4B: A6 03        	ldx	<R0+2
  9407 00:1E4D: A5 01        	lda	<R0
  Thu Jul 29 2021 22:56                                                Page 168


  9408                        L501:
  9409 00:1E4F: A8           	tay
  9410 00:1E50: A5 06        	lda	<L498+2
  9411 00:1E52: 85 0A        	sta	<L498+2+4
  9412 00:1E54: A5 05        	lda	<L498+1
  9413 00:1E56: 85 09        	sta	<L498+1+4
  9414 00:1E58: 2B           	pld
  9415 00:1E59: 3B           	tsc
  9416 00:1E5A: 18           	clc
  9417 00:1E5B: 69 08 00     	adc	#L498+4
  9418 00:1E5E: 1B           	tcs
  9419 00:1E5F: 98           	tya
  9420 00:1E60: 6B           	rtl
  9421                        ;}
  9422                        	.line	1383
  9423                        	.endblock	1383
  9424             00000004   L498	equ	4
  9425             00000005   L499	equ	5
  9426                        	ends
  9427                        	efunc
  9428                        	.endfunc	1383,5,4
  9429                        	.line	1383
  9430                        ;
  9431                        ;/*
  9432                        ;*
  9433                        ;* Name:FXStringFree
  9434                        ;* Subsystem:KERNEL
  9435                        ;*
  9436                        ;*/
  9437                        ;VOID FXStringFree(PFXSTRING string)
  9438                        ;{
  9439                        	.line	1391
  9440                        	.line	1392
  9441                        	code
  9442                        	xdef	~~FXStringFree
  9443                        	func
  9444                        	.function	1392
  9445                        ~~FXStringFree:
  9446                        	longa	on
  9447                        	longi	on
  9448 00:1E61: 3B           	tsc
  9449 00:1E62: 38           	sec
  9450 00:1E63: E9 04 00     	sbc	#L502
  9451 00:1E66: 1B           	tcs
  9452 00:1E67: 0B           	phd
  9453 00:1E68: 5B           	tcd
  9454             00000004   string_0	set	4
  9455                        	.block	1392
  9456                        ;    ((FXSTRINGFREE)CALL_KERNEL_API(EXPORT_KERNEL_
                    FXSTRINGFREE))(string);
  9457                        	.sym	string,4,138,6,32,61
  9458                        	.line	1393
  9459 00:1E69: D4 0A        	pei	<L502+string_0+2
  9460 00:1E6B: D4 08        	pei	<L502+string_0
  9461 00:1E6D: AF 42 15 00  	lda	>5442
  9462 00:1E71: 85 01        	sta	<R0
  9463 00:1E73: AF 44 15 00  	lda	>5442+2
  9464 00:1E77: 85 03        	sta	<R0+2
  Thu Jul 29 2021 22:56                                                Page 169


  9465 00:1E79: A0 F6 01     	ldy	#$1f6
  9466 00:1E7C: B7 01        	lda	[<R0],Y
  9467 00:1E7E: AA           	tax
  9468 00:1E7F: A0 F4 01     	ldy	#$1f4
  9469 00:1E82: B7 01        	lda	[<R0],Y
  9470                        	xref	~~~lcal
  9471 00:1E84: 22 xx xx xx  	jsl	~~~lcal
  9472                        ;}
  9473                        	.line	1394
  9474                        L505:
  9475 00:1E88: A5 06        	lda	<L502+2
  9476 00:1E8A: 85 0A        	sta	<L502+2+4
  9477 00:1E8C: A5 05        	lda	<L502+1
  9478 00:1E8E: 85 09        	sta	<L502+1+4
  9479 00:1E90: 2B           	pld
  9480 00:1E91: 3B           	tsc
  9481 00:1E92: 18           	clc
  9482 00:1E93: 69 08 00     	adc	#L502+4
  9483 00:1E96: 1B           	tcs
  9484 00:1E97: 6B           	rtl
  9485                        	.endblock	1394
  9486             00000004   L502	equ	4
  9487             00000005   L503	equ	5
  9488                        	ends
  9489                        	efunc
  9490                        	.endfunc	1394,5,4
  9491                        	.line	1394
  9492                        ;
  9493                        ;/*
  9494                        ;*
  9495                        ;* Name:FXStringLength
  9496                        ;* Subsystem:KERNEL
  9497                        ;*
  9498                        ;*/
  9499                        ;UINT FXStringLength(PFXSTRING string)
  9500                        ;{
  9501                        	.line	1402
  9502                        	.line	1403
  9503                        	code
  9504                        	xdef	~~FXStringLength
  9505                        	func
  9506                        	.function	1403
  9507                        ~~FXStringLength:
  9508                        	longa	on
  9509                        	longi	on
  9510 00:1E98: 3B           	tsc
  9511 00:1E99: 38           	sec
  9512 00:1E9A: E9 04 00     	sbc	#L506
  9513 00:1E9D: 1B           	tcs
  9514 00:1E9E: 0B           	phd
  9515 00:1E9F: 5B           	tcd
  9516             00000004   string_0	set	4
  9517                        	.block	1403
  9518                        ;    return ((FXSTRINGLENGTH)CALL_KERNEL_API(EXPOR
                    T_KERNEL_FXSTRINGLENGTH))(string);
  9519                        	.sym	string,4,138,6,32,61
  9520                        	.line	1404
  9521 00:1EA0: D4 0A        	pei	<L506+string_0+2
  Thu Jul 29 2021 22:56                                                Page 170


  9522 00:1EA2: D4 08        	pei	<L506+string_0
  9523 00:1EA4: AF 42 15 00  	lda	>5442
  9524 00:1EA8: 85 01        	sta	<R0
  9525 00:1EAA: AF 44 15 00  	lda	>5442+2
  9526 00:1EAE: 85 03        	sta	<R0+2
  9527 00:1EB0: A0 FA 01     	ldy	#$1fa
  9528 00:1EB3: B7 01        	lda	[<R0],Y
  9529 00:1EB5: AA           	tax
  9530 00:1EB6: A0 F8 01     	ldy	#$1f8
  9531 00:1EB9: B7 01        	lda	[<R0],Y
  9532                        	xref	~~~lcal
  9533 00:1EBB: 22 xx xx xx  	jsl	~~~lcal
  9534                        L509:
  9535 00:1EBF: A8           	tay
  9536 00:1EC0: A5 06        	lda	<L506+2
  9537 00:1EC2: 85 0A        	sta	<L506+2+4
  9538 00:1EC4: A5 05        	lda	<L506+1
  9539 00:1EC6: 85 09        	sta	<L506+1+4
  9540 00:1EC8: 2B           	pld
  9541 00:1EC9: 3B           	tsc
  9542 00:1ECA: 18           	clc
  9543 00:1ECB: 69 08 00     	adc	#L506+4
  9544 00:1ECE: 1B           	tcs
  9545 00:1ECF: 98           	tya
  9546 00:1ED0: 6B           	rtl
  9547                        ;}
  9548                        	.line	1405
  9549                        	.endblock	1405
  9550             00000004   L506	equ	4
  9551             00000005   L507	equ	5
  9552                        	ends
  9553                        	efunc
  9554                        	.endfunc	1405,5,4
  9555                        	.line	1405
  9556                        ;
  9557                        ;/*
  9558                        ;*
  9559                        ;* Name:FXStringSize
  9560                        ;* Subsystem:KERNEL
  9561                        ;*
  9562                        ;*/
  9563                        ;UINT FXStringSize(PFXSTRING string)
  9564                        ;{
  9565                        	.line	1413
  9566                        	.line	1414
  9567                        	code
  9568                        	xdef	~~FXStringSize
  9569                        	func
  9570                        	.function	1414
  9571                        ~~FXStringSize:
  9572                        	longa	on
  9573                        	longi	on
  9574 00:1ED1: 3B           	tsc
  9575 00:1ED2: 38           	sec
  9576 00:1ED3: E9 04 00     	sbc	#L510
  9577 00:1ED6: 1B           	tcs
  9578 00:1ED7: 0B           	phd
  9579 00:1ED8: 5B           	tcd
  Thu Jul 29 2021 22:56                                                Page 171


  9580             00000004   string_0	set	4
  9581                        	.block	1414
  9582                        ;    return ((FXSTRINGSIZE)CALL_KERNEL_API(EXPORT_
                    KERNEL_FXSTRINGSIZE))(string);
  9583                        	.sym	string,4,138,6,32,61
  9584                        	.line	1415
  9585 00:1ED9: D4 0A        	pei	<L510+string_0+2
  9586 00:1EDB: D4 08        	pei	<L510+string_0
  9587 00:1EDD: AF 42 15 00  	lda	>5442
  9588 00:1EE1: 85 01        	sta	<R0
  9589 00:1EE3: AF 44 15 00  	lda	>5442+2
  9590 00:1EE7: 85 03        	sta	<R0+2
  9591 00:1EE9: A0 FE 01     	ldy	#$1fe
  9592 00:1EEC: B7 01        	lda	[<R0],Y
  9593 00:1EEE: AA           	tax
  9594 00:1EEF: A0 FC 01     	ldy	#$1fc
  9595 00:1EF2: B7 01        	lda	[<R0],Y
  9596                        	xref	~~~lcal
  9597 00:1EF4: 22 xx xx xx  	jsl	~~~lcal
  9598                        L513:
  9599 00:1EF8: A8           	tay
  9600 00:1EF9: A5 06        	lda	<L510+2
  9601 00:1EFB: 85 0A        	sta	<L510+2+4
  9602 00:1EFD: A5 05        	lda	<L510+1
  9603 00:1EFF: 85 09        	sta	<L510+1+4
  9604 00:1F01: 2B           	pld
  9605 00:1F02: 3B           	tsc
  9606 00:1F03: 18           	clc
  9607 00:1F04: 69 08 00     	adc	#L510+4
  9608 00:1F07: 1B           	tcs
  9609 00:1F08: 98           	tya
  9610 00:1F09: 6B           	rtl
  9611                        ;}
  9612                        	.line	1416
  9613                        	.endblock	1416
  9614             00000004   L510	equ	4
  9615             00000005   L511	equ	5
  9616                        	ends
  9617                        	efunc
  9618                        	.endfunc	1416,5,4
  9619                        	.line	1416
  9620                        ;
  9621                        ;/*
  9622                        ;*
  9623                        ;* Name:FXStringIndex
  9624                        ;* Subsystem:KERNEL
  9625                        ;*
  9626                        ;*/
  9627                        ;UINT FXStringIndex(PFXSTRING string)
  9628                        ;{
  9629                        	.line	1424
  9630                        	.line	1425
  9631                        	code
  9632                        	xdef	~~FXStringIndex
  9633                        	func
  9634                        	.function	1425
  9635                        ~~FXStringIndex:
  9636                        	longa	on
  Thu Jul 29 2021 22:56                                                Page 172


  9637                        	longi	on
  9638 00:1F0A: 3B           	tsc
  9639 00:1F0B: 38           	sec
  9640 00:1F0C: E9 04 00     	sbc	#L514
  9641 00:1F0F: 1B           	tcs
  9642 00:1F10: 0B           	phd
  9643 00:1F11: 5B           	tcd
  9644             00000004   string_0	set	4
  9645                        	.block	1425
  9646                        ;    return ((FXSTRINGINDEX)CALL_KERNEL_API(EXPORT
                    _KERNEL_FXSTRINGINDEX))(string);
  9647                        	.sym	string,4,138,6,32,61
  9648                        	.line	1426
  9649 00:1F12: D4 0A        	pei	<L514+string_0+2
  9650 00:1F14: D4 08        	pei	<L514+string_0
  9651 00:1F16: AF 42 15 00  	lda	>5442
  9652 00:1F1A: 85 01        	sta	<R0
  9653 00:1F1C: AF 44 15 00  	lda	>5442+2
  9654 00:1F20: 85 03        	sta	<R0+2
  9655 00:1F22: A0 02 02     	ldy	#$202
  9656 00:1F25: B7 01        	lda	[<R0],Y
  9657 00:1F27: AA           	tax
  9658 00:1F28: A0 00 02     	ldy	#$200
  9659 00:1F2B: B7 01        	lda	[<R0],Y
  9660                        	xref	~~~lcal
  9661 00:1F2D: 22 xx xx xx  	jsl	~~~lcal
  9662                        L517:
  9663 00:1F31: A8           	tay
  9664 00:1F32: A5 06        	lda	<L514+2
  9665 00:1F34: 85 0A        	sta	<L514+2+4
  9666 00:1F36: A5 05        	lda	<L514+1
  9667 00:1F38: 85 09        	sta	<L514+1+4
  9668 00:1F3A: 2B           	pld
  9669 00:1F3B: 3B           	tsc
  9670 00:1F3C: 18           	clc
  9671 00:1F3D: 69 08 00     	adc	#L514+4
  9672 00:1F40: 1B           	tcs
  9673 00:1F41: 98           	tya
  9674 00:1F42: 6B           	rtl
  9675                        ;}
  9676                        	.line	1427
  9677                        	.endblock	1427
  9678             00000004   L514	equ	4
  9679             00000005   L515	equ	5
  9680                        	ends
  9681                        	efunc
  9682                        	.endfunc	1427,5,4
  9683                        	.line	1427
  9684                        ;
  9685                        ;/*
  9686                        ;*
  9687                        ;* Name:FXStringAddChar
  9688                        ;* Subsystem:KERNEL
  9689                        ;*
  9690                        ;*/
  9691                        ;LPCHAR FXStringAddChar(PFXSTRING string,CHAR c)
  9692                        ;{
  9693                        	.line	1435
  Thu Jul 29 2021 22:56                                                Page 173


  9694                        	.line	1436
  9695                        	code
  9696                        	xdef	~~FXStringAddChar
  9697                        	func
  9698                        	.function	1436
  9699                        ~~FXStringAddChar:
  9700                        	longa	on
  9701                        	longi	on
  9702 00:1F43: 3B           	tsc
  9703 00:1F44: 38           	sec
  9704 00:1F45: E9 04 00     	sbc	#L518
  9705 00:1F48: 1B           	tcs
  9706 00:1F49: 0B           	phd
  9707 00:1F4A: 5B           	tcd
  9708             00000004   string_0	set	4
  9709             00000008   c_0	set	8
  9710                        	.block	1436
  9711                        ;    return ((FXSTRINGADDCHAR)CALL_KERNEL_API(EXPO
                    RT_KERNEL_FXSTRINGADDCHAR))(string,c);
  9712                        	.sym	string,4,138,6,32,61
  9713                        	.sym	c,8,14,6,8
  9714                        	.line	1437
  9715 00:1F4B: D4 0C        	pei	<L518+c_0
  9716 00:1F4D: D4 0A        	pei	<L518+string_0+2
  9717 00:1F4F: D4 08        	pei	<L518+string_0
  9718 00:1F51: AF 42 15 00  	lda	>5442
  9719 00:1F55: 85 01        	sta	<R0
  9720 00:1F57: AF 44 15 00  	lda	>5442+2
  9721 00:1F5B: 85 03        	sta	<R0+2
  9722 00:1F5D: A0 06 02     	ldy	#$206
  9723 00:1F60: B7 01        	lda	[<R0],Y
  9724 00:1F62: AA           	tax
  9725 00:1F63: A0 04 02     	ldy	#$204
  9726 00:1F66: B7 01        	lda	[<R0],Y
  9727                        	xref	~~~lcal
  9728 00:1F68: 22 xx xx xx  	jsl	~~~lcal
  9729 00:1F6C: 85 01        	sta	<R0
  9730 00:1F6E: 86 03        	stx	<R0+2
  9731 00:1F70: A6 03        	ldx	<R0+2
  9732 00:1F72: A5 01        	lda	<R0
  9733                        L521:
  9734 00:1F74: A8           	tay
  9735 00:1F75: A5 06        	lda	<L518+2
  9736 00:1F77: 85 0C        	sta	<L518+2+6
  9737 00:1F79: A5 05        	lda	<L518+1
  9738 00:1F7B: 85 0B        	sta	<L518+1+6
  9739 00:1F7D: 2B           	pld
  9740 00:1F7E: 3B           	tsc
  9741 00:1F7F: 18           	clc
  9742 00:1F80: 69 0A 00     	adc	#L518+6
  9743 00:1F83: 1B           	tcs
  9744 00:1F84: 98           	tya
  9745 00:1F85: 6B           	rtl
  9746                        ;}
  9747                        	.line	1438
  9748                        	.endblock	1438
  9749             00000004   L518	equ	4
  9750             00000005   L519	equ	5
  Thu Jul 29 2021 22:56                                                Page 174


  9751                        	ends
  9752                        	efunc
  9753                        	.endfunc	1438,5,4
  9754                        	.line	1438
  9755                        ;
  9756                        ;/*
  9757                        ;*
  9758                        ;* Name:FXStringRemoveChar
  9759                        ;* Subsystem:KERNEL
  9760                        ;*
  9761                        ;*/
  9762                        ;CHAR FXStringRemoveChar(PFXSTRING string)
  9763                        ;{
  9764                        	.line	1446
  9765                        	.line	1447
  9766                        	code
  9767                        	xdef	~~FXStringRemoveChar
  9768                        	func
  9769                        	.function	1447
  9770                        ~~FXStringRemoveChar:
  9771                        	longa	on
  9772                        	longi	on
  9773 00:1F86: 3B           	tsc
  9774 00:1F87: 38           	sec
  9775 00:1F88: E9 04 00     	sbc	#L522
  9776 00:1F8B: 1B           	tcs
  9777 00:1F8C: 0B           	phd
  9778 00:1F8D: 5B           	tcd
  9779             00000004   string_0	set	4
  9780                        	.block	1447
  9781                        ;    return ((FXSTRINGREMOVECHAR)CALL_KERNEL_API(E
                    XPORT_KERNEL_FXSTRINGREMOVECHAR))(string);
  9782                        	.sym	string,4,138,6,32,61
  9783                        	.line	1448
  9784 00:1F8E: D4 0A        	pei	<L522+string_0+2
  9785 00:1F90: D4 08        	pei	<L522+string_0
  9786 00:1F92: AF 42 15 00  	lda	>5442
  9787 00:1F96: 85 01        	sta	<R0
  9788 00:1F98: AF 44 15 00  	lda	>5442+2
  9789 00:1F9C: 85 03        	sta	<R0+2
  9790 00:1F9E: A0 0A 02     	ldy	#$20a
  9791 00:1FA1: B7 01        	lda	[<R0],Y
  9792 00:1FA3: AA           	tax
  9793 00:1FA4: A0 08 02     	ldy	#$208
  9794 00:1FA7: B7 01        	lda	[<R0],Y
  9795                        	xref	~~~lcal
  9796 00:1FA9: 22 xx xx xx  	jsl	~~~lcal
  9797 00:1FAD: E2 20        	sep	#$20
  9798                        	longa	off
  9799 00:1FAF: 85 01        	sta	<R0
  9800 00:1FB1: C2 20        	rep	#$20
  9801                        	longa	on
  9802 00:1FB3: A5 01        	lda	<R0
  9803 00:1FB5: 29 FF 00     	and	#$ff
  9804                        L525:
  9805 00:1FB8: A8           	tay
  9806 00:1FB9: A5 06        	lda	<L522+2
  9807 00:1FBB: 85 0A        	sta	<L522+2+4
  Thu Jul 29 2021 22:56                                                Page 175


  9808 00:1FBD: A5 05        	lda	<L522+1
  9809 00:1FBF: 85 09        	sta	<L522+1+4
  9810 00:1FC1: 2B           	pld
  9811 00:1FC2: 3B           	tsc
  9812 00:1FC3: 18           	clc
  9813 00:1FC4: 69 08 00     	adc	#L522+4
  9814 00:1FC7: 1B           	tcs
  9815 00:1FC8: 98           	tya
  9816 00:1FC9: 6B           	rtl
  9817                        ;}
  9818                        	.line	1449
  9819                        	.endblock	1449
  9820             00000004   L522	equ	4
  9821             00000005   L523	equ	5
  9822                        	ends
  9823                        	efunc
  9824                        	.endfunc	1449,5,4
  9825                        	.line	1449
  9826                        ;
  9827                        ;/*
  9828                        ;*
  9829                        ;* Name:FXStringAddString
  9830                        ;* Subsystem:KERNEL
  9831                        ;*
  9832                        ;*/
  9833                        ;LPCHAR FXStringAddString(PFXSTRING string,LPCHAR 
                    text)
  9834                        ;{
  9835                        	.line	1457
  9836                        	.line	1458
  9837                        	code
  9838                        	xdef	~~FXStringAddString
  9839                        	func
  9840                        	.function	1458
  9841                        ~~FXStringAddString:
  9842                        	longa	on
  9843                        	longi	on
  9844 00:1FCA: 3B           	tsc
  9845 00:1FCB: 38           	sec
  9846 00:1FCC: E9 04 00     	sbc	#L526
  9847 00:1FCF: 1B           	tcs
  9848 00:1FD0: 0B           	phd
  9849 00:1FD1: 5B           	tcd
  9850             00000004   string_0	set	4
  9851             00000008   text_0	set	8
  9852                        	.block	1458
  9853                        ;    return ((FXSTRINGADDSTRING)CALL_KERNEL_API(EX
                    PORT_KERNEL_FXSTRINGADDSTRING))(string,text);
  9854                        	.sym	string,4,138,6,32,61
  9855                        	.sym	text,8,142,6,32
  9856                        	.line	1459
  9857 00:1FD2: D4 0E        	pei	<L526+text_0+2
  9858 00:1FD4: D4 0C        	pei	<L526+text_0
  9859 00:1FD6: D4 0A        	pei	<L526+string_0+2
  9860 00:1FD8: D4 08        	pei	<L526+string_0
  9861 00:1FDA: AF 42 15 00  	lda	>5442
  9862 00:1FDE: 85 01        	sta	<R0
  9863 00:1FE0: AF 44 15 00  	lda	>5442+2
  Thu Jul 29 2021 22:56                                                Page 176


  9864 00:1FE4: 85 03        	sta	<R0+2
  9865 00:1FE6: A0 0E 02     	ldy	#$20e
  9866 00:1FE9: B7 01        	lda	[<R0],Y
  9867 00:1FEB: AA           	tax
  9868 00:1FEC: A0 0C 02     	ldy	#$20c
  9869 00:1FEF: B7 01        	lda	[<R0],Y
  9870                        	xref	~~~lcal
  9871 00:1FF1: 22 xx xx xx  	jsl	~~~lcal
  9872 00:1FF5: 85 01        	sta	<R0
  9873 00:1FF7: 86 03        	stx	<R0+2
  9874 00:1FF9: A6 03        	ldx	<R0+2
  9875 00:1FFB: A5 01        	lda	<R0
  9876                        L529:
  9877 00:1FFD: A8           	tay
  9878 00:1FFE: A5 06        	lda	<L526+2
  9879 00:2000: 85 0E        	sta	<L526+2+8
  9880 00:2002: A5 05        	lda	<L526+1
  9881 00:2004: 85 0D        	sta	<L526+1+8
  9882 00:2006: 2B           	pld
  9883 00:2007: 3B           	tsc
  9884 00:2008: 18           	clc
  9885 00:2009: 69 0C 00     	adc	#L526+8
  9886 00:200C: 1B           	tcs
  9887 00:200D: 98           	tya
  9888 00:200E: 6B           	rtl
  9889                        ;}
  9890                        	.line	1460
  9891                        	.endblock	1460
  9892             00000004   L526	equ	4
  9893             00000005   L527	equ	5
  9894                        	ends
  9895                        	efunc
  9896                        	.endfunc	1460,5,4
  9897                        	.line	1460
  9898                        ;
  9899                        ;/*
  9900                        ;*
  9901                        ;* Name:FXStringAddFXString
  9902                        ;* Subsystem:KERNEL
  9903                        ;*
  9904                        ;*/
  9905                        ;UINT FXStringAddFXString(PFXSTRING string,PFXSTRI
                    NG text)
  9906                        ;{
  9907                        	.line	1468
  9908                        	.line	1469
  9909                        	code
  9910                        	xdef	~~FXStringAddFXString
  9911                        	func
  9912                        	.function	1469
  9913                        ~~FXStringAddFXString:
  9914                        	longa	on
  9915                        	longi	on
  9916 00:200F: 3B           	tsc
  9917 00:2010: 38           	sec
  9918 00:2011: E9 04 00     	sbc	#L530
  9919 00:2014: 1B           	tcs
  9920 00:2015: 0B           	phd
  Thu Jul 29 2021 22:56                                                Page 177


  9921 00:2016: 5B           	tcd
  9922             00000004   string_0	set	4
  9923             00000008   text_0	set	8
  9924                        	.block	1469
  9925                        ;    return ((FXSTRINGADDFXSTRING)CALL_KERNEL_API(
                    EXPORT_KERNEL_FXSTRINGADDFXSTRING))(string,text);
  9926                        	.sym	string,4,138,6,32,61
  9927                        	.sym	text,8,138,6,32,61
  9928                        	.line	1470
  9929 00:2017: D4 0E        	pei	<L530+text_0+2
  9930 00:2019: D4 0C        	pei	<L530+text_0
  9931 00:201B: D4 0A        	pei	<L530+string_0+2
  9932 00:201D: D4 08        	pei	<L530+string_0
  9933 00:201F: AF 42 15 00  	lda	>5442
  9934 00:2023: 85 01        	sta	<R0
  9935 00:2025: AF 44 15 00  	lda	>5442+2
  9936 00:2029: 85 03        	sta	<R0+2
  9937 00:202B: A0 12 02     	ldy	#$212
  9938 00:202E: B7 01        	lda	[<R0],Y
  9939 00:2030: AA           	tax
  9940 00:2031: A0 10 02     	ldy	#$210
  9941 00:2034: B7 01        	lda	[<R0],Y
  9942                        	xref	~~~lcal
  9943 00:2036: 22 xx xx xx  	jsl	~~~lcal
  9944                        L533:
  9945 00:203A: A8           	tay
  9946 00:203B: A5 06        	lda	<L530+2
  9947 00:203D: 85 0E        	sta	<L530+2+8
  9948 00:203F: A5 05        	lda	<L530+1
  9949 00:2041: 85 0D        	sta	<L530+1+8
  9950 00:2043: 2B           	pld
  9951 00:2044: 3B           	tsc
  9952 00:2045: 18           	clc
  9953 00:2046: 69 0C 00     	adc	#L530+8
  9954 00:2049: 1B           	tcs
  9955 00:204A: 98           	tya
  9956 00:204B: 6B           	rtl
  9957                        ;}
  9958                        	.line	1471
  9959                        	.endblock	1471
  9960             00000004   L530	equ	4
  9961             00000005   L531	equ	5
  9962                        	ends
  9963                        	efunc
  9964                        	.endfunc	1471,5,4
  9965                        	.line	1471
  9966                        ;
  9967                        ;/*
  9968                        ;*
  9969                        ;* Name:FXStringAsString
  9970                        ;* Subsystem:KERNEL
  9971                        ;*
  9972                        ;*/
  9973                        ;LPCHAR FXStringAsString(PFXSTRING string)
  9974                        ;{
  9975                        	.line	1479
  9976                        	.line	1480
  9977                        	code
  Thu Jul 29 2021 22:56                                                Page 178


  9978                        	xdef	~~FXStringAsString
  9979                        	func
  9980                        	.function	1480
  9981                        ~~FXStringAsString:
  9982                        	longa	on
  9983                        	longi	on
  9984 00:204C: 3B           	tsc
  9985 00:204D: 38           	sec
  9986 00:204E: E9 04 00     	sbc	#L534
  9987 00:2051: 1B           	tcs
  9988 00:2052: 0B           	phd
  9989 00:2053: 5B           	tcd
  9990             00000004   string_0	set	4
  9991                        	.block	1480
  9992                        ;    return ((FXSTRINGASSTRING)CALL_KERNEL_API(EXP
                    ORT_KERNEL_FXSTRINGASSTRING))(string);
  9993                        	.sym	string,4,138,6,32,61
  9994                        	.line	1481
  9995 00:2054: D4 0A        	pei	<L534+string_0+2
  9996 00:2056: D4 08        	pei	<L534+string_0
  9997 00:2058: AF 42 15 00  	lda	>5442
  9998 00:205C: 85 01        	sta	<R0
  9999 00:205E: AF 44 15 00  	lda	>5442+2
 10000 00:2062: 85 03        	sta	<R0+2
 10001 00:2064: A0 16 02     	ldy	#$216
 10002 00:2067: B7 01        	lda	[<R0],Y
 10003 00:2069: AA           	tax
 10004 00:206A: A0 14 02     	ldy	#$214
 10005 00:206D: B7 01        	lda	[<R0],Y
 10006                        	xref	~~~lcal
 10007 00:206F: 22 xx xx xx  	jsl	~~~lcal
 10008 00:2073: 85 01        	sta	<R0
 10009 00:2075: 86 03        	stx	<R0+2
 10010 00:2077: A6 03        	ldx	<R0+2
 10011 00:2079: A5 01        	lda	<R0
 10012                        L537:
 10013 00:207B: A8           	tay
 10014 00:207C: A5 06        	lda	<L534+2
 10015 00:207E: 85 0A        	sta	<L534+2+4
 10016 00:2080: A5 05        	lda	<L534+1
 10017 00:2082: 85 09        	sta	<L534+1+4
 10018 00:2084: 2B           	pld
 10019 00:2085: 3B           	tsc
 10020 00:2086: 18           	clc
 10021 00:2087: 69 08 00     	adc	#L534+4
 10022 00:208A: 1B           	tcs
 10023 00:208B: 98           	tya
 10024 00:208C: 6B           	rtl
 10025                        ;}
 10026                        	.line	1482
 10027                        	.endblock	1482
 10028             00000004   L534	equ	4
 10029             00000005   L535	equ	5
 10030                        	ends
 10031                        	efunc
 10032                        	.endfunc	1482,5,4
 10033                        	.line	1482
 10034                        ;
  Thu Jul 29 2021 22:56                                                Page 179


 10035                        ;/*
 10036                        ;*
 10037                        ;* Name:FXStringCharAt
 10038                        ;* Subsystem:KERNEL
 10039                        ;*
 10040                        ;*/
 10041                        ;CHAR FXStringCharAt(PFXSTRING string,UINT index)
 10042                        ;{
 10043                        	.line	1490
 10044                        	.line	1491
 10045                        	code
 10046                        	xdef	~~FXStringCharAt
 10047                        	func
 10048                        	.function	1491
 10049                        ~~FXStringCharAt:
 10050                        	longa	on
 10051                        	longi	on
 10052 00:208D: 3B           	tsc
 10053 00:208E: 38           	sec
 10054 00:208F: E9 04 00     	sbc	#L538
 10055 00:2092: 1B           	tcs
 10056 00:2093: 0B           	phd
 10057 00:2094: 5B           	tcd
 10058             00000004   string_0	set	4
 10059             00000008   index_0	set	8
 10060                        	.block	1491
 10061                        ;    return ((FXSTRINGCHARAT)CALL_KERNEL_API(EXPOR
                    T_KERNEL_FXSTRINGCHARAT))(string,index);
 10062                        	.sym	string,4,138,6,32,61
 10063                        	.sym	index,8,16,6,16
 10064                        	.line	1492
 10065 00:2095: D4 0C        	pei	<L538+index_0
 10066 00:2097: D4 0A        	pei	<L538+string_0+2
 10067 00:2099: D4 08        	pei	<L538+string_0
 10068 00:209B: AF 42 15 00  	lda	>5442
 10069 00:209F: 85 01        	sta	<R0
 10070 00:20A1: AF 44 15 00  	lda	>5442+2
 10071 00:20A5: 85 03        	sta	<R0+2
 10072 00:20A7: A0 1A 02     	ldy	#$21a
 10073 00:20AA: B7 01        	lda	[<R0],Y
 10074 00:20AC: AA           	tax
 10075 00:20AD: A0 18 02     	ldy	#$218
 10076 00:20B0: B7 01        	lda	[<R0],Y
 10077                        	xref	~~~lcal
 10078 00:20B2: 22 xx xx xx  	jsl	~~~lcal
 10079 00:20B6: E2 20        	sep	#$20
 10080                        	longa	off
 10081 00:20B8: 85 01        	sta	<R0
 10082 00:20BA: C2 20        	rep	#$20
 10083                        	longa	on
 10084 00:20BC: A5 01        	lda	<R0
 10085 00:20BE: 29 FF 00     	and	#$ff
 10086                        L541:
 10087 00:20C1: A8           	tay
 10088 00:20C2: A5 06        	lda	<L538+2
 10089 00:20C4: 85 0C        	sta	<L538+2+6
 10090 00:20C6: A5 05        	lda	<L538+1
 10091 00:20C8: 85 0B        	sta	<L538+1+6
  Thu Jul 29 2021 22:56                                                Page 180


 10092 00:20CA: 2B           	pld
 10093 00:20CB: 3B           	tsc
 10094 00:20CC: 18           	clc
 10095 00:20CD: 69 0A 00     	adc	#L538+6
 10096 00:20D0: 1B           	tcs
 10097 00:20D1: 98           	tya
 10098 00:20D2: 6B           	rtl
 10099                        ;}
 10100                        	.line	1493
 10101                        	.endblock	1493
 10102             00000004   L538	equ	4
 10103             00000005   L539	equ	5
 10104                        	ends
 10105                        	efunc
 10106                        	.endfunc	1493,5,4
 10107                        	.line	1493
 10108                        ;
 10109                        ;/*
 10110                        ;*
 10111                        ;* Name:FXStringCopyToString
 10112                        ;* Subsystem:KERNEL
 10113                        ;*
 10114                        ;*/
 10115                        ;LPCHAR FXStringCopyToString(PFXSTRING src)
 10116                        ;{
 10117                        	.line	1501
 10118                        	.line	1502
 10119                        	code
 10120                        	xdef	~~FXStringCopyToString
 10121                        	func
 10122                        	.function	1502
 10123                        ~~FXStringCopyToString:
 10124                        	longa	on
 10125                        	longi	on
 10126 00:20D3: 3B           	tsc
 10127 00:20D4: 38           	sec
 10128 00:20D5: E9 04 00     	sbc	#L542
 10129 00:20D8: 1B           	tcs
 10130 00:20D9: 0B           	phd
 10131 00:20DA: 5B           	tcd
 10132             00000004   src_0	set	4
 10133                        	.block	1502
 10134                        ;    return ((FXSTRINGCOPYTOSTRING)CALL_KERNEL_API
                    (EXPORT_KERNEL_FXSTRINGCOPYTOSTRING))(src);
 10135                        	.sym	src,4,138,6,32,61
 10136                        	.line	1503
 10137 00:20DB: D4 0A        	pei	<L542+src_0+2
 10138 00:20DD: D4 08        	pei	<L542+src_0
 10139 00:20DF: AF 42 15 00  	lda	>5442
 10140 00:20E3: 85 01        	sta	<R0
 10141 00:20E5: AF 44 15 00  	lda	>5442+2
 10142 00:20E9: 85 03        	sta	<R0+2
 10143 00:20EB: A0 1E 02     	ldy	#$21e
 10144 00:20EE: B7 01        	lda	[<R0],Y
 10145 00:20F0: AA           	tax
 10146 00:20F1: A0 1C 02     	ldy	#$21c
 10147 00:20F4: B7 01        	lda	[<R0],Y
 10148                        	xref	~~~lcal
  Thu Jul 29 2021 22:56                                                Page 181


 10149 00:20F6: 22 xx xx xx  	jsl	~~~lcal
 10150 00:20FA: 85 01        	sta	<R0
 10151 00:20FC: 86 03        	stx	<R0+2
 10152 00:20FE: A6 03        	ldx	<R0+2
 10153 00:2100: A5 01        	lda	<R0
 10154                        L545:
 10155 00:2102: A8           	tay
 10156 00:2103: A5 06        	lda	<L542+2
 10157 00:2105: 85 0A        	sta	<L542+2+4
 10158 00:2107: A5 05        	lda	<L542+1
 10159 00:2109: 85 09        	sta	<L542+1+4
 10160 00:210B: 2B           	pld
 10161 00:210C: 3B           	tsc
 10162 00:210D: 18           	clc
 10163 00:210E: 69 08 00     	adc	#L542+4
 10164 00:2111: 1B           	tcs
 10165 00:2112: 98           	tya
 10166 00:2113: 6B           	rtl
 10167                        ;}
 10168                        	.line	1504
 10169                        	.endblock	1504
 10170             00000004   L542	equ	4
 10171             00000005   L543	equ	5
 10172                        	ends
 10173                        	efunc
 10174                        	.endfunc	1504,5,4
 10175                        	.line	1504
 10176                        ;
 10177                        ;/*
 10178                        ;*
 10179                        ;* Name:FXStringFromLong
 10180                        ;* Subsystem:KERNEL
 10181                        ;*
 10182                        ;*/
 10183                        ;PFXSTRING FXStringFromLong(ULONG nLong)
 10184                        ;{
 10185                        	.line	1512
 10186                        	.line	1513
 10187                        	code
 10188                        	xdef	~~FXStringFromLong
 10189                        	func
 10190                        	.function	1513
 10191                        ~~FXStringFromLong:
 10192                        	longa	on
 10193                        	longi	on
 10194 00:2114: 3B           	tsc
 10195 00:2115: 38           	sec
 10196 00:2116: E9 04 00     	sbc	#L546
 10197 00:2119: 1B           	tcs
 10198 00:211A: 0B           	phd
 10199 00:211B: 5B           	tcd
 10200             00000004   nLong_0	set	4
 10201                        	.block	1513
 10202                        ;    return ((FXSTRINGFROMLONG)CALL_KERNEL_API(EXP
                    ORT_KERNEL_FXSTRINGFROMLONG))(nLong);
 10203                        	.sym	nLong,4,18,6,32
 10204                        	.line	1514
 10205 00:211C: D4 0A        	pei	<L546+nLong_0+2
  Thu Jul 29 2021 22:56                                                Page 182


 10206 00:211E: D4 08        	pei	<L546+nLong_0
 10207 00:2120: AF 42 15 00  	lda	>5442
 10208 00:2124: 85 01        	sta	<R0
 10209 00:2126: AF 44 15 00  	lda	>5442+2
 10210 00:212A: 85 03        	sta	<R0+2
 10211 00:212C: A0 22 02     	ldy	#$222
 10212 00:212F: B7 01        	lda	[<R0],Y
 10213 00:2131: AA           	tax
 10214 00:2132: A0 20 02     	ldy	#$220
 10215 00:2135: B7 01        	lda	[<R0],Y
 10216                        	xref	~~~lcal
 10217 00:2137: 22 xx xx xx  	jsl	~~~lcal
 10218 00:213B: 85 01        	sta	<R0
 10219 00:213D: 86 03        	stx	<R0+2
 10220 00:213F: A6 03        	ldx	<R0+2
 10221 00:2141: A5 01        	lda	<R0
 10222                        L549:
 10223 00:2143: A8           	tay
 10224 00:2144: A5 06        	lda	<L546+2
 10225 00:2146: 85 0A        	sta	<L546+2+4
 10226 00:2148: A5 05        	lda	<L546+1
 10227 00:214A: 85 09        	sta	<L546+1+4
 10228 00:214C: 2B           	pld
 10229 00:214D: 3B           	tsc
 10230 00:214E: 18           	clc
 10231 00:214F: 69 08 00     	adc	#L546+4
 10232 00:2152: 1B           	tcs
 10233 00:2153: 98           	tya
 10234 00:2154: 6B           	rtl
 10235                        ;}
 10236                        	.line	1515
 10237                        	.endblock	1515
 10238             00000004   L546	equ	4
 10239             00000005   L547	equ	5
 10240                        	ends
 10241                        	efunc
 10242                        	.endfunc	1515,5,4
 10243                        	.line	1515
 10244                        ;
 10245                        ;/*
 10246                        ;*
 10247                        ;* Name:FXStringEquals
 10248                        ;* Subsystem:KERNEL
 10249                        ;*
 10250                        ;*/
 10251                        ;BOOL FXStringEquals(PFXSTRING string,LPCHAR match
                    )
 10252                        ;{
 10253                        	.line	1523
 10254                        	.line	1524
 10255                        	code
 10256                        	xdef	~~FXStringEquals
 10257                        	func
 10258                        	.function	1524
 10259                        ~~FXStringEquals:
 10260                        	longa	on
 10261                        	longi	on
 10262 00:2155: 3B           	tsc
  Thu Jul 29 2021 22:56                                                Page 183


 10263 00:2156: 38           	sec
 10264 00:2157: E9 04 00     	sbc	#L550
 10265 00:215A: 1B           	tcs
 10266 00:215B: 0B           	phd
 10267 00:215C: 5B           	tcd
 10268             00000004   string_0	set	4
 10269             00000008   match_0	set	8
 10270                        	.block	1524
 10271                        ;    return ((FXSTRINGEQUALS)CALL_KERNEL_API(EXPOR
                    T_KERNEL_FXSTRINGEQUALS))(string,match);
 10272                        	.sym	string,4,138,6,32,61
 10273                        	.sym	match,8,142,6,32
 10274                        	.line	1525
 10275 00:215D: D4 0E        	pei	<L550+match_0+2
 10276 00:215F: D4 0C        	pei	<L550+match_0
 10277 00:2161: D4 0A        	pei	<L550+string_0+2
 10278 00:2163: D4 08        	pei	<L550+string_0
 10279 00:2165: AF 42 15 00  	lda	>5442
 10280 00:2169: 85 01        	sta	<R0
 10281 00:216B: AF 44 15 00  	lda	>5442+2
 10282 00:216F: 85 03        	sta	<R0+2
 10283 00:2171: A0 26 02     	ldy	#$226
 10284 00:2174: B7 01        	lda	[<R0],Y
 10285 00:2176: AA           	tax
 10286 00:2177: A0 24 02     	ldy	#$224
 10287 00:217A: B7 01        	lda	[<R0],Y
 10288                        	xref	~~~lcal
 10289 00:217C: 22 xx xx xx  	jsl	~~~lcal
 10290 00:2180: E2 20        	sep	#$20
 10291                        	longa	off
 10292 00:2182: 85 01        	sta	<R0
 10293 00:2184: C2 20        	rep	#$20
 10294                        	longa	on
 10295 00:2186: A5 01        	lda	<R0
 10296 00:2188: 29 FF 00     	and	#$ff
 10297                        L553:
 10298 00:218B: A8           	tay
 10299 00:218C: A5 06        	lda	<L550+2
 10300 00:218E: 85 0E        	sta	<L550+2+8
 10301 00:2190: A5 05        	lda	<L550+1
 10302 00:2192: 85 0D        	sta	<L550+1+8
 10303 00:2194: 2B           	pld
 10304 00:2195: 3B           	tsc
 10305 00:2196: 18           	clc
 10306 00:2197: 69 0C 00     	adc	#L550+8
 10307 00:219A: 1B           	tcs
 10308 00:219B: 98           	tya
 10309 00:219C: 6B           	rtl
 10310                        ;}
 10311                        	.line	1526
 10312                        	.endblock	1526
 10313             00000004   L550	equ	4
 10314             00000005   L551	equ	5
 10315                        	ends
 10316                        	efunc
 10317                        	.endfunc	1526,5,4
 10318                        	.line	1526
 10319                        ;
  Thu Jul 29 2021 22:56                                                Page 184


 10320                        ;/*
 10321                        ;*
 10322                        ;* Name:FXStringAppendInteger
 10323                        ;* Subsystem:KERNEL
 10324                        ;*
 10325                        ;*/
 10326                        ;PFXSTRING FXStringAppendInteger(PFXSTRING string,
                    UINT integer)
 10327                        ;{
 10328                        	.line	1534
 10329                        	.line	1535
 10330                        	code
 10331                        	xdef	~~FXStringAppendInteger
 10332                        	func
 10333                        	.function	1535
 10334                        ~~FXStringAppendInteger:
 10335                        	longa	on
 10336                        	longi	on
 10337 00:219D: 3B           	tsc
 10338 00:219E: 38           	sec
 10339 00:219F: E9 04 00     	sbc	#L554
 10340 00:21A2: 1B           	tcs
 10341 00:21A3: 0B           	phd
 10342 00:21A4: 5B           	tcd
 10343             00000004   string_0	set	4
 10344             00000008   integer_0	set	8
 10345                        	.block	1535
 10346                        ;    return ((FXSTRINGAPPENDINTEGER)CALL_KERNEL_AP
                    I(EXPORT_KERNEL_FXSTRINGAPPENDINTEGER))(string,integer);
 10347                        	.sym	string,4,138,6,32,61
 10348                        	.sym	integer,8,16,6,16
 10349                        	.line	1536
 10350 00:21A5: D4 0C        	pei	<L554+integer_0
 10351 00:21A7: D4 0A        	pei	<L554+string_0+2
 10352 00:21A9: D4 08        	pei	<L554+string_0
 10353 00:21AB: AF 42 15 00  	lda	>5442
 10354 00:21AF: 85 01        	sta	<R0
 10355 00:21B1: AF 44 15 00  	lda	>5442+2
 10356 00:21B5: 85 03        	sta	<R0+2
 10357 00:21B7: A0 2A 02     	ldy	#$22a
 10358 00:21BA: B7 01        	lda	[<R0],Y
 10359 00:21BC: AA           	tax
 10360 00:21BD: A0 28 02     	ldy	#$228
 10361 00:21C0: B7 01        	lda	[<R0],Y
 10362                        	xref	~~~lcal
 10363 00:21C2: 22 xx xx xx  	jsl	~~~lcal
 10364 00:21C6: 85 01        	sta	<R0
 10365 00:21C8: 86 03        	stx	<R0+2
 10366 00:21CA: A6 03        	ldx	<R0+2
 10367 00:21CC: A5 01        	lda	<R0
 10368                        L557:
 10369 00:21CE: A8           	tay
 10370 00:21CF: A5 06        	lda	<L554+2
 10371 00:21D1: 85 0C        	sta	<L554+2+6
 10372 00:21D3: A5 05        	lda	<L554+1
 10373 00:21D5: 85 0B        	sta	<L554+1+6
 10374 00:21D7: 2B           	pld
 10375 00:21D8: 3B           	tsc
  Thu Jul 29 2021 22:56                                                Page 185


 10376 00:21D9: 18           	clc
 10377 00:21DA: 69 0A 00     	adc	#L554+6
 10378 00:21DD: 1B           	tcs
 10379 00:21DE: 98           	tya
 10380 00:21DF: 6B           	rtl
 10381                        ;}
 10382                        	.line	1537
 10383                        	.endblock	1537
 10384             00000004   L554	equ	4
 10385             00000005   L555	equ	5
 10386                        	ends
 10387                        	efunc
 10388                        	.endfunc	1537,5,4
 10389                        	.line	1537
 10390                        ;
 10391                        ;/*
 10392                        ;*
 10393                        ;* Name:FXStringAppendLong
 10394                        ;* Subsystem:KERNEL
 10395                        ;*
 10396                        ;*/
 10397                        ;PFXSTRING FXStringAppendLong(PFXSTRING string,ULO
                    NG longval)
 10398                        ;{
 10399                        	.line	1545
 10400                        	.line	1546
 10401                        	code
 10402                        	xdef	~~FXStringAppendLong
 10403                        	func
 10404                        	.function	1546
 10405                        ~~FXStringAppendLong:
 10406                        	longa	on
 10407                        	longi	on
 10408 00:21E0: 3B           	tsc
 10409 00:21E1: 38           	sec
 10410 00:21E2: E9 04 00     	sbc	#L558
 10411 00:21E5: 1B           	tcs
 10412 00:21E6: 0B           	phd
 10413 00:21E7: 5B           	tcd
 10414             00000004   string_0	set	4
 10415             00000008   longval_0	set	8
 10416                        	.block	1546
 10417                        ;    return ((FXSTRINGAPPENDLONG)CALL_KERNEL_API(E
                    XPORT_KERNEL_FXSTRINGAPPENDLONG))(string,longval);
 10418                        	.sym	string,4,138,6,32,61
 10419                        	.sym	longval,8,18,6,32
 10420                        	.line	1547
 10421 00:21E8: D4 0E        	pei	<L558+longval_0+2
 10422 00:21EA: D4 0C        	pei	<L558+longval_0
 10423 00:21EC: D4 0A        	pei	<L558+string_0+2
 10424 00:21EE: D4 08        	pei	<L558+string_0
 10425 00:21F0: AF 42 15 00  	lda	>5442
 10426 00:21F4: 85 01        	sta	<R0
 10427 00:21F6: AF 44 15 00  	lda	>5442+2
 10428 00:21FA: 85 03        	sta	<R0+2
 10429 00:21FC: A0 2E 02     	ldy	#$22e
 10430 00:21FF: B7 01        	lda	[<R0],Y
 10431 00:2201: AA           	tax
  Thu Jul 29 2021 22:56                                                Page 186


 10432 00:2202: A0 2C 02     	ldy	#$22c
 10433 00:2205: B7 01        	lda	[<R0],Y
 10434                        	xref	~~~lcal
 10435 00:2207: 22 xx xx xx  	jsl	~~~lcal
 10436 00:220B: 85 01        	sta	<R0
 10437 00:220D: 86 03        	stx	<R0+2
 10438 00:220F: A6 03        	ldx	<R0+2
 10439 00:2211: A5 01        	lda	<R0
 10440                        L561:
 10441 00:2213: A8           	tay
 10442 00:2214: A5 06        	lda	<L558+2
 10443 00:2216: 85 0E        	sta	<L558+2+8
 10444 00:2218: A5 05        	lda	<L558+1
 10445 00:221A: 85 0D        	sta	<L558+1+8
 10446 00:221C: 2B           	pld
 10447 00:221D: 3B           	tsc
 10448 00:221E: 18           	clc
 10449 00:221F: 69 0C 00     	adc	#L558+8
 10450 00:2222: 1B           	tcs
 10451 00:2223: 98           	tya
 10452 00:2224: 6B           	rtl
 10453                        ;}
 10454                        	.line	1548
 10455                        	.endblock	1548
 10456             00000004   L558	equ	4
 10457             00000005   L559	equ	5
 10458                        	ends
 10459                        	efunc
 10460                        	.endfunc	1548,5,4
 10461                        	.line	1548
 10462                        ;
 10463                        ;/*
 10464                        ;*
 10465                        ;* Name:FXStringAppendHex
 10466                        ;* Subsystem:KERNEL
 10467                        ;*
 10468                        ;*/
 10469                        ;PFXSTRING FXStringAppendHex(PFXSTRING string,BYTE
                     byte)
 10470                        ;{
 10471                        	.line	1556
 10472                        	.line	1557
 10473                        	code
 10474                        	xdef	~~FXStringAppendHex
 10475                        	func
 10476                        	.function	1557
 10477                        ~~FXStringAppendHex:
 10478                        	longa	on
 10479                        	longi	on
 10480 00:2225: 3B           	tsc
 10481 00:2226: 38           	sec
 10482 00:2227: E9 04 00     	sbc	#L562
 10483 00:222A: 1B           	tcs
 10484 00:222B: 0B           	phd
 10485 00:222C: 5B           	tcd
 10486             00000004   string_0	set	4
 10487             00000008   byte_0	set	8
 10488                        	.block	1557
  Thu Jul 29 2021 22:56                                                Page 187


 10489                        ;    return ((FXSTRINGAPPENDHEX)CALL_KERNEL_API(EX
                    PORT_KERNEL_FXSTRINGAPPENDHEX))(string,byte);
 10490                        	.sym	string,4,138,6,32,61
 10491                        	.sym	byte,8,14,6,8
 10492                        	.line	1558
 10493 00:222D: D4 0C        	pei	<L562+byte_0
 10494 00:222F: D4 0A        	pei	<L562+string_0+2
 10495 00:2231: D4 08        	pei	<L562+string_0
 10496 00:2233: AF 42 15 00  	lda	>5442
 10497 00:2237: 85 01        	sta	<R0
 10498 00:2239: AF 44 15 00  	lda	>5442+2
 10499 00:223D: 85 03        	sta	<R0+2
 10500 00:223F: A0 32 02     	ldy	#$232
 10501 00:2242: B7 01        	lda	[<R0],Y
 10502 00:2244: AA           	tax
 10503 00:2245: A0 30 02     	ldy	#$230
 10504 00:2248: B7 01        	lda	[<R0],Y
 10505                        	xref	~~~lcal
 10506 00:224A: 22 xx xx xx  	jsl	~~~lcal
 10507 00:224E: 85 01        	sta	<R0
 10508 00:2250: 86 03        	stx	<R0+2
 10509 00:2252: A6 03        	ldx	<R0+2
 10510 00:2254: A5 01        	lda	<R0
 10511                        L565:
 10512 00:2256: A8           	tay
 10513 00:2257: A5 06        	lda	<L562+2
 10514 00:2259: 85 0C        	sta	<L562+2+6
 10515 00:225B: A5 05        	lda	<L562+1
 10516 00:225D: 85 0B        	sta	<L562+1+6
 10517 00:225F: 2B           	pld
 10518 00:2260: 3B           	tsc
 10519 00:2261: 18           	clc
 10520 00:2262: 69 0A 00     	adc	#L562+6
 10521 00:2265: 1B           	tcs
 10522 00:2266: 98           	tya
 10523 00:2267: 6B           	rtl
 10524                        ;}
 10525                        	.line	1559
 10526                        	.endblock	1559
 10527             00000004   L562	equ	4
 10528             00000005   L563	equ	5
 10529                        	ends
 10530                        	efunc
 10531                        	.endfunc	1559,5,4
 10532                        	.line	1559
 10533                        ;
 10534                        ;/*
 10535                        ;*
 10536                        ;* Name:StringStripPadding
 10537                        ;* Subsystem:KERNEL
 10538                        ;*
 10539                        ;*/
 10540                        ;LPSTR StringStripPadding(LPSTR text)
 10541                        ;{
 10542                        	.line	1567
 10543                        	.line	1568
 10544                        	code
 10545                        	xdef	~~StringStripPadding
  Thu Jul 29 2021 22:56                                                Page 188


 10546                        	func
 10547                        	.function	1568
 10548                        ~~StringStripPadding:
 10549                        	longa	on
 10550                        	longi	on
 10551 00:2268: 3B           	tsc
 10552 00:2269: 38           	sec
 10553 00:226A: E9 04 00     	sbc	#L566
 10554 00:226D: 1B           	tcs
 10555 00:226E: 0B           	phd
 10556 00:226F: 5B           	tcd
 10557             00000004   text_0	set	4
 10558                        	.block	1568
 10559                        ;    return ((STRINGSTRIPPADDING)CALL_KERNEL_API(E
                    XPORT_KERNEL_STRINGSTRIPPADDING))(text);
 10560                        	.sym	text,4,142,6,32
 10561                        	.line	1569
 10562 00:2270: D4 0A        	pei	<L566+text_0+2
 10563 00:2272: D4 08        	pei	<L566+text_0
 10564 00:2274: AF 42 15 00  	lda	>5442
 10565 00:2278: 85 01        	sta	<R0
 10566 00:227A: AF 44 15 00  	lda	>5442+2
 10567 00:227E: 85 03        	sta	<R0+2
 10568 00:2280: A0 36 02     	ldy	#$236
 10569 00:2283: B7 01        	lda	[<R0],Y
 10570 00:2285: AA           	tax
 10571 00:2286: A0 34 02     	ldy	#$234
 10572 00:2289: B7 01        	lda	[<R0],Y
 10573                        	xref	~~~lcal
 10574 00:228B: 22 xx xx xx  	jsl	~~~lcal
 10575 00:228F: 85 01        	sta	<R0
 10576 00:2291: 86 03        	stx	<R0+2
 10577 00:2293: A6 03        	ldx	<R0+2
 10578 00:2295: A5 01        	lda	<R0
 10579                        L569:
 10580 00:2297: A8           	tay
 10581 00:2298: A5 06        	lda	<L566+2
 10582 00:229A: 85 0A        	sta	<L566+2+4
 10583 00:229C: A5 05        	lda	<L566+1
 10584 00:229E: 85 09        	sta	<L566+1+4
 10585 00:22A0: 2B           	pld
 10586 00:22A1: 3B           	tsc
 10587 00:22A2: 18           	clc
 10588 00:22A3: 69 08 00     	adc	#L566+4
 10589 00:22A6: 1B           	tcs
 10590 00:22A7: 98           	tya
 10591 00:22A8: 6B           	rtl
 10592                        ;}
 10593                        	.line	1570
 10594                        	.endblock	1570
 10595             00000004   L566	equ	4
 10596             00000005   L567	equ	5
 10597                        	ends
 10598                        	efunc
 10599                        	.endfunc	1570,5,4
 10600                        	.line	1570
 10601                        ;
 10602                        ;/*
  Thu Jul 29 2021 22:56                                                Page 189


 10603                        ;*
 10604                        ;* Name:StringReplacePadding
 10605                        ;* Subsystem:KERNEL
 10606                        ;*
 10607                        ;*/
 10608                        ;LPSTR StringReplacePadding(LPSTR orgText,CHAR rep
                    lacement)
 10609                        ;{
 10610                        	.line	1578
 10611                        	.line	1579
 10612                        	code
 10613                        	xdef	~~StringReplacePadding
 10614                        	func
 10615                        	.function	1579
 10616                        ~~StringReplacePadding:
 10617                        	longa	on
 10618                        	longi	on
 10619 00:22A9: 3B           	tsc
 10620 00:22AA: 38           	sec
 10621 00:22AB: E9 04 00     	sbc	#L570
 10622 00:22AE: 1B           	tcs
 10623 00:22AF: 0B           	phd
 10624 00:22B0: 5B           	tcd
 10625             00000004   orgText_0	set	4
 10626             00000008   replacement_0	set	8
 10627                        	.block	1579
 10628                        ;    return ((STRINGREPLACEPADDING)CALL_KERNEL_API
                    (EXPORT_KERNEL_STRINGREPLACEPADDING))(orgText,replacement);
 10629                        	.sym	orgText,4,142,6,32
 10630                        	.sym	replacement,8,14,6,8
 10631                        	.line	1580
 10632 00:22B1: D4 0C        	pei	<L570+replacement_0
 10633 00:22B3: D4 0A        	pei	<L570+orgText_0+2
 10634 00:22B5: D4 08        	pei	<L570+orgText_0
 10635 00:22B7: AF 42 15 00  	lda	>5442
 10636 00:22BB: 85 01        	sta	<R0
 10637 00:22BD: AF 44 15 00  	lda	>5442+2
 10638 00:22C1: 85 03        	sta	<R0+2
 10639 00:22C3: A0 3A 02     	ldy	#$23a
 10640 00:22C6: B7 01        	lda	[<R0],Y
 10641 00:22C8: AA           	tax
 10642 00:22C9: A0 38 02     	ldy	#$238
 10643 00:22CC: B7 01        	lda	[<R0],Y
 10644                        	xref	~~~lcal
 10645 00:22CE: 22 xx xx xx  	jsl	~~~lcal
 10646 00:22D2: 85 01        	sta	<R0
 10647 00:22D4: 86 03        	stx	<R0+2
 10648 00:22D6: A6 03        	ldx	<R0+2
 10649 00:22D8: A5 01        	lda	<R0
 10650                        L573:
 10651 00:22DA: A8           	tay
 10652 00:22DB: A5 06        	lda	<L570+2
 10653 00:22DD: 85 0C        	sta	<L570+2+6
 10654 00:22DF: A5 05        	lda	<L570+1
 10655 00:22E1: 85 0B        	sta	<L570+1+6
 10656 00:22E3: 2B           	pld
 10657 00:22E4: 3B           	tsc
 10658 00:22E5: 18           	clc
  Thu Jul 29 2021 22:56                                                Page 190


 10659 00:22E6: 69 0A 00     	adc	#L570+6
 10660 00:22E9: 1B           	tcs
 10661 00:22EA: 98           	tya
 10662 00:22EB: 6B           	rtl
 10663                        ;}
 10664                        	.line	1581
 10665                        	.endblock	1581
 10666             00000004   L570	equ	4
 10667             00000005   L571	equ	5
 10668                        	ends
 10669                        	efunc
 10670                        	.endfunc	1581,5,4
 10671                        	.line	1581
 10672                        ;
 10673                        ;/*
 10674                        ;*
 10675                        ;* Name:StringReplacePaddingUntil
 10676                        ;* Subsystem:KERNEL
 10677                        ;*
 10678                        ;*/
 10679                        ;LPSTR StringReplacePaddingUntil(LPSTR orgText,CHA
                    R replacement)
 10680                        ;{
 10681                        	.line	1589
 10682                        	.line	1590
 10683                        	code
 10684                        	xdef	~~StringReplacePaddingUntil
 10685                        	func
 10686                        	.function	1590
 10687                        ~~StringReplacePaddingUntil:
 10688                        	longa	on
 10689                        	longi	on
 10690 00:22EC: 3B           	tsc
 10691 00:22ED: 38           	sec
 10692 00:22EE: E9 04 00     	sbc	#L574
 10693 00:22F1: 1B           	tcs
 10694 00:22F2: 0B           	phd
 10695 00:22F3: 5B           	tcd
 10696             00000004   orgText_0	set	4
 10697             00000008   replacement_0	set	8
 10698                        	.block	1590
 10699                        ;    return ((STRINGREPLACEPADDINGUNTIL)CALL_KERNE
                    L_API(EXPORT_KERNEL_STRINGREPLACEPADDINGUNTIL))(orgText,repl
                    acement);
 10700                        	.sym	orgText,4,142,6,32
 10701                        	.sym	replacement,8,14,6,8
 10702                        	.line	1591
 10703 00:22F4: D4 0C        	pei	<L574+replacement_0
 10704 00:22F6: D4 0A        	pei	<L574+orgText_0+2
 10705 00:22F8: D4 08        	pei	<L574+orgText_0
 10706 00:22FA: AF 42 15 00  	lda	>5442
 10707 00:22FE: 85 01        	sta	<R0
 10708 00:2300: AF 44 15 00  	lda	>5442+2
 10709 00:2304: 85 03        	sta	<R0+2
 10710 00:2306: A0 3E 02     	ldy	#$23e
 10711 00:2309: B7 01        	lda	[<R0],Y
 10712 00:230B: AA           	tax
 10713 00:230C: A0 3C 02     	ldy	#$23c
  Thu Jul 29 2021 22:56                                                Page 191


 10714 00:230F: B7 01        	lda	[<R0],Y
 10715                        	xref	~~~lcal
 10716 00:2311: 22 xx xx xx  	jsl	~~~lcal
 10717 00:2315: 85 01        	sta	<R0
 10718 00:2317: 86 03        	stx	<R0+2
 10719 00:2319: A6 03        	ldx	<R0+2
 10720 00:231B: A5 01        	lda	<R0
 10721                        L577:
 10722 00:231D: A8           	tay
 10723 00:231E: A5 06        	lda	<L574+2
 10724 00:2320: 85 0C        	sta	<L574+2+6
 10725 00:2322: A5 05        	lda	<L574+1
 10726 00:2324: 85 0B        	sta	<L574+1+6
 10727 00:2326: 2B           	pld
 10728 00:2327: 3B           	tsc
 10729 00:2328: 18           	clc
 10730 00:2329: 69 0A 00     	adc	#L574+6
 10731 00:232C: 1B           	tcs
 10732 00:232D: 98           	tya
 10733 00:232E: 6B           	rtl
 10734                        ;}
 10735                        	.line	1592
 10736                        	.endblock	1592
 10737             00000004   L574	equ	4
 10738             00000005   L575	equ	5
 10739                        	ends
 10740                        	efunc
 10741                        	.endfunc	1592,5,4
 10742                        	.line	1592
 10743                        ;
 10744                        ;/*
 10745                        ;*
 10746                        ;* Name:StringByteToHex
 10747                        ;* Subsystem:KERNEL
 10748                        ;*
 10749                        ;*/
 10750                        ;LPSTR StringByteToHex(UCHAR b,char* buffer)
 10751                        ;{
 10752                        	.line	1600
 10753                        	.line	1601
 10754                        	code
 10755                        	xdef	~~StringByteToHex
 10756                        	func
 10757                        	.function	1601
 10758                        ~~StringByteToHex:
 10759                        	longa	on
 10760                        	longi	on
 10761 00:232F: 3B           	tsc
 10762 00:2330: 38           	sec
 10763 00:2331: E9 04 00     	sbc	#L578
 10764 00:2334: 1B           	tcs
 10765 00:2335: 0B           	phd
 10766 00:2336: 5B           	tcd
 10767             00000004   b_0	set	4
 10768             00000006   buffer_0	set	6
 10769                        	.block	1601
 10770                        ;    return ((STRINGBYTETOHEX)CALL_KERNEL_API(EXPO
                    RT_KERNEL_STRINGBYTETOHEX))(b,buffer);
  Thu Jul 29 2021 22:56                                                Page 192


 10771                        	.sym	b,4,14,6,8
 10772                        	.sym	buffer,6,142,6,32
 10773                        	.line	1602
 10774 00:2337: D4 0C        	pei	<L578+buffer_0+2
 10775 00:2339: D4 0A        	pei	<L578+buffer_0
 10776 00:233B: D4 08        	pei	<L578+b_0
 10777 00:233D: AF 42 15 00  	lda	>5442
 10778 00:2341: 85 01        	sta	<R0
 10779 00:2343: AF 44 15 00  	lda	>5442+2
 10780 00:2347: 85 03        	sta	<R0+2
 10781 00:2349: A0 42 02     	ldy	#$242
 10782 00:234C: B7 01        	lda	[<R0],Y
 10783 00:234E: AA           	tax
 10784 00:234F: A0 40 02     	ldy	#$240
 10785 00:2352: B7 01        	lda	[<R0],Y
 10786                        	xref	~~~lcal
 10787 00:2354: 22 xx xx xx  	jsl	~~~lcal
 10788 00:2358: 85 01        	sta	<R0
 10789 00:235A: 86 03        	stx	<R0+2
 10790 00:235C: A6 03        	ldx	<R0+2
 10791 00:235E: A5 01        	lda	<R0
 10792                        L581:
 10793 00:2360: A8           	tay
 10794 00:2361: A5 06        	lda	<L578+2
 10795 00:2363: 85 0C        	sta	<L578+2+6
 10796 00:2365: A5 05        	lda	<L578+1
 10797 00:2367: 85 0B        	sta	<L578+1+6
 10798 00:2369: 2B           	pld
 10799 00:236A: 3B           	tsc
 10800 00:236B: 18           	clc
 10801 00:236C: 69 0A 00     	adc	#L578+6
 10802 00:236F: 1B           	tcs
 10803 00:2370: 98           	tya
 10804 00:2371: 6B           	rtl
 10805                        ;}
 10806                        	.line	1603
 10807                        	.endblock	1603
 10808             00000004   L578	equ	4
 10809             00000005   L579	equ	5
 10810                        	ends
 10811                        	efunc
 10812                        	.endfunc	1603,5,4
 10813                        	.line	1603
 10814                        ;
 10815                        ;/*
 10816                        ;*
 10817                        ;* Name:StringByteToDec
 10818                        ;* Subsystem:KERNEL
 10819                        ;*
 10820                        ;*/
 10821                        ;LPSTR StringByteToDec(UCHAR b,char* buffer)
 10822                        ;{
 10823                        	.line	1611
 10824                        	.line	1612
 10825                        	code
 10826                        	xdef	~~StringByteToDec
 10827                        	func
 10828                        	.function	1612
  Thu Jul 29 2021 22:56                                                Page 193


 10829                        ~~StringByteToDec:
 10830                        	longa	on
 10831                        	longi	on
 10832 00:2372: 3B           	tsc
 10833 00:2373: 38           	sec
 10834 00:2374: E9 04 00     	sbc	#L582
 10835 00:2377: 1B           	tcs
 10836 00:2378: 0B           	phd
 10837 00:2379: 5B           	tcd
 10838             00000004   b_0	set	4
 10839             00000006   buffer_0	set	6
 10840                        	.block	1612
 10841                        ;    return ((STRINGBYTETODEC)CALL_KERNEL_API(EXPO
                    RT_KERNEL_STRINGBYTETODEC))(b,buffer);
 10842                        	.sym	b,4,14,6,8
 10843                        	.sym	buffer,6,142,6,32
 10844                        	.line	1613
 10845 00:237A: D4 0C        	pei	<L582+buffer_0+2
 10846 00:237C: D4 0A        	pei	<L582+buffer_0
 10847 00:237E: D4 08        	pei	<L582+b_0
 10848 00:2380: AF 42 15 00  	lda	>5442
 10849 00:2384: 85 01        	sta	<R0
 10850 00:2386: AF 44 15 00  	lda	>5442+2
 10851 00:238A: 85 03        	sta	<R0+2
 10852 00:238C: A0 46 02     	ldy	#$246
 10853 00:238F: B7 01        	lda	[<R0],Y
 10854 00:2391: AA           	tax
 10855 00:2392: A0 44 02     	ldy	#$244
 10856 00:2395: B7 01        	lda	[<R0],Y
 10857                        	xref	~~~lcal
 10858 00:2397: 22 xx xx xx  	jsl	~~~lcal
 10859 00:239B: 85 01        	sta	<R0
 10860 00:239D: 86 03        	stx	<R0+2
 10861 00:239F: A6 03        	ldx	<R0+2
 10862 00:23A1: A5 01        	lda	<R0
 10863                        L585:
 10864 00:23A3: A8           	tay
 10865 00:23A4: A5 06        	lda	<L582+2
 10866 00:23A6: 85 0C        	sta	<L582+2+6
 10867 00:23A8: A5 05        	lda	<L582+1
 10868 00:23AA: 85 0B        	sta	<L582+1+6
 10869 00:23AC: 2B           	pld
 10870 00:23AD: 3B           	tsc
 10871 00:23AE: 18           	clc
 10872 00:23AF: 69 0A 00     	adc	#L582+6
 10873 00:23B2: 1B           	tcs
 10874 00:23B3: 98           	tya
 10875 00:23B4: 6B           	rtl
 10876                        ;}
 10877                        	.line	1614
 10878                        	.endblock	1614
 10879             00000004   L582	equ	4
 10880             00000005   L583	equ	5
 10881                        	ends
 10882                        	efunc
 10883                        	.endfunc	1614,5,4
 10884                        	.line	1614
 10885                        ;
  Thu Jul 29 2021 22:56                                                Page 194


 10886                        ;/*
 10887                        ;*
 10888                        ;* Name:StringIntToDec
 10889                        ;* Subsystem:KERNEL
 10890                        ;*
 10891                        ;*/
 10892                        ;LPSTR StringIntToDec(UINT b,char* buffer)
 10893                        ;{
 10894                        	.line	1622
 10895                        	.line	1623
 10896                        	code
 10897                        	xdef	~~StringIntToDec
 10898                        	func
 10899                        	.function	1623
 10900                        ~~StringIntToDec:
 10901                        	longa	on
 10902                        	longi	on
 10903 00:23B5: 3B           	tsc
 10904 00:23B6: 38           	sec
 10905 00:23B7: E9 04 00     	sbc	#L586
 10906 00:23BA: 1B           	tcs
 10907 00:23BB: 0B           	phd
 10908 00:23BC: 5B           	tcd
 10909             00000004   b_0	set	4
 10910             00000006   buffer_0	set	6
 10911                        	.block	1623
 10912                        ;    return ((STRINGINTTODEC)CALL_KERNEL_API(EXPOR
                    T_KERNEL_STRINGINTTODEC))(b,buffer);
 10913                        	.sym	b,4,16,6,16
 10914                        	.sym	buffer,6,142,6,32
 10915                        	.line	1624
 10916 00:23BD: D4 0C        	pei	<L586+buffer_0+2
 10917 00:23BF: D4 0A        	pei	<L586+buffer_0
 10918 00:23C1: D4 08        	pei	<L586+b_0
 10919 00:23C3: AF 42 15 00  	lda	>5442
 10920 00:23C7: 85 01        	sta	<R0
 10921 00:23C9: AF 44 15 00  	lda	>5442+2
 10922 00:23CD: 85 03        	sta	<R0+2
 10923 00:23CF: A0 4A 02     	ldy	#$24a
 10924 00:23D2: B7 01        	lda	[<R0],Y
 10925 00:23D4: AA           	tax
 10926 00:23D5: A0 48 02     	ldy	#$248
 10927 00:23D8: B7 01        	lda	[<R0],Y
 10928                        	xref	~~~lcal
 10929 00:23DA: 22 xx xx xx  	jsl	~~~lcal
 10930 00:23DE: 85 01        	sta	<R0
 10931 00:23E0: 86 03        	stx	<R0+2
 10932 00:23E2: A6 03        	ldx	<R0+2
 10933 00:23E4: A5 01        	lda	<R0
 10934                        L589:
 10935 00:23E6: A8           	tay
 10936 00:23E7: A5 06        	lda	<L586+2
 10937 00:23E9: 85 0C        	sta	<L586+2+6
 10938 00:23EB: A5 05        	lda	<L586+1
 10939 00:23ED: 85 0B        	sta	<L586+1+6
 10940 00:23EF: 2B           	pld
 10941 00:23F0: 3B           	tsc
 10942 00:23F1: 18           	clc
  Thu Jul 29 2021 22:56                                                Page 195


 10943 00:23F2: 69 0A 00     	adc	#L586+6
 10944 00:23F5: 1B           	tcs
 10945 00:23F6: 98           	tya
 10946 00:23F7: 6B           	rtl
 10947                        ;}
 10948                        	.line	1625
 10949                        	.endblock	1625
 10950             00000004   L586	equ	4
 10951             00000005   L587	equ	5
 10952                        	ends
 10953                        	efunc
 10954                        	.endfunc	1625,5,4
 10955                        	.line	1625
 10956                        ;
 10957                        ;/*
 10958                        ;*
 10959                        ;* Name:StringLongToDec
 10960                        ;* Subsystem:KERNEL
 10961                        ;*
 10962                        ;*/
 10963                        ;LPSTR StringLongToDec(ULONG b,char* buffer)
 10964                        ;{
 10965                        	.line	1633
 10966                        	.line	1634
 10967                        	code
 10968                        	xdef	~~StringLongToDec
 10969                        	func
 10970                        	.function	1634
 10971                        ~~StringLongToDec:
 10972                        	longa	on
 10973                        	longi	on
 10974 00:23F8: 3B           	tsc
 10975 00:23F9: 38           	sec
 10976 00:23FA: E9 04 00     	sbc	#L590
 10977 00:23FD: 1B           	tcs
 10978 00:23FE: 0B           	phd
 10979 00:23FF: 5B           	tcd
 10980             00000004   b_0	set	4
 10981             00000008   buffer_0	set	8
 10982                        	.block	1634
 10983                        ;    return ((STRINGLONGTODEC)CALL_KERNEL_API(EXPO
                    RT_KERNEL_STRINGLONGTODEC))(b,buffer);
 10984                        	.sym	b,4,18,6,32
 10985                        	.sym	buffer,8,142,6,32
 10986                        	.line	1635
 10987 00:2400: D4 0E        	pei	<L590+buffer_0+2
 10988 00:2402: D4 0C        	pei	<L590+buffer_0
 10989 00:2404: D4 0A        	pei	<L590+b_0+2
 10990 00:2406: D4 08        	pei	<L590+b_0
 10991 00:2408: AF 42 15 00  	lda	>5442
 10992 00:240C: 85 01        	sta	<R0
 10993 00:240E: AF 44 15 00  	lda	>5442+2
 10994 00:2412: 85 03        	sta	<R0+2
 10995 00:2414: A0 4E 02     	ldy	#$24e
 10996 00:2417: B7 01        	lda	[<R0],Y
 10997 00:2419: AA           	tax
 10998 00:241A: A0 4C 02     	ldy	#$24c
 10999 00:241D: B7 01        	lda	[<R0],Y
  Thu Jul 29 2021 22:56                                                Page 196


 11000                        	xref	~~~lcal
 11001 00:241F: 22 xx xx xx  	jsl	~~~lcal
 11002 00:2423: 85 01        	sta	<R0
 11003 00:2425: 86 03        	stx	<R0+2
 11004 00:2427: A6 03        	ldx	<R0+2
 11005 00:2429: A5 01        	lda	<R0
 11006                        L593:
 11007 00:242B: A8           	tay
 11008 00:242C: A5 06        	lda	<L590+2
 11009 00:242E: 85 0E        	sta	<L590+2+8
 11010 00:2430: A5 05        	lda	<L590+1
 11011 00:2432: 85 0D        	sta	<L590+1+8
 11012 00:2434: 2B           	pld
 11013 00:2435: 3B           	tsc
 11014 00:2436: 18           	clc
 11015 00:2437: 69 0C 00     	adc	#L590+8
 11016 00:243A: 1B           	tcs
 11017 00:243B: 98           	tya
 11018 00:243C: 6B           	rtl
 11019                        ;}
 11020                        	.line	1636
 11021                        	.endblock	1636
 11022             00000004   L590	equ	4
 11023             00000005   L591	equ	5
 11024                        	ends
 11025                        	efunc
 11026                        	.endfunc	1636,5,4
 11027                        	.line	1636
 11028                        ;
 11029                        ;/*
 11030                        ;*
 11031                        ;* Name:StringLongToSize
 11032                        ;* Subsystem:KERNEL
 11033                        ;*
 11034                        ;*/
 11035                        ;LPSTR StringLongToSize(ULONG b,UINT units,char* b
                    hbuffer)
 11036                        ;{
 11037                        	.line	1644
 11038                        	.line	1645
 11039                        	code
 11040                        	xdef	~~StringLongToSize
 11041                        	func
 11042                        	.function	1645
 11043                        ~~StringLongToSize:
 11044                        	longa	on
 11045                        	longi	on
 11046 00:243D: 3B           	tsc
 11047 00:243E: 38           	sec
 11048 00:243F: E9 04 00     	sbc	#L594
 11049 00:2442: 1B           	tcs
 11050 00:2443: 0B           	phd
 11051 00:2444: 5B           	tcd
 11052             00000004   b_0	set	4
 11053             00000008   units_0	set	8
 11054             0000000A   bhbuffer_0	set	10
 11055                        	.block	1645
 11056                        ;    return ((STRINGLONGTOSIZE)CALL_KERNEL_API(EXP
  Thu Jul 29 2021 22:56                                                Page 197


                    ORT_KERNEL_STRINGLONGTOSIZE))(b,units,bhbuffer);
 11057                        	.sym	b,4,18,6,32
 11058                        	.sym	units,8,16,6,16
 11059                        	.sym	bhbuffer,10,142,6,32
 11060                        	.line	1646
 11061 00:2445: D4 10        	pei	<L594+bhbuffer_0+2
 11062 00:2447: D4 0E        	pei	<L594+bhbuffer_0
 11063 00:2449: D4 0C        	pei	<L594+units_0
 11064 00:244B: D4 0A        	pei	<L594+b_0+2
 11065 00:244D: D4 08        	pei	<L594+b_0
 11066 00:244F: AF 42 15 00  	lda	>5442
 11067 00:2453: 85 01        	sta	<R0
 11068 00:2455: AF 44 15 00  	lda	>5442+2
 11069 00:2459: 85 03        	sta	<R0+2
 11070 00:245B: A0 52 02     	ldy	#$252
 11071 00:245E: B7 01        	lda	[<R0],Y
 11072 00:2460: AA           	tax
 11073 00:2461: A0 50 02     	ldy	#$250
 11074 00:2464: B7 01        	lda	[<R0],Y
 11075                        	xref	~~~lcal
 11076 00:2466: 22 xx xx xx  	jsl	~~~lcal
 11077 00:246A: 85 01        	sta	<R0
 11078 00:246C: 86 03        	stx	<R0+2
 11079 00:246E: A6 03        	ldx	<R0+2
 11080 00:2470: A5 01        	lda	<R0
 11081                        L597:
 11082 00:2472: A8           	tay
 11083 00:2473: A5 06        	lda	<L594+2
 11084 00:2475: 85 10        	sta	<L594+2+10
 11085 00:2477: A5 05        	lda	<L594+1
 11086 00:2479: 85 0F        	sta	<L594+1+10
 11087 00:247B: 2B           	pld
 11088 00:247C: 3B           	tsc
 11089 00:247D: 18           	clc
 11090 00:247E: 69 0E 00     	adc	#L594+10
 11091 00:2481: 1B           	tcs
 11092 00:2482: 98           	tya
 11093 00:2483: 6B           	rtl
 11094                        ;}
 11095                        	.line	1647
 11096                        	.endblock	1647
 11097             00000004   L594	equ	4
 11098             00000005   L595	equ	5
 11099                        	ends
 11100                        	efunc
 11101                        	.endfunc	1647,5,4
 11102                        	.line	1647
 11103                        ;
 11104                        ;/*
 11105                        ;*
 11106                        ;* Name:StringAppendInt
 11107                        ;* Subsystem:KERNEL
 11108                        ;*
 11109                        ;*/
 11110                        ;LPCHAR StringAppendInt(LPCHAR baseText,UINT integ
                    er)
 11111                        ;{
 11112                        	.line	1655
  Thu Jul 29 2021 22:56                                                Page 198


 11113                        	.line	1656
 11114                        	code
 11115                        	xdef	~~StringAppendInt
 11116                        	func
 11117                        	.function	1656
 11118                        ~~StringAppendInt:
 11119                        	longa	on
 11120                        	longi	on
 11121 00:2484: 3B           	tsc
 11122 00:2485: 38           	sec
 11123 00:2486: E9 04 00     	sbc	#L598
 11124 00:2489: 1B           	tcs
 11125 00:248A: 0B           	phd
 11126 00:248B: 5B           	tcd
 11127             00000004   baseText_0	set	4
 11128             00000008   integer_0	set	8
 11129                        	.block	1656
 11130                        ;    return ((STRINGAPPENDINT)CALL_KERNEL_API(EXPO
                    RT_KERNEL_STRINGAPPENDINT))(baseText,integer);
 11131                        	.sym	baseText,4,142,6,32
 11132                        	.sym	integer,8,16,6,16
 11133                        	.line	1657
 11134 00:248C: D4 0C        	pei	<L598+integer_0
 11135 00:248E: D4 0A        	pei	<L598+baseText_0+2
 11136 00:2490: D4 08        	pei	<L598+baseText_0
 11137 00:2492: AF 42 15 00  	lda	>5442
 11138 00:2496: 85 01        	sta	<R0
 11139 00:2498: AF 44 15 00  	lda	>5442+2
 11140 00:249C: 85 03        	sta	<R0+2
 11141 00:249E: A0 56 02     	ldy	#$256
 11142 00:24A1: B7 01        	lda	[<R0],Y
 11143 00:24A3: AA           	tax
 11144 00:24A4: A0 54 02     	ldy	#$254
 11145 00:24A7: B7 01        	lda	[<R0],Y
 11146                        	xref	~~~lcal
 11147 00:24A9: 22 xx xx xx  	jsl	~~~lcal
 11148 00:24AD: 85 01        	sta	<R0
 11149 00:24AF: 86 03        	stx	<R0+2
 11150 00:24B1: A6 03        	ldx	<R0+2
 11151 00:24B3: A5 01        	lda	<R0
 11152                        L601:
 11153 00:24B5: A8           	tay
 11154 00:24B6: A5 06        	lda	<L598+2
 11155 00:24B8: 85 0C        	sta	<L598+2+6
 11156 00:24BA: A5 05        	lda	<L598+1
 11157 00:24BC: 85 0B        	sta	<L598+1+6
 11158 00:24BE: 2B           	pld
 11159 00:24BF: 3B           	tsc
 11160 00:24C0: 18           	clc
 11161 00:24C1: 69 0A 00     	adc	#L598+6
 11162 00:24C4: 1B           	tcs
 11163 00:24C5: 98           	tya
 11164 00:24C6: 6B           	rtl
 11165                        ;}
 11166                        	.line	1658
 11167                        	.endblock	1658
 11168             00000004   L598	equ	4
 11169             00000005   L599	equ	5
  Thu Jul 29 2021 22:56                                                Page 199


 11170                        	ends
 11171                        	efunc
 11172                        	.endfunc	1658,5,4
 11173                        	.line	1658
 11174                        ;
 11175                        ;/*
 11176                        ;*
 11177                        ;* Name:StringfromPointer
 11178                        ;* Subsystem:KERNEL
 11179                        ;*
 11180                        ;*/
 11181                        ;LPCSTR StringfromPointer(LPVOID p,LPSTR bhbuffer)
 11182                        ;{
 11183                        	.line	1666
 11184                        	.line	1667
 11185                        	code
 11186                        	xdef	~~StringfromPointer
 11187                        	func
 11188                        	.function	1667
 11189                        ~~StringfromPointer:
 11190                        	longa	on
 11191                        	longi	on
 11192 00:24C7: 3B           	tsc
 11193 00:24C8: 38           	sec
 11194 00:24C9: E9 04 00     	sbc	#L602
 11195 00:24CC: 1B           	tcs
 11196 00:24CD: 0B           	phd
 11197 00:24CE: 5B           	tcd
 11198             00000004   p_0	set	4
 11199             00000008   bhbuffer_0	set	8
 11200                        	.block	1667
 11201                        ;    return ((STRINGFROMPOINTER)CALL_KERNEL_API(EX
                    PORT_KERNEL_STRINGFROMPOINTER))(p,bhbuffer);
 11202                        	.sym	p,4,129,6,32
 11203                        	.sym	bhbuffer,8,142,6,32
 11204                        	.line	1668
 11205 00:24CF: D4 0E        	pei	<L602+bhbuffer_0+2
 11206 00:24D1: D4 0C        	pei	<L602+bhbuffer_0
 11207 00:24D3: D4 0A        	pei	<L602+p_0+2
 11208 00:24D5: D4 08        	pei	<L602+p_0
 11209 00:24D7: AF 42 15 00  	lda	>5442
 11210 00:24DB: 85 01        	sta	<R0
 11211 00:24DD: AF 44 15 00  	lda	>5442+2
 11212 00:24E1: 85 03        	sta	<R0+2
 11213 00:24E3: A0 5A 02     	ldy	#$25a
 11214 00:24E6: B7 01        	lda	[<R0],Y
 11215 00:24E8: AA           	tax
 11216 00:24E9: A0 58 02     	ldy	#$258
 11217 00:24EC: B7 01        	lda	[<R0],Y
 11218                        	xref	~~~lcal
 11219 00:24EE: 22 xx xx xx  	jsl	~~~lcal
 11220 00:24F2: 85 01        	sta	<R0
 11221 00:24F4: 86 03        	stx	<R0+2
 11222 00:24F6: A6 03        	ldx	<R0+2
 11223 00:24F8: A5 01        	lda	<R0
 11224                        L605:
 11225 00:24FA: A8           	tay
 11226 00:24FB: A5 06        	lda	<L602+2
  Thu Jul 29 2021 22:56                                                Page 200


 11227 00:24FD: 85 0E        	sta	<L602+2+8
 11228 00:24FF: A5 05        	lda	<L602+1
 11229 00:2501: 85 0D        	sta	<L602+1+8
 11230 00:2503: 2B           	pld
 11231 00:2504: 3B           	tsc
 11232 00:2505: 18           	clc
 11233 00:2506: 69 0C 00     	adc	#L602+8
 11234 00:2509: 1B           	tcs
 11235 00:250A: 98           	tya
 11236 00:250B: 6B           	rtl
 11237                        ;}
 11238                        	.line	1669
 11239                        	.endblock	1669
 11240             00000004   L602	equ	4
 11241             00000005   L603	equ	5
 11242                        	ends
 11243                        	efunc
 11244                        	.endfunc	1669,5,4
 11245                        	.line	1669
 11246                        ;
 11247                        ;/*
 11248                        ;*
 11249                        ;* Name:StringCopyToDelimiter
 11250                        ;* Subsystem:KERNEL
 11251                        ;*
 11252                        ;*/
 11253                        ;LPCSTR StringCopyToDelimiter(LPCSTR text,CHAR mar
                    ker)
 11254                        ;{
 11255                        	.line	1677
 11256                        	.line	1678
 11257                        	code
 11258                        	xdef	~~StringCopyToDelimiter
 11259                        	func
 11260                        	.function	1678
 11261                        ~~StringCopyToDelimiter:
 11262                        	longa	on
 11263                        	longi	on
 11264 00:250C: 3B           	tsc
 11265 00:250D: 38           	sec
 11266 00:250E: E9 04 00     	sbc	#L606
 11267 00:2511: 1B           	tcs
 11268 00:2512: 0B           	phd
 11269 00:2513: 5B           	tcd
 11270             00000004   text_0	set	4
 11271             00000008   marker_0	set	8
 11272                        	.block	1678
 11273                        ;    return ((STRINGCOPYTODELIMITER)CALL_KERNEL_AP
                    I(EXPORT_KERNEL_STRINGCOPYTODELIMITER))(text,marker);
 11274                        	.sym	text,4,142,6,32
 11275                        	.sym	marker,8,14,6,8
 11276                        	.line	1679
 11277 00:2514: D4 0C        	pei	<L606+marker_0
 11278 00:2516: D4 0A        	pei	<L606+text_0+2
 11279 00:2518: D4 08        	pei	<L606+text_0
 11280 00:251A: AF 42 15 00  	lda	>5442
 11281 00:251E: 85 01        	sta	<R0
 11282 00:2520: AF 44 15 00  	lda	>5442+2
  Thu Jul 29 2021 22:56                                                Page 201


 11283 00:2524: 85 03        	sta	<R0+2
 11284 00:2526: A0 5E 02     	ldy	#$25e
 11285 00:2529: B7 01        	lda	[<R0],Y
 11286 00:252B: AA           	tax
 11287 00:252C: A0 5C 02     	ldy	#$25c
 11288 00:252F: B7 01        	lda	[<R0],Y
 11289                        	xref	~~~lcal
 11290 00:2531: 22 xx xx xx  	jsl	~~~lcal
 11291 00:2535: 85 01        	sta	<R0
 11292 00:2537: 86 03        	stx	<R0+2
 11293 00:2539: A6 03        	ldx	<R0+2
 11294 00:253B: A5 01        	lda	<R0
 11295                        L609:
 11296 00:253D: A8           	tay
 11297 00:253E: A5 06        	lda	<L606+2
 11298 00:2540: 85 0C        	sta	<L606+2+6
 11299 00:2542: A5 05        	lda	<L606+1
 11300 00:2544: 85 0B        	sta	<L606+1+6
 11301 00:2546: 2B           	pld
 11302 00:2547: 3B           	tsc
 11303 00:2548: 18           	clc
 11304 00:2549: 69 0A 00     	adc	#L606+6
 11305 00:254C: 1B           	tcs
 11306 00:254D: 98           	tya
 11307 00:254E: 6B           	rtl
 11308                        ;}
 11309                        	.line	1680
 11310                        	.endblock	1680
 11311             00000004   L606	equ	4
 11312             00000005   L607	equ	5
 11313                        	ends
 11314                        	efunc
 11315                        	.endfunc	1680,5,4
 11316                        	.line	1680
 11317                        ;
 11318                        ;/*
 11319                        ;*
 11320                        ;* Name:StringFirstIndexOf
 11321                        ;* Subsystem:KERNEL
 11322                        ;*
 11323                        ;*/
 11324                        ;UINT StringFirstIndexOf(LPCSTR text,CHAR marker)
 11325                        ;{
 11326                        	.line	1688
 11327                        	.line	1689
 11328                        	code
 11329                        	xdef	~~StringFirstIndexOf
 11330                        	func
 11331                        	.function	1689
 11332                        ~~StringFirstIndexOf:
 11333                        	longa	on
 11334                        	longi	on
 11335 00:254F: 3B           	tsc
 11336 00:2550: 38           	sec
 11337 00:2551: E9 04 00     	sbc	#L610
 11338 00:2554: 1B           	tcs
 11339 00:2555: 0B           	phd
 11340 00:2556: 5B           	tcd
  Thu Jul 29 2021 22:56                                                Page 202


 11341             00000004   text_0	set	4
 11342             00000008   marker_0	set	8
 11343                        	.block	1689
 11344                        ;    return ((STRINGFIRSTINDEXOF)CALL_KERNEL_API(E
                    XPORT_KERNEL_STRINGFIRSTINDEXOF))(text,marker);
 11345                        	.sym	text,4,142,6,32
 11346                        	.sym	marker,8,14,6,8
 11347                        	.line	1690
 11348 00:2557: D4 0C        	pei	<L610+marker_0
 11349 00:2559: D4 0A        	pei	<L610+text_0+2
 11350 00:255B: D4 08        	pei	<L610+text_0
 11351 00:255D: AF 42 15 00  	lda	>5442
 11352 00:2561: 85 01        	sta	<R0
 11353 00:2563: AF 44 15 00  	lda	>5442+2
 11354 00:2567: 85 03        	sta	<R0+2
 11355 00:2569: A0 62 02     	ldy	#$262
 11356 00:256C: B7 01        	lda	[<R0],Y
 11357 00:256E: AA           	tax
 11358 00:256F: A0 60 02     	ldy	#$260
 11359 00:2572: B7 01        	lda	[<R0],Y
 11360                        	xref	~~~lcal
 11361 00:2574: 22 xx xx xx  	jsl	~~~lcal
 11362                        L613:
 11363 00:2578: A8           	tay
 11364 00:2579: A5 06        	lda	<L610+2
 11365 00:257B: 85 0C        	sta	<L610+2+6
 11366 00:257D: A5 05        	lda	<L610+1
 11367 00:257F: 85 0B        	sta	<L610+1+6
 11368 00:2581: 2B           	pld
 11369 00:2582: 3B           	tsc
 11370 00:2583: 18           	clc
 11371 00:2584: 69 0A 00     	adc	#L610+6
 11372 00:2587: 1B           	tcs
 11373 00:2588: 98           	tya
 11374 00:2589: 6B           	rtl
 11375                        ;}
 11376                        	.line	1691
 11377                        	.endblock	1691
 11378             00000004   L610	equ	4
 11379             00000005   L611	equ	5
 11380                        	ends
 11381                        	efunc
 11382                        	.endfunc	1691,5,4
 11383                        	.line	1691
 11384                        ;
 11385                        ;/*
 11386                        ;*
 11387                        ;* Name:StringLastIndexOf
 11388                        ;* Subsystem:KERNEL
 11389                        ;*
 11390                        ;*/
 11391                        ;UINT StringLastIndexOf(LPCSTR text,CHAR marker)
 11392                        ;{
 11393                        	.line	1699
 11394                        	.line	1700
 11395                        	code
 11396                        	xdef	~~StringLastIndexOf
 11397                        	func
  Thu Jul 29 2021 22:56                                                Page 203


 11398                        	.function	1700
 11399                        ~~StringLastIndexOf:
 11400                        	longa	on
 11401                        	longi	on
 11402 00:258A: 3B           	tsc
 11403 00:258B: 38           	sec
 11404 00:258C: E9 04 00     	sbc	#L614
 11405 00:258F: 1B           	tcs
 11406 00:2590: 0B           	phd
 11407 00:2591: 5B           	tcd
 11408             00000004   text_0	set	4
 11409             00000008   marker_0	set	8
 11410                        	.block	1700
 11411                        ;    return ((STRINGLASTINDEXOF)CALL_KERNEL_API(EX
                    PORT_KERNEL_STRINGLASTINDEXOF))(text,marker);
 11412                        	.sym	text,4,142,6,32
 11413                        	.sym	marker,8,14,6,8
 11414                        	.line	1701
 11415 00:2592: D4 0C        	pei	<L614+marker_0
 11416 00:2594: D4 0A        	pei	<L614+text_0+2
 11417 00:2596: D4 08        	pei	<L614+text_0
 11418 00:2598: AF 42 15 00  	lda	>5442
 11419 00:259C: 85 01        	sta	<R0
 11420 00:259E: AF 44 15 00  	lda	>5442+2
 11421 00:25A2: 85 03        	sta	<R0+2
 11422 00:25A4: A0 66 02     	ldy	#$266
 11423 00:25A7: B7 01        	lda	[<R0],Y
 11424 00:25A9: AA           	tax
 11425 00:25AA: A0 64 02     	ldy	#$264
 11426 00:25AD: B7 01        	lda	[<R0],Y
 11427                        	xref	~~~lcal
 11428 00:25AF: 22 xx xx xx  	jsl	~~~lcal
 11429                        L617:
 11430 00:25B3: A8           	tay
 11431 00:25B4: A5 06        	lda	<L614+2
 11432 00:25B6: 85 0C        	sta	<L614+2+6
 11433 00:25B8: A5 05        	lda	<L614+1
 11434 00:25BA: 85 0B        	sta	<L614+1+6
 11435 00:25BC: 2B           	pld
 11436 00:25BD: 3B           	tsc
 11437 00:25BE: 18           	clc
 11438 00:25BF: 69 0A 00     	adc	#L614+6
 11439 00:25C2: 1B           	tcs
 11440 00:25C3: 98           	tya
 11441 00:25C4: 6B           	rtl
 11442                        ;}
 11443                        	.line	1702
 11444                        	.endblock	1702
 11445             00000004   L614	equ	4
 11446             00000005   L615	equ	5
 11447                        	ends
 11448                        	efunc
 11449                        	.endfunc	1702,5,4
 11450                        	.line	1702
 11451                        ;
 11452                        ;/*
 11453                        ;*
 11454                        ;* Name:StringfromChar
  Thu Jul 29 2021 22:56                                                Page 204


 11455                        ;* Subsystem:KERNEL
 11456                        ;*
 11457                        ;*/
 11458                        ;LPCSTR StringfromChar(CHAR c,BYTE action,LPSTR bh
                    buffer)
 11459                        ;{
 11460                        	.line	1710
 11461                        	.line	1711
 11462                        	code
 11463                        	xdef	~~StringfromChar
 11464                        	func
 11465                        	.function	1711
 11466                        ~~StringfromChar:
 11467                        	longa	on
 11468                        	longi	on
 11469 00:25C5: 3B           	tsc
 11470 00:25C6: 38           	sec
 11471 00:25C7: E9 04 00     	sbc	#L618
 11472 00:25CA: 1B           	tcs
 11473 00:25CB: 0B           	phd
 11474 00:25CC: 5B           	tcd
 11475             00000004   c_0	set	4
 11476             00000006   action_0	set	6
 11477             00000008   bhbuffer_0	set	8
 11478                        	.block	1711
 11479                        ;    return ((STRINGFROMCHAR)CALL_KERNEL_API(EXPOR
                    T_KERNEL_STRINGFROMCHAR))(c,action,bhbuffer);
 11480                        	.sym	c,4,14,6,8
 11481                        	.sym	action,6,14,6,8
 11482                        	.sym	bhbuffer,8,142,6,32
 11483                        	.line	1712
 11484 00:25CD: D4 0E        	pei	<L618+bhbuffer_0+2
 11485 00:25CF: D4 0C        	pei	<L618+bhbuffer_0
 11486 00:25D1: D4 0A        	pei	<L618+action_0
 11487 00:25D3: D4 08        	pei	<L618+c_0
 11488 00:25D5: AF 42 15 00  	lda	>5442
 11489 00:25D9: 85 01        	sta	<R0
 11490 00:25DB: AF 44 15 00  	lda	>5442+2
 11491 00:25DF: 85 03        	sta	<R0+2
 11492 00:25E1: A0 6A 02     	ldy	#$26a
 11493 00:25E4: B7 01        	lda	[<R0],Y
 11494 00:25E6: AA           	tax
 11495 00:25E7: A0 68 02     	ldy	#$268
 11496 00:25EA: B7 01        	lda	[<R0],Y
 11497                        	xref	~~~lcal
 11498 00:25EC: 22 xx xx xx  	jsl	~~~lcal
 11499 00:25F0: 85 01        	sta	<R0
 11500 00:25F2: 86 03        	stx	<R0+2
 11501 00:25F4: A6 03        	ldx	<R0+2
 11502 00:25F6: A5 01        	lda	<R0
 11503                        L621:
 11504 00:25F8: A8           	tay
 11505 00:25F9: A5 06        	lda	<L618+2
 11506 00:25FB: 85 0E        	sta	<L618+2+8
 11507 00:25FD: A5 05        	lda	<L618+1
 11508 00:25FF: 85 0D        	sta	<L618+1+8
 11509 00:2601: 2B           	pld
 11510 00:2602: 3B           	tsc
  Thu Jul 29 2021 22:56                                                Page 205


 11511 00:2603: 18           	clc
 11512 00:2604: 69 0C 00     	adc	#L618+8
 11513 00:2607: 1B           	tcs
 11514 00:2608: 98           	tya
 11515 00:2609: 6B           	rtl
 11516                        ;}
 11517                        	.line	1713
 11518                        	.endblock	1713
 11519             00000004   L618	equ	4
 11520             00000005   L619	equ	5
 11521                        	ends
 11522                        	efunc
 11523                        	.endfunc	1713,5,4
 11524                        	.line	1713
 11525                        ;
 11526                        ;/*
 11527                        ;*
 11528                        ;* Name:StringItoA
 11529                        ;* Subsystem:KERNEL
 11530                        ;*
 11531                        ;*/
 11532                        ;LPSTR StringItoA(UINT value,char* result,int base
                    )
 11533                        ;{
 11534                        	.line	1721
 11535                        	.line	1722
 11536                        	code
 11537                        	xdef	~~StringItoA
 11538                        	func
 11539                        	.function	1722
 11540                        ~~StringItoA:
 11541                        	longa	on
 11542                        	longi	on
 11543 00:260A: 3B           	tsc
 11544 00:260B: 38           	sec
 11545 00:260C: E9 04 00     	sbc	#L622
 11546 00:260F: 1B           	tcs
 11547 00:2610: 0B           	phd
 11548 00:2611: 5B           	tcd
 11549             00000004   value_0	set	4
 11550             00000006   result_0	set	6
 11551             0000000A   base_0	set	10
 11552                        	.block	1722
 11553                        ;    return ((STRINGITOA)CALL_KERNEL_API(EXPORT_KE
                    RNEL_STRINGITOA))(value,result,base);
 11554                        	.sym	value,4,16,6,16
 11555                        	.sym	result,6,142,6,32
 11556                        	.sym	base,10,5,6,16
 11557                        	.line	1723
 11558 00:2612: D4 0E        	pei	<L622+base_0
 11559 00:2614: D4 0C        	pei	<L622+result_0+2
 11560 00:2616: D4 0A        	pei	<L622+result_0
 11561 00:2618: D4 08        	pei	<L622+value_0
 11562 00:261A: AF 42 15 00  	lda	>5442
 11563 00:261E: 85 01        	sta	<R0
 11564 00:2620: AF 44 15 00  	lda	>5442+2
 11565 00:2624: 85 03        	sta	<R0+2
 11566 00:2626: A0 6E 02     	ldy	#$26e
  Thu Jul 29 2021 22:56                                                Page 206


 11567 00:2629: B7 01        	lda	[<R0],Y
 11568 00:262B: AA           	tax
 11569 00:262C: A0 6C 02     	ldy	#$26c
 11570 00:262F: B7 01        	lda	[<R0],Y
 11571                        	xref	~~~lcal
 11572 00:2631: 22 xx xx xx  	jsl	~~~lcal
 11573 00:2635: 85 01        	sta	<R0
 11574 00:2637: 86 03        	stx	<R0+2
 11575 00:2639: A6 03        	ldx	<R0+2
 11576 00:263B: A5 01        	lda	<R0
 11577                        L625:
 11578 00:263D: A8           	tay
 11579 00:263E: A5 06        	lda	<L622+2
 11580 00:2640: 85 0E        	sta	<L622+2+8
 11581 00:2642: A5 05        	lda	<L622+1
 11582 00:2644: 85 0D        	sta	<L622+1+8
 11583 00:2646: 2B           	pld
 11584 00:2647: 3B           	tsc
 11585 00:2648: 18           	clc
 11586 00:2649: 69 0C 00     	adc	#L622+8
 11587 00:264C: 1B           	tcs
 11588 00:264D: 98           	tya
 11589 00:264E: 6B           	rtl
 11590                        ;}
 11591                        	.line	1724
 11592                        	.endblock	1724
 11593             00000004   L622	equ	4
 11594             00000005   L623	equ	5
 11595                        	ends
 11596                        	efunc
 11597                        	.endfunc	1724,5,4
 11598                        	.line	1724
 11599                        ;
 11600                        ;/*
 11601                        ;*
 11602                        ;* Name:StringPad
 11603                        ;* Subsystem:KERNEL
 11604                        ;*
 11605                        ;*/
 11606                        ;LPCHAR StringPad(char* dest,char* src,char filler
                    ,int width)
 11607                        ;{
 11608                        	.line	1732
 11609                        	.line	1733
 11610                        	code
 11611                        	xdef	~~StringPad
 11612                        	func
 11613                        	.function	1733
 11614                        ~~StringPad:
 11615                        	longa	on
 11616                        	longi	on
 11617 00:264F: 3B           	tsc
 11618 00:2650: 38           	sec
 11619 00:2651: E9 04 00     	sbc	#L626
 11620 00:2654: 1B           	tcs
 11621 00:2655: 0B           	phd
 11622 00:2656: 5B           	tcd
 11623             00000004   dest_0	set	4
  Thu Jul 29 2021 22:56                                                Page 207


 11624             00000008   src_0	set	8
 11625             0000000C   filler_0	set	12
 11626             0000000E   width_0	set	14
 11627                        	.block	1733
 11628                        ;    return ((STRINGPAD)CALL_KERNEL_API(EXPORT_KER
                    NEL_STRINGPAD))(dest,src,filler,width);
 11629                        	.sym	dest,4,142,6,32
 11630                        	.sym	src,8,142,6,32
 11631                        	.sym	filler,12,14,6,8
 11632                        	.sym	width,14,5,6,16
 11633                        	.line	1734
 11634 00:2657: D4 12        	pei	<L626+width_0
 11635 00:2659: D4 10        	pei	<L626+filler_0
 11636 00:265B: D4 0E        	pei	<L626+src_0+2
 11637 00:265D: D4 0C        	pei	<L626+src_0
 11638 00:265F: D4 0A        	pei	<L626+dest_0+2
 11639 00:2661: D4 08        	pei	<L626+dest_0
 11640 00:2663: AF 42 15 00  	lda	>5442
 11641 00:2667: 85 01        	sta	<R0
 11642 00:2669: AF 44 15 00  	lda	>5442+2
 11643 00:266D: 85 03        	sta	<R0+2
 11644 00:266F: A0 72 02     	ldy	#$272
 11645 00:2672: B7 01        	lda	[<R0],Y
 11646 00:2674: AA           	tax
 11647 00:2675: A0 70 02     	ldy	#$270
 11648 00:2678: B7 01        	lda	[<R0],Y
 11649                        	xref	~~~lcal
 11650 00:267A: 22 xx xx xx  	jsl	~~~lcal
 11651 00:267E: 85 01        	sta	<R0
 11652 00:2680: 86 03        	stx	<R0+2
 11653 00:2682: A6 03        	ldx	<R0+2
 11654 00:2684: A5 01        	lda	<R0
 11655                        L629:
 11656 00:2686: A8           	tay
 11657 00:2687: A5 06        	lda	<L626+2
 11658 00:2689: 85 12        	sta	<L626+2+12
 11659 00:268B: A5 05        	lda	<L626+1
 11660 00:268D: 85 11        	sta	<L626+1+12
 11661 00:268F: 2B           	pld
 11662 00:2690: 3B           	tsc
 11663 00:2691: 18           	clc
 11664 00:2692: 69 10 00     	adc	#L626+12
 11665 00:2695: 1B           	tcs
 11666 00:2696: 98           	tya
 11667 00:2697: 6B           	rtl
 11668                        ;}
 11669                        	.line	1735
 11670                        	.endblock	1735
 11671             00000004   L626	equ	4
 11672             00000005   L627	equ	5
 11673                        	ends
 11674                        	efunc
 11675                        	.endfunc	1735,5,4
 11676                        	.line	1735
 11677                        ;
 11678                        ;/*
 11679                        ;*
 11680                        ;* Name:StringReverse
  Thu Jul 29 2021 22:56                                                Page 208


 11681                        ;* Subsystem:KERNEL
 11682                        ;*
 11683                        ;*/
 11684                        ;void StringReverse(LPSTR str,int length)
 11685                        ;{
 11686                        	.line	1743
 11687                        	.line	1744
 11688                        	code
 11689                        	xdef	~~StringReverse
 11690                        	func
 11691                        	.function	1744
 11692                        ~~StringReverse:
 11693                        	longa	on
 11694                        	longi	on
 11695 00:2698: 3B           	tsc
 11696 00:2699: 38           	sec
 11697 00:269A: E9 04 00     	sbc	#L630
 11698 00:269D: 1B           	tcs
 11699 00:269E: 0B           	phd
 11700 00:269F: 5B           	tcd
 11701             00000004   str_0	set	4
 11702             00000008   length_0	set	8
 11703                        	.block	1744
 11704                        ;    ((STRINGREVERSE)CALL_KERNEL_API(EXPORT_KERNEL
                    _STRINGREVERSE))(str,length);
 11705                        	.sym	str,4,142,6,32
 11706                        	.sym	length,8,5,6,16
 11707                        	.line	1745
 11708 00:26A0: D4 0C        	pei	<L630+length_0
 11709 00:26A2: D4 0A        	pei	<L630+str_0+2
 11710 00:26A4: D4 08        	pei	<L630+str_0
 11711 00:26A6: AF 42 15 00  	lda	>5442
 11712 00:26AA: 85 01        	sta	<R0
 11713 00:26AC: AF 44 15 00  	lda	>5442+2
 11714 00:26B0: 85 03        	sta	<R0+2
 11715 00:26B2: A0 76 02     	ldy	#$276
 11716 00:26B5: B7 01        	lda	[<R0],Y
 11717 00:26B7: AA           	tax
 11718 00:26B8: A0 74 02     	ldy	#$274
 11719 00:26BB: B7 01        	lda	[<R0],Y
 11720                        	xref	~~~lcal
 11721 00:26BD: 22 xx xx xx  	jsl	~~~lcal
 11722                        ;}
 11723                        	.line	1746
 11724                        L633:
 11725 00:26C1: A5 06        	lda	<L630+2
 11726 00:26C3: 85 0C        	sta	<L630+2+6
 11727 00:26C5: A5 05        	lda	<L630+1
 11728 00:26C7: 85 0B        	sta	<L630+1+6
 11729 00:26C9: 2B           	pld
 11730 00:26CA: 3B           	tsc
 11731 00:26CB: 18           	clc
 11732 00:26CC: 69 0A 00     	adc	#L630+6
 11733 00:26CF: 1B           	tcs
 11734 00:26D0: 6B           	rtl
 11735                        	.endblock	1746
 11736             00000004   L630	equ	4
 11737             00000005   L631	equ	5
  Thu Jul 29 2021 22:56                                                Page 209


 11738                        	ends
 11739                        	efunc
 11740                        	.endfunc	1746,5,4
 11741                        	.line	1746
 11742                        ;
 11743                        ;/*
 11744                        ;*
 11745                        ;* Name:StringConCat
 11746                        ;* Subsystem:KERNEL
 11747                        ;*
 11748                        ;*/
 11749                        ;LPSTR StringConCat(LPSTR dest,LPCSTR src)
 11750                        ;{
 11751                        	.line	1754
 11752                        	.line	1755
 11753                        	code
 11754                        	xdef	~~StringConCat
 11755                        	func
 11756                        	.function	1755
 11757                        ~~StringConCat:
 11758                        	longa	on
 11759                        	longi	on
 11760 00:26D1: 3B           	tsc
 11761 00:26D2: 38           	sec
 11762 00:26D3: E9 04 00     	sbc	#L634
 11763 00:26D6: 1B           	tcs
 11764 00:26D7: 0B           	phd
 11765 00:26D8: 5B           	tcd
 11766             00000004   dest_0	set	4
 11767             00000008   src_0	set	8
 11768                        	.block	1755
 11769                        ;    return ((STRINGCONCAT)CALL_KERNEL_API(EXPORT_
                    KERNEL_STRINGCONCAT))(dest,src);
 11770                        	.sym	dest,4,142,6,32
 11771                        	.sym	src,8,142,6,32
 11772                        	.line	1756
 11773 00:26D9: D4 0E        	pei	<L634+src_0+2
 11774 00:26DB: D4 0C        	pei	<L634+src_0
 11775 00:26DD: D4 0A        	pei	<L634+dest_0+2
 11776 00:26DF: D4 08        	pei	<L634+dest_0
 11777 00:26E1: AF 42 15 00  	lda	>5442
 11778 00:26E5: 85 01        	sta	<R0
 11779 00:26E7: AF 44 15 00  	lda	>5442+2
 11780 00:26EB: 85 03        	sta	<R0+2
 11781 00:26ED: A0 7A 02     	ldy	#$27a
 11782 00:26F0: B7 01        	lda	[<R0],Y
 11783 00:26F2: AA           	tax
 11784 00:26F3: A0 78 02     	ldy	#$278
 11785 00:26F6: B7 01        	lda	[<R0],Y
 11786                        	xref	~~~lcal
 11787 00:26F8: 22 xx xx xx  	jsl	~~~lcal
 11788 00:26FC: 85 01        	sta	<R0
 11789 00:26FE: 86 03        	stx	<R0+2
 11790 00:2700: A6 03        	ldx	<R0+2
 11791 00:2702: A5 01        	lda	<R0
 11792                        L637:
 11793 00:2704: A8           	tay
 11794 00:2705: A5 06        	lda	<L634+2
  Thu Jul 29 2021 22:56                                                Page 210


 11795 00:2707: 85 0E        	sta	<L634+2+8
 11796 00:2709: A5 05        	lda	<L634+1
 11797 00:270B: 85 0D        	sta	<L634+1+8
 11798 00:270D: 2B           	pld
 11799 00:270E: 3B           	tsc
 11800 00:270F: 18           	clc
 11801 00:2710: 69 0C 00     	adc	#L634+8
 11802 00:2713: 1B           	tcs
 11803 00:2714: 98           	tya
 11804 00:2715: 6B           	rtl
 11805                        ;}
 11806                        	.line	1757
 11807                        	.endblock	1757
 11808             00000004   L634	equ	4
 11809             00000005   L635	equ	5
 11810                        	ends
 11811                        	efunc
 11812                        	.endfunc	1757,5,4
 11813                        	.line	1757
 11814                        ;
 11815                        ;/*
 11816                        ;*
 11817                        ;* Name:StringCopy
 11818                        ;* Subsystem:KERNEL
 11819                        ;*
 11820                        ;*/
 11821                        ;LPSTR StringCopy(LPSTR dest,LPCSTR src)
 11822                        ;{
 11823                        	.line	1765
 11824                        	.line	1766
 11825                        	code
 11826                        	xdef	~~StringCopy
 11827                        	func
 11828                        	.function	1766
 11829                        ~~StringCopy:
 11830                        	longa	on
 11831                        	longi	on
 11832 00:2716: 3B           	tsc
 11833 00:2717: 38           	sec
 11834 00:2718: E9 04 00     	sbc	#L638
 11835 00:271B: 1B           	tcs
 11836 00:271C: 0B           	phd
 11837 00:271D: 5B           	tcd
 11838             00000004   dest_0	set	4
 11839             00000008   src_0	set	8
 11840                        	.block	1766
 11841                        ;    return ((STRINGCOPY)CALL_KERNEL_API(EXPORT_KE
                    RNEL_STRINGCOPY))(dest,src);
 11842                        	.sym	dest,4,142,6,32
 11843                        	.sym	src,8,142,6,32
 11844                        	.line	1767
 11845 00:271E: D4 0E        	pei	<L638+src_0+2
 11846 00:2720: D4 0C        	pei	<L638+src_0
 11847 00:2722: D4 0A        	pei	<L638+dest_0+2
 11848 00:2724: D4 08        	pei	<L638+dest_0
 11849 00:2726: AF 42 15 00  	lda	>5442
 11850 00:272A: 85 01        	sta	<R0
 11851 00:272C: AF 44 15 00  	lda	>5442+2
  Thu Jul 29 2021 22:56                                                Page 211


 11852 00:2730: 85 03        	sta	<R0+2
 11853 00:2732: A0 7E 02     	ldy	#$27e
 11854 00:2735: B7 01        	lda	[<R0],Y
 11855 00:2737: AA           	tax
 11856 00:2738: A0 7C 02     	ldy	#$27c
 11857 00:273B: B7 01        	lda	[<R0],Y
 11858                        	xref	~~~lcal
 11859 00:273D: 22 xx xx xx  	jsl	~~~lcal
 11860 00:2741: 85 01        	sta	<R0
 11861 00:2743: 86 03        	stx	<R0+2
 11862 00:2745: A6 03        	ldx	<R0+2
 11863 00:2747: A5 01        	lda	<R0
 11864                        L641:
 11865 00:2749: A8           	tay
 11866 00:274A: A5 06        	lda	<L638+2
 11867 00:274C: 85 0E        	sta	<L638+2+8
 11868 00:274E: A5 05        	lda	<L638+1
 11869 00:2750: 85 0D        	sta	<L638+1+8
 11870 00:2752: 2B           	pld
 11871 00:2753: 3B           	tsc
 11872 00:2754: 18           	clc
 11873 00:2755: 69 0C 00     	adc	#L638+8
 11874 00:2758: 1B           	tcs
 11875 00:2759: 98           	tya
 11876 00:275A: 6B           	rtl
 11877                        ;}
 11878                        	.line	1768
 11879                        	.endblock	1768
 11880             00000004   L638	equ	4
 11881             00000005   L639	equ	5
 11882                        	ends
 11883                        	efunc
 11884                        	.endfunc	1768,5,4
 11885                        	.line	1768
 11886                        ;
 11887                        ;/*
 11888                        ;*
 11889                        ;* Name:StringRTrim
 11890                        ;* Subsystem:KERNEL
 11891                        ;*
 11892                        ;*/
 11893                        ;LPCHAR StringRTrim(LPCHAR lpText)
 11894                        ;{
 11895                        	.line	1776
 11896                        	.line	1777
 11897                        	code
 11898                        	xdef	~~StringRTrim
 11899                        	func
 11900                        	.function	1777
 11901                        ~~StringRTrim:
 11902                        	longa	on
 11903                        	longi	on
 11904 00:275B: 3B           	tsc
 11905 00:275C: 38           	sec
 11906 00:275D: E9 04 00     	sbc	#L642
 11907 00:2760: 1B           	tcs
 11908 00:2761: 0B           	phd
 11909 00:2762: 5B           	tcd
  Thu Jul 29 2021 22:56                                                Page 212


 11910             00000004   lpText_0	set	4
 11911                        	.block	1777
 11912                        ;    return ((STRINGRTRIM)CALL_KERNEL_API(EXPORT_K
                    ERNEL_STRINGRTRIM))(lpText);
 11913                        	.sym	lpText,4,142,6,32
 11914                        	.line	1778
 11915 00:2763: D4 0A        	pei	<L642+lpText_0+2
 11916 00:2765: D4 08        	pei	<L642+lpText_0
 11917 00:2767: AF 42 15 00  	lda	>5442
 11918 00:276B: 85 01        	sta	<R0
 11919 00:276D: AF 44 15 00  	lda	>5442+2
 11920 00:2771: 85 03        	sta	<R0+2
 11921 00:2773: A0 82 02     	ldy	#$282
 11922 00:2776: B7 01        	lda	[<R0],Y
 11923 00:2778: AA           	tax
 11924 00:2779: A0 80 02     	ldy	#$280
 11925 00:277C: B7 01        	lda	[<R0],Y
 11926                        	xref	~~~lcal
 11927 00:277E: 22 xx xx xx  	jsl	~~~lcal
 11928 00:2782: 85 01        	sta	<R0
 11929 00:2784: 86 03        	stx	<R0+2
 11930 00:2786: A6 03        	ldx	<R0+2
 11931 00:2788: A5 01        	lda	<R0
 11932                        L645:
 11933 00:278A: A8           	tay
 11934 00:278B: A5 06        	lda	<L642+2
 11935 00:278D: 85 0A        	sta	<L642+2+4
 11936 00:278F: A5 05        	lda	<L642+1
 11937 00:2791: 85 09        	sta	<L642+1+4
 11938 00:2793: 2B           	pld
 11939 00:2794: 3B           	tsc
 11940 00:2795: 18           	clc
 11941 00:2796: 69 08 00     	adc	#L642+4
 11942 00:2799: 1B           	tcs
 11943 00:279A: 98           	tya
 11944 00:279B: 6B           	rtl
 11945                        ;}
 11946                        	.line	1779
 11947                        	.endblock	1779
 11948             00000004   L642	equ	4
 11949             00000005   L643	equ	5
 11950                        	ends
 11951                        	efunc
 11952                        	.endfunc	1779,5,4
 11953                        	.line	1779
 11954                        ;
 11955                        ;/*
 11956                        ;*
 11957                        ;* Name:StringLTrim
 11958                        ;* Subsystem:KERNEL
 11959                        ;*
 11960                        ;*/
 11961                        ;LPCHAR StringLTrim(LPCHAR lpText)
 11962                        ;{
 11963                        	.line	1787
 11964                        	.line	1788
 11965                        	code
 11966                        	xdef	~~StringLTrim
  Thu Jul 29 2021 22:56                                                Page 213


 11967                        	func
 11968                        	.function	1788
 11969                        ~~StringLTrim:
 11970                        	longa	on
 11971                        	longi	on
 11972 00:279C: 3B           	tsc
 11973 00:279D: 38           	sec
 11974 00:279E: E9 04 00     	sbc	#L646
 11975 00:27A1: 1B           	tcs
 11976 00:27A2: 0B           	phd
 11977 00:27A3: 5B           	tcd
 11978             00000004   lpText_0	set	4
 11979                        	.block	1788
 11980                        ;    return ((STRINGLTRIM)CALL_KERNEL_API(EXPORT_K
                    ERNEL_STRINGLTRIM))(lpText);
 11981                        	.sym	lpText,4,142,6,32
 11982                        	.line	1789
 11983 00:27A4: D4 0A        	pei	<L646+lpText_0+2
 11984 00:27A6: D4 08        	pei	<L646+lpText_0
 11985 00:27A8: AF 42 15 00  	lda	>5442
 11986 00:27AC: 85 01        	sta	<R0
 11987 00:27AE: AF 44 15 00  	lda	>5442+2
 11988 00:27B2: 85 03        	sta	<R0+2
 11989 00:27B4: A0 86 02     	ldy	#$286
 11990 00:27B7: B7 01        	lda	[<R0],Y
 11991 00:27B9: AA           	tax
 11992 00:27BA: A0 84 02     	ldy	#$284
 11993 00:27BD: B7 01        	lda	[<R0],Y
 11994                        	xref	~~~lcal
 11995 00:27BF: 22 xx xx xx  	jsl	~~~lcal
 11996 00:27C3: 85 01        	sta	<R0
 11997 00:27C5: 86 03        	stx	<R0+2
 11998 00:27C7: A6 03        	ldx	<R0+2
 11999 00:27C9: A5 01        	lda	<R0
 12000                        L649:
 12001 00:27CB: A8           	tay
 12002 00:27CC: A5 06        	lda	<L646+2
 12003 00:27CE: 85 0A        	sta	<L646+2+4
 12004 00:27D0: A5 05        	lda	<L646+1
 12005 00:27D2: 85 09        	sta	<L646+1+4
 12006 00:27D4: 2B           	pld
 12007 00:27D5: 3B           	tsc
 12008 00:27D6: 18           	clc
 12009 00:27D7: 69 08 00     	adc	#L646+4
 12010 00:27DA: 1B           	tcs
 12011 00:27DB: 98           	tya
 12012 00:27DC: 6B           	rtl
 12013                        ;}
 12014                        	.line	1790
 12015                        	.endblock	1790
 12016             00000004   L646	equ	4
 12017             00000005   L647	equ	5
 12018                        	ends
 12019                        	efunc
 12020                        	.endfunc	1790,5,4
 12021                        	.line	1790
 12022                        ;
 12023                        ;/*
  Thu Jul 29 2021 22:56                                                Page 214


 12024                        ;*
 12025                        ;* Name:StringTrim
 12026                        ;* Subsystem:KERNEL
 12027                        ;*
 12028                        ;*/
 12029                        ;LPCHAR StringTrim(LPCHAR lpText)
 12030                        ;{
 12031                        	.line	1798
 12032                        	.line	1799
 12033                        	code
 12034                        	xdef	~~StringTrim
 12035                        	func
 12036                        	.function	1799
 12037                        ~~StringTrim:
 12038                        	longa	on
 12039                        	longi	on
 12040 00:27DD: 3B           	tsc
 12041 00:27DE: 38           	sec
 12042 00:27DF: E9 04 00     	sbc	#L650
 12043 00:27E2: 1B           	tcs
 12044 00:27E3: 0B           	phd
 12045 00:27E4: 5B           	tcd
 12046             00000004   lpText_0	set	4
 12047                        	.block	1799
 12048                        ;    return ((STRINGTRIM)CALL_KERNEL_API(EXPORT_KE
                    RNEL_STRINGTRIM))(lpText);
 12049                        	.sym	lpText,4,142,6,32
 12050                        	.line	1800
 12051 00:27E5: D4 0A        	pei	<L650+lpText_0+2
 12052 00:27E7: D4 08        	pei	<L650+lpText_0
 12053 00:27E9: AF 42 15 00  	lda	>5442
 12054 00:27ED: 85 01        	sta	<R0
 12055 00:27EF: AF 44 15 00  	lda	>5442+2
 12056 00:27F3: 85 03        	sta	<R0+2
 12057 00:27F5: A0 8A 02     	ldy	#$28a
 12058 00:27F8: B7 01        	lda	[<R0],Y
 12059 00:27FA: AA           	tax
 12060 00:27FB: A0 88 02     	ldy	#$288
 12061 00:27FE: B7 01        	lda	[<R0],Y
 12062                        	xref	~~~lcal
 12063 00:2800: 22 xx xx xx  	jsl	~~~lcal
 12064 00:2804: 85 01        	sta	<R0
 12065 00:2806: 86 03        	stx	<R0+2
 12066 00:2808: A6 03        	ldx	<R0+2
 12067 00:280A: A5 01        	lda	<R0
 12068                        L653:
 12069 00:280C: A8           	tay
 12070 00:280D: A5 06        	lda	<L650+2
 12071 00:280F: 85 0A        	sta	<L650+2+4
 12072 00:2811: A5 05        	lda	<L650+1
 12073 00:2813: 85 09        	sta	<L650+1+4
 12074 00:2815: 2B           	pld
 12075 00:2816: 3B           	tsc
 12076 00:2817: 18           	clc
 12077 00:2818: 69 08 00     	adc	#L650+4
 12078 00:281B: 1B           	tcs
 12079 00:281C: 98           	tya
 12080 00:281D: 6B           	rtl
  Thu Jul 29 2021 22:56                                                Page 215


 12081                        ;}
 12082                        	.line	1801
 12083                        	.endblock	1801
 12084             00000004   L650	equ	4
 12085             00000005   L651	equ	5
 12086                        	ends
 12087                        	efunc
 12088                        	.endfunc	1801,5,4
 12089                        	.line	1801
 12090                        ;
 12091                        ;/*
 12092                        ;*
 12093                        ;* Name:StringReplace
 12094                        ;* Subsystem:KERNEL
 12095                        ;*
 12096                        ;*/
 12097                        ;LPCHAR StringReplace(LPCSTR s,LPCSTR old,LPCSTR n
                    ew)
 12098                        ;{
 12099                        	.line	1809
 12100                        	.line	1810
 12101                        	code
 12102                        	xdef	~~StringReplace
 12103                        	func
 12104                        	.function	1810
 12105                        ~~StringReplace:
 12106                        	longa	on
 12107                        	longi	on
 12108 00:281E: 3B           	tsc
 12109 00:281F: 38           	sec
 12110 00:2820: E9 04 00     	sbc	#L654
 12111 00:2823: 1B           	tcs
 12112 00:2824: 0B           	phd
 12113 00:2825: 5B           	tcd
 12114             00000004   s_0	set	4
 12115             00000008   old_0	set	8
 12116             0000000C   new_0	set	12
 12117                        	.block	1810
 12118                        ;    return ((STRINGREPLACE)CALL_KERNEL_API(EXPORT
                    _KERNEL_STRINGREPLACE))(s,old,new);
 12119                        	.sym	s,4,142,6,32
 12120                        	.sym	old,8,142,6,32
 12121                        	.sym	new,12,142,6,32
 12122                        	.line	1811
 12123 00:2826: D4 12        	pei	<L654+new_0+2
 12124 00:2828: D4 10        	pei	<L654+new_0
 12125 00:282A: D4 0E        	pei	<L654+old_0+2
 12126 00:282C: D4 0C        	pei	<L654+old_0
 12127 00:282E: D4 0A        	pei	<L654+s_0+2
 12128 00:2830: D4 08        	pei	<L654+s_0
 12129 00:2832: AF 42 15 00  	lda	>5442
 12130 00:2836: 85 01        	sta	<R0
 12131 00:2838: AF 44 15 00  	lda	>5442+2
 12132 00:283C: 85 03        	sta	<R0+2
 12133 00:283E: A0 8E 02     	ldy	#$28e
 12134 00:2841: B7 01        	lda	[<R0],Y
 12135 00:2843: AA           	tax
 12136 00:2844: A0 8C 02     	ldy	#$28c
  Thu Jul 29 2021 22:56                                                Page 216


 12137 00:2847: B7 01        	lda	[<R0],Y
 12138                        	xref	~~~lcal
 12139 00:2849: 22 xx xx xx  	jsl	~~~lcal
 12140 00:284D: 85 01        	sta	<R0
 12141 00:284F: 86 03        	stx	<R0+2
 12142 00:2851: A6 03        	ldx	<R0+2
 12143 00:2853: A5 01        	lda	<R0
 12144                        L657:
 12145 00:2855: A8           	tay
 12146 00:2856: A5 06        	lda	<L654+2
 12147 00:2858: 85 12        	sta	<L654+2+12
 12148 00:285A: A5 05        	lda	<L654+1
 12149 00:285C: 85 11        	sta	<L654+1+12
 12150 00:285E: 2B           	pld
 12151 00:285F: 3B           	tsc
 12152 00:2860: 18           	clc
 12153 00:2861: 69 10 00     	adc	#L654+12
 12154 00:2864: 1B           	tcs
 12155 00:2865: 98           	tya
 12156 00:2866: 6B           	rtl
 12157                        ;}
 12158                        	.line	1812
 12159                        	.endblock	1812
 12160             00000004   L654	equ	4
 12161             00000005   L655	equ	5
 12162                        	ends
 12163                        	efunc
 12164                        	.endfunc	1812,5,4
 12165                        	.line	1812
 12166                        ;
 12167                        ;/*
 12168                        ;*
 12169                        ;* Name:StringIndexOf
 12170                        ;* Subsystem:KERNEL
 12171                        ;*
 12172                        ;*/
 12173                        ;INT StringIndexOf(LPCHAR chars,CHAR c)
 12174                        ;{
 12175                        	.line	1820
 12176                        	.line	1821
 12177                        	code
 12178                        	xdef	~~StringIndexOf
 12179                        	func
 12180                        	.function	1821
 12181                        ~~StringIndexOf:
 12182                        	longa	on
 12183                        	longi	on
 12184 00:2867: 3B           	tsc
 12185 00:2868: 38           	sec
 12186 00:2869: E9 04 00     	sbc	#L658
 12187 00:286C: 1B           	tcs
 12188 00:286D: 0B           	phd
 12189 00:286E: 5B           	tcd
 12190             00000004   chars_0	set	4
 12191             00000008   c_0	set	8
 12192                        	.block	1821
 12193                        ;    return ((STRINGINDEXOF)CALL_KERNEL_API(EXPORT
                    _KERNEL_STRINGINDEXOF))(chars,c);
  Thu Jul 29 2021 22:56                                                Page 217


 12194                        	.sym	chars,4,142,6,32
 12195                        	.sym	c,8,14,6,8
 12196                        	.line	1822
 12197 00:286F: D4 0C        	pei	<L658+c_0
 12198 00:2871: D4 0A        	pei	<L658+chars_0+2
 12199 00:2873: D4 08        	pei	<L658+chars_0
 12200 00:2875: AF 42 15 00  	lda	>5442
 12201 00:2879: 85 01        	sta	<R0
 12202 00:287B: AF 44 15 00  	lda	>5442+2
 12203 00:287F: 85 03        	sta	<R0+2
 12204 00:2881: A0 92 02     	ldy	#$292
 12205 00:2884: B7 01        	lda	[<R0],Y
 12206 00:2886: AA           	tax
 12207 00:2887: A0 90 02     	ldy	#$290
 12208 00:288A: B7 01        	lda	[<R0],Y
 12209                        	xref	~~~lcal
 12210 00:288C: 22 xx xx xx  	jsl	~~~lcal
 12211                        L661:
 12212 00:2890: A8           	tay
 12213 00:2891: A5 06        	lda	<L658+2
 12214 00:2893: 85 0C        	sta	<L658+2+6
 12215 00:2895: A5 05        	lda	<L658+1
 12216 00:2897: 85 0B        	sta	<L658+1+6
 12217 00:2899: 2B           	pld
 12218 00:289A: 3B           	tsc
 12219 00:289B: 18           	clc
 12220 00:289C: 69 0A 00     	adc	#L658+6
 12221 00:289F: 1B           	tcs
 12222 00:28A0: 98           	tya
 12223 00:28A1: 6B           	rtl
 12224                        ;}
 12225                        	.line	1823
 12226                        	.endblock	1823
 12227             00000004   L658	equ	4
 12228             00000005   L659	equ	5
 12229                        	ends
 12230                        	efunc
 12231                        	.endfunc	1823,5,4
 12232                        	.line	1823
 12233                        ;
 12234                        ;/*
 12235                        ;*
 12236                        ;* Name:FXStringEndWith
 12237                        ;* Subsystem:KERNEL
 12238                        ;*
 12239                        ;*/
 12240                        ;BOOL FXStringEndWith(PFXSTRING path,LPCSTR check)
 12241                        ;{
 12242                        	.line	1831
 12243                        	.line	1832
 12244                        	code
 12245                        	xdef	~~FXStringEndWith
 12246                        	func
 12247                        	.function	1832
 12248                        ~~FXStringEndWith:
 12249                        	longa	on
 12250                        	longi	on
 12251 00:28A2: 3B           	tsc
  Thu Jul 29 2021 22:56                                                Page 218


 12252 00:28A3: 38           	sec
 12253 00:28A4: E9 04 00     	sbc	#L662
 12254 00:28A7: 1B           	tcs
 12255 00:28A8: 0B           	phd
 12256 00:28A9: 5B           	tcd
 12257             00000004   path_0	set	4
 12258             00000008   check_0	set	8
 12259                        	.block	1832
 12260                        ;    return ((FXSTRINGENDWITH)CALL_KERNEL_API(EXPO
                    RT_KERNEL_FXSTRINGENDWITH))(path,check);
 12261                        	.sym	path,4,138,6,32,61
 12262                        	.sym	check,8,142,6,32
 12263                        	.line	1833
 12264 00:28AA: D4 0E        	pei	<L662+check_0+2
 12265 00:28AC: D4 0C        	pei	<L662+check_0
 12266 00:28AE: D4 0A        	pei	<L662+path_0+2
 12267 00:28B0: D4 08        	pei	<L662+path_0
 12268 00:28B2: AF 42 15 00  	lda	>5442
 12269 00:28B6: 85 01        	sta	<R0
 12270 00:28B8: AF 44 15 00  	lda	>5442+2
 12271 00:28BC: 85 03        	sta	<R0+2
 12272 00:28BE: A0 96 02     	ldy	#$296
 12273 00:28C1: B7 01        	lda	[<R0],Y
 12274 00:28C3: AA           	tax
 12275 00:28C4: A0 94 02     	ldy	#$294
 12276 00:28C7: B7 01        	lda	[<R0],Y
 12277                        	xref	~~~lcal
 12278 00:28C9: 22 xx xx xx  	jsl	~~~lcal
 12279 00:28CD: E2 20        	sep	#$20
 12280                        	longa	off
 12281 00:28CF: 85 01        	sta	<R0
 12282 00:28D1: C2 20        	rep	#$20
 12283                        	longa	on
 12284 00:28D3: A5 01        	lda	<R0
 12285 00:28D5: 29 FF 00     	and	#$ff
 12286                        L665:
 12287 00:28D8: A8           	tay
 12288 00:28D9: A5 06        	lda	<L662+2
 12289 00:28DB: 85 0E        	sta	<L662+2+8
 12290 00:28DD: A5 05        	lda	<L662+1
 12291 00:28DF: 85 0D        	sta	<L662+1+8
 12292 00:28E1: 2B           	pld
 12293 00:28E2: 3B           	tsc
 12294 00:28E3: 18           	clc
 12295 00:28E4: 69 0C 00     	adc	#L662+8
 12296 00:28E7: 1B           	tcs
 12297 00:28E8: 98           	tya
 12298 00:28E9: 6B           	rtl
 12299                        ;}
 12300                        	.line	1834
 12301                        	.endblock	1834
 12302             00000004   L662	equ	4
 12303             00000005   L663	equ	5
 12304                        	ends
 12305                        	efunc
 12306                        	.endfunc	1834,5,4
 12307                        	.line	1834
 12308                        ;
  Thu Jul 29 2021 22:56                                                Page 219


 12309                        ;/*
 12310                        ;*
 12311                        ;* Name:StringToUpper
 12312                        ;* Subsystem:KERNEL
 12313                        ;*
 12314                        ;*/
 12315                        ;LPCHAR StringToUpper(LPCHAR orgText)
 12316                        ;{
 12317                        	.line	1842
 12318                        	.line	1843
 12319                        	code
 12320                        	xdef	~~StringToUpper
 12321                        	func
 12322                        	.function	1843
 12323                        ~~StringToUpper:
 12324                        	longa	on
 12325                        	longi	on
 12326 00:28EA: 3B           	tsc
 12327 00:28EB: 38           	sec
 12328 00:28EC: E9 04 00     	sbc	#L666
 12329 00:28EF: 1B           	tcs
 12330 00:28F0: 0B           	phd
 12331 00:28F1: 5B           	tcd
 12332             00000004   orgText_0	set	4
 12333                        	.block	1843
 12334                        ;    return ((STRINGTOUPPER)CALL_KERNEL_API(EXPORT
                    _KERNEL_STRINGTOUPPER))(orgText);
 12335                        	.sym	orgText,4,142,6,32
 12336                        	.line	1844
 12337 00:28F2: D4 0A        	pei	<L666+orgText_0+2
 12338 00:28F4: D4 08        	pei	<L666+orgText_0
 12339 00:28F6: AF 42 15 00  	lda	>5442
 12340 00:28FA: 85 01        	sta	<R0
 12341 00:28FC: AF 44 15 00  	lda	>5442+2
 12342 00:2900: 85 03        	sta	<R0+2
 12343 00:2902: A0 9A 02     	ldy	#$29a
 12344 00:2905: B7 01        	lda	[<R0],Y
 12345 00:2907: AA           	tax
 12346 00:2908: A0 98 02     	ldy	#$298
 12347 00:290B: B7 01        	lda	[<R0],Y
 12348                        	xref	~~~lcal
 12349 00:290D: 22 xx xx xx  	jsl	~~~lcal
 12350 00:2911: 85 01        	sta	<R0
 12351 00:2913: 86 03        	stx	<R0+2
 12352 00:2915: A6 03        	ldx	<R0+2
 12353 00:2917: A5 01        	lda	<R0
 12354                        L669:
 12355 00:2919: A8           	tay
 12356 00:291A: A5 06        	lda	<L666+2
 12357 00:291C: 85 0A        	sta	<L666+2+4
 12358 00:291E: A5 05        	lda	<L666+1
 12359 00:2920: 85 09        	sta	<L666+1+4
 12360 00:2922: 2B           	pld
 12361 00:2923: 3B           	tsc
 12362 00:2924: 18           	clc
 12363 00:2925: 69 08 00     	adc	#L666+4
 12364 00:2928: 1B           	tcs
 12365 00:2929: 98           	tya
  Thu Jul 29 2021 22:56                                                Page 220


 12366 00:292A: 6B           	rtl
 12367                        ;}
 12368                        	.line	1845
 12369                        	.endblock	1845
 12370             00000004   L666	equ	4
 12371             00000005   L667	equ	5
 12372                        	ends
 12373                        	efunc
 12374                        	.endfunc	1845,5,4
 12375                        	.line	1845
 12376                        ;
 12377                        ;/*
 12378                        ;*
 12379                        ;* Name:StringToLower
 12380                        ;* Subsystem:KERNEL
 12381                        ;*
 12382                        ;*/
 12383                        ;LPCHAR StringToLower(LPCHAR orgText)
 12384                        ;{
 12385                        	.line	1853
 12386                        	.line	1854
 12387                        	code
 12388                        	xdef	~~StringToLower
 12389                        	func
 12390                        	.function	1854
 12391                        ~~StringToLower:
 12392                        	longa	on
 12393                        	longi	on
 12394 00:292B: 3B           	tsc
 12395 00:292C: 38           	sec
 12396 00:292D: E9 04 00     	sbc	#L670
 12397 00:2930: 1B           	tcs
 12398 00:2931: 0B           	phd
 12399 00:2932: 5B           	tcd
 12400             00000004   orgText_0	set	4
 12401                        	.block	1854
 12402                        ;    return ((STRINGTOLOWER)CALL_KERNEL_API(EXPORT
                    _KERNEL_STRINGTOLOWER))(orgText);
 12403                        	.sym	orgText,4,142,6,32
 12404                        	.line	1855
 12405 00:2933: D4 0A        	pei	<L670+orgText_0+2
 12406 00:2935: D4 08        	pei	<L670+orgText_0
 12407 00:2937: AF 42 15 00  	lda	>5442
 12408 00:293B: 85 01        	sta	<R0
 12409 00:293D: AF 44 15 00  	lda	>5442+2
 12410 00:2941: 85 03        	sta	<R0+2
 12411 00:2943: A0 9E 02     	ldy	#$29e
 12412 00:2946: B7 01        	lda	[<R0],Y
 12413 00:2948: AA           	tax
 12414 00:2949: A0 9C 02     	ldy	#$29c
 12415 00:294C: B7 01        	lda	[<R0],Y
 12416                        	xref	~~~lcal
 12417 00:294E: 22 xx xx xx  	jsl	~~~lcal
 12418 00:2952: 85 01        	sta	<R0
 12419 00:2954: 86 03        	stx	<R0+2
 12420 00:2956: A6 03        	ldx	<R0+2
 12421 00:2958: A5 01        	lda	<R0
 12422                        L673:
  Thu Jul 29 2021 22:56                                                Page 221


 12423 00:295A: A8           	tay
 12424 00:295B: A5 06        	lda	<L670+2
 12425 00:295D: 85 0A        	sta	<L670+2+4
 12426 00:295F: A5 05        	lda	<L670+1
 12427 00:2961: 85 09        	sta	<L670+1+4
 12428 00:2963: 2B           	pld
 12429 00:2964: 3B           	tsc
 12430 00:2965: 18           	clc
 12431 00:2966: 69 08 00     	adc	#L670+4
 12432 00:2969: 1B           	tcs
 12433 00:296A: 98           	tya
 12434 00:296B: 6B           	rtl
 12435                        ;}
 12436                        	.line	1856
 12437                        	.endblock	1856
 12438             00000004   L670	equ	4
 12439             00000005   L671	equ	5
 12440                        	ends
 12441                        	efunc
 12442                        	.endfunc	1856,5,4
 12443                        	.line	1856
 12444                        ;
 12445                        ;/*
 12446                        ;*
 12447                        ;* Name:StringDate
 12448                        ;* Subsystem:KERNEL
 12449                        ;*
 12450                        ;*/
 12451                        ;LPCSTR StringDate(LPCHAR buffer)
 12452                        ;{
 12453                        	.line	1864
 12454                        	.line	1865
 12455                        	code
 12456                        	xdef	~~StringDate
 12457                        	func
 12458                        	.function	1865
 12459                        ~~StringDate:
 12460                        	longa	on
 12461                        	longi	on
 12462 00:296C: 3B           	tsc
 12463 00:296D: 38           	sec
 12464 00:296E: E9 04 00     	sbc	#L674
 12465 00:2971: 1B           	tcs
 12466 00:2972: 0B           	phd
 12467 00:2973: 5B           	tcd
 12468             00000004   buffer_0	set	4
 12469                        	.block	1865
 12470                        ;    return ((STRINGDATE)CALL_KERNEL_API(EXPORT_KE
                    RNEL_STRINGDATE))(buffer);
 12471                        	.sym	buffer,4,142,6,32
 12472                        	.line	1866
 12473 00:2974: D4 0A        	pei	<L674+buffer_0+2
 12474 00:2976: D4 08        	pei	<L674+buffer_0
 12475 00:2978: AF 42 15 00  	lda	>5442
 12476 00:297C: 85 01        	sta	<R0
 12477 00:297E: AF 44 15 00  	lda	>5442+2
 12478 00:2982: 85 03        	sta	<R0+2
 12479 00:2984: A0 A2 02     	ldy	#$2a2
  Thu Jul 29 2021 22:56                                                Page 222


 12480 00:2987: B7 01        	lda	[<R0],Y
 12481 00:2989: AA           	tax
 12482 00:298A: A0 A0 02     	ldy	#$2a0
 12483 00:298D: B7 01        	lda	[<R0],Y
 12484                        	xref	~~~lcal
 12485 00:298F: 22 xx xx xx  	jsl	~~~lcal
 12486 00:2993: 85 01        	sta	<R0
 12487 00:2995: 86 03        	stx	<R0+2
 12488 00:2997: A6 03        	ldx	<R0+2
 12489 00:2999: A5 01        	lda	<R0
 12490                        L677:
 12491 00:299B: A8           	tay
 12492 00:299C: A5 06        	lda	<L674+2
 12493 00:299E: 85 0A        	sta	<L674+2+4
 12494 00:29A0: A5 05        	lda	<L674+1
 12495 00:29A2: 85 09        	sta	<L674+1+4
 12496 00:29A4: 2B           	pld
 12497 00:29A5: 3B           	tsc
 12498 00:29A6: 18           	clc
 12499 00:29A7: 69 08 00     	adc	#L674+4
 12500 00:29AA: 1B           	tcs
 12501 00:29AB: 98           	tya
 12502 00:29AC: 6B           	rtl
 12503                        ;}
 12504                        	.line	1867
 12505                        	.endblock	1867
 12506             00000004   L674	equ	4
 12507             00000005   L675	equ	5
 12508                        	ends
 12509                        	efunc
 12510                        	.endfunc	1867,5,4
 12511                        	.line	1867
 12512                        ;
 12513                        ;/*
 12514                        ;*
 12515                        ;* Name:StringLocalTime
 12516                        ;* Subsystem:KERNEL
 12517                        ;*
 12518                        ;*/
 12519                        ;LPCSTR StringLocalTime(LPCHAR buffer)
 12520                        ;{
 12521                        	.line	1875
 12522                        	.line	1876
 12523                        	code
 12524                        	xdef	~~StringLocalTime
 12525                        	func
 12526                        	.function	1876
 12527                        ~~StringLocalTime:
 12528                        	longa	on
 12529                        	longi	on
 12530 00:29AD: 3B           	tsc
 12531 00:29AE: 38           	sec
 12532 00:29AF: E9 04 00     	sbc	#L678
 12533 00:29B2: 1B           	tcs
 12534 00:29B3: 0B           	phd
 12535 00:29B4: 5B           	tcd
 12536             00000004   buffer_0	set	4
 12537                        	.block	1876
  Thu Jul 29 2021 22:56                                                Page 223


 12538                        ;    return ((STRINGLOCALTIME)CALL_KERNEL_API(EXPO
                    RT_KERNEL_STRINGLOCALTIME))(buffer);
 12539                        	.sym	buffer,4,142,6,32
 12540                        	.line	1877
 12541 00:29B5: D4 0A        	pei	<L678+buffer_0+2
 12542 00:29B7: D4 08        	pei	<L678+buffer_0
 12543 00:29B9: AF 42 15 00  	lda	>5442
 12544 00:29BD: 85 01        	sta	<R0
 12545 00:29BF: AF 44 15 00  	lda	>5442+2
 12546 00:29C3: 85 03        	sta	<R0+2
 12547 00:29C5: A0 A6 02     	ldy	#$2a6
 12548 00:29C8: B7 01        	lda	[<R0],Y
 12549 00:29CA: AA           	tax
 12550 00:29CB: A0 A4 02     	ldy	#$2a4
 12551 00:29CE: B7 01        	lda	[<R0],Y
 12552                        	xref	~~~lcal
 12553 00:29D0: 22 xx xx xx  	jsl	~~~lcal
 12554 00:29D4: 85 01        	sta	<R0
 12555 00:29D6: 86 03        	stx	<R0+2
 12556 00:29D8: A6 03        	ldx	<R0+2
 12557 00:29DA: A5 01        	lda	<R0
 12558                        L681:
 12559 00:29DC: A8           	tay
 12560 00:29DD: A5 06        	lda	<L678+2
 12561 00:29DF: 85 0A        	sta	<L678+2+4
 12562 00:29E1: A5 05        	lda	<L678+1
 12563 00:29E3: 85 09        	sta	<L678+1+4
 12564 00:29E5: 2B           	pld
 12565 00:29E6: 3B           	tsc
 12566 00:29E7: 18           	clc
 12567 00:29E8: 69 08 00     	adc	#L678+4
 12568 00:29EB: 1B           	tcs
 12569 00:29EC: 98           	tya
 12570 00:29ED: 6B           	rtl
 12571                        ;}
 12572                        	.line	1878
 12573                        	.endblock	1878
 12574             00000004   L678	equ	4
 12575             00000005   L679	equ	5
 12576                        	ends
 12577                        	efunc
 12578                        	.endfunc	1878,5,4
 12579                        	.line	1878
 12580                        ;
 12581                        ;/*
 12582                        ;*
 12583                        ;* Name:StringLocalHourMinute
 12584                        ;* Subsystem:KERNEL
 12585                        ;*
 12586                        ;*/
 12587                        ;LPCSTR StringLocalHourMinute(LPCHAR buffer)
 12588                        ;{
 12589                        	.line	1886
 12590                        	.line	1887
 12591                        	code
 12592                        	xdef	~~StringLocalHourMinute
 12593                        	func
 12594                        	.function	1887
  Thu Jul 29 2021 22:56                                                Page 224


 12595                        ~~StringLocalHourMinute:
 12596                        	longa	on
 12597                        	longi	on
 12598 00:29EE: 3B           	tsc
 12599 00:29EF: 38           	sec
 12600 00:29F0: E9 04 00     	sbc	#L682
 12601 00:29F3: 1B           	tcs
 12602 00:29F4: 0B           	phd
 12603 00:29F5: 5B           	tcd
 12604             00000004   buffer_0	set	4
 12605                        	.block	1887
 12606                        ;    return ((STRINGLOCALHOURMINUTE)CALL_KERNEL_AP
                    I(EXPORT_KERNEL_STRINGLOCALHOURMINUTE))(buffer);
 12607                        	.sym	buffer,4,142,6,32
 12608                        	.line	1888
 12609 00:29F6: D4 0A        	pei	<L682+buffer_0+2
 12610 00:29F8: D4 08        	pei	<L682+buffer_0
 12611 00:29FA: AF 42 15 00  	lda	>5442
 12612 00:29FE: 85 01        	sta	<R0
 12613 00:2A00: AF 44 15 00  	lda	>5442+2
 12614 00:2A04: 85 03        	sta	<R0+2
 12615 00:2A06: A0 AA 02     	ldy	#$2aa
 12616 00:2A09: B7 01        	lda	[<R0],Y
 12617 00:2A0B: AA           	tax
 12618 00:2A0C: A0 A8 02     	ldy	#$2a8
 12619 00:2A0F: B7 01        	lda	[<R0],Y
 12620                        	xref	~~~lcal
 12621 00:2A11: 22 xx xx xx  	jsl	~~~lcal
 12622 00:2A15: 85 01        	sta	<R0
 12623 00:2A17: 86 03        	stx	<R0+2
 12624 00:2A19: A6 03        	ldx	<R0+2
 12625 00:2A1B: A5 01        	lda	<R0
 12626                        L685:
 12627 00:2A1D: A8           	tay
 12628 00:2A1E: A5 06        	lda	<L682+2
 12629 00:2A20: 85 0A        	sta	<L682+2+4
 12630 00:2A22: A5 05        	lda	<L682+1
 12631 00:2A24: 85 09        	sta	<L682+1+4
 12632 00:2A26: 2B           	pld
 12633 00:2A27: 3B           	tsc
 12634 00:2A28: 18           	clc
 12635 00:2A29: 69 08 00     	adc	#L682+4
 12636 00:2A2C: 1B           	tcs
 12637 00:2A2D: 98           	tya
 12638 00:2A2E: 6B           	rtl
 12639                        ;}
 12640                        	.line	1889
 12641                        	.endblock	1889
 12642             00000004   L682	equ	4
 12643             00000005   L683	equ	5
 12644                        	ends
 12645                        	efunc
 12646                        	.endfunc	1889,5,4
 12647                        	.line	1889
 12648                        ;
 12649                        ;
 12650                        ;
 12651                        	.line	1891
  Thu Jul 29 2021 22:56                                                Page 225


 12652                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOS-Beta\src\FXOS_KERNEL_SDK.c",1886
 12653                        	.sym	~~StringLocalHourMinute,~~StringLocalHou
                    rMinute,1102,2,32
 12654                        	.sym	STRINGLOCALHOURMINUTE,0,8846,14,32
 12655                        	.sym	~~StringLocalTime,~~StringLocalTime,1102
                    ,2,32
 12656                        	.sym	STRINGLOCALTIME,0,8846,14,32
 12657                        	.sym	~~StringDate,~~StringDate,1102,2,32
 12658                        	.sym	STRINGDATE,0,8846,14,32
 12659                        	.sym	~~StringToLower,~~StringToLower,1102,2,3
                    2
 12660                        	.sym	STRINGTOLOWER,0,8846,14,32
 12661                        	.sym	~~StringToUpper,~~StringToUpper,1102,2,3
                    2
 12662                        	.sym	STRINGTOUPPER,0,8846,14,32
 12663                        	.sym	~~FXStringEndWith,~~FXStringEndWith,78,2
                    ,0
 12664                        	.sym	FXSTRINGENDWITH,0,654,14,32
 12665                        	.sym	~~StringIndexOf,~~StringIndexOf,69,2,0
 12666                        	.sym	STRINGINDEXOF,0,645,14,32
 12667                        	.sym	~~StringReplace,~~StringReplace,1102,2,3
                    2
 12668                        	.sym	STRINGREPLACE,0,8846,14,32
 12669                        	.sym	~~StringTrim,~~StringTrim,1102,2,32
 12670                        	.sym	STRINGTRIM,0,8846,14,32
 12671                        	.sym	~~StringLTrim,~~StringLTrim,1102,2,32
 12672                        	.sym	STRINGLTRIM,0,8846,14,32
 12673                        	.sym	~~StringRTrim,~~StringRTrim,1102,2,32
 12674                        	.sym	STRINGRTRIM,0,8846,14,32
 12675                        	.sym	~~StringCopy,~~StringCopy,1102,2,32
 12676                        	.sym	STRINGCOPY,0,8846,14,32
 12677                        	.sym	~~StringConCat,~~StringConCat,1102,2,32
 12678                        	.sym	STRINGCONCAT,0,8846,14,32
 12679                        	.sym	~~StringReverse,~~StringReverse,65,2,0
 12680                        	.sym	STRINGREVERSE,0,641,14,32
 12681                        	.sym	~~StringPad,~~StringPad,1102,2,32
 12682                        	.sym	STRINGPAD,0,8846,14,32
 12683                        	.sym	~~StringItoA,~~StringItoA,1102,2,32
 12684                        	.sym	STRINGITOA,0,8846,14,32
 12685                        	.sym	~~StringfromChar,~~StringfromChar,1102,2
                    ,32
 12686                        	.sym	STRINGFROMCHAR,0,8846,14,32
 12687                        	.sym	~~StringLastIndexOf,~~StringLastIndexOf,
                    80,2,0
 12688                        	.sym	STRINGLASTINDEXOF,0,656,14,32
 12689                        	.sym	~~StringFirstIndexOf,~~StringFirstIndexO
                    f,80,2,0
 12690                        	.sym	STRINGFIRSTINDEXOF,0,656,14,32
 12691                        	.sym	~~StringCopyToDelimiter,~~StringCopyToDe
                    limiter,1102,2,32
 12692                        	.sym	STRINGCOPYTODELIMITER,0,8846,14,32
 12693                        	.sym	~~StringfromPointer,~~StringfromPointer,
                    1102,2,32
 12694                        	.sym	STRINGFROMPOINTER,0,8846,14,32
 12695                        	.sym	~~StringAppendInt,~~StringAppendInt,1102
                    ,2,32
 12696                        	.sym	STRINGAPPENDINT,0,8846,14,32
  Thu Jul 29 2021 22:56                                                Page 226


 12697                        	.sym	~~StringLongToSize,~~StringLongToSize,11
                    02,2,32
 12698                        	.sym	STRINGLONGTOSIZE,0,8846,14,32
 12699                        	.sym	~~StringLongToDec,~~StringLongToDec,1102
                    ,2,32
 12700                        	.sym	STRINGLONGTODEC,0,8846,14,32
 12701                        	.sym	~~StringIntToDec,~~StringIntToDec,1102,2
                    ,32
 12702                        	.sym	STRINGINTTODEC,0,8846,14,32
 12703                        	.sym	~~StringByteToDec,~~StringByteToDec,1102
                    ,2,32
 12704                        	.sym	STRINGBYTETODEC,0,8846,14,32
 12705                        	.sym	~~StringByteToHex,~~StringByteToHex,1102
                    ,2,32
 12706                        	.sym	STRINGBYTETOHEX,0,8846,14,32
 12707                        	.sym	~~StringReplacePaddingUntil,~~StringRepl
                    acePaddingUntil,1102,2,32
 12708                        	.sym	STRINGREPLACEPADDINGUNTIL,0,8846,14,32
 12709                        	.sym	~~StringReplacePadding,~~StringReplacePa
                    dding,1102,2,32
 12710                        	.sym	STRINGREPLACEPADDING,0,8846,14,32
 12711                        	.sym	~~StringStripPadding,~~StringStripPaddin
                    g,1102,2,32
 12712                        	.sym	STRINGSTRIPPADDING,0,8846,14,32
 12713                        	.sym	~~FXStringAppendHex,~~FXStringAppendHex,
                    1098,2,32,61
 12714                        	.sym	FXSTRINGAPPENDHEX,0,8842,14,32,61
 12715                        	.sym	~~FXStringAppendLong,~~FXStringAppendLon
                    g,1098,2,32,61
 12716                        	.sym	FXSTRINGAPPENDLONG,0,8842,14,32,61
 12717                        	.sym	~~FXStringAppendInteger,~~FXStringAppend
                    Integer,1098,2,32,61
 12718                        	.sym	FXSTRINGAPPENDINTEGER,0,8842,14,32,61
 12719                        	.sym	~~FXStringEquals,~~FXStringEquals,78,2,0
 12720                        	.sym	FXSTRINGEQUALS,0,654,14,32
 12721                        	.sym	~~FXStringFromLong,~~FXStringFromLong,10
                    98,2,32,61
 12722                        	.sym	FXSTRINGFROMLONG,0,8842,14,32,61
 12723                        	.sym	~~FXStringCopyToString,~~FXStringCopyToS
                    tring,1102,2,32
 12724                        	.sym	FXSTRINGCOPYTOSTRING,0,8846,14,32
 12725                        	.sym	~~FXStringCharAt,~~FXStringCharAt,78,2,0
 12726                        	.sym	FXSTRINGCHARAT,0,654,14,32
 12727                        	.sym	~~FXStringAsString,~~FXStringAsString,11
                    02,2,32
 12728                        	.sym	FXSTRINGASSTRING,0,8846,14,32
 12729                        	.sym	~~FXStringAddFXString,~~FXStringAddFXStr
                    ing,80,2,0
 12730                        	.sym	FXSTRINGADDFXSTRING,0,656,14,32
 12731                        	.sym	~~FXStringAddString,~~FXStringAddString,
                    1102,2,32
 12732                        	.sym	FXSTRINGADDSTRING,0,8846,14,32
 12733                        	.sym	~~FXStringRemoveChar,~~FXStringRemoveCha
                    r,78,2,0
 12734                        	.sym	FXSTRINGREMOVECHAR,0,654,14,32
 12735                        	.sym	~~FXStringAddChar,~~FXStringAddChar,1102
                    ,2,32
 12736                        	.sym	FXSTRINGADDCHAR,0,8846,14,32
  Thu Jul 29 2021 22:56                                                Page 227


 12737                        	.sym	~~FXStringIndex,~~FXStringIndex,80,2,0
 12738                        	.sym	FXSTRINGINDEX,0,656,14,32
 12739                        	.sym	~~FXStringSize,~~FXStringSize,80,2,0
 12740                        	.sym	FXSTRINGSIZE,0,656,14,32
 12741                        	.sym	~~FXStringLength,~~FXStringLength,80,2,0
 12742                        	.sym	FXSTRINGLENGTH,0,656,14,32
 12743                        	.sym	~~FXStringFree,~~FXStringFree,65,2,0
 12744                        	.sym	FXSTRINGFREE,0,641,14,32
 12745                        	.sym	~~FXStringReinit,~~FXStringReinit,1098,2
                    ,32,61
 12746                        	.sym	FXSTRINGREINIT,0,8842,14,32,61
 12747                        	.sym	~~FXStringNew,~~FXStringNew,1098,2,32,61
 12748                        	.sym	FXSTRINGNEW,0,8842,14,32,61
 12749                        	.sym	~~FXStringInit,~~FXStringInit,1098,2,32,
                    61
 12750                        	.sym	FXSTRINGINIT,0,8842,14,32,61
 12751                        	.sym	~~NodeListForeachRemove,~~NodeListForeac
                    hRemove,65,2,0
 12752                        	.sym	NODELISTFOREACHREMOVE,0,641,14,32
 12753                        	.sym	~~NodeListForeachUntilListData,~~NodeLis
                    tForeachUntilListData,1098,2,32,5
 12754                        	.sym	NODELISTFOREACHUNTILLISTDATA,0,8842,14,3
                    2,5
 12755                        	.sym	~~NodeListForeachListData,~~NodeListFore
                    achListData,65,2,0
 12756                        	.sym	NODELISTFOREACHLISTDATA,0,641,14,32
 12757                        	.sym	~~NodeListForEachType,~~NodeListForEachT
                    ype,65,2,0
 12758                        	.sym	NODELISTFOREACHTYPE,0,641,14,32
 12759                        	.sym	~~NodeListForEachUntil,~~NodeListForEach
                    Until,1098,2,32,5
 12760                        	.sym	NODELISTFOREACHUNTIL,0,8842,14,32,5
 12761                        	.sym	~~NodeListForEach,~~NodeListForEach,65,2
                    ,0
 12762                        	.sym	NODELISTFOREACH,0,641,14,32
 12763                        	.sym	~~NodeListRemoveNode,~~NodeListRemoveNod
                    e,1098,2,32,5
 12764                        	.sym	NODELISTREMOVENODE,0,8842,14,32,5
 12765                        	.sym	~~NodeListIsEmpty,~~NodeListIsEmpty,78,2
                    ,0
 12766                        	.sym	NODELISTISEMPTY,0,654,14,32
 12767                        	.sym	~~NodeListGetFirst,~~NodeListGetFirst,10
                    98,2,32,5
 12768                        	.sym	NODELISTGETFIRST,0,8842,14,32,5
 12769                        	.sym	~~NodeListGetName,~~NodeListGetName,1102
                    ,2,32
 12770                        	.sym	NODELISTGETNAME,0,8846,14,32
 12771                        	.sym	~~NodeListFindByType,~~NodeListFindByTyp
                    e,1098,2,32,5
 12772                        	.sym	NODELISTFINDBYTYPE,0,8842,14,32,5
 12773                        	.sym	~~NodeListFindById,~~NodeListFindById,10
                    98,2,32,5
 12774                        	.sym	NODELISTFINDBYID,0,8842,14,32,5
 12775                        	.sym	~~NodeListFindByName,~~NodeListFindByNam
                    e,1098,2,32,5
 12776                        	.sym	NODELISTFINDBYNAME,0,8842,14,32,5
 12777                        	.sym	~~NodeListClear,~~NodeListClear,1098,2,3
                    2,6
  Thu Jul 29 2021 22:56                                                Page 228


 12778                        	.sym	NODELISTCLEAR,0,8842,14,32,6
 12779                        	.sym	~~NodeListAddNode,~~NodeListAddNode,1098
                    ,2,32,5
 12780                        	.sym	NODELISTADDNODE,0,8842,14,32,5
 12781                        	.sym	~~NodeListAddById,~~NodeListAddById,1098
                    ,2,32,5
 12782                        	.sym	NODELISTADDBYID,0,8842,14,32,5
 12783                        	.sym	~~NodeListAddFirstByName,~~NodeListAddFi
                    rstByName,1098,2,32,5
 12784                        	.sym	NODELISTADDFIRSTBYNAME,0,8842,14,32,5
 12785                        	.sym	~~NodeListAddFirstById,~~NodeListAddFirs
                    tById,1098,2,32,5
 12786                        	.sym	NODELISTADDFIRSTBYID,0,8842,14,32,5
 12787                        	.sym	~~NodeListAddByName,~~NodeListAddByName,
                    1098,2,32,5
 12788                        	.sym	NODELISTADDBYNAME,0,8842,14,32,5
 12789                        	.sym	~~NodeListDealloc,~~NodeListDealloc,65,2
                    ,0
 12790                        	.sym	NODELISTDEALLOC,0,641,14,32
 12791                        	.sym	~~NodeListAlloc,~~NodeListAlloc,1098,2,3
                    2,6
 12792                        	.sym	NODELISTALLOC,0,8842,14,32,6
 12793                        	.sym	~~NodesGetLast,~~NodesGetLast,1098,2,32,
                    5
 12794                        	.sym	NODESGETLAST,0,8842,14,32,5
 12795                        	.sym	~~NodesRemoveById,~~NodesRemoveById,1098
                    ,2,32,5
 12796                        	.sym	NODESREMOVEBYID,0,8842,14,32,5
 12797                        	.sym	~~NodesRemoveNode,~~NodesRemoveNode,1098
                    ,2,32,5
 12798                        	.sym	NODESREMOVENODE,0,8842,14,32,5
 12799                        	.sym	~~NodesRemoveByName,~~NodesRemoveByName,
                    1098,2,32,5
 12800                        	.sym	NODESREMOVEBYNAME,0,8842,14,32,5
 12801                        	.sym	~~NodesGetNameAndType,~~NodesGetNameAndT
                    ype,1098,2,32,5
 12802                        	.sym	NODESGETNAMEANDTYPE,0,8842,14,32,5
 12803                        	.sym	~~NodesGetName,~~NodesGetName,1098,2,32,
                    5
 12804                        	.sym	NODESGETNAME,0,8842,14,32,5
 12805                        	.sym	~~NodesGet,~~NodesGet,1098,2,32,5
 12806                        	.sym	NODESGET,0,8842,14,32,5
 12807                        	.sym	~~NodesGetType,~~NodesGetType,1098,2,32,
                    5
 12808                        	.sym	NODESGETTYPE,0,8842,14,32,5
 12809                        	.sym	~~NodesAddToHead,~~NodesAddToHead,65,2,0
 12810                        	.sym	NODESADDTOHEAD,0,641,14,32
 12811                        	.sym	~~NodesAddNode,~~NodesAddNode,65,2,0
 12812                        	.sym	NODESADDNODE,0,641,14,32
 12813                        	.sym	~~NodesCopyNode,~~NodesCopyNode,1098,2,3
                    2,5
 12814                        	.sym	NODESCOPYNODE,0,8842,14,32,5
 12815                        	.sym	~~NodesCreateById,~~NodesCreateById,1098
                    ,2,32,5
 12816                        	.sym	NODESCREATEBYID,0,8842,14,32,5
 12817                        	.sym	~~NodesCreateByName,~~NodesCreateByName,
                    1098,2,32,5
 12818                        	.sym	NODESCREATEBYNAME,0,8842,14,32,5
  Thu Jul 29 2021 22:56                                                Page 229


 12819                        	.sym	~~NodesInit,~~NodesInit,1098,2,32,5
 12820                        	.sym	NODESINIT,0,8842,14,32,5
 12821                        	.sym	~~QueueRemoveWithLock,~~QueueRemoveWithL
                    ock,1089,2,32
 12822                        	.sym	QUEUEREMOVEWITHLOCK,0,8833,14,32
 12823                        	.sym	~~QueueAddWithLock,~~QueueAddWithLock,65
                    ,2,0
 12824                        	.sym	QUEUEADDWITHLOCK,0,641,14,32
 12825                        	.sym	~~QueueRemove,~~QueueRemove,1089,2,32
 12826                        	.sym	QUEUEREMOVE,0,8833,14,32
 12827                        	.sym	~~QueueAdd,~~QueueAdd,78,2,0
 12828                        	.sym	QUEUEADD,0,654,14,32
 12829                        	.sym	~~QueueIsEmpty,~~QueueIsEmpty,69,2,0
 12830                        	.sym	QUEUEISEMPTY,0,645,14,32
 12831                        	.sym	~~QueueInitialize,~~QueueInitialize,65,2
                    ,0
 12832                        	.sym	QUEUEINITIALIZE,0,641,14,32
 12833                        	.sym	~~SetMemoryBlockUser,~~SetMemoryBlockUse
                    r,78,2,0
 12834                        	.sym	SETMEMORYBLOCKUSER,0,654,14,32
 12835                        	.sym	~~SetMemoryBlockVirtual,~~SetMemoryBlock
                    Virtual,1089,2,32
 12836                        	.sym	SETMEMORYBLOCKVIRTUAL,0,8833,14,32
 12837                        	.sym	~~IPCWriteLongPort,~~IPCWriteLongPort,65
                    ,2,0
 12838                        	.sym	IPCWRITELONGPORT,0,641,14,32
 12839                        	.sym	~~IPCWriteIntegerPort,~~IPCWriteIntegerP
                    ort,65,2,0
 12840                        	.sym	IPCWRITEINTEGERPORT,0,641,14,32
 12841                        	.sym	~~IPCWriteVerbPort,~~IPCWriteVerbPort,65
                    ,2,0
 12842                        	.sym	IPCWRITEVERBPORT,0,641,14,32
 12843                        	.sym	~~IPCWriteBytePort,~~IPCWriteBytePort,65
                    ,2,0
 12844                        	.sym	IPCWRITEBYTEPORT,0,641,14,32
 12845                        	.sym	~~IPCWritePort,~~IPCWritePort,80,2,0
 12846                        	.sym	IPCWRITEPORT,0,656,14,32
 12847                        	.sym	~~IPCPeekPort,~~IPCPeekPort,1089,2,32
 12848                        	.sym	IPCPEEKPORT,0,8833,14,32
 12849                        	.sym	~~IPCReadPort,~~IPCReadPort,1089,2,32
 12850                        	.sym	IPCREADPORT,0,8833,14,32
 12851                        	.sym	~~IPCClosePort,~~IPCClosePort,65,2,0
 12852                        	.sym	IPCCLOSEPORT,0,641,14,32
 12853                        	.sym	~~IPCGetPort,~~IPCGetPort,1098,2,32,65
 12854                        	.sym	IPCGETPORT,0,8842,14,32,65
 12855                        	.sym	~~IPCOpenPort,~~IPCOpenPort,1098,2,32,65
 12856                        	.sym	IPCOPENPORT,0,8842,14,32,65
 12857                        	.sym	~~GetSegmentInfo,~~GetSegmentInfo,1089,2
                    ,32
 12858                        	.sym	GETSEGMENTINFO,0,8833,14,32
 12859                        	.sym	~~SegmentUnload,~~SegmentUnload,65,2,0
 12860                        	.sym	SEGMENTUNLOAD,0,641,14,32
 12861                        	.sym	~~SegmentUnlock,~~SegmentUnlock,78,2,0
 12862                        	.sym	SEGMENTUNLOCK,0,654,14,32
 12863                        	.sym	~~SegmentLock,~~SegmentLock,1089,2,32
 12864                        	.sym	SEGMENTLOCK,0,8833,14,32
 12865                        	.sym	~~SegmentLoad,~~SegmentLoad,1089,2,32
 12866                        	.sym	SEGMENTLOAD,0,8833,14,32
  Thu Jul 29 2021 22:56                                                Page 230


 12867                        	.sym	~~HeapDealloc,~~HeapDealloc,65,2,0
 12868                        	.sym	HEAPDEALLOC,0,641,14,32
 12869                        	.sym	~~HeapAlloc,~~HeapAlloc,1089,2,32
 12870                        	.sym	HEAPALLOC,0,8833,14,32
 12871                        	.sym	~~MemoryUnlock,~~MemoryUnlock,65,2,0
 12872                        	.sym	MEMORYUNLOCK,0,641,14,32
 12873                        	.sym	~~MemoryLock,~~MemoryLock,1089,2,32
 12874                        	.sym	MEMORYLOCK,0,8833,14,32
 12875                        	.sym	~~MemoryDealloc,~~MemoryDealloc,65,2,0
 12876                        	.sym	MEMORYDEALLOC,0,641,14,32
 12877                        	.sym	~~MemoryAlloc,~~MemoryAlloc,1089,2,32
 12878                        	.sym	MEMORYALLOC,0,8833,14,32
 12879                        	.sym	~~MemoryCopy,~~MemoryCopy,1089,2,32
 12880                        	.sym	MEMORYCOPY,0,8833,14,32
 12881                        	.sym	~~GetHardwareRelease,~~GetHardwareReleas
                    e,65,2,0
 12882                        	.sym	GETHARDWARERELEASE,0,641,14,32
 12883                        	.sym	~~GetHardwareVersionMinor,~~GetHardwareV
                    ersionMinor,65,2,0
 12884                        	.sym	GETHARDWAREVERSIONMINOR,0,641,14,32
 12885                        	.sym	~~GetHardwareVersionMajor,~~GetHardwareV
                    ersionMajor,65,2,0
 12886                        	.sym	GETHARDWAREVERSIONMAJOR,0,641,14,32
 12887                        	.sym	~~GetFirmwareDateYear,~~GetFirmwareDateY
                    ear,65,2,0
 12888                        	.sym	GETFIRMWAREDATEYEAR,0,641,14,32
 12889                        	.sym	~~GetFirmwareDateMonth,~~GetFirmwareDate
                    Month,65,2,0
 12890                        	.sym	GETFIRMWAREDATEMONTH,0,641,14,32
 12891                        	.sym	~~GetFirmwareDateDay,~~GetFirmwareDateDa
                    y,65,2,0
 12892                        	.sym	GETFIRMWAREDATEDAY,0,641,14,32
 12893                        	.sym	~~GetRTCCentury,~~GetRTCCentury,80,2,0
 12894                        	.sym	GETRTCCENTURY,0,656,14,32
 12895                        	.sym	~~GetRTCYear,~~GetRTCYear,80,2,0
 12896                        	.sym	GETRTCYEAR,0,656,14,32
 12897                        	.sym	~~GetRTCDay,~~GetRTCDay,80,2,0
 12898                        	.sym	GETRTCDAY,0,656,14,32
 12899                        	.sym	~~GetRTCMonth,~~GetRTCMonth,80,2,0
 12900                        	.sym	GETRTCMONTH,0,656,14,32
 12901                        	.sym	~~GetRTCSecond,~~GetRTCSecond,80,2,0
 12902                        	.sym	GETRTCSECOND,0,656,14,32
 12903                        	.sym	~~GetRTCMinute,~~GetRTCMinute,80,2,0
 12904                        	.sym	GETRTCMINUTE,0,656,14,32
 12905                        	.sym	~~GetRTCHour,~~GetRTCHour,80,2,0
 12906                        	.sym	GETRTCHOUR,0,656,14,32
 12907                        	.sym	~~GetMilliseconds,~~GetMilliseconds,82,2
                    ,0
 12908                        	.sym	GETMILLISECONDS,0,658,14,32
 12909                        	.sym	~~DebugOff,~~DebugOff,65,2,0
 12910                        	.sym	DEBUGOFF,0,641,14,32
 12911                        	.sym	~~DebugOn,~~DebugOn,65,2,0
 12912                        	.sym	DEBUGON,0,641,14,32
 12913                        	.sym	~~DebugStatus,~~DebugStatus,78,2,0
 12914                        	.sym	DEBUGSTATUS,0,654,14,32
 12915                        	.sym	~~DebugNodesData,~~DebugNodesData,65,2,0
 12916                        	.sym	DEBUGNODESDATA,0,641,14,32
 12917                        	.sym	~~DebugNodeList,~~DebugNodeList,65,2,0
  Thu Jul 29 2021 22:56                                                Page 231


 12918                        	.sym	DEBUGNODELIST,0,641,14,32
 12919                        	.sym	~~DebugNodes,~~DebugNodes,65,2,0
 12920                        	.sym	DEBUGNODES,0,641,14,32
 12921                        	.sym	~~DebugNode,~~DebugNode,65,2,0
 12922                        	.sym	DEBUGNODE,0,641,14,32
 12923                        	.sym	~~DebugCrLf,~~DebugCrLf,65,2,0
 12924                        	.sym	DEBUGCRLF,0,641,14,32
 12925                        	.sym	~~DebugRect,~~DebugRect,65,2,0
 12926                        	.sym	DEBUGRECT,0,641,14,32
 12927                        	.sym	~~DebugNStrings,~~DebugNStrings,65,2,0
 12928                        	.sym	DEBUGNSTRINGS,0,641,14,32
 12929                        	.sym	~~DebugNMessage,~~DebugNMessage,65,2,0
 12930                        	.sym	DEBUGNMESSAGE,0,641,14,32
 12931                        	.sym	~~DebugStrings,~~DebugStrings,65,2,0
 12932                        	.sym	DEBUGSTRINGS,0,641,14,32
 12933                        	.sym	~~DebugMessage,~~DebugMessage,65,2,0
 12934                        	.sym	DEBUGMESSAGE,0,641,14,32
 12935                        	.sym	~~DebugByteArray,~~DebugByteArray,65,2,0
 12936                        	.sym	DEBUGBYTEARRAY,0,641,14,32
 12937                        	.sym	~~DebugBits,~~DebugBits,65,2,0
 12938                        	.sym	DEBUGBITS,0,641,14,32
 12939                        	.sym	~~DebugHexChar,~~DebugHexChar,65,2,0
 12940                        	.sym	DEBUGHEXCHAR,0,641,14,32
 12941                        	.sym	~~DebugHex,~~DebugHex,65,2,0
 12942                        	.sym	DEBUGHEX,0,641,14,32
 12943                        	.sym	~~DebugLong,~~DebugLong,65,2,0
 12944                        	.sym	DEBUGLONG,0,641,14,32
 12945                        	.sym	~~DebugIntegerArray,~~DebugIntegerArray,
                    65,2,0
 12946                        	.sym	DEBUGINTEGERARRAY,0,641,14,32
 12947                        	.sym	~~DebugHexInteger,~~DebugHexInteger,65,2
                    ,0
 12948                        	.sym	DEBUGHEXINTEGER,0,641,14,32
 12949                        	.sym	~~DebugInteger,~~DebugInteger,65,2,0
 12950                        	.sym	DEBUGINTEGER,0,641,14,32
 12951                        	.sym	~~DebugPointer,~~DebugPointer,65,2,0
 12952                        	.sym	DEBUGPOINTER,0,641,14,32
 12953                        	.sym	~~DebugChar,~~DebugChar,65,2,0
 12954                        	.sym	DEBUGCHAR,0,641,14,32
 12955                        	.sym	~~DebugNString,~~DebugNString,65,2,0
 12956                        	.sym	DEBUGNSTRING,0,641,14,32
 12957                        	.sym	~~DebugOut,~~DebugOut,65,2,0
 12958                        	.sym	DEBUGOUT,0,641,14,32
 12959                        	.sym	~~ProcessSignal,~~ProcessSignal,78,2,0
 12960                        	.sym	PROCESSSIGNAL,0,654,14,32
 12961                        	.sym	~~ProcessWait,~~ProcessWait,78,2,0
 12962                        	.sym	PROCESSWAIT,0,654,14,32
 12963                        	.sym	~~ProcessStart,~~ProcessStart,78,2,0
 12964                        	.sym	PROCESSSTART,0,654,14,32
 12965                        	.sym	~~ProcessTerminate,~~ProcessTerminate,78
                    ,2,0
 12966                        	.sym	PROCESSTERMINATE,0,654,14,32
 12967                        	.sym	~~ProcessSleep,~~ProcessSleep,78,2,0
 12968                        	.sym	PROCESSSLEEP,0,654,14,32
 12969                        	.sym	~~GetCurrentProcess,~~GetCurrentProcess,
                    1098,2,32,20
 12970                        	.sym	GETCURRENTPROCESS,0,8842,14,32,20
 12971                        	.sym	~~CreateProcess,~~CreateProcess,1098,2,3
  Thu Jul 29 2021 22:56                                                Page 232


                    2,20
 12972                        	.sym	CREATEPROCESS,0,8842,14,32,20
 12973                        	.sym	~~LaunchProcess,~~LaunchProcess,1098,2,3
                    2,20
 12974                        	.sym	LAUNCHPROCESS,0,8842,14,32,20
 12975                        	.sym	~~GetProcessList,~~GetProcessList,9290,2
                    ,32,20
 12976                        	.sym	GETPROCESSLIST,0,74378,14,32,20
 12977                        	.sym	~~GetProcessByName,~~GetProcessByName,10
                    98,2,32,20
 12978                        	.sym	GETPROCESSBYNAME,0,8842,14,32,20
 12979                        	.sym	~~GetProcess,~~GetProcess,1098,2,32,20
 12980                        	.sym	GETPROCESS,0,8842,14,32,20
 12981                        	.sym	~~RaiseException,~~RaiseException,65,2,0
 12982                        	.sym	RAISEEXCEPTION,0,641,14,32
 12983                        	.sym	~~UnregisterIdleProc,~~UnregisterIdlePro
                    c,78,2,0
 12984                        	.sym	UNREGISTERIDLEPROC,0,654,14,32
 12985                        	.sym	~~RegisterIdleProc,~~RegisterIdleProc,10
                    89,2,32
 12986                        	.sym	REGISTERIDLEPROC,0,8833,14,32
 12987                        	.sym	~~SendProcessMessage,~~SendProcessMessag
                    e,78,2,0
 12988                        	.sym	SENDPROCESSMESSAGE,0,654,14,32
 12989                        	.sym	~~SendCommandMessage,~~SendCommandMessag
                    e,78,2,0
 12990                        	.sym	SENDCOMMANDMESSAGE,0,654,14,32
 12991                        	.sym	~~SendWindowMessage,~~SendWindowMessage,
                    78,2,0
 12992                        	.sym	SENDWINDOWMESSAGE,0,654,14,32
 12993                        	.sym	~~SendMessage,~~SendMessage,78,2,0
 12994                        	.sym	SENDMESSAGE,0,654,14,32
 12995                        	.sym	FRESULT,0,5,14,16
 12996                        	.sym	MKFS_PARM,0,10,14,80,89
 12997                        	.sym	FILINFO,0,10,14,2224,88
 12998                        	.sym	DIR,0,10,14,416,87
 12999                        	.sym	FIL,0,10,14,4400,86
 13000                        	.sym	FFOBJID,0,10,14,128,85
 13001                        	.sym	FATFS,0,10,14,4504,84
 13002                        	.sym	LBA_t,0,18,14,32
 13003                        	.sym	FSIZE_t,0,18,14,32
 13004                        	.sym	TCHAR,0,14,14,8
 13005                        	.sym	PCOMMANDARGS,0,138,14,32,83
 13006                        	.sym	COMMANDARGS,0,10,14,64,83
 13007                        	.sym	PTOKENIZESTATE,0,133,14,32
 13008                        	.sym	TOKENIZESTATE,0,5,14,16
 13009                        	.sym	PTOKEN,0,138,14,32,82
 13010                        	.sym	TOKEN,0,10,14,64,82
 13011                        	.sym	PTOKENTYPE,0,133,14,32
 13012                        	.sym	TOKENTYPE,0,5,14,16
 13013                        	.sym	FXCommandHandler,0,656,14,32
 13014                        	.sym	PCONSOLECTX,0,138,14,32,81
 13015                        	.sym	CONSOLECTX,0,10,14,1144,81
 13016                        	.sym	PSPINNERCTX,0,138,14,32,80
 13017                        	.sym	SPINNERCTX,0,10,14,48,80
 13018                        	.sym	HCLIP,0,138,14,32,79
 13019                        	.sym	PCLIPBOARD_DATA,0,138,14,32,79
 13020                        	.sym	CLIPBOARD_DATA,0,10,14,168,79
  Thu Jul 29 2021 22:56                                                Page 233


 13021                        	.sym	PEVENTMANAGER,0,138,14,32,78
 13022                        	.sym	EVENTMANAGER,0,10,14,192,78
 13023                        	.sym	EV_RUN,0,656,14,32
 13024                        	.sym	EV_QUERY_METRIC,0,656,14,32
 13025                        	.sym	EV_CONFIGURE,0,656,14,32
 13026                        	.sym	EV_UNINIT,0,641,14,32
 13027                        	.sym	EV_INIT,0,8833,14,32
 13028                        	.sym	PMOUSE_MSG_STATE,0,138,14,32,77
 13029                        	.sym	MOUSE_MSG_STATE,0,10,14,184,77
 13030                        	.sym	PFXEVENTPROCESS,0,138,14,32,76
 13031                        	.sym	FXEVENTPROCESS,0,10,14,64,76
 13032                        	.sym	PMARSHALDATA,0,139,14,32,75
 13033                        	.sym	MARSHALDATA,0,11,14,32,75
 13034                        	.sym	FXIDLEPROCESS,0,641,14,32
 13035                        	.sym	FXEventProc,0,641,14,32
 13036                        	.sym	PMOUSEMSGDATA,0,138,14,32,74
 13037                        	.sym	MOUSEMSGDATA,0,10,14,64,74
 13038                        	.sym	MSGIRQ,0,5,14,16
 13039                        	.sym	MAINLOOPARGS,0,10,14,16,73
 13040                        	.sym	PEACHCHILD_MSG,0,138,14,32,72
 13041                        	.sym	EACHCHILD_MSG,0,10,14,64,72
 13042                        	.sym	PMSGBOX_DATA,0,138,14,32,71
 13043                        	.sym	MSGBOX_DATA,0,10,14,96,71
 13044                        	.sym	PDESKTOP_DATA,0,138,14,32,70
 13045                        	.sym	DESKTOP_DATA,0,10,14,64,70
 13046                        	.sym	PWINDOWMANAGER,0,138,14,32,69
 13047                        	.sym	WINDOWMANAGER,0,10,14,160,69
 13048                        	.sym	WM_DOPROCS,0,641,14,32
 13049                        	.sym	WM_QUERY_METRIC,0,656,14,32
 13050                        	.sym	WM_CONFIGURE,0,656,14,32
 13051                        	.sym	WM_HANDLE_EVENT,0,8833,14,32
 13052                        	.sym	WM_EVENTS,0,641,14,32
 13053                        	.sym	PCUR_PALETTE_MAP,0,138,14,32,68
 13054                        	.sym	CUR_PALETTE_MAP,0,10,14,400,68
 13055                        	.sym	PCLICKDETECTED,0,138,14,32,67
 13056                        	.sym	CLICKDETECTED,0,10,14,64,67
 13057                        	.sym	OBJECTCLICKED,0,641,14,32
 13058                        	.sym	PALLOCATIONHEADER,0,138,14,32,66
 13059                        	.sym	ALLOCATIONHEADER,0,10,14,80,66
 13060                        	.sym	PIPCPORT,0,138,14,32,65
 13061                        	.sym	IPCPORT,0,10,14,144,65
 13062                        	.sym	MemoryCallback,0,641,14,32
 13063                        	.sym	PFXMEMORYMAP,0,138,14,32,64
 13064                        	.sym	FXMEMORYMAP,0,10,14,2072,64
 13065                        	.sym	UMM_HEAP_INFO,0,10,14,256,63
 13066                        	.sym	PEXECUTIVE,0,138,14,32,62
 13067                        	.sym	EXECUTIVE,0,10,14,128,62
 13068                        	.sym	EX_QUERY_METRIC,0,656,14,32
 13069                        	.sym	EX_CONFIGURE,0,656,14,32
 13070                        	.sym	EX_UNINIT,0,641,14,32
 13071                        	.sym	EX_INIT,0,8833,14,32
 13072                        	.sym	PFXSTRING,0,138,14,32,61
 13073                        	.sym	FXSTRING,0,10,14,64,61
 13074                        	.sym	PIRQCHAIN,0,138,14,32,60
 13075                        	.sym	IRQCHAIN,0,10,14,128,60
 13076                        	.sym	DEVICEDRIVER_COMMAND,0,656,14,32
 13077                        	.sym	DEVICEDRIVER_UNLOAD,0,654,14,32
 13078                        	.sym	DEVICEDRIVER_WRITE,0,656,14,32
  Thu Jul 29 2021 22:56                                                Page 234


 13079                        	.sym	DEVICEDRIVER_READ,0,656,14,32
 13080                        	.sym	DEVICEDRIVER_LOAD,0,654,14,32
 13081                        	.sym	DEVICEDRIVER_IRQ,0,641,14,32
 13082                        	.sym	PFX_BLOCK_DEVICE_DRIVER,0,138,14,32,59
 13083                        	.sym	FX_BLOCK_DEVICE_DRIVER,0,10,14,808,59
 13084                        	.sym	GETDRIVERDEF,0,8842,14,32,58
 13085                        	.sym	PFX_DEVICE_DRIVER,0,138,14,32,58
 13086                        	.sym	FX_DEVICE_DRIVER,0,10,14,776,58
 13087                        	.sym	PSEGMENTHEADER,0,138,14,32,57
 13088                        	.sym	SEGMENTHEADER,0,10,14,160,57
 13089                        	.sym	PDEBUGBYTEBITS,0,138,14,32,56
 13090                        	.sym	DEBUGBYTEBITS,0,10,14,8,56
 13091                        	.sym	PFXENVIRONMENT,0,138,14,32,55
 13092                        	.sym	FXENVIRONMENT,0,10,14,96,55
 13093                        	.sym	PFXZEROPAGE,0,138,14,32,54
 13094                        	.sym	FXZEROPAGE,0,10,14,720,54
 13095                        	.sym	IRQBUFFER,0,10,14,32,53
 13096                        	.sym	KERNELTRAPCALL,0,641,14,32
 13097                        	.sym	PFXKERNEL_API_CALLTABLE,0,138,14,32,52
 13098                        	.sym	FXKERNEL_API_CALLTABLE,0,10,14,8192,52
 13099                        	.sym	FOREACHNODEUNTIL,0,654,14,32
 13100                        	.sym	FOREACHNODE,0,641,14,32
 13101                        	.sym	PFXRFHEADER_STRING_ENTRY,0,138,14,32,51
 13102                        	.sym	FXRFHEADER_STRING_ENTRY,0,10,14,40,51
 13103                        	.sym	PFXRFHEADER_STRING,0,138,14,32,50
 13104                        	.sym	FXRFHEADER_STRING,0,10,14,32,50
 13105                        	.sym	PFXRFHEADER_FONT,0,138,14,32,49
 13106                        	.sym	FXRFHEADER_FONT,0,10,14,144,49
 13107                        	.sym	PFXRFHEADER,0,138,14,32,48
 13108                        	.sym	FXRFHEADER,0,10,14,72,48
 13109                        	.sym	PFXCOMBUFFER,0,138,14,32,47
 13110                        	.sym	FXCOMBUFFER,0,10,14,2080,47
 13111                        	.sym	PSUBMENULIST,0,138,14,32,46
 13112                        	.sym	SUBMENULIST,0,10,14,40,46
 13113                        	.sym	HSUBMENU,0,7,14,32
 13114                        	.sym	PSUBMENU,0,138,14,32,45
 13115                        	.sym	SUBMENU,0,10,14,64,45
 13116                        	.sym	MenuAction,0,641,14,32
 13117                        	.sym	PMENUANCHOR,0,138,14,32,44
 13118                        	.sym	MENUANCHOR,0,10,14,272,44
 13119                        	.sym	PMSGBOX,0,138,14,32,43
 13120                        	.sym	MSGBOX,0,10,14,144,43
 13121                        	.sym	PTEXTBOX,0,138,14,32,42
 13122                        	.sym	TEXTBOX,0,10,14,144,42
 13123                        	.sym	PLISTBOX,0,138,14,32,41
 13124                        	.sym	LISTBOX,0,10,14,240,41
 13125                        	.sym	PSCROLLBAR,0,138,14,32,40
 13126                        	.sym	SCROLLBAR,0,10,14,240,40
 13127                        	.sym	PBUTTON,0,138,14,32,39
 13128                        	.sym	BUTTON,0,10,14,96,39
 13129                        	.sym	PMENUDROPDOWNDATA,0,138,14,32,38
 13130                        	.sym	MENUDROPDOWNDATA,0,10,14,5152,38
 13131                        	.sym	PMENUTAG,0,138,14,32,37
 13132                        	.sym	MENUTAG,0,10,14,160,37
 13133                        	.sym	PMENU,0,138,14,32,36
 13134                        	.sym	MENU,0,10,14,280,36
 13135                        	.sym	HMENURESOURCE,0,129,14,32
 13136                        	.sym	FONTMETRIC,0,10,14,32,35
  Thu Jul 29 2021 22:56                                                Page 235


 13137                        	.sym	TITLE,0,142,14,32
 13138                        	.sym	PHANDLE,0,1153,14,32
 13139                        	.sym	HANDLE,0,129,14,32
 13140                        	.sym	PWINDOWEX,0,138,14,32,34
 13141                        	.sym	WINDOWEX,0,10,14,3880,34
 13142                        	.sym	PWINDOW,0,138,14,32,33
 13143                        	.sym	WINDOW,0,10,14,3904,33
 13144                        	.sym	PDRAGDATA,0,138,14,32,32
 13145                        	.sym	DRAGDATA,0,10,14,216,32
 13146                        	.sym	PNCCLICKABLE,0,138,14,32,31
 13147                        	.sym	NCCLICKABLE,0,10,14,136,31
 13148                        	.sym	HCLICKABLE,0,7,14,32
 13149                        	.sym	PCLICKABLE,0,138,14,32,30
 13150                        	.sym	CLICKABLE,0,10,14,152,30
 13151                        	.sym	PWNDCLASS,0,138,14,32,29
 13152                        	.sym	WNDCLASS,0,10,14,272,29
 13153                        	.sym	HBRUSH,0,129,14,32
 13154                        	.sym	HCURSOR,0,129,14,32
 13155                        	.sym	HICON,0,129,14,32
 13156                        	.sym	HINSTANCE,0,129,14,32
 13157                        	.sym	FXWndProc,0,654,14,32
 13158                        	.sym	PDRECT,0,138,14,32,28
 13159                        	.sym	DRECT,0,10,14,112,28
 13160                        	.sym	PRECTP,0,138,14,32,27
 13161                        	.sym	RECTP,0,10,14,96,27
 13162                        	.sym	PRECT,0,138,14,32,26
 13163                        	.sym	RECT,0,10,14,112,26
 13164                        	.sym	PPOINT,0,138,14,32,25
 13165                        	.sym	POINT,0,10,14,32,25
 13166                        	.sym	PFXPROPERTY,0,138,14,32,23
 13167                        	.sym	FXPROPERTY,0,10,14,384,23
 13168                        	.sym	PKEYSTATE,0,138,14,32,22
 13169                        	.sym	KEYSTATE,0,10,14,112,22
 13170                        	.sym	SCANCODE,0,14,14,8
 13171                        	.sym	KEYCODE,0,16,14,16
 13172                        	.sym	PFXPROCESSMESSAGE,0,138,14,32,21
 13173                        	.sym	FXPROCESSMESSAGE,0,10,14,112,21
 13174                        	.sym	PFXPROCESS,0,138,14,32,20
 13175                        	.sym	FXPROCESS,0,10,14,800,20
 13176                        	.sym	PDESKTOP_CONTROL,0,138,14,32,19
 13177                        	.sym	DESKTOP_CONTROL,0,10,14,392,19
 13178                        	.sym	PCONSOLE_CONTROL,0,138,14,32,18
 13179                        	.sym	CONSOLE_CONTROL,0,10,14,448,18
 13180                        	.sym	FXProcessProc,0,641,14,32
 13181                        	.sym	PFXCMDMESSAGE,0,138,14,32,17
 13182                        	.sym	FXCMDMESSAGE,0,10,14,312,17
 13183                        	.sym	PFXOSMESSAGE,0,138,14,32,16
 13184                        	.sym	FXOSMESSAGE,0,10,14,312,16
 13185                        	.sym	PINT_REGS,0,138,14,32,15
 13186                        	.sym	INT_REGS,0,10,14,104,15
 13187                        	.sym	TASK_STACK,0,10,14,32,14
 13188                        	.sym	TASK,0,10,14,48,13
 13189                        	.sym	PIRQDATA,0,138,14,32,12
 13190                        	.sym	IRQDATA,0,10,14,48,12
 13191                        	.sym	HMENU,0,129,14,32
 13192                        	.sym	HWND,0,129,14,32
 13193                        	.sym	MSGDATA,0,14,14,8
 13194                        	.sym	MSGDEST,0,18,14,32
  Thu Jul 29 2021 22:56                                                Page 236


 13195                        	.sym	MSGSRC,0,18,14,32
 13196                        	.sym	MSGTYPE,0,16,14,16
 13197                        	.sym	PROCESS_RESOURCE_LIST,0,138,14,32,6
 13198                        	.sym	PROCESS_TLS_LIST,0,138,14,32,6
 13199                        	.sym	SEMAPHORE_LIST,0,138,14,32,6
 13200                        	.sym	FILE_BLOCK_LIST,0,138,14,32,6
 13201                        	.sym	FILE_PATH_LIST,0,138,14,32,6
 13202                        	.sym	PROCEDURE_LIST,0,138,14,32,6
 13203                        	.sym	FILE_HANDLE,0,138,14,32,11
 13204                        	.sym	FILE_BLOCK,0,10,14,552,11
 13205                        	.sym	SEMAPHORE,0,10,14,16,10
 13206                        	.sym	PPROCESS_SIGNAL,0,138,14,32,9
 13207                        	.sym	PROCESS_SIGNAL,0,10,14,16,9
 13208                        	.sym	KRESULT,0,18,14,32
 13209                        	.sym	PKERNEL_ERROR,0,138,14,32,8
 13210                        	.sym	KERNEL_ERROR,0,10,14,32,8
 13211                        	.sym	PROCESS_STATUS,0,16,14,16
 13212                        	.sym	FILE_PATH_NAME,0,142,14,32
 13213                        	.sym	PROCESS_RESOURCE,0,129,14,32
 13214                        	.sym	PROCESS_TLS,0,129,14,32
 13215                        	.sym	PROCESS_CTX,0,129,14,32
 13216                        	.sym	USERID,0,16,14,16
 13217                        	.sym	PROCESS_ID,0,18,14,32
 13218                        	.sym	PROCESS_BANK,0,14,14,8
 13219                        	.sym	PFXQUEUE,0,138,14,32,7
 13220                        	.sym	FXQUEUE,0,10,14,80,7
 13221                        	.sym	PFXNODELIST,0,138,14,32,6
 13222                        	.sym	FXNODELIST,0,10,14,96,6
 13223                        	.sym	NodeListDeallocator,0,641,14,32
 13224                        	.sym	PFXNODE,0,138,14,32,5
 13225                        	.sym	FXNODE,0,10,14,384,5
 13226                        	.sym	PBYTEBITS,0,138,14,32,4
 13227                        	.sym	BYTEBITS,0,10,14,8,4
 13228                        	.sym	HRESULT,0,18,14,32
 13229                        	.sym	LPWCHAR,0,144,14,32
 13230                        	.sym	WCHAR,0,16,14,16
 13231                        	.sym	HSTRINGTABLE,0,129,14,32
 13232                        	.sym	HCOLOR,0,129,14,32
 13233                        	.sym	HFONT,0,129,14,32
 13234                        	.sym	HDC,0,129,14,32
 13235                        	.sym	HPOINTER,0,129,14,32
 13236                        	.sym	uint32_t,0,18,14,32
 13237                        	.sym	uint8_t,0,14,14,8
 13238                        	.sym	LPBOOL,0,142,14,32
 13239                        	.sym	BOOL,0,14,14,8
 13240                        	.sym	DWORD,0,18,14,32
 13241                        	.sym	ULONG,0,18,14,32
 13242                        	.sym	LPLONG,0,135,14,32
 13243                        	.sym	LONG,0,7,14,32
 13244                        	.sym	PUINT,0,144,14,32
 13245                        	.sym	USHORT,0,16,14,16
 13246                        	.sym	UINT,0,16,14,16
 13247                        	.sym	INT,0,5,14,16
 13248                        	.sym	WORD,0,5,14,16
 13249                        	.sym	PBYTE,0,142,14,32
 13250                        	.sym	BYTE,0,14,14,8
 13251                        	.sym	IOPORT,0,142,14,32
 13252                        	.sym	PUCHAR,0,142,14,32
  Thu Jul 29 2021 22:56                                                Page 237


 13253                        	.sym	UCHAR,0,14,14,8
 13254                        	.sym	LPWCSTR,0,142,14,32
 13255                        	.sym	LPCSTR,0,142,14,32
 13256                        	.sym	LPSTR,0,142,14,32
 13257                        	.sym	LPCHAR,0,142,14,32
 13258                        	.sym	CHAR,0,14,14,8
 13259                        	.sym	PUINT_32,0,146,14,32
 13260                        	.sym	UINT_32,0,18,14,32
 13261                        	.sym	PUINT_16,0,144,14,32
 13262                        	.sym	UINT_16,0,16,14,16
 13263                        	.sym	PUINT_8,0,142,14,32
 13264                        	.sym	UINT_8,0,14,14,8
 13265                        	.sym	LPVOID,0,129,14,32
 13266                        	.sym	VOID,0,1,14,32
 13267                        	.sym	Boolean_T,0,5,14,16
 13268                        	.sym	ldiv_t,0,10,14,64,2
 13269                        	.sym	div_t,0,10,14,32,1
 13270                        	.sym	wctype_t,0,16,14,16
 13271                        	.sym	wint_t,0,16,14,16
 13272                        	.sym	wchar_t,0,14,14,8
 13273                        	.sym	ptrdiff_t,0,7,14,32
 13274                        	.sym	size_t,0,16,14,16
 13275                        	end


      Lines assembled: 13275
      Errors: 0
